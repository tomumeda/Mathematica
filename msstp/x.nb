(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    286011,       7700]
NotebookOptionsPosition[    250170,       6599]
NotebookOutlinePosition[    259023,       6811]
CellTagsIndexPosition[    258728,       6801]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[TextData[{
 "A fast Introduction to ",
 StyleBox["Mathematica",
  FontSlant->"Italic"]
}], "Title",
 CellMargins->0,
 CellFrameMargins->{{60, 9}, {9, 12}},
 FontColor->GrayLevel[1],
 Background->GrayLevel[0]],

Cell["\<\
  Jason Harris
Wolfram Research\
\>", "Text",
 FontSize->36,
 FontSlant->"Italic"],

Cell[CellGroupData[{

Cell["Introduction", "Section",
 CellMargins->{{Inherited, Inherited}, {Inherited, 10}}],

Cell[TextData[{
 "This talk gives a fast introduction to ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 ". It is not so much intended to educate you about the use of ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " in Physics, rather its aim is to establish a minimum base level of ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " necessary for the succeeding days of the summer school. It will also focus \
on some points that are likely outside the scope of the other talks in the \
summer school.  A range of topics will be covered including the graphics \
system, visualization, symbolic computation, and numeric computation. However \
the main focus will be the core language, and demonstrating how to drive the \
front end and how to interact with ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 ". Since ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " is such a vast system, this talk will of course be only an introduction to \
the core of ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 "."
}], "Text"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Mathematica",
 FontSlant->"Italic"]], "Section"],

Cell[TextData[{
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " is a system for doing symbolic and numeric computations and \
visualization."
}], "Text"],

Cell[TextData[{
 StyleBox["Mathematica ",
  FontSlant->"Italic"],
 "is a functional language, based on rewrite rules and an infinite evaluation \
model. However one can also program ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " in a imperative fashion."
}], "Text"],

Cell[TextData[{
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " is comprised of several million lines of code in C, C++, and ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 "."
}], "Text"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell["History", "Section"],

Cell[TextData[{
 "A brief history of symbolic computation and ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 ":"
}], "Text"],

Cell["1960 - LISP (MIT, John McCarthy, etc...)", "Text"],

Cell["1980 - SMP (Wolfram, et al.)", "Text"],

Cell[TextData[{
 "1988 -",
 StyleBox[" Mathematica",
  FontSlant->"Italic"],
 " 1"
}], "Text"],

Cell[TextData[{
 "1996 -",
 StyleBox[" Mathematica",
  FontSlant->"Italic"],
 " 3"
}], "Text"],

Cell[TextData[{
 "2007 - ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " 6"
}], "Text"],

Cell[TextData[{
 "2008 - ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " 7"
}], "Text"],

Cell[TextData[{
 "2010 - ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " 8"
}], "Text"],

Cell[TextData[{
 "2012 - ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " 9"
}], "Text"],

Cell[TextData[{
 "2014 - ",
 StyleBox["Mathematica",
  FontWeight->"Bold",
  FontSlant->"Italic"],
 StyleBox[" 10",
  FontWeight->"Bold"]
}], "Text"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell["Notebook Interface", "Section"],

Cell["\<\
  The front end uses a notebook, interface with cells, graphics, input output \
all mixed together.\
\>", "Text"],

Cell["Palettes, Preferences, etc are all notebooks", "Text"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Cells", "Section"],

Cell["Cell Brackets", "Text"],

Cell["Title cells", "Text"],

Cell["Input cells", "Text"],

Cell[BoxData[{
 RowBox[{"a", "=", "1"}], "\n", 
 RowBox[{"b", "=", "2"}]}], "Input"],

Cell["Divide cells, Merge cells", "Text"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell["StandardForm vs TraditionalForm", "Section"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"1", "+", "2"}]], "Input"],

Cell[BoxData["3"], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RandomReal", "[", "]"}]], "Input"],

Cell[BoxData["0.6999853463261008`"], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Factorial", "[", "5", "]"}]], "Input"],

Cell[BoxData["120"], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"c", "*", 
  RowBox[{"(", 
   RowBox[{"a", "+", "b"}], ")"}]}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{"a", "+", "b"}], ")"}], " ", "f"}]], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[ButtonBox["SquareBrackets vs Multiplication",
 BaseStyle->"Link",
 ButtonData->"paclet:tutorial/GettingUsedToMathematica"]], "Subsection"],

Cell["\<\
  Enter Random[], Factorial[5], etc. Talk about  f (b+c) vs f[b+c]\
\>", "SmallText"]
}, Open  ]],

Cell[CellGroupData[{

Cell["TraditionalForm", "Subsection"],

Cell[TextData[{
 "You can convert any syntactically valid expression from ",
 StyleBox["StandardForm", "Input"],
 " to ",
 StyleBox["TraditionalForm", "Input"],
 " or back again using the menus."
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  SubsuperscriptBox["\[Integral]", "a", "b"], 
  RowBox[{
   RowBox[{"Sin", "[", "x", "]"}], 
   RowBox[{"\[DifferentialD]", "x"}]}]}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Cos", "[", "a", "]"}], "-", 
  RowBox[{"Cos", "[", "b", "]"}]}]], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 FormBox[
  TemplateBox[{"a"},
   "Gamma"], TraditionalForm]], "Input"],

Cell[BoxData[
 RowBox[{"Gamma", "[", "a", "]"}]], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"BellB", "[", "n", "]"}], "//", "TraditionalForm"}]], "Input"],

Cell[BoxData[
 FormBox[
  TemplateBox[{"n"},
   "BellB"], TraditionalForm]], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"BernoulliB", "[", "n", "]"}], "//", "TraditionalForm"}]], "Input"],

Cell[BoxData[
 FormBox[
  TemplateBox[{"n"},
   "BernoulliB"], TraditionalForm]], "Output"]
}, Open  ]],

Cell[TextData[{
 "In ",
 StyleBox["TraditionalForm", "Input"],
 " some traditional notations are recognized."
}], "Text"],

Cell["Do \[CapitalGamma](z)", "SmallText"],

Cell[CellGroupData[{

Cell[BoxData[
 FormBox[
  RowBox[{"\[CapitalGamma]", "(", "z", ")"}], TraditionalForm]], "Input"],

Cell[BoxData[
 RowBox[{"Gamma", "[", "z", "]"}]], "Output"]
}, Open  ]],

Cell[TextData[{
 "But some ",
 StyleBox["TraditionalForm", "Input"],
 " input is ambiguous."
}], "Text"],

Cell[TextData[{
 "You can switch to using ",
 StyleBox["TraditionalForm", "Input"],
 " by default in the Preferences."
}], "Text"],

Cell["\<\
  Switch to TraditionalForm input and output and compare f (b+c) and f(b+c)\
\>", "SmallText"],

Cell[CellGroupData[{

Cell[BoxData[
 FormBox[
  RowBox[{"f", " ", 
   RowBox[{"(", 
    RowBox[{"a", "+", "b"}], ")"}]}], TraditionalForm]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{"a", "+", "b"}], ")"}], " ", "f"}]], "Output"]
}, Open  ]],

Cell[TextData[{
 "Is ",
 Cell[BoxData[
  FormBox[
   RowBox[{"f", 
    RowBox[{"(", 
     RowBox[{"a", "+", "b"}], ")"}]}], TraditionalForm]]],
 " function application or multiplication?"
}], "Text"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell["Palettes and 2D Input", "Section"],

Cell["Open the classroom assistant, do integral", "SmallText"],

Cell["\<\
  How does one enter some 2D typeset expression like the following?\
\>", "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  SubsuperscriptBox["\[Integral]", "a", "b"], 
  RowBox[{
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"-", 
     SuperscriptBox["x", "2"]}]], 
   RowBox[{"\[DifferentialD]", "x"}]}]}]], "Input"],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "2"], " ", 
  SqrtBox["\[Pi]"], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"-", 
     RowBox[{"Erf", "[", "a", "]"}]}], "+", 
    RowBox[{"Erf", "[", "b", "]"}]}], ")"}]}]], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  SubsuperscriptBox["\[Integral]", "a", "b"], 
  RowBox[{
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"-", 
     SuperscriptBox["x", "2"]}]], 
   RowBox[{"\[DifferentialD]", "x"}]}]}]], "Input"],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "2"], " ", 
  SqrtBox["\[Pi]"], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"-", 
     RowBox[{"Erf", "[", "a", "]"}]}], "+", 
    RowBox[{"Erf", "[", "b", "]"}]}], ")"}]}]], "Output"]
}, Open  ]],

Cell[BoxData[
 SuperscriptBox["\[ExponentialE]", 
  RowBox[{"-", 
   SuperscriptBox["x", "2"]}]]], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  SubsuperscriptBox["\[Integral]", "a", "b"], 
  RowBox[{
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"-", 
     SuperscriptBox["x", "2"]}]], 
   RowBox[{"\[DifferentialD]", "x"}]}]}]], "Input"],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "2"], " ", 
  SqrtBox["\[Pi]"], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"-", 
     RowBox[{"Erf", "[", "a", "]"}]}], "+", 
    RowBox[{"Erf", "[", "b", "]"}]}], ")"}]}]], "Output"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  SubscriptBox["\[PartialD]", "x"], 
  RowBox[{"Sin", "[", "x", "]"}]}]], "Input"],

Cell["Tab moves between placeholders.", "Text"],

Cell[TextData[{
 StyleBox["Note",
  FontWeight->"Bold"],
 ": \[ExponentialE] and e are different, as are \[DifferentialD] and d, and \
\[ImaginaryI] and i"
}], "Text"],

Cell[BoxData[
 RowBox[{"\[ExponentialE]", " ", 
  RowBox[{"\[DifferentialD]", " ", "\[ImaginaryI]"}]}]], "Input"],

Cell[TextData[{
 "Entry of ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubsuperscriptBox["\[Integral]", "a", "b"], 
    RowBox[{
     SuperscriptBox["x", "2"], 
     RowBox[{"\[DifferentialD]", "x"}]}]}], TraditionalForm]]],
 " by Palette then by Keyboard"
}], "SmallText"],

Cell["Subexpression selection through cntrl-.", "Text"],

Cell["Enter a+\[Alpha], control-. ^10 and Expand", "SmallText"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Named Characters", "Section"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[Pi]d4", "=", "7"}]], "Input"],

Cell[BoxData["7"], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[Alpha]speed", "=", "3"}]], "Input"],

Cell[BoxData["3"], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "\[Alpha]speed"}]], "Input"],

Cell[CellGroupData[{

Cell["Global`\[Alpha]speed", "Print", "PrintUsage",
 CellTags->"Info3614924095-5275674"],

Cell[BoxData[
 InterpretationBox[GridBox[{
    {GridBox[{
       {
        RowBox[{"\[Alpha]speed", "=", "3"}]}
      },
      BaselinePosition->{Baseline, {1, 1}},
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxItemSize->{"Columns" -> {{
           Scaled[0.999]}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
        "RowsIndexed" -> {}}]}
   },
   BaselinePosition->{Baseline, {1, 1}},
   GridBoxAlignment->{
    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
     "RowsIndexed" -> {}}],
  Definition[$CellContext`\[Alpha]speed],
  Editable->False]], "Print",
 CellTags->"Info3614924095-5275674"]
}, Open  ]]
}, Open  ]],

Cell["Enter Pi, alpha, gamma, \[Pi]d4", "SmallText"],

Cell["\[Pi]d4, Mention syntax coloring", "SmallText"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell["Helpers", "Section"],

Cell["\<\
  Command completion is your friend! \[CommandKey]-K to complete the command, \
and \[CommandKey]-\[ShiftKey]-K to template-ize the command. In v10 \
completion is automatic! (preferences control this)\
\>", "Text"],

Cell["\<\
  Complete WeierstrassZeta, TraditionalForm, relation to WeierstrassP...\
\>", "SmallText"],

Cell["Insert from above! \[CommandKey]-L", "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 FormBox[
  TemplateBox[{"u","k","t"},
   "WeierstrassZeta"], TraditionalForm]], "Input"],

Cell[BoxData[
 RowBox[{"WeierstrassZeta", "[", 
  RowBox[{"u", ",", 
   RowBox[{"{", 
    RowBox[{"k", ",", "t"}], "}"}]}], "]"}]], "Output"]
}, Open  ]],

Cell["Hello", "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 FormBox[
  TemplateBox[{"w","k","t"},
   "WeierstrassZeta"], TraditionalForm]], "Input"],

Cell[BoxData[
 RowBox[{"WeierstrassZeta", "[", 
  RowBox[{"w", ",", 
   RowBox[{"{", 
    RowBox[{"k", ",", "t"}], "}"}]}], "]"}]], "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell["Navigating Help", "Section"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   SuperscriptBox["x", "2"], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "2"}], "}"}]}], "]"}]], "Input"],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1:eJwVlGk4lAsDhhlZ04wSRUqEpCzHVsQ8rxZbqGyRiCwpSoszRYsUbWpCUhjh
aMhSlijZRihUki2OZWQtcpA94v36fjzX/e++7l+P3BE/a08KDw9P/J/9n+ae
3+vLBj3pk9Yz6j8pXINvz+2PdEntQs4HaYtWIoYuubSZ+ULKFrYCK9SOE6/p
r0sv+55TcsEipVbZyvsjXU1vJTteygOBmUdltYh/6Tzig/dJ2WPYybvLXraw
l14/XHLVTekkPr/p7VTwHqbvd68pcIs+jfEwM3EJuwm6/met7Egpf5Tzbnq0
ivhF32D4OLWCxYDdjvAFqSmSLpoulDApG4CWFI4ctZAPk5JnoxWTL6B3+bz2
Pa4gOq913rVXugybI4HbxLxF4T6bXF5hewXiH9dFm2aIoUXNkX4oOhiZjvJC
wnbiKIur0LkrFYIJi3tNwoQUtBvO5yg6hSIhd1bNPFgGaUJqqqWs6yBFQoJF
pmQR+fcjhVHZW/hmduUGf+EGCGRaJt5wuw3ZntknbI4iAnsoMuuTw5B19mpp
KHcj3PeeEN+vxET71ep+fu8taA2Vvzd49B7O8YROsBvUoMT14X9jG4787WmL
OzI0ELtSLtgxOgKZyuEUPjstXAsOO39bKgpZbRXjFEIPpTJeL+0Lo/B1sX/Q
uk0fs6+ISXmnByhKEOvaEWwA35EpvyJWNBgHgiooU4Ctk+vRYdkYBO110+ct
3AnmtD67oCwGprYr1dJe70J1hERviFssvB5+WJ/E2Q3D6vcua5PjkNpqzBfM
NYGSjo69ldJj/GVyqpjH2wKun2lR0lWPkU7f/VQ51hJxPkP1A0cTcNF/3f3E
BisI1delcGwTEV47oklk7MNFwVB5h+gk6B6vIklbG3j4j0rdknqCqAvcYBKO
0OKLDMw99QRCo99+t8gcBCVSu7296gnUdUpkvBYOIiErgKXGYCNa74N5cs0h
tA3xyTY1pMA7Qj97n4kr9rqtVpC9k4Zz23n07D09sG6sMMS0Nw21t3tZfj89
MHzZuf+0fjouVmxpdA/yxG3WPymV39MxNDb2siPRC5UtWzYd352J2e2Ek9ic
N/StjNTyF59jOHJOMoj/JIQ6e5lcuyx0njNI2p11Ei0+10cFn2VBxbhvYeCg
HworPR2eqWbDu05zVafTKTj0pEvxdGRDJXGVbn3FaUSu1WGxt+VipbyfqmGZ
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
El/E2uNd52jEQ9mlUyT5px+SQyRJI/4Hv5yssA==
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
  PlotRange->{{0, 2}, {0., 3.9999998367346956`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output"]
}, Open  ]],

Cell["Find Selected Function", "Subsection"],

Cell["Documentation Center", "Subsection"],

Cell["Context Sensitive Help", "Subsection"],

Cell["Perdective Interface", "Subsection"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],

Cell["Calculator like Usage", "Title"],

Cell[CellGroupData[{

Cell["Integrate", "Section"],

Cell[CellGroupData[{

Cell[BoxData[
 FormBox[
  RowBox[{"Assuming", "[", 
   RowBox[{
    RowBox[{
     FractionBox["h", 
      RowBox[{"k", " ", "T"}]], ">", "0"}], ",", 
    RowBox[{
     SubsuperscriptBox["\[Integral]", "0", "\[Infinity]"], 
     RowBox[{
      FractionBox[
       RowBox[{
        RowBox[{"(", 
         RowBox[{"2", "\[Pi]", " ", 
          SuperscriptBox["\[Nu]", "2"]}], ")"}], " ", 
        RowBox[{
         StyleBox[
          UnderoverscriptBox["\[Sum]", 
           RowBox[{"n", "=", "0"}], "\[Infinity]"],
          ScriptLevel->0], 
         RowBox[{"h", " ", "n", " ", "\[Nu]", " ", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{"-", 
            FractionBox[
             RowBox[{"h", " ", "n", " ", "\[Nu]"}], 
             RowBox[{"k", " ", "T"}]]}]]}]}]}], 
       RowBox[{
        SuperscriptBox["c", "3"], " ", 
        RowBox[{
         StyleBox[
          UnderoverscriptBox["\[Sum]", 
           RowBox[{"n", "=", "0"}], "\[Infinity]"],
          ScriptLevel->0], 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"-", 
           FractionBox[
            RowBox[{"h", " ", "n", " ", "\[Nu]"}], 
            RowBox[{"k", " ", "T"}]]}]]}]}]], 
      RowBox[{"\[DifferentialD]", "\[Nu]"}]}]}]}], "]"}], 
  TraditionalForm]], "Input"],

Cell[BoxData[
 FractionBox[
  RowBox[{"2", " ", 
   SuperscriptBox["k", "4"], " ", 
   SuperscriptBox["\[Pi]", "5"], " ", 
   SuperscriptBox["T", "4"]}], 
  RowBox[{"15", " ", 
   SuperscriptBox["c", "3"], " ", 
   SuperscriptBox["h", "3"]}]]], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 FormBox[
  RowBox[{
   StyleBox[
    UnderoverscriptBox["\[Sum]", 
     RowBox[{"n", "=", "0"}], "\[Infinity]"],
    ScriptLevel->0], 
   RowBox[{"h", " ", "n", " ", "\[Nu]", " ", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{"-", 
      FractionBox[
       RowBox[{"h", " ", "n", " ", "\[Nu]"}], 
       RowBox[{"k", " ", "T"}]]}]]}]}], TraditionalForm]], "Input"],

Cell[BoxData[
 FractionBox[
  RowBox[{
   SuperscriptBox["\[ExponentialE]", 
    FractionBox[
     RowBox[{"h", " ", "\[Nu]"}], 
     RowBox[{"k", " ", "T"}]]], " ", "h", " ", "\[Nu]"}], 
  SuperscriptBox[
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "1"}], "+", 
     SuperscriptBox["\[ExponentialE]", 
      FractionBox[
       RowBox[{"h", " ", "\[Nu]"}], 
       RowBox[{"k", " ", "T"}]]]}], ")"}], "2"]]], "Output"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Solve", "Section"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"a", " ", 
      SuperscriptBox["x", "5"]}], "+", 
     RowBox[{"b", " ", "x"}], " ", "+", "c"}], " ", "\[Equal]", "0"}], ",", 
   "x"}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     RowBox[{"Root", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"c", "+", 
         RowBox[{"b", " ", "#1"}], "+", 
         RowBox[{"a", " ", 
          SuperscriptBox["#1", "5"]}]}], "&"}], ",", "1"}], "]"}]}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     RowBox[{"Root", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"c", "+", 
         RowBox[{"b", " ", "#1"}], "+", 
         RowBox[{"a", " ", 
          SuperscriptBox["#1", "5"]}]}], "&"}], ",", "2"}], "]"}]}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     RowBox[{"Root", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"c", "+", 
         RowBox[{"b", " ", "#1"}], "+", 
         RowBox[{"a", " ", 
          SuperscriptBox["#1", "5"]}]}], "&"}], ",", "3"}], "]"}]}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     RowBox[{"Root", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"c", "+", 
         RowBox[{"b", " ", "#1"}], "+", 
         RowBox[{"a", " ", 
          SuperscriptBox["#1", "5"]}]}], "&"}], ",", "4"}], "]"}]}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     RowBox[{"Root", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"c", "+", 
         RowBox[{"b", " ", "#1"}], "+", 
         RowBox[{"a", " ", 
          SuperscriptBox["#1", "5"]}]}], "&"}], ",", "5"}], "]"}]}], "}"}]}], 
  "}"}]], "Output"]
}, Open  ]],

Cell["Solve quadratic", "SmallText"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Reduce", "Section"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Reduce", "[", " ", 
  RowBox[{
   RowBox[{
    RowBox[{
     SuperscriptBox["x", "2"], " ", "+", "c"}], " ", ">", "0"}], ",", "x"}], 
  "]"}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"x", "\[Element]", "Reals"}], "&&", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"c", "\[LessEqual]", "0"}], "&&", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"x", "<", 
         RowBox[{"-", 
          SqrtBox[
           RowBox[{"-", "c"}]]}]}], "||", 
        RowBox[{"x", ">", 
         SqrtBox[
          RowBox[{"-", "c"}]]}]}], ")"}]}], ")"}], "||", 
    RowBox[{"c", ">", "0"}]}], ")"}]}]], "Output"]
}, Open  ]],

Cell["Reduce quadratic > 0", "SmallText"]
}, Open  ]],

Cell[CellGroupData[{

Cell["DSolve", "Section"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DSolve", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"A", "''"}], "[", "x", "]"}], "+", 
       RowBox[{"A", "[", "x", "]"}]}], "\[Equal]", "0"}], ",", 
     RowBox[{
      RowBox[{"A", "[", "0", "]"}], "\[Equal]", "1"}]}], "}"}], ",", 
   RowBox[{"A", "[", "x", "]"}], ",", "x"}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"A", "[", "x", "]"}], "\[Rule]", 
    RowBox[{
     RowBox[{"Cos", "[", "x", "]"}], "+", 
     RowBox[{
      RowBox[{"C", "[", "2", "]"}], " ", 
      RowBox[{"Sin", "[", "x", "]"}]}]}]}], "}"}], "}"}]], "Output"]
}, Open  ]],

Cell["Reduce simple harmonic motion", "SmallText"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Expand", "Section"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Expand", "[", 
  SuperscriptBox[
   RowBox[{"(", 
    RowBox[{"x", "+", "y"}], ")"}], "10"], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{
  SuperscriptBox["x", "10"], "+", 
  RowBox[{"10", " ", 
   SuperscriptBox["x", "9"], " ", "y"}], "+", 
  RowBox[{"45", " ", 
   SuperscriptBox["x", "8"], " ", 
   SuperscriptBox["y", "2"]}], "+", 
  RowBox[{"120", " ", 
   SuperscriptBox["x", "7"], " ", 
   SuperscriptBox["y", "3"]}], "+", 
  RowBox[{"210", " ", 
   SuperscriptBox["x", "6"], " ", 
   SuperscriptBox["y", "4"]}], "+", 
  RowBox[{"252", " ", 
   SuperscriptBox["x", "5"], " ", 
   SuperscriptBox["y", "5"]}], "+", 
  RowBox[{"210", " ", 
   SuperscriptBox["x", "4"], " ", 
   SuperscriptBox["y", "6"]}], "+", 
  RowBox[{"120", " ", 
   SuperscriptBox["x", "3"], " ", 
   SuperscriptBox["y", "7"]}], "+", 
  RowBox[{"45", " ", 
   SuperscriptBox["x", "2"], " ", 
   SuperscriptBox["y", "8"]}], "+", 
  RowBox[{"10", " ", "x", " ", 
   SuperscriptBox["y", "9"]}], "+", 
  SuperscriptBox["y", "10"]}]], "Output"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Simplify", "Section"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", "%", "]"}]], "Input"],

Cell[BoxData[
 SuperscriptBox[
  RowBox[{"(", 
   RowBox[{"x", "+", "y"}], ")"}], "10"]], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"%28", "/.", 
  RowBox[{"k", "\[Rule]", "\[Alpha]"}]}]], "Input"],

Cell[BoxData[
 FractionBox[
  RowBox[{"2", " ", 
   SuperscriptBox["\[Pi]", "5"], " ", 
   SuperscriptBox["T", "4"], " ", 
   SuperscriptBox["\[Alpha]", "4"]}], 
  RowBox[{"15", " ", 
   SuperscriptBox["c", "3"], " ", 
   SuperscriptBox["h", "3"]}]]], "Output"]
}, Open  ]],

Cell["Simplify %", "SmallText"],

Cell[TextData[{
 "% is the previous result. %n is the ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["n", "th"], TraditionalForm]]],
 " result."
}], "Text"],

Cell[BoxData[
 RowBox[{"%11", "/.", 
  RowBox[{"k", "\[Rule]", "\[Alpha]"}]}]], "Input"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Output as Input", "Section"],

Cell[BoxData[
 RowBox[{"Expand", "[", 
  SuperscriptBox[
   RowBox[{"(", 
    RowBox[{"x", "+", "y"}], ")"}], "10"], "]"}]], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  SuperscriptBox["x", "10"], "+", 
  RowBox[{"10", " ", 
   SuperscriptBox["x", "9"], " ", "y"}], "+", 
  RowBox[{"45", " ", 
   SuperscriptBox["x", "8"], " ", 
   SuperscriptBox["y", "2"]}], "+", 
  RowBox[{"120", " ", 
   SuperscriptBox["x", "7"], " ", 
   SuperscriptBox["y", "3"]}], "+", 
  RowBox[{"210", " ", 
   SuperscriptBox["x", "6"], " ", 
   SuperscriptBox["y", "4"]}], "+", 
  RowBox[{"252", " ", 
   SuperscriptBox["x", "5"], " ", 
   SuperscriptBox["y", "5"]}], "+", 
  RowBox[{"210", " ", 
   SuperscriptBox["x", "4"], " ", 
   SuperscriptBox["y", "6"]}], "+", 
  RowBox[{"120", " ", 
   SuperscriptBox["x", "3"], " ", 
   SuperscriptBox["y", "7"]}], "+", 
  RowBox[{"45", " ", 
   SuperscriptBox["x", "2"], " ", 
   SuperscriptBox["y", "8"]}], "+", 
  RowBox[{"10", " ", "x", " ", 
   SuperscriptBox["y", "9"]}], "+", 
  SuperscriptBox["y", "10"]}]], "Input",
 CellChangeTimes->{3.614921032962143*^9}],

Cell[BoxData[
 RowBox[{
  SuperscriptBox["x", "10"], "+", 
  RowBox[{"10", " ", 
   SuperscriptBox["x", "9"], " ", "y"}], "+", 
  RowBox[{"45", " ", 
   SuperscriptBox["x", "8"], " ", 
   SuperscriptBox["y", "2"]}], "+", 
  RowBox[{"120", " ", 
   SuperscriptBox["x", "7"], " ", 
   SuperscriptBox["y", "3"]}], "+", 
  RowBox[{"210", " ", 
   SuperscriptBox["x", "6"], " ", 
   SuperscriptBox["y", "4"]}], "+", 
  RowBox[{"252", " ", 
   SuperscriptBox["x", "5"], " ", 
   SuperscriptBox["y", "5"]}], "+", 
  RowBox[{"210", " ", 
   SuperscriptBox["x", "4"], " ", 
   SuperscriptBox["y", "6"]}], "+", 
  RowBox[{"120", " ", 
   SuperscriptBox["x", "3"], " ", 
   SuperscriptBox["y", "7"]}], "+", 
  RowBox[{"45", " ", 
   SuperscriptBox["x", "2"], " ", 
   SuperscriptBox["y", "8"]}], "+", 
  RowBox[{"10", " ", "x", " ", 
   SuperscriptBox["y", "9"]}], "+", 
  SuperscriptBox["y", "10"]}]], "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],

Cell["Core Language", "Title"],

Cell[CellGroupData[{

Cell["Assignment", "Section"],

Cell["Do basic assignment of x= 5 and then the usage of this.", "SmallText"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"x", "=", 
  RowBox[{"RandomReal", "[", "]"}]}]], "Input"],

Cell[BoxData["0.2548500626578931`"], "Output"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"y", ":=", 
  RowBox[{"RandomReal", "[", "]"}]}]], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "y"}]], "Input"],

Cell[CellGroupData[{

Cell["Global`y", "Print", "PrintUsage",
 CellTags->"Info3614924699-8288244"],

Cell[BoxData[
 InterpretationBox[GridBox[{
    {GridBox[{
       {
        RowBox[{"y", ":=", 
         RowBox[{"RandomReal", "[", "]"}]}]}
      },
      BaselinePosition->{Baseline, {1, 1}},
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxItemSize->{"Columns" -> {{
           Scaled[0.999]}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
        "RowsIndexed" -> {}}]}
   },
   BaselinePosition->{Baseline, {1, 1}},
   GridBoxAlignment->{
    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
     "RowsIndexed" -> {}}],
  Definition[$CellContext`y],
  Editable->False]], "Print",
 CellTags->"Info3614924699-8288244"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["y"], "Input"],

Cell[BoxData["0.4535653175758756`"], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "x"}]], "Input"],

Cell[CellGroupData[{

Cell["Global`x", "Print", "PrintUsage",
 CellTags->"Info3614924674-8288244"],

Cell[BoxData[
 InterpretationBox[GridBox[{
    {GridBox[{
       {
        RowBox[{"x", "=", "0.2548500626578931`"}]}
      },
      BaselinePosition->{Baseline, {1, 1}},
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxItemSize->{"Columns" -> {{
           Scaled[0.999]}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
        "RowsIndexed" -> {}}]}
   },
   BaselinePosition->{Baseline, {1, 1}},
   GridBoxAlignment->{
    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
     "RowsIndexed" -> {}}],
  Definition[$CellContext`x],
  Editable->False]], "Print",
 CellTags->"Info3614924674-8288244"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["x"], "Input"],

Cell[BoxData["0.2548500626578931`"], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{"x", ",", 
   RowBox[{"{", "10", "}"}]}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.2548500626578931`", ",", "0.2548500626578931`", ",", 
   "0.2548500626578931`", ",", "0.2548500626578931`", ",", 
   "0.2548500626578931`", ",", "0.2548500626578931`", ",", 
   "0.2548500626578931`", ",", "0.2548500626578931`", ",", 
   "0.2548500626578931`", ",", "0.2548500626578931`"}], "}"}]], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{"y", ",", 
   RowBox[{"{", "10", "}"}]}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.38961566024711103`", ",", "0.8288769872470543`", ",", 
   "0.5280262254386927`", ",", "0.14678403488690206`", ",", 
   "0.5245110525589434`", ",", "0.6767083024553582`", ",", 
   "0.18302713826580463`", ",", "0.42236812555672576`", ",", 
   "0.3097107989449721`", ",", "0.2131237215276478`"}], "}"}]], "Output"]
}, Open  ]],

Cell[TextData[{
 ButtonBox["Set",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Set"],
 " (=)"
}], "Subsection"],

Cell[CellGroupData[{

Cell[TextData[{
 ButtonBox["SetDelayed",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/SetDelayed"],
 " (:=)"
}], "Subsection"],

Cell["\<\
  Use Random illustrate the difference. y :=Random[],  Table[y,{10}]\
\>", "SmallText"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell["Function Application", "Section"],

Cell["Using f@ ... is equivalent to f[ ...]", "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"f", "[", 
  RowBox[{"g", "[", 
   RowBox[{"h", "[", "blah", "]"}], "]"}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"f", "[", 
  RowBox[{"g", "[", 
   RowBox[{"h", "[", "blah", "]"}], "]"}], "]"}]], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"f", "@", 
  RowBox[{"g", "@", 
   RowBox[{"h", "@", "blah"}]}]}]], "Input"],

Cell[BoxData[
 RowBox[{"f", "[", 
  RowBox[{"g", "[", 
   RowBox[{"h", "[", "blah", "]"}], "]"}], "]"}]], "Output"]
}, Open  ]],

Cell[TextData[{
 "(Note in some other functional languages one can just use ",
 StyleBox["f g h arg", "Input"],
 ".)"
}], "Text"],

Cell[TextData[{
 "You can also apply a function in a trailing manner using ",
 StyleBox["expr // func", "Input"]
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  SuperscriptBox[
   RowBox[{"(", 
    RowBox[{"x", "+", "y"}], ")"}], "10"], "//", "Expand"}]], "Input"],

Cell[BoxData[
 RowBox[{
  SuperscriptBox["x", "10"], "+", 
  RowBox[{"10", " ", 
   SuperscriptBox["x", "9"], " ", "y"}], "+", 
  RowBox[{"45", " ", 
   SuperscriptBox["x", "8"], " ", 
   SuperscriptBox["y", "2"]}], "+", 
  RowBox[{"120", " ", 
   SuperscriptBox["x", "7"], " ", 
   SuperscriptBox["y", "3"]}], "+", 
  RowBox[{"210", " ", 
   SuperscriptBox["x", "6"], " ", 
   SuperscriptBox["y", "4"]}], "+", 
  RowBox[{"252", " ", 
   SuperscriptBox["x", "5"], " ", 
   SuperscriptBox["y", "5"]}], "+", 
  RowBox[{"210", " ", 
   SuperscriptBox["x", "4"], " ", 
   SuperscriptBox["y", "6"]}], "+", 
  RowBox[{"120", " ", 
   SuperscriptBox["x", "3"], " ", 
   SuperscriptBox["y", "7"]}], "+", 
  RowBox[{"45", " ", 
   SuperscriptBox["x", "2"], " ", 
   SuperscriptBox["y", "8"]}], "+", 
  RowBox[{"10", " ", "x", " ", 
   SuperscriptBox["y", "9"]}], "+", 
  SuperscriptBox["y", "10"]}]], "Output"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"x", "=."}]], "Input"],

Cell[BoxData[
 RowBox[{"y", "=."}]], "Input"],

Cell[TextData[{
 "Do ",
 Cell[BoxData[
  RowBox[{
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"x", "+", "y"}], ")"}], "10"], "//", "Expand"}]], "SmallText"],
 " then Simplify this"
}], "SmallText"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell["Expressions", "Section"],

Cell[CellGroupData[{

Cell["General Expressions", "Subsection"],

Cell["A list is something of the form", "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"h", "[", 
  RowBox[{"a", ",", "b", ",", "c", ",", "d"}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"h", "[", 
  RowBox[{"a", ",", "b", ",", "c", ",", "d"}], "]"}]], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullForm", " ", "@", " ", "%"}]], "Input"],

Cell[BoxData[
 TagBox[
  StyleBox[
   RowBox[{"h", "[", 
    RowBox[{"a", ",", "b", ",", "c", ",", "d"}], "]"}],
   ShowSpecialCharacters->False,
   ShowStringCharacters->True,
   NumberMarks->True],
  FullForm]], "Output"]
}, Open  ]],

Cell[TextData[{
 StyleBox["Everything",
  FontWeight->"Bold"],
 " inside ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " is an ",
 ButtonBox["expression",
  BaseStyle->"Link",
  ButtonData->"paclet:tutorial/EverythingIsAnExpression"],
 " of the form (apart from terminals):"
}], "Text"],

Cell[BoxData[
 RowBox[{
  StyleBox["head",
   FontSlant->"Italic"], "[", 
  RowBox[{
   SubscriptBox[
    StyleBox["argument",
     FontSlant->"Italic"], "1"], ",", 
   SubscriptBox[
    StyleBox["argument",
     FontSlant->"Italic"], "2"], ",", "..."}], "]"}]], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"a", "+", 
   SuperscriptBox["d", "2"], "+", "f", "+", 
   RowBox[{"b", "*", "c"}]}], "//", "FullForm"}]], "Input"],

Cell[BoxData[
 TagBox[
  StyleBox[
   RowBox[{"Plus", "[", 
    RowBox[{"a", ",", 
     RowBox[{"Times", "[", 
      RowBox[{"b", ",", "c"}], "]"}], ",", 
     RowBox[{"Power", "[", 
      RowBox[{"d", ",", "2"}], "]"}], ",", "f"}], "]"}],
   ShowSpecialCharacters->False,
   ShowStringCharacters->True,
   NumberMarks->True],
  FullForm]], "Output"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["FullForm", "Subsection"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   SuperscriptBox["x", "3"], "+", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"1", "+", 
      RowBox[{"x", " ", "y"}]}], ")"}], "2"]}], "//", "TreeForm"}]], "Input"],

Cell[BoxData[
 GraphicsBox[
  TagBox[GraphicsComplexBox[{{1.267731382092775, 3.3806170189140663`}, {
    0.4225771273642583, 2.53546276418555}, {0., 1.6903085094570331`}, {
    0.8451542547285166, 1.6903085094570331`}, {2.1128856368212916`, 
    2.53546276418555}, {1.6903085094570331`, 1.6903085094570331`}, {
    1.267731382092775, 0.8451542547285165}, {2.1128856368212916`, 
    0.8451542547285165}, {1.6903085094570331`, 0.}, {2.53546276418555, 0.}, {
    2.53546276418555, 1.6903085094570331`}}, {
     {RGBColor[0.55, 0.45, 0.45], 
      LineBox[{{1, 2}, {1, 5}, {2, 3}, {2, 4}, {5, 6}, {5, 11}, {6, 7}, {6, 
       8}, {8, 9}, {8, 10}}]}, {
      TagBox[
       TooltipBox[InsetBox[
         FrameBox[
          StyleBox["Plus", "StandardForm", "Output",
           StripOnInput->False,
           LineColor->GrayLevel[0],
           FrontFaceColor->GrayLevel[0],
           BackFaceColor->GrayLevel[0],
           GraphicsColor->GrayLevel[0],
           FontSize->Scaled[0.05],
           FontColor->GrayLevel[0]],
          Background->RGBColor[1., 1., 0.871],
          FrameStyle->GrayLevel[0.5],
          StripOnInput->False], 1],
        TagBox[
         RowBox[{
           SuperscriptBox["x", "3"], "+", 
           SuperscriptBox[
            RowBox[{"(", 
              RowBox[{"1", "+", 
                RowBox[{"x", " ", "y"}]}], ")"}], "2"]}], HoldForm]],
       Annotation[#, 
        HoldForm[$CellContext`x^3 + (1 + $CellContext`x $CellContext`y)^2], 
        "Tooltip"]& ], 
      TagBox[
       TooltipBox[InsetBox[
         FrameBox[
          StyleBox["Power", "StandardForm", "Output",
           StripOnInput->False,
           LineColor->GrayLevel[0],
           FrontFaceColor->GrayLevel[0],
           BackFaceColor->GrayLevel[0],
           GraphicsColor->GrayLevel[0],
           FontSize->Scaled[0.05],
           FontColor->GrayLevel[0]],
          Background->RGBColor[1., 1., 0.871],
          FrameStyle->GrayLevel[0.5],
          StripOnInput->False], 2],
        TagBox[
         SuperscriptBox["x", "3"], HoldForm]],
       Annotation[#, 
        HoldForm[$CellContext`x^3], "Tooltip"]& ], 
      TagBox[
       TooltipBox[InsetBox[
         FrameBox[
          StyleBox[
           TagBox["x",
            HoldForm], "StandardForm", "Output",
           StripOnInput->False,
           LineColor->GrayLevel[0],
           FrontFaceColor->GrayLevel[0],
           BackFaceColor->GrayLevel[0],
           GraphicsColor->GrayLevel[0],
           FontSize->Scaled[0.05],
           FontColor->GrayLevel[0]],
          Background->RGBColor[1., 1., 0.871],
          FrameStyle->GrayLevel[0.5],
          StripOnInput->False], 3],
        TagBox["x", HoldForm]],
       Annotation[#, 
        HoldForm[$CellContext`x], "Tooltip"]& ], 
      TagBox[
       TooltipBox[InsetBox[
         FrameBox[
          StyleBox[
           TagBox["3",
            HoldForm], "StandardForm", "Output",
           StripOnInput->False,
           LineColor->GrayLevel[0],
           FrontFaceColor->GrayLevel[0],
           BackFaceColor->GrayLevel[0],
           GraphicsColor->GrayLevel[0],
           FontSize->Scaled[0.05],
           FontColor->GrayLevel[0]],
          Background->RGBColor[1., 1., 0.871],
          FrameStyle->GrayLevel[0.5],
          StripOnInput->False], 4],
        TagBox["3", HoldForm]],
       Annotation[#, 
        HoldForm[3], "Tooltip"]& ], 
      TagBox[
       TooltipBox[InsetBox[
         FrameBox[
          StyleBox["Power", "StandardForm", "Output",
           StripOnInput->False,
           LineColor->GrayLevel[0],
           FrontFaceColor->GrayLevel[0],
           BackFaceColor->GrayLevel[0],
           GraphicsColor->GrayLevel[0],
           FontSize->Scaled[0.05],
           FontColor->GrayLevel[0]],
          Background->RGBColor[1., 1., 0.871],
          FrameStyle->GrayLevel[0.5],
          StripOnInput->False], 5],
        TagBox[
         SuperscriptBox[
          RowBox[{"(", 
            RowBox[{"1", "+", 
              RowBox[{"x", " ", "y"}]}], ")"}], "2"], HoldForm]],
       Annotation[#, 
        HoldForm[(1 + $CellContext`x $CellContext`y)^2], "Tooltip"]& ], 
      TagBox[
       TooltipBox[InsetBox[
         FrameBox[
          StyleBox["Plus", "StandardForm", "Output",
           StripOnInput->False,
           LineColor->GrayLevel[0],
           FrontFaceColor->GrayLevel[0],
           BackFaceColor->GrayLevel[0],
           GraphicsColor->GrayLevel[0],
           FontSize->Scaled[0.05],
           FontColor->GrayLevel[0]],
          Background->RGBColor[1., 1., 0.871],
          FrameStyle->GrayLevel[0.5],
          StripOnInput->False], 6],
        TagBox[
         RowBox[{"1", "+", 
           RowBox[{"x", " ", "y"}]}], HoldForm]],
       Annotation[#, 
        HoldForm[1 + $CellContext`x $CellContext`y], "Tooltip"]& ], 
      TagBox[
       TooltipBox[InsetBox[
         FrameBox[
          StyleBox[
           TagBox["1",
            HoldForm], "StandardForm", "Output",
           StripOnInput->False,
           LineColor->GrayLevel[0],
           FrontFaceColor->GrayLevel[0],
           BackFaceColor->GrayLevel[0],
           GraphicsColor->GrayLevel[0],
           FontSize->Scaled[0.05],
           FontColor->GrayLevel[0]],
          Background->RGBColor[1., 1., 0.871],
          FrameStyle->GrayLevel[0.5],
          StripOnInput->False], 7],
        TagBox["1", HoldForm]],
       Annotation[#, 
        HoldForm[1], "Tooltip"]& ], 
      TagBox[
       TooltipBox[InsetBox[
         FrameBox[
          StyleBox["Times", "StandardForm", "Output",
           StripOnInput->False,
           LineColor->GrayLevel[0],
           FrontFaceColor->GrayLevel[0],
           BackFaceColor->GrayLevel[0],
           GraphicsColor->GrayLevel[0],
           FontSize->Scaled[0.05],
           FontColor->GrayLevel[0]],
          Background->RGBColor[1., 1., 0.871],
          FrameStyle->GrayLevel[0.5],
          StripOnInput->False], 8],
        TagBox[
         RowBox[{"x", " ", "y"}], HoldForm]],
       Annotation[#, 
        HoldForm[$CellContext`x $CellContext`y], "Tooltip"]& ], 
      TagBox[
       TooltipBox[InsetBox[
         FrameBox[
          StyleBox[
           TagBox["x",
            HoldForm], "StandardForm", "Output",
           StripOnInput->False,
           LineColor->GrayLevel[0],
           FrontFaceColor->GrayLevel[0],
           BackFaceColor->GrayLevel[0],
           GraphicsColor->GrayLevel[0],
           FontSize->Scaled[0.05],
           FontColor->GrayLevel[0]],
          Background->RGBColor[1., 1., 0.871],
          FrameStyle->GrayLevel[0.5],
          StripOnInput->False], 9],
        TagBox["x", HoldForm]],
       Annotation[#, 
        HoldForm[$CellContext`x], "Tooltip"]& ], 
      TagBox[
       TooltipBox[InsetBox[
         FrameBox[
          StyleBox[
           TagBox["y",
            HoldForm], "StandardForm", "Output",
           StripOnInput->False,
           LineColor->GrayLevel[0],
           FrontFaceColor->GrayLevel[0],
           BackFaceColor->GrayLevel[0],
           GraphicsColor->GrayLevel[0],
           FontSize->Scaled[0.05],
           FontColor->GrayLevel[0]],
          Background->RGBColor[1., 1., 0.871],
          FrameStyle->GrayLevel[0.5],
          StripOnInput->False], 10],
        TagBox["y", HoldForm]],
       Annotation[#, 
        HoldForm[$CellContext`y], "Tooltip"]& ], 
      TagBox[
       TooltipBox[InsetBox[
         FrameBox[
          StyleBox[
           TagBox["2",
            HoldForm], "StandardForm", "Output",
           StripOnInput->False,
           LineColor->GrayLevel[0],
           FrontFaceColor->GrayLevel[0],
           BackFaceColor->GrayLevel[0],
           GraphicsColor->GrayLevel[0],
           FontSize->Scaled[0.05],
           FontColor->GrayLevel[0]],
          Background->RGBColor[1., 1., 0.871],
          FrameStyle->GrayLevel[0.5],
          StripOnInput->False], 11],
        TagBox["2", HoldForm]],
       Annotation[#, 
        HoldForm[2], "Tooltip"]& ]}}],
   Annotation[#, 
    VertexCoordinateRules -> {{1.267731382092775, 3.3806170189140663`}, {
     0.4225771273642583, 2.53546276418555}, {0., 1.6903085094570331`}, {
     0.8451542547285166, 1.6903085094570331`}, {2.1128856368212916`, 
     2.53546276418555}, {1.6903085094570331`, 1.6903085094570331`}, {
     1.267731382092775, 0.8451542547285165}, {2.1128856368212916`, 
     0.8451542547285165}, {1.6903085094570331`, 0.}, {2.53546276418555, 0.}, {
     2.53546276418555, 1.6903085094570331`}}]& ],
  AspectRatio->1,
  FrameTicks->Automatic,
  PlotRange->All,
  PlotRangePadding->Scaled[0.1]]], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["%28"], "Input"],

Cell[BoxData[
 FractionBox[
  RowBox[{"2", " ", 
   SuperscriptBox["k", "4"], " ", 
   SuperscriptBox["\[Pi]", "5"], " ", 
   SuperscriptBox["T", "4"]}], 
  RowBox[{"15", " ", 
   SuperscriptBox["c", "3"], " ", 
   SuperscriptBox["h", "3"]}]]], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"%28", "//", "TreeForm"}]], "Input"],

Cell[BoxData[
 GraphicsBox[
  TagBox[GraphicsComplexBox[{{2.0124611797498106`, 0.8944271909999159}, {0., 
    0.4472135954999579}, {0.4472135954999579, 0.4472135954999579}, {
    0.22360679774997896`, 0.}, {0.6708203932499369, 0.}, {1.3416407864998738`,
     0.4472135954999579}, {1.118033988749895, 0.}, {1.5652475842498528`, 
    0.}, {2.23606797749979, 0.4472135954999579}, {2.0124611797498106`, 0.}, {
    2.4596747752497685`, 0.}, {3.1304951684997055`, 0.4472135954999579}, {
    2.9068883707497264`, 0.}, {3.3541019662496843`, 0.}, {4.024922359499621, 
    0.4472135954999579}, {3.801315561749642, 0.}, {4.2485291572496005`, 0.}}, {
     {RGBColor[0.55, 0.45, 0.45], 
      LineBox[{{1, 2}, {1, 3}, {1, 6}, {1, 9}, {1, 12}, {1, 15}, {3, 4}, {3, 
       5}, {6, 7}, {6, 8}, {9, 10}, {9, 11}, {12, 13}, {12, 14}, {15, 16}, {
       15, 17}}]}, {
      TagBox[
       TooltipBox[InsetBox[
         FrameBox[
          StyleBox["Times", "StandardForm", "Output",
           StripOnInput->False,
           LineColor->GrayLevel[0],
           FrontFaceColor->GrayLevel[0],
           BackFaceColor->GrayLevel[0],
           GraphicsColor->GrayLevel[0],
           FontSize->Scaled[0.025],
           FontColor->GrayLevel[0]],
          Background->RGBColor[1., 1., 0.871],
          FrameStyle->GrayLevel[0.5],
          StripOnInput->False], 1],
        TagBox[
         FractionBox[
          RowBox[{"2", " ", 
            SuperscriptBox["k", "4"], " ", 
            SuperscriptBox["\[Pi]", "5"], " ", 
            SuperscriptBox["T", "4"]}], 
          RowBox[{"15", " ", 
            SuperscriptBox["c", "3"], " ", 
            SuperscriptBox["h", "3"]}]], HoldForm]],
       Annotation[#, 
        HoldForm[((((
             Rational[
              2, 15] $CellContext`c^(-3)) $CellContext`h^(-3)) \
$CellContext`k^4) Pi^5) $CellContext`T^4], "Tooltip"]& ], 
      TagBox[
       TooltipBox[InsetBox[
         FrameBox[
          StyleBox[
           TagBox[
            FractionBox["2", "15"],
            HoldForm], "StandardForm", "Output",
           StripOnInput->False,
           LineColor->GrayLevel[0],
           FrontFaceColor->GrayLevel[0],
           BackFaceColor->GrayLevel[0],
           GraphicsColor->GrayLevel[0],
           FontSize->Scaled[0.025],
           FontColor->GrayLevel[0]],
          Background->RGBColor[1., 1., 0.871],
          FrameStyle->GrayLevel[0.5],
          StripOnInput->False], 2],
        TagBox[
         FractionBox["2", "15"], HoldForm]],
       Annotation[#, 
        HoldForm[
         Rational[2, 15]], "Tooltip"]& ], 
      TagBox[
       TooltipBox[InsetBox[
         FrameBox[
          StyleBox["Power", "StandardForm", "Output",
           StripOnInput->False,
           LineColor->GrayLevel[0],
           FrontFaceColor->GrayLevel[0],
           BackFaceColor->GrayLevel[0],
           GraphicsColor->GrayLevel[0],
           FontSize->Scaled[0.025],
           FontColor->GrayLevel[0]],
          Background->RGBColor[1., 1., 0.871],
          FrameStyle->GrayLevel[0.5],
          StripOnInput->False], 3],
        TagBox[
         FractionBox["1", 
          SuperscriptBox["c", "3"]], HoldForm]],
       Annotation[#, 
        HoldForm[$CellContext`c^(-3)], "Tooltip"]& ], 
      TagBox[
       TooltipBox[InsetBox[
         FrameBox[
          StyleBox[
           TagBox["c",
            HoldForm], "StandardForm", "Output",
           StripOnInput->False,
           LineColor->GrayLevel[0],
           FrontFaceColor->GrayLevel[0],
           BackFaceColor->GrayLevel[0],
           GraphicsColor->GrayLevel[0],
           FontSize->Scaled[0.025],
           FontColor->GrayLevel[0]],
          Background->RGBColor[1., 1., 0.871],
          FrameStyle->GrayLevel[0.5],
          StripOnInput->False], 4],
        TagBox["c", HoldForm]],
       Annotation[#, 
        HoldForm[$CellContext`c], "Tooltip"]& ], 
      TagBox[
       TooltipBox[InsetBox[
         FrameBox[
          StyleBox[
           TagBox[
            RowBox[{"-", "3"}],
            HoldForm], "StandardForm", "Output",
           StripOnInput->False,
           LineColor->GrayLevel[0],
           FrontFaceColor->GrayLevel[0],
           BackFaceColor->GrayLevel[0],
           GraphicsColor->GrayLevel[0],
           FontSize->Scaled[0.025],
           FontColor->GrayLevel[0]],
          Background->RGBColor[1., 1., 0.871],
          FrameStyle->GrayLevel[0.5],
          StripOnInput->False], 5],
        TagBox[
         RowBox[{"-", "3"}], HoldForm]],
       Annotation[#, 
        HoldForm[-3], "Tooltip"]& ], 
      TagBox[
       TooltipBox[InsetBox[
         FrameBox[
          StyleBox["Power", "StandardForm", "Output",
           StripOnInput->False,
           LineColor->GrayLevel[0],
           FrontFaceColor->GrayLevel[0],
           BackFaceColor->GrayLevel[0],
           GraphicsColor->GrayLevel[0],
           FontSize->Scaled[0.025],
           FontColor->GrayLevel[0]],
          Background->RGBColor[1., 1., 0.871],
          FrameStyle->GrayLevel[0.5],
          StripOnInput->False], 6],
        TagBox[
         FractionBox["1", 
          SuperscriptBox["h", "3"]], HoldForm]],
       Annotation[#, 
        HoldForm[$CellContext`h^(-3)], "Tooltip"]& ], 
      TagBox[
       TooltipBox[InsetBox[
         FrameBox[
          StyleBox[
           TagBox["h",
            HoldForm], "StandardForm", "Output",
           StripOnInput->False,
           LineColor->GrayLevel[0],
           FrontFaceColor->GrayLevel[0],
           BackFaceColor->GrayLevel[0],
           GraphicsColor->GrayLevel[0],
           FontSize->Scaled[0.025],
           FontColor->GrayLevel[0]],
          Background->RGBColor[1., 1., 0.871],
          FrameStyle->GrayLevel[0.5],
          StripOnInput->False], 7],
        TagBox["h", HoldForm]],
       Annotation[#, 
        HoldForm[$CellContext`h], "Tooltip"]& ], 
      TagBox[
       TooltipBox[InsetBox[
         FrameBox[
          StyleBox[
           TagBox[
            RowBox[{"-", "3"}],
            HoldForm], "StandardForm", "Output",
           StripOnInput->False,
           LineColor->GrayLevel[0],
           FrontFaceColor->GrayLevel[0],
           BackFaceColor->GrayLevel[0],
           GraphicsColor->GrayLevel[0],
           FontSize->Scaled[0.025],
           FontColor->GrayLevel[0]],
          Background->RGBColor[1., 1., 0.871],
          FrameStyle->GrayLevel[0.5],
          StripOnInput->False], 8],
        TagBox[
         RowBox[{"-", "3"}], HoldForm]],
       Annotation[#, 
        HoldForm[-3], "Tooltip"]& ], 
      TagBox[
       TooltipBox[InsetBox[
         FrameBox[
          StyleBox["Power", "StandardForm", "Output",
           StripOnInput->False,
           LineColor->GrayLevel[0],
           FrontFaceColor->GrayLevel[0],
           BackFaceColor->GrayLevel[0],
           GraphicsColor->GrayLevel[0],
           FontSize->Scaled[0.025],
           FontColor->GrayLevel[0]],
          Background->RGBColor[1., 1., 0.871],
          FrameStyle->GrayLevel[0.5],
          StripOnInput->False], 9],
        TagBox[
         SuperscriptBox["k", "4"], HoldForm]],
       Annotation[#, 
        HoldForm[$CellContext`k^4], "Tooltip"]& ], 
      TagBox[
       TooltipBox[InsetBox[
         FrameBox[
          StyleBox[
           TagBox["k",
            HoldForm], "StandardForm", "Output",
           StripOnInput->False,
           LineColor->GrayLevel[0],
           FrontFaceColor->GrayLevel[0],
           BackFaceColor->GrayLevel[0],
           GraphicsColor->GrayLevel[0],
           FontSize->Scaled[0.025],
           FontColor->GrayLevel[0]],
          Background->RGBColor[1., 1., 0.871],
          FrameStyle->GrayLevel[0.5],
          StripOnInput->False], 10],
        TagBox["k", HoldForm]],
       Annotation[#, 
        HoldForm[$CellContext`k], "Tooltip"]& ], 
      TagBox[
       TooltipBox[InsetBox[
         FrameBox[
          StyleBox[
           TagBox["4",
            HoldForm], "StandardForm", "Output",
           StripOnInput->False,
           LineColor->GrayLevel[0],
           FrontFaceColor->GrayLevel[0],
           BackFaceColor->GrayLevel[0],
           GraphicsColor->GrayLevel[0],
           FontSize->Scaled[0.025],
           FontColor->GrayLevel[0]],
          Background->RGBColor[1., 1., 0.871],
          FrameStyle->GrayLevel[0.5],
          StripOnInput->False], 11],
        TagBox["4", HoldForm]],
       Annotation[#, 
        HoldForm[4], "Tooltip"]& ], 
      TagBox[
       TooltipBox[InsetBox[
         FrameBox[
          StyleBox["Power", "StandardForm", "Output",
           StripOnInput->False,
           LineColor->GrayLevel[0],
           FrontFaceColor->GrayLevel[0],
           BackFaceColor->GrayLevel[0],
           GraphicsColor->GrayLevel[0],
           FontSize->Scaled[0.025],
           FontColor->GrayLevel[0]],
          Background->RGBColor[1., 1., 0.871],
          FrameStyle->GrayLevel[0.5],
          StripOnInput->False], 12],
        TagBox[
         SuperscriptBox["\[Pi]", "5"], HoldForm]],
       Annotation[#, 
        HoldForm[Pi^5], "Tooltip"]& ], 
      TagBox[
       TooltipBox[InsetBox[
         FrameBox[
          StyleBox[
           TagBox["\[Pi]",
            HoldForm], "StandardForm", "Output",
           StripOnInput->False,
           LineColor->GrayLevel[0],
           FrontFaceColor->GrayLevel[0],
           BackFaceColor->GrayLevel[0],
           GraphicsColor->GrayLevel[0],
           FontSize->Scaled[0.025],
           FontColor->GrayLevel[0]],
          Background->RGBColor[1., 1., 0.871],
          FrameStyle->GrayLevel[0.5],
          StripOnInput->False], 13],
        TagBox["\[Pi]", HoldForm]],
       Annotation[#, 
        HoldForm[Pi], "Tooltip"]& ], 
      TagBox[
       TooltipBox[InsetBox[
         FrameBox[
          StyleBox[
           TagBox["5",
            HoldForm], "StandardForm", "Output",
           StripOnInput->False,
           LineColor->GrayLevel[0],
           FrontFaceColor->GrayLevel[0],
           BackFaceColor->GrayLevel[0],
           GraphicsColor->GrayLevel[0],
           FontSize->Scaled[0.025],
           FontColor->GrayLevel[0]],
          Background->RGBColor[1., 1., 0.871],
          FrameStyle->GrayLevel[0.5],
          StripOnInput->False], 14],
        TagBox["5", HoldForm]],
       Annotation[#, 
        HoldForm[5], "Tooltip"]& ], 
      TagBox[
       TooltipBox[InsetBox[
         FrameBox[
          StyleBox["Power", "StandardForm", "Output",
           StripOnInput->False,
           LineColor->GrayLevel[0],
           FrontFaceColor->GrayLevel[0],
           BackFaceColor->GrayLevel[0],
           GraphicsColor->GrayLevel[0],
           FontSize->Scaled[0.025],
           FontColor->GrayLevel[0]],
          Background->RGBColor[1., 1., 0.871],
          FrameStyle->GrayLevel[0.5],
          StripOnInput->False], 15],
        TagBox[
         SuperscriptBox["T", "4"], HoldForm]],
       Annotation[#, 
        HoldForm[$CellContext`T^4], "Tooltip"]& ], 
      TagBox[
       TooltipBox[InsetBox[
         FrameBox[
          StyleBox[
           TagBox["T",
            HoldForm], "StandardForm", "Output",
           StripOnInput->False,
           LineColor->GrayLevel[0],
           FrontFaceColor->GrayLevel[0],
           BackFaceColor->GrayLevel[0],
           GraphicsColor->GrayLevel[0],
           FontSize->Scaled[0.025],
           FontColor->GrayLevel[0]],
          Background->RGBColor[1., 1., 0.871],
          FrameStyle->GrayLevel[0.5],
          StripOnInput->False], 16],
        TagBox["T", HoldForm]],
       Annotation[#, 
        HoldForm[$CellContext`T], "Tooltip"]& ], 
      TagBox[
       TooltipBox[InsetBox[
         FrameBox[
          StyleBox[
           TagBox["4",
            HoldForm], "StandardForm", "Output",
           StripOnInput->False,
           LineColor->GrayLevel[0],
           FrontFaceColor->GrayLevel[0],
           BackFaceColor->GrayLevel[0],
           GraphicsColor->GrayLevel[0],
           FontSize->Scaled[0.025],
           FontColor->GrayLevel[0]],
          Background->RGBColor[1., 1., 0.871],
          FrameStyle->GrayLevel[0.5],
          StripOnInput->False], 17],
        TagBox["4", HoldForm]],
       Annotation[#, 
        HoldForm[4], "Tooltip"]& ]}}],
   Annotation[#, 
    VertexCoordinateRules -> {{2.0124611797498106`, 0.8944271909999159}, {0., 
     0.4472135954999579}, {0.4472135954999579, 0.4472135954999579}, {
     0.22360679774997896`, 0.}, {0.6708203932499369, 0.}, {
     1.3416407864998738`, 0.4472135954999579}, {1.118033988749895, 0.}, {
     1.5652475842498528`, 0.}, {2.23606797749979, 0.4472135954999579}, {
     2.0124611797498106`, 0.}, {2.4596747752497685`, 0.}, {
     3.1304951684997055`, 0.4472135954999579}, {2.9068883707497264`, 0.}, {
     3.3541019662496843`, 0.}, {4.024922359499621, 0.4472135954999579}, {
     3.801315561749642, 0.}, {4.2485291572496005`, 0.}}]& ],
  AspectRatio->NCache[Rational[1, 4] 3^Rational[1, 2], 0.4330127018922193],
  FrameTicks->Automatic,
  ImageSize->{660.3880208333333, Automatic},
  PlotRange->All,
  PlotRangePadding->Scaled[0.1]]], "Output"]
}, Open  ]],

Cell["\<\
  Talk about precedence and grouping and the FullForm of x^3+(1+x y)^2\
\>", "SmallText"],

Cell["Do TreeForm @ %", "SmallText"],

Cell["Do TreeForm of our black body output", "SmallText"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell["Part", "Subsection"],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox["expr",
     FontSlant->"Italic"], "\[LeftDoubleBracket]", "i", 
    "\[RightDoubleBracket]"}], TraditionalForm]]],
 " yields the ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["i", "th"], TraditionalForm]]],
 " part. ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox["expr",
     FontSlant->"Italic"], "\[LeftDoubleBracket]", "0", 
    "\[RightDoubleBracket]"}], TraditionalForm]]],
 " yields the head. "
}], "Text"],

Cell["Do parts of f[a, b, c, d]", "SmallText"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ans", "=", 
  RowBox[{"f", "[", 
   RowBox[{"a", ",", "b", ",", "c", ",", "d"}], "]"}]}]], "Input"],

Cell[BoxData[
 RowBox[{"f", "[", 
  RowBox[{"a", ",", "b", ",", "c", ",", "d"}], "]"}]], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ans", "[", 
   RowBox[{"[", "2", "]"}], "]"}], "=", "t"}]], "Input"],

Cell[BoxData["t"], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "ans"}]], "Input"],

Cell[CellGroupData[{

Cell["Global`ans", "Print", "PrintUsage",
 CellTags->"Info3614925140-4603666"],

Cell[BoxData[
 InterpretationBox[GridBox[{
    {GridBox[{
       {
        RowBox[{"ans", "=", 
         RowBox[{"f", "[", 
          RowBox[{"a", ",", "t", ",", "c", ",", "d"}], "]"}]}]}
      },
      BaselinePosition->{Baseline, {1, 1}},
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxItemSize->{"Columns" -> {{
           Scaled[0.999]}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
        "RowsIndexed" -> {}}]}
   },
   BaselinePosition->{Baseline, {1, 1}},
   GridBoxAlignment->{
    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
     "RowsIndexed" -> {}}],
  Definition[$CellContext`ans],
  Editable->False]], "Print",
 CellTags->"Info3614925140-4603666"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ans", "[", 
  RowBox[{"[", 
   RowBox[{"1", ";;", "3"}], "]"}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"f", "[", 
  RowBox[{"a", ",", "t", ",", "c"}], "]"}]], "Output"]
}, Open  ]],

Cell[TextData[{
 "More generally ",
 ButtonBox["Part",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Part"],
 " can take a list, or \[OpenCurlyDoubleQuote]Spans\[CloseCurlyDoubleQuote]"
}], "Text"],

Cell["Do f[a, b, c, d]\[LeftDoubleBracket]{1,3}\[RightDoubleBracket]", \
"SmallText"],

Cell["Many functions have generalizations.", "Text"],

Cell["Get FullForm of %", "SmallText"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Extract", "Subsection"],

Cell[TextData[{
 "We can use extract to ",
 ButtonBox["Extract",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Extract"],
 " multiple parts out of an expression. For example to extract ",
 Cell[BoxData[
  FormBox["y", TraditionalForm]]],
 " and ",
 Cell[BoxData[
  FormBox["c", TraditionalForm]]],
 " out of ",
 Cell[BoxData[
  FormBox[
   RowBox[{"f", "[", 
    RowBox[{"a", ",", " ", 
     RowBox[{"b", "[", 
      RowBox[{"x", ",", " ", "y"}], "]"}], ",", " ", "c", ",", " ", "d"}], 
    "]"}], TraditionalForm]]]
}], "Text"],

Cell["Extract[f[a, b[x, y], c, d], {{2, 1}, {3}}]", "SmallText"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Extract", "[", 
  RowBox[{
   RowBox[{"f", "[", 
    RowBox[{"a", ",", " ", 
     RowBox[{"b", "[", 
      RowBox[{"x", ",", " ", "y"}], "]"}], ",", " ", "c", ",", " ", "d"}], 
    "]"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"2", ",", "2"}], "}"}], ",", 
     RowBox[{"{", "3", "}"}], ",", 
     RowBox[{"{", "1", "}"}]}], "}"}]}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"y", ",", "c", ",", "a"}], "}"}]], "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell["Structure Manipulation", "Section"],

Cell[CellGroupData[{

Cell[TextData[ButtonBox["Map",
 BaseStyle->"Link",
 ButtonData->"paclet:ref/Map"]], "Subsection"],

Cell[TextData[{
 "You can use ",
 ButtonBox["Map",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Map"],
 " to map a function onto a list or more generally onto an expression."
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Map", "[", 
  RowBox[{"foo", ",", 
   RowBox[{"{", 
    RowBox[{"a", ",", "b", ",", "c", ",", "d"}], "}"}]}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"foo", "[", "a", "]"}], ",", 
   RowBox[{"foo", "[", "b", "]"}], ",", 
   RowBox[{"foo", "[", "c", "]"}], ",", 
   RowBox[{"foo", "[", "d", "]"}]}], "}"}]], "Output"]
}, Open  ]],

Cell["Do a map of foo over g[a,b,c,d]", "SmallText"],

Cell[TextData[{
 "Map has the short form ",
 StyleBox["/@", "Input"]
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"foo", "/@", 
  RowBox[{"h", "[", 
   RowBox[{"a", ",", "b", ",", "c", ",", "d"}], "]"}]}]], "Input"],

Cell[BoxData[
 RowBox[{"h", "[", 
  RowBox[{
   RowBox[{"foo", "[", "a", "]"}], ",", 
   RowBox[{"foo", "[", "b", "]"}], ",", 
   RowBox[{"foo", "[", "c", "]"}], ",", 
   RowBox[{"foo", "[", "d", "]"}]}], "]"}]], "Output"]
}, Open  ]],

Cell["Transform last output", "SmallText"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[ButtonBox["Apply",
 BaseStyle->"Link",
 ButtonData->"paclet:ref/Apply"]], "Subsection"],

Cell["Apply will replace the head of an expression.", "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Apply", "[", 
  RowBox[{"bar", ",", 
   RowBox[{"f", "[", "g", "]"}]}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"bar", "[", "g", "]"}]], "Output"]
}, Open  ]],

Cell["Apply has the short form @@", "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"bar", "@@", 
  RowBox[{"f", "[", "g", "]"}]}]], "Input"],

Cell[BoxData[
 RowBox[{"bar", "[", "g", "]"}]], "Output"]
}, Open  ]],

Cell["Transform last output", "SmallText"],

Cell["Apply opperates at different levels.", "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ans", "=", 
  RowBox[{"foo", "/@", 
   RowBox[{"{", 
    RowBox[{"a", ",", "b", ",", "c", ",", "d"}], "}"}]}]}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"foo", "[", "a", "]"}], ",", 
   RowBox[{"foo", "[", "b", "]"}], ",", 
   RowBox[{"foo", "[", "c", "]"}], ",", 
   RowBox[{"foo", "[", "d", "]"}]}], "}"}]], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"bar", "@@", "ans"}]], "Input"],

Cell[BoxData[
 RowBox[{"bar", "[", 
  RowBox[{
   RowBox[{"foo", "[", "a", "]"}], ",", 
   RowBox[{"foo", "[", "b", "]"}], ",", 
   RowBox[{"foo", "[", "c", "]"}], ",", 
   RowBox[{"foo", "[", "d", "]"}]}], "]"}]], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullForm", "@", "%"}]], "Input"],

Cell[BoxData[
 TagBox[
  StyleBox[
   RowBox[{"List", "[", 
    RowBox[{
     RowBox[{"foo", "[", "a", "]"}], ",", 
     RowBox[{"foo", "[", "b", "]"}], ",", 
     RowBox[{"foo", "[", "c", "]"}], ",", 
     RowBox[{"foo", "[", "d", "]"}]}], "]"}],
   ShowSpecialCharacters->False,
   ShowStringCharacters->True,
   NumberMarks->True],
  FullForm]], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Apply", "[", 
  RowBox[{"bar", ",", "ans", ",", 
   RowBox[{"{", "1", "}"}]}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"bar", "[", "a", "]"}], ",", 
   RowBox[{"bar", "[", "b", "]"}], ",", 
   RowBox[{"bar", "[", "c", "]"}], ",", 
   RowBox[{"bar", "[", "d", "]"}]}], "}"}]], "Output"]
}, Open  ]],

Cell["Apply at level 1 has the short form @@@", "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"bar", "@@@", "ans"}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"bar", "[", "a", "]"}], ",", 
   RowBox[{"bar", "[", "b", "]"}], ",", 
   RowBox[{"bar", "[", "c", "]"}], ",", 
   RowBox[{"bar", "[", "d", "]"}]}], "}"}]], "Output"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[ButtonBox["Table",
 BaseStyle->"Link",
 ButtonData->"paclet:ref/Table"]], "Subsection"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plus", "@@", 
  RowBox[{"Table", "[", 
   RowBox[{"i", ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "1", ",", "100"}], "}"}]}], "]"}]}]], "Input"],

Cell[BoxData["5050"], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  UnderoverscriptBox["\[Sum]", 
   RowBox[{"i", "=", "1"}], "n"], "i"}]], "Input"],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "2"], " ", "n", " ", 
  RowBox[{"(", 
   RowBox[{"1", "+", "n"}], ")"}]}]], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Table", "[", 
   RowBox[{
    FractionBox[
     SuperscriptBox["i", "2"], "j"], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "1", ",", "5", ",", "0.5"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"j", ",", "1", ",", "5"}], "}"}]}], "]"}], "//", 
  "MatrixForm"}]], "Input"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"1.`", "0.5`", "0.3333333333333333`", "0.25`", "0.2`"},
     {"2.25`", "1.125`", "0.75`", "0.5625`", "0.45`"},
     {"4.`", "2.`", "1.3333333333333333`", "1.`", "0.8`"},
     {"6.25`", "3.125`", "2.083333333333333`", "1.5625`", "1.25`"},
     {"9.`", "4.5`", "3.`", "2.25`", "1.8`"},
     {"12.25`", "6.125`", "4.083333333333333`", "3.0625`", "2.45`"},
     {"16.`", "8.`", "5.333333333333333`", "4.`", "3.2`"},
     {"20.25`", "10.125`", "6.75`", "5.0625`", "4.05`"},
     {"25.`", "12.5`", "8.333333333333332`", "6.25`", "5.`"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Sum", "[", 
  RowBox[{
   FractionBox[
    SuperscriptBox["i", "2"], "j"], ",", 
   RowBox[{"{", 
    RowBox[{"i", ",", "1", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"j", ",", "1", ",", "5"}], "}"}]}], "]"}]], "Input"],

Cell[BoxData[
 FractionBox["1507", "12"]], "Output"]
}, Open  ]],

Cell["\<\
  Do 1D table, apply Plus, use Sum, contrast to symbolic sumation\
\>", "SmallText"],

Cell["Then 2D table with MatrixForm", "SmallText"],

Cell[BoxData[
 RowBox[{"Plus", " ", "@@", " ", 
  RowBox[{"Table", "[", 
   RowBox[{
    FractionBox[
     SuperscriptBox["i", "2"], 
     SqrtBox["j"]], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "1", ",", "5"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"j", ",", "1", ",", "5"}], "}"}]}], "]"}]}]], "SmallText"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Take", "Subsection"],

Cell["Take allows us to take a subexpression of an expression", "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Take", "[", 
  RowBox[{
   RowBox[{"f", "[", 
    RowBox[{"a", ",", "b", ",", "c", ",", "d", ",", "e"}], "]"}], ",", 
   RowBox[{"-", "2"}]}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"f", "[", 
  RowBox[{"d", ",", "e"}], "]"}]], "Output"]
}, Open  ]],

Cell["\<\
  Take the some elements from an expression, from the beginning, and from the \
end apply list, compare to part of Span\
\>", "SmallText"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Drop", "Subsection"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{" ", 
  RowBox[{"Drop", "[", 
   RowBox[{
    RowBox[{"f", "[", 
     RowBox[{"a", ",", "b", ",", "c", ",", "d", ",", "e"}], "]"}], ",", "2"}],
    "]"}]}]], "Input"],

Cell[BoxData[
 RowBox[{"f", "[", 
  RowBox[{"c", ",", "d", ",", "e"}], "]"}]], "Output"]
}, Open  ]],

Cell["\<\
  Drop some elements from an expression, from the beginning, and from the end\
\
\>", "SmallText"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell["Functions and Pattern Matching", "Section"],

Cell["Define some simple rules without patterns", "SmallText"],

Cell[CellGroupData[{

Cell["Single Pattern variables", "Subsection"],

Cell[TextData[{
 "A variable with a trailing underscore ie ",
 StyleBox["x_", "Input"],
 "  is a \"pattern\" variable. It is included on the lhs of a definition but \
not the right hand side."
}], "Text"],

Cell[BoxData[
 RowBox[{
  RowBox[{"MySquare", "[", "x_", "]"}], ":=", 
  SuperscriptBox["x", "2"]}]], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"foo", "[", 
  RowBox[{"{", 
   RowBox[{"a", ",", "b", ",", "c"}], "}"}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"foo", "[", "a", "]"}], ",", 
   RowBox[{"foo", "[", "b", "]"}], ",", 
   RowBox[{"foo", "[", "c", "]"}]}], "}"}]], "Output"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"SetAttributes", "[", 
  RowBox[{"foo", ",", "Listable"}], "]"}]], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Power", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "4", ",", "5"}], "}"}], ",", "2"}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "16", ",", "25"}], "}"}]], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"??", "Power"}]], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  StyleBox["\<\"\!\(\*RowBox[{StyleBox[\\\"x\\\", \\\"TI\\\"], \\\"^\\\",   \
StyleBox[\\\"y\\\", \\\"TI\\\"]}]\) gives \!\(\*StyleBox[\\\"x\\\",   \
\\\"TI\\\"]\) to the power \!\(\*StyleBox[\\\"y\\\", \\\"TI\\\"]\).\"\>", 
   "MSG"], "\[NonBreakingSpace]", 
  ButtonBox[
   StyleBox["\[RightSkeleton]", "SR"],
   Active->True,
   BaseStyle->"Link",
   ButtonData->"paclet:ref/Power"]}]], "Print", "PrintUsage",
 CellTags->"Info3614925945-4603666"],

Cell[BoxData[
 InterpretationBox[GridBox[{
    {
     RowBox[{
      RowBox[{"Attributes", "[", "Power", "]"}], "=", 
      RowBox[{"{", 
       RowBox[{
       "Listable", ",", "NumericFunction", ",", "OneIdentity", ",", 
        "Protected"}], "}"}]}]},
    {" "},
    {GridBox[{
       {
        RowBox[{"Power", "/:", 
         RowBox[{
          RowBox[{"MakeBoxes", "[", 
           RowBox[{
            SuperscriptBox[
             RowBox[{"Log", "[", "BoxForm`z_", "]"}], 
             "TraditionalFormDump`p_"], ",", "\<\"TraditionalForm\"\>"}], 
           "]"}], "/;", 
          RowBox[{"!", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"NumberQ", "[", 
              RowBox[{"Unevaluated", "[", "TraditionalFormDump`p", "]"}], 
              "]"}], "&&", 
             RowBox[{"Negative", "[", "TraditionalFormDump`p", "]"}]}], 
            ")"}]}]}], ":=", 
         RowBox[{"Module", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"BoxForm`arg", ",", "BoxForm`base", ",", "BoxForm`exp"}], 
            "}"}], ",", 
           RowBox[{
            RowBox[{"BoxForm`arg", "=", 
             RowBox[{"MakeBoxes", "[", 
              RowBox[{"BoxForm`z", ",", "\<\"TraditionalForm\"\>"}], "]"}]}], 
            ";", 
            RowBox[{"BoxForm`base", "=", 
             RowBox[{"BoxForm`MakeTraditionalBoxes", "[", "Log", "]"}]}], ";", 
            RowBox[{"BoxForm`exp", "=", 
             RowBox[{"MakeBoxes", "[", 
              RowBox[{
              "TraditionalFormDump`p", ",", "\<\"TraditionalForm\"\>"}], 
              "]"}]}], ";", 
            RowBox[{"Switch", "[", 
             RowBox[{"BoxForm`exp", ",", "\[IndentingNewLine]", 
              RowBox[{"FractionBox", "[", 
               RowBox[{"\<\"1\"\>", ",", "\<\"2\"\>"}], "]"}], ",", 
              RowBox[{"SqrtBox", "[", 
               RowBox[{"RowBox", "[", 
                RowBox[{"{", 
                 RowBox[{
                 "BoxForm`base", ",", "\<\"(\"\>", ",", "BoxForm`arg", 
                  ",", "\<\")\"\>"}], "}"}], "]"}], "]"}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{"FractionBox", "[", 
               RowBox[{"\<\"1\"\>", ",", "_"}], "]"}], ",", 
              RowBox[{"RadicalBox", "[", 
               RowBox[{
                RowBox[{"RowBox", "[", 
                 RowBox[{"{", 
                  RowBox[{
                  "BoxForm`base", ",", "\<\"(\"\>", ",", "BoxForm`arg", 
                   ",", "\<\")\"\>"}], "}"}], "]"}], ",", 
                RowBox[{
                "BoxForm`exp", "\[LeftDoubleBracket]", "2", 
                 "\[RightDoubleBracket]"}]}], "]"}], ",", 
              "\[IndentingNewLine]", "_", ",", 
              RowBox[{"RowBox", "[", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"SuperscriptBox", "[", 
                  RowBox[{"BoxForm`base", ",", "BoxForm`exp"}], "]"}], 
                 ",", "\<\"(\"\>", ",", "BoxForm`arg", ",", "\<\")\"\>"}], 
                "}"}], "]"}]}], "]"}]}]}], "]"}]}]},
       {" "},
       {
        RowBox[{"Power", "/:", 
         RowBox[{
          RowBox[{"MakeBoxes", "[", 
           RowBox[{
            SuperscriptBox[
             RowBox[{"Log", "[", 
              RowBox[{"BoxForm`b_", ",", "BoxForm`z_"}], "]"}], 
             "TraditionalFormDump`p_"], ",", "\<\"TraditionalForm\"\>"}], 
           "]"}], "/;", 
          RowBox[{"!", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"NumberQ", "[", 
              RowBox[{"Unevaluated", "[", "TraditionalFormDump`p", "]"}], 
              "]"}], "&&", 
             RowBox[{"Negative", "[", "TraditionalFormDump`p", "]"}]}], 
            ")"}]}]}], ":=", 
         RowBox[{"Module", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
            "BoxForm`arg", ",", "BoxForm`sub", ",", "BoxForm`base", ",", 
             "BoxForm`exp"}], "}"}], ",", 
           RowBox[{
            RowBox[{"BoxForm`arg", "=", 
             RowBox[{"MakeBoxes", "[", 
              RowBox[{"BoxForm`z", ",", "\<\"TraditionalForm\"\>"}], "]"}]}], 
            ";", 
            RowBox[{"BoxForm`sub", "=", 
             RowBox[{"MakeBoxes", "[", 
              RowBox[{"BoxForm`b", ",", "\<\"TraditionalForm\"\>"}], "]"}]}], 
            ";", 
            RowBox[{"BoxForm`base", "=", 
             RowBox[{"SubscriptBox", "[", 
              RowBox[{
               RowBox[{"BoxForm`MakeTraditionalBoxes", "[", "Log", "]"}], ",",
                "BoxForm`sub"}], "]"}]}], ";", 
            RowBox[{"BoxForm`exp", "=", 
             RowBox[{"MakeBoxes", "[", 
              RowBox[{
              "TraditionalFormDump`p", ",", "\<\"TraditionalForm\"\>"}], 
              "]"}]}], ";", 
            RowBox[{"Switch", "[", 
             RowBox[{"BoxForm`exp", ",", "\[IndentingNewLine]", 
              RowBox[{"FractionBox", "[", 
               RowBox[{"\<\"1\"\>", ",", "\<\"2\"\>"}], "]"}], ",", 
              RowBox[{"SqrtBox", "[", 
               RowBox[{"RowBox", "[", 
                RowBox[{"{", 
                 RowBox[{
                 "BoxForm`base", ",", "\<\"(\"\>", ",", "BoxForm`arg", 
                  ",", "\<\")\"\>"}], "}"}], "]"}], "]"}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{"FractionBox", "[", 
               RowBox[{"\<\"1\"\>", ",", "_"}], "]"}], ",", 
              RowBox[{"RadicalBox", "[", 
               RowBox[{
                RowBox[{"RowBox", "[", 
                 RowBox[{"{", 
                  RowBox[{
                  "BoxForm`base", ",", "\<\"(\"\>", ",", "BoxForm`arg", 
                   ",", "\<\")\"\>"}], "}"}], "]"}], ",", 
                RowBox[{
                "BoxForm`exp", "\[LeftDoubleBracket]", "2", 
                 "\[RightDoubleBracket]"}]}], "]"}], ",", 
              "\[IndentingNewLine]", "_", ",", 
              RowBox[{"RowBox", "[", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"SubsuperscriptBox", "[", 
                  RowBox[{
                   RowBox[{"BoxForm`MakeTraditionalBoxes", "[", "Log", "]"}], 
                   ",", "BoxForm`sub", ",", "BoxForm`exp"}], "]"}], 
                 ",", "\<\"(\"\>", ",", "BoxForm`arg", ",", "\<\")\"\>"}], 
                "}"}], "]"}]}], "]"}]}]}], "]"}]}]},
       {" "},
       {
        RowBox[{"Power", "/:", 
         RowBox[{
          RowBox[{"MakeBoxes", "[", 
           RowBox[{
            SuperscriptBox[
             RowBox[{"BoxForm`f_", "[", "BoxForm`z_", "]"}], 
             "TraditionalFormDump`p_"], ",", "\<\"TraditionalForm\"\>"}], 
           "]"}], "/;", 
          RowBox[{
           RowBox[{"MatchQ", "[", 
            RowBox[{
             RowBox[{"Unevaluated", "[", "BoxForm`f", "]"}], ",", 
             RowBox[{"Log2", "|", "Log10"}]}], "]"}], "&&", 
           RowBox[{"!", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"NumberQ", "[", 
               RowBox[{"Unevaluated", "[", "TraditionalFormDump`p", "]"}], 
               "]"}], "&&", 
              RowBox[{"Negative", "[", "TraditionalFormDump`p", "]"}]}], 
             ")"}]}]}]}], ":=", 
         RowBox[{"Module", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"BoxForm`exp", "=", 
             RowBox[{"MakeBoxes", "[", 
              RowBox[{
              "TraditionalFormDump`p", ",", "\<\"TraditionalForm\"\>"}], 
              "]"}]}], "}"}], ",", 
           RowBox[{"Switch", "[", 
            RowBox[{"BoxForm`exp", ",", "\[IndentingNewLine]", 
             RowBox[{"FractionBox", "[", 
              RowBox[{"\<\"1\"\>", ",", "\<\"2\"\>"}], "]"}], ",", 
             RowBox[{"SqrtBox", "[", 
              RowBox[{"MakeBoxes", "[", 
               RowBox[{
                RowBox[{"BoxForm`f", "[", "BoxForm`z", "]"}], 
                ",", "\<\"TraditionalForm\"\>"}], "]"}], "]"}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{"FractionBox", "[", 
              RowBox[{"\<\"1\"\>", ",", "_"}], "]"}], ",", 
             RowBox[{"RadicalBox", "[", 
              RowBox[{
               RowBox[{"MakeBoxes", "[", 
                RowBox[{
                 RowBox[{"BoxForm`f", "[", "BoxForm`z", "]"}], 
                 ",", "\<\"TraditionalForm\"\>"}], "]"}], ",", 
               RowBox[{
               "BoxForm`exp", "\[LeftDoubleBracket]", "2", 
                "\[RightDoubleBracket]"}]}], "]"}], ",", 
             "\[IndentingNewLine]", "_", ",", 
             RowBox[{"RowBox", "[", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"InterpretationBox", "[", 
                    RowBox[{"#1", ",", "BoxForm`f", ",", 
                    RowBox[{"AutoDelete", "\[Rule]", "True"}]}], "]"}], "&"}],
                   ")"}], "[", 
                 RowBox[{"SubsuperscriptBox", "[", 
                  RowBox[{
                   RowBox[{"BoxForm`MakeTraditionalBoxes", "[", "Log", "]"}], 
                   ",", 
                   RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Unevaluated", "[", "BoxForm`f", "]"}], "===", 
                    "Log2"}], ",", "\<\"2\"\>", ",", "\<\"10\"\>"}], "]"}], 
                   ",", "BoxForm`exp"}], "]"}], "]"}], ",", "\<\"(\"\>", ",", 
                
                RowBox[{"MakeBoxes", "[", 
                 RowBox[{"BoxForm`z", ",", "\<\"TraditionalForm\"\>"}], "]"}],
                 ",", "\<\")\"\>"}], "}"}], "]"}]}], "]"}]}], "]"}]}]},
       {" "},
       {
        RowBox[{"Power", "/:", 
         RowBox[{
          RowBox[{"MakeBoxes", "[", 
           RowBox[{
            SuperscriptBox[
             RowBox[{"Exp", "[", "BoxForm`x_", "]"}], 
             "TraditionalFormDump`p_"], ",", "\<\"TraditionalForm\"\>"}], 
           "]"}], "/;", 
          RowBox[{"!", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"NumberQ", "[", 
              RowBox[{"Unevaluated", "[", "TraditionalFormDump`p", "]"}], 
              "]"}], "&&", 
             RowBox[{"Negative", "[", "TraditionalFormDump`p", "]"}]}], 
            ")"}]}]}], ":=", 
         RowBox[{"Module", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"BoxForm`exp", "=", 
             RowBox[{"MakeBoxes", "[", 
              RowBox[{
              "TraditionalFormDump`p", ",", "\<\"TraditionalForm\"\>"}], 
              "]"}]}], "}"}], ",", 
           RowBox[{"Switch", "[", 
            RowBox[{"BoxForm`exp", ",", "\[IndentingNewLine]", 
             RowBox[{"FractionBox", "[", 
              RowBox[{"\<\"1\"\>", ",", "\<\"2\"\>"}], "]"}], ",", 
             RowBox[{"SqrtBox", "[", 
              RowBox[{"MakeBoxes", "[", 
               RowBox[{
                RowBox[{"Exp", "[", "BoxForm`x", "]"}], 
                ",", "\<\"TraditionalForm\"\>"}], "]"}], "]"}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{"FractionBox", "[", 
              RowBox[{"\<\"1\"\>", ",", "_"}], "]"}], ",", 
             RowBox[{"RadicalBox", "[", 
              RowBox[{
               RowBox[{"MakeBoxes", "[", 
                RowBox[{
                 RowBox[{"Exp", "[", "BoxForm`x", "]"}], 
                 ",", "\<\"TraditionalForm\"\>"}], "]"}], ",", 
               RowBox[{
               "BoxForm`exp", "\[LeftDoubleBracket]", "2", 
                "\[RightDoubleBracket]"}]}], "]"}], ",", 
             "\[IndentingNewLine]", "_", ",", 
             RowBox[{"RowBox", "[", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"SuperscriptBox", "[", 
                 RowBox[{
                  RowBox[{"BoxForm`MakeTraditionalBoxes", "[", "Exp", "]"}], 
                  ",", "BoxForm`exp"}], "]"}], ",", "\<\"(\"\>", ",", 
                RowBox[{"MakeBoxes", "[", 
                 RowBox[{"BoxForm`x", ",", "\<\"TraditionalForm\"\>"}], "]"}],
                 ",", "\<\")\"\>"}], "}"}], "]"}]}], "]"}]}], "]"}]}]},
       {" "},
       {
        RowBox[{"Power", "/:", 
         RowBox[{"MakeBoxes", "[", 
          RowBox[{
           RowBox[{
            SuperscriptBox[
             RowBox[{"BoxForm`func_", "[", "BoxForm`x_", "]"}], 
             "TraditionalFormDump`num_"], "/;", 
            RowBox[{
             RowBox[{"MemberQ", "[", 
              RowBox[{"TraditionalFormDump`trigFuncs", ",", 
               RowBox[{"Unevaluated", "[", "BoxForm`func", "]"}]}], "]"}], "&&", 
             RowBox[{"!", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"NumberQ", "[", 
                 RowBox[{"Unevaluated", "[", "TraditionalFormDump`num", "]"}],
                  "]"}], "&&", 
                RowBox[{"Negative", "[", "TraditionalFormDump`num", "]"}]}], 
               ")"}]}]}]}], ",", "\<\"TraditionalForm\"\>"}], "]"}], ":=", 
         RowBox[{"With", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"TraditionalFormDump`power", "=", 
             RowBox[{"MakeBoxes", "[", 
              RowBox[{
              "TraditionalFormDump`num", ",", "\<\"TraditionalForm\"\>"}], 
              "]"}]}], "}"}], ",", 
           RowBox[{"Switch", "[", 
            RowBox[{"TraditionalFormDump`power", ",", "\[IndentingNewLine]", 
             RowBox[{"FractionBox", "[", 
              RowBox[{"\<\"1\"\>", ",", "\<\"2\"\>"}], "]"}], ",", 
             RowBox[{"SqrtBox", "[", 
              RowBox[{"MakeBoxes", "[", 
               RowBox[{
                RowBox[{"BoxForm`func", "[", "BoxForm`x", "]"}], 
                ",", "\<\"TraditionalForm\"\>"}], "]"}], "]"}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{"FractionBox", "[", 
              RowBox[{"\<\"1\"\>", ",", "_"}], "]"}], ",", 
             RowBox[{"RadicalBox", "[", 
              RowBox[{
               RowBox[{"MakeBoxes", "[", 
                RowBox[{
                 RowBox[{"BoxForm`func", "[", "BoxForm`x", "]"}], 
                 ",", "\<\"TraditionalForm\"\>"}], "]"}], ",", 
               RowBox[{"Last", "[", "TraditionalFormDump`power", "]"}]}], 
              "]"}], ",", "\[IndentingNewLine]", "_", ",", 
             RowBox[{"RowBox", "[", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"SuperscriptBox", "[", 
                 RowBox[{
                  RowBox[{
                  "BoxForm`MakeTraditionalBoxes", "[", "BoxForm`func", "]"}], 
                  ",", "TraditionalFormDump`power"}], "]"}], ",", "\<\"(\"\>",
                 ",", 
                RowBox[{"MakeBoxes", "[", 
                 RowBox[{"BoxForm`x", ",", "\<\"TraditionalForm\"\>"}], "]"}],
                 ",", "\<\")\"\>"}], "}"}], "]"}]}], "]"}]}], "]"}]}]}
      },
      BaselinePosition->{Baseline, {1, 1}},
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxItemSize->{"Columns" -> {{
           Scaled[0.999]}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
        "RowsIndexed" -> {}}]},
    {" "},
    {GridBox[{
       {
        RowBox[{"Power", "/:", 
         RowBox[{"Default", "[", 
          RowBox[{"Power", ",", "2"}], "]"}], ":=", "1"}]}
      },
      BaselinePosition->{Baseline, {1, 1}},
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxItemSize->{"Columns" -> {{
           Scaled[0.999]}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
        "RowsIndexed" -> {}}]}
   },
   BaselinePosition->{Baseline, {1, 1}},
   GridBoxAlignment->{
    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
     "RowsIndexed" -> {}}],
  Definition[Power],
  Editable->False]], "Print",
 CellTags->"Info3614925945-4603666"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MySquare", "[", 
  GraphicsBox[
   TagBox[RasterBox[CompressedData["
1:eJzEvAdUXFea76vpmenb09M99ozbI4fr2B5bDpJRsGRlhEAgcs4gcs65gCKH
oqByDlQOVBWVqEyRoaDIOYNysHJGZO4uJLt77rTXem+t91az/uy1zz4HSjq/
8337/+1zDp9FpHrG/GbPnj2ZvwONZ3juuYyMcIjXP4ENG0hWdMQ/gk4y+EaD
b0t/a2vzV/T/79f2zs6WRdubW5sbG2tb66vb6y93Np6tPrpybbK9T0c3Cqs1
zDwFOUlJjFGRY4F09CQjK72VldFMS1OgopgF3thEe1qGOyL8XJHb4RL3I/gI
h4asYHlBpAhyqT7LDx5th0iwpxf4aIlJRloqt8KbWeJKgZyvjDyQ7fFhiv07
ENeP8pw+zLqwFxN9dLIRuqSvHW8sViAuGcjJGkJiKzNnSFE9rKmbaMVNdhJH
23GjHfiJHvJYN3GwBdsiquiRIYZ0hKkOxlwvZ76PC9qZHmavCgnUo6jtEFe2
N1T0yetmWqlXBhquj6svj6oXh5SzZul0r3imVzTbJ54zS+b6ROPt7PE25pCe
0i1H96nwoGNSotskVX0apElV1ymr7lLA2iQVLaIysPn34rWzs7O9Kwuv9fXN
9bWdzdWdrVc728+f3p4a6xR1K7DdUliXuLhDkNvBz1aR4+T4aDU1sY2d2VKf
LkdGCsqDBKVBOkRCfbp7TdBpRMg5WrwrO8ULiJnqLSgOYxQGcstCGmBhanyC
Ah3JKvNUYi9hM8/Uxh+B+HwacfJfIn78XfCBPVE//JaafFZaETAmKl7QwDvo
6V3MbBU2VkdOMUuKRzWwyVbUVAdmvA011o6a6sFPdGOHW5AGfmGHuHxAjZxo
Jc52Ume7KNMdpMlWXDMXYuRC9KxsDT1DQ01v40LG1PD5LtqNccWV0aalIfl8
v2TeLAJa6pcsDzTO9fJnuthTHcxBLb6zEd6vxo42k3vktQNa5GQHYawVO6hD
AvWqYD2KqiE96td4bf9/9PWr8QU+4q+uCtDf2drY2VrdWnmw+ujy7fmuoRZm
m6iyhV/Yws0xMFKbGalKfLSKGNcjyBuVl/fyIGp0rLgiRAGLlFeE01NdkaHW
uHBbfIQdMcqBleFNSHEpDTupQMfLUTEqfDytyI1f7StFBzciA6QIf0qOTXW4
VcypPySeeTv7wvuwICsB1HuAW9Bdn91Vn6VEREhqQtT4uBFFmbkR2icvMjeV
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
bUbzK/0rwg6n23+YdObdqCN/yDr/fo7dh4VuX1QGWwHzScm7qCHFjqorx5vR
wDyAYAHIloYaFoYalgC1CfncsHBptOHyKH+hnzbeihhQl5rlBYMyyLAyb6q5
bLkPe22EvjzCmhnkTA7yxwcbdjZXdrZWd9cWtna23iADWrcE2utAAu0bqOAI
EIgbAM326xO+/jrKwFEbm2s/swABuPmLti2ZdeuXzb865i/6a1irr16ur69u
baxvb268bneDe239+dXN5wsv7o7dv9Iz1SfRN9SykWkVqa4lCRfywo5n+n2f
6/998aXD5RFHa2JOYFPOV4efIqW5IKOs8Ql2xT4HgLHEJ57DJJxBxZ8mZzm8
5sWuCkZkOqEgHg2YeHpFIL0sQE1Ja0BGS7HxamoaH36JURmgJCdRirzo5X5q
agqQjAAcfpqRly0lxdGr/IS1odR819SLHyec25vj8Gnk4X9NPfNuus17+S5/
rgo5iEk6w4S6GWiJY5qqUT1ysp0038sEqW/OzJ3p484NCpZGRJfHRFfHGy4P
sWe68EPaCpMkt0eYYRKm9UuyxrXFC92Ya8OMK6O8xdGGudHGuQnlxquHO+tP
d7ZeAnBbay/XXr0AZ2xtbXV90wJglwpof77oQSRsbqxvrgNkFmqW/W/O+ebm
+s8C/Y2/8i27Kxc/b77euxuGP0+c/22K23z+/Bn49NdXx8b66tqrlfVXr7bW
VzZX7+2s39nZvr+zdvPJ7bG7yz1XxrQmFUlMzMUWBmb4H4l1/jLH/2B51Mnq
2NN1CTaIuPOIGBt03PkS/4O14Seg3t9QMx0KvPfBIo5ikq0ZRZ6cigABPAyZ
5YzO9xCgYklFvkSoj5KUqqFnsqpD1bR0fIEnozIQCAtxY1UHy/GJgtpwXs0l
JSlJXZ/GgAXioR6kAjeQjaOt3423fjfX6fOEU++AEIs9/nbmhY8qgoCfP8sq
9tBR4gcVpaN61M+8OHN97GkTc7aPvTDIvToquDrMWTCRx/QwkyinlZXYyohp
Z8Z1C9KHVcVznZirQ8xrYw1XJqSXp1VXZnXba/d3tp/ubD+zaOvZ1trDrbVH
25sv1jfW1jY2/sJg643WN9YtslADMQXO/OZrrb8Z2NXPXxZr8d9dxy97Nn/J
t0Bbr7FZtLa2ZjE9luy8tba6svL8+erLl5trKzvbL7Y2HuxsPnjx5PLtK0MP
bow8uj54Y8oIkKlZpYhc3zS/Ixk+h7L9gA6WXDqBT3NGxtui4m3yvb6tCj2a
7fIFPdsB+G1Y1NHa+JPAmdCLvEDSQ+Y4Ywo8ObURpCI/wEuMitPQs2vTLgrq
ohAZjmJULGgJhd68mnAOLIxS4g86QkQUtdQfmeuCynUuiT4e5/BR8I9vhR79
Y/jRP0b88Mewg7+PPPpvGRc+qrp0mJx5QVDpp6cmmqVFYwb0VAfFwquPNdvD
mOmmz5jqF8yMRTN9rgs/bqgBHtJIi9Higg2E4BZqeCcvfVBRMtOBAzSvT0iu
TyuvzeluLLasPL68s3Z7Z+uBRdsPdtZ/2tm8t7PzdGP9xRs0G+sbfyGxsbYO
Rjbe6K8j6ufRNwH0BuPmLzbxTSTtDlqarb+aIl870tfrGzu7K/cgD66/AsG+
AUhtWizN+urDdRBiO8+21++tPF5efbz45NbY42v9NyZ0k+1sFjwhO/hEmtfB
NM8DKa7f5Pkfro0/Xxt7rjTkaIHv/qQLH6Y5fIyIOUHPdUAlnYbFHMNm2OGy
L4oQ4eCcYwu9aJUh8HRHTJ4H4KWmZlUm2hKhvnBgQcuCatOcqKVgpgvG5HkS
oX5sWARoy+LOIbNcatMcUr2+CTjxdvCPbwce/oP3N78J2P/bqGNvx518J9f5
C1TsKTbUQ4641MJI7W8sHtUix1sIM100IBBo460E4EBmO4lj+toRVbmpIdtA
iVIifJW1HnqMbys5rIuXNaCoAAdcG+bfmJTdmFHdnDfcWmwb6W1anmx9fHNo
5f7Eyr2xl/dGNh5Pbq9c3Vp/sr6+sqtXGxurGxtrgMyG5dbH+trPAtsWgexm
2fF64w2vX5C9KQn+O6+tv81rd8l31/Jsrb9aX32xufZia1eba0+21x+uvrix
/vLmwzvT966PPrw+fG/ZtP1oeuOnoReX2zuFVbUpzpCgY+ke+5OcvoD4HyoM
OlIQeKgw8CA00Crd+fNsjy+KAr7lFntQcuwBL0TyGXjSWcALneeCLfQkFPsW
RJ5CZLnKCWmASG2mCxCuwKc49hyuwJdecQmb71uX6Yor8Edme0KjzxVGWVcm
2iV7fud/6l2fH97y/+Gt4KNvBx36o++3v4068U7cmb15bl9iEs7yS32UqHAj
PblHmN8rq+pXIUf02FEDdkiD6FfBhlSwccvCI6SLm24gR8jgXsIyh8ZKRx3S
o40S1iPIG2qqmeukXhtquDmhuDmtuTnbfHuhjUMu14ixg+282QHp4rDsypj8
p3nd4xu922v3Ntaebq4/21x/vrXxEtSwmxuvNjdW19deWWa3XVyv42mXIuAJ
prU3sliSXYFpbddubP+y3mRxlxv/g9duwtydzTa2wbS5/mJj9enW2rOd9Wcb
Lx88uXf1ztWpFw8WHtwcu3d1aGFEP9ErNxtYRjFqupM3381dWTRcN7EVmCR0
6kVo0KGSkCM0iAc05HCaxz5Y3JnyyGOkbIfKyCNloVZsqBsT6gpsZHXc8fKY
Yw11YRiIK67QA4QYNPoMIttdRkwvT7xQlQrM53lubUxWyI+08jBGVSQ6zweR
5YnO88sNPZ3geQiW4pLic8jmq3889cke5+9+57Tvn/wPvxVxcq/7vt9cOvp2
5Il3Mp0+R8SeZkE9GuHBWkJsCzOzQ1Dc3VhtVtaalTW9MuArivvE0EFpURsj
uZkc3YT0F5Y5cgpsGkrs9EiPdkqESVgwrELOdzOuD4tvTihvTWluzRhuz7fq
5VQuubiBVjTYWn91TDrTyxprJ0/18q7P91xbGrl9berR3aWVp7fWXt5bf/Vo
beXxqxePHt6//eTRvVcvn6+tvrKED8hWq2svnj5defZse2MdWEXQB9pcWwMC
Ixurq0BbgOP6m/6mhffGqzWAH3C1JEHgQNdWX7x4en/1JYijezsbT3bWH649
u7H+7Mbze4uLY61zg6qpHlGngiAk5JEr48jlUaSiUHSuDx8Wxa28JKy+1FgT
xi/1BXadnH6Bke/GLvfnV4fQi70p+a6cMm9WsTsN4sAudlMgQ8m59vCEk9hM
O0y2A63MB5HtSC71K461jnT+UlMPCXf8ojzRvirVqTTOLvfSaSEqOdXvaJL3
kZp0z3CHb5O9j+WGWIPOoff2WP1pz5G9e87/+Tfeh94OPPYnrwP/6vTnPdGn
30u7+DmI6NLQQ8iksyAfanAxakJCGw/aLanS1Od0CIpAvaClJPfwc1TYcE6J
K7PAgZp9hpp1kgU5K610NmL9OmkxY6qaUR1uqp22aOZfH5HdmlTfntHfnm2+
c2VQLcLS6tLVvIrRNuqIkTDWgr8MCoQR9eJE69XZ7tuXBx/ennrxcPnV0+ur
z2+/enbn4d2rT+7fWnn6YOXZ4821V9ub6yvPn718+hhoe8OyxPTq+VOgrXWA
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
9+BX+2rJ8RJkmJGdbVZU9qtqhg2Y0RaiWYdtldYYG2t6dLjRLgaoDgAyUAsP
tZCGW8lAoDNoJILBXi22R41ua4TphGUGUQU4EuwaaaOMtlMnuupBPbg4KLwy
2nhtQn5jqulXeG2s7my83HqxvvV07dn1ebNaQyllQ8PqMz0wkafKfb6BuH5S
FW4lhHl3CtNbGtJl5Eg9NVFHiNfgonXEGJD9msnRakyIFO4NSDUh/WQwD0ml
i6DUgVdkB8QvsuXkneRBTvILzgqLzjeU2IvLnSWV7uJqL3aJK6vMk1cTKMXH
qhkZBh6kQ1LSq6webUHP99HuTIkfLDTdGJeNtNL1whoRBYopiylJ840NPOti
/cUpqz8VZ/rmJLrkxTsSikP0tDwQO5QCH25lELfcn5BpR8yyYxa6NVQBk5Mo
r41gFfqxoIEMSAA9L0BUFS1HJuspEAUuq4VXaZJhJto4w0bmdE/DvFm6NCif
7hH0aYgtohodv8zAhYICXIoMkYNLqy5YQ05QEuLa+ZBuSQmIr0EdargZP2DA
AQpdarTZSBztqu9Wo/t0uIFmIiA10k4FGm6jgD4YNOvxoO1qQrbJajoUdf0G
wlgnfaqHNW1iz/SBelBgeSp4THZtQnF9WvVrvNZ3dgCy9c0X2+sPntwY71NS
xLUpDWVhqKgzVcFW2U4fpzu+D489LEUGtrJTDPVJBkqSnpioxcfu8oo1UqIM
oLzCBclrvaQwN1GFE7/YngM9zy60YRfYcKHnqWk/1GceY+WeEkBtJeVOcpin
CuGvQoNiNmNAkj/WVD6hrZltRS+bKFf76y+b6Utm6nwveXmg/s6U6Mll7dPL
zbcnmxb6Gu7PNS8ONN6YUI+0sUwa4kgHs09PHARVjAplFpVLkXGUfE9ynis+
0x6dco6cc1FY6a+oC9dhEzWoBFa+Pz3Hl18cRkr3wqe649M9mEVhvMq4FlZ5
G6+mU4LRcmsGDMxpk+TqmObySNNoO6dDjtELq0GZ2cbLa2GmNTNS5NhINTVJ
Q0/tbChsF0G7ZRWmppp+HWqwGTdoJAy2kIbayCMd1F4d1mwggP5oJw3gAAId
oAEjcbCVBFqwt0+PB52Jbsb8AH9pqAFgujwisTwJPC6/NqG8Nqm6PqX+27y2
Nt/cZdxcsayuP7+2PKjW1ZfIkEmkDGd4xHGoz1e5bp9kuX1cFPg1o8CpxeIo
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
LECKO8tGhzehwxWMrGFjw/qYdBNGRp94tI1tEOBqCs5WZoYhU0Li/U/nRPtX
ZsYlBHlEBZwO9nrN8ZVfRfocIVfECwlZuiaEkZkvxcUq6+OM9DQ1IQYaLwvp
TSlw19NTJloxwIta5GXlFVyeEF8Ybh43NVyclM91NW1PK9/b7Phwp/dtaInL
bW9f6Pxwb+Td3YH3Lw++vdW5Oaue6KD1tdb0adDD+ppzPZSVftr6SNPWJHd7
mr81I9icFmxMCrampdvTip1Z5aV59ZVz2mvLuhurhrfXjM9eb543vbNufrY7
x/vAbtv24eX+f16qeibAB/ofeD3d53XvyaN7jx88ePj999/89W+3NrcmW/uk
KD050cpI7mCmtNMS9KRoJS5YgfWVVnnykK5NBacYuScYOSca85xgeDXlu3CL
PSSVUF9BQKopz70+wQEd+WrxW78t9f99eeCLlcF/qg47gI871pTtKizxYRd4
0DJdCMmn6hIcsbEOIEqmG7c8kI+LUtDTB3W1G2PgnFXrI7IpK7tT2YDKCsyM
cPM/9WeXV/8t6PThs14n3zpxKOD0sROHfvvWG4d93Q5mRJ+RNZaOmhoH1PVq
coa4JlpPSzM3ZZgYqdPaalF1IK3IvVtYMCBDXuhv6hIWLnVQNgfZkyb8kBZ3
Y1l/fkS4O9dyc93y3mbnjfPWq6vt0AChrG5dgfoaeudi19Y88KL2atE96srB
1qoRQ9VkO3a+m7A6RN+YYG1Mcs6Ps9fGOPa732cUoF1ABj4EbCRYkUX7ckjQ
9RU9gPsnNag4+/X/S33P9MHl/mcCfL/Ey659Xj88fmjfYubBnW+/uvXFBxe2
p3T9sio9JQnGlpWRZKLEttSHS9B+okqA5cLIO07OONqQepiYdpSa9To9+ySn
yJ1TdIZdeIaR40pKPVkTfQQZ9CeEz++AV3XwnwgxRynJxykpJ6ipJxkZp5nZ
boz9q0Y1Z49gzh4F4WIdmPleytpYIye3R4Va7GmEHrU6wF8bFPe1NDRWJ5Wn
+voef/Etxz/6nfgz8MqPDihOCE8J8Y4N8XA/deD1V/71wG+ee9PxtyJS3kIn
d8pAUhGTu3iIPmFhv6hwTFkmrA4k5bmIsaFWXh7wsvLyV7tolydEUF/znfQr
C+ori9qrS/prK6brq23XVsGNt187b7m2Yf1gb/CDvYG3t2wbM/JRC7FDWWaT
F3erSmzS/F518ZgZvdDbsDrCOD/GXB1tWhlh7s7bSYHssXpaDgK3D7p6TmsX
NMl9avZ9b0Dnze/tdL+z0wN6b7f3mZ6x+2Ve0A9hfj25/+j+g4c/PLj3zXdf
vve398/fWLZCbzfRU+wza//arLQqoBnpySv1YBW6ULIc8UmH6xIO1SceJqY6
wGyqTziGPvtqsf8L2WeeT3f9VYbbr3M9/wPh/Z8FXs+XB75QG3WQmHCMBL0x
+XVK2kl6pjMhyRF99mBl2AFM1OHaeAdy5mkFJryrOX+lm7oxwoEcutLP3hgR
X100DLRSSlO8U0NPeTr87syxF3ydDuUnhAooODmL0iJoqkCknHF+1d/j6BsO
vzt54DliWcyogdYjw/CqI7WU1M7mgjFl5bAMqSUlcCv9SfnuGkryORvFwMyC
190xwe6EaKWPuTMl25tX786odmZbLi20Xl9rf2+7+/2dXtDN7c6bF21X1gwr
I7wBPdYsyDfxsi3CXCM3vUOcO6gtm+moXR6krI7QV0YYy8ONe4vKy/OqXYhm
M0AK+rn4wrhoY0x4ZbFlb1FzZUnzDBlUmV1rpnchr13sBr270/Puf6P27M7e
/4OePrh3/86D+98/vH/n0d1vfrr/1cOv3/v0+tzmuHzaXN8jzLWxkttpcS01
wfxCz6ZsN1qWKzXLhZzh3JB6Cp/oWBt3DBt1pObs4WL/FxHev8098+/Zbv+a
6/58kc9vKwL/hAk/UBX+J1TYH2pjX2XknGIWuFCzTpAzHOk5TvQ8J2aRGzn7
JDHrOK/CW0uM6hXmLNvq7U8N6KWuDzEvzcqgJa6OSKSMQnx53OsHnnN1ePGt
N17LT48RsCmcRlJxQU5WWkINCpEY5ePt9hcv55dff+m5SM9XzILq1V5BY1lo
O7dQUZ8w1Yqb1NR08hDkAk8SwluIjR5UYyaM+PUBzu6YaG9Seq6LsTej2BoT
bU9Id6eVVxZ19tWpGxBye27t9t6+1v/+Rcu1Fe2FMf6IDqtvylAR47SUBB0t
cUBWNGepPddNmO/Bz/fhp7pwoxbMzoxwZwq+leD8EGu+izrTQV4ZYG5Pii/P
2z2/3fafAyui3Xf+rVdX9O9uddzctOvtC7brF6zXNixXz1uurLX/Eq8ff3z0
8OH3jx/efXL/zuM7f/vp7mf3v7j+8eXxy7PqOWtDryjXsr/RhxYbIkP6CQp9
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
Q9F8Ijraw4wRgIjEwWK8rAt5YcpMaklKZE1OYokoQcqN9kPB4HoQF8u9QU7m
gigvRQatUEBWpMeViaIlNF9GADIMY+gF13KFQQLsIClkm2pxwIkGwegh7lRz
6lA1a7iadaol9czRdNApeoopnQfCVWWgw4bXifAH1ass4g6l+gCVJjpnkCyT
A01SQ8xZ3gbp4dYSMkJGx4hI8PQIBC/QPDXMhuNnkkSACUOsM6NQBTS3PKpr
Srgd098SOIsVZJvgbxONNye6GBJQ+l5IHc99Ogh9iLutrh/KyHu/vruNtidc
m+YPV6SHt8jpAzX80frkgSrWiQbepX7pzdHCBVXewqDsxsky9aarY6UgeMw0
i/7+Yet4FbsrP6pR5N+cEQxgnarlT1dzhyuY51UFd87Wv1pUrd4fWXswtvnb
xMr9sWc/qt7vrO1ur7zbWt7eeLW1/nJj9fn6yrON5Serz+6sP729+vjG88Uz
i+dUs/3KwcbMjgpObyWnqyzhaFF0R2F0X3EcyIo9hTHt0sgWKaUpj9KQHVkj
DitPDihgembGuoiiHIQR9mEYPYqnsSjGVULzKBaGtpVye6rSe6uySoQUorMp
Yb9+rDecGWgnYwe1ybmHpfR2OaezlNsiYxxMCcuMdmV4m4c76cbiDWLx34mi
EEpxYO9BhkqZqKpk9iuZk0eEp1rTppqSByvpHYXkVimxNS+kOSeoRogHOiTy
BSpNxGSQrAQBJslBMI6fkSDIjB9olh2DEpMRWTFobpAFmwDjBpgn+Zvzg6zF
ZJSUhs2lYoUke5qvBTMQDmDF+liR3c2CnAx97PQ8EHtxcG38fqirla6dIcTF
QouEtYwnIDhh6GyGlzIzAnSxgWruxJHUs11ZgNTFY7nqtTcHD4B6CKLgXGcW
iBlz7ZLRGk6rNDw7ClHGcm3NIg6X0ydruKcOCUBVnG5MBnDvzx9eutX9/FbP
i8Vjb++Nrtw/8erO6Id3a7s7q++23+5sA2SvN9derq+92Fhd2nj12+rvvyz/
dmv58fWXv87fuzJybqR2tCVv5EhmbzWvvTihqzRhUJk0ViMYULC6CuPbCigt
BVFNYMjNJlWmBRbz8PlMbCYVAzIwkJTtWZ1N7lHyW0sSm4oSRg5nAiKFSQFE
tB4BocUORJQJQrrLkvoU3JHqVJWC21nEaJXGHRKTSjneebHOGWS7NIodjWDE
CbXMiEM3y6La5LEjh3gnGpOnWkTAa9+eduD0loEpm3gkJ7g9n9SQTqgD5hL5
1qb6giFLEgEHsJKDASkY28+I5q4vCLEEvHLiHHnBljQ8lEMw5wVap4QhxZGO
mTEuaZFO3FAkwx8e72sV7WURjoMFY4x9UVDPfbpu1lrOlns89kGdLXSQUIiT
mVaIiznF2zYhEJkS7VrIDygXBTflU1RK1nhT8kxr6ky7aK4z4/rxb9u7dGWD
AA+y4kRjcoc8plLoXcJ2bc4hnqhNOtOacaYlHehSd97NYfn984ceX23+tq9H
y4PLrc9+7Ht778Tag6lP7zc+7K6/313b2VnZ2Xq7ubm8sfFmY/3V1tqLtde/
vX1xb/Xl3fWXi68fLfxyZfjaTMvl8YaZXnl/nahbwekp5/RX8vsreH3lrE55
/NGiGIDscF5EY2744Twy+M7NspiOEvpAraA6k1TI82ktZnQdTGorS5zuKFBV
CUr5/nHuhgxfsxIeYaAq+Xz3gYlG8VRThkrBOpITVS8m1qeH1KQGVgsDqlIC
AC9eOFwQieCSrHMZLqVCn6OltKFa7ky7RL3O5CHeSC1nqDpRVZHQWURpziU2
iAm1Kd9+CBZ6g3CeG40EZTAjwlZEsmH5GkW76NA8DICz0slIfogVw8eY4QMT
hCAyopzF0ZhkEooVhGAFIlhBSIqHeTgWFuhk5GNvgN+vj4XrOFlqokw1HGDa
Tua6aFNtR5gW1lrXA64L3JcYghTHY3MY7nK+T7UkuLUoeqCGqd7bsU30o3qX
85zTRyXnenKnjqR2ytU3JLtL4qaPpM62ZZzvyrnQnQs62hWVbPFE+b1TVQ8v
1j+83Pjg0uG75+t/Ptfw4NLRpdtDq/enPn/a+vRx8+OHzd3d9Xc761vbq5tb
Kxuby1tbyxvrL9bePl1783Dl1d03z268eHDh9zun7l8dujHTMtlZ1K0UNhcm
tsvZfRXJw9UigKynlN4FfAdUQu9VJKqU3IFqQWdpYkdp4lijeLw5u7dKoKpJ
OX4kW1WbMtddWJkeKo52aCuine6QnjwsPnk4faJJ3JhNrhWHVokCa9KC6sWh
QEqhfykXn8/CSRIwqTGoXBZOHOeQw3AtF/n3Klmj9QLAa7xJ+O1pOvbJRsGg
MrFFGl4v9gdD1kG+OzhWcN0P0JxyY+zz4h0yo+y4AWbxOH2ys3a8hwHTD5YU
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
dv75eePLh9WP797ubr1+t/nq/fYbcNxaW1p98+T10q9LT+8+fXT76YObz3+9
vHR//undc49uz96/OX3n6vjtS2O3Lo5enOk5N9ExOdgwcLSirS6/tkRUns8t
zkpkRnjSibi4AKcIPDIQY4m3M3aD62OsdJ0t9wI5mmujTDXBRQvXh1jrqUXx
s6KHIpLjXCSJXkDCOFcGERFDsEwIsQWfM0nIpEg0+DCT5V0gDCpOI2YxPHMT
8XksLynbO58D+p03OM1heoJiBcQKsWUG2dAIFjFeJpHu35OwBhQfsyBXqA9a
J8zdhBXuIIxzTyQ5RnpbB7ua2htDLLQhDjANr/1Qd7ieI0wTBdMy1IZAdSDG
uhBTPQ2YnoaZLhDEbC8EZ2vki4L5O5iSPazZRAdmMFIQga5ICwWJsSItANi/
T8keOSSYac8cPyKa685ZGC66AXgNH7h2XD7TIT7dJRlvEc50ZEy2pKlqOKpa
7ume/Euj5ecHSy4Mld2YrPvPf/4H6O/N6P9+efnPv/75159//O//fPnfvz7+
588P//7X+7/+ePfn151/fdn65+fNPz5tAH39uP7lw9rn96ufdlcAyk87y7tr
zz6sPf24/uzTxu+fN58Dfd1aAgKn4PN3y4+3Xj1YW7r79uni68e3Xj+6+fvP
F5/8dO7BtVOLF8auneq/cKLr9FDrTH9TR01hY4mkIodXImEViZnSZGoaPSyJ
4h0bhKSGIJnhaBbZiUFCxQbakvCwYDejcLxZKM7YHwP1QusCEZwNQrBGEXiz
OII11V8teqAtiNlJ4WhBlLOQ4gLyADMYAY7g83gCmK3MInDGRLfvA5wNwjxh
UX7WJLyZn6OBN1o/FGceCxquCwyL0AVXzg+6EGAxzA864KJCmWub6UNM9TVM
9CEmehCYHsRCX9PKQBMOBdeYppP5XkAWVAYwtUV7mfPJ6Pwkby7RRhKnfian
rZiqquKMHU4FRptoTjt7TDo/KDvTm3OmJ/v4Yf5YE/94I3e8JWWuN2/sSOrY
EdGZY7KFb7z+3i/m/wCoydKG
     "], {{0, 109}, {144, 0}}, {0, 255},
     ColorFunction->RGBColor],
    BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
    Selectable->False],
   BaseStyle->"ImageGraphics",
   ImageSize->Automatic,
   ImageSizeRaw->{144, 109},
   PlotRange->{{0, 144}, {0, 109}},
   ImageCache->GraphicsData["CompressedBitmap", "\<\
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
tQrmMwklkM7z/w+zakS1\
\>"]], "]"}]], "Input"],

Cell[BoxData[
 SuperscriptBox[
  GraphicsBox[
   TagBox[RasterBox[CompressedData["
1:eJzEvAdUXFea76vpmenb09M99ozbI4fr2B5bDpJRsGRlhEAgcs4gcs65gCKH
oqByDlQOVBWVqEyRoaDIOYNysHJGZO4uJLt77rTXem+t91az/uy1zz4HSjq/
8337/+1zDp9FpHrG/GbPnj2ZvwONZ3juuYyMcIjXP4ENG0hWdMQ/gk4y+EaD
b0t/a2vzV/T/79f2zs6WRdubW5sbG2tb66vb6y93Np6tPrpybbK9T0c3Cqs1
zDwFOUlJjFGRY4F09CQjK72VldFMS1OgopgF3thEe1qGOyL8XJHb4RL3I/gI
h4asYHlBpAhyqT7LDx5th0iwpxf4aIlJRloqt8KbWeJKgZyvjDyQ7fFhiv07
ENeP8pw+zLqwFxN9dLIRuqSvHW8sViAuGcjJGkJiKzNnSFE9rKmbaMVNdhJH
23GjHfiJHvJYN3GwBdsiquiRIYZ0hKkOxlwvZ76PC9qZHmavCgnUo6jtEFe2
N1T0yetmWqlXBhquj6svj6oXh5SzZul0r3imVzTbJ54zS+b6ROPt7PE25pCe
0i1H96nwoGNSotskVX0apElV1ymr7lLA2iQVLaIysPn34rWzs7O9Kwuv9fXN
9bWdzdWdrVc728+f3p4a6xR1K7DdUliXuLhDkNvBz1aR4+T4aDU1sY2d2VKf
LkdGCsqDBKVBOkRCfbp7TdBpRMg5WrwrO8ULiJnqLSgOYxQGcstCGmBhanyC
Ah3JKvNUYi9hM8/Uxh+B+HwacfJfIn78XfCBPVE//JaafFZaETAmKl7QwDvo
6V3MbBU2VkdOMUuKRzWwyVbUVAdmvA011o6a6sFPdGOHW5AGfmGHuHxAjZxo
Jc52Ume7KNMdpMlWXDMXYuRC9KxsDT1DQ01v40LG1PD5LtqNccWV0aalIfl8
v2TeLAJa6pcsDzTO9fJnuthTHcxBLb6zEd6vxo42k3vktQNa5GQHYawVO6hD
AvWqYD2KqiE96td4bf9/9PWr8QU+4q+uCtDf2drY2VrdWnmw+ujy7fmuoRZm
m6iyhV/Yws0xMFKbGalKfLSKGNcjyBuVl/fyIGp0rLgiRAGLlFeE01NdkaHW
uHBbfIQdMcqBleFNSHEpDTupQMfLUTEqfDytyI1f7StFBzciA6QIf0qOTXW4
VcypPySeeTv7wvuwICsB1HuAW9Bdn91Vn6VEREhqQtT4uBFFmbkR2icvMjeV
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
bUbzK/0rwg6n23+YdObdqCN/yDr/fo7dh4VuX1QGWwHzScm7qCHFjqorx5vR
wDyAYAHIloYaFoYalgC1CfncsHBptOHyKH+hnzbeihhQl5rlBYMyyLAyb6q5
bLkPe22EvjzCmhnkTA7yxwcbdjZXdrZWd9cWtna23iADWrcE2utAAu0bqOAI
EIgbAM326xO+/jrKwFEbm2s/swABuPmLti2ZdeuXzb865i/6a1irr16ur69u
baxvb268bneDe239+dXN5wsv7o7dv9Iz1SfRN9SykWkVqa4lCRfywo5n+n2f
6/998aXD5RFHa2JOYFPOV4efIqW5IKOs8Ql2xT4HgLHEJ57DJJxBxZ8mZzm8
5sWuCkZkOqEgHg2YeHpFIL0sQE1Ja0BGS7HxamoaH36JURmgJCdRirzo5X5q
agqQjAAcfpqRly0lxdGr/IS1odR819SLHyec25vj8Gnk4X9NPfNuus17+S5/
rgo5iEk6w4S6GWiJY5qqUT1ysp0038sEqW/OzJ3p484NCpZGRJfHRFfHGy4P
sWe68EPaCpMkt0eYYRKm9UuyxrXFC92Ya8OMK6O8xdGGudHGuQnlxquHO+tP
d7ZeAnBbay/XXr0AZ2xtbXV90wJglwpof77oQSRsbqxvrgNkFmqW/W/O+ebm
+s8C/Y2/8i27Kxc/b77euxuGP0+c/22K23z+/Bn49NdXx8b66tqrlfVXr7bW
VzZX7+2s39nZvr+zdvPJ7bG7yz1XxrQmFUlMzMUWBmb4H4l1/jLH/2B51Mnq
2NN1CTaIuPOIGBt03PkS/4O14Seg3t9QMx0KvPfBIo5ikq0ZRZ6cigABPAyZ
5YzO9xCgYklFvkSoj5KUqqFnsqpD1bR0fIEnozIQCAtxY1UHy/GJgtpwXs0l
JSlJXZ/GgAXioR6kAjeQjaOt3423fjfX6fOEU++AEIs9/nbmhY8qgoCfP8sq
9tBR4gcVpaN61M+8OHN97GkTc7aPvTDIvToquDrMWTCRx/QwkyinlZXYyohp
Z8Z1C9KHVcVznZirQ8xrYw1XJqSXp1VXZnXba/d3tp/ubD+zaOvZ1trDrbVH
25sv1jfW1jY2/sJg643WN9YtslADMQXO/OZrrb8Z2NXPXxZr8d9dxy97Nn/J
t0Bbr7FZtLa2ZjE9luy8tba6svL8+erLl5trKzvbL7Y2HuxsPnjx5PLtK0MP
bow8uj54Y8oIkKlZpYhc3zS/Ixk+h7L9gA6WXDqBT3NGxtui4m3yvb6tCj2a
7fIFPdsB+G1Y1NHa+JPAmdCLvEDSQ+Y4Ywo8ObURpCI/wEuMitPQs2vTLgrq
ohAZjmJULGgJhd68mnAOLIxS4g86QkQUtdQfmeuCynUuiT4e5/BR8I9vhR79
Y/jRP0b88Mewg7+PPPpvGRc+qrp0mJx5QVDpp6cmmqVFYwb0VAfFwquPNdvD
mOmmz5jqF8yMRTN9rgs/bqgBHtJIi9Higg2E4BZqeCcvfVBRMtOBAzSvT0iu
TyuvzeluLLasPL68s3Z7Z+uBRdsPdtZ/2tm8t7PzdGP9xRs0G+sbfyGxsbYO
Rjbe6K8j6ufRNwH0BuPmLzbxTSTtDlqarb+aIl870tfrGzu7K/cgD66/AsG+
AUhtWizN+urDdRBiO8+21++tPF5efbz45NbY42v9NyZ0k+1sFjwhO/hEmtfB
NM8DKa7f5Pkfro0/Xxt7rjTkaIHv/qQLH6Y5fIyIOUHPdUAlnYbFHMNm2OGy
L4oQ4eCcYwu9aJUh8HRHTJ4H4KWmZlUm2hKhvnBgQcuCatOcqKVgpgvG5HkS
oX5sWARoy+LOIbNcatMcUr2+CTjxdvCPbwce/oP3N78J2P/bqGNvx518J9f5
C1TsKTbUQ4641MJI7W8sHtUix1sIM100IBBo460E4EBmO4lj+toRVbmpIdtA
iVIifJW1HnqMbys5rIuXNaCoAAdcG+bfmJTdmFHdnDfcWmwb6W1anmx9fHNo
5f7Eyr2xl/dGNh5Pbq9c3Vp/sr6+sqtXGxurGxtrgMyG5dbH+trPAtsWgexm
2fF64w2vX5C9KQn+O6+tv81rd8l31/Jsrb9aX32xufZia1eba0+21x+uvrix
/vLmwzvT966PPrw+fG/ZtP1oeuOnoReX2zuFVbUpzpCgY+ke+5OcvoD4HyoM
OlIQeKgw8CA00Crd+fNsjy+KAr7lFntQcuwBL0TyGXjSWcALneeCLfQkFPsW
RJ5CZLnKCWmASG2mCxCuwKc49hyuwJdecQmb71uX6Yor8Edme0KjzxVGWVcm
2iV7fud/6l2fH97y/+Gt4KNvBx36o++3v4068U7cmb15bl9iEs7yS32UqHAj
PblHmN8rq+pXIUf02FEDdkiD6FfBhlSwccvCI6SLm24gR8jgXsIyh8ZKRx3S
o40S1iPIG2qqmeukXhtquDmhuDmtuTnbfHuhjUMu14ixg+282QHp4rDsypj8
p3nd4xu922v3Ntaebq4/21x/vrXxEtSwmxuvNjdW19deWWa3XVyv42mXIuAJ
prU3sliSXYFpbddubP+y3mRxlxv/g9duwtydzTa2wbS5/mJj9enW2rOd9Wcb
Lx88uXf1ztWpFw8WHtwcu3d1aGFEP9ErNxtYRjFqupM3381dWTRcN7EVmCR0
6kVo0KGSkCM0iAc05HCaxz5Y3JnyyGOkbIfKyCNloVZsqBsT6gpsZHXc8fKY
Yw11YRiIK67QA4QYNPoMIttdRkwvT7xQlQrM53lubUxWyI+08jBGVSQ6zweR
5YnO88sNPZ3geQiW4pLic8jmq3889cke5+9+57Tvn/wPvxVxcq/7vt9cOvp2
5Il3Mp0+R8SeZkE9GuHBWkJsCzOzQ1Dc3VhtVtaalTW9MuArivvE0EFpURsj
uZkc3YT0F5Y5cgpsGkrs9EiPdkqESVgwrELOdzOuD4tvTihvTWluzRhuz7fq
5VQuubiBVjTYWn91TDrTyxprJ0/18q7P91xbGrl9berR3aWVp7fWXt5bf/Vo
beXxqxePHt6//eTRvVcvn6+tvrKED8hWq2svnj5defZse2MdWEXQB9pcWwMC
Ixurq0BbgOP6m/6mhffGqzWAH3C1JEHgQNdWX7x4en/1JYijezsbT3bWH649
u7H+7Mbze4uLY61zg6qpHlGngiAk5JEr48jlUaSiUHSuDx8Wxa28JKy+1FgT
xi/1BXadnH6Bke/GLvfnV4fQi70p+a6cMm9WsTsN4sAudlMgQ8m59vCEk9hM
O0y2A63MB5HtSC71K461jnT+UlMPCXf8ojzRvirVqTTOLvfSaSEqOdXvaJL3
kZp0z3CHb5O9j+WGWIPOoff2WP1pz5G9e87/+Tfeh94OPPYnrwP/6vTnPdGn
30u7+DmI6NLQQ8iksyAfanAxakJCGw/aLanS1Od0CIpAvaClJPfwc1TYcE6J
K7PAgZp9hpp1kgU5K610NmL9OmkxY6qaUR1uqp22aOZfH5HdmlTfntHfnm2+
c2VQLcLS6tLVvIrRNuqIkTDWgr8MCoQR9eJE69XZ7tuXBx/ennrxcPnV0+ur
z2+/enbn4d2rT+7fWnn6YOXZ4821V9ub6yvPn718+hhoe8OyxPTq+VOgrXWA
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
9+BX+2rJ8RJkmJGdbVZU9qtqhg2Y0RaiWYdtldYYG2t6dLjRLgaoDgAyUAsP
tZCGW8lAoDNoJILBXi22R41ua4TphGUGUQU4EuwaaaOMtlMnuupBPbg4KLwy
2nhtQn5jqulXeG2s7my83HqxvvV07dn1ebNaQyllQ8PqMz0wkafKfb6BuH5S
FW4lhHl3CtNbGtJl5Eg9NVFHiNfgonXEGJD9msnRakyIFO4NSDUh/WQwD0ml
i6DUgVdkB8QvsuXkneRBTvILzgqLzjeU2IvLnSWV7uJqL3aJK6vMk1cTKMXH
qhkZBh6kQ1LSq6webUHP99HuTIkfLDTdGJeNtNL1whoRBYopiylJ840NPOti
/cUpqz8VZ/rmJLrkxTsSikP0tDwQO5QCH25lELfcn5BpR8yyYxa6NVQBk5Mo
r41gFfqxoIEMSAA9L0BUFS1HJuspEAUuq4VXaZJhJto4w0bmdE/DvFm6NCif
7hH0aYgtohodv8zAhYICXIoMkYNLqy5YQ05QEuLa+ZBuSQmIr0EdargZP2DA
AQpdarTZSBztqu9Wo/t0uIFmIiA10k4FGm6jgD4YNOvxoO1qQrbJajoUdf0G
wlgnfaqHNW1iz/SBelBgeSp4THZtQnF9WvVrvNZ3dgCy9c0X2+sPntwY71NS
xLUpDWVhqKgzVcFW2U4fpzu+D489LEUGtrJTDPVJBkqSnpioxcfu8oo1UqIM
oLzCBclrvaQwN1GFE7/YngM9zy60YRfYcKHnqWk/1GceY+WeEkBtJeVOcpin
CuGvQoNiNmNAkj/WVD6hrZltRS+bKFf76y+b6Utm6nwveXmg/s6U6Mll7dPL
zbcnmxb6Gu7PNS8ONN6YUI+0sUwa4kgHs09PHARVjAplFpVLkXGUfE9ynis+
0x6dco6cc1FY6a+oC9dhEzWoBFa+Pz3Hl18cRkr3wqe649M9mEVhvMq4FlZ5
G6+mU4LRcmsGDMxpk+TqmObySNNoO6dDjtELq0GZ2cbLa2GmNTNS5NhINTVJ
Q0/tbChsF0G7ZRWmppp+HWqwGTdoJAy2kIbayCMd1F4d1mwggP5oJw3gAAId
oAEjcbCVBFqwt0+PB52Jbsb8AH9pqAFgujwisTwJPC6/NqG8Nqm6PqX+27y2
Nt/cZdxcsayuP7+2PKjW1ZfIkEmkDGd4xHGoz1e5bp9kuX1cFPg1o8CpxeIo
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
LECKO8tGhzehwxWMrGFjw/qYdBNGRp94tI1tEOBqCs5WZoYhU0Li/U/nRPtX
ZsYlBHlEBZwO9nrN8ZVfRfocIVfECwlZuiaEkZkvxcUq6+OM9DQ1IQYaLwvp
TSlw19NTJloxwIta5GXlFVyeEF8Ybh43NVyclM91NW1PK9/b7Phwp/dtaInL
bW9f6Pxwb+Td3YH3Lw++vdW5Oaue6KD1tdb0adDD+ppzPZSVftr6SNPWJHd7
mr81I9icFmxMCrampdvTip1Z5aV59ZVz2mvLuhurhrfXjM9eb543vbNufrY7
x/vAbtv24eX+f16qeibAB/ofeD3d53XvyaN7jx88ePj999/89W+3NrcmW/uk
KD050cpI7mCmtNMS9KRoJS5YgfWVVnnykK5NBacYuScYOSca85xgeDXlu3CL
PSSVUF9BQKopz70+wQEd+WrxW78t9f99eeCLlcF/qg47gI871pTtKizxYRd4
0DJdCMmn6hIcsbEOIEqmG7c8kI+LUtDTB3W1G2PgnFXrI7IpK7tT2YDKCsyM
cPM/9WeXV/8t6PThs14n3zpxKOD0sROHfvvWG4d93Q5mRJ+RNZaOmhoH1PVq
coa4JlpPSzM3ZZgYqdPaalF1IK3IvVtYMCBDXuhv6hIWLnVQNgfZkyb8kBZ3
Y1l/fkS4O9dyc93y3mbnjfPWq6vt0AChrG5dgfoaeudi19Y88KL2atE96srB
1qoRQ9VkO3a+m7A6RN+YYG1Mcs6Ps9fGOPa732cUoF1ABj4EbCRYkUX7ckjQ
9RU9gPsnNag4+/X/S33P9MHl/mcCfL/Ey659Xj88fmjfYubBnW+/uvXFBxe2
p3T9sio9JQnGlpWRZKLEttSHS9B+okqA5cLIO07OONqQepiYdpSa9To9+ySn
yJ1TdIZdeIaR40pKPVkTfQQZ9CeEz++AV3XwnwgxRynJxykpJ6ipJxkZp5nZ
boz9q0Y1Z49gzh4F4WIdmPleytpYIye3R4Va7GmEHrU6wF8bFPe1NDRWJ5Wn
+voef/Etxz/6nfgz8MqPDihOCE8J8Y4N8XA/deD1V/71wG+ee9PxtyJS3kIn
d8pAUhGTu3iIPmFhv6hwTFkmrA4k5bmIsaFWXh7wsvLyV7tolydEUF/znfQr
C+ori9qrS/prK6brq23XVsGNt187b7m2Yf1gb/CDvYG3t2wbM/JRC7FDWWaT
F3erSmzS/F518ZgZvdDbsDrCOD/GXB1tWhlh7s7bSYHssXpaDgK3D7p6TmsX
NMl9avZ9b0Dnze/tdL+z0wN6b7f3mZ6x+2Ve0A9hfj25/+j+g4c/PLj3zXdf
vve398/fWLZCbzfRU+wza//arLQqoBnpySv1YBW6ULIc8UmH6xIO1SceJqY6
wGyqTziGPvtqsf8L2WeeT3f9VYbbr3M9/wPh/Z8FXs+XB75QG3WQmHCMBL0x
+XVK2kl6pjMhyRF99mBl2AFM1OHaeAdy5mkFJryrOX+lm7oxwoEcutLP3hgR
X100DLRSSlO8U0NPeTr87syxF3ydDuUnhAooODmL0iJoqkCknHF+1d/j6BsO
vzt54DliWcyogdYjw/CqI7WU1M7mgjFl5bAMqSUlcCv9SfnuGkryORvFwMyC
190xwe6EaKWPuTMl25tX786odmZbLi20Xl9rf2+7+/2dXtDN7c6bF21X1gwr
I7wBPdYsyDfxsi3CXCM3vUOcO6gtm+moXR6krI7QV0YYy8ONe4vKy/OqXYhm
M0AK+rn4wrhoY0x4ZbFlb1FzZUnzDBlUmV1rpnchr13sBr270/Puf6P27M7e
/4OePrh3/86D+98/vH/n0d1vfrr/1cOv3/v0+tzmuHzaXN8jzLWxkttpcS01
wfxCz6ZsN1qWKzXLhZzh3JB6Cp/oWBt3DBt1pObs4WL/FxHev8098+/Zbv+a
6/58kc9vKwL/hAk/UBX+J1TYH2pjX2XknGIWuFCzTpAzHOk5TvQ8J2aRGzn7
JDHrOK/CW0uM6hXmLNvq7U8N6KWuDzEvzcqgJa6OSKSMQnx53OsHnnN1ePGt
N17LT48RsCmcRlJxQU5WWkINCpEY5ePt9hcv55dff+m5SM9XzILq1V5BY1lo
O7dQUZ8w1Yqb1NR08hDkAk8SwluIjR5UYyaM+PUBzu6YaG9Seq6LsTej2BoT
bU9Id6eVVxZ19tWpGxBye27t9t6+1v/+Rcu1Fe2FMf6IDqtvylAR47SUBB0t
cUBWNGepPddNmO/Bz/fhp7pwoxbMzoxwZwq+leD8EGu+izrTQV4ZYG5Pii/P
2z2/3fafAyui3Xf+rVdX9O9uddzctOvtC7brF6zXNixXz1uurLX/Eq8ff3z0
8OH3jx/efXL/zuM7f/vp7mf3v7j+8eXxy7PqOWtDryjXsr/RhxYbIkP6CQp9
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
Q9F8Ijraw4wRgIjEwWK8rAt5YcpMaklKZE1OYokoQcqN9kPB4HoQF8u9QU7m
gigvRQatUEBWpMeViaIlNF9GADIMY+gF13KFQQLsIClkm2pxwIkGwegh7lRz
6lA1a7iadaol9czRdNApeoopnQfCVWWgw4bXifAH1ass4g6l+gCVJjpnkCyT
A01SQ8xZ3gbp4dYSMkJGx4hI8PQIBC/QPDXMhuNnkkSACUOsM6NQBTS3PKpr
Srgd098SOIsVZJvgbxONNye6GBJQ+l5IHc99Ogh9iLutrh/KyHu/vruNtidc
m+YPV6SHt8jpAzX80frkgSrWiQbepX7pzdHCBVXewqDsxsky9aarY6UgeMw0
i/7+Yet4FbsrP6pR5N+cEQxgnarlT1dzhyuY51UFd87Wv1pUrd4fWXswtvnb
xMr9sWc/qt7vrO1ur7zbWt7eeLW1/nJj9fn6yrON5Serz+6sP729+vjG88Uz
i+dUs/3KwcbMjgpObyWnqyzhaFF0R2F0X3EcyIo9hTHt0sgWKaUpj9KQHVkj
DitPDihgembGuoiiHIQR9mEYPYqnsSjGVULzKBaGtpVye6rSe6uySoQUorMp
Yb9+rDecGWgnYwe1ybmHpfR2OaezlNsiYxxMCcuMdmV4m4c76cbiDWLx34mi
EEpxYO9BhkqZqKpk9iuZk0eEp1rTppqSByvpHYXkVimxNS+kOSeoRogHOiTy
BSpNxGSQrAQBJslBMI6fkSDIjB9olh2DEpMRWTFobpAFmwDjBpgn+Zvzg6zF
ZJSUhs2lYoUke5qvBTMQDmDF+liR3c2CnAx97PQ8EHtxcG38fqirla6dIcTF
QouEtYwnIDhh6GyGlzIzAnSxgWruxJHUs11ZgNTFY7nqtTcHD4B6CKLgXGcW
iBlz7ZLRGk6rNDw7ClHGcm3NIg6X0ydruKcOCUBVnG5MBnDvzx9eutX9/FbP
i8Vjb++Nrtw/8erO6Id3a7s7q++23+5sA2SvN9derq+92Fhd2nj12+rvvyz/
dmv58fWXv87fuzJybqR2tCVv5EhmbzWvvTihqzRhUJk0ViMYULC6CuPbCigt
BVFNYMjNJlWmBRbz8PlMbCYVAzIwkJTtWZ1N7lHyW0sSm4oSRg5nAiKFSQFE
tB4BocUORJQJQrrLkvoU3JHqVJWC21nEaJXGHRKTSjneebHOGWS7NIodjWDE
CbXMiEM3y6La5LEjh3gnGpOnWkTAa9+eduD0loEpm3gkJ7g9n9SQTqgD5hL5
1qb6giFLEgEHsJKDASkY28+I5q4vCLEEvHLiHHnBljQ8lEMw5wVap4QhxZGO
mTEuaZFO3FAkwx8e72sV7WURjoMFY4x9UVDPfbpu1lrOlns89kGdLXSQUIiT
mVaIiznF2zYhEJkS7VrIDygXBTflU1RK1nhT8kxr6ky7aK4z4/rxb9u7dGWD
AA+y4kRjcoc8plLoXcJ2bc4hnqhNOtOacaYlHehSd97NYfn984ceX23+tq9H
y4PLrc9+7Ht778Tag6lP7zc+7K6/313b2VnZ2Xq7ubm8sfFmY/3V1tqLtde/
vX1xb/Xl3fWXi68fLfxyZfjaTMvl8YaZXnl/nahbwekp5/RX8vsreH3lrE55
/NGiGIDscF5EY2744Twy+M7NspiOEvpAraA6k1TI82ktZnQdTGorS5zuKFBV
CUr5/nHuhgxfsxIeYaAq+Xz3gYlG8VRThkrBOpITVS8m1qeH1KQGVgsDqlIC
AC9eOFwQieCSrHMZLqVCn6OltKFa7ky7RL3O5CHeSC1nqDpRVZHQWURpziU2
iAm1Kd9+CBZ6g3CeG40EZTAjwlZEsmH5GkW76NA8DICz0slIfogVw8eY4QMT
hCAyopzF0ZhkEooVhGAFIlhBSIqHeTgWFuhk5GNvgN+vj4XrOFlqokw1HGDa
Tua6aFNtR5gW1lrXA64L3JcYghTHY3MY7nK+T7UkuLUoeqCGqd7bsU30o3qX
85zTRyXnenKnjqR2ytU3JLtL4qaPpM62ZZzvyrnQnQs62hWVbPFE+b1TVQ8v
1j+83Pjg0uG75+t/Ptfw4NLRpdtDq/enPn/a+vRx8+OHzd3d9Xc761vbq5tb
Kxuby1tbyxvrL9bePl1783Dl1d03z268eHDh9zun7l8dujHTMtlZ1K0UNhcm
tsvZfRXJw9UigKynlN4FfAdUQu9VJKqU3IFqQWdpYkdp4lijeLw5u7dKoKpJ
OX4kW1WbMtddWJkeKo52aCuine6QnjwsPnk4faJJ3JhNrhWHVokCa9KC6sWh
QEqhfykXn8/CSRIwqTGoXBZOHOeQw3AtF/n3Klmj9QLAa7xJ+O1pOvbJRsGg
MrFFGl4v9gdD1kG+OzhWcN0P0JxyY+zz4h0yo+y4AWbxOH2ys3a8hwHTD5YU
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
dv75eePLh9WP797ubr1+t/nq/fYbcNxaW1p98+T10q9LT+8+fXT76YObz3+9
vHR//undc49uz96/OX3n6vjtS2O3Lo5enOk5N9ExOdgwcLSirS6/tkRUns8t
zkpkRnjSibi4AKcIPDIQY4m3M3aD62OsdJ0t9wI5mmujTDXBRQvXh1jrqUXx
s6KHIpLjXCSJXkDCOFcGERFDsEwIsQWfM0nIpEg0+DCT5V0gDCpOI2YxPHMT
8XksLynbO58D+p03OM1heoJiBcQKsWUG2dAIFjFeJpHu35OwBhQfsyBXqA9a
J8zdhBXuIIxzTyQ5RnpbB7ua2htDLLQhDjANr/1Qd7ieI0wTBdMy1IZAdSDG
uhBTPQ2YnoaZLhDEbC8EZ2vki4L5O5iSPazZRAdmMFIQga5ICwWJsSItANi/
T8keOSSYac8cPyKa685ZGC66AXgNH7h2XD7TIT7dJRlvEc50ZEy2pKlqOKpa
7ume/Euj5ecHSy4Mld2YrPvPf/4H6O/N6P9+efnPv/75159//O//fPnfvz7+
588P//7X+7/+ePfn151/fdn65+fNPz5tAH39uP7lw9rn96ufdlcAyk87y7tr
zz6sPf24/uzTxu+fN58Dfd1aAgKn4PN3y4+3Xj1YW7r79uni68e3Xj+6+fvP
F5/8dO7BtVOLF8auneq/cKLr9FDrTH9TR01hY4mkIodXImEViZnSZGoaPSyJ
4h0bhKSGIJnhaBbZiUFCxQbakvCwYDejcLxZKM7YHwP1QusCEZwNQrBGEXiz
OII11V8teqAtiNlJ4WhBlLOQ4gLyADMYAY7g83gCmK3MInDGRLfvA5wNwjxh
UX7WJLyZn6OBN1o/FGceCxquCwyL0AVXzg+6EGAxzA864KJCmWub6UNM9TVM
9CEmehCYHsRCX9PKQBMOBdeYppP5XkAWVAYwtUV7mfPJ6Pwkby7RRhKnfian
rZiqquKMHU4FRptoTjt7TDo/KDvTm3OmJ/v4Yf5YE/94I3e8JWWuN2/sSOrY
EdGZY7KFb7z+3i/m/wCoydKG
     "], {{0, 109}, {144, 0}}, {0, 255},
     ColorFunction->RGBColor],
    BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
    Selectable->False],
   BaseStyle->"ImageGraphics",
   ImageSizeRaw->{144, 109},
   PlotRange->{{0, 144}, {0, 109}},
   ImageCache->GraphicsData["CompressedBitmap", "\<\
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
tQrmMwklkM7z/w+zakS1\
\>"]], "2"]], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"5", "!"}]], "Input"],

Cell[BoxData["120"], "Output"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"fac", "[", "n_", "]"}], ":=", 
  RowBox[{"n", "*", 
   RowBox[{"fac", "[", 
    RowBox[{"n", "-", "1"}], "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"fac", "[", "0", "]"}], ":=", "1"}]}], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"fac", "[", "5", "]"}]], "Input"],

Cell[BoxData["120"], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"fac", "[", "0.3", "]"}]], "Input"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"$RecursionLimit", "::", "reclim"}], "MessageName"], ":", 
  " ", "\<\"Recursion depth of \[NoBreak]\\!\\(1024\\)\[NoBreak] exceeded. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/$RecursionLimit/reclim\\\", ButtonNote -> \
\\\"$RecursionLimit::reclim\\\"]\\)\"\>"}]], "Message", "MSG"],

Cell[BoxData[
 RowBox[{"Hold", "[", 
  RowBox[{"fac", "[", 
   RowBox[{
    RowBox[{"-", "1021.7`"}], "-", "1"}], "]"}], "]"}]], "Output"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", "\[IndentingNewLine]", 
  "\[IndentingNewLine]"}]], "Input"],

Cell[TextData[{
 "Do function ",
 "MySquare",
 " for ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["x", "2"], TraditionalForm]]]
}], "SmallText"],

Cell["Do factorial", "SmallText"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell["Restricting the Match of a Pattern", "Subsection"],

Cell[TextData[{
 "A pattern of the form ",
 StyleBox["var_h", "Input"],
 " will only match expressions whose head is ",
 StyleBox["h", "Input"],
 "."
}], "Text"],

Cell[BoxData[{
 RowBox[{"ClearAll", "[", "fac", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"fac", "[", "n_Integer", "]"}], "/;", 
   RowBox[{"n", "\[GreaterEqual]", "0"}]}], ":=", 
  RowBox[{"n", "*", 
   RowBox[{"fac", "[", 
    RowBox[{"n", "-", "1"}], "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"fac", "[", "0", "]"}], ":=", "1"}]}], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"fac", "[", "5", "]"}]], "Input"],

Cell[BoxData["120"], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Head", " ", "@", " ", "\"\<blah\>\""}]], "Input"],

Cell[BoxData["String"], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Head", " ", "@", " ", "3"}]], "Input"],

Cell[BoxData["Integer"], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"fac", "[", "6", "]"}], "=", "2"}]], "Input"],

Cell[BoxData["2"], "Output"]
}, Open  ]],

Cell["\<\
  Evaluate our factorial for ' a', and then restrict to just _Integer\
\>", "SmallText"],

Cell[TextData[{
 "A pattern of the form ",
 StyleBox["pat /; expression", "Input"],
 " will only match when expression evaluates to ",
 StyleBox["True", "Input"],
 "."
}], "Text"],

Cell["\<\
  Restrict our factorial to only fire when the argument is >= 0.\
\>", "SmallText"],

Cell["\<\
  ClearAll[factorial]
factorial[0] = 1
factorial[n_Integer] /; n >= 0 := n factorial[n - 1]\
\>", "SmallText"],

Cell[TextData[{
 "A pattern of the form ",
 StyleBox["pat ? func", "Input"],
 " will only match when ",
 StyleBox["func", "Input"],
 " applied to the match evaluates to ",
 StyleBox["True", "Input"],
 "."
}], "Text"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"foo", "[", 
   RowBox[{"x_", "?", "EvenQ"}], "]"}], ":=", 
  SuperscriptBox["x", "2"]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"foo", "[", 
   RowBox[{"x_", "?", "OddQ"}], "]"}], ":=", 
  RowBox[{"-", "x"}]}]}], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"foo", "[", "4", "]"}]], "Input"],

Cell[BoxData["16"], "Output"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", "\[IndentingNewLine]", 
  "\[IndentingNewLine]"}]], "Input"],

Cell["Do even is squared, odd is negated", "SmallText"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell["Boolean functions", "Subsection"],

Cell[TextData[{
 "Many of the functions in ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " which return a boolean value end in the letter 'Q'. Eg ",
 ButtonBox["EvenQ",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/EvenQ"],
 ", ",
 ButtonBox["OddQ",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/OddQ"],
 ", ",
 ButtonBox["AtomQ",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/AtomQ"],
 ", ",
 ButtonBox["NumberQ",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/NumberQ"],
 ", ",
 ButtonBox["SameQ",
  BaseStyle->"Hyperlink",
  ButtonData->{"SameQ", None}],
 ", ",
 ButtonBox["MatchQ",
  BaseStyle->"Hyperlink",
  ButtonData->{"MatchQ", None}],
 ", ",
 ButtonBox["FreeQ",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/FreeQ"],
 "."
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Length", "@", 
  RowBox[{"Names", "@", "\"\<System`*\>\""}]}]], "Input"],

Cell[BoxData["5308"], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatchQ", "[", 
  RowBox[{
   RowBox[{"b", "[", 
    RowBox[{
     SuperscriptBox["x", "4"], ",", "y", ",", "z"}], "]"}], ",", 
   RowBox[{"_", "[", 
    RowBox[{
     SuperscriptBox["x", 
      RowBox[{"_", "?", "EvenQ"}]], ",", "_", ",", "_"}], "]"}]}], 
  "]"}]], "Input"],

Cell[BoxData["True"], "Output"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Pattern matching and FullForm", "Subsection"],

Cell["You frequently need to use FullForm to diagnose problems", "Text"],

Cell[BoxData[
 RowBox[{
  RowBox[{"fud", "[", 
   FractionBox["a_", "b_"], "]"}], ":=", 
  RowBox[{"bob", "[", 
   RowBox[{"a", ",", "b"}], "]"}]}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"fud", "[", 
   RowBox[{"Rational", "[", 
    RowBox[{"a_", ",", "b_"}], "]"}], "]"}], ":=", 
  RowBox[{"bob", "[", 
   RowBox[{"a", ",", "b"}], "]"}]}]], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"fud", "[", 
  FractionBox["w", "t"], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"bob", "[", 
  RowBox[{"w", ",", "t"}], "]"}]], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"fud", "[", 
  FractionBox["2", "3"], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"bob", "[", 
  RowBox[{"2", ",", "3"}], "]"}]], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatchQ", "[", 
  RowBox[{
   FractionBox["2", "3"], ",", 
   FractionBox["a_", "b_"]}], "]"}]], "Input"],

Cell[BoxData["False"], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"a", "/", "b"}], "//", "FullForm"}]], "Input"],

Cell[BoxData[
 TagBox[
  StyleBox[
   RowBox[{"Times", "[", 
    RowBox[{"a", ",", 
     RowBox[{"Power", "[", 
      RowBox[{"b", ",", 
       RowBox[{"-", "1"}]}], "]"}]}], "]"}],
   ShowSpecialCharacters->False,
   ShowStringCharacters->True,
   NumberMarks->True],
  FullForm]], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  FractionBox["2", "3"], "//", "FullForm"}]], "Input"],

Cell[BoxData[
 TagBox[
  StyleBox[
   RowBox[{"Rational", "[", 
    RowBox[{"2", ",", "3"}], "]"}],
   ShowSpecialCharacters->False,
   ShowStringCharacters->True,
   NumberMarks->True],
  FullForm]], "Output"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Do", " ", 
  RowBox[{"MatchQ", "[", 
   RowBox[{
    FractionBox["1", "4"], ",", 
    FractionBox["a_", "b_"]}], "]"}]}]], "SmallText"],

Cell[TextData[{
 "Pattern matching is a ",
 StyleBox["structural",
  FontWeight->"Bold"],
 " matching and not a ",
 StyleBox["semantic",
  FontWeight->"Bold"],
 " matching."
}], "Text"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell["Rules", "Section"],

Cell[TextData[{
 "A rule is of the form lhs \[Rule] rhs and using rules we can perform \
replacements. Replace has the short form ",
 StyleBox["/.", "Input"]
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"foo", "[", 
   RowBox[{
    RowBox[{"bar", "[", "x", "]"}], ",", 
    SuperscriptBox["x", "2"], ",", 
    RowBox[{"g", "[", "x", "]"}]}], "]"}], "/.", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"Power", "\[Rule]", "\[Beta]"}], ",", 
    RowBox[{"x", "\[Rule]", "k"}]}], "}"}]}]], "Input"],

Cell[BoxData[
 RowBox[{"foo", "[", 
  RowBox[{
   RowBox[{"bar", "[", "k", "]"}], ",", 
   RowBox[{"\[Beta]", "[", 
    RowBox[{"k", ",", "2"}], "]"}], ",", 
   RowBox[{"g", "[", "k", "]"}]}], "]"}]], "Output"]
}, Open  ]],

Cell["Add Power->h", "SmallText"],

Cell["Mention Solve result returns rules", "SmallText"],

Cell["\<\
  :> (RuleDelayed) will do its evaluation when the rule is applied like := \
(SetDelayed)\
\>", "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"x", ",", "x", ",", "x", ",", "x"}], "}"}], "/.", 
  RowBox[{"x", "->", 
   RowBox[{"RandomReal", "[", "]"}]}]}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.9103490673104522`", ",", "0.9103490673104522`", ",", 
   "0.9103490673104522`", ",", "0.9103490673104522`"}], "}"}]], "Output"]
}, Open  ]],

Cell["Change above to use \[Rule]", "SmallText"],

Cell["\<\
  Rules can contain patterns and are of the form pattern \[Rule] expression. \
Just like in functions we include the pattern variables on the lhs and then \
the naked expressions on the rhs.\
\>", "Text"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"ClearAll", "[", "fac", "]"}], "\[IndentingNewLine]", 
 RowBox[{"facRule", " ", "=", " ", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     RowBox[{"fac", "[", "0", "]"}], "\[RuleDelayed]", "1"}], ",", 
    RowBox[{
     RowBox[{"fac", "[", "n_", "]"}], "\[RuleDelayed]", 
     RowBox[{"n", " ", 
      RowBox[{"fac", "[", 
       RowBox[{"n", "-", "1"}], "]"}]}]}]}], "}"}]}]}], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"fac", "[", "0", "]"}], "\[RuleDelayed]", "1"}], ",", 
   RowBox[{
    RowBox[{"fac", "[", "n_", "]"}], "\[RuleDelayed]", 
    RowBox[{"n", " ", 
     RowBox[{"fac", "[", 
      RowBox[{"n", "-", "1"}], "]"}]}]}]}], "}"}]], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"fac", "[", "5", "]"}], "//.", "facRule"}]], "Input"],

Cell[BoxData["120"], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"5", " ", 
   RowBox[{"fac", "[", "4", "]"}]}], "/.", "facRule"}]], "Input"],

Cell[BoxData[
 RowBox[{"20", " ", 
  RowBox[{"fac", "[", "3", "]"}]}]], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"20", " ", 
   RowBox[{"fac", "[", "3", "]"}]}], "/.", "facRule"}]], "Input"],

Cell[BoxData[
 RowBox[{"60", " ", 
  RowBox[{"fac", "[", "2", "]"}]}]], "Output"]
}, Open  ]],

Cell["\<\
  We can use replace repeated to repeatedly apply a set of rules until the \
result can no longer change.\
\>", "Text"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell["Pure Functions", "Section"],

Cell["\<\
  A pure function (or lambda function in other terminology) can be thought of \
as a small unnamed utility function.\
\>", "Text"],

Cell[BoxData[
 RowBox[{
  RowBox[{"MySquare", "[", "x_", "]"}], ":=", 
  SuperscriptBox["x", "2"]}]], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MySquare", " ", "/@", " ", 
  RowBox[{"{", 
   RowBox[{"2", ",", "f", ",", 
    RowBox[{"Sin", "[", "x", "]"}]}], "}"}]}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"4", ",", 
   SuperscriptBox["f", "2"], ",", 
   SuperscriptBox[
    RowBox[{"Sin", "[", "x", "]"}], "2"]}], "}"}]], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{"a", "\[Function]", 
    SuperscriptBox["a", "2"]}], ")"}], " ", "/@", " ", 
  RowBox[{"{", 
   RowBox[{"2", ",", "f", ",", 
    RowBox[{"Sin", "[", "x", "]"}]}], "}"}]}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"4", ",", 
   SuperscriptBox["f", "2"], ",", 
   SuperscriptBox[
    RowBox[{"Sin", "[", "x", "]"}], "2"]}], "}"}]], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   SuperscriptBox["#", "2"], "&"}], " ", "/@", " ", 
  RowBox[{"{", 
   RowBox[{"2", ",", "f", ",", 
    RowBox[{"Sin", "[", "x", "]"}]}], "}"}]}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"4", ",", 
   SuperscriptBox["f", "2"], ",", 
   SuperscriptBox[
    RowBox[{"Sin", "[", "x", "]"}], "2"]}], "}"}]], "Output"]
}, Open  ]],

Cell[TextData[{
 "Use ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    RowBox[{"a", "\[Function]", 
     SuperscriptBox["a", "2"]}], ")"}], TraditionalForm]]]
}], "SmallText"],

Cell[TextData[{
 "Use ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    SuperscriptBox["#", "2"], ")"}], TraditionalForm]]]
}], "SmallText"],

Cell["RootReduce", "SmallText"],

Cell[CellGroupData[{

Cell["Pure functions of more than one variable", "Subsection"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{
    RowBox[{"foo", "[", 
     RowBox[{
      SqrtBox["#2"], ",", 
      FractionBox[
       RowBox[{"#1", "+", "#2"}], "3"]}], "]"}], "&"}], ")"}], "[", 
  RowBox[{"w", ",", "t"}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"foo", "[", 
  RowBox[{
   SqrtBox["t"], ",", 
   FractionBox[
    RowBox[{"t", "+", "w"}], "3"]}], "]"}]], "Output"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Task: sort a list on the second argument of the items.", "Subsection"],

Cell[BoxData[
 RowBox[{"ans", "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"f", "[", 
     RowBox[{"1", ",", "4"}], "]"}], ",", 
    RowBox[{"f", "[", 
     RowBox[{"4", ",", "2"}], "]"}], ",", 
    RowBox[{"h", "[", 
     RowBox[{"6", ",", "1"}], "]"}], ",", 
    RowBox[{"g", "[", 
     RowBox[{"2", ",", "3"}], "]"}]}], "}"}]}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"f", "[", 
    RowBox[{"1", ",", "4"}], "]"}], ",", 
   RowBox[{"f", "[", 
    RowBox[{"4", ",", "2"}], "]"}], ",", 
   RowBox[{"h", "[", 
    RowBox[{"6", ",", "1"}], "]"}], ",", 
   RowBox[{"g", "[", 
    RowBox[{"2", ",", "3"}], "]"}]}], "}"}]], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SortBy", "[", 
  RowBox[{"ans", ",", 
   RowBox[{
    RowBox[{"#", "[", 
     RowBox[{"[", "2", "]"}], "]"}], "&"}]}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"h", "[", 
    RowBox[{"6", ",", "1"}], "]"}], ",", 
   RowBox[{"f", "[", 
    RowBox[{"4", ",", "2"}], "]"}], ",", 
   RowBox[{"g", "[", 
    RowBox[{"2", ",", "3"}], "]"}], ",", 
   RowBox[{"f", "[", 
    RowBox[{"1", ",", "4"}], "]"}]}], "}"}]], "Output"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"sortFunction", "[", 
   RowBox[{
    RowBox[{"_", "[", 
     RowBox[{"_", ",", "a_"}], "]"}], ",", 
    RowBox[{"_", "[", 
     RowBox[{"_", ",", "b_"}], "]"}]}], "]"}], ":=", 
  RowBox[{"b", ">", "a"}]}]], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Sort", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"f", "[", 
      RowBox[{"1", ",", "4"}], "]"}], ",", 
     RowBox[{"f", "[", 
      RowBox[{"4", ",", "2"}], "]"}], ",", 
     RowBox[{"h", "[", 
      RowBox[{"6", ",", "1"}], "]"}], ",", 
     RowBox[{"g", "[", 
      RowBox[{"2", ",", "3"}], "]"}]}], "}"}], ",", "sortFunction"}], 
  "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"h", "[", 
    RowBox[{"6", ",", "1"}], "]"}], ",", 
   RowBox[{"f", "[", 
    RowBox[{"4", ",", "2"}], "]"}], ",", 
   RowBox[{"g", "[", 
    RowBox[{"2", ",", "3"}], "]"}], ",", 
   RowBox[{"f", "[", 
    RowBox[{"1", ",", "4"}], "]"}]}], "}"}]], "Output"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
  "\[IndentingNewLine]"}]], "Input"],

Cell["Define SortFunc[_[_, a_], _[_, b_]] := a < b", "SmallText"],

Cell["\<\
  Sort[{f[1, 4], f[4, 1], g[2, 3], h[6, 1]}, #1[[2]] <= #2[[2]] &]\
\>", "SmallText"],

Cell["SortBy[{f[1, 4], f[4, 1], g[2, 3], h[6, 1]}, #[[2]] &]", "SmallText"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell["Other Structuring commands", "Section"],

Cell[CellGroupData[{

Cell["Inner", "Subsection"],

Cell["\<\
  Task: multiply the elements of two lists together. Then generalize to doing \
a general operation not just multiplication.\
\>", "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Inner", "[", 
  RowBox[{"Times", ",", 
   RowBox[{"{", 
    RowBox[{"a", ",", "b", ",", "c", ",", "d"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"w", ",", "x", ",", "y", ",", "z"}], "}"}], ",", "Plus"}], 
  "]"}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"a", " ", "w"}], "+", 
  RowBox[{"b", " ", "x"}], "+", 
  RowBox[{"c", " ", "y"}], "+", 
  RowBox[{"d", " ", "z"}]}]], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Outer", "[", 
  RowBox[{"Dot", ",", 
   RowBox[{"{", 
    RowBox[{"a", ",", "b", ",", "c", ",", "d"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"w", ",", "x", ",", "y", ",", "z"}], "}"}]}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"a", ".", "w"}], ",", 
     RowBox[{"a", ".", "x"}], ",", 
     RowBox[{"a", ".", "y"}], ",", 
     RowBox[{"a", ".", "z"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"b", ".", "w"}], ",", 
     RowBox[{"b", ".", "x"}], ",", 
     RowBox[{"b", ".", "y"}], ",", 
     RowBox[{"b", ".", "z"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"c", ".", "w"}], ",", 
     RowBox[{"c", ".", "x"}], ",", 
     RowBox[{"c", ".", "y"}], ",", 
     RowBox[{"c", ".", "z"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"d", ".", "w"}], ",", 
     RowBox[{"d", ".", "x"}], ",", 
     RowBox[{"d", ".", "y"}], ",", 
     RowBox[{"d", ".", "z"}]}], "}"}]}], "}"}]], "Output"]
}, Open  ]],

Cell["Inner[Times, {a, b, c, d}, {w, x, y, z}]", "SmallText"],

Cell[TextData[{
 "Note there is ",
 ButtonBox["Outer",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Outer"],
 " as well which will act as an \"outer\" product."
}], "Text"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Cases", "Subsection"],

Cell[TextData[{
 StyleBox["Cases[expr, pattern]", "Input"],
 " picks out all of the parts of expr which match ",
 StyleBox["pattern", "Input"],
 "."
}], "Text"],

Cell["Task: pick the even powered terms out of a list.", "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Cases", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      SuperscriptBox["x", "2"], "+", "3"}], ",", 
     SuperscriptBox["x", "3"], ",", 
     SuperscriptBox["x", "6"], ",", 
     SuperscriptBox["y", "9"], ",", 
     SuperscriptBox["x", "7"]}], "}"}], ",", 
   RowBox[{"a_", "/;", 
    RowBox[{"MyFunctionQ", "[", "a", "]"}]}]}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"3", "+", 
   SuperscriptBox["x", "2"]}], "}"}]], "Output"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Cases", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     SuperscriptBox["x", "2"], ",", 
     SuperscriptBox["x", "3"], ",", 
     SuperscriptBox["y", "6"], ",", 
     SuperscriptBox["z", "7"]}], "}"}], ",", 
   SuperscriptBox["x_", 
    RowBox[{"_", "?", "EvenQ"}]]}], "]"}]], "SmallText"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Select", "Subsection"],

Cell["Task: pick the even powered terms out of a list.", "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Select", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     SuperscriptBox["x", "2"], ",", 
     SuperscriptBox["x", "3"], ",", 
     SuperscriptBox["x", "6"], ",", 
     SuperscriptBox["y", "9"], ",", 
     SuperscriptBox["x", "7"]}], "}"}], ",", 
   RowBox[{
    RowBox[{"OddQ", "@", 
     RowBox[{"Last", "@", "#"}]}], "&"}]}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   SuperscriptBox["x", "3"], ",", 
   SuperscriptBox["y", "9"], ",", 
   SuperscriptBox["x", "7"]}], "}"}]], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"EvenQ", "/@", 
  RowBox[{"Last", "/@", 
   RowBox[{"{", 
    RowBox[{
     SuperscriptBox["x", "2"], ",", 
     SuperscriptBox["x", "3"], ",", 
     SuperscriptBox["x", "6"], ",", 
     SuperscriptBox["y", "9"], ",", 
     SuperscriptBox["x", "7"]}], "}"}]}]}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"True", ",", "False", ",", "True", ",", "False", ",", "False"}], 
  "}"}]], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullForm", "@", 
  RowBox[{"{", 
   RowBox[{
    SuperscriptBox["x", "2"], ",", 
    SuperscriptBox["x", "3"], ",", 
    SuperscriptBox["x", "6"], ",", 
    SuperscriptBox["y", "9"], ",", 
    SuperscriptBox["x", "7"]}], "}"}]}]], "Input"],

Cell[BoxData[
 TagBox[
  StyleBox[
   RowBox[{"List", "[", 
    RowBox[{
     RowBox[{"Power", "[", 
      RowBox[{"x", ",", "2"}], "]"}], ",", 
     RowBox[{"Power", "[", 
      RowBox[{"x", ",", "3"}], "]"}], ",", 
     RowBox[{"Power", "[", 
      RowBox[{"x", ",", "6"}], "]"}], ",", 
     RowBox[{"Power", "[", 
      RowBox[{"y", ",", "9"}], "]"}], ",", 
     RowBox[{"Power", "[", 
      RowBox[{"x", ",", "7"}], "]"}]}], "]"}],
   ShowSpecialCharacters->False,
   ShowStringCharacters->True,
   NumberMarks->True],
  FullForm]], "Output"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Select", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     SuperscriptBox["x", "2"], ",", 
     SuperscriptBox["x", "3"], ",", 
     SuperscriptBox["y", "6"], ",", 
     SuperscriptBox["z", "7"]}], "}"}], ",", 
   RowBox[{
    RowBox[{"EvenQ", "[", 
     RowBox[{"Last", "[", "#", "]"}], "]"}], "&"}]}], "]"}]], "SmallText"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Length", "Subsection"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Length", " ", "@", " ", 
  RowBox[{"{", 
   RowBox[{"a", ",", "b", ",", "c", ",", "d"}], "}"}]}]], "Input"],

Cell[BoxData["4"], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Length", " ", "@", " ", 
  RowBox[{"bob", "[", 
   RowBox[{"a", ",", "b", ",", "c", ",", "d"}], "]"}]}]], "Input"],

Cell[BoxData["4"], "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell["Multi Argument Patterns", "Section"],

Cell["A pattern of the form x__ will match one or more arguments.", "Text"],

Cell["\<\
  A pattern of the form x___ will match zero or more arguments.\
\>", "Text"],

Cell["Task : sort the elements of a list", "Text"],

Cell[BoxData[
 RowBox[{
  RowBox[{"f", "[", 
   RowBox[{"a_", ",", "___", ",", "a_"}], "]"}], ":=", 
  RowBox[{"g", "[", 
   RowBox[{"a", ",", "b"}], "]"}]}]], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"f", "[", 
  RowBox[{"w", ",", "w"}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"g", "[", 
  RowBox[{"w", ",", "b"}], "]"}]], "Output"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"ClearAll", " ", "@", " ", "MySort"}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"MySort", "[", 
    RowBox[{"l___", ",", "a_", ",", "b_", ",", "r___"}], "]"}], "/;", 
   RowBox[{"b", "<", "a"}]}], ":=", 
  RowBox[{"MySort", "[", 
   RowBox[{"l", ",", "b", ",", "a", ",", "r"}], "]"}]}]], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MySort", "[", 
  RowBox[{
  "1", ",", "3", ",", "5", ",", "7", ",", "3", ",", "2", ",", "6", ",", "8", 
   ",", "9", ",", "3", ",", "3", ",", "5"}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"MySort", "[", 
  RowBox[{
  "1", ",", "2", ",", "3", ",", "3", ",", "3", ",", "3", ",", "5", ",", "5", 
   ",", "6", ",", "7", ",", "8", ",", "9"}], "]"}]], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MySort", "@@", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"RandomInteger", "[", 
     RowBox[{"{", 
      RowBox[{"1", ",", "10"}], "}"}], "]"}], ",", 
    RowBox[{"{", "20", "}"}]}], "]"}]}]], "Input"],

Cell[BoxData[
 RowBox[{"MySort", "[", 
  RowBox[{
  "1", ",", "1", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "3", 
   ",", "3", ",", "3", ",", "4", ",", "5", ",", "6", ",", "6", ",", "6", ",", 
   "6", ",", "9", ",", "9", ",", "10", ",", "10"}], "]"}]], "Output"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
  "\[IndentingNewLine]", "\[IndentingNewLine]"}]], "Input"],

Cell["Do bubble sort", "SmallText"],

Cell[CellGroupData[{

Cell["The FullForms of Patterns", "Subsection"],

Cell["\<\
  Since everything is an expression, What is the corresponding fullform's of \
some of these patterns.\
\>", "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullForm", "[", "x_", "]"}]], "Input"],

Cell[BoxData[
 TagBox[
  StyleBox[
   RowBox[{"Pattern", "[", 
    RowBox[{"x", ",", 
     RowBox[{"Blank", "[", "]"}]}], "]"}],
   ShowSpecialCharacters->False,
   ShowStringCharacters->True,
   NumberMarks->True],
  FullForm]], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullForm", "[", "x_Integer", "]"}]], "Input"],

Cell[BoxData[
 TagBox[
  StyleBox[
   RowBox[{"Pattern", "[", 
    RowBox[{"x", ",", 
     RowBox[{"Blank", "[", "Integer", "]"}]}], "]"}],
   ShowSpecialCharacters->False,
   ShowStringCharacters->True,
   NumberMarks->True],
  FullForm]], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullForm", "[", 
  RowBox[{"x_Integer", "/;", 
   RowBox[{"x", ">", "0"}]}], "]"}]], "Input"],

Cell[BoxData[
 TagBox[
  StyleBox[
   RowBox[{"Condition", "[", 
    RowBox[{
     RowBox[{"Pattern", "[", 
      RowBox[{"x", ",", 
       RowBox[{"Blank", "[", "Integer", "]"}]}], "]"}], ",", 
     RowBox[{"Greater", "[", 
      RowBox[{"x", ",", "0"}], "]"}]}], "]"}],
   ShowSpecialCharacters->False,
   ShowStringCharacters->True,
   NumberMarks->True],
  FullForm]], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"%", "/.", 
  RowBox[{"Condition", "\[Rule]", "Foo"}]}]], "Input"],

Cell[BoxData[
 RowBox[{"Foo", "[", 
  RowBox[{"x_Integer", ",", 
   RowBox[{"x", ">", "0"}]}], "]"}]], "Output"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"FullForm", "[", 
  RowBox[{"x_Integer", "?", "EvenQ"}], "]"}]], "Input"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell["Summary: Core Language", "Section"],

Cell[CellGroupData[{

Cell["Everything is an expression", "Item",
 ShowGroupOpener->False],

Cell["Rules applied in order of more specific to more general", "Item",
 ShowGroupOpener->False],

Cell[TextData[{
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " uses an infinite evaluation model"
}], "Item",
 ShowGroupOpener->False],

Cell[TextData[{
 "Match anything ",
 StyleBox["var_",
  FontSlant->"Italic"]
}], "Item",
 ShowGroupOpener->False],

Cell[TextData[{
 "Match anything with head h ",
 StyleBox["var_h",
  FontSlant->"Italic"]
}], "Item",
 ShowGroupOpener->False],

Cell[TextData[{
 "Match one or more things ",
 StyleBox["var__",
  FontSlant->"Italic"]
}], "Item",
 ShowGroupOpener->False],

Cell[TextData[{
 "Match zero or more things ",
 StyleBox["var___",
  FontSlant->"Italic"]
}], "Item",
 ShowGroupOpener->False],

Cell["ReplaceAll (/.)", "Item",
 ShowGroupOpener->False],

Cell["Map (/@)", "Item",
 ShowGroupOpener->False],

Cell["Apply (@@)", "Item",
 ShowGroupOpener->False],

Cell["Condition (/;)", "Item",
 ShowGroupOpener->False],

Cell["PatternTest (?)", "Item",
 ShowGroupOpener->False],

Cell["= vs :=", "Item",
 ShowGroupOpener->False],

Cell["\[Rule] vs \[RuleDelayed]", "Item",
 ShowGroupOpener->False],

Cell["Pure functions (#^2 &)", "Item",
 ShowGroupOpener->False]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell["StyleSheets", "Section"],

Cell["\<\
  Instead of changing individual words with different styles, add styles to \
the style sheet. Then if you ever need to, you can change a style in the \
style sheet and all uses of the style will change uniformly in the notebook.\
\>", "Text"],

Cell["Add styles here.", "SmallText"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Option Inspector", "Section"],

Cell["\<\
  You can use the option inspector to change settings at a seep level.\
\>", "Text"]
}, Open  ]]
}, Open  ]]
},
AutoGeneratedPackage->None,
ScreenStyleEnvironment->"SlideShow",
WindowSize->{1280, 852},
WindowMargins->{{Automatic, 619}, {972, Automatic}},
ShowSelection->True,
InputAliases->{"intt" -> RowBox[{"\[Integral]", 
     RowBox[{"\[SelectionPlaceholder]", 
       RowBox[{"\[DifferentialD]", "\[Placeholder]"}]}]}], "dintt" -> 
  RowBox[{
     SubsuperscriptBox[
     "\[Integral]", "\[SelectionPlaceholder]", "\[Placeholder]"], 
     RowBox[{"\[Placeholder]", 
       RowBox[{"\[DifferentialD]", "\[Placeholder]"}]}]}], "sumt" -> RowBox[{
     UnderoverscriptBox["\[Sum]", 
      RowBox[{"\[SelectionPlaceholder]", "=", "\[Placeholder]"}], 
      "\[Placeholder]"], "\[Placeholder]"}], "prodt" -> RowBox[{
     UnderoverscriptBox["\[Product]", 
      RowBox[{"\[SelectionPlaceholder]", "=", "\[Placeholder]"}], 
      "\[Placeholder]"], "\[Placeholder]"}], "dt" -> RowBox[{
     SubscriptBox["\[PartialD]", "\[Placeholder]"], " ", 
     "\[SelectionPlaceholder]"}], "notation" -> RowBox[{"Notation", "[", 
     RowBox[{
       TemplateBox[{"\[SelectionPlaceholder]"}, "NotationTemplateTag"], " ", 
       "\[DoubleLongLeftRightArrow]", " ", 
       TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], "]"}], 
  "notation>" -> RowBox[{"Notation", "[", 
     RowBox[{
       TemplateBox[{"\[SelectionPlaceholder]"}, "NotationTemplateTag"], " ", 
       "\[DoubleLongRightArrow]", " ", 
       TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], "]"}], 
  "notation<" -> RowBox[{"Notation", "[", 
     RowBox[{
       TemplateBox[{"\[SelectionPlaceholder]"}, "NotationTemplateTag"], " ", 
       "\[DoubleLongLeftArrow]", " ", 
       TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], "]"}], 
  "symb" -> RowBox[{"Symbolize", "[", 
     TemplateBox[{"\[SelectionPlaceholder]"}, "NotationTemplateTag"], "]"}], 
  "infixnotation" -> RowBox[{"InfixNotation", "[", 
     RowBox[{
       TemplateBox[{"\[SelectionPlaceholder]"}, "NotationTemplateTag"], ",", 
       "\[Placeholder]"}], "]"}], "addia" -> RowBox[{"AddInputAlias", "[", 
     RowBox[{"\"\[SelectionPlaceholder]\"", "\[Rule]", 
       TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], "]"}], 
  "pattwraper" -> 
  TemplateBox[{"\[SelectionPlaceholder]"}, "NotationPatternTag"], 
  "madeboxeswraper" -> 
  TemplateBox[{"\[SelectionPlaceholder]"}, "NotationMadeBoxesTag"], "ket" -> 
  TemplateBox[{"\[SelectionPlaceholder]"}, "Ket"], "bra" -> 
  TemplateBox[{"\[SelectionPlaceholder]"}, "Bra"], "operator" -> 
  TemplateBox[{"\[SelectionPlaceholder]"}, "Operator"]},
Magnification:>1.5 Inherited,
FrontEndVersion->"10.1 for Mac OS X x86 (32-bit, 64-bit Kernel) (March 23, \
2015)",
StyleDefinitions->Notebook[{
   Cell[
    StyleData[StyleDefinitions -> "Default.nb"]], 
   Cell[
    StyleData[StyleDefinitions -> "PhysicsStyles.nb"]], 
   Cell[
    StyleData[
    All, "SlideShow", StyleDefinitions -> StyleData[All, "Presentation"]], 
    PageWidth -> WindowWidth, DockedCells -> 
    FEPrivate`FrontEndResource["FEExpressions", "SlideshowToolbar"], 
    ScrollingOptions -> {
     "PagewiseDisplay" -> True, "VerticalScrollRange" -> Fit}, 
    ShowCellBracket -> True, MenuSortingValue -> 1300], 
   Cell[
    CellGroupData[{
      Cell["Local Changes", "Subtitle"], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["SmallText"], CellMargins -> {{60, 10}, {7, 7}}, 
          LineSpacing -> {1, 3}, CounterIncrements -> "SmallText", FontSize -> 
          8, FontColor -> GrayLevel[0.7]], 
         Cell[
          StyleData["SmallText", "SlideShow"], 
          CellMargins -> {{60, 10}, {7, 7}}, LineSpacing -> {1, 3}, 
          CounterIncrements -> "SmallText", FontSize -> 10, FontColor -> 
          GrayLevel[0.7]]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell["Styles for Title and Section Cells", "Section"], 
         Cell[
          CellGroupData[{
            Cell["Section", "Subsection"], 
            Cell[
             CellGroupData[{
               Cell[
                StyleData["Section"], CellFrame -> {{0, 0}, {0, 0}}, 
                FontSlant -> "Plain"], 
               Cell[
                StyleData["Section", "SlideShow"], 
                CellFrame -> {{0, 0}, {0, 0}}]}, Closed]], 
            Cell[
             CellGroupData[{
               Cell[
                StyleData["Subsection"], CellDingbat -> None], 
               Cell[
                StyleData["Subsection", "SlideShow"], 
                CellFrame -> {{0, 0}, {0, 0}}, CellDingbat -> None]}, 
              Closed]], 
            Cell[
             CellGroupData[{
               Cell[
                StyleData["Subsubsection"], CellDingbat -> None, FontWeight -> 
                "Plain", FontColor -> GrayLevel[0.8]], 
               Cell[
                StyleData["Subsubsection", "SlideShow"], 
                CellFrame -> {{0, 0}, {0, 0}}, CellDingbat -> None]}, 
              Closed]], 
            Cell[
             CellGroupData[{
               Cell[
                StyleData["Subsubsubsection"], CellDingbat -> None, 
                FontWeight -> "Plain", FontColor -> GrayLevel[0.8]], 
               Cell[
                StyleData["Subsubsubsection", "SlideShow"], 
                CellFrame -> {{0, 0}, {0, 0}}, CellDingbat -> None]}, 
              Closed]]}, Open]]}, Open]]}, Open]]}, Visible -> False, 
  FrontEndVersion -> 
  "10.1 for Mac OS X x86 (32-bit, 64-bit Kernel) (March 23, 2015)", 
  StyleDefinitions -> "PrivateStylesheetFormatting.nb"]
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "SlideShowHeader"->{
  Cell[2099, 76, 64, 1, 1, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[2946, 114, 64, 1, 1, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[4083, 187, 64, 1, 1, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[4731, 222, 64, 1, 1, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[8251, 402, 64, 1, 1, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[12403, 583, 64, 1, 1, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[13544, 636, 64, 1, 1, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[18299, 746, 64, 1, 1, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[28585, 1158, 64, 1, 1, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[32575, 1324, 64, 1, 1, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[34962, 1429, 64, 1, 1, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[59601, 2173, 64, 1, 1, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[63537, 2342, 64, 1, 1, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[71667, 2688, 64, 1, 1, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[223214, 5402, 64, 1, 1, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[225785, 5522, 64, 1, 1, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[229463, 5703, 64, 1, 1, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[232730, 5841, 64, 1, 1, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[237886, 6064, 64, 1, 1, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[244005, 6322, 64, 1, 1, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[248064, 6494, 64, 1, 1, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[249558, 6573, 64, 1, 1, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"]},
 "Info3614924095-5275674"->{
  Cell[11404, 548, 88, 1, 83, "Print",
   CellTags->"Info3614924095-5275674"],
  Cell[11495, 551, 724, 20, 55, "Print",
   CellTags->"Info3614924095-5275674"]},
 "Info3614924699-8288244"->{
  Cell[29161, 1189, 76, 1, 83, "Print",
   CellTags->"Info3614924699-8288244"],
  Cell[29240, 1192, 740, 21, 55, "Print",
   CellTags->"Info3614924699-8288244"]},
 "Info3614924674-8288244"->{
  Cell[30211, 1231, 76, 1, 83, "Print",
   CellTags->"Info3614924674-8288244"],
  Cell[30290, 1234, 718, 20, 55, "Print",
   CellTags->"Info3614924674-8288244"]},
 "Info3614925140-4603666"->{
  Cell[60784, 2232, 78, 1, 83, "Print",
   CellTags->"Info3614925140-4603666"],
  Cell[60865, 2235, 790, 22, 55, "Print",
   CellTags->"Info3614925140-4603666"]},
 "Info3614925945-4603666"->{
  Cell[73055, 2752, 473, 11, 105, "Print",
   CellTags->"Info3614925945-4603666"],
  Cell[73531, 2765, 15867, 378, 105, "Print",
   CellTags->"Info3614925945-4603666"]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"SlideShowHeader", 255787, 6728},
 {"Info3614924095-5275674", 257769, 6773},
 {"Info3614924699-8288244", 257959, 6778},
 {"Info3614924674-8288244", 258151, 6783},
 {"Info3614925140-4603666", 258343, 6788},
 {"Info3614925945-4603666", 258535, 6793}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 213, 8, 307, "Title"],
Cell[796, 32, 92, 5, 160, "Text"],
Cell[CellGroupData[{
Cell[913, 41, 88, 1, 103, "Section"],
Cell[1004, 44, 1046, 26, 605, "Text"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[2099, 76, 64, 1, 1, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[2188, 81, 72, 1, 123, "Section"],
Cell[2263, 84, 157, 5, 120, "Text"],
Cell[2423, 91, 274, 8, 168, "Text"],
Cell[2700, 101, 197, 7, 120, "Text"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[2946, 114, 64, 1, 1, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[3035, 119, 26, 0, 124, "Section"],
Cell[3064, 121, 130, 5, 71, "Text"],
Cell[3197, 128, 56, 0, 71, "Text"],
Cell[3256, 130, 44, 0, 71, "Text"],
Cell[3303, 132, 94, 5, 71, "Text"],
Cell[3400, 139, 94, 5, 71, "Text"],
Cell[3497, 146, 94, 5, 71, "Text"],
Cell[3594, 153, 94, 5, 71, "Text"],
Cell[3691, 160, 94, 5, 71, "Text"],
Cell[3788, 167, 94, 5, 71, "Text"],
Cell[3885, 174, 149, 7, 71, "Text"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[4083, 187, 64, 1, 1, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[4172, 192, 37, 0, 124, "Section"],
Cell[4212, 194, 123, 3, 120, "Text"],
Cell[4338, 199, 60, 0, 71, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[4435, 204, 24, 0, 124, "Section"],
Cell[4462, 206, 29, 0, 71, "Text"],
Cell[4494, 208, 27, 0, 71, "Text"],
Cell[4524, 210, 27, 0, 71, "Text"],
Cell[4554, 212, 84, 2, 117, "Input"],
Cell[4641, 216, 41, 0, 71, "Text"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[4731, 222, 64, 1, 1, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[4820, 227, 50, 0, 124, "Section"],
Cell[CellGroupData[{
Cell[4895, 231, 49, 1, 71, "Input"],
Cell[4947, 234, 28, 0, 71, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[5012, 239, 58, 1, 71, "Input"],
Cell[5073, 242, 46, 0, 71, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[5156, 247, 62, 1, 71, "Input"],
Cell[5221, 250, 30, 0, 71, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[5288, 255, 96, 3, 71, "Input"],
Cell[5387, 260, 97, 3, 71, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[5521, 268, 152, 2, 94, "Subsection"],
Cell[5676, 272, 95, 2, 39, "SmallText"]
}, Open  ]],
Cell[CellGroupData[{
Cell[5808, 279, 37, 0, 94, "Subsection"],
Cell[5848, 281, 207, 6, 169, "Text"],
Cell[CellGroupData[{
Cell[6080, 291, 169, 5, 122, "Input"],
Cell[6252, 298, 110, 3, 71, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[6399, 306, 85, 3, 77, "Input"],
Cell[6487, 311, 59, 1, 71, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[6583, 317, 96, 2, 71, "Input"],
Cell[6682, 321, 86, 3, 77, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[6805, 329, 101, 2, 71, "Input"],
Cell[6909, 333, 91, 3, 77, "Output"]
}, Open  ]],
Cell[7015, 339, 121, 4, 72, "Text"],
Cell[7139, 345, 42, 0, 39, "SmallText"],
Cell[CellGroupData[{
Cell[7206, 349, 97, 2, 77, "Input"],
Cell[7306, 353, 59, 1, 71, "Output"]
}, Open  ]],
Cell[7380, 357, 104, 4, 72, "Text"],
Cell[7487, 363, 130, 4, 121, "Text"],
Cell[7620, 369, 104, 2, 39, "SmallText"],
Cell[CellGroupData[{
Cell[7749, 375, 127, 4, 77, "Input"],
Cell[7879, 381, 97, 3, 71, "Output"]
}, Open  ]],
Cell[7991, 387, 199, 8, 72, "Text"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[8251, 402, 64, 1, 1, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[8340, 407, 40, 0, 124, "Section"],
Cell[8383, 409, 62, 0, 39, "SmallText"],
Cell[8448, 411, 91, 2, 120, "Text"],
Cell[CellGroupData[{
Cell[8564, 417, 224, 7, 122, "Input"],
Cell[8791, 426, 229, 8, 103, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[9057, 439, 224, 7, 122, "Input"],
Cell[9284, 448, 229, 8, 103, "Output"]
}, Open  ]],
Cell[9528, 459, 107, 3, 84, "Input"],
Cell[CellGroupData[{
Cell[9660, 466, 224, 7, 122, "Input"],
Cell[9887, 475, 229, 8, 103, "Output"]
}, Open  ]],
Cell[10131, 486, 106, 3, 71, "Input"],
Cell[10240, 491, 47, 0, 71, "Text"],
Cell[10290, 493, 167, 5, 71, "Text"],
Cell[10460, 500, 113, 2, 71, "Input"],
Cell[10576, 504, 274, 10, 49, "SmallText"],
Cell[10853, 516, 55, 0, 71, "Text"],
Cell[10911, 518, 63, 0, 39, "SmallText"]
}, Open  ]],
Cell[CellGroupData[{
Cell[11011, 523, 35, 0, 124, "Section"],
Cell[CellGroupData[{
Cell[11071, 527, 55, 1, 71, "Input"],
Cell[11129, 530, 28, 0, 71, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[11194, 535, 61, 1, 71, "Input"],
Cell[11258, 538, 28, 0, 71, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[11323, 543, 56, 1, 71, "Input"],
Cell[CellGroupData[{
Cell[11404, 548, 88, 1, 83, "Print",
 CellTags->"Info3614924095-5275674"],
Cell[11495, 551, 724, 20, 55, "Print",
 CellTags->"Info3614924095-5275674"]
}, Open  ]]
}, Open  ]],
Cell[12246, 575, 52, 0, 39, "SmallText"],
Cell[12301, 577, 53, 0, 39, "SmallText"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[12403, 583, 64, 1, 1, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[12492, 588, 26, 0, 124, "Section"],
Cell[12521, 590, 225, 4, 168, "Text"],
Cell[12749, 596, 101, 2, 39, "SmallText"],
Cell[12853, 600, 50, 0, 71, "Text"],
Cell[CellGroupData[{
Cell[12928, 604, 103, 3, 79, "Input"],
Cell[13034, 609, 141, 4, 71, "Output"]
}, Open  ]],
Cell[13190, 616, 21, 0, 71, "Text"],
Cell[CellGroupData[{
Cell[13236, 620, 103, 3, 79, "Input"],
Cell[13342, 625, 141, 4, 71, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[13544, 636, 64, 1, 1, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[13633, 641, 34, 0, 124, "Section"],
Cell[CellGroupData[{
Cell[13692, 645, 164, 5, 82, "Input"],
Cell[13859, 652, 4195, 79, 372, "Output"]
}, Open  ]],
Cell[18069, 734, 44, 0, 94, "Subsection"],
Cell[18116, 736, 42, 0, 71, "Subsection"],
Cell[18161, 738, 44, 0, 71, "Subsection"],
Cell[18208, 740, 42, 0, 71, "Subsection"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[18299, 746, 64, 1, 1, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[18366, 749, 38, 0, 215, "Title"],
Cell[CellGroupData[{
Cell[18429, 753, 28, 0, 124, "Section"],
Cell[CellGroupData[{
Cell[18482, 757, 1282, 39, 283, "Input"],
Cell[19767, 798, 254, 8, 113, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[20058, 811, 387, 12, 143, "Input"],
Cell[20448, 825, 423, 14, 159, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[20920, 845, 24, 0, 124, "Section"],
Cell[CellGroupData[{
Cell[20969, 849, 241, 8, 82, "Input"],
Cell[21213, 859, 1482, 52, 320, "Output"]
}, Open  ]],
Cell[22710, 914, 36, 0, 39, "SmallText"]
}, Open  ]],
Cell[CellGroupData[{
Cell[22783, 919, 25, 0, 124, "Section"],
Cell[CellGroupData[{
Cell[22833, 923, 176, 6, 82, "Input"],
Cell[23012, 931, 481, 17, 86, "Output"]
}, Open  ]],
Cell[23508, 951, 41, 0, 39, "SmallText"]
}, Open  ]],
Cell[CellGroupData[{
Cell[23586, 956, 25, 0, 124, "Section"],
Cell[CellGroupData[{
Cell[23636, 960, 386, 12, 71, "Input"],
Cell[24025, 974, 283, 9, 71, "Output"]
}, Open  ]],
Cell[24323, 986, 50, 0, 39, "SmallText"]
}, Open  ]],
Cell[CellGroupData[{
Cell[24410, 991, 25, 0, 124, "Section"],
Cell[CellGroupData[{
Cell[24460, 995, 133, 4, 83, "Input"],
Cell[24596, 1001, 901, 28, 126, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[25546, 1035, 27, 0, 124, "Section"],
Cell[CellGroupData[{
Cell[25598, 1039, 61, 1, 71, "Input"],
Cell[25662, 1042, 99, 3, 75, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[25798, 1050, 88, 2, 71, "Input"],
Cell[25889, 1054, 261, 8, 113, "Output"]
}, Open  ]],
Cell[26165, 1065, 31, 0, 39, "SmallText"],
Cell[26199, 1067, 156, 6, 73, "Text"],
Cell[26358, 1075, 88, 2, 71, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[26483, 1082, 34, 0, 124, "Section"],
Cell[26520, 1084, 133, 4, 83, "Input"],
Cell[CellGroupData[{
Cell[26678, 1092, 942, 29, 129, "Input"],
Cell[27623, 1123, 901, 28, 126, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[28585, 1158, 64, 1, 1, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[28652, 1161, 30, 0, 215, "Title"],
Cell[CellGroupData[{
Cell[28707, 1165, 29, 0, 124, "Section"],
Cell[28739, 1167, 76, 0, 39, "SmallText"],
Cell[CellGroupData[{
Cell[28840, 1171, 81, 2, 71, "Input"],
Cell[28924, 1175, 46, 0, 71, "Output"]
}, Open  ]],
Cell[28985, 1178, 82, 2, 71, "Input"],
Cell[CellGroupData[{
Cell[29092, 1184, 44, 1, 71, "Input"],
Cell[CellGroupData[{
Cell[29161, 1189, 76, 1, 83, "Print",
 CellTags->"Info3614924699-8288244"],
Cell[29240, 1192, 740, 21, 55, "Print",
 CellTags->"Info3614924699-8288244"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[30029, 1219, 27, 0, 71, "Input"],
Cell[30059, 1221, 46, 0, 71, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[30142, 1226, 44, 1, 71, "Input"],
Cell[CellGroupData[{
Cell[30211, 1231, 76, 1, 83, "Print",
 CellTags->"Info3614924674-8288244"],
Cell[30290, 1234, 718, 20, 55, "Print",
 CellTags->"Info3614924674-8288244"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[31057, 1260, 27, 0, 71, "Input"],
Cell[31087, 1262, 46, 0, 71, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[31170, 1267, 106, 3, 71, "Input"],
Cell[31279, 1272, 352, 7, 117, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[31668, 1284, 106, 3, 71, "Input"],
Cell[31777, 1289, 356, 7, 117, "Output"]
}, Open  ]],
Cell[32148, 1299, 113, 5, 94, "Subsection"],
Cell[CellGroupData[{
Cell[32286, 1308, 128, 5, 71, "Subsection"],
Cell[32417, 1315, 97, 2, 39, "SmallText"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[32575, 1324, 64, 1, 1, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[32664, 1329, 39, 0, 124, "Section"],
Cell[32706, 1331, 53, 0, 71, "Text"],
Cell[CellGroupData[{
Cell[32784, 1335, 114, 3, 71, "Input"],
Cell[32901, 1340, 115, 3, 71, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[33053, 1348, 99, 3, 71, "Input"],
Cell[33155, 1353, 115, 3, 71, "Output"]
}, Open  ]],
Cell[33285, 1359, 129, 4, 122, "Text"],
Cell[33417, 1365, 124, 3, 109, "Text"],
Cell[CellGroupData[{
Cell[33566, 1372, 129, 4, 76, "Input"],
Cell[33698, 1378, 901, 28, 126, "Output"]
}, Open  ]],
Cell[34614, 1409, 45, 1, 71, "Input"],
Cell[34662, 1412, 45, 1, 71, "Input"],
Cell[34710, 1415, 203, 8, 42, "SmallText"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[34962, 1429, 64, 1, 1, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[35051, 1434, 30, 0, 124, "Section"],
Cell[CellGroupData[{
Cell[35106, 1438, 41, 0, 94, "Subsection"],
Cell[35150, 1440, 47, 0, 71, "Text"],
Cell[CellGroupData[{
Cell[35222, 1444, 97, 2, 71, "Input"],
Cell[35322, 1448, 98, 2, 71, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[35457, 1455, 66, 1, 71, "Input"],
Cell[35526, 1458, 223, 8, 71, "Output"]
}, Open  ]],
Cell[35764, 1469, 293, 11, 120, "Text"],
Cell[36060, 1482, 271, 10, 71, "Input"],
Cell[CellGroupData[{
Cell[36356, 1496, 149, 4, 75, "Input"],
Cell[36508, 1502, 350, 12, 71, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[36907, 1520, 30, 0, 94, "Subsection"],
Cell[CellGroupData[{
Cell[36962, 1524, 208, 7, 75, "Input"],
Cell[37173, 1533, 8621, 237, 574, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[45831, 1775, 29, 0, 71, "Input"],
Cell[45863, 1777, 254, 8, 113, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[46154, 1790, 59, 1, 71, "Input"],
Cell[46216, 1793, 13111, 364, 464, "Output"]
}, Open  ]],
Cell[59342, 2160, 99, 2, 39, "SmallText"],
Cell[59444, 2164, 36, 0, 39, "SmallText"],
Cell[59483, 2166, 57, 0, 39, "SmallText"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[59601, 2173, 64, 1, 1, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[59690, 2178, 26, 0, 94, "Subsection"],
Cell[59719, 2180, 488, 19, 75, "Text"],
Cell[60210, 2201, 46, 0, 39, "SmallText"],
Cell[CellGroupData[{
Cell[60281, 2205, 123, 3, 71, "Input"],
Cell[60407, 2210, 98, 2, 71, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[60542, 2217, 103, 3, 71, "Input"],
Cell[60648, 2222, 28, 0, 71, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[60713, 2227, 46, 1, 71, "Input"],
Cell[CellGroupData[{
Cell[60784, 2232, 78, 1, 83, "Print",
 CellTags->"Info3614925140-4603666"],
Cell[60865, 2235, 790, 22, 55, "Print",
 CellTags->"Info3614925140-4603666"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[61704, 2263, 104, 3, 71, "Input"],
Cell[61811, 2268, 88, 2, 71, "Output"]
}, Open  ]],
Cell[61914, 2273, 198, 6, 71, "Text"],
Cell[62115, 2281, 85, 1, 39, "SmallText"],
Cell[62203, 2284, 52, 0, 71, "Text"],
Cell[62258, 2286, 38, 0, 39, "SmallText"]
}, Open  ]],
Cell[CellGroupData[{
Cell[62333, 2291, 29, 0, 94, "Subsection"],
Cell[62365, 2293, 529, 19, 122, "Text"],
Cell[62897, 2314, 64, 0, 39, "SmallText"],
Cell[CellGroupData[{
Cell[62986, 2318, 404, 13, 71, "Input"],
Cell[63393, 2333, 83, 2, 71, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[63537, 2342, 64, 1, 1, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[63626, 2347, 41, 0, 124, "Section"],
Cell[CellGroupData[{
Cell[63692, 2351, 97, 2, 94, "Subsection"],
Cell[63792, 2355, 188, 6, 120, "Text"],
Cell[CellGroupData[{
Cell[64005, 2365, 150, 4, 71, "Input"],
Cell[64158, 2371, 217, 6, 71, "Output"]
}, Open  ]],
Cell[64390, 2380, 52, 0, 39, "SmallText"],
Cell[64445, 2382, 80, 3, 72, "Text"],
Cell[CellGroupData[{
Cell[64550, 2389, 124, 3, 71, "Input"],
Cell[64677, 2394, 222, 6, 71, "Output"]
}, Open  ]],
Cell[64914, 2403, 42, 0, 39, "SmallText"]
}, Open  ]],
Cell[CellGroupData[{
Cell[64993, 2408, 101, 2, 94, "Subsection"],
Cell[65097, 2412, 61, 0, 71, "Text"],
Cell[CellGroupData[{
Cell[65183, 2416, 112, 3, 71, "Input"],
Cell[65298, 2421, 57, 1, 71, "Output"]
}, Open  ]],
Cell[65370, 2425, 43, 0, 71, "Text"],
Cell[CellGroupData[{
Cell[65438, 2429, 80, 2, 71, "Input"],
Cell[65521, 2433, 57, 1, 71, "Output"]
}, Open  ]],
Cell[65593, 2437, 42, 0, 39, "SmallText"],
Cell[65638, 2439, 52, 0, 71, "Text"],
Cell[CellGroupData[{
Cell[65715, 2443, 146, 4, 71, "Input"],
Cell[65864, 2449, 217, 6, 71, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[66118, 2460, 54, 1, 71, "Input"],
Cell[66175, 2463, 224, 6, 71, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[66436, 2474, 56, 1, 71, "Input"],
Cell[66495, 2477, 358, 12, 71, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[66890, 2494, 119, 3, 71, "Input"],
Cell[67012, 2499, 217, 6, 71, "Output"]
}, Open  ]],
Cell[67244, 2508, 55, 0, 71, "Text"],
Cell[CellGroupData[{
Cell[67324, 2512, 55, 1, 71, "Input"],
Cell[67382, 2515, 217, 6, 71, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[67648, 2527, 101, 2, 94, "Subsection"],
Cell[CellGroupData[{
Cell[67774, 2533, 172, 5, 71, "Input"],
Cell[67949, 2540, 31, 0, 71, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[68017, 2545, 106, 3, 140, "Input"],
Cell[68126, 2550, 128, 4, 103, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[68291, 2559, 312, 10, 128, "Input"],
Cell[68606, 2571, 1088, 24, 428, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[69731, 2600, 255, 8, 128, "Input"],
Cell[69989, 2610, 52, 1, 103, "Output"]
}, Open  ]],
Cell[70056, 2614, 94, 2, 39, "SmallText"],
Cell[70153, 2618, 50, 0, 39, "SmallText"],
Cell[70206, 2620, 320, 10, 69, "SmallText"]
}, Open  ]],
Cell[CellGroupData[{
Cell[70563, 2635, 26, 0, 94, "Subsection"],
Cell[70592, 2637, 71, 0, 71, "Text"],
Cell[CellGroupData[{
Cell[70688, 2641, 183, 5, 71, "Input"],
Cell[70874, 2648, 78, 2, 71, "Output"]
}, Open  ]],
Cell[70967, 2653, 148, 3, 39, "SmallText"]
}, Open  ]],
Cell[CellGroupData[{
Cell[71152, 2661, 26, 0, 94, "Subsection"],
Cell[CellGroupData[{
Cell[71203, 2665, 189, 6, 71, "Input"],
Cell[71395, 2673, 88, 2, 71, "Output"]
}, Open  ]],
Cell[71498, 2678, 108, 3, 39, "SmallText"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[71667, 2688, 64, 1, 1, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[71756, 2693, 49, 0, 124, "Section"],
Cell[71808, 2695, 62, 0, 39, "SmallText"],
Cell[CellGroupData[{
Cell[71895, 2699, 46, 0, 94, "Subsection"],
Cell[71944, 2701, 204, 5, 121, "Text"],
Cell[72151, 2708, 110, 3, 76, "Input"],
Cell[CellGroupData[{
Cell[72286, 2715, 113, 3, 71, "Input"],
Cell[72402, 2720, 176, 5, 71, "Output"]
}, Open  ]],
Cell[72593, 2728, 98, 2, 71, "Input"],
Cell[CellGroupData[{
Cell[72716, 2734, 140, 4, 71, "Input"],
Cell[72859, 2740, 85, 2, 71, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[72981, 2747, 49, 1, 71, "Input"],
Cell[CellGroupData[{
Cell[73055, 2752, 473, 11, 105, "Print",
 CellTags->"Info3614925945-4603666"],
Cell[73531, 2765, 15867, 378, 105, "Print",
 CellTags->"Info3614925945-4603666"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[89447, 3149, 66144, 1091, 65, "Input"],
Cell[155594, 4242, 66109, 1090, 82, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[221740, 5337, 44, 1, 71, "Input"],
Cell[221787, 5340, 30, 0, 71, "Output"]
}, Open  ]],
Cell[221832, 5343, 243, 7, 118, "Input"],
Cell[CellGroupData[{
Cell[222100, 5354, 56, 1, 71, "Input"],
Cell[222159, 5357, 30, 0, 71, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[222226, 5362, 58, 1, 71, "Input"],
Cell[222287, 5365, 419, 8, 56, "Message"],
Cell[222709, 5375, 138, 4, 71, "Output"]
}, Open  ]],
Cell[222862, 5382, 106, 2, 207, "Input"],
Cell[222971, 5386, 146, 7, 44, "SmallText"],
Cell[223120, 5395, 33, 0, 39, "SmallText"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[223214, 5402, 64, 1, 1, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[223303, 5407, 56, 0, 94, "Subsection"],
Cell[223362, 5409, 161, 6, 122, "Text"],
Cell[223526, 5417, 377, 10, 164, "Input"],
Cell[CellGroupData[{
Cell[223928, 5431, 56, 1, 71, "Input"],
Cell[223987, 5434, 30, 0, 71, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[224054, 5439, 73, 1, 71, "Input"],
Cell[224130, 5442, 33, 0, 71, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[224200, 5447, 62, 1, 71, "Input"],
Cell[224265, 5450, 34, 0, 71, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[224336, 5455, 79, 2, 71, "Input"],
Cell[224418, 5459, 28, 0, 71, "Output"]
}, Open  ]],
Cell[224461, 5462, 98, 2, 39, "SmallText"],
Cell[224562, 5466, 179, 6, 122, "Text"],
Cell[224744, 5474, 93, 2, 39, "SmallText"],
Cell[224840, 5478, 120, 4, 84, "SmallText"],
Cell[224963, 5484, 216, 8, 122, "Text"],
Cell[225182, 5494, 262, 8, 122, "Input"],
Cell[CellGroupData[{
Cell[225469, 5506, 56, 1, 71, "Input"],
Cell[225528, 5509, 29, 0, 71, "Output"]
}, Open  ]],
Cell[225572, 5512, 106, 2, 207, "Input"],
Cell[225681, 5516, 55, 0, 39, "SmallText"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[225785, 5522, 64, 1, 1, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[225874, 5527, 39, 0, 94, "Subsection"],
Cell[225916, 5529, 754, 33, 168, "Text"],
Cell[CellGroupData[{
Cell[226695, 5566, 96, 2, 71, "Input"],
Cell[226794, 5570, 31, 0, 71, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[226862, 5575, 298, 10, 82, "Input"],
Cell[227163, 5587, 31, 0, 71, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[227243, 5593, 51, 0, 94, "Subsection"],
Cell[227297, 5595, 72, 0, 71, "Text"],
Cell[227372, 5597, 158, 5, 120, "Input"],
Cell[227533, 5604, 197, 6, 72, "Input"],
Cell[CellGroupData[{
Cell[227755, 5614, 77, 2, 110, "Input"],
Cell[227835, 5618, 80, 2, 71, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[227952, 5625, 77, 2, 116, "Input"],
Cell[228032, 5629, 80, 2, 71, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[228149, 5636, 128, 4, 124, "Input"],
Cell[228280, 5642, 32, 0, 71, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[228349, 5647, 80, 2, 71, "Input"],
Cell[228432, 5651, 292, 11, 71, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[228761, 5667, 78, 2, 116, "Input"],
Cell[228842, 5671, 210, 8, 71, "Output"]
}, Open  ]],
Cell[229067, 5682, 159, 5, 61, "SmallText"],
Cell[229229, 5689, 185, 8, 120, "Text"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[229463, 5703, 64, 1, 1, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[229552, 5708, 24, 0, 124, "Section"],
Cell[229579, 5710, 169, 4, 121, "Text"],
Cell[CellGroupData[{
Cell[229773, 5718, 321, 10, 82, "Input"],
Cell[230097, 5730, 210, 6, 71, "Output"]
}, Open  ]],
Cell[230322, 5739, 33, 0, 39, "SmallText"],
Cell[230358, 5741, 55, 0, 39, "SmallText"],
Cell[230416, 5743, 113, 3, 120, "Text"],
Cell[CellGroupData[{
Cell[230554, 5750, 174, 5, 71, "Input"],
Cell[230731, 5757, 172, 4, 71, "Output"]
}, Open  ]],
Cell[230918, 5764, 48, 0, 39, "SmallText"],
Cell[230969, 5766, 214, 4, 168, "Text"],
Cell[CellGroupData[{
Cell[231208, 5774, 409, 11, 118, "Input"],
Cell[231620, 5787, 297, 9, 71, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[231954, 5801, 87, 2, 71, "Input"],
Cell[232044, 5805, 30, 0, 71, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[232111, 5810, 110, 3, 71, "Input"],
Cell[232224, 5815, 81, 2, 71, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[232342, 5822, 111, 3, 71, "Input"],
Cell[232456, 5827, 81, 2, 71, "Output"]
}, Open  ]],
Cell[232552, 5832, 129, 3, 120, "Text"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[232730, 5841, 64, 1, 1, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[232819, 5846, 33, 0, 124, "Section"],
Cell[232855, 5848, 140, 3, 120, "Text"],
Cell[232998, 5853, 110, 3, 76, "Input"],
Cell[CellGroupData[{
Cell[233133, 5860, 156, 4, 71, "Input"],
Cell[233292, 5866, 165, 5, 82, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[233494, 5876, 232, 7, 82, "Input"],
Cell[233729, 5885, 165, 5, 82, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[233931, 5895, 192, 6, 75, "Input"],
Cell[234126, 5903, 165, 5, 82, "Output"]
}, Open  ]],
Cell[234306, 5911, 176, 7, 50, "SmallText"],
Cell[234485, 5920, 140, 6, 50, "SmallText"],
Cell[234628, 5928, 31, 0, 39, "SmallText"],
Cell[CellGroupData[{
Cell[234684, 5932, 62, 0, 94, "Subsection"],
Cell[CellGroupData[{
Cell[234771, 5936, 249, 9, 116, "Input"],
Cell[235023, 5947, 140, 5, 103, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[235212, 5958, 76, 0, 94, "Subsection"],
Cell[235291, 5960, 342, 11, 71, "Input"],
Cell[235636, 5973, 308, 10, 71, "Input"],
Cell[CellGroupData[{
Cell[235969, 5987, 159, 5, 71, "Input"],
Cell[236131, 5994, 309, 10, 71, "Output"]
}, Open  ]],
Cell[236455, 6007, 250, 8, 72, "Input"],
Cell[CellGroupData[{
Cell[236730, 6019, 395, 13, 117, "Input"],
Cell[237128, 6034, 309, 10, 71, "Output"]
}, Open  ]],
Cell[237452, 6047, 129, 2, 252, "Input"],
Cell[237584, 6051, 65, 0, 39, "SmallText"],
Cell[237652, 6053, 95, 2, 39, "SmallText"],
Cell[237750, 6057, 75, 0, 39, "SmallText"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[237886, 6064, 64, 1, 1, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[237975, 6069, 45, 0, 124, "Section"],
Cell[CellGroupData[{
Cell[238045, 6073, 27, 0, 94, "Subsection"],
Cell[238075, 6075, 148, 3, 120, "Text"],
Cell[CellGroupData[{
Cell[238248, 6082, 249, 7, 71, "Input"],
Cell[238500, 6091, 162, 5, 71, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[238699, 6101, 231, 6, 71, "Input"],
Cell[238933, 6109, 785, 26, 117, "Output"]
}, Open  ]],
Cell[239733, 6138, 61, 0, 39, "SmallText"],
Cell[239797, 6140, 174, 6, 71, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[240008, 6151, 27, 0, 94, "Subsection"],
Cell[240038, 6153, 160, 5, 122, "Text"],
Cell[240201, 6160, 64, 0, 71, "Text"],
Cell[CellGroupData[{
Cell[240290, 6164, 388, 12, 82, "Input"],
Cell[240681, 6178, 98, 3, 82, "Output"]
}, Open  ]],
Cell[240794, 6184, 317, 10, 50, "SmallText"]
}, Open  ]],
Cell[CellGroupData[{
Cell[241148, 6199, 28, 0, 94, "Subsection"],
Cell[241179, 6201, 64, 0, 71, "Text"],
Cell[CellGroupData[{
Cell[241268, 6205, 372, 12, 82, "Input"],
Cell[241643, 6219, 158, 5, 82, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[241838, 6229, 295, 9, 82, "Input"],
Cell[242136, 6240, 124, 3, 71, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[242297, 6248, 263, 8, 82, "Input"],
Cell[242563, 6258, 546, 18, 117, "Output"]
}, Open  ]],
Cell[243124, 6279, 350, 11, 50, "SmallText"]
}, Open  ]],
Cell[CellGroupData[{
Cell[243511, 6295, 28, 0, 94, "Subsection"],
Cell[CellGroupData[{
Cell[243564, 6299, 131, 3, 71, "Input"],
Cell[243698, 6304, 28, 0, 71, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[243763, 6309, 138, 3, 71, "Input"],
Cell[243904, 6314, 28, 0, 71, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[244005, 6322, 64, 1, 1, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[244094, 6327, 42, 0, 124, "Section"],
Cell[244139, 6329, 75, 0, 71, "Text"],
Cell[244217, 6331, 87, 2, 71, "Text"],
Cell[244307, 6335, 50, 0, 71, "Text"],
Cell[244360, 6337, 168, 5, 72, "Input"],
Cell[CellGroupData[{
Cell[244553, 6346, 77, 2, 71, "Input"],
Cell[244633, 6350, 78, 2, 71, "Output"]
}, Open  ]],
Cell[244726, 6355, 71, 1, 71, "Input"],
Cell[244800, 6358, 262, 7, 118, "Input"],
Cell[CellGroupData[{
Cell[245087, 6369, 189, 4, 71, "Input"],
Cell[245279, 6375, 190, 4, 71, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[245506, 6384, 233, 7, 71, "Input"],
Cell[245742, 6393, 276, 5, 117, "Output"]
}, Open  ]],
Cell[246033, 6401, 152, 2, 297, "Input"],
Cell[246188, 6405, 35, 0, 39, "SmallText"],
Cell[CellGroupData[{
Cell[246248, 6409, 47, 0, 94, "Subsection"],
Cell[246298, 6411, 126, 3, 120, "Text"],
Cell[CellGroupData[{
Cell[246449, 6418, 62, 1, 72, "Input"],
Cell[246514, 6421, 239, 9, 71, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[246790, 6435, 69, 1, 72, "Input"],
Cell[246862, 6438, 250, 9, 71, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[247149, 6452, 117, 3, 72, "Input"],
Cell[247269, 6457, 382, 13, 117, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[247688, 6475, 89, 2, 71, "Input"],
Cell[247780, 6479, 112, 3, 71, "Output"]
}, Open  ]],
Cell[247907, 6485, 96, 2, 72, "Input"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[248064, 6494, 64, 1, 1, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[248153, 6499, 41, 0, 124, "Section"],
Cell[CellGroupData[{
Cell[248219, 6503, 68, 1, 62, "Item"],
Cell[248290, 6506, 96, 1, 62, "Item"],
Cell[248389, 6509, 139, 5, 62, "Item"],
Cell[248531, 6516, 113, 5, 62, "Item"],
Cell[248647, 6523, 126, 5, 62, "Item"],
Cell[248776, 6530, 124, 5, 62, "Item"],
Cell[248903, 6537, 126, 5, 62, "Item"],
Cell[249032, 6544, 56, 1, 62, "Item"],
Cell[249091, 6547, 49, 1, 62, "Item"],
Cell[249143, 6550, 51, 1, 62, "Item"],
Cell[249197, 6553, 55, 1, 62, "Item"],
Cell[249255, 6556, 56, 1, 62, "Item"],
Cell[249314, 6559, 48, 1, 62, "Item"],
Cell[249365, 6562, 66, 1, 62, "Item"],
Cell[249434, 6565, 63, 1, 62, "Item"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[249558, 6573, 64, 1, 1, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[249647, 6578, 30, 0, 124, "Section"],
Cell[249680, 6580, 253, 4, 217, "Text"],
Cell[249936, 6586, 37, 0, 39, "SmallText"]
}, Open  ]],
Cell[CellGroupData[{
Cell[250010, 6591, 35, 0, 124, "Section"],
Cell[250048, 6593, 94, 2, 120, "Text"]
}, Open  ]]
}, Open  ]]
}
]
*)

(* End of internal cache information *)

