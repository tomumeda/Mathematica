(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 9.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       157,          7]
NotebookDataLength[     30471,        658]
NotebookOptionsPosition[     30153,        642]
NotebookOutlinePosition[     30512,        658]
CellTagsIndexPosition[     30469,        655]
WindowFrame->Palette*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[
 DynamicModuleBox[{$CellContext`currentschema$$ = 
  "Rainbow", $CellContext`currentschemaf$$ = "SunsetColors"}, 
  TagBox[
   StyleBox[
    DynamicModuleBox[{$CellContext`blue$$ = 
     0.1822037333333333, $CellContext`bluef$$ = 
     0.4067853, $CellContext`bold$$ = False, $CellContext`font$$ = 
     "Estrangelo Edessa", $CellContext`green$$ = 
     0.4039510222222221, $CellContext`greenf$$ = 
     0.8356748, $CellContext`italic$$ = False, $CellContext`red$$ = 
     0.8951542444444445, $CellContext`redf$$ = 1., $CellContext`size$$ = 72, 
     Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
     Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ = 
     1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{{
        Hold[$CellContext`font$$], "Andalus", 
        Tooltip["Font", 
         Dynamic[
          StringJoin["Currently there are ", 
           ToString[
            Length[$CellContext`installedfonts]], " fonts in the list"]]]}, 
       Dynamic[$CellContext`installedfonts]}, {{
        Hold[$CellContext`size$$], 42, "Size"}, 10, 100, 1}, {{
        Hold[$CellContext`italic$$], False, ""}, {False, True}}, {{
        Hold[$CellContext`bold$$], False, ""}, {False, True}}, {{
        Hold[$CellContext`redf$$], 0.902300809570669, ""}, 0, 1, 0.001}, {{
        Hold[$CellContext`greenf$$], 0.2331685738088971, ""}, 0, 1, 0.001}, {{
        Hold[$CellContext`bluef$$], 0.44229041496440624`, ""}, 0, 1, 0.001}, {{
        Hold[$CellContext`red$$], 0.38520938198618215`, ""}, 0, 1, 0.001}, {{
        Hold[$CellContext`green$$], 0.4060894444367886, ""}, 0, 1, 0.001}, {{
        Hold[$CellContext`blue$$], 0.26930307393204433`, ""}, 0, 1, 0.001}, {
       Hold[
        Grid[{{
           Style["System's fonts", 16, Bold]}, {
           Panel[
            Grid[{{
               Button[
                Tooltip[
                "Refresh", 
                 "Load the full list of installed fonts from the O.S."], \
$CellContext`installedfonts = Map[First, 
                  FE`Evaluate[
                   FEPrivate`GetPopupList["MenuListFonts"]]]], 
               Button[
                Tooltip[
                "Load", 
                 "Load the list of fonts saved in a previous session"], \
$CellContext`installedfonts = Flatten[
                   Import[$CellContext`fontfile, "CSV"]]; If[
                  
                  FreeQ[$CellContext`installedfont, $CellContext`font$$], \
$CellContext`font$$ = First[$CellContext`installedfonts]]], 
               Button[
                Tooltip[
                "Save", 
                 "Save current list in a file located in the same folder of \
the current notebook"], 
                
                Export[$CellContext`fontfile, \
$CellContext`installedfonts]]}}]]}, {
           Style["Font", 16, Bold], ""}, {
           Panel[
            Grid[{{
               Manipulate`Place[1], 
               Button[
                Tooltip[
                 Hyperlink["Delete"], 
                 "Delete this font from the current list"], \
$CellContext`installedfonts = 
                 DeleteCases[$CellContext`installedfonts, \
$CellContext`font$$]; $CellContext`font$$ = 
                 First[$CellContext`installedfonts], Method -> "Queued", 
                Appearance -> "Frameless"]}, {
               Manipulate`Place[2], 
               InputField[
                Dynamic[$CellContext`size$$], Number, FieldSize -> 2]}, {
              "Italic", 
               Manipulate`Place[3]}, {"Bold", 
               Manipulate`Place[4]}}, Alignment -> {Left, Center}]]}, {
           Row[{
             Style["Font color", 16, Bold], 
             Spacer[5], 
             Button[
              Hyperlink[
              "(randomize)"], {$CellContext`redf$$, $CellContext`greenf$$, \
$CellContext`bluef$$} = Table[
                RandomReal[], {3}], Method -> "Queued", Appearance -> 
              "Frameless"]}]}, {
           Panel[
            Grid[{{
               Graphics[{
                 RGBColor[1, 0, 0], 
                 Rectangle[{0, 0}]}, ImageSize -> 20], 
               Manipulate`Place[5], 
               InputField[
                Dynamic[$CellContext`redf$$], FieldSize -> Tiny]}, {
               Graphics[{
                 RGBColor[0, 1, 0], 
                 Rectangle[{0, 0}]}, ImageSize -> 20], 
               Manipulate`Place[6], 
               InputField[
                Dynamic[$CellContext`greenf$$], FieldSize -> Tiny]}, {
               Graphics[{
                 RGBColor[0, 0, 1], 
                 Rectangle[{0, 0}]}, ImageSize -> 20], 
               Manipulate`Place[7], 
               InputField[
                Dynamic[$CellContext`bluef$$], FieldSize -> Tiny]}}, 
             Alignment -> {Left, Center}]]}, {
           Row[{
             Style["Font's color schema", 16, Bold], 
             Spacer[5], 
             Button[
              Hyperlink[
              "(change)"], $CellContext`currentschemaf$$ = \
$CellContext`SetColorSchema[], Method -> "Queued", ImageSize -> Small, 
              Appearance -> "Frameless"]}], ""}, {
           Dynamic[
            MouseAppearance[
             EventHandler[
              Show[
               ColorData[$CellContext`currentschemaf$$, "Image"], ImageSize -> 
               Small], {
              "MouseClicked" :> ({$CellContext`redf$$, $CellContext`greenf$$, \
$CellContext`bluef$$} = Apply[List, 
                  ColorData[$CellContext`currentschemaf$$, 
                   First[
                    MousePosition["Graphics"]]]]), 
               "MouseDragged" :> ({$CellContext`redf$$, \
$CellContext`greenf$$, $CellContext`bluef$$} = Apply[List, 
                  ColorData[$CellContext`currentschemaf$$, 
                   First[
                    MousePosition["Graphics"]]]])}, PassEventsUp -> 
              False], $CellContext`cp]]}, {
           Row[{
             Style["Background", 16, Bold], 
             Spacer[5], 
             Button[
              Hyperlink[
              "(randomize)"], {$CellContext`red$$, $CellContext`green$$, \
$CellContext`blue$$} = Table[
                RandomReal[], {3}], Method -> "Queued", Appearance -> 
              "Frameless"]}]}, {
           Panel[
            Grid[{{
               Graphics[{
                 RGBColor[1, 0, 0], 
                 Rectangle[{0, 0}]}, ImageSize -> 20], 
               Manipulate`Place[8], 
               InputField[
                Dynamic[
                 Style[
                  NumberForm[$CellContext`red$$, {5, 4}], 12, "Output", 
                  FontFamily -> "Arial"]], FieldSize -> 4]}, {
               Graphics[{
                 RGBColor[0, 1, 0], 
                 Rectangle[{0, 0}]}, ImageSize -> 20], 
               Manipulate`Place[9], 
               InputField[
                Dynamic[
                 Style[
                  NumberForm[$CellContext`green$$, {5, 4}], 12, "Output", 
                  FontFamily -> "Arial"]], FieldSize -> 4]}, {
               Graphics[{
                 RGBColor[0, 0, 1], 
                 Rectangle[{0, 0}]}, ImageSize -> 20], 
               Manipulate`Place[10], 
               InputField[
                Dynamic[
                 Style[
                  NumberForm[$CellContext`blue$$, {5, 4}], 12, "Output", 
                  FontFamily -> "Arial"]], FieldSize -> 4]}}, 
             Alignment -> {Left, Center}]]}, {
           Row[{
             Style["Background's color schema", 16, Bold], 
             Spacer[5], 
             Button[
              Hyperlink[
              "(change)"], $CellContext`currentschema$$ = \
$CellContext`SetColorSchema[], Method -> "Queued", ImageSize -> Small, 
              Appearance -> "Frameless"]}], ""}, {
           Dynamic[
            MouseAppearance[
             EventHandler[
              Show[
               ColorData[$CellContext`currentschema$$, "Image"], ImageSize -> 
               Small], {
              
              "MouseClicked" :> ({$CellContext`red$$, $CellContext`green$$, \
$CellContext`blue$$} = Apply[List, 
                  ColorData[$CellContext`currentschema$$, 
                   First[
                    MousePosition["Graphics"]]]]), 
               "MouseDragged" :> ({$CellContext`red$$, $CellContext`green$$, \
$CellContext`blue$$} = Apply[List, 
                  ColorData[$CellContext`currentschema$$, 
                   First[
                    MousePosition["Graphics"]]]])}, PassEventsUp -> 
              False], $CellContext`cp]]}}, Alignment -> {Left, Center}, 
         Spacings -> {0, 1}]], Manipulate`Dump`ThisIsNotAControl}}, 
     Typeset`size$$ = {800., {196., 204.}}, Typeset`update$$ = 0, 
     Typeset`initDone$$, Typeset`skipInitDone$$ = 
     False, $CellContext`size$215545$$ = 0, $CellContext`italic$215546$$ = 
     False, $CellContext`bold$215547$$ = False, $CellContext`redf$215548$$ = 
     0, $CellContext`greenf$215549$$ = 0, $CellContext`bluef$215550$$ = 
     0, $CellContext`red$215551$$ = 0, $CellContext`green$215552$$ = 
     0, $CellContext`blue$215553$$ = 0}, 
     DynamicBox[Manipulate`ManipulateBoxes[
      2, StandardForm, 
       "Variables" :> {$CellContext`blue$$ = 
         0.26930307393204433`, $CellContext`bluef$$ = 
         0.44229041496440624`, $CellContext`bold$$ = 
         False, $CellContext`font$$ = "Andalus", $CellContext`green$$ = 
         0.4060894444367886, $CellContext`greenf$$ = 
         0.2331685738088971, $CellContext`italic$$ = 
         False, $CellContext`red$$ = 
         0.38520938198618215`, $CellContext`redf$$ = 
         0.902300809570669, $CellContext`size$$ = 42}, "ControllerVariables" :> {
         Hold[$CellContext`size$$, $CellContext`size$215545$$, 0], 
         Hold[$CellContext`italic$$, $CellContext`italic$215546$$, False], 
         Hold[$CellContext`bold$$, $CellContext`bold$215547$$, False], 
         Hold[$CellContext`redf$$, $CellContext`redf$215548$$, 0], 
         Hold[$CellContext`greenf$$, $CellContext`greenf$215549$$, 0], 
         Hold[$CellContext`bluef$$, $CellContext`bluef$215550$$, 0], 
         Hold[$CellContext`red$$, $CellContext`red$215551$$, 0], 
         Hold[$CellContext`green$$, $CellContext`green$215552$$, 0], 
         Hold[$CellContext`blue$$, $CellContext`blue$215553$$, 0]}, 
       "OtherVariables" :> {
        Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
         Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
         Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
         Typeset`initDone$$, Typeset`skipInitDone$$}, "Body" :> Panel[
         Style[
          
          Column[{"This is the font", $CellContext`font$$}, Alignment -> 
           Center], 
          
          RGBColor[$CellContext`redf$$, $CellContext`greenf$$, \
$CellContext`bluef$$], $CellContext`size$$, 
          If[$CellContext`italic$$, Italic, "Plain"], 
          If[$CellContext`bold$$, Bold, "Plain"], 
          FontFamily -> $CellContext`font$$], ImageSize -> {800, 400}, 
         Background -> 
         RGBColor[$CellContext`red$$, $CellContext`green$$, \
$CellContext`blue$$], Alignment -> Center], 
       "Specifications" :> {{{$CellContext`font$$, "Andalus", 
           Tooltip["Font", 
            Dynamic[
             StringJoin["Currently there are ", 
              ToString[
               Length[$CellContext`installedfonts]], " fonts in the list"]]]}, 
          Dynamic[$CellContext`installedfonts], ControlType -> PopupMenu, 
          ImageSize -> 150, ControlPlacement -> 
          1}, {{$CellContext`size$$, 42, "Size"}, 10, 100, 1, ControlType -> 
          Slider, ImageSize -> 50, ControlPlacement -> 
          2}, {{$CellContext`italic$$, False, ""}, {False, True}, 
          ControlPlacement -> 3}, {{$CellContext`bold$$, False, ""}, {
          False, True}, ControlPlacement -> 
          4}, {{$CellContext`redf$$, 0.902300809570669, ""}, 0, 1, 0.001, 
          ControlType -> Slider, ImageSize -> 50, ControlPlacement -> 
          5}, {{$CellContext`greenf$$, 0.2331685738088971, ""}, 0, 1, 0.001, 
          ControlType -> Slider, ImageSize -> 50, ControlPlacement -> 
          6}, {{$CellContext`bluef$$, 0.44229041496440624`, ""}, 0, 1, 0.001, 
          ControlType -> Slider, ImageSize -> 50, ControlPlacement -> 
          7}, {{$CellContext`red$$, 0.38520938198618215`, ""}, 0, 1, 0.001, 
          ControlType -> Slider, ImageSize -> 50, ControlPlacement -> 
          8}, {{$CellContext`green$$, 0.4060894444367886, ""}, 0, 1, 0.001, 
          ControlType -> Slider, ImageSize -> 50, ControlPlacement -> 
          9}, {{$CellContext`blue$$, 0.26930307393204433`, ""}, 0, 1, 0.001, 
          ControlType -> Slider, ImageSize -> 50, ControlPlacement -> 10}, 
         Grid[{{
            Style["System's fonts", 16, Bold]}, {
            Panel[
             Grid[{{
                Button[
                 Tooltip[
                 "Refresh", 
                  "Load the full list of installed fonts from the O.S."], \
$CellContext`installedfonts = Map[First, 
                   FE`Evaluate[
                    FEPrivate`GetPopupList["MenuListFonts"]]]], 
                Button[
                 Tooltip[
                 "Load", 
                  "Load the list of fonts saved in a previous session"], \
$CellContext`installedfonts = Flatten[
                    Import[$CellContext`fontfile, "CSV"]]; If[
                   
                   FreeQ[$CellContext`installedfont, $CellContext`font$$], \
$CellContext`font$$ = First[$CellContext`installedfonts]]], 
                Button[
                 Tooltip[
                 "Save", 
                  "Save current list in a file located in the same folder of \
the current notebook"], 
                 
                 Export[$CellContext`fontfile, \
$CellContext`installedfonts]]}}]]}, {
            Style["Font", 16, Bold], ""}, {
            Panel[
             Grid[{{
                Manipulate`Place[1], 
                Button[
                 Tooltip[
                  Hyperlink["Delete"], 
                  "Delete this font from the current list"], \
$CellContext`installedfonts = 
                  DeleteCases[$CellContext`installedfonts, \
$CellContext`font$$]; $CellContext`font$$ = 
                  First[$CellContext`installedfonts], Method -> "Queued", 
                 Appearance -> "Frameless"]}, {
                Manipulate`Place[2], 
                InputField[
                 Dynamic[$CellContext`size$$], Number, FieldSize -> 2]}, {
               "Italic", 
                Manipulate`Place[3]}, {"Bold", 
                Manipulate`Place[4]}}, Alignment -> {Left, Center}]]}, {
            Row[{
              Style["Font color", 16, Bold], 
              Spacer[5], 
              Button[
               Hyperlink[
               "(randomize)"], {$CellContext`redf$$, $CellContext`greenf$$, \
$CellContext`bluef$$} = Table[
                 RandomReal[], {3}], Method -> "Queued", Appearance -> 
               "Frameless"]}]}, {
            Panel[
             Grid[{{
                Graphics[{
                  RGBColor[1, 0, 0], 
                  Rectangle[{0, 0}]}, ImageSize -> 20], 
                Manipulate`Place[5], 
                InputField[
                 Dynamic[$CellContext`redf$$], FieldSize -> Tiny]}, {
                Graphics[{
                  RGBColor[0, 1, 0], 
                  Rectangle[{0, 0}]}, ImageSize -> 20], 
                Manipulate`Place[6], 
                InputField[
                 Dynamic[$CellContext`greenf$$], FieldSize -> Tiny]}, {
                Graphics[{
                  RGBColor[0, 0, 1], 
                  Rectangle[{0, 0}]}, ImageSize -> 20], 
                Manipulate`Place[7], 
                InputField[
                 Dynamic[$CellContext`bluef$$], FieldSize -> Tiny]}}, 
              Alignment -> {Left, Center}]]}, {
            Row[{
              Style["Font's color schema", 16, Bold], 
              Spacer[5], 
              Button[
               Hyperlink[
               "(change)"], $CellContext`currentschemaf$$ = \
$CellContext`SetColorSchema[], Method -> "Queued", ImageSize -> Small, 
               Appearance -> "Frameless"]}], ""}, {
            Dynamic[
             MouseAppearance[
              EventHandler[
               Show[
                ColorData[$CellContext`currentschemaf$$, "Image"], ImageSize -> 
                Small], {
               "MouseClicked" :> ({$CellContext`redf$$, \
$CellContext`greenf$$, $CellContext`bluef$$} = Apply[List, 
                   ColorData[$CellContext`currentschemaf$$, 
                    First[
                    MousePosition["Graphics"]]]]), 
                "MouseDragged" :> ({$CellContext`redf$$, \
$CellContext`greenf$$, $CellContext`bluef$$} = Apply[List, 
                   ColorData[$CellContext`currentschemaf$$, 
                    First[
                    MousePosition["Graphics"]]]])}, PassEventsUp -> 
               False], $CellContext`cp]]}, {
            Row[{
              Style["Background", 16, Bold], 
              Spacer[5], 
              Button[
               Hyperlink[
               "(randomize)"], {$CellContext`red$$, $CellContext`green$$, \
$CellContext`blue$$} = Table[
                 RandomReal[], {3}], Method -> "Queued", Appearance -> 
               "Frameless"]}]}, {
            Panel[
             Grid[{{
                Graphics[{
                  RGBColor[1, 0, 0], 
                  Rectangle[{0, 0}]}, ImageSize -> 20], 
                Manipulate`Place[8], 
                InputField[
                 Dynamic[
                  Style[
                   NumberForm[$CellContext`red$$, {5, 4}], 12, "Output", 
                   FontFamily -> "Arial"]], FieldSize -> 4]}, {
                Graphics[{
                  RGBColor[0, 1, 0], 
                  Rectangle[{0, 0}]}, ImageSize -> 20], 
                Manipulate`Place[9], 
                InputField[
                 Dynamic[
                  Style[
                   NumberForm[$CellContext`green$$, {5, 4}], 12, "Output", 
                   FontFamily -> "Arial"]], FieldSize -> 4]}, {
                Graphics[{
                  RGBColor[0, 0, 1], 
                  Rectangle[{0, 0}]}, ImageSize -> 20], 
                Manipulate`Place[10], 
                InputField[
                 Dynamic[
                  Style[
                   NumberForm[$CellContext`blue$$, {5, 4}], 12, "Output", 
                   FontFamily -> "Arial"]], FieldSize -> 4]}}, 
              Alignment -> {Left, Center}]]}, {
            Row[{
              Style["Background's color schema", 16, Bold], 
              Spacer[5], 
              Button[
               Hyperlink[
               "(change)"], $CellContext`currentschema$$ = \
$CellContext`SetColorSchema[], Method -> "Queued", ImageSize -> Small, 
               Appearance -> "Frameless"]}], ""}, {
            Dynamic[
             MouseAppearance[
              EventHandler[
               Show[
                ColorData[$CellContext`currentschema$$, "Image"], ImageSize -> 
                Small], {
               "MouseClicked" :> ({$CellContext`red$$, $CellContext`green$$, \
$CellContext`blue$$} = Apply[List, 
                   ColorData[$CellContext`currentschema$$, 
                    First[
                    MousePosition["Graphics"]]]]), 
                "MouseDragged" :> ({$CellContext`red$$, $CellContext`green$$, \
$CellContext`blue$$} = Apply[List, 
                   ColorData[$CellContext`currentschema$$, 
                    First[
                    MousePosition["Graphics"]]]])}, PassEventsUp -> 
               False], $CellContext`cp]]}}, Alignment -> {Left, Center}, 
          Spacings -> {0, 1}]}, 
       "Options" :> {ControlPlacement -> Left, LocalizeVariables -> True}, 
       "DefaultOptions" :> {}],
      ImageSizeCache->{1119., {324., 331.}},
      SingleEvaluation->True],
     Deinitialization:>None,
     DynamicModuleValues:>{},
     Initialization:>({{$CellContext`firstfont = 
          "Andalus", $CellContext`installedfonts = {
           "Aharoni", "Andalus", "Angsana New", "AngsanaUPC", "Aparajita", 
            "Arabic Transparent", "Arabic Typesetting", "Arial", 
            "Arial Baltic", "Arial Black", "Arial CE", "Arial CYR", 
            "Arial Greek", "Arial TUR", "Arimo", "Batang", "BatangChe", 
            "Browallia New", "BrowalliaUPC", "Calibri", "Calibri Light", 
            "Cambria", "Cambria Math", "Candara", "Comic Sans MS", "Consolas",
             "Constantia", "Corbel", "Cordia New", "CordiaUPC", "Courier", 
            "Courier New", "Courier New Baltic", "Courier New CE", 
            "Courier New CYR", "Courier New Greek", "Courier New TUR", 
            "DaunPenh", "David", "DejaVu Sans", "DejaVu Sans Condensed", 
            "DejaVu Sans Light", "DejaVu Sans Mono", "DejaVu Serif", 
            "DejaVu Serif Condensed", "DFKai-SB", "DilleniaUPC", "DokChampa", 
            "Dotum", "DotumChe", "Ebrima", "Estrangelo Edessa", "EucrosiaUPC",
             "Euphemia", "FangSong", "Fixedsys", "Franklin Gothic Medium", 
            "FrankRuehl", "FreesiaUPC", "Gabriola", "Gautami", 
            "Gentium Basic", "Gentium Book Basic", "Georgia", "Gisha", 
            "Gulim", "GulimChe", "Gungsuh", "GungsuhChe", "Impact", "IrisUPC",
             "Iskoola Pota", "JasmineUPC", "KaiTi", "Kalinga", "Kartika", 
            "Khmer UI", "KodchiangUPC", "Kokila", "Lao UI", "Latha", 
            "Leelawadee", "Levenim MT", "LilyUPC", "Lucida Console", 
            "Lucida Sans Unicode", "Malgun Gothic", "Mangal", "Marlett", 
            "Meiryo", "Meiryo UI", "Microsoft Himalaya", "Microsoft JhengHei",
             "Microsoft New Tai Lue", "Microsoft PhagsPa", 
            "Microsoft Sans Serif", "Microsoft Tai Le", "Microsoft Uighur", 
            "Microsoft YaHei", "Microsoft Yi Baiti", "MingLiU", 
            "MingLiU-ExtB", "MingLiU_HKSCS", "MingLiU_HKSCS-ExtB", "Miriam", 
            "Miriam Fixed", "Modern", "Mongolian Baiti", "MoolBoran", 
            "MS Gothic", "MS Mincho", "MS PGothic", "MS PMincho", 
            "MS Sans Serif", "MS Serif", "MS UI Gothic", "MV Boli", 
            "Narkisim", "NSimSun", "Nyala", "OpenSymbol", "Palatino Linotype",
             "Plantagenet Cherokee", "PMingLiU", "PMingLiU-ExtB", "Raavi", 
            "Rod", "Roman", "Sakkal Majalla", "Script", "Segoe Print", 
            "Segoe Script", "Segoe UI", "Segoe UI Light", "Segoe UI Semibold",
             "Segoe UI Symbol", "Shonar Bangla", "Shruti", "SimHei", 
            "Simplified Arabic", "Simplified Arabic Fixed", "SimSun", 
            "SimSun-ExtB", "Small Fonts", "Sylfaen", "Symbol", "System", 
            "Tahoma", "Terminal", "Times New Roman", "Times New Roman Baltic",
             "Times New Roman CE", "Times New Roman CYR", 
            "Times New Roman Greek", "Times New Roman TUR", 
            "Traditional Arabic", "Trebuchet MS", "Tunga", "Utsaah", "Vani", 
            "Verdana", "Vijaya", "Vrinda", "Webdings", 
            "Wingdings"}, $CellContext`ifSize = 50, 
          Attributes[FE`Evaluate] = {HoldFirst}, FE`Evaluate[
            Pattern[FrontEnd`Private`e, 
             Blank[]]] := MathLink`CallFrontEndHeld[
            FrontEnd`Value[FrontEnd`Private`e]], $CellContext`fontfile = 
          "C:\\Users\\roberto\\Dropbox\\MSSTP\\fonts.txt", \
$CellContext`SetColorSchema[] := DialogInput[
            DialogNotebook[{
              Deploy[
               DynamicModule[{$CellContext`selectedSchema = "AlpineColors"}, 
                Panel[
                 Column[{
                   TabView[{"Gradients" -> Panel[
                    Grid[
                    Partition[
                    MapThread[Tooltip[
                    Button[
                    Show[
                    ColorData[#, "Image"], ImageSize -> 
                    Small], $CellContext`selectedSchema = Evaluate[#], 
                    ImageMargins -> 0, Appearance -> "Frameless"], 
                    Panel[
                    Column[{
                    Style[#, 12, Bold], #2}]]]& , {
                    ColorData["Gradients"], 
                    ColorData["Gradients", "Image"]}], 4, 4, 1, ""], 
                    Spacings -> {0.1, 0.1}], Background -> GrayLevel[0.2], 
                    ImageSize -> {750, 380}, Alignment -> Center], "Indexed" -> 
                    Panel[
                    Grid[
                    Partition[
                    MapThread[Tooltip[
                    Button[
                    Show[
                    ColorData[#, "Image"], ImageSize -> 
                    Small], $CellContext`selectedSchema = Evaluate[#], 
                    ImageMargins -> 0, Appearance -> "Frameless"], 
                    Panel[
                    Column[{
                    Style[#, 12, Bold], #2}]]]& , {
                    ColorData["Indexed"], 
                    ColorData["Indexed", "Image"]}], 4, 4, 1, ""], 
                    Spacings -> {0.1, 0.1}], Background -> GrayLevel[0.2], 
                    ImageSize -> {750, 380}, Alignment -> Center], "Named" -> 
                    MenuView[
                    MapThread[# -> Panel[
                    Button[
                    Show[
                    ColorData[#, "Image"], ImageSize -> 
                    450], $CellContext`selectedSchema = Evaluate[#], 
                    ImageMargins -> 0, Appearance -> "Frameless"], Background -> 
                    GrayLevel[0.2], ImageSize -> {700, 350}, Alignment -> 
                    Center]& , {
                    ColorData["Named"], 
                    ColorData["Named", "Image"]}]], "Physical" -> Panel[
                    Grid[
                    Partition[
                    MapThread[Tooltip[
                    Button[
                    Show[
                    ColorData[#, "Image"], ImageSize -> 
                    Large], $CellContext`selectedSchema = Evaluate[#], 
                    ImageMargins -> 0, Appearance -> "Frameless"], 
                    Panel[
                    Column[{
                    Style[#, 12, Bold], #2}]]]& , {
                    ColorData["Physical"], 
                    ColorData["Physical", "Image"]}], 1], 
                    Spacings -> {0.1, 0.1}], Background -> GrayLevel[0.2], 
                    ImageSize -> {750, 380}, Alignment -> Center]}, 
                    ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
                    Center], 
                   Style[
                    Grid[{{"Current selected schema: ", 
                    Dynamic[$CellContext`selectedSchema]}}, 
                    ItemSize -> {{15, 15}, Automatic}], 12, Bold], 
                   Pane[
                    Dynamic[
                    Framed[
                    Show[
                    ColorData[$CellContext`selectedSchema, "Image"], 
                    ImageSize -> Small], ImageMargins -> 0, FrameMargins -> 
                    0]], Alignment -> Center, ImageSize -> {500, 130}], 
                   Spacer[10], 
                   Row[{
                    DefaultButton[
                    DialogReturn[$CellContext`selectedSchema]], 
                    CancelButton[
                    DialogReturn[False]]}]}, Alignment -> Center], Appearance -> 
                 "Frameless", ImageSize -> {Automatic, 700}]]]}, WindowTitle -> 
             "Color schema selector", WindowFloating -> 
             True]], $CellContext`cp = Image[CompressedData["
1:eJxTTMoPSmJmYGCQgGIWBuoBGRkZZjk5uVgxMbFQKhoLB8bGxnODg4P/S0lJ
/ePh4bGkptkaGhpRkZGR/6ytrf/z8vL+4+bm1qSW2bKyssJ2dnYv/fz8/unq
6v4Dmn+UWmaDgLq6+jw3N7d/FhYW/yUlJUFh40iJeQs37ORZufv42clLtkw1
MrOqNjc3/6evr/8P6I//XFxcKyh177r9J6pW7z3+b82eo/+cXFz/aWpq/hMX
F//HwcHxk4mJSY5S8/edv2F0+OrdN4ev3Pu389SV/wnp2f+B8fmPi5vnLKVm
w8DlB89Urj15/ez8g1f/d5y+/n/Wqi3/mvqm/lu0+cC09hmLGSk1/8HDh+Zv
3769cenW/cubDl/4MWnZln/1kxf/a56x/HVV72xeSsy+efMmy7t37za+fv16
340bNxYfPXU2qnve2uLCtumnUiq7Yih1+/v376N+/Phx+tWrV7MePnzYdvjw
YYrDAwYO33gi9O3Hz30/f/6c8enTp5nPnj2Tp5bZIFC8+sz8kgMPf005dO38
k1dvI6lpdvzCk5ZFG8/9idv75J//nCPXqtedZaeW2aEzdzKnLD16Km3vg3+B
Ky/+CZ5/zI4S84RXLWc0PHNAPOTSIXAVEb7oUGrSuvP/Inc8+Oc97/BMihw7
pVGef9+uKy5PH/1b+enNg/yT54NC5u97Gb/3yX/fpSefpSzcIEiJ8SwTk5pV
juz5Z3/jyb+uFz//9d9+8y9q261//uuu/0tYNbV5fp9cwIdGhpn/lqtv+73e
pwCkZ5sIA+MWVgaTjSzMqYdkFWIvWLsJwcxjNGAQ5V3MOV33hPIuy/MGJ7WW
m7203Trtn8vRM/89jj/6H3Lm87/QM2//W+889t98df6/3Dkq/zYtZPv/ep/4
v7+XQv/+6WRZ/MyC4dwtU5Z/1y2V/t8OiPx3P7Xo5SZlfUjaZWeQli8VX5t0
NeRH16vy//V3U//XXM34l3qy4b/H3nn/jXbv/Kd8ZMd/iYN7/5vtXfY/Zkvl
v84tMf8PHw75d2e77L8Hsxi/P61h/fEhi/ffixDZ/7dcTf6dNLP4P4lfYoEV
nyAojTEBsQAzJ5OxhJlAhWup0bb8LUGva88n/2u8Xv3Pc0fKZ9E8u73stgYT
WdVUS3l0NSrl7DR6dO0kWwUEGX2Beo2B2EyMh8HPQ4mtrs9BfNchN6V3x/1d
f2hz8yLXNaB8Dkov3ECWFAsfkwGLCLMFUEQGKMYDxGxQeRBmhdJMUH2MUDZI
nBfIkOJgYpBjgeihKQAAfWahwg==
            "], "Byte", ColorSpace -> "RGB", Interleaving -> True]}; {50}}; 
      Typeset`initDone$$ = True),
     SynchronousInitialization->True,
     UnsavedVariables:>{Typeset`initDone$$},
     UntrackedVariables:>{Typeset`size$$}], "Manipulate",
    Deployed->True,
    StripOnInput->False],
   Manipulate`InterpretManipulate[1]],
  DynamicModuleValues:>{}]],
 CellMargins->{{0, 0}, {0, 0}},
 CellBracketOptions->{"Color"->RGBColor[0.269993, 0.308507, 0.6]},
 CellHorizontalScrolling->True,
 PageBreakAbove->True,
 PageBreakWithin->False,
 ShowAutoStyles->True,
 LineSpacing->{1.25, 0},
 AutoItalicWords->{},
 ScriptMinSize->9,
 ShowStringCharacters->False,
 FontFamily:>CurrentValue["PanelFontFamily"],
 FontSize:>CurrentValue["PanelFontSize"]]
},
WindowSize->All,
WindowMargins->{{134, Automatic}, {Automatic, -11}},
WindowElements->{},
FrontEndVersion->"9.0 for Microsoft Windows (64-bit) (January 25, 2013)",
StyleDefinitions->"Palette.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 29591, 620, 657, InheritFromParent,
 PageBreakAbove->True,
 PageBreakWithin->False]
}
]
*)

(* End of internal cache information *)
