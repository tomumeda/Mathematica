(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 8.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       157,          7]
NotebookDataLength[    163576,       3550]
NotebookOptionsPosition[    158843,       3394]
NotebookOutlinePosition[    159398,       3414]
CellTagsIndexPosition[    159355,       3411]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["1   Efficient evaluation of convolutions", "Section",
 CellChangeTimes->{{3.648996103749282*^9, 3.6489961205099583`*^9}, {
  3.6494365966918697`*^9, 3.64943660316187*^9}, {3.6494370018818703`*^9, 
  3.64943701535887*^9}}],

Cell[CellGroupData[{

Cell["1)", "Subsection",
 CellChangeTimes->{{3.6489961230662136`*^9, 3.648996128402747*^9}, {
   3.64943661351287*^9, 3.6494366140138702`*^9}, 3.649612740677108*^9}],

Cell[BoxData[{
 RowBox[{"ClearAll", "[", "l", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[CapitalTheta]", "=", "10"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Epsilon]", "=", 
   RowBox[{"1", "/", 
    SuperscriptBox["2", "8"]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"l", "[", "X__", "]"}], ":=", 
   RowBox[{"Table", "[", 
    RowBox[{"X", " ", ",", 
     RowBox[{"{", 
      RowBox[{"\[Theta]", ",", 
       RowBox[{"-", "\[CapitalTheta]"}], ",", 
       RowBox[{"\[CapitalTheta]", "-", "\[Epsilon]"}], " ", ",", 
       RowBox[{"2", "\[CapitalTheta]", " ", "\[Epsilon]"}]}], "}"}]}], 
    "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.64943663079987*^9, 3.6494366309298697`*^9}, {
   3.649606885731737*^9, 3.649606886221786*^9}, 3.6496079252086744`*^9, 
   3.6496113373479624`*^9, {3.6496114538326097`*^9, 3.649611457124939*^9}, {
   3.6496119069849205`*^9, 3.649611909100132*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"l", "[", "\[Theta]", "]"}], ",", 
       RowBox[{"l", "[", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"-", 
          RowBox[{"Cosh", "[", "\[Theta]", "]"}]}]], "]"}]}], "}"}], "//", 
     "Transpose"}], "//", 
    RowBox[{
     RowBox[{"ListPlot", "[", 
      RowBox[{"#", ",", 
       RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}], "&"}]}], ",", " ", 
   RowBox[{"Plot", "[", 
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"-", 
       RowBox[{"Cosh", "[", "\[Theta]", "]"}]}]], ",", 
     RowBox[{"{", 
      RowBox[{"\[Theta]", ",", 
       RowBox[{"-", "10"}], ",", "10"}], "}"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", "Red"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.64943663550187*^9, 3.64943681675387*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, 
    {Hue[0.67, 0.6, 0.6], PointBox[CompressedData["
1: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
zi2cDbHU6ZwdnMs4V3I++7//BWAnzWI=
      "]]}, {}}, {{}, {}, 
    {RGBColor[1, 0, 0], LineBox[CompressedData["
1:eJxN23k4VU/8OHDLxcXl3itKyh4hyZ6458xE0WKNSlqULW3IlijZKVqQNbKm
LCFkq9whayT7ElmyhBSy779+z/P9fvqef87zembmmfecM2fmff4YUQv7E9ZM
DAwM+swMDP//fveH3p/NTXHE8D/XqMfW+Z61f9an9C8WLf+zyAGHdfvZf654
EEYcGP1nolynEPr8z0+dLx73evbPmYxOqQz7/5nFWkdx+3mx/7ylq+p6cqjo
fz7xMdZS+pPIf/aYwq4/GRL+z8W3Yq/mGAj9izfspMhGzE5k3ut+zaHpFqtO
/Af9I5MCyJFWzFIcIi2QVnO7w+nsdmSmxD1tccta8oLfU74vr7ahHYvtSk8L
1Pd5XmTO5tyyFXWHVHxh5slTZtgrTNfy50XKby9R9dIN1b4GxwRmtvMgqaoz
IRFfp9R3ctimz2lSkc62PSfliU9oF8oaQsRoVDTzSV/Z4uFTWpKjgoOhChV9
l9458l4vlibZs6KatZuKXAIaG3/Zv6DZPjYX+CpCRdySy+uuepm0DK3KdTYB
KlL/zFxcdfYNbXJRalBlCxWZMU8JB7IX0vZlPay0JFFRTWmDbs3vdzTHi39e
hrJQUezcdunKrHJaAe/pYPoGBb19KhRx5GQ1baH2nd2vRQoKuFpCH5BtoKnd
FTmxY4aCLI4Inusoa6a5K/irHJ2gIFeO7TtjjTpoH0bG+W8NUdBKTLq4FFsv
jSFWfy21l4IuXvg85R42SNPUz+9vaaega76TCQoMozQ/Jv6PDF8oKE6IMrrD
+yetpvBOmlwtBclUdz0tlJmhcVwbvH+unILyXKy5v1rP03SFtW88KKWgzvs5
fAtJK7RHrRmGxfkUlKu7L7c+hAFrDiQrj2ZRUKOdciPxAQHjpTlv402jIFxz
04PXmR07Nd21cjDh7/js955PukfGolOxPvtoCmpLPR6q57oF6zFNLo8PpSCp
4yTe/QR+TIiL7UX9Awq6WdDRbR4tiF0svxa07Pu3fvaLrgwVMSzZpena7rsU
NEKrdnl5URIbllYxOOlKQV29XUrqrnswyb4YRV/7v+OZkVcYbZXHroRt8L2x
paBSPYmVs9HKWJa25XLfJQpi35Osu032APZ7paaXdJaC6iMcI96X4Jh8jixS
N6EgMzbmpN2lmpijZWiKrR4F8So+brrYoI0VbFsIiNSmICaeI69Hio5ji/Vm
VysBBVXWhj4ktBli6l50vT9qFPT5xni2rK0Jdkd5l4KIIgVNtt6kcheZYmVj
Qbz6eyior3whiWXkPMYY/2vRYxcFibVySkZxW2CHjE70pAtSUOjsq71H6qyx
AJaiss6tFKRHPRRWDq9itSU7klkoFKT4SdwyNdoe47Dz8ldip6DfmJeGx7oj
pis2YnuJiYLU8mJV4hpcMaHX4dFCi2SkUTxPbDvlgaXwnTd3Hyej86E37uw1
98KkPCUlO3rIaC30t+nrCF8sa3RqUqGRjPhmbZedbAIxBYOS/IeIjNL3OZ+m
/grGCot83MfzyOjsdGHwQOoTTF1E9+DhF2RkSIrt5W0Ox+hBfMSkKDJqiJU7
sDM0Cjs009e4dp+MoI5m16ONZ1jdmVcRpnfIiFqq/+bZs0RMv+LmuQI7MgI+
LU692SlYq4yGOOUSGUnUzFpL6r3ETMMJE9eMyeiKYcns54eZ2LfVz7k1h8lo
WC7x2a/DuZiFVdQtcTUyajMszDyulI+NNlzE78mQ0XEtjk9bkwqxayoyLD07
yShFu0BLIbUUc2QpeelKJqMyH4IVG0bH3Nt1jvEwkZFeqJ1dzPEKzOdFx+Tr
OW40ezGOamtbhT1wsX589Ac32nlnZUWJtQ4LOzynMNLNjcoSv8dUqX3GYvl8
27wauJH8Q6eXFzmbseQR6q2ddG60bmq/n+VbK5bxNnF78RtulAGvndku0onl
+e97b5zKjWiLl8o9Rr5ipSfLLkxFcqObYmanL8N+rEJCjzH4PjeaufKd95L4
d+zTfE+K5B1utEPi1HwpcQRrqbqqXWHHjaIm43yuXBjDvkYsj52/xI0iXvaU
3FOexL5bBwUvG3OjbImqtDj9aWxcZZtchDY3MvDZMpzQ8QebZklrkj/AjVit
77WufpjHltqVnRr2cCPnvYdFf1KXMYa0j3y2QtxowLG78OLgGkZ0PVHMTOVG
ktRsx+fPGXCK9qBZAjM3omoMqh/ayYzzb3VYV1/gQkbdhB1n51hwkdGNhI4x
LmRxjtI2r8iOSxU+1HTs4UIXL9VWvBoh4fIBO0e4GrkQXShCtechBVc7lRmY
jrjQ0RwnC5FZHhxKqssczudC4UUJtSCLDz+yUNsw8IILOb9fxzY+8uOG1aft
70RzIUGlvJSr2jtx08hRKn8wFyLudNnnLSKCX7RxKci/y4VkT9I/XL8khl9W
JZw2cOBCdthnG8vfu3A71vDlCQsuhP/wV/3UtBt37RCNCzjJhRIqR10EtuzB
PdNycbEjXGiW06RrA8nhAa5g8IM6F4rXTy4pcVLAH2k3+p7Zy4X0Gs5ccP6k
hEduPS85L8yFTlBDxgquq+LPR3/WPuHhQkPUneKWlgfwtEL3a7IsXIj3yb0J
82Ianh3Azl27SEIjEjYcBhoQLzwVnWs5QULKQzH1Qic18TLJ3cabvSQUIMMS
bJJ7CK9eeDsf+4WEhGYL2M6a6OCN1YeiVStIiNmnYdzy6DG8I7JVvaWAhPzZ
GpF7tB7eZ2Px7cZLEiIE2DU1vDDER1Rn7rHHklDq3pay/sIT+CSrl9iLEBJy
7chV8GM5ic91cFfBeyQk3aTZZRl9Gl9Li7/ce5OEHN32qLe4muGEW7IcblYk
dJ/6iNT76jxO0nmXteU0CVkMxA9kPruI8247ZpBzlIRaPIryViMs8J0/umaO
0UhI5bbp7OtaK3xX0eWno3J/49nXO/H0wGVcNnBB1UeUhG4flBwgT13BlU/7
dwvykpCoHBDaNn0dp+3mvVPCSkIz0qoOu8Qc8EOLyUInlzlRNC0xZnX5Jq5b
o1A+/ZMTEW+OX99BcMZNopBlSB8nUlXzSrl12BU/d9mAVaqZEx1fS//m8tEN
t9zf9+rjR05UfdytYcHXA7d5tf+UdhEnimnrV3h0yhO/uj2UuS6DE708lcy0
rcgLv/FgIvf4c05Urtfp7mLrgzusal1oDOVEA69yFDI1/XCn6/GcRv6caL50
LVnraADu+m2huNWNE+VWXfpC9QrCb+sb2py6zolK32/gKj8f4Hfo6Vu6zTnR
zn7MSPjxQ/yePHP5WWNOJMVUZqer9gT3STpn16fNiVqm5XmtPoXi/jyFOy6p
c6Jer5noZ17heJAvuW5oLydar1zZ9+t8BB48Z+tqI8qJvggKVAVbR+GPrCvE
x3k5kfKO829HY2Pwpzounr9XOZD/vA1/e/xzPKq4cc/NKQ50dpvJXENJIh4r
LdU9+50DjQrLW37USsbjY70DXDs4UBybiz5tKgVP5OxRWq7jQAe2iA82l73A
U+4oD3p84ECxpDvpum9f4mm/Hj7ayOVACQ+/X0lrT8dff4HjzNEciCXIrmok
MRvPhbGRAcEc6MinT2K26bl4wZtZLfZ7HCgt49P2k0J5eJGY3kywIwc6zMp/
7uibfLw0PO05tw0HAndthG9ZvcU/EBh0Q89woBnzJ/Iq6kU4cjmzvEWPA53e
dGFgVCnBq0+TTLYrcyD9Es9a/9QPeF2tNWPc7r/lyZ16gWSENxygZwvt4EDP
bx5r32Vdjn/J4D+XxM2Bchvefa1vq8Bbdjiy72LiQKaSCZjOxUq8PaS+MG2e
HaXwKJfdZa/Gu9Z3WUmPs6OdOX43nFpq8P7+zjK5JnYUUDWvdqShHv9uqHD9
zUd2JGuf8PkLYyM+Wv5gu3IROwp6VWejIt+EjysOVxdmsKNzCfRyS5dmfDIF
cz7wnB2FW+ws/tbcgk/xRom+D2VHCwbHI8R02vA//tONuD874go2larpaMeX
LqdIH7rOjr6PWRrOHe/GV7vWOqrN2dHZrbaGO1R68I2jp/yOGrOjirtiXIPg
G874LkehQZsdPfbC356068cJsuz9+ursSDDfqObE4ADOFm8R0ryXHfEaHOB/
KPwd5+B+f8BElB0l3L01xOU0hFOn7Z6eIbIj3znFF8zmozjvpdqDvatEdAhM
KCut/MD5W0SnLkwRkVzVdJdw7ji+Q8sjbvA7EdXwsBw38fmJCxW0HbXqICJL
PatqO8dfuKiE3OJoHRGlVU58FvWZwndFBqZe+UBEE9MfPWK7p3EZN/VNu1Qi
OvJdStoPzuLom77MUCQR2bDadB/JnsNPaVmePH2fiJZKu7u8lBfwyVe3vOo9
iOhNmY1iXNsi7sMdkgnsiKh7NZEm+GQZ53dO7Mi/SESEpUcGMbareHZ3AaOU
MRFRGD56lpiv492p305T1IjI/YFFi1sXA7Dj+OPjJ0NE5z5XxliwMQGCA2v2
0k4iSt5zpMnsKDOIbRfovk4mopszu7fcSCAAeY19hEFGItr/7LDaGw5WUJ2o
te/kHBvaO95ccjyEDZxjNTWrG2VDIT8mxO0k2EFQs1fum3o29Cj/x1eTFBIQ
2h/RI1HGhjK6ch+VP+AGBXHprLG5bMj23Z1pXx0KGLjccs4ngg3V7Hn/jtOd
B7h+Hg1cCGRDCqYVvYxZWwBJaTXvqjsbktu8cThoihfs3xBnNzZnQ1KspYzV
2dtAg6Waco0RG/qcIVtjLLsdWNTpmmscYkM4X/F+YboAePTU5a24NBsSIsWu
+0oJgV0r9weidrAhdx/TM4kMIqDU/DkniZsNPSyalylfFgGjMjWX5v6woq7h
VKWXvOLgzpOeENsRVnSlvizr1f5dgGdhqqi3kxVd5iu2HLkiAfByfu6q96wo
v2vetnZjN2iT3HvgQA4r2naFobDbQhpcDTlo9TqJFe06LOW91iUDIk5fLY0I
YEXpvi9TQzf2ApkPniPst/+W71b+npSzDyCxcIrnNVb0QX60bbNUHkz+emdj
Y8iK+mp15PhSFIGPcVPoV01W5CPHzjf6Sgnwlwy/11dhRRyEwgrFd8rgkB/X
lv0CrCiecuAGjW0/+DouimeSWNGFLd1GjJpqwMFA9YrwJgtSPpE5YRR8ADwT
MKezDbOgRwqRBU3HaUDey2nCo4MFDby8KSRZiYHqkUC+6VoW9PCHfN1JPQD+
5OZe63rNggSth7LNjx0EQVurInUTWZDRany5iIwmELrTXY7CWNCJGEta1BYt
cEyHiT/9Fgt68O6iGoHlMEj6Zlx5+yALall7SFi6dhQoDiuutCmzoDO5xJVj
j46BygmqvLwUC7pbvXYh9d1xMLr45dkoNwua8Ijkq1DTB7c2spsPMrEgMf/6
aNX7BoDI8ogtfp6AgpX2LhOdDIEMj66TcS8B6Z6V8lQbMgLv+PekZ38hoHcl
x/zOvDgBdIU5+tk/ElB5vM2J63bGwE629hhKJyChHcmO+7aeBHnah8T23iKg
kUaw2VFuCrT0xE2DrhLQqG8kbU/5GdBmzPRo6DwBTYxe/sxfZwYWLqLlmEME
tBkj8ih19hwIvJywb34/AakosWkWbb0A+O08rQ33EFAJyxYDXS1zoOFBa2bl
IaA0ngjCUu9F0OC9g82ChYDOjh3gwXwugQtBK7QPS8yo5fKv4jJZC+AVUfzK
qZ8ZeVCuDS6GWoLKHGWvgSxmZDk1zdidaANOFm4p1EhkRvt9j2lGOV0Go+//
/IwMZ0bCv9rfx+naAuKn3NN67syoNFZwGwfPVaA3LLuvVIcZ9UfVFp79fQP0
TXBa82kwI9Lh4uv4oh1wmJmIdZBjRnYo0LuK2QGEbbxi3c3HjIwcQz/cEb4J
Ovgl+sK/M6HvOesLuQFO4LIwgXeqnQmZdN/uHpJxBksSQ0eP1TEh//DjlMut
zkBAKektQy4T0pA0Ss1WcAUX9AQf3rjLhORHcx7clrgNpozXKmodmJBf4aSJ
9e/bwMusZ0nciglRDtAtD713B8mXY6y+HmNCDF/yLu27fAf88Oaj6fAzIVmH
X4mMa/cAx92cqXAOJqQcGxTz2tsLyLkdTRlYY0SP2fLevCB6A1e7uxzug4zI
QDvB5bWID2A9O9KVlcGIMj409YW5+wGZU/dCluMYkUfs/giqgD/QN9oOtR//
rc+wG2l/8AcROnov+50YURtbXyI7ORDsUn7rwoMxos3MUl3LwfvgyD4DafN9
jCg1hRTFlvgAXJcZ780UZUQp8e1n6y2CQYGI4KHDrIzo/kJb2PBcCNDi8udx
+8KAJi7rvTSXfAIsRk1yvl1iQJScaK2hiXAQMPjbQsaEAWkq6y7x2T0FGb1B
W29pM6AMQyvj4tmn4E/L+7uUPQxIPFzO8RJrJGC6dzQ6YGyTrrH52KHjaDQ4
5nJ3U/jzJp1c9ISTfzAahF57Y1PyZpPOVn2tesY9BoiYbleZdN+kb1/K/nWv
MBYAhfFmI65NOqFJm9VbLx4E7BY88HNmg56ll3ZhYzkeNAoaJfp1bNDXZyf8
VNKfgwscJXZFCRv0085mI1NsieDOUBCnoOIGfddQjdvBe0mgNELq8NipdXrF
OJVY+SYVEM/+sGSkrdOXBsHU/Z0vwCmRNB8B0XX6weXH8QVBL8CfDHGk+3ON
vpqZNqtunQakkZDGm3trdPsRyCiw7xWInuBVcH+1SrcfyACmrFlgNKfVIPzh
Kt1dnv1SeGAWUHYJs8tyXKUr2VtcVOF4Db5skrP6aKt0kz8zA5lbsgErH+du
reYV+oDGg82XO3KBC2AUJK0s0w9mDH3Qv5gHKghIQ6J/mb5jhvpmKjMPUD55
muGVy/Sm8jEPjaU8kGWyFuXwaJnufOu8aFNYPhi+ssjTLrZM79N8bdr6pQCc
ePqL+Pz4En167oezoW0RkB/vntsXv0D/+KDfqJ79A3Ce3iu9zW+BfqFrmoVq
8QEUL3qf37i6QF+N8S6sLP0ADrLKVDeoLdCPJJV32N8oAyfE3aOutM3TuxoV
XV910oHLeQH1FM55erE0K/8283JQ2mx2b6v7LL202qbZ07ISHCrtYV8/NU3n
PEB4vz/rE8jOeHGgRmOa3vrr9CfGoU+A/5n9lVCRafr6E2W+iu31oGORNex4
2xT9+M6nzcKB9UDC4xQlfuU3Xf1ZP5v0pQZQ4T1Pgjq/6Pxku480aiNYe6TE
GjAwTsen5/ymM5tAk32NtUDGOB1xn/hqXdUEUgzPVmU7jdNNEnOKUF8TOMbj
69fJOk4X1Be/t4vaDGIiWpik947RjWy4ksKcm4Fq3M3N+tuj9B1vzcXvqbQA
h/ScJeqWIXqv0+rknWetQJ7bzldz4Dv9mt391K05rWDGUZbb6fV3+iFvmur9
ilbgSEsXb9P5Tq+IUji0ONYKXL4k60feGaR7vpCu+qnUBmYn9hxVaeinP5GZ
udZf3gacC15diLTpp6f8FojubGkDC3clnBcZ+ulvDpp5Jw+1gSWKcEKJSh8d
97PdnUNoB2uqPPNYQi99QrtUM/ZQO2D1XUrUduymm9pTNezftYNAXZfCl6Ru
erF1wrtrde2AuPVPPfFlFz3tIs+oSmc74Ej/ufCpp5OuwNeyXfFPOyB/6dM1
ONxBf+PcblEh0QGeRJ+1yO1vp4/eXnqyS7ED8Fh03aK6t9P5UmSPnMA7AO98
c3Jrdht9QS7sFPlUB+DfUbV0mr+VfkC515jdtwPEDB/kLslrob8Mo4mXP+wA
Atll4gJ6LfRQv/BkzegOIHiwWL/Xu5muXi34NSmrA2g1njpa3vGFfqpIO7i+
pQNoXzJ09uX8QvdZ4VSo7+kAR+aOJhyGjfQvIrYLYcMdQFcAm69Lb6Cbjbnt
dZ/vAKdsxJNa7tTRwyLdspJ5O8GDm05BYW9r6QMeA22lOzrBhzsf7U/8rqH7
Pkgnx4l1gl3hlniLeTX9a8OQasm+TmD6PF8iLLqKfnhGa2hOpRMEpzNznWiu
pNt6DYkua3SCP/SUnmbNj3Sx9YBBM51OIFk/WxHqUUGvO03aU6zbCc50aGUY
FZTTnbXbor4ZdQI0OeTWLIHoZRvrt7zOdoKxqctI7EMZ3TvN7f26eScwYCU+
Tpb7QI/ru1ytadUJhJSOyCZTS+mqhRld4tc7gf/RsRVR32L68Zd5pXT7TjBp
HlSXNFdIP7ARxSfu1AmMXaWiRW3e0lOOjHbpuXaC0pBam6TOfHrNOm0e3O4E
oim2KqJH8+jKYQbnlj06QVAJkZBUmkv/dn+Ewd2zE/QlGL04aJpNbwn62lHu
1QleN4RqHtTIpDtZCLU2+XQCj+Xmfij0iq68++3PNL9OcFSS5y5kfEFnUija
diigE2wzPiEAh5PoB+WMDF4FdoL6zV329x7F0233VAa3BnUC2zMv0j1NouiH
nlnXVN3vBIR8ieG7AqH04fMJ654POgHcroutIH/6vuopmc2/no6OsZqJcaTv
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
f/5/sEohew==
      "]]}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{0, 0},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.64943677791287*^9, 3.6494368170928698`*^9}, 
   3.64943692075987*^9, {3.64944060267787*^9, 3.6494406090478697`*^9}, 
   3.649606888552019*^9, 3.649608648417988*^9, 3.649609679204797*^9, 
   3.649610718273321*^9, 3.6496113383880663`*^9, {3.649611459644191*^9, 
   3.6496114625204782`*^9}, {3.6496118990341253`*^9, 3.6496119172239437`*^9}, 
   3.6496123013783555`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["2)", "Subsection",
 CellChangeTimes->{{3.64943683466187*^9, 3.64943683493687*^9}}],

Cell[BoxData[{
 RowBox[{"ClearAll", "[", "F", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"F", "[", 
     RowBox[{"+", "1"}], "]"}], "[", "X_", "]"}], ":=", 
   RowBox[{"Fourier", "[", "X", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"F", "[", 
     RowBox[{"-", "1"}], "]"}], "[", "X_", "]"}], ":=", 
   RowBox[{"RotateRight", "[", 
    RowBox[{
     RowBox[{"2", " ", 
      RowBox[{"\[CapitalTheta]", "/", 
       SqrtBox[
        RowBox[{"Length", "[", "X", "]"}]]}], 
      RowBox[{"InverseFourier", "[", "X", "]"}]}], ",", 
     RowBox[{
      RowBox[{"Length", "[", "X", "]"}], "/", "2"}]}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.6488170812750034`*^9, 3.648817134465322*^9}, {
   3.648817413056178*^9, 3.648817460616934*^9}, 3.648817578569728*^9, {
   3.648818277187583*^9, 3.648818283308195*^9}, {3.648823709748193*^9, 
   3.6488237677829695`*^9}, 3.6488238432757607`*^9, {3.648823897689986*^9, 
   3.648823898559638*^9}, {3.648823977861532*^9, 3.6488240269806194`*^9}, {
   3.648824125251792*^9, 3.648824126589658*^9}, {3.648824721438076*^9, 
   3.648824781091076*^9}, {3.648825206172076*^9, 3.648825208385076*^9}, {
   3.648825372465076*^9, 3.648825376012076*^9}, 3.648825680336875*^9, {
   3.648826872572087*^9, 3.648826942466076*^9}, {3.6488280686556835`*^9, 
   3.6488280688897066`*^9}, {3.648828418090623*^9, 3.648828448570671*^9}, {
   3.648828587792592*^9, 3.6488286124510574`*^9}, 3.64882880859367*^9, {
   3.648829416820486*^9, 3.648829418008605*^9}, {3.648829496923496*^9, 
   3.6488294983886423`*^9}, {3.648832973623131*^9, 3.6488329750902777`*^9}, 
   3.648833159011668*^9, 3.6488335524960127`*^9, {3.6488336340801697`*^9, 
   3.6488336638551474`*^9}, 3.6488337919689574`*^9, 3.648834085005258*^9, {
   3.6488344627040243`*^9, 3.6488345015629096`*^9}, {3.648834687532505*^9, 
   3.6488346891056623`*^9}, {3.648834796368387*^9, 3.6488347978395343`*^9}, {
   3.648837946178337*^9, 3.6488379478255014`*^9}, {3.6488386546361756`*^9, 
   3.6488386574144535`*^9}, {3.648914055138682*^9, 3.648914057108879*^9}, {
   3.6489141088710546`*^9, 3.6489141317693443`*^9}, 3.6489142297436104`*^9, {
   3.6489142987186103`*^9, 3.6489143039946103`*^9}, {3.6489143409656105`*^9, 
   3.64891434107561*^9}, {3.6489171423133917`*^9, 3.648917145165677*^9}, {
   3.648920905002986*^9, 3.6489209074119864`*^9}, 3.6489213371308556`*^9, 
   3.6489214265437956`*^9, {3.6489216888460236`*^9, 3.6489216891730556`*^9}, {
   3.6489267389880104`*^9, 3.64892676328144*^9}, {3.648926887776888*^9, 
   3.6489268896580763`*^9}, 3.648927154501558*^9, {3.6489857456903105`*^9, 
   3.6489857463853807`*^9}, {3.6489952454844637`*^9, 3.648995255268442*^9}, {
   3.648996131650072*^9, 3.6489961751334195`*^9}, {3.649094642854717*^9, 
   3.6490946446618977`*^9}, {3.6490949086592946`*^9, 3.649094936798108*^9}, 
   3.64909509353078*^9, {3.6491784399791884`*^9, 3.6491784764128313`*^9}, {
   3.6494368287978697`*^9, 3.6494368458238697`*^9}}],

Cell[TextData[{
 "Now lets test these tools on an example convolution \n\n\[LineSeparator]",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"f", "(", "\[Theta]", ")"}], "=", 
    RowBox[{
     SubsuperscriptBox["\[Integral]", 
      RowBox[{"-", "\[Infinity]"}], "\[Infinity]"], 
     RowBox[{
      RowBox[{"\[DifferentialD]", "\[CurlyTheta]"}], " ", 
      FractionBox[
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"-", " ", 
         RowBox[{"cosh", "(", "\[CurlyTheta]", ")"}]}]], 
       RowBox[{"Cosh", "[", 
        RowBox[{"\[Theta]", "-", "\[CurlyTheta]"}], "]"}]]}]}]}], 
   TraditionalForm]]],
 " "
}], "Text",
 CellChangeTimes->{{3.64899617763867*^9, 3.648996323521257*^9}, {
   3.6491784793171215`*^9, 3.649178480220212*^9}, 3.651772020071218*^9}],

Cell["First use NIntegrate", "Text",
 CellChangeTimes->{{3.648996326636568*^9, 3.6489963303439393`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Dynamic", "[", 
  RowBox[{"\[Theta]", "//", "N"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"l", "[", 
     RowBox[{"{", 
      RowBox[{"\[Theta]", ",", 
       RowBox[{"NIntegrate", "[", 
        RowBox[{
         FractionBox[
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{"-", 
            RowBox[{"Cosh", "[", "\[CurlyTheta]", "]"}]}]], 
          RowBox[{"Cosh", "[", 
           RowBox[{"\[Theta]", "-", "\[CurlyTheta]"}], "]"}]], ",", 
         RowBox[{"{", 
          RowBox[{"\[CurlyTheta]", ",", 
           RowBox[{"-", "\[CapitalTheta]"}], ",", "\[CapitalTheta]"}], 
          "}"}]}], "]"}]}], "}"}], "]"}], "//", "Quiet"}], "//", "ListPlot"}],
   "//", "Timing"}]}], "Input",
 CellChangeTimes->{{3.648996331745079*^9, 3.6489964486597695`*^9}, {
  3.648996588614808*^9, 3.6489966078938084`*^9}, {3.6489966916578083`*^9, 
  3.6489966928048086`*^9}, {3.648997693195225*^9, 3.6489977051874237`*^9}, {
  3.6491783777249637`*^9, 3.6491783948946805`*^9}, {3.6491785925364428`*^9, 
  3.6491786016333523`*^9}}],

Cell[BoxData[
 DynamicBox[ToBoxes[
   N[$CellContext`\[Theta]], StandardForm],
  ImageSizeCache->{12., {1., 12.}}]], "Output",
 CellChangeTimes->{{3.648996403222226*^9, 3.64899644906781*^9}, {
   3.648996593074808*^9, 3.6489966083028083`*^9}, 3.6489966932038083`*^9, {
   3.6489976983007355`*^9, 3.6489977056384687`*^9}, 3.6490951059980264`*^9, {
   3.6491783877559667`*^9, 3.6491783952737184`*^9}, {3.6491784640915995`*^9, 
   3.649178481935384*^9}, 3.6491786020483932`*^9, 3.649184945725255*^9, 
   3.6492608346286435`*^9, 3.6492625059257565`*^9, 3.64943685069687*^9, 
   3.64943692477987*^9, 3.6494406141388702`*^9, 3.649606892821446*^9, 
   3.6496086484709935`*^9, 3.649609679241752*^9, 3.6496107183163214`*^9, 
   3.6496113429485226`*^9, 3.6496114625664825`*^9, {3.6496118990991316`*^9, 
   3.6496119172769494`*^9}, 3.6496123014253607`*^9, 3.651772023626021*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1.505015`", ",", 
   GraphicsBox[{{}, {{}, 
      {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       0.007333333333333334], AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJxVV2tUVNcVviAoIOoAAwwzMNyZq4RYTfBVeVTvFh9AiM+goqZxtKiAKULb
0I7VrvFFWPgoKigRtROtimgQtCIS9W6VRtGqiKiIqKOiJUYNEhJ5uLBd3s1a
58yfWd86d999v7PP2fv7TAuXzVjkLPz/5yQI7/7f/QbiQb++T1IOBMrvYL2E
Yw5fD7F2GVVcKqHPsrzrXYqo4mwJe/skZKQGmlVskbB2c1zI+/mSisMlfLmz
9enaIYNUrJGwonD+us6mEBU3m7FBqdwSeTZUxWjGV7ZjW4dWDVZxgRmXey3Y
0N4yRMXpZjT0P/HMKf5DFceasebErqVdz8JULJpxREzI8uaPhqu43YRrF1g/
SrswQsU1JozrsFY+WDhKxUUmzNyV0K0Ej1axzYRTdrdv/E6IUHGiCTd/G530
2C1KxWEmPGdesW181BgVu5mwLmlu/KxCWcUOET/0+NozxW+ciitEfJDqn3rP
Gq3iXBHjm0Kfjegcr+JkEY8f+Wr+v7+aqGIQsWR9e5phXoyKdSLOtrtmtUEc
vT8Y/xO1ZVDslHh6XzCuzMxZG581meKDMT0xaWvm86kqbjHigYZHxyZET1ex
3YjhZ1M84w7OUPE0Iz7+774c69AEFQtG1Dzc2z3y+kyqdxDWd4es67t9NtU3
COu+2Jl9btUcqmcQ/mFImO+cvHlUv0Dcb6rM8qz9LdUrEAvMjy5/EGyh+gSi
ruP085y0BVQPA8ZPt10NubOQ9t+A0RfyfxWxIIn224Dnh0+vCnFfTPz1WL5w
kT7rxhLir8cj61dbpfMpxF+PpydGfuJ6dynxD8DVR8+3pRvTiH8AFp24e/XP
senEPwCjBpW+fb8wg/gHoLtmkZ/F/Y/EX4eLywY5z8r/E/HXYe6KH/tljssk
/jrU60y7PtX8hfj7Y7lz+YhGl+XE3x8vPrp0zcm8gvj7oyDM3hGw9G/E3w+P
rinuvJNhI/5+aD/0MvPmhVXE3w/fK7B65kWsIf6++OJJV/rM6rXE3xf9Ep8V
fWnNIv6+2CR1FF/6OJv4a7H84OtJbRNziL8WPSo/+0SbvIH4a3HTq8KB1vJN
xF+LkWPnhs7dkUv8fXDZ7h2OqT9tJv4++KJZzhmWvJX4+2BqwKADv+nKI/7e
eC75XOrdkm3E3xsbkxrvHVhXQPy9cea326Vlq3cQfy/ctqqhYWTRTuLvhQ31
pXm/7txN/L0w+ejt4ten7cRfg79ba83ZqNtD/DWYl7zP596mvcRfgxGXDOAh
7aPnB6CzMWHWZ7f30/oAvLZn+vC4kiLaj/4o7C2dsLC4mPj3x6iTCz5IuXqY
+PbDxtc3GyYGHSF+nphfXdbZ60op8fHEx88vXWyVjtL390WXkQWfB+Yfo/we
2GmVYsaaj1N+D4ybMXSbdKWc8ruj7tDp8D3bKyi/O7bvj9mwbU0l5XfD6CGW
2PtbTlH+PlgyWoyeceEM5e+DbZGHVs/fjJS/N45t+Tww7cZZyu+KkjJv8deD
z1N+V4xZOqG7dHsV5XfBfxQ83B1h+I7yu2D2lFR7+fELlL8X1p95GvTXJdWU
3xlrS755VBx2mfI7Iw5xjx/hdYXyO2Hg+JNxVW7XKL+AY4SypqT1NZRfwPb1
kbXDd10n/FZJyDg1etTJWsrfrVSGjy46dP8G5Xuj3DKO2ljseZPe36Wseiou
00ffovhO5ZhhqmfFytsU36GcS7g32fdMPcW/Vpru1psLnRoo/hdlWPnFCRsm
3aX4n5VCsdbhtr6R4tuU3vHVep8r9yi+VdFldyfmeTyg+FfK2Olv7GWig+Jb
lERteOi+E4SFl8qLGR1pfeIe0vM/KBuv34JTNwgL3yvN1WumHp71iNafKpbi
37+9WENYaFJONYe+pxn3mNYfKpM/LTny9/2EhfvKP09NdUkRmgjfUWYtt0XX
Te7BdUq14GaQNvXgq0rJxMbZ57EHVylRl8q64EkP/pfSunJUa0xXDxaE0DmN
cfucn/Ssyy3cepXMx1+V+ffXyRe5/Hdk/vvuy9z32x7KUzh+TTLP/6nM78/3
Mr9/P8gbuP19Kb9k9x9a5NlsfWyv5DFs/bBV1rP1Fdpkrv7ws7yTPR+2X2Tu
/OBr+Ql7voQO+Sx7/qBTPsqeT1uXzJ1ffCNz51volk+y5x/eytz9AAG4++MQ
QGbvl80J9Oz9E52Bu5/oDDXs/bX0Au5+Cy6wjr3/dhfYxfYHcIVJbP9wuMJA
tr/YegPXf8Q+8BPbn7APHGb7l8UNuP4muEMH2//s7sD1R/CAWLZ/OjyA66+2
vtCL7b+iJ3D9GT2B69+WftDA9nehP0Sy/d/eH7j5AAOglp0fjgHAzxcNRLLz
J1cD+ex8cmiAm19hXrCEnW82L6hn51+NF3DzUfQGbn6mewM3X9EbkJ2/Gh/g
5rPFB35k53epD6Sx813QAjf/p2mB0wd2LXD6oUULJ1h9Ab7wmNUfub6gZfWJ
wxees/olzA8Gs/rG5ge7Wf1T4wdlrD4S/cGZ1U/p/sDpK/SH46z+0uggiNVn
Fh1w+q1UB5y+EwLAg9V/0wKA04f2ADjA6seWAOD0JejhDKs/c/XwDatPHXqo
YPVrmAGqWH1rMwCnf2sM8DGrj8VA4PRzeiBw+hoDgdPfmiDIYPW5JQg4/V4a
BJy+F4zA6f9pRuD8gd0IEax/aDHCftZfQDBksP4jNxg4f+IIhsusf9GJwPkb
EIHzP8kicP4oVwTOP1WI4GD9lUOEoaz/cjMB58/CTFDF+rdEE+Sx/s5mAs7/
FZngC9Yf1pgglvWP7SbIYv2laIZhrP+MNUMt60/TzaBn/WuBGVay/hbN0Mr6
32YzcP5YIwHnn8MlaGH9tUWCOtZ/Z0vA+fNSCbxZ/14vQRT5+/8BcSTy5Q==

        "]]}, {}}, {}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{None, None},
    AxesOrigin->{0, 0},
    DisplayFunction->Identity,
    Frame->{{False, False}, {False, False}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    Method->{},
    PlotRange->{{-10., 9.921875}, {0, 0.6565729563324441}},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.02], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}]}], "}"}]], "Output",
 CellChangeTimes->{{3.648996403222226*^9, 3.64899644906781*^9}, {
   3.648996593074808*^9, 3.6489966083028083`*^9}, 3.6489966932038083`*^9, {
   3.6489976983007355`*^9, 3.6489977056384687`*^9}, 3.6490951059980264`*^9, {
   3.6491783877559667`*^9, 3.6491783952737184`*^9}, {3.6491784640915995`*^9, 
   3.649178481935384*^9}, 3.6491786020483932`*^9, 3.649184945725255*^9, 
   3.6492608346286435`*^9, 3.6492625059257565`*^9, 3.64943685069687*^9, 
   3.64943692477987*^9, 3.6494406141388702`*^9, 3.649606892821446*^9, 
   3.6496086484709935`*^9, 3.649609679241752*^9, 3.6496107183163214`*^9, 
   3.6496113429485226`*^9, 3.6496114625664825`*^9, {3.6496118990991316`*^9, 
   3.6496119172769494`*^9}, 3.6496123014253607`*^9, 3.651772025192151*^9}]
}, Open  ]],

Cell["Now use Fourier", "Text",
 CellChangeTimes->{{3.648996456735577*^9, 3.648996462286132*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"l", "[", "\[Theta]", "]"}], ",", 
      RowBox[{
       RowBox[{"F", "[", 
        RowBox[{"-", "1"}], "]"}], "[", 
       RowBox[{
        RowBox[{
         RowBox[{"F", "[", 
          RowBox[{"+", "1"}], "]"}], "[", 
         RowBox[{"l", "[", 
          FractionBox["1", 
           RowBox[{"Cosh", "[", "\[Theta]", "]"}]], "]"}], "]"}], 
        RowBox[{
         RowBox[{"F", "[", 
          RowBox[{"+", "1"}], "]"}], "[", 
         RowBox[{"l", "[", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{"-", 
            RowBox[{"Cosh", "[", "\[Theta]", "]"}]}]], "]"}], "]"}]}], 
       "]"}]}], "}"}], "//", "Transpose"}], "//", "ListPlot"}], "//", 
  "Timing"}]], "Input",
 CellChangeTimes->{{3.6489964641013136`*^9, 3.648996577001808*^9}, {
  3.6489966130308084`*^9, 3.6489966245768085`*^9}, {3.6489966987088084`*^9, 
  3.648996700079808*^9}, {3.648997712039109*^9, 3.648997720833988*^9}, {
  3.6491783897401648`*^9, 3.649178404553646*^9}, {3.6491786092961187`*^9, 
  3.6491786323494234`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.027933`", ",", 
   GraphicsBox[{{}, {{}, 
      {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       0.007333333333333334], AbsoluteThickness[1.6], PointBox[CompressedData["
1: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
XxsUZvN3osJsPs9V+AiT3ysVzlTz/f8BBdXqTw==
        "]]}, {}}, {}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{None, None},
    AxesOrigin->{0, 0},
    DisplayFunction->Identity,
    Frame->{{False, False}, {False, False}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    Method->{},
    PlotRange->{{-10., 9.921875}, {0, 0.6565729563422368}},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.02], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}]}], "}"}]], "Output",
 CellChangeTimes->{{3.6489965026098084`*^9, 3.648996577404808*^9}, 
   3.6489966250598087`*^9, 3.6489967004888086`*^9, 3.6489977213660417`*^9, 
   3.649095109300357*^9, 3.649178405112702*^9, {3.6491784664468346`*^9, 
   3.6491784854457345`*^9}, {3.649178619261115*^9, 3.6491786328154697`*^9}, 
   3.649184948167255*^9, 3.6492608364508257`*^9, 3.649262508850049*^9, {
   3.64943685587687*^9, 3.64943687716287*^9}, {3.6494369273968697`*^9, 
   3.64943693116387*^9}, 3.64944061777087*^9, 3.649606895234687*^9, 
   3.6496086503781843`*^9, 3.6496096810685577`*^9, 3.649610720334321*^9, 
   3.6496113463008575`*^9, 3.649611463450571*^9, {3.6496119004212637`*^9, 
   3.649611919231145*^9}, 3.6496123033645544`*^9, 3.651772035150898*^9}]
}, Open  ]],

Cell[": )", "Text",
 CellChangeTimes->{{3.6489967077618084`*^9, 3.648996710527808*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"1.654", "/", "0.015"}]], "Input",
 CellChangeTimes->{{3.649095116752102*^9, 3.6490951272121477`*^9}}],

Cell[BoxData["110.26666666666667`"], "Output",
 CellChangeTimes->{
  3.6490951275831847`*^9, 3.6494369339078703`*^9, 3.6496086504171877`*^9, 
   3.6496096811324806`*^9, 3.6496107203993216`*^9, 3.649611463483575*^9, {
   3.6496119004752693`*^9, 3.6496119192801495`*^9}, 3.649612303449563*^9, 
   3.6517720413903437`*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["2   TBA: solution by interation", "Section",
 CellChangeTimes->{{3.6489961573446407`*^9, 3.6489961702819347`*^9}, {
  3.6490955408130894`*^9, 3.6490955410960894`*^9}, {3.64943699397587*^9, 
  3.6494370275338697`*^9}}],

Cell[CellGroupData[{

Cell["1)", "Subsection",
 CellChangeTimes->{{3.6494370329298697`*^9, 3.64943703391287*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"\[ScriptCapitalK]", "[", 
       RowBox[{"a", ",", "b"}], "]"}], "[", "\[Theta]_", "]"}], "=", 
     RowBox[{
      RowBox[{
       FractionBox["1", 
        RowBox[{"2", "\[Pi]", " ", "\[ImaginaryI]"}]], " ", 
       RowBox[{
        SubscriptBox["\[PartialD]", "\[Theta]"], 
        RowBox[{"Log", "[", 
         RowBox[{"Product", "[", 
          RowBox[{
           RowBox[{
            FractionBox[
             RowBox[{"Sinh", "[", 
              RowBox[{
               FractionBox["\[Theta]", "2"], "+", 
               RowBox[{"\[ImaginaryI]", " ", 
                FractionBox[
                 RowBox[{"\[Pi]", " ", 
                  RowBox[{"(", 
                   RowBox[{"p", "-", "1"}], ")"}]}], 
                 RowBox[{"2", " ", "4"}]]}]}], "]"}], 
             RowBox[{"Sinh", "[", 
              RowBox[{
               FractionBox["\[Theta]", "2"], "-", 
               RowBox[{"\[ImaginaryI]", " ", 
                FractionBox[
                 RowBox[{"\[Pi]", " ", 
                  RowBox[{"(", 
                   RowBox[{"p", "-", "1"}], ")"}]}], 
                 RowBox[{"2", " ", "4"}]]}]}], "]"}]], 
            FractionBox[
             RowBox[{"Sinh", "[", 
              RowBox[{
               FractionBox["\[Theta]", "2"], "+", 
               RowBox[{"\[ImaginaryI]", " ", 
                FractionBox[
                 RowBox[{"\[Pi]", " ", 
                  RowBox[{"(", 
                   RowBox[{"p", "+", "1"}], ")"}]}], 
                 RowBox[{"2", " ", "4"}]]}]}], "]"}], 
             RowBox[{"Sinh", "[", 
              RowBox[{
               FractionBox["\[Theta]", "2"], "-", 
               RowBox[{"\[ImaginaryI]", " ", 
                FractionBox[
                 RowBox[{"\[Pi]", " ", 
                  RowBox[{"(", 
                   RowBox[{"p", "+", "1"}], ")"}]}], 
                 RowBox[{"2", " ", "4"}]]}]}], "]"}]]}], ",", 
           RowBox[{"{", 
            RowBox[{"p", ",", 
             RowBox[{
              RowBox[{"Abs", "[", 
               RowBox[{"a", "-", "b"}], "]"}], "+", "1"}], ",", 
             RowBox[{"a", "+", "b", "-", "1"}], ",", "2"}], "}"}]}], "]"}], 
         "]"}]}]}], "//", "FullSimplify"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"a", ",", "1", ",", 
      RowBox[{"4", "-", "1"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"b", ",", "1", ",", 
      RowBox[{"4", "-", "1"}]}], "}"}]}], "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.6494369644338703`*^9, 3.64943697824587*^9}, {
  3.64943710928587*^9, 3.64943711281487*^9}, {3.64943764268987*^9, 
  3.64943765009487*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"\[ScriptCapitalK]", "[", 
      RowBox[{"a", ",", "b"}], "]"}], "[", "\[Theta]", "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"a", ",", "1", ",", 
      RowBox[{"4", "-", "1"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"b", ",", "1", ",", 
      RowBox[{"4", "-", "1"}]}], "}"}]}], "]"}], "//", 
  "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.64944063090687*^9, 3.64944064713087*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{"-", 
       FractionBox[
        RowBox[{"Sech", "[", "\[Theta]", "]"}], 
        RowBox[{"2", " ", "\[Pi]"}]]}], 
      RowBox[{"-", 
       FractionBox[
        RowBox[{
         SqrtBox["2"], " ", 
         RowBox[{"Cosh", "[", "\[Theta]", "]"}], " ", 
         RowBox[{"Sech", "[", 
          RowBox[{"2", " ", "\[Theta]"}], "]"}]}], "\[Pi]"]}], 
      RowBox[{"-", 
       FractionBox[
        RowBox[{"Sech", "[", "\[Theta]", "]"}], 
        RowBox[{"2", " ", "\[Pi]"}]]}]},
     {
      RowBox[{"-", 
       FractionBox[
        RowBox[{
         SqrtBox["2"], " ", 
         RowBox[{"Cosh", "[", "\[Theta]", "]"}], " ", 
         RowBox[{"Sech", "[", 
          RowBox[{"2", " ", "\[Theta]"}], "]"}]}], "\[Pi]"]}], 
      RowBox[{"-", 
       FractionBox[
        RowBox[{"Sech", "[", "\[Theta]", "]"}], "\[Pi]"]}], 
      RowBox[{"-", 
       FractionBox[
        RowBox[{
         SqrtBox["2"], " ", 
         RowBox[{"Cosh", "[", "\[Theta]", "]"}], " ", 
         RowBox[{"Sech", "[", 
          RowBox[{"2", " ", "\[Theta]"}], "]"}]}], "\[Pi]"]}]},
     {
      RowBox[{"-", 
       FractionBox[
        RowBox[{"Sech", "[", "\[Theta]", "]"}], 
        RowBox[{"2", " ", "\[Pi]"}]]}], 
      RowBox[{"-", 
       FractionBox[
        RowBox[{
         SqrtBox["2"], " ", 
         RowBox[{"Cosh", "[", "\[Theta]", "]"}], " ", 
         RowBox[{"Sech", "[", 
          RowBox[{"2", " ", "\[Theta]"}], "]"}]}], "\[Pi]"]}], 
      RowBox[{"-", 
       FractionBox[
        RowBox[{"Sech", "[", "\[Theta]", "]"}], 
        RowBox[{"2", " ", "\[Pi]"}]]}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.6494406475668697`*^9, 3.6496069030974736`*^9, 
  3.649608666567803*^9, 3.6496096858588023`*^9, 3.649610722690321*^9, 
  3.649611351505378*^9, 3.649611466686895*^9, 3.649611931956417*^9, 
  3.649612307565974*^9, 3.6517720527898827`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["2)", "Subsection",
 CellChangeTimes->{{3.64943759530087*^9, 3.64943759554887*^9}}],

Cell[TextData[{
 "We replace the Y-functions with constants as ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[Theta]", "\[Rule]", 
    RowBox[{"-", "\[Infinity]"}]}], TraditionalForm]]],
 ".  Now we can perform the integrals on the RHS by just integrating the \
kernels.  This gives "
}], "Text",
 CellChangeTimes->{{3.64944016779487*^9, 3.6494402198898697`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{"M", "=", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"\[ScriptCapitalK]", "[", 
            RowBox[{"a", ",", "b"}], "]"}], "[", "\[Theta]", "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"a", ",", "1", ",", 
            RowBox[{"4", "-", "1"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"b", ",", "1", ",", 
            RowBox[{"4", "-", "1"}]}], "}"}]}], "]"}], "//", "FullSimplify"}],
        "//", 
       RowBox[{
        RowBox[{"NIntegrate", "[", 
         RowBox[{"#", ",", 
          RowBox[{"{", 
           RowBox[{"\[Theta]", ",", 
            RowBox[{"-", "\[Infinity]"}], ",", "\[Infinity]"}], "}"}]}], 
         "]"}], "&"}]}], "//", 
      RowBox[{
       RowBox[{"Rationalize", "[", 
        RowBox[{"#", ",", 
         SuperscriptBox["10", 
          RowBox[{"-", "9"}]]}], "]"}], "&"}]}], ")"}]}], ")"}], "//", 
  "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.64943759730687*^9, 3.64943778149887*^9}, 
   3.6494382032098703`*^9, 3.6494382787978697`*^9, {3.64943880551787*^9, 
   3.64943881062987*^9}, {3.64943888084587*^9, 3.6494388816988697`*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{"-", 
       FractionBox["1", "2"]}], 
      RowBox[{"-", "1"}], 
      RowBox[{"-", 
       FractionBox["1", "2"]}]},
     {
      RowBox[{"-", "1"}], 
      RowBox[{"-", "1"}], 
      RowBox[{"-", "1"}]},
     {
      RowBox[{"-", 
       FractionBox["1", "2"]}], 
      RowBox[{"-", "1"}], 
      RowBox[{"-", 
       FractionBox["1", "2"]}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.6494376161318703`*^9, 3.64943762081287*^9}, {
   3.64943766038787*^9, 3.6494377300218697`*^9}, {3.64943776600287*^9, 
   3.64943778216687*^9}, 3.6494382043568697`*^9, 3.64943827935087*^9, {
   3.64943879659787*^9, 3.6494388112388697`*^9}, 3.64943888209487*^9, 
   3.64944065580787*^9, 3.6496069050246663`*^9, 3.6496079342205753`*^9, 
   3.6496086667138176`*^9, 3.6496096859826536`*^9, 3.649610722846321*^9, 
   3.6496113516323905`*^9, 3.6496114668179083`*^9, 3.649611932105432*^9, 
   3.64961230771799*^9, 3.6517720660618353`*^9}]
}, Open  ]],

Cell["\<\
Now solve the resulting algebraic equations for the constants\
\>", "Text",
 CellChangeTimes->{{3.6494401566388702`*^9, 3.64944015693987*^9}, {
  3.6494402321988697`*^9, 3.6494402465008698`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"c", "=", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"y", "/@", 
       RowBox[{"Range", "[", 
        RowBox[{"1", ",", "3"}], "]"}]}], ")"}], "/.", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"Log", "[", "#", "]"}], "+", 
             RowBox[{"M", ".", 
              RowBox[{"Log", "[", 
               RowBox[{"1", "+", 
                RowBox[{"1", "/", "#"}]}], "]"}]}]}], ")"}], "&"}], "@", 
          RowBox[{"(", 
           RowBox[{"y", "/@", 
            RowBox[{"Range", "[", 
             RowBox[{"1", ",", "3"}], "]"}]}], ")"}]}], "\[Equal]", "0"}], "//", 
        RowBox[{
         RowBox[{"Solve", "[", 
          RowBox[{"#", ",", 
           RowBox[{"(", 
            RowBox[{"y", "/@", 
             RowBox[{"Range", "[", 
              RowBox[{"1", ",", "3"}], "]"}]}], ")"}]}], "]"}], "&"}]}], "//",
        "Flatten"}], ")"}]}], ")"}]}], "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{
  3.64943841897587*^9, {3.64943851294587*^9, 3.64943861904587*^9}, {
   3.64943870097187*^9, 3.64943877024487*^9}, {3.6494391203418703`*^9, 
   3.64943916770287*^9}, {3.6494391993678703`*^9, 3.6494392157428703`*^9}, {
   3.64944007067787*^9, 3.64944014704887*^9}, {3.6494402627758703`*^9, 
   3.64944027903687*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"2", ",", "3", ",", "2"}], "}"}]], "Output",
 CellChangeTimes->{{3.64943852385387*^9, 3.64943853082987*^9}, {
   3.64943856414587*^9, 3.6494386196908703`*^9}, {3.64943872510187*^9, 
   3.64943877056087*^9}, {3.64943912811287*^9, 3.64943918451687*^9}, 
   3.64943921639887*^9, {3.64944010449387*^9, 3.6494401162388697`*^9}, 
   3.64944014778687*^9, 3.64944028126987*^9, 3.64944065922987*^9, 
   3.6496069075189157`*^9, 3.649607935376691*^9, 3.649608666919838*^9, 
   3.6496096861624374`*^9, 3.649610723032321*^9, 3.6496113518304105`*^9, 
   3.6496114670139275`*^9, 3.649611932302452*^9, 3.6496123079240103`*^9, 
   3.651772069625799*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["3)", "Subsection",
 CellChangeTimes->{{3.6494375907498703`*^9, 3.6494375909808702`*^9}}],

Cell[TextData[{
 "Now we compute  ",
 Cell[BoxData[Cell[TextData[Cell[BoxData[
   FormBox[
    RowBox[{
     RowBox[{
      SubscriptBox["K", "ab"], "(", 
      RowBox[{"\[Theta]", "-", "\[CurlyTheta]"}], ")"}], "*", 
     RowBox[{"cut", "(", "\[CurlyTheta]", ")"}], 
     RowBox[{"log", "(", 
      RowBox[{"1", "+", 
       RowBox[{"1", "/", 
        SubscriptBox["c", "b"]}]}], ")"}]}], TraditionalForm]]]]]], "Input",
  CellChangeTimes->{{3.6494394945008698`*^9, 3.64943954941987*^9}, {
   3.6494395955668697`*^9, 3.64943967034787*^9}}]
}], "Text",
 CellChangeTimes->{{3.64943968389987*^9, 3.6494397377898703`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Dynamic", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"a", ",", "b", ",", "\[Theta]"}], "}"}], "//", "N"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"C\[Infinity]", "[", "a", "]"}], "=", 
      RowBox[{"Sum", "[", 
       RowBox[{
        RowBox[{"l", "[", 
         RowBox[{"NIntegrate", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"\[ScriptCapitalK]", "[", 
              RowBox[{"a", ",", "b"}], "]"}], "[", 
             RowBox[{"\[CurlyTheta]", "-", "\[Theta]"}], "]"}], " ", 
            RowBox[{"1", "/", "2"}], 
            RowBox[{"(", 
             RowBox[{"1", "+", 
              RowBox[{"Tanh", "[", 
               RowBox[{"-", "\[CurlyTheta]"}], "]"}]}], ")"}], 
            RowBox[{"Log", "[", 
             RowBox[{"1", "+", 
              RowBox[{"1", "/", 
               RowBox[{
               "c", "\[LeftDoubleBracket]", "b", 
                "\[RightDoubleBracket]"}]}]}], "]"}]}], ",", 
           RowBox[{"{", 
            RowBox[{"\[CurlyTheta]", ",", 
             RowBox[{"-", "\[Infinity]"}], ",", 
             RowBox[{"+", "\[Infinity]"}]}], "}"}]}], "]"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"b", ",", "1", ",", 
          RowBox[{"4", "-", "1"}]}], "}"}]}], "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"a", ",", "1", ",", 
       RowBox[{"4", "-", "1"}]}], "}"}]}], "]"}], "//", "Quiet"}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.6488342665654125`*^9, 3.648834273402096*^9}, {
  3.648834339773732*^9, 3.6488343446332183`*^9}, {3.6488343762303777`*^9, 
  3.6488344149952536`*^9}, {3.6488345281715703`*^9, 3.648834619040656*^9}, {
  3.6490004931715755`*^9, 3.6490005026995754`*^9}, {3.649000648118575*^9, 
  3.6490006505045753`*^9}, {3.6490007675795755`*^9, 3.649000779049575*^9}, {
  3.6494372382168703`*^9, 3.64943728225887*^9}, {3.64943734893887*^9, 
  3.6494374028818703`*^9}, {3.64943924548787*^9, 3.64943925466687*^9}, {
  3.64943975494487*^9, 3.64943977064287*^9}, {3.64944030675187*^9, 
  3.64944031288087*^9}, {3.64944099254987*^9, 3.64944105305987*^9}, {
  3.64944114638087*^9, 3.6494411893898697`*^9}}],

Cell[BoxData[
 DynamicBox[ToBoxes[
   N[{$CellContext`a, $CellContext`b, $CellContext`\[Theta]}], StandardForm],
  ImageSizeCache->{98., {3.608642578125, 13.}}]], "Output",
 CellChangeTimes->{{3.64943738006087*^9, 3.6494373928428698`*^9}, 
   3.64943925541387*^9, 3.6494397734008703`*^9, {3.64944031435187*^9, 
   3.64944033179587*^9}, {3.64944067442887*^9, 3.64944068321887*^9}, 
   3.6494410535408697`*^9, 3.6494411905588703`*^9, 3.6496069139935627`*^9, 
   3.6496079395711107`*^9, 3.649608666986845*^9, 3.6496096861864085`*^9, 
   3.649610723062321*^9, 3.649611351877415*^9, 3.649611467059932*^9, 
   3.6496119323514566`*^9, 3.6496123079730153`*^9, 3.651772073131864*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["4)", "Subsection",
 CellChangeTimes->{{3.6494393119928703`*^9, 3.64943931224487*^9}}],

Cell["\<\
Now we will implement the recursive procedure for solving the TBA.\
\>", "Text",
 CellChangeTimes->{{3.64943981095387*^9, 3.6494398215328703`*^9}}],

Cell["\<\
First implement the kernels using the Fourier commands from section 1.\
\>", "Text",
 CellChangeTimes->{{3.64943931745287*^9, 3.64943932102787*^9}, {
  3.64944037907087*^9, 3.64944039007787*^9}}],

Cell[BoxData[{
 RowBox[{"ClearAll", "[", "K", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"k", "[", 
      RowBox[{"a", ",", "b"}], "]"}], "=", 
     RowBox[{
      RowBox[{"F", "[", 
       RowBox[{"+", "1"}], "]"}], "[", 
      RowBox[{"l", "[", 
       RowBox[{
        RowBox[{"\[ScriptCapitalK]", "[", 
         RowBox[{"a", ",", "b"}], "]"}], "[", "\[Theta]", "]"}], "]"}], 
      "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"a", ",", "1", ",", 
      RowBox[{"4", "-", "1"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"b", ",", "1", ",", 
      RowBox[{"4", "-", "1"}]}], "}"}]}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"K", "[", 
     RowBox[{"a_", ",", "b_"}], "]"}], "[", "f_", "]"}], ":=", 
   RowBox[{
    RowBox[{"F", "[", 
     RowBox[{"-", "1"}], "]"}], "[", 
    RowBox[{
     RowBox[{"k", "[", 
      RowBox[{"a", ",", "b"}], "]"}], " ", 
     RowBox[{
      RowBox[{"F", "[", 
       RowBox[{"+", "1"}], "]"}], "[", "f", "]"}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.64943934094287*^9, 3.64943934105987*^9}}],

Cell["Now the TBA input and the recursion", "Text",
 CellChangeTimes->{{3.6494394038048697`*^9, 3.6494394155518703`*^9}, {
  3.6494399991578703`*^9, 3.6494400006918697`*^9}}],

Cell[BoxData[{
 RowBox[{"ClearAll", "[", "Y", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"R", "=", 
   RowBox[{
    SqrtBox[
     RowBox[{"2", " ", "\[Pi]"}]], " ", 
    RowBox[{
     RowBox[{"Gamma", "[", 
      FractionBox["5", "4"], "]"}], "/", 
     RowBox[{"Gamma", "[", 
      FractionBox["7", "4"], "]"}]}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"m", "[", "a_", "]"}], "=", 
   RowBox[{
    RowBox[{"Sin", "[", 
     RowBox[{"\[Pi]", " ", 
      RowBox[{"a", "/", "4"}]}], "]"}], "/", 
    RowBox[{"Sin", "[", 
     RowBox[{"\[Pi]", "/", "4"}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Y", "[", "a_", "]"}], "[", "0", "]"}], "=", 
   RowBox[{"l", "[", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{"m", "[", "a", "]"}], " ", "R", " ", 
      SuperscriptBox["\[ExponentialE]", "\[Theta]"]}]], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"cut", " ", "=", 
    RowBox[{"l", "[", 
     RowBox[{
      RowBox[{"1", "/", "2"}], 
      RowBox[{"(", 
       RowBox[{"1", "+", 
        RowBox[{"Tanh", "[", 
         RowBox[{"-", "\[Theta]"}], "]"}]}], ")"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Y", "[", "a_", "]"}], "[", "n_", "]"}], ":=", 
   RowBox[{
    RowBox[{
     RowBox[{"Y", "[", "a", "]"}], "[", "n", "]"}], "=", 
    RowBox[{
     RowBox[{
      RowBox[{"Y", "[", "a", "]"}], "[", "0", "]"}], 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"-", 
        RowBox[{"C\[Infinity]", "[", "a", "]"}]}], "-", 
       RowBox[{"Sum", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"K", "[", 
           RowBox[{"a", ",", "b"}], "]"}], "[", 
          RowBox[{
           RowBox[{"Log", "[", 
            RowBox[{"1", "+", 
             RowBox[{"1", "/", 
              RowBox[{
               RowBox[{"Y", "[", "b", "]"}], "[", 
               RowBox[{"n", "-", "1"}], "]"}]}]}], "]"}], "-", 
           RowBox[{"cut", " ", 
            RowBox[{"Log", "[", 
             RowBox[{"1", "+", 
              RowBox[{"1", "/", 
               RowBox[{
               "c", "\[LeftDoubleBracket]", "b", 
                "\[RightDoubleBracket]"}]}]}], "]"}]}]}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"b", ",", "1", ",", 
           RowBox[{"4", "-", "1"}]}], "}"}]}], "]"}]}]]}]}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.648818017226589*^9, 3.648818051799046*^9}, {
   3.6488180882596917`*^9, 3.648818161061971*^9}, {3.648823676579466*^9, 
   3.6488236959317217`*^9}, {3.6488248165070763`*^9, 3.648824823697076*^9}, {
   3.6488248707580757`*^9, 3.648824898806076*^9}, {3.648824950895076*^9, 
   3.648825083388076*^9}, {3.648825116090076*^9, 3.648825132164076*^9}, {
   3.648825179512076*^9, 3.6488251893050756`*^9}, {3.648825346108076*^9, 
   3.648825348098076*^9}, {3.6488281277675943`*^9, 3.6488281534511623`*^9}, {
   3.6488283439952145`*^9, 3.64882841015883*^9}, 3.6488284597617903`*^9, {
   3.6488285075115643`*^9, 3.6488285124630594`*^9}, 3.648833106756443*^9, 
   3.648833142762043*^9, {3.6488333445222173`*^9, 3.648833377615526*^9}, 
   3.64883377469123*^9, {3.6488340247212305`*^9, 3.648834101813939*^9}, {
   3.648834636148367*^9, 3.6488346661093626`*^9}, {3.6488347250852594`*^9, 
   3.648834729696721*^9}, 3.648837518007524*^9, {3.6488379723399525`*^9, 
   3.6488379846901875`*^9}, {3.64890977052598*^9, 3.648909781504078*^9}, {
   3.6489103367467623`*^9, 3.6489103433587623`*^9}, {3.6489108301199384`*^9, 
   3.6489108332562523`*^9}, {3.6489109034462705`*^9, 3.648910905114437*^9}, 
   3.648910993872312*^9, {3.648911210715994*^9, 3.648911211007023*^9}, 
   3.6489126756115556`*^9, 3.648913251019278*^9, {3.6489132906822443`*^9, 
   3.6489132926994457`*^9}, 3.648913559650138*^9, {3.649000526723575*^9, 
   3.6490005267865753`*^9}, 3.649000634259575*^9, {3.6494374371468697`*^9, 
   3.64943746663087*^9}, {3.64943754932787*^9, 3.6494375748818703`*^9}, {
   3.64943933770087*^9, 3.64943934669587*^9}, {3.64943937878887*^9, 
   3.64943942544487*^9}, {3.64943983467187*^9, 3.64943985339787*^9}, {
   3.64943997302987*^9, 3.6494400314078703`*^9}, {3.64944040221987*^9, 
   3.64944043536987*^9}, 3.6494404857388697`*^9, {3.64944076077287*^9, 
   3.64944080131487*^9}, {3.6494409504228697`*^9, 3.6494409832248697`*^9}, 
   3.64944110528887*^9, {3.6494411963228703`*^9, 3.64944120548487*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"plt", "=", 
  RowBox[{"Show", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"l", "[", "\[Theta]", "]"}], ",", 
        RowBox[{"1", "/", 
         RowBox[{
          RowBox[{"Y", "[", "1", "]"}], "[", "20", "]"}]}]}], "}"}], "//", 
      "Transpose"}], "//", 
     RowBox[{
      RowBox[{"ListPlot", "[", 
       RowBox[{"#", ",", 
        RowBox[{"PlotStyle", "\[Rule]", "Black"}]}], "]"}], "&"}]}], ",", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"l", "[", "\[Theta]", "]"}], ",", 
        RowBox[{"1", "/", 
         RowBox[{
          RowBox[{"Y", "[", "2", "]"}], "[", "20", "]"}]}]}], "}"}], "//", 
      "Transpose"}], "//", 
     RowBox[{
      RowBox[{"ListPlot", "[", 
       RowBox[{"#", ",", 
        RowBox[{"PlotStyle", "\[Rule]", "Gray"}]}], "]"}], "&"}]}], ",", 
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"1", "/", "2"}], ",", 
        RowBox[{"1", "/", "3"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"\[Theta]", ",", 
        RowBox[{"-", "\[CapitalTheta]"}], ",", "\[CapitalTheta]"}], "}"}], 
      ",", 
      RowBox[{"PlotStyle", "\[Rule]", "Black"}]}], "]"}], ",", 
    RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.648825163275076*^9, 3.648825172695076*^9}, {
   3.648825215053076*^9, 3.648825270453076*^9}, {3.648825351204076*^9, 
   3.648825368119076*^9}, {3.6488284721680307`*^9, 3.648828495490362*^9}, {
   3.648828534582271*^9, 3.648828548759689*^9}, {3.648828599223735*^9, 
   3.648828604843297*^9}, 3.648828786663477*^9, 3.648833014795248*^9, {
   3.6488331303918066`*^9, 3.648833147339501*^9}, {3.648833770298791*^9, 
   3.6488338201307735`*^9}, {3.648834742059957*^9, 3.6488347490586567`*^9}, {
   3.6488347841971703`*^9, 3.6488347888626366`*^9}, {3.6488349805978084`*^9, 
   3.648835002567005*^9}, {3.64883791890761*^9, 3.648837931268846*^9}, {
   3.6488396022729297`*^9, 3.6488396024259453`*^9}, {3.648914084565624*^9, 
   3.648914100461214*^9}, {3.6489141467046103`*^9, 3.64891415215361*^9}, {
   3.648916126751832*^9, 3.648916129561113*^9}, {3.6489213671878605`*^9, 
   3.648921379760118*^9}, {3.648921436147756*^9, 3.6489214439425354`*^9}, {
   3.648921475862727*^9, 3.6489214787160125`*^9}, {3.648921698279967*^9, 
   3.6489216989090295`*^9}, 3.64892675268338*^9, 3.648926911633273*^9, 
   3.6490005619165754`*^9, 3.649000733881575*^9, {3.6492608830554857`*^9, 
   3.6492610085530343`*^9}, {3.649261235315708*^9, 3.6492612571968966`*^9}, {
   3.64943991546387*^9, 3.6494399199268703`*^9}, {3.64944044402887*^9, 
   3.64944045374187*^9}, {3.64944058542587*^9, 3.64944058767087*^9}, {
   3.64944090349887*^9, 3.6494409311258698`*^9}, {3.6494411140518703`*^9, 
   3.64944112633987*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {{}, 
     {GrayLevel[0], PointSize[0.007333333333333334], AbsoluteThickness[1.6], 
      PointBox[CompressedData["
1:eJxd13tYTOseB/DpwlS6TNNUU001F0U0Nd0UlfVuotSmCdnIfoqjjsuDomxJ
GdWJELlt10NRCoeTbJRk/RBJLlEqFQ2RSBdRKLvOflrrnX1mrX/m+Tzv+q3v
+r7vep6eREvWzI7UZP11abBYw7/D12gI+hH4zJGlJIZZLwG7hTGVUuwCCXiF
dr11wt4mAVGPp0CGHSGBxjjbKBdsLwmEZgyVuGJzJKCdVmLmjt0mhplOBWs8
sEEMV14eggnYh8RwWmedlhd2tBg+vFniOhE7QAzuJ476T8IWisHJNdDXG/ub
CA5YJRv4YFeJQOg2vlDlfBFcre0a7YutEMGvpEO4yvNFMNf88QKVZSLYU/er
gco6IkhuvROjep5SCPJLIUmq/CIh7Pq400H1fplCaF7isFzVZ5kQQmteuaj6
IiEc2z//NzdsvhA2LPw6XrW/SltIW3IXqc4n0xb0V/vljlHN28LANQ9/MXa3
DXhVrOcKsLNsYErfjW4ettwGnB7tqNDHZtlADI/YoqU6b2u4ZLP186ehZvp8
reFCcp+4AZtjDTtftk0nsUEAAu8pBtnY0QLQtKux2IwtFEDy3sfsBdhVVhB7
8nCUE7bCCnqPry4ZHKQtswJ5yKUNFdhKS3h+7BN7F3amJWw0fnEjCBtZghNb
rtTA7raA1OVzjv73T9pZFmAT2MSeiy23AO9NOaM7f9BmWcDRvQ+rN2EX8OHk
QH794ADuzwejytLqtdgcPjxIlRB1/bi/OdyzkK8Yhx1tDtL2mLgV33F/c+g0
mPHzgW+4vxksDVqblf8V9zeDGVd5Ldl9uL8ZJMx95ZvUi/ubQmfz7B2TvuD+
phB/z3xWdQ/ubwobOw/k+X3C/XkwmBU1c3sX7s+D9yHXEk904P48KHy9uSep
HffnQfXvHtXi97i/CZSP8clNbcX9TSC2fPukf7fg/iYgKTx6fKkS9+dC6J8R
Gk+bcH8uOLVbZTXW4/5cyDFtOre+Bvc3Bnt2kvTgY9zfGMbHXG91vo/7G0N8
VqHMtQz354DL1321GaW4Pwc8xi7okF3B/Tlgm749j30B328EP00V2P3IwetG
sHUBn+g7gvfDED56Ns9q3I37G8Jn94fdGSm4rwGciRbe6ojD/fQhYLqOZV0U
7qMPx9qaSsXz8PuPggcTjmTmTsX5epCb1uQrc8b5erBb+lC5i4/zdYE15Wze
tqGXdL4uSBXT4ppbaEfoQGxuaVLwHdrAhh1Bq7p3naItZIPDhT8yZibRVoyE
A1uc57uH0laOgLWb7QPfjqGNRsBs/n3Dgd4XdL426H6MatAhabO0QbCy9pcj
ybQjtCBh+kCRG6INmhD8j3c9IV+b6HxNmCXdK1uZR1uhAddP52zrCqatZMEr
twjtwO5GOp8FlaQm+/VW7CEyqsbJ3tqMNmuQrH0dk7r4SAOd94P8kFB1g8+j
rRgga0utEi8lP6fn+8mnPN3C82/r6fnv5Mbapn37fGjDVzJ4UtUs9tY6er6P
JDvtV5SX1dLzvSTvoXnl5d5n9PwXMjPc3qXZgjb0kKd/lvUmu9TQ859Ibc7O
Ukvfanq+m2zSPX9rse9Ter6TfCPZPibM7Ql9fzu5uDy+ep6wil5/T+43+jyn
bdQjer2VjOxI+DD1QSW9/obsdTQp9kiroNdfka1PyDMlk8vp9ZdknLh3ut9A
Ge3n5MLsvsyMm7do15CntOy+bzwItB+Rif1bAstHlNIuIy9evDF4mVtM+w8y
adG+3o/hl2n/9Sd3r2fi2L6LeJ3YvDaj+mjReTxP9GyPuenolI+fT4Rp9Cw5
G3IK5xNfjDKlydOO4/cj0rUibVO8DuL3J7I/GVoKlu/B/Yh7oX71k+PTcX/C
zu+yx+92yXh/iJBvoozrtvF4/4iRYkFvVlM03l/iQWD1+vKWSLz/hMRvVePQ
sjB8PsSLnBTNhC1yfH7EpsSQZ4uMpuLzJW6daL/qrOOBz594VHxuqJhvj78P
on1zWYGHthn+fgjjxpsih6va+Psi9DsDUxfO7plMzX8ndtWtjGXLX1JG/YT5
G4NrlXPKKSsGiG8jfzu06EgBZfhBpG/qckwpOkDPDxLeorNPRN3x9PwQIXVt
6TnJWUSbhcLyF9nlBnlTVrJQ35fbl1G+Of18DbTunzvChJY9vsMWaqLYTkWV
24R7lEETtV+XLb47eJRyhBYqTNnQdTpvJWWWNmprvTraaJQn5SxtlP/KWrKk
Z8iHyh+BJn+oKVllf4uycgRqr0wxqchWUFaMRFfecH34Y70oC9loE9dZ8D2g
3ZvKZyP/8P90xiccpByhg6YvjSrut51MmaWLuhPehd+3bZpE5esii7NpD+uP
r6WM9JBFcnivVEODslIPefdnx8nvpU6k8kehiVsO+89dx6Is1EfZTl110wKi
vah8fcQxL3HOi6z2pPIN0JfDhZETCsZRZhmi1fsa5Gf8YydQ+YZof+WCH3O9
CjyofCM06Gca3ND+3J3KN0KPZ4X5t+z67Eatc5Bpwg7NeK9+12FnctDMjX4r
i306XKj7OSjHd05pGVEhG7bMGK3Z82Gh0bTdztT7G6Px4qh0850TnYZdZYxQ
SFG0y7gKR6oPF8lu5zftFHiPH3Y0F73uvzx+Pex0oPpx0Vg99+yge9fGDJtj
gqT8DQ1Z4bftqL4myLFM6ik1OCUZdoEJMuTevZ5oME9E9eehnOV2//p85bnN
MOU8lDmTmzovzUFA7QcP+ZRP1J3f/5PFsLt5yPJtakR6qrUZ1d8UHb8W8u6X
mitcqr8pWlU9IO1bpWdE9TdFjTN6ZnQ0GI+i+puhFM1O//Mpd0ZS/c3Q8UPn
uMEBIupfkiozxPr/S2iu7miGgWEOX90RDBcwzLJQt5zhLIa7GUaW6s5kWMmw
zErdCoarGBYK1B3NMDDMsVZ3BMMFDLNs1C1nOIvhboaRrbozGVYyzBcy5hle
xnAmw0UMKxnWEalbxvB8hhUM5zNcxfA3hoVidQcwHM3wIYaB4TaGORJ1ezEc
wfA2hgsYrv/b/wOGmTuw
       "]]}, {}}, {}}, {{}, {{}, 
     {GrayLevel[0.5], PointSize[0.007333333333333334], AbsoluteThickness[1.6],
       PointBox[CompressedData["
1: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
huVMlqUs3//H/wPKhTIL
       "]]}, {}}, {}}, {{}, {}, 
    {GrayLevel[0], AbsoluteThickness[1.6], Opacity[1.], 
     LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQXfvc99P//8oHGMDggX2F21LvhtkIfsnSP0sYzBH8
fIc0Y8lYJTh/I3tB3qKJinB+ZffZVM1TCnB+143ThRMey8P5Gz7ZFK73l4Pz
7x1T1vg3UwbOlxTZFO7xRgrOf7Sz4UFxtCScv1nyqML5FeJwvtAlz13cwmJw
fi1z2RnnVhE4/8M78WmrrwrB+R+Nfu344iQI539NXKJ2W4YfzlcIWHzm8GFu
OD/9vZJq/hIOOH8fU9+bSkdWON/oeGWauwQTnJ/9f+G8F2F/98P4i0LeBRnM
/QbnC/HY5PwN+wDnO4cfPCYk/BjO98k2/XO15iSc/zFlNa9B8Al7GJ/H1vSU
//THcL5pXl1yiuQHOP9IKDdL0rtvcL5y5K+DhYv/wvmqf4t56z4xOsD4KyL/
n3ocxgrn87NyXWtr5IDz4/YdfW80hxvOn8s8bVb9Lz44/8HpopMt/IJw/qvb
KnyzDgvB+WmTp/08GyUC51+7mJDD9koUzrcL26rOP1sczhdvOtlppi8J57/8
nG6i91QKzl/3Ji5Na7IMnP+0R9TeVUUOzhcpDkswuC4P50c3aIvM3aYA5y/j
umG9pFYRzn+7/WT75FAlOP+NhbS6kLwynG8yYQtPZz+CD80vcD4AlBD+qQ==

      "]]}, 
    {GrayLevel[0], AbsoluteThickness[1.6], Opacity[1.], 
     LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQXfvc99P//8oHQsHgqn2F21LvhtkIfsnSP0sYzBH8
fIc0Y8lYJTh/I3tB3qKJinB+ZffZVM1TCnB+143ThRMey8P5Gz7ZFK73l4Pz
7x1T1vg3UwbOlxTZFO7xRgrOf7Sz4UFxtCScv1nyqML5FeJwvtAlz13cwmJw
fi1z2RnnVhE4/8M78WmrrwrB+R+Nfu344iQI539NXKJ2W4YfzlcIWHzm8GFu
OD/9vZJq/hIOOH8fU9+bSkdWON/oeGWauwQTnJ/9f+G8F2F/98P4i0LeBRnM
/QbnC/HY5PwN+wDnO4cfPCYk/BjO98k2/XO15iSc/zFlNa9B8Al7GJ/H1vSU
//THcL5pXl1yiuQHOP9IKDdL0rtvcL5y5K+DhYv/wvmqf4t56z4xOsD4KyL/
n3ocxgrn87NyXWtr5IDz4/YdfW80hxvOn8s8bVb9Lz44/8HpopMt/IJw/qvb
KnyzDgvB+WmTp/08GyUC51+7mJDD9koUzrcL26rOP1sczhdvOtlppi8J57/8
nG6i91QKzl/3Ji5Na7IMnP+0R9TeVUUOzhcpDkswuC4P50c3aIvM3aYA5y/j
umG9pFYRzn+7/WT75FAlOP+NhbS6kLwynG8yYQtPZz+CD80vcD4AXZhkFA==

      "]]}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{},
  PlotRange->All,
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.64944001656487*^9, {3.64944044107187*^9, 3.64944045413087*^9}, 
   3.64944058797787*^9, {3.6494407415668697`*^9, 3.64944076458187*^9}, {
   3.64944079681387*^9, 3.64944080752087*^9}, {3.64944090717387*^9, 
   3.64944093200587*^9}, {3.6494411107978697`*^9, 3.64944112774587*^9}, 
   3.64944122838587*^9, 3.6496069352506886`*^9, 3.649607974906644*^9, 
   3.6496087017363195`*^9, 3.6496097211673813`*^9, 3.649610635553321*^9, 
   3.649610757647321*^9, 3.649611448611088*^9, 3.649611966679889*^9, 
   3.649612342194437*^9, 3.651772127132012*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Evaluating spectrum", "Section",
 CellChangeTimes->{{3.649262534251589*^9, 3.6492625390490685`*^9}}],

Cell["\<\
It is useful to make an interpolation of the final Y-function as follows:\
\>", "Text",
 CellChangeTimes->{{3.6494413287128696`*^9, 3.64944136029487*^9}}],

Cell[BoxData[{
 RowBox[{"ClearAll", "[", "\[CapitalUpsilon]", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"yint", "[", "a", "]"}], "=", 
     RowBox[{"Interpolation", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"l", "[", "\[Theta]", "]"}], ",", 
         RowBox[{"1", "/", 
          RowBox[{
           RowBox[{"Y", "[", "a", "]"}], "[", "20", "]"}]}]}], "}"}], "//", 
       "Transpose"}], "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"a", ",", "1", ",", 
      RowBox[{"4", "-", "1"}]}], "}"}]}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"\[CapitalUpsilon]", "[", "a_", "]"}], "[", "\[CurlyTheta]_", 
    "]"}], ":=", " ", 
   RowBox[{"Which", "[", 
    RowBox[{
     RowBox[{"\[CurlyTheta]", "\[LessEqual]", 
      RowBox[{"-", "\[CapitalTheta]"}]}], ",", 
     RowBox[{"1", "/", 
      RowBox[{"c", "\[LeftDoubleBracket]", "a", "\[RightDoubleBracket]"}]}], 
     ",", 
     RowBox[{"\[CurlyTheta]", "\[GreaterEqual]", "\[CapitalTheta]"}], ",", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"-", 
        RowBox[{"m", "[", "a", "]"}]}], " ", "R", " ", 
       SuperscriptBox["\[ExponentialE]", "\[CurlyTheta]"]}]], ",", 
     RowBox[{
      RowBox[{"-", "\[CapitalTheta]"}], "<", "\[CurlyTheta]", "<", 
      "\[CapitalTheta]"}], ",", 
     RowBox[{
      RowBox[{"yint", "[", "a", "]"}], "[", "\[CurlyTheta]", "]"}]}], "]"}]}],
   ";"}]}], "Input",
 CellChangeTimes->{{3.648838965431252*^9, 3.648839030397748*^9}, {
   3.6488390965403614`*^9, 3.6488391039711046`*^9}, {3.648839251069813*^9, 
   3.6488392999977055`*^9}, {3.6488393456292677`*^9, 
   3.6488393743451395`*^9}, {3.6488394109547997`*^9, 
   3.6488394703387375`*^9}, {3.6488395195516586`*^9, 3.648839564793182*^9}, {
   3.648839615649267*^9, 3.648839714729174*^9}, {3.648839789803681*^9, 
   3.6488398132660265`*^9}, {3.648840166524349*^9, 3.6488401676914663`*^9}, {
   3.6489145728296103`*^9, 3.6489146187436104`*^9}, {3.64891469550261*^9, 
   3.648914822594429*^9}, {3.6489149477489433`*^9, 3.648914995454714*^9}, {
   3.648916183655522*^9, 3.648916183677524*^9}, 3.6489164522984023`*^9, {
   3.6489165492394023`*^9, 3.648916551977402*^9}, 3.648916582490402*^9, {
   3.6489166327954025`*^9, 3.648916700572402*^9}, {3.6489167366064024`*^9, 
   3.648916736975402*^9}, {3.648920945173986*^9, 3.648920946761986*^9}, {
   3.648920982751986*^9, 3.648920986528986*^9}, 3.648921073790986*^9, {
   3.6489269228153915`*^9, 3.6489269230294127`*^9}, {3.6494412645408697`*^9, 
   3.64944131884787*^9}, 3.6496079847056236`*^9}],

Cell["\<\
I define the function \[CapitalUpsilon] so that integrations can be now be \
done over the full real line.\
\>", "Text",
 CellChangeTimes->{{3.64944136645387*^9, 3.64944138522587*^9}}],

Cell[CellGroupData[{

Cell["1)", "Subsection",
 CellChangeTimes->{{3.64944151015587*^9, 3.64944151224187*^9}}],

Cell["Solving the Y-system you should find", "Text",
 CellChangeTimes->{{3.64944151706087*^9, 3.64944155174487*^9}, 
   3.64944162299387*^9}],

Cell[BoxData[
 FormBox[
  RowBox[{"\[LineSeparator]", 
   RowBox[{
    RowBox[{
     SubscriptBox["Y", "1"], "(", 
     RowBox[{"\[Theta]", "+", 
      RowBox[{"\[ImaginaryI]", " ", "3", 
       RowBox[{"\[Pi]", "/", "4"}]}]}], ")"}], "=", 
    FractionBox[
     RowBox[{" ", 
      RowBox[{"1", "+", 
       FractionBox[
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", "+", 
           RowBox[{
            SubscriptBox["Y", "1"], "(", 
            RowBox[{"\[Theta]", "+", 
             RowBox[{"\[ImaginaryI]", " ", 
              RowBox[{"\[Pi]", "/", "4"}]}]}], ")"}]}], ")"}], 
         RowBox[{"(", 
          RowBox[{"1", "+", 
           RowBox[{
            SubscriptBox["Y", "3"], "(", 
            RowBox[{"\[Theta]", "+", 
             RowBox[{"\[ImaginaryI]", " ", 
              RowBox[{"\[Pi]", "/", "4"}]}]}], ")"}]}], ")"}]}], 
        RowBox[{
         SubscriptBox["Y", "2"], "(", "\[Theta]", ")"}]]}]}], 
     RowBox[{
      SubscriptBox["Y", "1"], "(", 
      RowBox[{"\[Theta]", "+", 
       RowBox[{"\[ImaginaryI]", " ", 
        RowBox[{"\[Pi]", "/", "4"}]}]}], ")"}]]}]}], TraditionalForm]], "Text",
 CellChangeTimes->{{3.64944155393087*^9, 3.64944161554287*^9}, 
   3.64944165118187*^9, 3.651772141029348*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["2)", "Subsection",
 CellChangeTimes->{{3.64944166778587*^9, 3.6494416680138702`*^9}}],

Cell[TextData[{
 "As we continue \[Gamma] up to \[Pi]/4 the poles of the kernel move upward, \
thus the pole will be just below the real axis when ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[Gamma]", "\[Rule]", 
    RowBox[{"\[Pi]", "/", "4"}]}], TraditionalForm]]],
 ".  Thus we should add the half residue with a minus sign"
}], "Text",
 CellChangeTimes->{{3.64944175492587*^9, 3.64944184336587*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Res", "[", "\[Theta]_", "]"}], "=", 
   RowBox[{
    RowBox[{"-", 
     FractionBox["1", "2"]}], "2", " ", "\[Pi]", " ", "\[ImaginaryI]", " ", 
    RowBox[{"Residue", "[", 
     RowBox[{
      RowBox[{
       FractionBox[
        RowBox[{"Cosh", "[", 
         RowBox[{
          RowBox[{"-", "\[Theta]"}], "-", 
          RowBox[{"\[ImaginaryI]", " ", 
           RowBox[{"\[Pi]", "/", "4"}]}], "+", "\[CurlyTheta]"}], "]"}], 
        RowBox[{"Cosh", "[", 
         RowBox[{"2", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "\[Theta]"}], "-", 
            RowBox[{"\[ImaginaryI]", " ", 
             RowBox[{"\[Pi]", "/", "4"}]}], "+", "\[CurlyTheta]"}], ")"}]}], 
         "]"}]], 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"-", 
         RowBox[{"Cosh", "[", "\[CurlyTheta]", "]"}]}]]}], ",", 
      RowBox[{"{", 
       RowBox[{"\[CurlyTheta]", ",", "\[Theta]"}], "}"}]}], "]"}]}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.6494418572898703`*^9, 3.64944186462687*^9}}],

Cell["\<\
Now define the integral using the PrincipalValue and adding the half reside\
\>", "Text",
 CellChangeTimes->{{3.6494418839488697`*^9, 3.64944191460087*^9}}],

Cell[BoxData[{
 RowBox[{"ClearAll", "[", "fPV", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"fPV", "[", "\[Theta]_", "]"}], "[", 
   RowBox[{"\[ImaginaryI]", " ", 
    RowBox[{"\[Pi]", "/", "4"}]}], "]"}], ":=", 
  RowBox[{
   RowBox[{"Res", "[", "\[Theta]", "]"}], "+", 
   RowBox[{"NIntegrate", "[", 
    RowBox[{
     RowBox[{
      FractionBox[
       RowBox[{"Cosh", "[", 
        RowBox[{
         RowBox[{"-", "\[Theta]"}], "-", 
         RowBox[{"\[ImaginaryI]", " ", 
          RowBox[{"\[Pi]", "/", "4"}]}], "+", "\[CurlyTheta]"}], "]"}], 
       RowBox[{"Cosh", "[", 
        RowBox[{"2", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "\[Theta]"}], "-", 
           RowBox[{"\[ImaginaryI]", " ", 
            RowBox[{"\[Pi]", "/", "4"}]}], "+", "\[CurlyTheta]"}], ")"}]}], 
        "]"}]], 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"-", 
        RowBox[{"Cosh", "[", "\[CurlyTheta]", "]"}]}]]}], ",", 
     RowBox[{"{", 
      RowBox[{"\[CurlyTheta]", ",", 
       RowBox[{"-", "\[Infinity]"}], ",", "\[Theta]", ",", "\[Infinity]"}], 
      "}"}], ",", 
     RowBox[{"\"\<Method\>\"", "\[Rule]", 
      RowBox[{"{", "\"\<PrincipalValue\>\"", "}"}]}]}], "]"}]}]}]}], "Input",
 CellChangeTimes->{{3.6491836811291866`*^9, 3.649183764046006*^9}, {
   3.649183803574988*^9, 3.6491838512012253`*^9}, {3.6491838949008546`*^9, 
   3.649183903659979*^9}, {3.6491839924201016`*^9, 3.649184052684075*^9}, {
   3.649184125713255*^9, 3.649184130907255*^9}, {3.649184315548255*^9, 
   3.649184324350255*^9}, {3.649184427840255*^9, 3.649184481259255*^9}, 
   3.64944175172587*^9, {3.6494418756988697`*^9, 3.64944188252387*^9}, {
   3.64944191762387*^9, 3.6494419199228697`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"fPV", "[", "0.1", "]"}], "[", 
  RowBox[{"\[ImaginaryI]", " ", 
   RowBox[{"\[Pi]", "/", "4"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.649184360871255*^9, 3.649184387640255*^9}}],

Cell[BoxData[
 RowBox[{"0.6381847597705239`", "\[VeryThinSpace]", "-", 
  RowBox[{"0.029678752324292318`", " ", "\[ImaginaryI]"}]}]], "Output",
 CellChangeTimes->{{3.649184369534255*^9, 3.649184387976255*^9}, {
   3.6491844298542547`*^9, 3.6491844504052553`*^9}, 3.649184482863255*^9, 
   3.6494419543758698`*^9, 3.649606948887052*^9, 3.649612019343155*^9, 
   3.649612347789996*^9}]
}, Open  ]],

Cell["\<\
We can compare with the value obtained from an \[ImaginaryI] \[CurlyEpsilon] \
prescription\
\>", "Text",
 CellChangeTimes->{{3.6494419258678703`*^9, 3.6494419444338703`*^9}}],

Cell[BoxData[{
 RowBox[{"ClearAll", "[", "f", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"f", "[", "\[CurlyEpsilon]_", "]"}], "[", "\[Theta]_", "]"}], "[", 
   RowBox[{"\[ImaginaryI]", " ", 
    RowBox[{"\[Pi]", "/", "4"}]}], "]"}], ":=", 
  RowBox[{"NIntegrate", "[", 
   RowBox[{
    RowBox[{
     FractionBox[
      RowBox[{"Cosh", "[", 
       RowBox[{
        RowBox[{"-", "\[Theta]"}], "-", 
        RowBox[{"\[ImaginaryI]", " ", 
         RowBox[{"\[Pi]", "/", "4"}]}], "+", 
        RowBox[{"\[ImaginaryI]", " ", "\[CurlyEpsilon]"}], "+", 
        "\[CurlyTheta]"}], "]"}], 
      RowBox[{"Cosh", "[", 
       RowBox[{"2", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "\[Theta]"}], "-", 
          RowBox[{"\[ImaginaryI]", " ", 
           RowBox[{"\[Pi]", "/", "4"}]}], "+", 
          RowBox[{"\[ImaginaryI]", " ", "\[CurlyEpsilon]"}], "+", 
          "\[CurlyTheta]"}], ")"}]}], "]"}]], 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"-", 
       RowBox[{"Cosh", "[", "\[CurlyTheta]", "]"}]}]]}], ",", 
    RowBox[{"{", 
     RowBox[{"\[CurlyTheta]", ",", 
      RowBox[{"-", "\[Infinity]"}], ",", "\[Theta]", ",", "\[Infinity]"}], 
     "}"}], ",", 
    RowBox[{"\"\<Method\>\"", "\[Rule]", 
     RowBox[{"{", "\"\<PrincipalValue\>\"", "}"}]}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.64944194853587*^9, 3.6494419507648697`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"f", "[", "0.0001", "]"}], "[", "0.1", "]"}], "[", 
  RowBox[{"\[ImaginaryI]", " ", 
   RowBox[{"\[Pi]", "/", "4"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.649184398035255*^9, 3.649184421088255*^9}}],

Cell[BoxData[
 RowBox[{"0.6381552677373441`", "\[VeryThinSpace]", "-", 
  RowBox[{"0.02967364037978458`", " ", "\[ImaginaryI]"}]}]], "Output",
 CellChangeTimes->{{3.649184407377255*^9, 3.649184431029255*^9}, 
   3.649184485331255*^9, 3.6494419566508703`*^9, 3.6496069518703504`*^9, 
   3.6496087164787936`*^9, 3.6496120194101615`*^9, 3.649612347854003*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["3) ", "Subsection",
 CellChangeTimes->{{3.649262556955859*^9, 3.649262562789442*^9}, 
   3.6492626105722203`*^9, 3.64944198928187*^9, 3.64944246060487*^9}],

Cell[TextData[{
 "Now we compute the Y-functions ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["Y", "1"], "(", 
    RowBox[{"\[Theta]", "+", 
     RowBox[{"\[ImaginaryI]", " ", 
      RowBox[{"\[Pi]", "/", "4"}]}]}], ")"}], TraditionalForm]],
  CellChangeTimes->{{3.64944155393087*^9, 3.64944161554287*^9}, 
    3.64944165118187*^9}],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["Y", "3"], "(", 
    RowBox[{"\[Theta]", "+", 
     RowBox[{"\[ImaginaryI]", " ", 
      RowBox[{"\[Pi]", "/", "4"}]}]}], ")"}], TraditionalForm]],
  CellChangeTimes->{{3.64944155393087*^9, 3.64944161554287*^9}, 
    3.64944165118187*^9}],
 "."
}], "Text",
 CellChangeTimes->{{3.6494419939408703`*^9, 3.64944201486887*^9}}],

Cell["The half residues are given by", "Text",
 CellChangeTimes->{{3.6494420182758703`*^9, 3.6494420254418697`*^9}}],

Cell[BoxData[{
 RowBox[{"ClearAll", "[", 
  RowBox[{"R12", ",", "R32"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"R12", "[", "\[Theta]_", "]"}], ":=", 
  RowBox[{
   RowBox[{"R12", "[", "\[Theta]", "]"}], "=", 
   RowBox[{
    RowBox[{
     RowBox[{"-", "1"}], "/", "2"}], 
    RowBox[{"Log", "[", 
     RowBox[{"1", "+", 
      RowBox[{
       RowBox[{"\[CapitalUpsilon]", "[", "2", "]"}], "[", "\[Theta]", "]"}]}],
      "]"}]}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"R32", "[", "\[Theta]_", "]"}], ":=", 
  RowBox[{
   RowBox[{"R32", "[", "\[Theta]", "]"}], "=", 
   RowBox[{
    RowBox[{
     RowBox[{"-", "1"}], "/", "2"}], 
    RowBox[{"Log", "[", 
     RowBox[{"1", "+", 
      RowBox[{
       RowBox[{"\[CapitalUpsilon]", "[", "2", "]"}], "[", "\[Theta]", "]"}]}],
      "]"}]}]}]}]}], "Input",
 CellChangeTimes->{{3.6489085755564904`*^9, 3.648908583311266*^9}, {
  3.6489113035182734`*^9, 3.648911307311653*^9}, {3.6489113505119724`*^9, 
  3.6489113522841496`*^9}, {3.6489128777355556`*^9, 3.6489128797685556`*^9}, {
  3.6489129802725554`*^9, 3.648913055040556*^9}, {3.648913086365556*^9, 
  3.648913091823556*^9}, {3.648916412624402*^9, 3.6489164361544023`*^9}, {
  3.648924835090973*^9, 3.6489248437709*^9}, {3.648924929561198*^9, 
  3.648924932632802*^9}, {3.64892681699181*^9, 3.648926817222833*^9}, {
  3.648986132651003*^9, 3.6489861353732753`*^9}}],

Cell[TextData[{
 "Putting ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[Theta]", "\[Rule]", 
    RowBox[{"\[Theta]", "+", 
     RowBox[{"\[ImaginaryI]", " ", "\[Gamma]"}]}]}], TraditionalForm]]],
 " in the TBA and continueing to ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[Gamma]", "=", 
    RowBox[{"\[Pi]", "/", "4"}]}], TraditionalForm]]],
 " gives"
}], "Text",
 CellChangeTimes->{{3.6494420325988703`*^9, 3.64944208127787*^9}}],

Cell[BoxData[{
 RowBox[{"ClearAll", "[", "y", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"y", "[", "1", "]"}], "[", "\[Theta]_", "]"}], "[", 
   RowBox[{"\[ImaginaryI]", " ", 
    RowBox[{"\[Pi]", "/", "4"}]}], "]"}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"y", "[", "1", "]"}], "[", "\[Theta]", "]"}], "[", 
    RowBox[{"\[ImaginaryI]", " ", 
     RowBox[{"\[Pi]", "/", "4"}]}], "]"}], "=", 
   RowBox[{
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{"R", " ", 
      RowBox[{"m", "[", "1", "]"}], 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"\[Theta]", "+", 
        RowBox[{"\[ImaginaryI]", " ", 
         RowBox[{"\[Pi]", "/", "4"}]}]}]]}]], 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{"-", 
       RowBox[{"R12", "[", "\[Theta]", "]"}]}], "-", 
      RowBox[{"NIntegrate", "[", 
       RowBox[{
        RowBox[{"Sum", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"\[ScriptCapitalK]", "[", 
             RowBox[{"1", ",", "b"}], "]"}], "[", 
            RowBox[{"\[Theta]", "+", 
             RowBox[{"\[ImaginaryI]", " ", 
              RowBox[{"\[Pi]", "/", "4"}]}], "-", "\[CurlyTheta]"}], "]"}], 
           RowBox[{"Log", "[", 
            RowBox[{"1", "+", 
             RowBox[{
              RowBox[{"\[CapitalUpsilon]", "[", "b", "]"}], "[", 
              "\[CurlyTheta]", "]"}]}], "]"}]}], ",", 
          RowBox[{"{", 
           RowBox[{"b", ",", "1", ",", 
            RowBox[{"4", "-", "1"}]}], "}"}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"\[CurlyTheta]", ",", 
          RowBox[{"-", "\[CapitalTheta]"}], ",", "\[Theta]", ",", 
          "\[CapitalTheta]"}], "}"}], ",", 
        RowBox[{"\"\<Method\>\"", "\[Rule]", 
         RowBox[{"{", "\"\<PrincipalValue\>\"", "}"}]}]}], "]"}], "-", 
      RowBox[{"NIntegrate", "[", 
       RowBox[{
        RowBox[{"Sum", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"\[ScriptCapitalK]", "[", 
             RowBox[{"1", ",", "b"}], "]"}], "[", 
            RowBox[{"\[Theta]", "+", 
             RowBox[{"\[ImaginaryI]", " ", 
              RowBox[{"\[Pi]", "/", "4"}]}], "-", "\[CurlyTheta]"}], "]"}], 
           RowBox[{"Log", "[", 
            RowBox[{"1", "+", 
             RowBox[{"1", "/", 
              RowBox[{
              "c", "\[LeftDoubleBracket]", "b", "\[RightDoubleBracket]"}]}]}],
             "]"}]}], ",", 
          RowBox[{"{", 
           RowBox[{"b", ",", "1", ",", 
            RowBox[{"4", "-", "1"}]}], "}"}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"\[CurlyTheta]", ",", 
          RowBox[{"-", "\[Infinity]"}], ",", "\[Theta]", ",", 
          RowBox[{"-", "\[CapitalTheta]"}]}], "}"}], ",", 
        RowBox[{"\"\<Method\>\"", "\[Rule]", 
         RowBox[{"{", "\"\<PrincipalValue\>\"", "}"}]}]}], 
       "]"}]}]]}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"y", "[", "3", "]"}], "[", "\[Theta]_", "]"}], "[", 
   RowBox[{"\[ImaginaryI]", " ", 
    RowBox[{"\[Pi]", "/", "4"}]}], "]"}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"y", "[", "3", "]"}], "[", "\[Theta]", "]"}], "[", 
    RowBox[{"\[ImaginaryI]", " ", 
     RowBox[{"\[Pi]", "/", "4"}]}], "]"}], "=", 
   RowBox[{
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{"R", " ", 
      RowBox[{"m", "[", "3", "]"}], 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"\[Theta]", "+", 
        RowBox[{"\[ImaginaryI]", " ", 
         RowBox[{"\[Pi]", "/", "4"}]}]}]]}]], 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{"-", 
       RowBox[{"R32", "[", "\[Theta]", "]"}]}], "-", 
      RowBox[{"NIntegrate", "[", 
       RowBox[{
        RowBox[{"Sum", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"\[ScriptCapitalK]", "[", 
             RowBox[{"3", ",", "b"}], "]"}], "[", 
            RowBox[{"\[Theta]", "+", 
             RowBox[{"\[ImaginaryI]", " ", 
              RowBox[{"\[Pi]", "/", "4"}]}], "-", "\[CurlyTheta]"}], "]"}], 
           RowBox[{"Log", "[", 
            RowBox[{"1", "+", 
             RowBox[{
              RowBox[{"\[CapitalUpsilon]", "[", "b", "]"}], "[", 
              "\[CurlyTheta]", "]"}]}], "]"}]}], ",", 
          RowBox[{"{", 
           RowBox[{"b", ",", "1", ",", 
            RowBox[{"4", "-", "1"}]}], "}"}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"\[CurlyTheta]", ",", 
          RowBox[{"-", "\[CapitalTheta]"}], ",", "\[Theta]", ",", 
          "\[CapitalTheta]"}], "}"}], ",", 
        RowBox[{"\"\<Method\>\"", "\[Rule]", 
         RowBox[{"{", "\"\<PrincipalValue\>\"", "}"}]}]}], "]"}], "-", 
      RowBox[{"NIntegrate", "[", 
       RowBox[{
        RowBox[{"Sum", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"\[ScriptCapitalK]", "[", 
             RowBox[{"3", ",", "b"}], "]"}], "[", 
            RowBox[{"\[Theta]", "+", 
             RowBox[{"\[ImaginaryI]", " ", 
              RowBox[{"\[Pi]", "/", "4"}]}], "-", "\[CurlyTheta]"}], "]"}], 
           RowBox[{"Log", "[", 
            RowBox[{"1", "+", 
             RowBox[{"1", "/", 
              RowBox[{
              "c", "\[LeftDoubleBracket]", "b", "\[RightDoubleBracket]"}]}]}],
             "]"}]}], ",", 
          RowBox[{"{", 
           RowBox[{"b", ",", "1", ",", 
            RowBox[{"4", "-", "1"}]}], "}"}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"\[CurlyTheta]", ",", 
          RowBox[{"-", "\[Infinity]"}], ",", "\[Theta]", ",", 
          RowBox[{"-", "\[CapitalTheta]"}]}], "}"}], ",", 
        RowBox[{"\"\<Method\>\"", "\[Rule]", 
         RowBox[{"{", "\"\<PrincipalValue\>\"", "}"}]}]}], 
       "]"}]}]]}]}]}]}], "Input",
 CellChangeTimes->{{3.648908340634001*^9, 3.648908388250762*^9}, {
   3.6489085591708517`*^9, 3.6489086294208765`*^9}, {3.648908678973831*^9, 
   3.6489086816601*^9}, {3.6489087549034233`*^9, 3.648908765401473*^9}, {
   3.6489123946055555`*^9, 3.6489123948665557`*^9}, {3.648912645415556*^9, 
   3.6489126710915556`*^9}, 3.6489132640785837`*^9, {3.6489133004512205`*^9, 
   3.648913301559332*^9}, {3.648913551139287*^9, 3.648913553427516*^9}, {
   3.6489144040016108`*^9, 3.6489144235476103`*^9}, {3.648915712009362*^9, 
   3.648915714821643*^9}, {3.6489161660367603`*^9, 3.64891617893705*^9}, {
   3.648916286472402*^9, 3.6489163510944023`*^9}, {3.6489168591584024`*^9, 
   3.6489168608494024`*^9}, {3.648916905892402*^9, 3.648916924892402*^9}, {
   3.648924807871426*^9, 3.648924865789679*^9}, {3.648924938314747*^9, 
   3.648924948994225*^9}, {3.6489268040365148`*^9, 3.6489268311052217`*^9}, {
   3.6492625701591797`*^9, 3.649262573540518*^9}, {3.64944209123687*^9, 
   3.64944210115287*^9}, {3.6494421402318697`*^9, 3.64944222784087*^9}, {
   3.6496092141355543`*^9, 3.6496092179969406`*^9}, {3.6496120630325236`*^9, 
   3.6496120650997305`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"y", "[", "1", "]"}], "[", "0.1", "]"}], "[", 
    RowBox[{"\[ImaginaryI]", " ", 
     RowBox[{"\[Pi]", "/", "4"}]}], "]"}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"y", "[", "3", "]"}], "[", "0.1", "]"}], "[", 
    RowBox[{"\[ImaginaryI]", " ", 
     RowBox[{"\[Pi]", "/", "4"}]}], "]"}]}], "}"}]], "Input",
 CellChangeTimes->{{3.6494422459808702`*^9, 3.64944226572887*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"-", "1.957309081026367`"}], "+", 
    RowBox[{"7.724874866063596`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{
    RowBox[{"-", "1.957309081026367`"}], "+", 
    RowBox[{"7.724874866063596`", " ", "\[ImaginaryI]"}]}]}], "}"}]], "Output",
 CellChangeTimes->{3.64944227019587*^9, 3.6496069624034033`*^9, 
  3.6496080020523577`*^9, 3.6496120275719776`*^9, 3.649612075487769*^9, 
  3.649612352158433*^9, 3.651772193498591*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["4)", "Subsection",
 CellChangeTimes->{{3.64944246640587*^9, 3.64944246727487*^9}}],

Cell[TextData[{
 "Make an interpolation of ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["Y", "1"], "(", 
    RowBox[{"\[Theta]", "+", 
     RowBox[{"\[ImaginaryI]", " ", "3", 
      RowBox[{"\[Pi]", "/", "4"}]}]}], ")"}], TraditionalForm]],
  CellChangeTimes->{{3.64944155393087*^9, 3.64944161554287*^9}, 
    3.64944165118187*^9}],
 ".  Recall that ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["Y", "1"], "=", 
    SubscriptBox["Y", "3"]}], TraditionalForm]]],
 "."
}], "Text",
 CellChangeTimes->{{3.64944234184687*^9, 3.64944236985287*^9}, {
   3.6496119760108223`*^9, 3.649611984182639*^9}, 3.649612467989015*^9}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Dynamic", "[", 
  RowBox[{"\[Theta]", "//", "N"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"det", "=", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\[Theta]", ",", 
         FractionBox[
          RowBox[{"1", "+", 
           FractionBox[
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", 
                RowBox[{
                 RowBox[{
                  RowBox[{"y", "[", "1", "]"}], "[", "\[Theta]", "]"}], "[", 
                 RowBox[{"\[ImaginaryI]", " ", 
                  RowBox[{"\[Pi]", "/", "4"}]}], "]"}]}], ")"}], "2"], 
             RowBox[{"(*", 
              RowBox[{"(", 
               RowBox[{"1", "+", 
                RowBox[{
                 RowBox[{
                  RowBox[{"y", "[", "3", "]"}], "[", "\[Theta]", "]"}], "[", 
                 RowBox[{"\[ImaginaryI]", " ", 
                  RowBox[{"\[Pi]", "/", "4"}]}], "]"}]}], ")"}], "*)"}]}], 
            RowBox[{"1", "/", 
             RowBox[{
              RowBox[{"\[CapitalUpsilon]", "[", "2", "]"}], "[", "\[Theta]", 
              "]"}]}]]}], 
          RowBox[{
           RowBox[{
            RowBox[{"y", "[", "1", "]"}], "[", "\[Theta]", "]"}], "[", 
           RowBox[{"\[ImaginaryI]", " ", 
            RowBox[{"\[Pi]", "/", "4"}]}], "]"}]]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Theta]", ",", "0", ",", "2", ",", 
         RowBox[{"1", "/", "10"}]}], "}"}]}], "]"}], "//", "Chop"}], "//", 
    "Interpolation"}], "//", "Quiet"}]}]}], "Input",
 CellChangeTimes->{{3.648924989117483*^9, 3.64892499202791*^9}, {
   3.6489250455757093`*^9, 3.648925045734033*^9}, {3.648926880941204*^9, 
   3.6489268823513455`*^9}, {3.648927002978407*^9, 3.648927009148024*^9}, {
   3.6489271874988575`*^9, 3.6489271939024973`*^9}, {3.649006624287481*^9, 
   3.649006626230675*^9}, {3.6492626542885914`*^9, 3.649262656196782*^9}, {
   3.6494423177758703`*^9, 3.64944234007087*^9}, {3.64944237843587*^9, 
   3.6494423813558702`*^9}, 3.6496074380839667`*^9, 3.64960776535369*^9, 
   3.649607871776332*^9, {3.6496083116663165`*^9, 3.6496083123743873`*^9}, {
   3.6496084763467827`*^9, 3.649608478099958*^9}, {3.6496088687230167`*^9, 
   3.6496088907812223`*^9}, {3.649608964061549*^9, 3.649608964517595*^9}, {
   3.649609102574399*^9, 3.6496091387910204`*^9}, 3.649609169601101*^9, 
   3.6496092479199324`*^9, 3.6496095197224054`*^9, {3.6496119891351347`*^9, 
   3.6496119961678376`*^9}, {3.6496121212963495`*^9, 3.649612154288648*^9}}],

Cell[BoxData[
 DynamicBox[ToBoxes[
   N[$CellContext`\[Theta]], StandardForm],
  ImageSizeCache->{12., {1., 12.}}]], "Output",
 CellChangeTimes->{
  3.648924993336628*^9, 3.648925046680118*^9, 3.648926842665377*^9, 
   3.6489268827803884`*^9, 3.6489269304041505`*^9, 3.648927009589068*^9, 
   3.6489271942325306`*^9, 3.648985778351577*^9, {3.6490066176048126`*^9, 
   3.649006626716724*^9}, 3.64909532615804*^9, 3.6491850018633585`*^9, {
   3.64926265657082*^9, 3.649262684266589*^9}, 3.6494423817248697`*^9, 
   3.6496069683329964`*^9, 3.6496074390300617`*^9, 3.6496077667908344`*^9, 
   3.649607872449399*^9, 3.6496080077789307`*^9, 3.6496083125864086`*^9, {
   3.6496084784639945`*^9, 3.6496084941705647`*^9}, 3.6496087251316586`*^9, 
   3.649608891498294*^9, 3.6496089650856514`*^9, 3.6496091391210537`*^9, 
   3.6496091700941505`*^9, 3.6496092486480055`*^9, 3.64960951998509*^9, {
   3.6496121499502144`*^9, 3.649612155213741*^9}, 3.64961235223044*^9, 
   3.651772193986569*^9}],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["InterpolatingFunction", "SummaryHead"], 
       "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open$$ = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open$$ = True), Appearance -> None,
                 Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 3.5 CurrentValue["FontCapHeight"]/
                  AbsoluteCurrentValue[Magnification]}]], 
              GraphicsBox[{{
                 GrayLevel[0.6], 
                 AbsolutePointSize[5], 
                 PointBox[{1, 1}], 
                 PointBox[{2, 4}], 
                 PointBox[{3, 2}], 
                 PointBox[{4, 3}]}, {{}, {}, {
                  AbsoluteThickness[1], 
                  Opacity[1.], 
                  LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAA4ScLwZmZ6T/ACPskWpOYv4AjHgZ5
3Os/cnpQh5xu1j/qWn1XCVDuP5K7ih5ptuc/r+pongFN8D/CUK87BHLxP46d
cUQ/bPE/ujUa8/qu9j9TbqBw1aPyP/TWyyAhFfw/neDJZqDG8z+QAqdF9GsA
QM1wGePDAfU/VsVD/9nXAkCidscSKDf2P6Bp73exDQVA/B1wDMFX9z+TpM3k
wfUGQDzjPoyykPg/7M3Z+O7ZCEABSgjW2LT5P3pl9LwNcgpAbCYw0z/T+j86
ypori9cLQL0gflb/Cfw/lpOs9xIqDUCTvMaj8yv9Pw4alcoYNg5AT3Y1d0Bm
/j+pB2LLtyIPQLClAv7Nmv8/NnA5bbjSD0BLO2UnSF0AQFrcILXmpw9AsTLc
klX5AED+sDHBQukOQNp6UGP9igFAbZ+lR/sLDkD10dd20SgCQNHi3Mj38wxA
42MO5MXDAkAZdr6AZb8LQJRGQrZUVANArv7zEMKHCkA4OInLD/EDQLBlMO3M
IglAnnrNRWWDBEA3d8OX6skHQNf3wBnbEgVAD3D3ndNyBkADhMcwfa4FQHOK
7Wak/wRA8WDLrLk/BkC/MhCgYawDQNJM4msi3QZAwss/TmVLAkCGc6iEq3cH
QIsIg92+BgFA/OprAs8HCECrPCvgePD/P2VxQsMepAhAKXVLE0Xg/j+RSBbp
CDYJQPRz0a7WJ/4/kFqZaBPFCUDN4sX5uLj9P4J7LytKYApAvh1MbRmT/T82
7cJSG/EKQHzT1YZwwv0/3W1pvRiOC0B2LZ/10lT+P0c/DY2wIAxAVrX8MJA7
/z+DS2C2aLAMQElWzbMzPQBAsmbGIk1MDUCi9bAadCABQKTSKfTL3Q1AYexd
q+EpAkCJTaAId3sOQFyS/ndEhgNAQAPGdkIWD0BHWcLdahwFQLoJ6Umopg9A
vd1CiejSBkCTjw8wnSEQQPiVkXD08QhAq0KpbbNqEEBsk2Azxi4LQCyTGthZ
shBAYCBYjj+gDUAnaxVkFgARQMwfdA9ySBBAg+uOIqBIEUBj/5rHgMsRQNFn
q5SZmRFAL++xNeOlE0Dwt3AR
                   "]]}}}, AspectRatio -> 1, Axes -> False, Background -> 
               GrayLevel[0.93], Frame -> True, FrameStyle -> Directive[
                 GrayLevel[0.7], 
                 Thickness[Tiny]], FrameTicks -> None, 
               ImageSize -> {Automatic, 
                 Dynamic[
                 3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])]}, PlotRange -> {{0, 5}, {0, 5}}], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "2.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"scalar\"", "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}], True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                None, Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 3.5 CurrentValue["FontCapHeight"]/
                  AbsoluteCurrentValue[Magnification]}]], 
              GraphicsBox[{{
                 GrayLevel[0.6], 
                 AbsolutePointSize[5], 
                 PointBox[{1, 1}], 
                 PointBox[{2, 4}], 
                 PointBox[{3, 2}], 
                 PointBox[{4, 3}]}, {{}, {}, {
                  AbsoluteThickness[1], 
                  Opacity[1.], 
                  LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAA4ScLwZmZ6T/ACPskWpOYv4AjHgZ5
3Os/cnpQh5xu1j/qWn1XCVDuP5K7ih5ptuc/r+pongFN8D/CUK87BHLxP46d
cUQ/bPE/ujUa8/qu9j9TbqBw1aPyP/TWyyAhFfw/neDJZqDG8z+QAqdF9GsA
QM1wGePDAfU/VsVD/9nXAkCidscSKDf2P6Bp73exDQVA/B1wDMFX9z+TpM3k
wfUGQDzjPoyykPg/7M3Z+O7ZCEABSgjW2LT5P3pl9LwNcgpAbCYw0z/T+j86
ypori9cLQL0gflb/Cfw/lpOs9xIqDUCTvMaj8yv9Pw4alcoYNg5AT3Y1d0Bm
/j+pB2LLtyIPQLClAv7Nmv8/NnA5bbjSD0BLO2UnSF0AQFrcILXmpw9AsTLc
klX5AED+sDHBQukOQNp6UGP9igFAbZ+lR/sLDkD10dd20SgCQNHi3Mj38wxA
42MO5MXDAkAZdr6AZb8LQJRGQrZUVANArv7zEMKHCkA4OInLD/EDQLBlMO3M
IglAnnrNRWWDBEA3d8OX6skHQNf3wBnbEgVAD3D3ndNyBkADhMcwfa4FQHOK
7Wak/wRA8WDLrLk/BkC/MhCgYawDQNJM4msi3QZAwss/TmVLAkCGc6iEq3cH
QIsIg92+BgFA/OprAs8HCECrPCvgePD/P2VxQsMepAhAKXVLE0Xg/j+RSBbp
CDYJQPRz0a7WJ/4/kFqZaBPFCUDN4sX5uLj9P4J7LytKYApAvh1MbRmT/T82
7cJSG/EKQHzT1YZwwv0/3W1pvRiOC0B2LZ/10lT+P0c/DY2wIAxAVrX8MJA7
/z+DS2C2aLAMQElWzbMzPQBAsmbGIk1MDUCi9bAadCABQKTSKfTL3Q1AYexd
q+EpAkCJTaAId3sOQFyS/ndEhgNAQAPGdkIWD0BHWcLdahwFQLoJ6Umopg9A
vd1CiejSBkCTjw8wnSEQQPiVkXD08QhAq0KpbbNqEEBsk2Azxi4LQCyTGthZ
shBAYCBYjj+gDUAnaxVkFgARQMwfdA9ySBBAg+uOIqBIEUBj/5rHgMsRQNFn
q5SZmRFAL++xNeOlE0Dwt3AR
                   "]]}}}, AspectRatio -> 1, Axes -> False, Background -> 
               GrayLevel[0.93], Frame -> True, FrameStyle -> Directive[
                 GrayLevel[0.7], 
                 Thickness[Tiny]], FrameTicks -> None, 
               ImageSize -> {Automatic, 
                 Dynamic[
                 3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])]}, PlotRange -> {{0, 5}, {0, 5}}], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "2.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"scalar\"", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["3", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["False", "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open$$], ImageSize -> Automatic], BaselinePosition -> 
        Baseline], DynamicModuleValues :> {}], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("InterpolatingFunction[{{0., 2.}}, <>]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.648924993336628*^9, 3.648925046680118*^9, 3.648926842665377*^9, 
   3.6489268827803884`*^9, 3.6489269304041505`*^9, 3.648927009589068*^9, 
   3.6489271942325306`*^9, 3.648985778351577*^9, {3.6490066176048126`*^9, 
   3.649006626716724*^9}, 3.64909532615804*^9, 3.6491850018633585`*^9, {
   3.64926265657082*^9, 3.649262684266589*^9}, 3.6494423817248697`*^9, 
   3.6496069683329964`*^9, 3.6496074390300617`*^9, 3.6496077667908344`*^9, 
   3.649607872449399*^9, 3.6496080077789307`*^9, 3.6496083125864086`*^9, {
   3.6496084784639945`*^9, 3.6496084941705647`*^9}, 3.6496087251316586`*^9, 
   3.649608891498294*^9, 3.6496089650856514`*^9, 3.6496091391210537`*^9, 
   3.6496091700941505`*^9, 3.6496092486480055`*^9, 3.64960951998509*^9, {
   3.6496121499502144`*^9, 3.649612155213741*^9}, 3.64961235223044*^9, 
   3.651772250296332*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DetPlot", "=", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"det", "[", "\[Theta]", "]"}], "//", 
    RowBox[{
     RowBox[{"Plot", "[", 
      RowBox[{
       RowBox[{"#", "//", "Re"}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Theta]", ",", "0", ",", "2"}], "}"}]}], "]"}], "&"}]}], 
   ")"}]}]], "Input",
 CellChangeTimes->{{3.6489099589588213`*^9, 3.648909999785904*^9}, {
   3.64891071582451*^9, 3.648910726760604*^9}, {3.6489107886997967`*^9, 
   3.648910789769904*^9}, {3.648910860891015*^9, 3.6489108611020365`*^9}, {
   3.648910949511876*^9, 3.64891097535246*^9}, {3.6489110092708516`*^9, 
   3.648911087786702*^9}, {3.6489112481857405`*^9, 3.6489112761435366`*^9}, {
   3.6489117424431615`*^9, 3.6489117450424213`*^9}, {3.648911914672383*^9, 
   3.6489119278036957`*^9}, {3.6489119810670214`*^9, 3.6489120050094156`*^9}, 
   3.6489124442505555`*^9, {3.648912493910556*^9, 3.6489125420705557`*^9}, {
   3.6489126611845555`*^9, 3.6489126617605553`*^9}, {3.6489126990155554`*^9, 
   3.6489126992895555`*^9}, {3.6489128291295557`*^9, 3.648912834049556*^9}, {
   3.6489136711762896`*^9, 3.648913718393011*^9}, 3.648913764560627*^9, {
   3.648913995743743*^9, 3.648913999991168*^9}, {3.6489142049526105`*^9, 
   3.64891420550961*^9}, 3.648915835449705*^9, {3.648923937893455*^9, 
   3.64892393957444*^9}, {3.6489250969118433`*^9, 3.648925116375203*^9}, {
   3.64892520256905*^9, 3.6489252030172787`*^9}, 3.64892534969689*^9, {
   3.64892736564367*^9, 3.6489273668507905`*^9}, {3.6492627469088526`*^9, 
   3.649262753714533*^9}, {3.649262879686129*^9, 3.649262893967557*^9}, {
   3.6492630544506035`*^9, 3.649263054578616*^9}, {3.64944253227387*^9, 
   3.64944254542187*^9}, {3.64944271569687*^9, 3.64944271586487*^9}, {
   3.64944291395687*^9, 3.64944291406187*^9}, {3.649607875665721*^9, 
   3.6496078882579794`*^9}, {3.64960831590274*^9, 3.6496083165698066`*^9}, {
   3.6496085202581735`*^9, 3.6496085206102085`*^9}, {3.6496089017333174`*^9, 
   3.649608904323576*^9}, 3.6496089689540386`*^9, {3.649609228343975*^9, 
   3.6496092518513255`*^9}, {3.649612173344554*^9, 3.6496121739626155`*^9}, {
   3.6496122451127295`*^9, 3.6496122493591547`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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
Zuk=
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->{348.6666666666665, Automatic},
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->{{0, 2}, {-0.09945238556385419, 0.027821072166017043`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.6489100000049257`*^9, 3.648910394460762*^9, {3.6489107164725747`*^9, 
   3.648910727018629*^9}, 3.648910789939921*^9, 3.6489108672766533`*^9, {
   3.6489109322181473`*^9, 3.6489109756664915`*^9}, {3.648911023412266*^9, 
   3.6489110879927235`*^9}, {3.6489112484287653`*^9, 3.6489112768476067`*^9}, 
   3.648911339713893*^9, 3.648911748689786*^9, {3.64891191634155*^9, 
   3.6489119567315884`*^9}, {3.648911987489664*^9, 3.648912005822497*^9}, 
   3.6489124479195557`*^9, {3.6489124949395556`*^9, 3.6489125425705557`*^9}, {
   3.6489126554645557`*^9, 3.6489126995135555`*^9}, {3.6489128219455557`*^9, 
   3.6489128342945557`*^9}, 3.6489128896325555`*^9, {3.648913042278556*^9, 
   3.6489130674375553`*^9}, 3.6489131106565557`*^9, 3.6489132735445304`*^9, 
   3.6489133111902943`*^9, 3.6489135725984325`*^9, {3.648913671487321*^9, 
   3.6489137187790494`*^9}, 3.6489137649726686`*^9, {3.6489139962067895`*^9, 
   3.64891400071424*^9}, {3.6489141919896107`*^9, 3.6489142060726104`*^9}, 
   3.6489142875846105`*^9, 3.64891433228761*^9, 3.6489143964876103`*^9, 
   3.648915031561324*^9, {3.6489158282659864`*^9, 3.648915835993759*^9}, {
   3.64892120876202*^9, 3.648921224521596*^9}, 3.64892196453859*^9, 
   3.6489240880253487`*^9, {3.648924282964872*^9, 3.648924309520941*^9}, {
   3.648925034572781*^9, 3.648925036679178*^9}, {3.6489250936794252`*^9, 
   3.6489251168114567`*^9}, 3.6489252034137163`*^9, 3.648925350029113*^9, 
   3.6489268714612565`*^9, 3.6489269757266817`*^9, 3.6489271235834665`*^9, 
   3.6489273674678526`*^9, 3.6489861193946776`*^9, 3.649095455205089*^9, 
   3.649185158650035*^9, {3.649262750689231*^9, 3.649262753960558*^9}, {
   3.649262880275188*^9, 3.649262894459606*^9}, 3.649263054840643*^9, 
   3.64944254566387*^9, 3.64944271629587*^9, 3.64944291435987*^9, 
   3.6496070342865915`*^9, 3.6496075118873463`*^9, 3.6496078760427585`*^9, 
   3.6496083167278223`*^9, {3.649608517256873*^9, 3.64960852082123*^9}, 
   3.6496088314502897`*^9, {3.649608894610605*^9, 3.649608904702614*^9}, {
   3.649608965898733*^9, 3.649608969297073*^9}, 3.6496094107492137`*^9, {
   3.6496122337965984`*^9, 3.6496122495721755`*^9}, 3.6496124005482717`*^9, 
   3.651772250757291*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"\[Theta]", "/.", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"FindRoot", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Re", "[", 
               RowBox[{"det", "[", "\[Theta]", "]"}], "]"}], "\[Equal]", 
              "0"}], ",", 
             RowBox[{"{", 
              RowBox[{"\[Theta]", ",", "\[Theta]0"}], "}"}]}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"\[Theta]0", ",", "0", ",", "1.5", ",", 
             RowBox[{"1", "/", "10"}]}], "}"}]}], "]"}], "//", "Quiet"}], 
        ")"}]}], ")"}], "//", 
     RowBox[{
      RowBox[{"Rationalize", "[", 
       RowBox[{"#", ",", 
        SuperscriptBox["10", 
         RowBox[{"-", "9"}]]}], "]"}], "&"}]}], "//", "Union"}], "//", "N"}], 
  "//", 
  RowBox[{
   RowBox[{"Exp", "[", 
    RowBox[{
     RowBox[{"4", "/", "3"}], "#"}], "]"}], "&"}]}]], "Input",
 CellChangeTimes->{{3.64944256917887*^9, 3.64944260281187*^9}, {
   3.64944272169487*^9, 3.64944276306487*^9}, {3.64944281001087*^9, 
   3.64944286822587*^9}, 3.6496078984980035`*^9, {3.649608323797529*^9, 
   3.649608324357585*^9}, {3.6496089111682606`*^9, 3.649608918195963*^9}, 
   3.6496089762877717`*^9, {3.649609302750415*^9, 3.6496093516543045`*^9}, {
   3.649609415899729*^9, 3.649609418596998*^9}, {3.649612180562275*^9, 
   3.6496121935125704`*^9}, {3.649612225401759*^9, 3.6496122301242313`*^9}, {
   3.6496122734745655`*^9, 3.6496122740756254`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1.06023120924558`", ",", "3.7997686726157855`", ",", "7.457536880258327`", 
   ",", "11.722998762909109`"}], "}"}]], "Output",
 CellChangeTimes->{{3.6494428189008703`*^9, 3.64944286858887*^9}, 
   3.6496070352356863`*^9, 3.649607513033461*^9, {3.649607890994253*^9, 
   3.6496078999181457`*^9}, 3.649608324591609*^9, 3.6496085233714848`*^9, 
   3.649608832274372*^9, {3.649608911687312*^9, 3.649608918512995*^9}, {
   3.6496089717973228`*^9, 3.649608976633806*^9}, 3.649609418852024*^9, {
   3.649612252984517*^9, 3.6496122742226405`*^9}, 3.649612400607278*^9, 
   3.651772251185739*^9}]
}, Open  ]],

Cell["\<\
Now lets compare the zeros with the known eigenvalues of the anharmonic \
oscillator:\
\>", "Text",
 CellChangeTimes->{{3.649608542217369*^9, 3.6496085867728243`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"DetPlot2", "=", 
   RowBox[{"(", 
    RowBox[{
     SuperscriptBox[
      RowBox[{"Abs", "[", 
       RowBox[{"Re", "[", 
        RowBox[{"det", "[", 
         RowBox[{
          RowBox[{"3", "/", "4"}], 
          RowBox[{"Log", "[", "\[CapitalEpsilon]", "]"}]}], "]"}], "]"}], 
       "]"}], 
      RowBox[{"1", "/", "1.5"}]], "//", 
     RowBox[{
      RowBox[{"Plot", "[", 
       RowBox[{
        RowBox[{"#", "//", "Re"}], ",", 
        RowBox[{"{", 
         RowBox[{"\[CapitalEpsilon]", ",", "1", ",", "10"}], "}"}], ",", 
        RowBox[{"PlotPoints", "\[Rule]", "100"}], ",", 
        RowBox[{"PlotStyle", "\[Rule]", "Thick"}]}], "]"}], "&"}]}], ")"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"DoreyTateoEigenvalues", " ", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "1.06036209048418", ",", "3.79967302980139", ",", "7.455693798672", 
         ",", "11.64474551137815"}], " ", "}"}], ",", 
       RowBox[{"Table", "[", 
        RowBox[{"0", ",", 
         RowBox[{"{", "4", "}"}]}], "]"}]}], "}"}], "//", "Transpose"}], "//", 
    RowBox[{
     RowBox[{"ListPlot", "[", 
      RowBox[{"#", ",", 
       RowBox[{"PlotStyle", "\[Rule]", "Red"}]}], "]"}], "&"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", 
  RowBox[{"DetPlot2", ",", "DoreyTateoEigenvalues"}], 
  "]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.6489099589588213`*^9, 3.648909999785904*^9}, {
   3.64891071582451*^9, 3.648910726760604*^9}, {3.6489107886997967`*^9, 
   3.648910789769904*^9}, {3.648910860891015*^9, 3.6489108611020365`*^9}, {
   3.648910949511876*^9, 3.64891097535246*^9}, {3.6489110092708516`*^9, 
   3.648911087786702*^9}, {3.6489112481857405`*^9, 3.6489112761435366`*^9}, {
   3.6489117424431615`*^9, 3.6489117450424213`*^9}, {3.648911914672383*^9, 
   3.6489119278036957`*^9}, {3.6489119810670214`*^9, 3.6489120050094156`*^9}, 
   3.6489124442505555`*^9, {3.648912493910556*^9, 3.6489125420705557`*^9}, {
   3.6489126611845555`*^9, 3.6489126617605553`*^9}, {3.6489126990155554`*^9, 
   3.6489126992895555`*^9}, {3.6489128291295557`*^9, 3.648912834049556*^9}, {
   3.6489136711762896`*^9, 3.648913718393011*^9}, 3.648913764560627*^9, {
   3.648913995743743*^9, 3.648913999991168*^9}, {3.6489142049526105`*^9, 
   3.64891420550961*^9}, 3.648915835449705*^9, {3.648923937893455*^9, 
   3.64892393957444*^9}, {3.6489250969118433`*^9, 3.648925116375203*^9}, {
   3.64892520256905*^9, 3.6489252030172787`*^9}, 3.64892534969689*^9, {
   3.64892736564367*^9, 3.6489273668507905`*^9}, {3.6492627469088526`*^9, 
   3.649262753714533*^9}, {3.649262879686129*^9, 3.649262893967557*^9}, {
   3.6492630544506035`*^9, 3.649263054578616*^9}, {3.64944253227387*^9, 
   3.64944254542187*^9}, {3.64944271569687*^9, 3.64944271586487*^9}, {
   3.64944291395687*^9, 3.64944291406187*^9}, {3.64960709558072*^9, 
   3.649607165931754*^9}, {3.649607526382796*^9, 3.649607614774634*^9}, {
   3.649607679549111*^9, 3.649607725095665*^9}, 3.649608039009053*^9, {
   3.64960836880503*^9, 3.649608416979847*^9}, {3.649608534269574*^9, 
   3.649608534367584*^9}, {3.649612411967414*^9, 3.6496124508573017`*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], Thickness[Large], Opacity[1.], 
     LineBox[CompressedData["
1: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
      "]]}}, {{}, {{}, 
     {RGBColor[1, 0, 0], PointSize[0.012833333333333334`], AbsoluteThickness[
      1.6], PointBox[{{1.06036209048418, 0.}, {3.79967302980139, 0.}, {
       7.455693798672, 0.}, {11.64474551137815, 0.}}]}, {}}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{2., 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->{709.3333333333323, Automatic},
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->{{1, 10}, {0., 0.21465622594836398`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.64960836470562*^9, 3.6496084173248816`*^9}, {
   3.649608528257973*^9, 3.649608534789626*^9}, 3.6496088334514894`*^9, 
   3.64960899126927*^9, 3.649612282341452*^9, {3.6496124006592827`*^9, 
   3.6496124513243484`*^9}, 3.6517722513053007`*^9}]
}, Open  ]],

Cell["\<\
So we can see the eigenvalues computed by the two methods agree quite well.  \
Most of the error is probably due to the interpolations made in the last few \
steps, which loses the exponential precision of the spectral method we have \
been using (Fourier).  One could redo the last part of the exercise using \
Fourier to check  (this would also be much faster...).  \
\>", "Text",
 CellChangeTimes->{{3.649608173779529*^9, 3.649608267407891*^9}, {
   3.6496084280089493`*^9, 3.6496084600721555`*^9}, {3.6496088360387487`*^9, 
   3.649608852975442*^9}, {3.649609022794422*^9, 3.6496090351786604`*^9}, 
   3.649612393091526*^9}]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1264, 889},
WindowMargins->{{-488, Automatic}, {946, Automatic}},
PrivateNotebookOptions->{"VersionedStylesheet"->{"Default.nb"[8.] -> False}},
ShowSelection->True,
Magnification:>FEPrivate`If[
  FEPrivate`Equal[FEPrivate`$VersionNumber, 6.], 1.5, 1.5 Inherited],
FrontEndVersion->"10.2 for Mac OS X x86 (32-bit, 64-bit Kernel) (July 6, \
2015)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[579, 22, 227, 3, 95, "Section"],
Cell[CellGroupData[{
Cell[831, 29, 165, 2, 65, "Subsection"],
Cell[999, 33, 939, 22, 125, "Input"],
Cell[CellGroupData[{
Cell[1963, 59, 946, 27, 82, "Input"],
Cell[2912, 88, 20705, 345, 366, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[23666, 439, 88, 1, 65, "Subsection"],
Cell[23757, 442, 3005, 53, 118, "Input"],
Cell[26765, 497, 776, 21, 155, "Text"],
Cell[27544, 520, 104, 1, 46, "Text"],
Cell[CellGroupData[{
Cell[27673, 525, 1092, 26, 105, "Input"],
Cell[28768, 553, 867, 13, 43, "Output"],
Cell[29638, 568, 4610, 85, 202, "Output"]
}, Open  ]],
Cell[34263, 656, 97, 1, 46, "Text"],
Cell[CellGroupData[{
Cell[34385, 661, 1111, 30, 72, "Input"],
Cell[35499, 693, 4578, 84, 202, "Output"]
}, Open  ]],
Cell[40092, 780, 87, 1, 46, "Text"],
Cell[CellGroupData[{
Cell[40204, 785, 125, 2, 43, "Input"],
Cell[40332, 789, 319, 5, 43, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[40712, 801, 223, 3, 95, "Section"],
Cell[CellGroupData[{
Cell[40960, 808, 91, 1, 65, "Subsection"],
Cell[41054, 811, 2684, 71, 222, "Input"],
Cell[CellGroupData[{
Cell[43763, 886, 479, 14, 43, "Input"],
Cell[44245, 902, 2394, 69, 143, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[46688, 977, 88, 1, 65, "Subsection"],
Cell[46779, 980, 359, 9, 77, "Text"],
Cell[CellGroupData[{
Cell[47163, 993, 1253, 35, 112, "Input"],
Cell[48419, 1030, 1472, 39, 111, "Output"]
}, Open  ]],
Cell[49906, 1072, 205, 4, 46, "Text"],
Cell[CellGroupData[{
Cell[50136, 1080, 1413, 39, 144, "Input"],
Cell[51552, 1121, 675, 11, 43, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[52276, 1138, 94, 1, 65, "Subsection"],
Cell[52373, 1141, 619, 16, 49, "Text"],
Cell[CellGroupData[{
Cell[53017, 1161, 2220, 53, 94, "Input"],
Cell[55240, 1216, 674, 10, 43, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[55963, 1232, 91, 1, 65, "Subsection"],
Cell[56057, 1235, 157, 3, 46, "Text"],
Cell[56217, 1240, 205, 4, 46, "Text"],
Cell[56425, 1246, 1148, 36, 94, "Input"],
Cell[57576, 1284, 174, 2, 46, "Text"],
Cell[57753, 1288, 4468, 105, 242, "Input"],
Cell[CellGroupData[{
Cell[62246, 1397, 2830, 62, 94, "Input"],
Cell[65079, 1461, 9131, 167, 370, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[74271, 1635, 106, 1, 95, "Section"],
Cell[74380, 1638, 164, 3, 46, "Text"],
Cell[74547, 1643, 2641, 58, 108, "Input"],
Cell[77191, 1703, 194, 4, 46, "Text"],
Cell[CellGroupData[{
Cell[77410, 1711, 88, 1, 65, "Subsection"],
Cell[77501, 1714, 141, 2, 46, "Text"],
Cell[77645, 1718, 1251, 36, 134, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[78933, 1759, 91, 1, 65, "Subsection"],
Cell[79027, 1762, 401, 9, 78, "Text"],
Cell[79431, 1773, 1062, 30, 72, "Input"],
Cell[80496, 1805, 166, 3, 46, "Text"],
Cell[80665, 1810, 1729, 41, 168, "Input"],
Cell[CellGroupData[{
Cell[82419, 1855, 215, 5, 43, "Input"],
Cell[82637, 1862, 383, 6, 43, "Output"]
}, Open  ]],
Cell[83035, 1871, 185, 4, 46, "Text"],
Cell[83223, 1877, 1405, 37, 143, "Input"],
Cell[CellGroupData[{
Cell[84653, 1918, 247, 6, 43, "Input"],
Cell[84903, 1926, 356, 5, 43, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[85308, 1937, 161, 2, 65, "Subsection"],
Cell[85472, 1941, 735, 23, 48, "Text"],
Cell[86210, 1966, 116, 1, 46, "Text"],
Cell[86329, 1969, 1386, 34, 94, "Input"],
Cell[87718, 2005, 427, 14, 48, "Text"],
Cell[88148, 2021, 6935, 169, 293, "Input"],
Cell[CellGroupData[{
Cell[95108, 2194, 457, 13, 43, "Input"],
Cell[95568, 2209, 488, 11, 43, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[96105, 2226, 88, 1, 65, "Subsection"],
Cell[96196, 2229, 642, 20, 48, "Text"],
Cell[CellGroupData[{
Cell[96863, 2253, 2592, 56, 154, "Input"],
Cell[99458, 2311, 983, 16, 43, "Output"],
Cell[100444, 2329, 9666, 192, 93, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[110147, 2526, 2177, 36, 43, "Input"],
Cell[112327, 2564, 18992, 318, 326, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[131356, 2887, 1576, 40, 74, "Input"],
Cell[132935, 2929, 630, 11, 43, "Output"]
}, Open  ]],
Cell[133580, 2943, 177, 4, 46, "Text"],
Cell[CellGroupData[{
Cell[133782, 2951, 3225, 67, 232, "Input"],
Cell[137010, 3020, 21152, 357, 715, "Output"]
}, Open  ]],
Cell[158177, 3380, 638, 10, 135, "Text"]
}, Open  ]]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
