(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 9.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       157,          7]
NotebookDataLength[     89759,       1773]
NotebookOptionsPosition[     87700,       1702]
NotebookOutlinePosition[     88173,       1721]
CellTagsIndexPosition[     88130,       1718]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Solution to Strong Subadditivity", "Section",
 CellChangeTimes->{{3.649162495263341*^9, 3.649162496167624*^9}, {
  3.649165013956587*^9, 3.649165018764475*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"\[DoubleStruckCapitalI]", "=", "IdentityMatrix"}], ";"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"CircleTimes", "=", "KroneckerProduct"}], ";"}], " "}]}], "Input",
 CellChangeTimes->{{3.642252680100103*^9, 3.6422526976491613`*^9}, {
  3.642252925563676*^9, 3.6422529264043913`*^9}, {3.642252971028668*^9, 
  3.642252978058264*^9}, {3.6422631249085484`*^9, 3.642263128287519*^9}, {
  3.642263786352542*^9, 3.6422637865365257`*^9}}],

Cell["Here we verify S(A \[Union] B \[Union] C) + S(C) \[LessEqual] S(A \
\[Union] C) + S(B \[Union] C).", "Text",
 CellChangeTimes->{{3.642249833214074*^9, 3.642249836205538*^9}, {
  3.6422529286913347`*^9, 3.64225292921204*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"dimA", "=", "6"}], ";"}], " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"dimB", "=", "12"}], ";"}], " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"dimC", "=", "8"}], ";"}], " "}], "\[IndentingNewLine]", 
 RowBox[{"dim", "=", 
  RowBox[{"dimA", " ", "dimB", " ", "dimC"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"dimAux", "=", 
    RowBox[{"10", "*", "dim"}]}], ";"}], " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"dimAux", " ", "=", " ", 
     RowBox[{"1", " ", "for", " ", "a", " ", "pure", " ", "state"}]}], ";", 
    " ", 
    RowBox[{
    "subadditivity", " ", "saturates", " ", "as", " ", "dimAux", " ", "is", 
     " ", "very", " ", "large", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"e", ".", "g", ".", " ", "for"}], " ", "10", " ", "dim"}], 
      ")"}], " ", 
     RowBox[{"(", 
      RowBox[{"seems", " ", "to", " ", "saturate", " ", "as", " ", 
       RowBox[{"1", "/", "dimAux"}]}], ")"}]}]}], " ", "*)"}], 
  " "}]}], "Input",
 CellChangeTimes->{{3.64225348930099*^9, 3.642253491331909*^9}, {
   3.642253731613511*^9, 3.642253731845174*^9}, 3.642253814724409*^9, {
   3.642254885873021*^9, 3.642254937584156*^9}, {3.642255015688497*^9, 
   3.6422551076840153`*^9}, {3.6422551436553907`*^9, 3.642255167254716*^9}, {
   3.6422552004254932`*^9, 3.642255230033461*^9}, {3.642263130353209*^9, 
   3.6422631493326406`*^9}, {3.6422705747458344`*^9, 3.642270602645438*^9}}],

Cell[BoxData["576"], "Output",
 CellChangeTimes->{{3.642254914849949*^9, 3.6422549380753*^9}, {
   3.642255009663558*^9, 3.6422550393340683`*^9}, {3.642255097990698*^9, 
   3.642255108210887*^9}, {3.642255144724695*^9, 3.6422551677662783`*^9}, {
   3.642255220032837*^9, 3.642255230717732*^9}, {3.642263135236094*^9, 
   3.6422631499030237`*^9}, {3.642270577223184*^9, 3.642270604130128*^9}, 
   3.649162833972703*^9, 3.649165190074391*^9, 3.64916585058814*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"e", "[", 
   RowBox[{"i_", ",", "dim_"}], "]"}], ":=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"Boole", "[", 
      RowBox[{"j", "\[Equal]", "i"}], "]"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"j", ",", "dim"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.642252705914731*^9, 3.642252730443286*^9}}],

Cell["\<\
Next we generate a random density matrix and a few reduced matrices:\
\>", "Text",
 CellChangeTimes->{{3.642263912657139*^9, 3.6422639322084837`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"X", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"RandomReal", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"dim", ",", "dimAux"}], "}"}]}], "]"}], "+", 
     RowBox[{"I", " ", 
      RowBox[{"RandomReal", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"dim", ",", "dimAux"}], "}"}]}], "]"}]}]}], "//", "N"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.6422492898671017`*^9, 3.642249293553452*^9}, {
  3.642249505730888*^9, 3.642249525201511*^9}, {3.642252658532344*^9, 
  3.642252674093177*^9}, {3.6422530043149137`*^9, 3.642253025011963*^9}, {
  3.642253195669183*^9, 3.64225320889869*^9}, {3.642254895810611*^9, 
  3.642254898625677*^9}, {3.6422637907053833`*^9, 3.642263814046627*^9}, {
  3.649162836290722*^9, 3.649162841558079*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[Rho]ABC", "=", 
   FractionBox[
    RowBox[{"X", ".", 
     RowBox[{"X", "\[HermitianConjugate]"}]}], 
    RowBox[{"Tr", "[", 
     RowBox[{"X", ".", 
      RowBox[{"X", "\[HermitianConjugate]"}]}], "]"}]]}], ";"}]], "Input",
 CellChangeTimes->{{3.6422488172030487`*^9, 3.642248855225605*^9}, {
  3.642248904517654*^9, 3.642248913062036*^9}, {3.642249196969673*^9, 
  3.642249308432077*^9}, {3.642249822263934*^9, 3.642249824079121*^9}, {
  3.64225194145511*^9, 3.642251945751089*^9}, {3.6422522442718678`*^9, 
  3.6422522600966883`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[Rho]AC", "=", 
   RowBox[{
    UnderoverscriptBox["\[Sum]", 
     RowBox[{"b", "=", "1"}], "dimB"], 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"\[DoubleStruckCapitalI]", "[", "dimA", "]"}], 
        "\[CircleTimes]", 
        RowBox[{"e", "[", 
         RowBox[{"b", ",", "dimB"}], "]"}], "\[CircleTimes]", 
        RowBox[{"\[DoubleStruckCapitalI]", "[", "dimC", "]"}]}], ")"}], 
      "\[Transpose]"}], ".", "\[Rho]ABC", ".", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"\[DoubleStruckCapitalI]", "[", "dimA", "]"}], 
       "\[CircleTimes]", 
       RowBox[{"e", "[", 
        RowBox[{"b", ",", "dimB"}], "]"}], "\[CircleTimes]", 
       RowBox[{"\[DoubleStruckCapitalI]", "[", "dimC", "]"}]}], ")"}]}]}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.6422521100997353`*^9, 3.6422522060934687`*^9}, 
   3.6422522879587584`*^9, {3.6422523381506157`*^9, 3.642252445413034*^9}, {
   3.6422527475154247`*^9, 3.642252804001047*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[Rho]BC", "=", 
   RowBox[{
    UnderoverscriptBox["\[Sum]", 
     RowBox[{"a", "=", "1"}], "dimA"], 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"e", "[", 
         RowBox[{"a", ",", "dimA"}], "]"}], "\[CircleTimes]", 
        RowBox[{"\[DoubleStruckCapitalI]", "[", "dimB", "]"}], 
        "\[CircleTimes]", 
        RowBox[{"\[DoubleStruckCapitalI]", "[", "dimC", "]"}]}], ")"}], 
      "\[Transpose]"}], ".", "\[Rho]ABC", ".", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"e", "[", 
        RowBox[{"a", ",", "dimA"}], "]"}], "\[CircleTimes]", 
       RowBox[{"\[DoubleStruckCapitalI]", "[", "dimB", "]"}], 
       "\[CircleTimes]", 
       RowBox[{"\[DoubleStruckCapitalI]", "[", "dimC", "]"}]}], ")"}]}]}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.642252811375928*^9, 3.6422528345137777`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[Rho]C", "=", 
   RowBox[{
    UnderoverscriptBox["\[Sum]", 
     RowBox[{"a", "=", "1"}], "dimA"], 
    RowBox[{
     UnderoverscriptBox["\[Sum]", 
      RowBox[{"b", "=", "1"}], "dimB"], 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"e", "[", 
          RowBox[{"a", ",", "dimA"}], "]"}], "\[CircleTimes]", 
         RowBox[{"e", "[", 
          RowBox[{"b", ",", "dimB"}], "]"}], "\[CircleTimes]", 
         RowBox[{"\[DoubleStruckCapitalI]", "[", "dimC", "]"}]}], ")"}], 
       "\[Transpose]"}], ".", "\[Rho]ABC", ".", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"e", "[", 
         RowBox[{"a", ",", "dimA"}], "]"}], "\[CircleTimes]", 
        RowBox[{"e", "[", 
         RowBox[{"b", ",", "dimB"}], "]"}], "\[CircleTimes]", 
        RowBox[{"\[DoubleStruckCapitalI]", "[", "dimC", "]"}]}], 
       ")"}]}]}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.6422524644103823`*^9, 3.642252493212479*^9}, {
  3.642252842481481*^9, 3.642252854330917*^9}}],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{
   RowBox[{
    RowBox[{"MatrixPlot", "[", 
     RowBox[{"Re", "[", "#", "]"}], "]"}], "&"}], "/@", 
   RowBox[{"{", 
    RowBox[{"\[Rho]ABC", ",", "\[Rho]AC", ",", "\[Rho]BC", ",", "\[Rho]C"}], 
    "}"}]}], " ", "*)"}]], "Input",
 CellChangeTimes->{{3.642253868269896*^9, 3.6422539663143187`*^9}, {
  3.642254302463388*^9, 3.6422543047188587`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"SABC", "=", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"-", "#"}], 
       RowBox[{"Log", "[", "#", "]"}]}], "&"}], "/@", 
     RowBox[{"Eigenvalues", "@", "\[Rho]ABC"}]}], "//", "Total"}], "//", 
   "Chop"}]}], "\[IndentingNewLine]", 
 RowBox[{"SC", "=", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"-", "#"}], 
       RowBox[{"Log", "[", "#", "]"}]}], "&"}], "/@", 
     RowBox[{"Eigenvalues", "@", "\[Rho]C"}]}], "//", "Total"}], "//", 
   "Chop"}]}], "\[IndentingNewLine]", 
 RowBox[{"SAC", "=", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"-", "#"}], 
       RowBox[{"Log", "[", "#", "]"}]}], "&"}], "/@", 
     RowBox[{"Eigenvalues", "@", "\[Rho]AC"}]}], "//", "Total"}], "//", 
   "Chop"}]}], "\[IndentingNewLine]", 
 RowBox[{"SBC", "=", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"-", "#"}], 
       RowBox[{"Log", "[", "#", "]"}]}], "&"}], "/@", 
     RowBox[{"Eigenvalues", "@", "\[Rho]BC"}]}], "//", "Total"}], "//", 
   "Chop"}]}]}], "Input",
 CellChangeTimes->{{3.6422525329601307`*^9, 3.64225259608498*^9}, {
  3.642253091719911*^9, 3.642253098384124*^9}, {3.6422537866919527`*^9, 
  3.64225379019538*^9}, {3.6422549501590147`*^9, 3.6422549590630608`*^9}, {
  3.642270544800891*^9, 3.642270561407056*^9}}],

Cell[BoxData["6.306244692126043`"], "Output",
 CellChangeTimes->{{3.6422525403322487`*^9, 3.642252596680722*^9}, {
   3.642252631963169*^9, 3.642252639085999*^9}, {3.6422528561332006`*^9, 
   3.6422528880521507`*^9}, {3.642252974600482*^9, 3.642252981105632*^9}, 
   3.6422530424630957`*^9, {3.6422530820254908`*^9, 3.642253098897624*^9}, 
   3.6422531842089252`*^9, {3.642253254918707*^9, 3.642253294880995*^9}, 
   3.64225350424783*^9, 3.6422537335695047`*^9, {3.64225379074444*^9, 
   3.642253816404583*^9}, 3.6422542193383827`*^9, {3.642254297898055*^9, 
   3.64225430595654*^9}, {3.642254792021675*^9, 3.64225480248802*^9}, {
   3.642254943853384*^9, 3.642254959308864*^9}, {3.642255010039281*^9, 
   3.642255052501281*^9}, 3.6422551111333933`*^9, {3.642255150860361*^9, 
   3.6422551822776012`*^9}, {3.642255220366394*^9, 3.642255231613587*^9}, 
   3.642263818646201*^9, 3.642270446284013*^9, {3.642270546236755*^9, 
   3.6422706057249193`*^9}, 3.649165191196431*^9, 3.649165858301166*^9}],

Cell[BoxData["2.0794337323379035`"], "Output",
 CellChangeTimes->{{3.6422525403322487`*^9, 3.642252596680722*^9}, {
   3.642252631963169*^9, 3.642252639085999*^9}, {3.6422528561332006`*^9, 
   3.6422528880521507`*^9}, {3.642252974600482*^9, 3.642252981105632*^9}, 
   3.6422530424630957`*^9, {3.6422530820254908`*^9, 3.642253098897624*^9}, 
   3.6422531842089252`*^9, {3.642253254918707*^9, 3.642253294880995*^9}, 
   3.64225350424783*^9, 3.6422537335695047`*^9, {3.64225379074444*^9, 
   3.642253816404583*^9}, 3.6422542193383827`*^9, {3.642254297898055*^9, 
   3.64225430595654*^9}, {3.642254792021675*^9, 3.64225480248802*^9}, {
   3.642254943853384*^9, 3.642254959308864*^9}, {3.642255010039281*^9, 
   3.642255052501281*^9}, 3.6422551111333933`*^9, {3.642255150860361*^9, 
   3.6422551822776012`*^9}, {3.642255220366394*^9, 3.642255231613587*^9}, 
   3.642263818646201*^9, 3.642270446284013*^9, {3.642270546236755*^9, 
   3.6422706057249193`*^9}, 3.649165191196431*^9, 3.649165858305765*^9}],

Cell[BoxData["3.870861365341266`"], "Output",
 CellChangeTimes->{{3.6422525403322487`*^9, 3.642252596680722*^9}, {
   3.642252631963169*^9, 3.642252639085999*^9}, {3.6422528561332006`*^9, 
   3.6422528880521507`*^9}, {3.642252974600482*^9, 3.642252981105632*^9}, 
   3.6422530424630957`*^9, {3.6422530820254908`*^9, 3.642253098897624*^9}, 
   3.6422531842089252`*^9, {3.642253254918707*^9, 3.642253294880995*^9}, 
   3.64225350424783*^9, 3.6422537335695047`*^9, {3.64225379074444*^9, 
   3.642253816404583*^9}, 3.6422542193383827`*^9, {3.642254297898055*^9, 
   3.64225430595654*^9}, {3.642254792021675*^9, 3.64225480248802*^9}, {
   3.642254943853384*^9, 3.642254959308864*^9}, {3.642255010039281*^9, 
   3.642255052501281*^9}, 3.6422551111333933`*^9, {3.642255150860361*^9, 
   3.6422551822776012`*^9}, {3.642255220366394*^9, 3.642255231613587*^9}, 
   3.642263818646201*^9, 3.642270446284013*^9, {3.642270546236755*^9, 
   3.6422706057249193`*^9}, 3.649165191196431*^9, 3.649165858308888*^9}],

Cell[BoxData["4.562953506878251`"], "Output",
 CellChangeTimes->{{3.6422525403322487`*^9, 3.642252596680722*^9}, {
   3.642252631963169*^9, 3.642252639085999*^9}, {3.6422528561332006`*^9, 
   3.6422528880521507`*^9}, {3.642252974600482*^9, 3.642252981105632*^9}, 
   3.6422530424630957`*^9, {3.6422530820254908`*^9, 3.642253098897624*^9}, 
   3.6422531842089252`*^9, {3.642253254918707*^9, 3.642253294880995*^9}, 
   3.64225350424783*^9, 3.6422537335695047`*^9, {3.64225379074444*^9, 
   3.642253816404583*^9}, 3.6422542193383827`*^9, {3.642254297898055*^9, 
   3.64225430595654*^9}, {3.642254792021675*^9, 3.64225480248802*^9}, {
   3.642254943853384*^9, 3.642254959308864*^9}, {3.642255010039281*^9, 
   3.642255052501281*^9}, 3.6422551111333933`*^9, {3.642255150860361*^9, 
   3.6422551822776012`*^9}, {3.642255220366394*^9, 3.642255231613587*^9}, 
   3.642263818646201*^9, 3.642270446284013*^9, {3.642270546236755*^9, 
   3.6422706057249193`*^9}, 3.649165191196431*^9, 3.649165858312006*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SAC", "+", "SBC", "-", "SABC", "-", "SC"}]], "Input"],

Cell[BoxData["0.04813644775556902`"], "Output",
 CellChangeTimes->{
  3.642254564492148*^9, 3.642254802515903*^9, 3.6422549601110487`*^9, {
   3.6422550100782223`*^9, 3.642255052576541*^9}, 3.642255111186955*^9, {
   3.642255150896179*^9, 3.642255182314617*^9}, {3.642255220404305*^9, 
   3.642255231695034*^9}, 3.642263819446913*^9, 3.642270448206579*^9, {
   3.6422705678959*^9, 3.642270605756835*^9}, 3.649165191225176*^9, 
   3.649165858337104*^9}]
}, Open  ]],

Cell["\<\
We could have used simply used the built-in MatrixLog function:\
\>", "Text",
 CellChangeTimes->{{3.64225452231468*^9, 3.642254524106648*^9}, {
  3.6422547433222313`*^9, 3.64225474825819*^9}, {3.642254778402286*^9, 
  3.642254819041095*^9}, {3.642263843456455*^9, 3.642263850207424*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   RowBox[{"Tr", "[", 
    RowBox[{"\[Rho]BC", ".", 
     RowBox[{"MatrixLog", "[", "\[Rho]BC", "]"}]}], "]"}]}], "//", 
  "Chop"}]], "Input",
 CellChangeTimes->{{3.642254524830769*^9, 3.6422545470668707`*^9}, {
  3.642254784650125*^9, 3.642254786714827*^9}, {3.642255000308392*^9, 
  3.6422550026604023`*^9}}],

Cell[BoxData["4.562953506878254`"], "Output",
 CellChangeTimes->{{3.642254538366804*^9, 3.642254547301132*^9}, {
   3.642254788449926*^9, 3.64225480426086*^9}, {3.6422549834721117`*^9, 
   3.642255010860127*^9}, 3.642255111219371*^9, {3.642255150934091*^9, 
   3.642255182347645*^9}, {3.642255220437615*^9, 3.6422552318359222`*^9}, 
   3.642263903906205*^9, {3.642270578019677*^9, 3.642270605798647*^9}, 
   3.6491651912709*^9, 3.64916585838879*^9}]
}, Open  ]],

Cell["\<\
MatrixLog is considerably slower than the way we did above. To play with the \
relative entropy, however, it is quite useful.\
\>", "Text",
 CellChangeTimes->{{3.6422548214493113`*^9, 3.642254845744412*^9}, {
  3.642263854080736*^9, 3.642263891896235*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Page\[CloseCurlyQuote]s Theorem", "Section",
 CellChangeTimes->{{3.649162495263341*^9, 3.649162496167624*^9}, {
  3.649165013956587*^9, 3.649165018764475*^9}, {3.649165106162108*^9, 
  3.649165112146144*^9}}],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJzs3e1zFded6Hvdhxe36v4Np845MzWTsTHwdh5sY3g1M7bBnFtnJgbsmkkA
u2piEL4T8+A6Yx6cGOFJQDhjBBMj7CAcIxwjbCMcIxmJlJFshI2UIGWQIilX
IsVmJI22pmpramvqd/u5V/fu3rsf9pa2xPdT1YlR7727e63V66lXr/Xfv7X9
f2z932tqav7f/0v7n//xtztXv/ji3+7+f/5P7R9rdv/9lm/9H9p/fP6/1dT8
39pf9D8KAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAKm7g3HelpqZGVm1/X7Jxvpgfk5bGY9LQ
UC91dXWyf/du2bp1j1wema3UqQIAAAAAgEqb+5U8V1Nj9BXo25u9/x79uzOf
O99Tt0cOflG58y0in89LTtuWuvvlOgEAAAAAC+NO+z942/rbP5TIrdD8hPR2
dcqZus2e33jiyFeVPOUQ0/L2Ov346+VarMERi839cp0AAAAAgIUxISdW+8cF
rJGOyZg/M/e1PLPgfQVjcmCF2Ya+vqTb0PfLdQIAAAAAFsLc0DuB7xA8ffKX
8X5o9ssF7yuYG/2Zdfyl3Ya+X64TAAAAALAw2g/8aWBfQU3NyzIc54eqoK/g
6qE/uS/a0PfLdQIAAAAAFsDMl/JUYD+Bub127d+i/9YC9xXcaf+ecu7Pys0l
Ou3f/XKdAAAAAICFMXTu78w25wNvSP/Ae4X9BRvelVzUH/P1FTx98tfGeoqd
Laelvm6/7N+vb3XS0HRBbo7PFP2pXOaWtDWflP27t8vWrVuNbfv+o9Lc2ipN
Dftk4/bjMmy0kfMymRmRSw0v+M59pRxsviCtLS3Som/NLXIzo6zhmL8rna36
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
ZusfOn0B/kcauclbcmB1Tej+qkJ6XTTy2dtydJ2Vrp4sTFel0i0Io6o186U8
pbT9Xjj/m3k5LOlhkdLK69H2Hzpxd7iHvgKgfHLy9jo3P36z999DPuc+x3j8
mPWcL3tLjtZukHVrd8j5/ql5O2MU13f0v2jx9I88u6wWs18a4+rp5w5T/rxl
VulrCGpDeT/8tfMcSX9+dT3gnYehc3+j1B9flbGAnxk49VdF+wL6jv/14ugr
IL0uKsXSXZR0e78jjKpU/rY8p/QVvHT5d/NyWNLDIjbnluX0FQDlNO3pKwi9
v5T69JvXw/oTsPDycmnPImiP3Efm7nxE2VVMBfKWGbWvoNS9oLWN3b6C9XI9
8MMTcrXpmNTVN0jHYHDfRam+gMXSV0B6XVyKp6vS6RaEUbWaGbwiDXV1cqz5
6jw++yA9LFpKWU75BZRT1L4CdzwY92A1m5BDy6u/PXI/mer+HvdNMRXIW8rf
V1DaUukrIL0uLoslXQFARdFXAFRI9L4C5x5kXEHVGrLf0y417hrzI3/bmQ+E
+yZEBfKWau8rqNr3g0iviw59BQAgxhwX9BUAlVCiryCfk2w2J7PWuFRjftGO
32l/1v+eNfYlk5PBnsvS2FAvdXX1Ut9wRi73DFVkPr7J8dvS1dkmbW2t0trW
JWPOKeekv6vXU7/KZSclMz4uI4P90tvTJT2+MWjG/oy7v1P7veC1JfX5zG5L
W/NJqa+rk/r6emlsbpfbkyHzhWnhPJnJyPjIoPT39mi/2ym3rLnFcpPD0qOv
99amXUNnj4xngw841P59z1zsY7m8dr7ZgnhKfY0lz7XNONdOLWz955rPjjn7
27TfHQkLj5hy47ekVR83uL9OS0/6mMV2GdHOsVv72+muO+7ntHRrz2mnz4Fn
/Nt7hkaY5XLuZ/Swyyc4luSUeccK7hvtGGHpxvh9M93ov6+nm2F/I6AK48C9
gLvS03bWWMtNP/+GxnPS1X+n8HMVy1vK21eQz2U990vgtUiMvoIn3zbWVMxr
8dRlx5N2Xw9morf0oqQR/T4eHx+Rwf5e7Thdzv6s9t1OLT/RjzmmBnHC9Br9
fEvcM1aaHlHS9G2jUyUv4/3XrfTaJl29gxKSBXqPGSf/9cvbabje+K6dhsMP
O62VJRet8ky7xvpTcrk3OJ0kls/KYO81Jxx6rHQYNl9BqXRrlwOD2v6eHi09
dNnz4eZkxA5vLZ30Do4X5JHjg9b+Vj0+RiOV21HTbMlzsq69+DHN+NDHr+83
4qNBq1+MSmawQxqOnJOxfLQw8sto193c2GDFcYM0t3Z77yEniNKX53GN9nRo
9Rs3XTinYuX3rWHHy2aU/Xp5UCTfzQ5r12L/juco5j3aGjV+SslLdlIPvxEt
/Mz8KzCcI8Zz5KOW454py/V7pcrLiv1u3DLC/Was+nslwi3r1OuV9Bh1voKo
dZSo517GfDJU2vLRyZPse6pHJgPr9dp+Iz20ybX+ewVhkSy9RKzXoooV7yuY
ufGqZx2Sgi3Bs4y58SvynPXsau2WA1ret8+dh/yxF6VjfLYsVzY7/rkcWPeg
e67Oeg9r5OKI9oF7P/M9P5uQ1wuucb0y11nQfnddNVderja84Hx/v5a3H9j6
qPOdbSd/If7bKSicD2tlXvepbznHWbfG3bdXXUvbMzdb2GbPdZj+GuOe686z
5rneaHrJ+ttKz3597Y3keei0XLLXVXroGTmi5fktLadlh7Ke2CPWPPp9x/88
OGw2vOvGx8znxrxu/s9cycY8ll1/L7K9UjB3nPL72rZx/1GpP7DBCbNjnaNV
GgeugdbDTvitrT0kDQ0H3bmsN74uN5UH6pXIW5zf9s1tWLTXYe7ron0FXx3y
nVfA2nS6yH0Fq16WpuPbnHjYtO4x57dXbX9bbhc92ahppPA+fvzYVzKgrg9h
bM8a15ssvUYR/Z4JSg/btTqos37EihWePOnw5bB50ePnv6rRtjfdPGD5U1K7
u1aesssOLe5u+iJ/ZuhjN/089LxWb653/r1sywkZTn1j5aS7aa/nnNatfsj8
7y2vy9HaRwLTXfF0G5DPa98fH7/mzCf32Lp17j7tum/pgTb5pTPu5CHf/uuh
62YkT7NFz+nJ1+VWwI02O+jGx8bdR6W5pUXO1G9Tftctz6Le28Zcq5secNJU
XUODHKp90vnewfPedV1TlecJDJz5W8+xHtz2ofF3N79fI5s2ufnMTmtNgYEW
9/nC6nUPKfsDzif7tWeuQT3uPhiZM9PEajt+nnHrck++kTzta+WwP/z8c63G
ieeoynrPhKTPeNLlZcXFKyNs8evv5Q23Ob1e79yLNbJu0zorb1wpBxvrnXMJ
6yuIU0eZ33yyuLTlY9D3nbmkQ/Z716BKll7i1GtRzYr3Feh90r09vdLbdda5
n54+9pnR79TTU/jMsrRhOWDdQ3959rfK3+/Kqa3fcNJ5R8pBuve6/8l7f9r5
V25Yjm8yj/HcumW+a85LZrBfutre8rQd3PJG7ye8KV2dZ5W6bmHb4s6lv3fu
mdvqOd34sZNHPXLwF57vmOHcJWfqNvvuO3MNN1t3w7ecfR/Y6w3nJ6S/p0eL
kw6nzDbWI+7tl95eLe56e5T+2vTXmORct1r1qtcu/tppkw61vOLsf6v/P2LE
bmFYbz75lW9PTtoP/aWx74kj5j6977Or87zsUNYIfXTfu1rYjCjt5Gm52viS
s3/Zljekq3/U6KeNdayRW9KjhX/3Ofe3HrfuGz1O9HtnOKuWGRNyapN9Xi/K
NaU8Gb30DwX3ZzXFgUmr09Tb5cF6uTg44w2fo+4+e53s8uctLk9fwbKXpdMI
856ArVduXHpFCb/C+9l4ftF21qkfhb3fE7mvwNqOXR5SDqI+039WOgLrE3HS
iP6soVc6W44p60Ga22udQ3JD6RvQ6+Dx02s0ce4ZMz10yKndT3jT9NpX5WbG
rn9OyCXre+Z3f1HQx5Uk/7X1KW2unWd/qfx2Tk7Y56P0LU5pv2l/fvPJL9zP
591yTk8vyYuzu0qcr5ezve5zHr0vXM3L/OmueLo100dX22l3v71teVuGnQv8
3G0frnvOvE+1NuAt+5lm7lduXVXtc3XET7OxzmnbJ774H5Y9xr7n5bov0GdH
P7byGfcej3Jvz9274uRPTxz8xLN/duRTpxx95OBnzrmkKs/jmrpipOsXzv/O
6Pe0z3X56uVOfu+EuVOvf1bqj5rntvP0F8413Wn/Xmg+ePXAfzficFj77wGn
332leU/pacLOH5T3mJ4+mbQPZNoYQ3Ou/tsFZZ8pXjxHVfZ7piB9xpMmLyst
XhlhSlJ/L1+4qfX6R/d9qIx3zUn3qRc8v13YVxC/jjJ/+WRpactH/fv92j11
Zv/Tyv6vfL/fpd1z2wL3J0sv8eq1qGYR5ytQnr29eTNFm8KzZu7zckvNEGY+
d/Y9fvKXoT9R0r2fK8+GX/YewzAhx0tc84BTrw8ub5xxnwH7byjPr7992ltW
umv3Pis3gzKMmc889+BbN33vDCvxoPfpeSnrX1rjnItJc41xz1Xf9vrXPCp6
LVHYaXelVs8K2v8vskP77YePeH97duCfnXP65umgZ5MT8sZyfx0/4bGUNmux
+0Zdp6mwzZ6XC7V/YO5/1Pfca8HjwDR11a5jrpSfBPY55NxrWOZbh6pceYvC
01cQawuvX6ZdE9HtK1gpb10PyGeVOrb+POuub3fSNNJd564X/odHzOcEQ06b
2Ho2aImaXqNJds+oc13qz5iGC76nXKteL+n4V8/epPnv7NA7zvce8TxPEU/Z
5KSRuV+59cOA+t/c0E+dcuhwwvUnrx74U7Hr32o8uSf9tdtfEJLuSqXbL3b/
npv+tXLD/5kBtY/rwdcL1pArVo4kTbPRz8l7zNk+s+/mAa2tEWT03N8Fnmd4
GN2Vo1Yd/8HN7weWqWo8F+SvqcrzaIbO/E+jLmW0JaeueOrxh69574250Z96
xs0d7vCf7+fB88xaaf2bZ83yUs1T9DaRN6/KyRmrffBAyrZy2JjypPEcVfnu
meTnoEtVl4whchmRsv6eKty0er2dth/YFZyuBs58x03bvnp9qjpKrHOPn0/G
krJ8VO+pJ/xlb5T9Ej29JK7XogolmNswTR+Qlp+4ZZlWvnlueKWtm7DvzXO/
14SvEX7PyTeCr6evxH1dbP+No3/s5u9nvW1RtZ36Vv+MFFDy4ge3B9RNlHgo
vI+VuIwwfjvNNcY915pVrxe0fdQ+m7A8qbgJOWHX47a/G/Bu4rT5LNBf71fq
f3pf0rD/sqz20nsj3uf+SY6ltllD7xutjbjDDqeQPNNtw62Ry+oz5wWPA91d
c+2NkDLUORUl7b90UamjVmDuYu98BW9o8ZU35qYo3LS/K88Ni5Xjadc5iDIH
nfscybeeeIo0oo5n+Fhps2czGZn0jd2IlF4jS3h/RpnrcurnSjnirdcly3+n
nfaNngYKxrWp9TMtz9CPN2S0R+w2WVBYTTv31h/t+ywkjMLNjf7M+f1H9oU9
O8zLh1uL5/ml06X7jPi9wcL3/9T0U1DvFH1sxQ+ccPOM+U6VZqOe03rf+3E/
cH7vdE/h+8ezfeZ+/9j0sDC6d/V/Odf+Zm/YXJ85Je342hipyvMorDJ/5xXj
X1PdP3DON6jvQe0LfKKgXNTDz31uq4a7fd9czuj/mlDKz2cDxvm75esDOz9L
cE3qCQeXDUnjOary3TPrE5+DLlVdMobIZUTK+nvycFPbv2vk05CGpd4XFlx+
payjxDr3mPlkXCnLx5J5ToQ8KVJ6SVOvRRWa574C7Z4faD1tzIdysdedU0+f
QyuXHXbH4SadK1yt0wX0DdrC8xRTmnZ0PnNTztQflCMn25VrMNsqo1d/WDys
lXBW3yUK2r/gfQWpztV7vknbqd2H/sQJT33buP2QNLW0mvO7aPtzmeHAuZpG
L7j1fG9/klYm7dDD752C8EtyrChtL/UzYeEQml6rIA5mB94pef7+c/GU15Xu
Kyi1JkjEdRDmo69AfXZSozzHTJNG3OOW7rsvb19BwvszUnrQ2mfPub/7E6Xu
lij/9TyrCY6fqcHr0traJjfH9Xq5Wm6G1f3SPTdR51cJ6/M2Ple28S7PKvPW
BO0Pvk43zXjvnbKk2Qjn5Llffc/Vax57Rg42nJHWzi5r7tCcjAyOFLRjgsMo
5+k/KvYsUK07e/oUUufPpejp8AGnr8q9354PGE+pPvsLfs/THUvofVZtxKVd
J1PC2P+s2/yw+3z5hbNhc4pEFJYXJIznqMp5z6R5hpyqLhlD9DIiXf09cbip
+XOxc5wNGYeSto4S89zj5JOxpSwfy9pXUCQuUtVrUYXmu6/Adaf3shzfv73g
3Zeobd3gH/3I/b1ivxGSp9hSt6N12TFpaz4mtZtWFV5fWDimuo8Xrq8gWZ6T
vp2qP7d5Lij9WPWhY5d/G/w9dT5ItQ/cevfzlYB+4STHittXEGXztBuqIA6i
lAn+c/HUJSo+rmAR9RWEhFGaNOKuv1A6Tyh3X0Gi+zNielDnYwz8XIz8d04r
N5yx2ZHWm532vMdWcgubMy9UXtqd9w9Wynsj4fP9li1dJiwHovQVJE6zCc6p
79Tfhh5j1ZYTgXOHBoeRGsfR+wrC+nKT1sujuyuH7Of9m98PGKM97b47HJgW
lL6RIvfAlDImM+j5qjo2Id0cOFI0L0gSz1FV+p6JLUldMoY4ZYQtSf09cbgp
9Xp93s7Q91rCxqGkraOkOfeCc5iPvoIi5WM5+wqKpJdU9VpUofnvK5jp/8Dz
DvXG/aekZ/Cedv/fNd8TL5LXlPztG+4YvPBxm1LyetLlCxNyQZk/RJ//+2Tr
Dclk8zLVXfzdB/oKEsjflUsNOwPXL9C3bWeD51e6qtTFP7bmsjGfq/jH1iU/
Vuy+gi3vyoi+Js3goG8bMdbK0f/f8xi2CuIgUTk8n+MKFmtfgVIOp0kjkY4b
cJyy9fPHvT+j1oXC2mcJ8t/I5YbDW26+1TNkrI/nj5ORETOeRsbjjirwjvMu
9j7yougrSJpmE57Tvd6PZc+mBwPTmz7H1q1cyO/5+greTtBXEDauoOJ9Bcqz
9sDn+bPuOgbB51Jiv+WqM3bhxcBy0n2P/vnU79GXygvixnNU1dNXkKIuGUOs
MiJF/T1puKn5c+D4HFs5+wpCxxUskr6CCvZfRkkvqeq1qELz21cw0+eOBapZ
5l9fxdvWTfQOgjqGN2KdvLx9BROesT+bfWvalKyLV6SvYFrObN2izO2a9hrL
ca7e801WT8pLX+tZ6XCeueUko+U7vV2X5fjuDW46C6lrq+OfzOOPGXMrPxw4
x1SyY4XF90zfj2WLNW+2+hymaDkYZMHjwH/+jCtI11egjHdRxvelSSPl6CtQ
02t0Ce/PVHWhhPmvr9woXfaoz5zTzy0WRO3LDHp+a6vavoJypNmY55SfvClN
zVedOM9NZoy1wPVnss8o85j7z2cpjCvwPO8PmAdTHYcddF+p7TF1bSjvPa+O
XfgoID9Q3gtXxuvlk05wGJIXJI3nqKqjryBlXTKGqGVE2vp74nALeTevQOj8
FinrKGnO3T6H+62vIE29FlVoPvsK1GOtDJjXubCtO3TmO7LtdIx05puDarjI
51L1FYSsEaDOHRQ0V6snf9fnJZn7lexYu8Ota6bsKzge0leg9/f610dPeo3R
ziXC/tTtVPO67Hmd/Ka0cm2NXdcOHMOr1gVfls72w8ZnzfmbynMsNb8sfI75
j0ZZpM5hVrQc1Iz0dHnXrlvwODDnAbfPv+gcbuo7pup7H/dbX0GRcXtq/5Wa
f6RJI7H6CiKk1+gS3p9R5m7yrGWz0llvLnH++2/Xo70Pa60bNZ71zqH7kyJt
eX09zK6e0djzwUeer6BK+wrKkmYTPn8MzsMn5Fztw8Z+/zjmsPkKztnzRtas
ccaeBbmqzMvhmWduHvsKSj3vH3DmKgh6n1qd29Oe62BC3vCnvRJjF9S54V44
b75fdK9dn6/1R4nnnyo2t2HceI6qGvoKUtclY4hWRqSvvycOt6jzFShziXre
MUtbR0lz7vapVaKvIGb56P9+2PiicvQVpKrXogpNl1w/0KCkr/D5gEtQn5kF
zkU64Wnr6mmrT58HNmC+3nB5ad/9+948NEBwH7rLHUcXdF+r9UTv/gHlHaGg
cFLnKT58/T+M9UnW1Kxwy+5UdQutbmOf15PevoITWp39+77rTHqN0c4lwv4y
9BWY33/Rs/aweg3mPOzhz+XutbtrvBpb0FzVKY41q5RRanow52n+kRVHE9Ge
Ud77yPjM98vaR1yO90CKrythU+f498wTXI68xcffV1C0nhq3ryCkrR95f5F3
1936fOG4+qRpRC3XS9XXo6XXqBLen0p8hLWR1T4VdW3T5PnvnKfcCE2H937u
nJfar/J0kecm7XtqEoSddw6F8Pci1HVyU6bLkDm5ks/ZVYY0G+Gcgt57CJtT
z2l/+equYWGkjvP2z4vuGnPWnNfXSvOsNTNvfQWl5yo4o8xVUJAPKG0k+7nr
3B2zrq+uL1d8roKcuyaH8/5BTt7V00DStRND2kVJ4zmqct4zqddtTFqXjCFS
GVGG+nvycMvLpT12/hy+DoLaV+VfByFVHSXmuc/X3IZxy0fzRNz+lKA8R10D
NkpfQXidIkW9FlUo5xlXELqmtrLm5rfPhswXV/JQynrU/jJVvO13fR56vWz5
RCt7vhGrr0C8fYPLXg3IF4bdsr0gTzG5ayVpadxXyHn6y/T7XrkH1Lr+3sv+
+fEmjDa7E9a3/lM70M+MvM/JWzzrLQfUP0vsd59FKfmhlsc/FVDeJL3GqOdS
cr+S9grWWI/EbefazzC87PGQRfIpdY30kLSQ6lhKf7j6PSOelD5Ztd87cG0t
5xmX75nRgseBdZlKGf30sYD7derz8HpGOfIWnznlfPTjFa0vKscPTeui1N20
vCuofCy1Jrc6JvA1/zrsujufus9OAuq4SdOI0ydYKhx0EdNrNMnvGSc+VhWu
U23U+5QyS22zpMp/1XIj8Lh6fdVsB5nPXdW2UXB/pD3u27/eWVTus+Lg37+n
zIUeFj+R021AOeDdvz5w/6xSB/bXkZOm2TjnpN6vbn385cD+Kbut61//PTyM
1Oftz8q1gADsVucq8D+bSJ0/R6SuTRAyV0GxPgl1DUL7Wb3Zx/WPnnpa8bEL
7hqpj1h1Njv+E48XU8LnlY6g98/jxXNU5bxnwsqTkueQti4ZQ6Qyogz191Th
du+KZ37DwvMck+Ob3DDxPydMVUeJee5x88lYUpSPpjHnPaHCPEdZgzckr9BF
rVMkrteiSuRloPOitLa2SEPdds+cU8sfe04ami5o+7olkzfXbGltaZFT+ze7
+cBDz5uf0f5+fbzI2MuA47p9g/r6vp9Y+XBeRjvf8s19tUaOtTQb90SSetbU
jR+7v7fxDbltjW/Jjn8ue1arxwkpx6bcdX82H/vMyTem+j9Q3nEwt1VbDhjr
gN3KzDl98XaecHHQXFcmnx2WU7V/6P3e9hNy7vg3jftk4I4Zzp73eLW4aGxu
kdbOAZnM3DLjoU6Nh2e0eGiWayPumMcp5VnXE0f0/DAnl4z3XgPy3oTXaKeJ
uOd6RDvX68ZY47vSqaW9M/XbPGF1pPGcdPRPSXTe92f2nv3KfT8yOybnDjyu
hEM4J98rssZm8mNNKN97Vjq0etjs6MdGmfewL5++o9T7H9z+ttye1NNsXibH
b8mpPeaYysNWX3f1xIFrtPX7zm9tOPKJZHJm5j81+Klbx1j1qjPfVHnzFvP3
WrQ02tJ8UnasW6Zc10rZXndKWlq1fW19Zrzlx6RNO0Zr61k56nl33k7rLXLZ
GDdu5pUtzcfkOaV/cYv2e+e1cA7bbx6v08hDbWpfgb69dvHXzrO2e73KPafl
V2Mh5Wb0NGKeV3PjQWWe6jWyq/6Uke9fDliT3BQ9vZaW8J7xjPPQ6yOvy61J
M//OT96So2p9sMPb55I0/7XrKVM977jlxqqXtbzV/H5u8racO/SXZryp/Tz5
YeV8VsrJziEjTvO5SS383zLD/skTBfXq6O7Kqa3fcK7nbO896+856Wv5vud6
9G3j/uNWuiuVbrXvt5n7n/Ht1++hm5lJ6/sn5TmlvNy467i5X4uPqf4ObX+T
7HjK3b92+1FptuoOtuhpNuE5adfcrOV7NzOz3vFEWl5zfdwuG/Nyp+c96x5b
b7X5S4WRHdS35ZByT1zsv2fuy09I+/Fvuen7vFtPSZo/+8vzqNRnzEHvw4Q/
b7Xc+7mV7s16wtCF7xqfffO6d2zTUWXsQni93xpnk/3aXF/dN5Y7CrdseLog
/G5qdZB48Rz5qJW5Z5T0GUfavCzq9UYvI5LW3/vLFm56vd7e/+i+9518Rk8v
h5SyZoVTl2jW6jP3nO/HraMkzpMS5JORpSgfbd12nVcLo8uD1r2T1+fRfNxX
pqyRfQ1ntDrjTIL0YopTr0W1mXb6f/X6zfLVq2W1va1Y4cSrPiZk7s6nTrpY
oe3zfqb4O3xhx25veCFwTuzNx36hpaBpdxy9nrY2v5vsPTfR848v5dDWRwuO
U/PkG9I/ft3JG8L6vKd63ytoM5t51IcyqLTJ7c0eDzSj5TvetopdF3heOrTw
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
wXlJ0tOInffGEq3c0OMtMz4uI4P90tvTpd1H3vvF2J9x93e2dUkm4HrdfpS3
jfc09TG3XVa862lsMFMqA4xYzpUlrVS2TI2Tb+phP6iFbU+Pdi922XMnKuWO
do/2Onmbc4UyPmjtb22Trt7Rss65GPm+sMqMWWu8a2FelOLhaT4rg73XPGWv
Lny+grxkJ/U8dUTLU828znPOJfNcK6129Rbkufmskodp6X8k0j0aIQ2kLQcU
ZrlzTOr2m3n1MS0vGdF+u1v72+ku+7glwqjgR+Pl/yXTcow6VCmjPR3SqqQL
mx1XrWHhls0o+/W4LO8D/nv9l+XQ1kfdPOOhZ+Rka19F+rXsMPDHSckwiCGv
5Z1q+RAa/5HSX9KTsNNhvVFO2umw6FXNa9q17iul/nOt/16Rk0tWB52y8uV6
IxzMfLkgbmPWDdOU/anqlgnDIDt+26lXmGlbmK9AMzv4sRMGG3cfleaWFjnj
eefJmntbeV8wfPPPy5SXqw0vOH2e+7X0d0DJ47ad/EXB3BzO+7pFtlcK5tKY
lkvOGj3adew/KvUHNjjjsY51jlYg4JKEh1Lf3fCudg9cc+YAemzdOmV+09fl
VmjGX6lrjRdXfcf/PPiatetyPjfzuWcdbHu7Yl3bzJCb9moeel5rx9c7/162
5YQMO3nGhLzu+43Hj30lAxe+6/vtZ+W6Em5z41fkOavvc+2WA1ret8+d7+ex
F6VjfDY0NGb6tXNb4d4DT9n/vXq1dU3r3f3KHMPRrymJ6HE/c+PVgnA/rLVV
uk99y7mmdWvcfXuV9Xfi3YPJ4kanz9lnp4+1tYekoeGgO3/2xtflpufmKTyO
Pl9y85mdzr9XrHD3rdLC+rZ9PO1efSrkOn7S/x/OEb469F8LP7P3y2RRpc+7
tukB536qa2iQQ7VPOr978Ly6xltOzm0tHt4/7I3bdx8/740jcrkRGG/rnXkb
g/cHr/fg5J2rXpam4/axVsqmdY+58b79bbkdcGFxyrm0aaWyZWq6fFNv/4aW
O1q43tLDbvJL55nRQ77919POeR3rvgjOx/zXE7+NlNPaF3vdsmn5U7Ju9UPm
f295XY7WPhL821p55j++Oq9X3Dx351kzz73R9JKTltX9205/FdpWiZoG0pQD
LqXc0dqlR7Q2UUvLadmhrDH5iL0ORYkwUqXO/4ul5aJ1qNIGzvyt51gPbvvQ
+LsbV2tk0yY339lprfUw0OL2+61e95CyP+36dnmt3f6B7Fm3zD0vrQ5ztivq
c4/4+k55w+CBXcXD4LXLv010nK8O+eK1YM2GGOkvgdG2Nz15Qe3uWre+p+V5
NwMGsc172g24r8LWtkhUB80Ny/Gtjzi/vXbrDqndulbJq8x8OW3dMF7Zn7xu
mSQM5sY/lwNO2VQj6zats+J4pRxsrHfaDvdnX8Gw7DGu/3m57kt0s6MfW2l/
vRkP+Qnp7+mR/v4O2bPajaPLvf3S29urbT0FfWJ3Lv2987nbyt/vKWuEPnLw
F57jZkduSY/2m93nXlLSx2facXuN4/T09PrmapmQU846Ii/KNaUuM3rpH5Ty
sczxmyA8dE591962vC3D9r0z9bk7f/C2TwLKgMpda9y40vv1utrOOm1xfdtw
8H3tmkeU85721MmWbTwgF7sGjPqXvk6s/b3NJ79wv5MflgP2bz5pjzXOy7gW
/50txzxz+xrlU+eQ3FDyL7de4v7OX55Vy7C77rqVWr7UEZDZzg791L2mI79w
+n8vHfhT5+9v6YE0ZT3rstauiXdNccWLe73fX++nPVO32RNeer53ssvtU+hu
+Jaz7wNrHex492CSuNHasfV2n8d6uTiojgPISftRd5+7Nrd1nNaTBW25vVr7
wrmFhj5W9j8rHfr381ntXu2SC07b2fzt0503PM/vZkauaHUxN5yOtHTLSMln
1YXm7l1xzuGJg5942huzI+460o8460jnZUTLL3q16zt34HHr+M9beYn+9/jP
yZLkvdHFKDe0M88M9mt5xVtKu3i9Uh/Qn1/flK7Os0rdb31B2a/z553HLg+5
O9W17vR497Rp45RzadNKZcvUJPlmV9tpTz5dtNxZ95x5jk++4c6dlfuVu16l
2hccU/z7ws7HtLDoOut892krL9LzofjPM+8q+eh6OdvrPpub1eqKO9RwKuiH
mDbGIZyr/3ZgWZskz91q9ZO8dvHXzjUPtbziljNK/5QtThpIUw7Y7Lxk88mv
fGei5dWH/tKMzyP2vuJhZJ1o4vw/VloOrENFMHXFyCNfOP8743mine6Wr17u
xJVt1Gm3PCv1R80w3nn6Cyfd3Gn/XtE8rbScDLT9RJ5T2sXLNu6Ri2Ucpxjo
3s8ThcGtBAFuPMdV65K+97Dipb94+pQ+Ib097J5+Tk7Y6ciT5y1Q2jXGQPUY
9R+nHA14Xy1RHTT7tXtcvT9YKedmB9x1afW8KG7dMF3Zn6RumSwM7nX/k/Od
R/d9qIxtyEn3qRc8x74f+wpm+8wwfUBLl0FGz/1dQB6Xk7ed9YffLlpvuKE8
e/72aW+/qrue6rNyM+g5kLJ28ps3C8tLm7rWSmG5mpcLtX9glfuVWl82enjo
PPXdR98puNcHnP2FZUslrzVpXM3c+IH7vbNB/crT8sZyM791LmfuV27eFFD3
nNPa6nZ75rDvmUR3nbsO7x8eMfuSh5z8fqV8MGLlU541np/3lmEz7hr2j5/0
PsfS4/OMXZfUwtETBfnbssP+zc3vG3mQ8Y5FymuKInHcz3zmyefeuul7Pq2M
rdL7bFVR70Fb1LiZuvo9528/CagL63HgXM+ywvWT1LWYg55lzI3+zH1O8ODr
WuvA/V23naCliYAjz1jz9byZeB2gu3LUKvce1NJIUH6gpoW9vvXEBnzj7JNK
k/eWkqzcKJ63Gfudsr9UX8FKeet6QPwo71Dqz1zseE9aziVJKxUtU1PkMV/s
/j03HwhYl3tALZe0e8Z/z5WKu9LS3RdqPhUlLwpz1envXeOWFarZr93+grAx
C6XGo8bIc0tdqz9PTpwGEpcD01ba1PLv8aDA+BejTHzY31YrEkZp8//oaTlZ
Wh068z+Ne97oY5264mmnHL72r97LHP2pZ+zk4Q5fXCp1jSRtDP+4kJ+UcW3Q
YuKEwezAO4X1rwSC3/1JmP4imB16x7mmgnEJSryp6aga0m7ofCqJ8gZ1TOP6
gmdnal1LzRfi1g3Tlv2R6/1JwuDez530/cCu4P7FgTPfcdP/fdhX4Lbz1sjp
nsJ+ytk+c793POi0W68pMf7vxtE/duurZ3/j/e2Bf3bLrf7C94tnlLQYGjdq
2y2kfeym6TVyOe34yUDRw0On1nffGywcA9+n3FOecK/wtSaPqzF51T6vgLzR
zo/V9u2QUV8u1m6eluNWmP7Rvs88e9S+lo+VsiObycik+oxJy+vd8k0r8zwZ
gFI39+cnWl7jhnPhcyU1rtU4SHNNJaWJe6XP5MHtAXV0Zc4wf998pHtQES1u
7przvYeUlc5pKWnupYve+leUuceuKmNA1O/bc/fq286L/n4GK343f5R4XOe9
q//LLUND3xtQ+qN8a0mXa161NHlvKcnKDW/eVrwvoMT+ImHjjqdw13VPer5J
0koly9R0+abdd1Sq3NHfP/3Xgv1TznWtD3w/pJS090U55qHW+xCdtsG+sDE1
eflwa4m4KHUuMfLcmlVqX6ZtwolHf56cOA0kLgcm5ITdx7P9Xc88G/bxjOev
/rZWaBiVI/+PmpaTpFXrXtx5xfjXVLf7LKSg30a8baYnAsbBz9xwn1cGnWtJ
uWE5tXuD8xt6vnKw6apkKrrGQbwwcPPJNVq5n7yOHZy/J0x/JU0reU1hG1ld
d6Wm5mUrL6qOtBtWDibJG2YGflw0/arvGqvXkrxumLLsL1Hvjx8GynM2Lf1+
GvKQVe8TjHO9S46vv7DmsWfkYMMZadXnBzPGU+ZkZHDEV65EbxvnMzflTP1B
OXKyXWnfmHNFjV79YdGwj5IW1c+EjUGqfBwn7St4VnlvJ2i/956p9LWmiSv1
3T5/PbB99++L/s6tWx9Swis0Pwx/Tu7mk6XGTuRloPW0MZ/hxV63L16fgyWX
HXbHK/vnVFffIY7cV5DumkpJFfdKne3xY/4xFFKZvoIi1+c+gygxblCtT/vK
5ShrBajHqfE8x7THiBeep92WCG/LlJLz1D+KPdNSyz71eOXqK0hzP5eUqNyY
n74C9RmBE+8JzzdRWqlYmVqmfDNCuRP0225ekORZbfr7ohx9BWq9N+wdeuNz
oXMbRjyXFHmuyY1r7/4UaSDFOXUf+hM3PWvbxu2HpKmlVbp6B43wyWWGC+fv
Cwmjsub/MetQ0ehh/IDTznCv/fnA8fXus83g9xnd56XJxnDZ8pO35ZxnzpOV
suvYJd/7uOUSLwzcZ88v+p7JxBOWvydKf6WofQEh9Qh9nr/W1ja5ac2VXC1p
NzickuUNap4YWO/JT0hPW6u0dQ54rmPB+gqK1p0ThIGaDor99ixzG/rnL1E3
Y36wgvQcr21syI5Jmz5v/KZVgccpR19BlK1Y/SC5pH0F8e6ZebvWBHHlqR9v
/9B9zmbdh97nmm6/XqTtgZA6b4y1xe70Xpbj+7cXvPMUHGfTTj924b67csje
5ykD0l1TKanivlS9tBJ9BUXiJkq/h/+8/P05kdqMvj4fz/eV99zUcYTdh/6b
ePu14lLTQfQ2kRq2ZV+vLcn9HEH8cmOe+gpC0k2S8zW/Fz+tVKZMLVO+mTDs
0/UVpL8v0vcV5KXdGWu0Ut4bCX/GWzKdxegriJvnmsL7ChKngTTnNPOlO663
YFsjx4LmtAsJo7Lm/wnTcnRKeW+9c+g17b6nFJhWlD6ycq2FquXn7Y17Pe89
bDl4TgYzCcYsRFIqDNwxMGnmMtGF3ndJ0l8Jc3c+csMwYtxUS9oN6yuInzfk
5dKe33f+9maMtQ8XrK+gaFwlCIM7HzvtAn3+0tCurjL0VS8F93o/lj2bHgwJ
0xfNuZEdcdrGE3Jh/9Pubxlru9yQTDbvGd9Zlr6CLe/KiL62xuCgbxuRkRHz
/8u8dI1lAfoKKnKtyePKO47HHc81eiHo3Vy1769G3uoZMtZz8l/LyIh5fSPj
3lZ1nLbUTP8HnvdCN+4/JT2D97SzvWvOoRDyO/euute7Vxl7PKTMIejtg013
TaWkivuF6CsoEjeJytuwvvmobUZ/+eJ7P838vNm34B+vH4+3X3shxxWku5+j
iVduLEBfgS/e456v+aVkaaX8ZWqZ8s0F6itIe1+kr6tNOPMllHrGW819BYnT
QNpzyt+VSw07A9c10rdtZ38d+nup+wpCn81WuK9AeQbyQtC9PuvOCRccpiX2
p5HX120+7Hn+sXHX284z8LIpFQbKe/1Pn0y31kPR+y5u+itBnWcr/H0k33eq
JO2WHlcQNW9Q80T93dVIwVAQFvM7rqB4X0HcMFDTQeB4K9t93leQn7wpTc1X
nb7A3GTGWMdSfw71jDJfpzcMw+o103Jm6xZl7s8JOfOc+xubfWt0lUprYftn
+n4sW6x5ktV3wYrGc0VFDQ9T4r6Cil5rurjyf+bbp39j/KbRHrfeeXOpfX/x
x+VFbUvN9Clj0Jf510cMn3fA/LJ3fZrN9afcdbRq9DmA/WVmumsqJVXcV6Cv
QL0HVZH6CjzXUslxBer3/eM4lHeSrTV87hnvuad9DlUt4wrS38/FJCs35quv
4OuCeE96vtbVxkorlStTy5Rv3rfjCtQ5TILfFS44hyrsK0icBhKfU176Ws9K
hzMOIycZrf7d23VZjnveo/edT1hfQTnz/wr3FUwpzwzeC5izTx2THliHVdoh
7v58mdc4nNbi5y1P3rJqyyHp8K1jn1SpMFCfq7jjrpJdYfB9lzD9laK+qxZU
BwxQLWm39LiC6GFxVXm/I06+mrhuWOG+gthhEPTOYpD7vK/AzsuC+5Mm5Fzt
w8Z+79gMJT58aVVvG9pra6pzvgTNLelJa/rYF31OubU7nPhV70tvWaOfs7nm
tDpXUdF41oz0dFXs3a4o4WFLes9U8lrTxpVpzF2PRKujDw69Z/x30Tn79fKl
2Hw/2dvS1TPqOZ/4/YtBc/MW1s2HznxHtp026+/meIiX5eb4iFbHPyn7d++W
3fvrpLG5PSRc011TKaniPk1fQYR7UBUlbuaU9SiLzvGovtfiG9sY6V0H5dwD
07Syf5vWtjuuzOWUnDqncPF5ntQyWp1fsBx9BeW5n8MlKzci5H1R10EoEu/q
vB32tSc9X/d6o6eVypWpZco3F6SvIP19Ma/zFVRtX0GKNJD4nKZD+vxNU33v
WPm0772OkDAqa/5f4b4CNy0Gv4fvztMU9G60Onee/Z7/hLxRIu0ll5ehzrNl
X1uxeBio1/iyDBt/M+e6TnKNYW3gROmvlKjvqVvr9ulrs1ZL2g3rU0mSN0TN
E/V3X/S1m22J64Zpy/6i9aIEYRA1HShzw96XfQVW+R84tkiUOqenfaKV+3Z8
POm9p09o9/T3rXAcUN7zDJozQ51b9fD1/zDW2FlTs8LJc9U17tXvm/NI/8g6
7kS0fqR7Hxmf+b4ax5O35FTdPtm//7jcnEzThxAtPGyl5pAKv6dSXGsJaePK
pq7rV+zeU/OZp4s8J2/fU6PEtUnNM6LMQxI8X+2Ep26uB2WfPm+8NQ+sOYd8
8NwzYdJcU2kp4j5FvTXaPeiKFDfK2mlu/aKQOp+9f1720vPcqM+Cw/J2pW/L
2hLNU+2jju/3z4EceOwHvfOgJ5mPw69c93OYZOWGOgdWUH0g53mPqWh9och8
H+o8q3a8Jz1fV/S0UskytSz5ZoRyp/xzG6a/L9R8Kunco+o7yuHjjtX1KyP0
FQS941uxvoIUaSBFX4F5Li+a6+cVyFnz+/jGaoSGURnz/9h1qDhKz1VwRpmr
oCA/UtqL9jPouTtmn3/wWnvlc8f//tNjL8rZrtEEv1Q8DNS2s70ur70GwAcJ
1kMILvsSpr+S8ta82yXylHs/F7cdXR1pN6zdnChv8MzbEL62g/kdtw8gbt2w
bGV/iTEg8cNAnbMhfB0EdW2L+7mvQE/3QfehPf7Ivwa92xel3C9a++wpJd2o
dba9l/1rME0YdSAnrd36T+2e/JkRV879o/T3vHDefWfcOLZyj6j5VeBaQM4z
DbVfVE8fpdu0UUUJD5tnXtygvmq1f813McmutbTUcWXzrEnrjTf/ebptueA8
3h7f538n2Mlziq1DnlPWWPXXOcU7NrDm0XeMMvAT7Xy+YfUVmOMKzDJWn2+3
tdXcWlpatP/vlJ7+EckWhG/ya4oicdx71s0OyDuL7Y94D9oixY14892njwWs
dTT1edG+HnWc8mv+tclFHxfpzvNfbByGp2+rXHMJep61PCvXAjKWbvWd7Oth
+UNY3ai0st3PIZKWG+66eYV5n2fsTEDepysV73LnUzf/UeI96fmqoqaVSpap
afKYOOVO0P5Zpa8gyZqJae8LNZ/69tn4c5nZ3OekweHnyTvC4lk5l1c6AuqN
afJcg9tfUbhufMI0kPic3H6L4PLcXkfO14ddJIzS5v9p6lCRKW39wPJaeR4R
1Peirp1qjzGy21vJ586NJzPYIYe2Pmqdx6vx67glwmCmYB3VvFkHiTl3s82J
N63OFrTGVKz0F4X6/H/V6wXrfbvtBHf9h2pIu+HP2JPlDeo6E8Hlqlk2P31a
mRMiZt0wbdkftW6ZKAzuXfHMb1j4+2Ny3Cm7QvqHlzjPnGmrXpXrzrwoebnT
856VFtYXlOtTSt/NE0f0+yUnl4x3Ad14tvtQ7fi/aL0/lc8Oy6naP1T21ciq
7Sfk3PFviredM6GMI39WOrT8dnbUnLPyYV9Zd0cp3x/c/rbcNsYJ5GVy/Jac
2mOO+Tzs6d9T6y1p6j9RwyMnfW0XpcX3zuqWulNa+7NVbmYmZaBT33/SM4Zs
4/7j0tzcou1303v8ay0tfVzZ1D66Es/l88NydJN7T5/sHDLa7PmcHhZvmffu
kyescjVvhE9z40FlLp81sqv+lNZ2b5HLBeuYe+d3feLgJ1bZk5dR7be98+Os
kWMtzd65yua+9vR5hG0bd70rw2oYxLqm+OLEvb5mXmtLi/edvseek0YtPbV2
Dshk5pax/1TdZnf/Q89IQ1OzXBux84Eo92DcuDGNtn7fOe6GI59IJmcG5NTg
p24/j5YnBc03p7YZjfLt4q+tZx76OpmH3X0b3whYj1mh9G29FFRGJpW7LYeU
cLvYf888v/yEtB//lnN+e8/b5bWdPxTe/y16H1VbX6z5pct3PwdLWm7o9Sg7
vDcf+8ypT0z1f1Bwv63acsDop7uVcZ9Phce7Ppeg8hu+eE98vp6LjpZWKlmm
mj8TJ49JWO7sOm7u1/KXqf4ObX+T7HjK3b92+1Fpbu2WTNzXkmPfF24+dmq/
mk89r+VTF4y/Xx+POxborpza+g3n3jjbe88+Oelr+b4nfbn3YKdxre65KHOG
WnnqTS2dJs1zj2h57nVj/PRd6dTyzDOetfHWy5HGc9LRr7x/HiMNpC8HvPOF
7T37lZMX5bNjcu7A40qaLR1Gtvj5f/nqUFGoY6+CxjKXfM547+dWPcO8f4cu
fNf47JvX5/+Z5OTILentv1f6gz6lwsB9fqHX9eak78x3zM/2x5lfMW/F2zF5
zhev57X0mY+Z/mJfY887bn1w1ctamjfvs5y+RuWhvzTLGV9+v9Bpt/gckEnq
oBNyRqkX7Dz9hUyaX5KhLqvMKuhLid4+MwMnSdk/m6humSQMpm782Dn+o/ve
d8o2PT87pKS/FU7506zlyfHvqcXK7hfcUndc9gStNbH2VbkWUhYPtLxS8PnD
Xd57aka7d3asW1b4u1pYd4zPycyAcp9qcfqWPx/N3pID63xzSW88EdD/p6XT
8c/l0KZHC49l1EkK53m51/Vj5dhrUs5pVio8lLbrihWywtrsukDH5Kx02/1m
Bfv19+29cRD3WqNIHVf2udllaKR3v3PS3fxa4FqGG5z2vc5dx9AIm+VrZPXq
5c75vHA+6Dn9tLQ3vBA4b+7mY78wyqBzyrtND25+1zretFJvXSmbNm2VrVvN
bdOmtbLaNxa5ZoO/7zjqNSUTNe7V8bYrnDRl/vuRg19IbuqKk0f793vKoJL3
YJK4sa5l5Joc2PRAwLWslF0nfxH67NYpK7XzaLtQeN/p9/NBpU5RTPuB35Ow
daPT0dJB097A9Lds4wHpGFTrU3lpt/v2nTBcrYyXLpwrqJRy3c+Bv52i3Jjq
fS+wH+7RfR/KoNJetjf1HUrjmcsD/2ykixunvhM53tOcrypKWql0mWqKmsek
K3c+1up/d+wxVsp+O93Eec/Nc+6R7ws9H/vUuU792Pp9sdo5x+JzH4TLyw0t
/ILOYW/LDek+9de+v5tjbvQ8VT0XNSz0ceXp8tx3tJAZlh0F+61rLXhWGy0N
pC8Hsub74nr9uH5XwD1XI/u0tkVOOV6xMFLFy//LW4cqxRlbGDLW3H2mHvY8
e1ou7P4zz3XtjDlX/0IrFQZGG3Ort+95b8G8z6Uoa1T748141z9e+ktCbw8e
3RpUp1ovZ3uC24MLmXZLv7ufpA6al76Ww4HfeXLX+8HPt2K0z3Sxy/6u/y9x
3TJJGOQzXwbXrVe9Kj39HZ411fTNHod8X8jdlcFB+17IG/OL9vf3S39vv4xk
IjSe8xMyMthvfGekyCJ9xlzQ1ucGxzPeem8+K5OZSckVqX9Njo+Y59U/UjJP
yE2OyWC/dayRTOk69sznWnqKPv62qIjhUS6xrzXSb6aLKz0djWjfzcS6/Jyx
tokZx4PGum7lk5OMk34GnT5gW3ZyUiaz7sl2G3MV6PXWE3I7JE3ktfvmauNL
Tp4R/K5bJa+pMnFfTJx7MC7PtQyOB7zf4aWWlfq55CeHpbe31wmL6OdnzsP0
cMJnEpHkvelgfLI8bzpElf5+DvrRlOWGMRbGTk/9Mm4/N9F+1wgj7Twns1nt
vIqfmP5cST9myXhPfb66iGllnspU62AVzWMqaoHvi6BzcMosIw5HJKPdG1mt
bMiXSIcLq/JpQE/DY2rYWPdt/2DQu3jxxc3/58e0sX7JSNhcVnmzXjFSYrzC
pBU3pT5XnUqEgSVT4WusdPqzqemwX0uHUeoRC5F2o89/nCRvUL6jlVnjEdox
8eqG5Sn7o4sfBt66tfv8Tb+XR/Tz08qqXK7c65mg2pnvYaZ4rw1LyITTj/mT
wf8s+Wm7r3jnxeTvzyK+qPPcqPLZjFEOqfm7PcYy2bNJLFWkFQDAgstnZWRw
0NNmT1L/AZCGNR/c5o/oI4J4+wpK9ZG767OU9V13lOSsrxN1rQBlHqpHnHFj
Vlz71jTCfY60AqBK6O/g7DHeg6yV2tpkm/7+5JaDn5B3LTo5ZV61NcacALp2
+92WIusWACgf+1nRW7HmYsFS5rw3VvN8kXeY83LjzHcK8nDMB2V9nWWvhr4b
56GsjWvPo2uva1SOdRKxhJBWAFQJdQ7FVFuKNXixUKaVtbJr5M2b+nwf7hpf
4euMASgXe86fP9r32UKfCqrKtFyq+6Y7r8vuo3Kxq89636lX2jxz2a6X8/Qz
zRN9LsqHA+tBy5e9KDeLVoT+xZkzrObIFzJ01ZxHx173GnCRVgAACy0vl2rd
es57g4PuegUp1tMCEN3c+BWpP3aJ930QKJe5LZcaD8pzBXPJr5SNuw8Z6/nQ
Tz+fcnK18TWpq2+QxsZGaWpqMv6/oaFe6upOye0SAyxnRq7Iga1POvG47dgv
GJOJQKQVAMDCm5D2xr2ybvVDzjjWXcc+o90CAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAADm1UDrYdl+8BPJLfSJLCWTX8vR2u3yweDsQp8JAAAAAAARTMtg
b690tp6UZ2pqpEbfHj0hkwt9Wotcdvy29PZ0yJlDT5thqm2He/5toU8LAAAA
AIDSZr+Up/S27GPPmP+vb0+ekOxCn9ci13f8z42w3PTcKvoKAAAAAACL1tzQ
O864AvoKyiUvZzbRVwAAAABUq3wuJzl9ywftC/gjqtpM3zuyxnheu1J2nfzC
+NtA65vus/HlT8k+7e96zM70fyo7Vlt/1z6/5eA5yXiifELO1D5s7H9o7R65
ltH+lL0lR2ufdJ4Jr9pySK5n5hbgSufPTN+P6Csou2l5ex19BQCAapG36sPU
fQGUQ14G2s5LU2Oj1NfXyf7dW2TLrvcXR1sif1fam16Tp1bUOG0+oz24aYec
vXbH+Mjohe9qf1sj1xfFBVWnfOZLaWxokEYtjTQ2NklTU6P13+m3hoZzMuyf
aC9/W57T4nFb81U5t/vPzHi14vhgS7eMj9+S49az3C27a43/33DwQxnMjEt7
/beNfz9+8tfOzw2d+xvtby9LV9dZq//B2ja+IddHxo35/ox/P/HTJT3n32Ls
Kyhvn1El3B99BfnMLWlpajLygbr9u6R2+1G5uVgSUUlaGdh53sjXGvQysHaL
7D37y4U+KZTgpsl6LU3ul62btsrZ/pmFPq0FlZ/UwqRZC5NG7T6t2y+1W/fI
5RHmXK2E6iybJuRSw05ZodRz1m4/IbeXcsUGwDyYljeWe9vai2Hus5n+D5w8
ednGA3K+84YMjgxKlzKH28barWaeuQiup5rN3PiBN32UeXvp8u88x5vq/p72
9xflrvbf7bt/3/rcGrk87j73Hzj1V873d178jfP3uYF/tt7Jf9tqD0/I69q/
v3XxX7Uf/rlThv7Rvk/EKarnfmWlmRfl1hLuhl90fQVl7jOqjPujryAoD3jt
WvzrnbvzqZM/bzj4mVTH7TYtJ1b78qUH3qDMqHJBaXIp34NRECbzpCrLpjE5
ZOdjG96W7kvfddLA4yert+8zP3lTDj1jnvOiqJfct/SxKtVRYt/X8hPS2dIq
NxdoHHRu8pYcsPOZKm9LTN34J7e+ejEov52QM1v/0PnME0e+mPdzXFqmnXey
ze1VGdOyjHw+H2HLSS47KZnxQenpvCiN9fsKxoHUbHjX8zz/q0Pa33Z+KXrZ
t8f6zF5ff8LVA39q/P2RfZ95/m6OIdD+ftCK85nPjX9f0Q5w79Lfm8db9brR
D2GbHbDf41/a7YPF1ldQ3j6jSrk/+goM2v082v7DVG2QG0f/Qrn3X5TbVVT1
yOfG5NTWbwjzf8awwPUWvXwZaHmFdrFHXu7c+LHTL06YlF81lk3dTt6q5av6
cezyXtu+cbCK6sB58/2IzMhNuVCvjIHgmV510vL47pbD5rNZ+tAX3uyXxj2T
5FlNufQd/+vqb0vMfu08l9p5/rfhn5u64ow7OLyAYbpkzHzprrln9L98lern
7vR+IM85fQZaGZtx9+VzWclqbYi50Z9Z+1+WYc+3h50+hPdG1DpqXi7U/oE5
VuHi75y/ZbM5z74XfOlm6NzfWWMNPkt1TdVusfUVlLXPyJa/Kz2dXdLT0xN9
6+qSrv47IWd5H/UV6Obc/DfJ9drx4vQ5VuAU03Dq94vkHllwVVBvUesE98U9
GAVhUlEVKZtSccdGPX7MGkNgzMm0Qdat3SHn+6fKeKx0vjr0X4PHmJLnVpfc
mLQ37vW8t7vhyGdL+j3dxWDuzkcLnq8vhr6Cq4f+JOIzYLsOv16u0RFWFup4
Dn1783ratDotF/Y/bvzWt08Xjg8ZvWC24R/Y9olnrLLeh7Ai6Lnk3K+McYH6
+4AfjPuec+Vvyw57n6d/IeeMmfC/C7HULLa+gvL2GZlm+pK+T/OjkDC7z/oK
Zr9M2QaZkKtNx6SuvkE6Bqun/mpbDGVgNamGekv6NLkEESYVVYmyKRWlb+jN
6/9evt+tgMmRm9LV1SP9g+Na7WtCTtljVhcoz82N35SjWx81w643OOymBjvk
wKYHjOda15Z4wZCfHJYL9ds89Z/tRy7IcHZpz/29WJhjmugrKO6uHPX3nYay
6vBLfFz5fOv2jCF+tgxzRlrx9KD3vQDvOIDfePbcsd8l2Py+pw/h3lXzHtJ/
S49zfbzz09Y7gW6Z7utf0Oq6K6yxDXoZMKPdh8s2vL8k+04XW1+Brax9Rtov
TP7/7b37U1zXme/NP3Lec07mHCeWbPHrzBxbF345M7ElrB/eM7FudZLoVpVI
QnpnbAnXxJJQbMBJJKTEIE0EyJZwLEgsZEvIMWADLgO2GltNQpPQhCZHTY6a
0IRmqprUZup5932vvXvt7n3rq76fql222L33XtdnPetZaz1PIkHJZNLFJf4+
ZdciYCuoJEp/DCwtSkFvqfQ26QmUSUEIdmzygVjfL5Rlfa/Q5doi2QpSc9TT
tN/QZzeeoNGkuU6ExAO6XPe88Zvtl2iuhM7NBUk6MUVdZ5nyENvomfZBeliJ
ynC5IsxQvbof+3wRbYKsnlSS8+tVQx4+e+bTHD9eoSuSz8ZSOqdVERj2Gvna
9Y5v+b4+/wv5Xeax8/c2+wAEulevnA88cpO1Iazo9umXJD+G9JXcVrS9sdqY
XnXsfdOYrrX5J1/+mKQ9BlKbecLn+YpSpTxtBcHajILnMbMVrFb2HAS2AheU
iN5SDvNi2W9POu3Nl6eXuHdlUCblTwmNTWx9l/i+AjPG+FkwmSss0UjHaWZO
vJPaB6bNfTP9kG6rPijl66nDdDNkdw6xvEnGRs32ELE8Ltwcp2SF2kTKlvQM
Xaw15l6vD/2JBHFMSaVS8mXrdjL9iEIDN+UYT01NTdTW0ZPlTK0zdD1p+zV5
XVXaizI2PEADAwM0PByiaMJ5T07Hp6jvRju1NCnp6+gepDm/goCxFUjrwNnj
I6Xp9tmj9PaDcpKbZcLir01nmHjnB9ySSpobx/rsL/h7+yT9lLu3Txtzamgo
uUqD9ex56LStrwKtzZ8P/Vkd36tNvhMqiTXGp1L5mIqDtRkFT1rXdd588Ndg
35ycoYFuRYa2tLTIMnQmyV+LUvyHxikajVAoNEzDY5ruk6ZY5L4sw6UrJI4R
TlWAVHxGl/8DovyPS13Uh78Cad+ulMaYmMZwyN4HhDJ2tFLTWWXsaBXzHUsk
aFz82/Uxt2PcCkXG7lKb+J6z0ljU0kb9oXlKRIeo7UKP7KOVJdNW4LH8nIzP
Qlr2pSL5ltZ8wabTyt8E9b48v+Tdk3xSS/pBmvEhqyYsH20hM3+lo7ew8ySl
DwoUC4+q+RymUHjexRxEaS9yHEa5vXRSf9hH+pJf0cWD201rdbtPXqZRp+dv
1iX5tYnuuPUdaWcrENuJtK8qHotSJByiYbF8ptR3p0V9LzQ8zPR3l60jNUfD
fX2GrDA+SnGp3fXZt7tE1Lg/JtZXeYxPJTA2qTJkTT0LlNkXM0tSKutuOaam
Ig+7+8b5a8dyWxHltdhWZHkt1ouWj0hoSGw7A/77bkFtBWma7HuT0V2r6cz1
zy3fXBHHmdNMzMkaau2b9NceS7RfLEb6qVk9e6HYQ/ZSu5jXwOtAyj+rQ+jk
zj9QmGT8pNpdr3LkiBQPXmvLO+qaqa2t0ZhD736DHnjcFKDrSVteoRuXj+r9
aU/tVj09W45dyxGrdYXuNX1L//3usxeppWGX/q7W4flsD+fAOANWpee/ga73
jVA0nrDXT0DgLAz+wFQP70aDjeG8pq2Bv/yJ5cZXalu3ng+U0vRDJk37aEjX
r8TxaJvS/u5Y9v2tz98x2T3eHP1zoPkoPuL8IBqV5w332o4Y49/AhKgDxMS/
LxY7gVkJ1mYUHOmENBcT9e3QXTq+yZCNoWhMLm/XerYJgUb0utpJZ1taqIEZ
04+2f2rRGZS4oKaxQ9S74vFRdb9rFW2trTXubX+DprIoBOvxz9Szmcrva/fU
quNNNTV2tOj9xa2tQPYHxqYxw6cyM3aIessFcR7Z23udiUvuzh/YWvSOET/3
1EXq7u2lLtM5zMyzp/oYuOsdz+XndHxenThnM+5X0+jiA/3b1usT6dtrn5li
qOtyOPZ/A20LPEpNb2HnxcfaOvW9Dk/V7mVke01O3WN11mgv0jpiS1uL/u+N
B6643nu8ZhlbrNf2k7+kRK53LvyKO27l/jjfVsBrc+dD8zTe+R29nGprjHun
bzlcBxDHZXN7VefPyS+ofpvW7pj62HJOiU+cmqJmba64qcZ8v8QNBqUwNtnL
EKPv691b8nWoy/Wd1NTWRs11hh2r8dZvcrx7H43GwtRgiWP1XKuffZiFsRUs
hN5lfGlX0f4Lty32EYGmB64ya5FVdFIcZ32vrZdcvxBoPvQe1dduNNK09QTd
HJvNzzw95TL/FXzGww+p2BSFwhEa73mJ6XcfUyQSpnA4TKFQ2OJPQtQhW76l
9/W7UXZdPU2DF417/R7OQul6knq19s8yiWXXEdh5GAvjp6TqBI0yv5m/Z8wt
/eyJm86qp1TTscYe//sXShQhlZDnd8FcCZ+ywbCda+NlsPHPBHltjCcWU+I8
LWkjL4VUUtSLE2SdqkllF7d/SP6W3e2yZvUzk766adMm+dL+XeqxH4K1GQXH
xMW/Nb6hlim7FuFF/mro+1fFtM8wf19k4qA928iewZLs82EaG7hu0ofk68A1
mtPa9fJnxrhtOV+rf2Pc8F+6+cz7zFwmLc4njpje7VaOy/sUBm4aabTEJdTy
vb/dqnuKY1vzN+V7zuOvaHblw3TfMgeV5nAvqOOk1d+KdQx0V37uxmch9ZDC
oSHqPMXs/9z4CvWHpkX5lZLXxi/XPavf23Wmi8ZCEVW2rdBE35u0d5PRztt7
RygmCrGg2oIdpaa3sPNibV4/w9Tr7L3X9HsvtvJtTcti39LnEe2fG+UhzBlz
o+1uzmY+NJ7bcY76w/Oy75NoeIguMvMz6Yy0tX2yTFz+B/LkT83GVqC0uTHq
Ys9pq7pT+5hhSxlv+45+z8m5+pHm/yLrfHPi/0/LaVbeuUnV/6e09sCcW5HW
kQ6pbX40rrWJh9Ss+6Qq7bOApTA2KfUp9ruxm/o890W1L0r9ULNZry8accGe
b/zQJHfXYh/pbeXZxo/1ti+/e2zYJIPka8MbFF0YNfqcrzh6+bUVGD4JlW/s
OHYlI76rFJOLtUfvavxlYHOI0ukXaZoeeJsOMfncuLue7vrZM+WAkYb/6jr/
+TsvWv6sMXFQs+1jXdbOOoll/XaE9ztjr3XVRvf2SkNPqqarPB/3TH1K8uGR
5TYbD+tqRvqMs13+/A2u0O1T/yOLvUBJf9Dr3KVAxrqcz8vO56tjGPu5dD15
0p3OCUBugrUZlQMT+piaeb5nQvctuo8ecPL++amvGX2cE797WpfxmfNk9myR
XV+e7vq+/n6vNl9+XEJNZ5R8fvGeUvb7PuPQVrA2qcz9JJ9jPOblOKk5bAWb
33JVfp7HZ+ZcR9X+DzLyrc3pv3vzD2Tl07oqssac1fDVFhxQKnoLOy/eeOAa
V7eYv/0velpfH7LsHdP9zVXJ+0ms3UpaP9ZsdE7jLy+P/1jtR+9zZdfi5Lum
85St1vPSxNg4NmfqWjnJ5a9g9WOTLnDVelaTaZM55yZq+X1LbZ/jTYz/4+3W
tDN6oHrfWt+6jCtVv1k6JTQ2MfWV2RcNH1Mb9vP9NrNt3Br7UVpvMNpqtRpX
zOgz/vS+/NgKhMSU+Qz+jnMZcXdWY6PUzNgRthy4RA/iAc4bSqhfWPeIvF2I
GJqu8m/EI7P6CQUGq8yYa69/PaLmp+3HfQ39THKV+5gsTvw6GWtelhhzekw6
e1uAoVtIuo0/e+pCeIg6Wk5S7banbObCr1TcXpbV6H3q7e2jvj7/V2/fcO79
jw5Y0/fh2YwzAABXsHsWrPNDVr5f5fhrmWRs9zx76SQzPxy1nB00dJUa+shG
GdH8kPqxFfDHmSU9PviGY+9k+BGQfdVKzzg8g7A68WM9L9c5PqnW1NiZtmcQ
XJefv/F58NTf2LzXiN+eGStmSfEhbl3X1NPqtS04o1T0FnZe/BNb+zdTjhZ7
xGzP94x8cG0Bhq92p/uwFL3+MNeep5P6St+HK19P7aXGti7q7m437RH21M9y
2goM308bjnHmj8zzufbyaHWn2KuWGN/H+zjtipkbiu1uKEPOMH7xbea1gEOW
+l4c+VfDpmfbP4y5Wsa5CHbfDmt7lfZjJpI+53UB2wp4PgnHzGePhOQMdZ16
jrEjvEL9keDPYpZUv0jPUeepXUaexXGx8cYIJfLYwdzl37BnKX7GAQ8nY+7a
9Fv6b7LKbrZfZxmbeTjyAc36tWPaLJsHu/QFoWfySCelvVK3xPGVtRVY/c2A
fDHd9W2TDPKz/xoEB9+Glv3KijgOj8l+Tod9XOLzoXlH+oWX9Jfi5RYpTlNX
SyNdaB9kbK6Kb7v5kZ9klaHG/G8f3efoAZN2a8lMzK2s+77WvPs2zEiDZZwZ
b/47U7ntPtZMN3r7aCwclX+XTszJe+wdsfyJ+az4VmUe1jc8pvrolfx4xDJ0
Lq/l53d8ZsfPlxn/q+sWW+zb7Jxf9Wdmp/97bgsOKRW9xanP/8GGv+eUo1lH
59tM3O+JnLj4/1DVk//mIB8rNNj2sq3sOH0rcy+JI3KVCXOfG3/aha1Abgfa
WifT77g+j5k9HOZzVNp3DfnyYnuuuNhE8cio7L/Sz5gkPW/nM5alVMcLpdzs
6pu1AWTv5+yeKpNMYd4dvI/goGwF6QyfhBcyfBIuMT6bqmTb3PXhWZv3+aeY
/cIOyU7SY/LZU00nW+9ZzowFg6v8M3tXjnD2zwEFJ2Ouk7m4DDvmutyr4shW
YPN+Nn1OLncyR4qJnnRgS1uhroNP5CxLEDQrzHjkQdezRaBUUvLpHaNoJEyx
ROWdK8knQespOf0oOb7OOZJLhdLNSlL3k0g9pIHuVqrbs4X73uy2Ar5eaHtf
nHdqY/mGo+/b23ICiMVmO86sfmHrz0/ep93/R7tX8r/T+W3bOtkinWn3MH+2
u+9/fGb89jLyc1zeY1JD2zZp7zb2VUx3/k/SzoJy8++1LTikVPQWp22SnQsZ
v2PW65xcDs9mzw/+hF536hdQQuzrY33XqensSaqrq6MzLV3+9kO7sBVw68WF
rYDFOG/C93fM7h/hxfZjbUu5Y/9xfLp6vHi+OK2U9HhhW99s+3ZuKzC9I6/x
GAOyFYhzTbYM73DOsa2Z5ig7s+/5CZjC9gsHiPJmsOO0yT/ugcYeiuZJx86V
/9UJw09S5vl1oJG3MTcf+wpM77/CXRepOvAOxaT5nex/nb1icvwV6b+u/Mgt
/lp+r5N9kmuO9kWCwGHXJTlnPr1g7CNWrmd46x+VjBRvq+4YvefR90bgeork
by0SoYjPKxpzFpSyULpZ6el+S3T77IvGO+RYRhOUSAm0PG6MuUHaCti+xl1n
1MinrUBCeET32l7m+viXrqM33fk9Wgzfofo9G2zq5kSGT+mC2gos47Phi0Lz
PzAnn+v77q0/MHu3NH9pj+icJBMv2J/JKFtbQZ72FdjZCq4xtoKroVk5nqBV
d1Fixoj/jZf2CXqdItkKRvS9QSe4vo6Ndszfw5HrvpVUYs73eBSJRB3txS7d
8YKy2gquebAV2O0rCF6nDmpfQWYcg6Ot9yz1mqaJ3vPM2MKLmZgfCt0vHCMs
0Xj3edMevN0nr9GDeLZ49O7JlX9j7Mtxbusxx27MXZ38OR1Q/ZKydpesvmby
vq+A8cPE7Mczpy/YOd3C4D871mfMPhECTUbRWQy9Ry0tbdTW5v9qaeky+Yr2
y+r0W6oM3udJ7+QixfeN39dj0pWjvVFIzdCwi3g0kq94yTd6V/OLXJngMRXY
n1E2LFHXIWPc3m+Jj5hrfuZ5fmhztiyDvNkKBJrsu0lDMa1tpikhxfUe66fL
pnOWfJ+OVoTkA7rRPaLnI51MyG1f2qexl4kPYB2rvNta/I/P7HmD7978I63N
Muc9Fz7Qddw3p/6DSD3P93YWO2KxbAWF1lsc2wqYGEr8fQXO2lZZUBRbwSPd
V7vkozNzzGP2w3Pr2PBZwsacEIQKczyVDwq1r6BkbQXG+8a7XzfZAxpvfml+
r2qPNsaUndTO8S0aHOXQL1bE8feqaWzccqA5wx+kN3Lln/Fpw6wzottnwo6n
5li40lrPj+S2weoRWf3rsOc0Xa7v6rJiu32fZX0OsP5P1+d/ZfS9HL43YqEx
F+djtNh8zsZxQ96xvg2XqKfuGfnvT+2opyFJ90qZ/aTuONBAQ/I5e+n8oHGm
6emth+hmyLnfk+XJt/RY5CfblTUfKa60XidPvyDKrt94kkumOG0BXIHNvZeN
s0Z8P9d+3q3NYQ6XfLxlHsq+/WrHtmDNH9meQ8a+c7/j8+O3P0Og6eGbdPbU
MTpYV0enzl6kW8PTZeEni90XxfMvbZqfSXsR139Lx3cc12Wj5/mhU38FjE+0
YG0FK3RJ0hds/PRJcrVGlavvxnLburQ2z7cXG+OB9byF1/ILZnxmdKbdb1Bn
w/9gYjEs6Tr/8xc+pXFZTvwoq3/8vNsKSkRvcbZHmvXdWc3EATT7H89me5Hi
Ro859LVSdIphK2DqkHvmOG2cyea9c3XaiFv5onqmWdlH9aOSi4cg+dnvaTtD
dQcPUl3dKbrQcZumimmDz+KvoOegNvbX0J0svqRGGH8xJr+5ZWUrUJF9HLLn
8vdl+CaQfRyy+/e2nshPDMGy6hcCzYq6U6CxFXPknz1/cUT11bMorw//tOT6
fbFhfcmze38UX80/VfvPI8aPZGbcVg02TkFGbKAc6LpDljN5rB87s9xYcmaf
X1T8Mb3mWOZo5zjtfXPrMHos649fieX4Co2N3TT7uxL1sdHoAk0Pqv7Cth6i
4y8o6b8l7UWM9Ksy0uF6gzAj9/mj3SPUY4nreKFvguLxB3Rxj495upCmVCoV
0BXUzMmI+/ryXXfniZ2wOPgDb/pjiaDM7Wo86OKCbmv2PT5XwP4MxwhzdFGV
Q7tPXaQ2UZ/T1xg2vpI1lnkpMM2sffJ81mmx2JR50V/lWFk1VZt0W1Qu3/b2
80PNJptd1prOVfq1FWznxUw8QTPcp9Lq2oqzeLiaTcXOT5Juk7HYtb2XXzDj
M1v/8jjGyNR5xl+/dHF9RAWSF2eUit5i8r02ZNMm2biI281rd6zN48UsdtTB
+iomXyVOEWwFrs5kc9Jk+DbV9iYKdPt46Y3985q++NReamlro4ZDRty9o9ed
n9cIFKa+rOMGe27NPsbIQ2rQ1pSt8VYKZSvIskbpFSE5RZ2n2NiJmTEP5NiJ
h77BzI3FeUEsuD345dovFqzn97aeyIgp4YTs+U/T+7otSzt/kKZ3pDZhiZ04
O/A2nT11llpvTZaHvTYfMGs6RxgfyPIaI2NrY9vUi62cc4rLn3k/80fmPUiv
82LfLXxkrD1x9g6wawjcODy6jZN/ZoXH+sKvDF3/wDtZ8vTQsFXsYn+3RJfE
v33n7p/lNWrtXc+qeySVjzDnKjaeY9Jm7A2yjzVjoMjkE7KcNWJg1dBdJh6D
pgtWhq/PNN2u/29qeXJ8twaA5rv6xXZ355RLBe+2AmMMDWR8LvP9GU4Zafiv
ch98wJZ3aorqNT2oxGN2s7bY0/3WOdMSXdHWnavUveiLv5LblzYXNOaa++gB
71ykfn9npm/8xU9M/g0zm4koYxkfpl59LOlpEHVSoy6M9s6OgQbamrszu62x
/+IVru1B01+es/iU9lN+gYzPzFmDjDm+JbZDrjN2vtqCE0pEbzGdX9jyRkZc
comRpm861Ff5tijNt5g1hqkds/deo9raPXTw4EGf1x7asbueRt3GmGZ0Gm4/
Ze5zz4zmus8h55lspr1l2q6MmGr6/hM1zserbm1H+WRR0SGtflOme/7FkIuB
xwpwAFNf0vklM6zv6X00yhkAx1lfBdb2wviof/NB0OsMzBkJUWbkSzWR7AEN
ewybzpYDl+i+xXeo5NvmOLOevv3MO47iY+Si3PtFIjpEzQc3q2l05peaJXv+
jfMVz6rxkLV5pEnvVdeYtSvw/ctlwxLjf2SfvEd+bf6OrBdY9wvP972ml9eu
Cx9SIq0U/nL0I8NuvuWcp/kAayuQ7QV3f6fPpxfD7xl2gt2XOPGvFRaYmF4b
jl1T+5pAyfgUddYr+z7Pu2jj7HqDbvOLLprsSouRO3RImwvsvmJOm+of9ROx
PBa1d22w6BP6WV2LjwN9LaKGE+80ky+bxd++/AWxsZzNaySG7SH42DOFR5/X
bM/X/MuwdWtr4VI8uct16vnljSfc61A5CPoMSanYCsp9f4YjdF8q1XQ1bD5n
x67Hl/K+Csk2asi7nXRXPS8opOaos+4JkyzccuwK9Vz+lvj/R+nOr/uo13IW
/0BTJ/X29tGDRJKmh++K99tNewt3n71M3d294n1DZ1qeMPY7bj7zS0qoDV3q
d82MDzi5jzx1mNpudNOQo9jUgpqGVkNWq2mUzocIFh9zp29+aZxbTD2kngYl
HvbzWXz5sZh87Yrj4X3dV5NAC6F31bFsp6o3p2ly4G4g5ed/fDbH0TbLmTT9
UtP5befUweUlN6Wht5hsBXLZvEFTmo6ffkS3zxqx1M8P2ayrSvuR9PlUNbUP
Kz5mhLRUXlcV+S+Oc9nOfLBMZ4nB4f6qofccnLuRsyH2077eXuq07K3uEOt2
KLyo3zf5ANl6SL7fJ/bDZGJKeb5pv3H/qb1yP8++1srET+eeQV3JcSZbWhf4
Gum2CVH3qs+rbuENzefFhv3vWNLF5L+AY6xR32x9SXL5tvx3fT6cnmHk9z66
G1F1aGGJBi9/x5C7TIxOaU2+r7ebmSdW0dbd9XJb6fdxFmcx3E+9fX3Ku+u2
m9q6tBewu7dPTrs7WeSMhdB7Jrm3q/GXNGfZXzfL85HoeSG7cvpFMjZFYUdj
PUuu/BtnZOQ9XamvZH++1j7E2psVHS5Y34tlRWqKGmot/pqleS/np2sWG5lx
SfObTz3v45HtW2pM4InO73PHrEZGh7NjLf4ZNe/ZzHleklHufGXcq1Py9Z44
Ti2M/dzkH3vbtm2mfx+1+AFTENT99sa5ROu61fxt1SZs8buh+2bYeI5bDxlf
SqcoJbC+Gyx7LqWzxWo5lrvfxWV932amL3H3PKLuth6ay1jn1PaBHJbXBlfV
ecyWuoaM/ZGros7ZdLaJWlpaXF5NdObCPUXu5uEMSanYCsp9f4YjmPWPrzda
5pSMT9ZSj48iteXjtRsz5aeoA0o+VQw/oopsvBpaNM4PbNpEm9RLub+ThpJr
NK75Gc64X50xDxESX/DltziXC0WGzPMyXllzWTH8M1nTIOsFKcVfgaTntpzk
zpkkn9VORY3mr+BA02Wq58XE23GORvV1JSHQ8vM7Ps/fVs4a8NaNFkf+lTuG
GQSbl5yUgN6i9W15/Xz5M/2sFXtJfrqs64iZpGW/aDUZ6ZPmFB+W1JzVjnUm
9ukmvX6Vf0tnVtaZfSvW+9K6Xnr5E12GWu9nPU8ujp3H1eeOcM8iGv3fupdH
Y3X6F+ay3/hKye2BY2OVWNeP9PXhAu5dW1/4yFTfkk68Te/PVv8EYvu+cZob
Y2bj7gYaiprnX4afo2r93ZuYd3v1x7/A7Emv0tKsXpuYvpu/tWMpZsKbJnvA
yfZBSprsAVYfiTV0oXfCvQ3oMekXtuTMP7s+p+kZb3D3H3SpPoY27r7E+KJ7
fEnGY2ocl1jOdplOPqSoFocsGpfnqUEiredEwkacM7fN05Q+8XkvyRvvuEDX
Wd+C6Uc03ivFIT5LTU1NclyA7r5xiufKvN5mJX2IlZ+iblX331T9y7y/cFZd
N5d8jLlB0/WetJy30W1jDm0PJYu+D8ODbsl73aCy38NqP9HWwqX90LHJt+X/
f1mOWS3QNVW+antCF+79gDu/cHSJsleSTfk4Q6LUeY2HPb5B2goKvz+jOCxR
z6nnaNPTL9BNy74CYs4yaXtE8+mHNAhk3/1RVX7GLfJTSFEykaR0HhNnlt9G
eSZjUuy4BCWTKUqLCQgqCVLcg4d64IJH+rcj0Zj7sU16PqqNG4L8bvld4ngW
SxTmxLnn8VlYEtMZtZmXrYjvjAY+1vullPQWqb7jYr8Ja/HwXAVollMox03U
4+mVWmGXKKnEjFjmMVt5IMmzmNSXs70knVTbRo7fFYlVccx4YdPTtP3kLy32
AMZGp/uGNeY3kk/tUdWn9kVmLV22YRV67BXM7TueLMWSLgRLNGKynXB8P6Yf
0j2Tj0T3a2OPQ7/IRq78y+jjfe7xA4B8Yqz1W8/MzOnnBcznFB/qPqlflfwl
rUlrlk5if7L7F8zzSW1tVzmXI+3N2VB+526EOX3eyfVp4RbtrCpn396IWl7a
xX5vIdRPfQOTgcpNz2dIUnM0NjZGoVDIfIXDdE9eh6im9oGJzPviM/Z+tQO0
FbjYn1GpTKjxJXT/QPn2QwoAAODxgPGrrcUGtfepfYnux+KyXVr+9/O/wPyo
mKTnqEc+c1NtGwdF8ZG4S9ahAosJDgAoObS1/qpj5hhZxnqj2YZgnI95Rd4D
MC3NNZj4ENr5S8m+bBYdv+fvX9DPVFbTHfEl6573phcT42zRczwfVS5ZDr+r
j68vZdgdDFuNvk+srScvZ9g0vJ4hme36f73vaajaaWN/Cs5W4GZ/RkXC7Mv9
rinm0OPkhxQAAEDwCPo6kLzuLOuRS/RGVaZP7W+cYfaaivrEXtMzAOQH6axK
/R7JV2od1dV5uyRfqwcaP4RdC1Qwade+CtYmf67vAVhT/Y4a81nm7K0092f2
LRmxICzzTM1n9OYrlEgrexm+cSY/sQPyxUSb4gNniyUmuTvSlIjeN8ex0WPB
MOjnHKT4lWPM73dy/fjKfimSSQ+xI5OUtMSPdH+GJC3vB08mLZf43nn5bF4N
9ceW5fRl/MZ2f2xwtoJC788oKYQZfY/Is2eM2CePmx9SAAAAwTOr6ZCsrZnn
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
npXKd1gu32FRv9b6zxKNd7dS3cHdtGd3Pd2KZJ6VcZKnYMgh0wvR9j2MGcHo
ZUHrH8702kLK23Ryhga6lXbU0tIit6OZXLGkA7IVOGrDvuZVjylObQU5nr0q
tvXxzu/ofpRra4w+ePrW75iHlugNxp+J/t10tvtWv8wrdE+LtfLUXrogjle9
vdfpOBPX5NnGzx1lQT+3meV61erzxFO+zazO3jHK/anD4ljQov9744Eruk1m
deKcJT37aDQWpoZN5jQ+1/qlp/c7YvWzjDKx+oFZixrf233qInX39lJXy9Es
dZibXLYCN3l0l77g2hfrj8X+yvSbped91zuirjGq+wDaWltrPLf9DZqyKdP1
+Cd0SG0jOw40iPL6jHwWSX5u6wkailvj03L6nVjuXr6dk9QUXdzzpN73m9ra
qLluu/7uxltm3yqZfUAaK+bz2u9c41MmuK8vA34/SVPPwezt7ifh3OsovLJ/
rvU3We9/3dQ3AmhXOeSPJxnuAMnXn+Z3eUddM7W1NRp+u3e/QQ9MnTaY8v6y
2fKcKTaX37J0mUbf/TTbWOUyL1teUXwzJ7/Q1wGfsty/b+PH3HXfcimzs9cZ
QxHlXhC46w+FG09c1a9Yty9k1KVyvR35q/6zL5v/c+ZvTn+h3mX0A/HaffYi
tTTsUv9dTa3D2rwjswyktj+t7VVh+gmrd/sZC1Yjd4y4ZWL7eEH7/23b1Lrb
adw3tVOneQqIHDI9323f65jhVy8LWv9wrtcWSt4KNNJ2RJdxZ1taqOHgZv25
o+2fkm04Xt+2Audt2Ou86rEmIFuBVh9SzEWN8bbv6Pfe02OnCpSQYjEOXDV9
15inSTasBzQ2fJOZm5nTtXDvn+W/72+31mOaBpu/Kd97/oKzOk7FpigUjtB4
z0tM+/hYXiMLh8MUCoVpLmXpE57ybbA88XP9/v72zw0bnTBntNXtV2Q5LqQe
UnhsmC7XPWtu2xveoOjCqJEORu67eb8zVigaHqWelu8ycpvtq3NUL//9MN23
vHRt/o46NrtsW5TdVuAuj+7SF2T7kuLxREIhsT0NUb3envdRv9jmpPYVDoe4
tmg979p14BrNaUJ2+TPDf/DRDzk2XqMMvnnzj8zfHxkxf8QxxHwuSex30trH
wHVdT/H27eysL36i62rPN35oqte1mBGj/FkmRrncB0Jj1NW03yLf89fvXONL
JnipLwN+PxEoJratsFinPQ3Pqe84rLY76e/O1vKkso+Ifb/r7It6+tm2r9VN
D6OfmPtGEO0qu/zxJMOz55pGWjSdYyfdja4y90QZcNG418+Ma0GUdyo+I5bV
TaOstpvr1F9ZOk+j537qeKzykJfaQ0qatl+iKW2NKv1batDkqqi/Z+qhHvqW
S5mdvc58lmcAcs8/3vpDIcYT9/UrrRuOmWSJVLc3hycoxqx7rsZGqaF2g17e
Z27co0hcyvcSde7RnjtBo8x8af7eDyzySSmD4d5WY66vXq8Pz9IEM1815sne
x4K12V/o79t14VN9zfhew9/rf786I5X5B2o7vaa2Qzd5CorsMj3fbd/rmOFH
Lwte/3Cj1xZG3mq6s9SnZpi/LzLxDp9t/JSfHV+2Andt2Mu86rEnQFvB1QeW
dRMmHiPPPjOt9zv+d/X4JKb7WgzIalE28BL1ezm+4zNO53JaViZ/qufjzQd/
zfFjH/lW41LY9bV1Ud7rMURZu+bqZ4w9vJpG5QZsvOvJk6ps8vp+J6zzY5as
TSoy8ElRPvKY7/me+7ZFWWwFLvPoLn35aV/SmH1N2+8mjtG2tlUV05i0+a0M
3TNr3zHFLT5MU+ygxbQju9gon5/6mvFtXZ9w+O2sPKKL6jizYf8vuWXA1t1p
awyl1Y9Ncr0g/c4pfmSCz/rKtf9Gry8H7c4WJv1cO1mu+xRAu7KRPxquZHgW
lkd+qMtZdq3RIE236/678puNmfHxgijvXLG5/JZl9jT67acOxyrXeVF0Odvy
DlwWupPZ9nVWRLkXAH77Q/7GE/JRvyt0RbcDnTDNa/THJ36cUd5sbMyrGWUh
GOWw2TzHGG/6R/25Jy4o+65mu76tl+t7sXWf+UlTlzZXEr9tKkZhRol5Ll1i
+5NeKZ2l0dqh1zwFQg6Znu+273bM8KyX5UH/8Kp351PeTsjx8pRnv3vdvNdj
4qLWB/bxz8T7sBV4bsMux6rHmoBsBRuOccZA5j5Pf5zMMUbw7y/pMn7DsXc4
Z+DFMUB6xukecZVVRma4iYPgNt+zcv/NJhNW6LKqn3zjzMfcd1axskFIUSKR
1Nuz5/c7waavamOqZO++Hso847M2qdwP6gyC2zy6S19+2pdhg7DX/1mMtl9N
70Yz9xyyfSOjXEX5Z6xjHKYZUx4Y/Ze7DqfFR/X47SwsjvyrMS7b7sdmdB5r
nHJGjypYv3OKH1nou74KEAchhyzPeZ8CaFc5dAlXMtyWR4rfexs9Sk/K9L/p
33rprnluF0R5565Tf2WZ7f2++6nDscp9XqQzxX/OuL+sy/egZaFHmW35bTHl
nn+C6A/5GU9kfNSvsQbKsc9o9fH8L4zn2Dm3zbzZmHvWUD+ztsm24TvMGkQq
kaAke97ea37EuaiRNmtbNbdj83ZC73kKhFzzwzy3fbdjhle9LB/6h1e9O5/y
duLi3+rPfvfmH8zpYWTE1cgqZeDVVuCnDbscqx5rArIVsGdYefeDsxUQjTf/
nd7mpGv3sWa60dtHY+GoLCPTiTmKJd2t6Hi1FbjLNyOzbcdFGxsY806rr4BA
3u8Eu766/Il5j93WvdTY1kV9w2MUTcg1QrFozPUaG1/38pBHl+nLR/vybivY
x/jy4N3n9R2Bpvuuyz6R7oYN/0WS3550as7w52PVGwL5th2sLpz9OXasMunW
xeh3TvElCwOqr5K3FfhsVwWwFaxNv6W/I6vuyY6bljlUYWwF/srS/v3B9lP7
scpbXnh916j3oGVhELaCYso9/wTaHwIdTzR81O/aV8Zar9UOsvhr+e+vMnMl
Vr7YlcX6vHEOgJVBRtvINbZ4zA/rY8OFrcBPngLBxfwwH23fu63ATVvOk/7h
Ue/Op7wVEg+oq6WRLrQPMnlQ/IfOj/wke1l7tBX4asMux6rHmoBsBV70R6+2
AsnWeIjtI6arhlr7/5j5shx4tRW4y7dhO3R0Pcm3FdjHdvHxfidk6cuTnd+2
/c6WA1doxsNmXDtbgZc8ukpfHtqXd1uBy75hYSHcT5fPHss4L5ktHUF92wxb
b851Zju5ntd+t+En1NPyMtWdOkWnOFfdwXq6FV11+G2H91V81VfZ2Ao8tqsC
2Aqc6B3WtFj178LaCryVpf37g+2nruKQecxLdluBgfu+FYStoJhyzz+B9odA
x5NMvMhOdl1APwdA2trrCdO6PlsWTi6T/1UPMUrd5Yc5U8E5A9Os3bPYRPzk
KRBczA/z0fa92wrctOX86eVe9O6CyNvUQxqQYm7s2cJNW75sBa7bsMux6rGm
HG0FEsIjutf2sn7Gx3odvenOL2qhbAXXGJlxNTQrx4SJRs1XLBZT/htPct9p
nz4f73dCjjQshu9Q/Z4NNn30hOJX1QW59xW4y6Or9AXcvgptK1iNvGc6P7/7
bCeFooskiHrDpaezpyNftoJrHnRmu/W1/Pa7Pxpl5FRn8ikLA6kv2Aqcy3Ab
PM2NirqvIHhbQZD9NH/6t0Eu3dV73wrGVlA8ueefQPtDnmwFfmTn+vyv9OeM
2EZzXJ9EpjnJgXfEcSKWMYZEozE5Dpv0X3broRuZ4DU/i7pfiSo6fddYz5hl
fLtZz8D4yVMgPCa2gnzq5W717vzK2yW6zfhBluKItfdNUCIl0PL4D7OXdRC2
Ardt2OVY9VhTdrYCgSb7btJQTDtnk6aEFCNzrJ8un9rF9BEb/xk22MmM1cmf
0wHGN7G/fLP2RXfpc2or8Px+H2kQkg/oRveIvtcpnUzI8YQlu+Jexucqdw9Z
FnKv0zjLo7v05ad92eudK9R18ADjP9qSdw/yfHXS2DdatdEaYynL2cUAvp0t
/6Wxr8BJvaVpovc6ddy4QTc4V0dHd6a93ocsDKy+YCtwLsNtWJ34GSMPsK/A
976CItsK/PUtjzK7kvYVBNkf8mAr8Cs7zfO4wzQlvVOd09yx+DY2l0UQukzA
+bHEIdzf0kkXGT/vr9/9g/UJX3kKhBK1FdiNGf73FQSnl3vVu/Mnb5eo6xDT
/izxEXPaZbzaCvy0YdgKnFPKtgKbOAiybfXlT7hJWhZlrbJnq5rejdnHobXC
trdMv30/spwN85pv5kySeL3N8Suik5qhsdC8IasctWkf73dCDt+G/QneQ0vU
U/eMfH/D0fddfY8/vrrP419cpS8/7cs0Xlh0Sel71li+3uU5q/tUm/ZVZtxX
0zHb9X06ev03Dt7t7D4fNrZ7jaiH2ftIGmH2hZp84BSj3zklkD0PPuurqLaC
3HEQ8m4rcCPDbVhn4o5l9THFnhW1+Bkrb1tBsP20uLYCv33Lo8y2+Csontzz
T6D9IXBbgX/ZKbE4aKy7S7EMbx/PzIMEuwehyiaehUYsNGaKuedMJvjLz/xt
yX/eK/QgHhPni+10Vjozd7aJOroHbWPG+slTIBTbVuByzPC6vpkP/cOr3p0v
ecvGlODFDzDZCqT9/pI/zh3HDduJR1uBrzYMW4FzimgrMGJo8L7LxOHh7ufh
x7mRnlPObfF9fNpmhRkT2X1aii/Rn5rlu581REY2vZjFBjZYX2X+rsM27fn9
TrA526PJgCM3M+3W8mOajMjRj63YnfFzm8c/Tf7MRfpSeWlfss6oteftZr3z
iqh3vmb1/5DDv4ytPGd9HHH9Vi+Z9F+pPiYl37VMXAfP384BuwfN6ivb4KER
a3jDG/SIvVWMfucUr2kLsr5szsJ6OSubAeOPmpc/NuaTE1uBp3aV42yhKxlu
ixHfTtK752x+xfpQt/qKDqK8Hdepx7LM9v4g+6lbW0GuvLjyteW7b3mU2ZYy
LabcUxBoeuBtce54llpvTbq0gwbYHwIeT4KQnTJsPDstD9xz+UvO1ocXP5B/
w7YP1lZga7P0mR/FBz3fX509XvPkp00x5Dovnmdbgdsxw2tbzof+4VXvzpe8
NWLc8+O9LI//WL9//v5f5XiXNVWbjG94tBX46ZewFbhgjY3nutOdnDHFNuW0
/xz3jVhCYv1ahI3JVmRKl2FbPXKL52NOi/Hjfo+/Vg7se2UfN1ZbsK98p+l9
fZ2BP9/UfA+bYo4wcUCzx4H1+H4nMPl6dYh3XugV7vxai89sFx/eDvt41e7y
6C59eWpfpPlLsuhcon7wAke2GnI3s2+Y71v6bJrRe6w6J7Fxdqrk+MDSqz8U
y/LrjP7k+ds5WWF8gu9TY9maGWfP7Fp1h2L0O6d4TVuQ9WWzZmXUl539ywkP
9dhpmfkTmLK119l8tysb+aPjRoZngY3t9GIrJzbq8mdZdfogylt/h9gmeHML
v2WZPY0++6njscp9Xnj31xjd1aTbBtC3PMnsjDorptwTWfiA0aXc+6cLrj8E
PJ4EUL8axrqV0ifmbD7J7rPgxvDT95GY/SLq7xfLxzaLPvOj7CsQ7209Icdt
6utTrt7eXvG/wxSKxCjFKX9PefLZpoyP55Dpftt+LlyOGd7bcvD6h1e9O1/y
drrL8LN4ut8aa3FJtq/qMm7qP8QJoDTHqzHewdQl126U5b7Xful2rHqckGJa
9IpyZGCgj7pvtNLx2o2mPv/UnuPUdqNblzH345ltWnpHn3jPdH576yHq6BZl
0vA0JRNT8v3Opv3G/af2yu8djTF765aNetrf+rHeL5cj7zH2C+XacqBBln9T
iWWTn5DTN7/U24WQekg9Dc+p+ipnTMvKEvPefTSUEPvE/B15X90zqgwKLN/C
HF3cY8iN9uFZWe4L6SRND19V9vJtvyKPFUJSemc3NR/crL9z6+56+Zv9dnuV
XLzfCVq+O1mfJWq+HyTWzb5FtpwT24yWV4EWQu+qdbmTqyNxviam8S71drfS
IebM1bGmTuoVx7uElmEXeXSXvpU8tS8pLq1hW1aeT9O9hr9nxpU0TQ4oeWfP
mx2Q8i62/QeJpFo27XRom3F/99nL1C3XxZqcp3v1f2N8p/FDVW8VaF4sF7Ov
xhpqFdvWXnl8igTwbQekZ6iZ6Wd3I4tKGxaWaPDyd4xyv2WMl8Xod07xnzav
9fX7HP1Ea0uZ9dUryfaBSdcxTMc1ffepw9SvxYEQJF9Gz5lktZTOM21ddF/O
n/82nUv+GOSW4U6Z73tN/9auCx9SIq0InuXoR4Y+L8oSw29UEOXNl31SWd0S
25LguyyXnafRSz91NVZ5zMvJy8r95LqoJwyJ92/Q8ReM+zuOXaTuvnF1nPDa
t4w85ZbZuerMR3kGJPfYub6SD/frr977Qz7HE//1qyPOfbXfZ1v3lX/KxH7b
cOwazSTX5W8m41PUWa/s+z4v761Q2kZ3RyMTy6CGTrZ0ivq11CcWgs3P+lcZ
ejPv2n3yHZqzKI7O86Tgt03lkumBjfk5cTJmBNSWA9Y/3Om1+Ze36wvm9d27
USXmp5Cao866J0ztZcuxK9Rz+Vskzd2nF3ht4YRc10PhRZu2YtzXcNOGPc2r
HjPWFz4yxWDZ9HQNbdu2zbg2bTLJI975unVGrm4Sf69cyr8lX7Lp5U90mWW9
b7XVLYff5cq3zWfepygzTmvX62P/RzlPLuqrbS0nubLwzPXPXevBMqkpaqi1
+BPdfYUe5iHfUt8d736dGw9nlz5GsLbkavl9Uh1t0uuoxiZWq/P3O0HKd401
X+q/3478VU/jgabLVM+LDbPjHI1ybE58mNg/ehlq+T1s8enqrgydpW8lf+1L
ZLr31Yz3nR/T9qUyukJG3nfSUHLNmK9l3JfONxp5GGw7wo3hsL/1U9knQw9z
fm7D/nfEsgrq204Q6+3GaW76Nu5uoCFLPMJi9DunBJM2L/WVytFPBBrUzj9L
91Q5r33j2TPOfP2ZWaKeU1a7gCKHboWnTTY2+XrykphK/+0ql/wxkUOGu2Et
NkoNe57k5LeaTrZ/amlXQZR3Ftknn5/2W5b/7jKN7vqpu7HKX17uiDr9graO
ytzX0mrsM/XSt8xkl9m56sx7eQYn9x5R50HDx90THn0auO0PhRlP/NevQpre
qVW+zT//bSmL+GfUvGczpywkO9CynjatbWzS+9vTelqP3OKtH3vNzwpjc6qm
PXsO0sGDyrVnzw5Rr7e8b1fm/g9nedLw16ZyyfRgx/wc5BwzgmzLwekf7vTa
wsjb1ehHGevP8iXq00PiXHJ1+i2mbVfT1ft/4bcFtS6/e/13Oe+zOG3D3udV
oLhItp8YRSIR+Yprdrj0I/HfUYrHE5RMpSgtKJqM5Jf+oe788xFF1eciUf4e
K7cYaYl5nhM6Jy3HT1G+F5Vji5TX+0mpg6hm3xPk+pG/F45QLFGITpcjjy7T
l+/2Ja0lxaLKO2OBByFiSVNCb8tRfS1II5VMiv0q/y3cFsFcb/FkIQV0AfqF
a0q8vlSkdRCt/UaicV1GJsS/RWNxSojpTKXFmW0RizRIGZ5OPtRlQFTMb0k0
lUJS1H4aFD77VpAyu4jlKZ1p//rrX/l6R2n2B/+yU0jOifJsMetvMr7KlkUs
EeB6pLv8jMu+CiSb0xWasWlOgqjLjHS8pM+feGfKveQpiDZVCpSd3l90vTtL
0qSYDKq8jMYtbUhIUTKRpHQe5Ub++iUAAAAAAACVyApd2+b+PA4odZb0/Qtv
R/8j56+19eWX7/L8MbkFbQoAAAAAAAAAypm1WcV32rsZsfhAecPaCnKd3TDi
973UbxeTwzloUwAAAAAAAABQziwpsQ+f/0UB9leDQqOfNa86nMU3lEATXd/X
z2QPOfDLkB20KQAAAAAAAAAoXwQabPia4reP46saVAIrdK/pW7ovgu2nLtLd
sUn1PHyYBkz+73fSrYibWAE80KYAAAAAAAAAoLyR4i+0cnzZg0ojnZihex2N
dCjDF3017T7VLMfxDMbrHdoUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAzAjp
NKXFSyh2QgAAAAAAAAAAFAGBpgdu0Y2ODmppaaKzpw7QgZO/pFSxkwWKwnLk
DtXXbqSqqir12kmt/X8sdrIqDLHPDYt97kYHtbW0iH3uGB278DGli50sAB4D
hMQU9d64QR1tbdR09iTVHbtIDzDgAQAAAABwWKFLT1cxc0Px2nyFksVOFig4
C4M/1NtA68AIndPbxD56gIlsgPD63CX0uTJmfeEj2qvW5a7Gj7Efp4RZnfix
ue+J1+ujfyl2sgAAAAAASpZ0cooathm2gkpcZlmODFFv/zT0eB7Ln9ELqt58
5OYfxD+k6YrWHqpqaLSUGoSwRMO9ffQgsV7W3xHSD6nr4BMV3ec0Kr3vTVz8
R2bueYJmKjWjlYIg0PzgT/Q6Ox+CrQAwVMgYAwAAAATJ5OV/quh5y+TF/yTm
70dYv+WwOvEzfQ/BfXUPwXTfedpTW0vHGj8srTJb+4I2FWItsADfme78XxXd
5zQqve/N9vxvxlZwjh4WO0EgN+tf6XtBYCsAJipojAEAAACCorJtBQLdq6/U
vPlnUpuzbi/98llf+KAg+n0hvlPZfU7jceh7SzRyo5WaWtpoKLpc7MQAJ4jz
NNgKAI9KGmMAAACAoKjsecsSNT9dqXnzTznV/fL4DwuiXxXiO+VU7t5B3wMl
CGwFwIZKGmMAAACAoGDnLZW2V3j29r+Uzbp5MdDrvtTLR5ih+k2qfn//38v+
O4+DrQB9D5Qkq7AVAA4VNsYAAACoZFYoMnaX2pqa6Kx4Sftb+0PzlIgOUduF
Hnqo+s9Kp5KUiMcpFo1QODRGIcseWPl+wrg/PDBGCY7vLWO+eE2O3yYk52hs
eIAGBgZoeDhE0UQuTd9ZeklIUzotkCAoVzqt/JtFEP+WEi/jNynLbxx+S2R2
8DWTv/mH4nvSqRSl5MvOwb/y/o62FmqS399J/eGFjF9pZR8VyzYUGqbhMc1/
W5pikfty2Q0MD1M4Grf4dRMoHlXv9w3QWHg+OL9v6UcUGrhJbS1NctrbOnpo
LJKZdi0dabE+Buv55ZP2lKg0RUP9atm1UEtbl1g3s/7zl56hi7WM7/KhPynt
xEFaE2JZd3e0qXXZRt1942I+g/yOtzwHZytA3ytW3xPE8mHlr7WvOUqneIXE
54KRAfnpf1I+4vEYRSNhcVwYozm1wabiU+L4MCyPEfw+5S49+SivVHxGH8sG
xHTGpbQ79VfgQp6WSps06kpMx9gwDYzNKl9JPqSQXg5jFI2v8l8gyolkIkHx
WIwiYam+Q5QUbO7L7WGARiOLlvtin4hFlT4h5kdB7NuhIVEHGcgyJjnr/67K
Q2yjfdIZobNKHbZ2D1JMTP+4+LfrY8y7PY4x6eQMDXS3U4v47paWFuoQ3z+T
zOKv0Ot35Hwo35HyIX1nDgZYAAB4LFmL3tH1mN2nLlJ3by91tRxl/GdpvumX
6A1L/Keqqp26fzr+fb5fe33esuUVunFZ+1Y17andqj+75dg1muHog47Tu/aV
7m/fer0d+av+vi+b/3Pmb05/4fpbe22+ZVyZ/tZWZ433Vz11WNRtW/R/bzxw
heb0cZxTtuKcLx4fpUPqv7fW1hr3xHKdksou+YW+nvCU5f59n/6QJX+Em9T3
7ahrpra2RqO8d79BD0yZTVPPwezl85Owu/WO9fgndEjN244DDaLedIZqtPdt
PUFD8TVP+dL9KWS5XuX5h0pN0cU9T+r9oqmtjZrrtuvPNN76je/v+MlzELYC
9L3i9r0vmy3peJKNf+kyndvfoCkfun+++h8vH8+1fknT2p4R/dpH95n0u09P
sOW1Hv+MGvT+X0W1e2pV+VhNjR0telrsbAXu5GmptEnemH+Curte1v+9aZNx
b4vYr2YsZbg6cS6jvz7X+pus97/e+HmW+/toNBamhk3Wd35p/q7j/u+UFbrX
9C31fXvpQkcP9fZep+PbjDQ8q6bb2xgj0EjbEX18OdvSQg0HN+u/P9r+KVnV
JW/fYfIhyd6zF6mlYZf672pqHZ4nAAAAjxNzVC+PAYfpvkWZXpu/o+oqO1Wd
TKBENEJjA1cZ3XwnYwuQ1ise0NjwTWZ83GnS5zT0eYt6tfbPGjdTrB18Hw2Z
dBgX6RVSFAmN0W19fFXuXR+eoBhjh1+NfUL1+veq6ULvOMXkfQ1uvrUkfitE
kcgQ1W8z0t4fjlA4HBavUMba1PLEz/V07W//3LgnzBl6znbtjIZYttKaysB1
XR/WrwPXaE5TEpY/03XFqtpDShq3X6IpLb/p3xrxKne9k6FbOEPUWVq+pZfn
3Si7XpSmwYvGvf74uv5MTCyDsJiHnobn1PuH1fKR/u52ndMoo2/e/CPz90fU
efDrpM0lhzwccEnFpigkpmu85yVGz/xYXtOS6jIUCtNcyqxXry9+ouv1zzd+
aJqLr8U+0vvLs40f6/l0/x1/efZvK0DfK3bfk9esB24a6TCdtfCQzqMfelxT
zl//0/Ix3NtqzPXV6/XhWZpg5j+GT3cv6QmuvBbHf6Y/u/nM+8xeujSNdx4x
vTvTVuBNnpZGm1Trqq89wzZ4+tZv9Pctz95h7otjetyQAULqIUXCo9R19kX9
2ecvfGm6L+0X6GHshBn3x4bpct2z5nLY8AZFF0YNXYWxq7nr/85YuPfP6vu+
tNwR67D5m6Z0exljtPdL5TfD/H1RzItmY3q28VPTM+6/s0Sde7QyPEGjjO41
f+8HWdowAACASmVtUhkznxR1IB7zPd/jzven9bk+3xagx2fLaSuopqv3OeMO
c75OGuMf+Upvmhn/DtMU57lV1e/Pm4yN3eu3rmlzH/V8BZf13xo6HEdHW5/9
hT7+n7fY/T8/9TVDHxK/YS3eadYOI+pL1phqueouF8sjP9Trjl0jNkjT7br/
rvxmY2ZMt2nL+RNPrH7B6J5inbIK/Opn+r3n2n9j+4pcrE3+VC/HNx/w8qnx
iC6q+vaG/b/k5omtz9P9f/L2HZ959msrQN8rft/T35Mj/qXzdHpMRwH6n8R4
0z/q+XjigrImO9v1bV3+vBdbDyQ9vspr8de6TePJk3xbwnTX923nWX7laam0
yYmLRl293v/HjPvr87/S+5WUjkcZPzD2B7G2AMf3mXqWynJUnugbfV2vGx/9
354VVfaIbTLOu/97Oi6+7xlLup2PMWL5Xv4H/bffvf478z297PfRA95eTIff
YeOxXs1oi4LRDjdfqjg/UwAAAPisTvxYHRtq6Hoo85ze2qRy33qOYDKHfuH4
fpZ5i2FHr6KX1PmV1/RqPoCl6+W7Vj1GHef3f2DS87x9a8WYr2TJ26w818mm
j6zQZfU93zjzsenOpK4zVNO70cx9vuyejdeH/pxxf1nP107u+ZDsPFL8zNvo
pRpr0/9m1N1d89w4kHPzol5orDkephmTgs7MGT3vnRA/wehX2dZRFkf+1dDD
bM9RpKlLnzOb9X2n3/GbZ7/ljr5X7L7H+Y5NPp2n02M6CtD/zOmsojvMHCyV
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
frecfCeAPOvl7nVfAfpe0ftexnfEtsCbl7lJJ08+Z6VQ/Y8Ym7QoR2yTGWTf
8FJei5+Y/BtmpvMhXdblQ6bfveDkaXHbZK4xfZHx1c+3Jz7U40dm7oE32xm4
toLVz3Q5+uaDv2be1/He/+0x9q6wMtxAi41pmYM7HGPYdZPT/da4l0uyLVQf
X6b+QyxsSQerMerT4XfYfS4bjvHqSNtHd8IUl3Tw1N8YdeszTioAAIDSwuTP
Zss5uh/X9kYLtBB6Vx1fdmbOf5aNcXl/68fGGmvkPWOOr15bDjTIsYOmGHsz
q1fIusXd3+n76hbDzDt2XzLFKvacXlOmjbS/xLNT+PzWMrNu8fwFSfdL0z05
rrRFzxTm6OIeQ2dpH56Vy0BIJ2l6+Kqif26/ouq+aZocuEu9lvPaB5o6qVcs
2wcJ6Rnpfjsd2mbc333ysnI/uS7WzZB4/wYdf8G4v+PYReruG6eEs42WOvN9
r+nv2HXhQ0qklRcsRz8y9HaxzAzfc1r6Lek7K6avr496ByZd6BfsWp5Yxo0f
qvMlgebFcjP7laqh1t7unD70+Cwxe5v30VBCVLnm78j18oxVl03PUDPz27uR
RaU9C0s0ePk7hp53i5cGJ9/xmuffq+2ilQ4x7eaY1G76hl3VO/pesfuewK1L
KR23hqel6Gne0in2we7uXvF+lv3YlnTkt/8p+ezuaGRiGdTQyZZO6uvrpf7Q
QkDpiQRWXssTP9fvbz7zS71OpTh3hlyoUtLy1GFqu9FNQ6KM0PAuT4vdJg3s
x3QpnuV5455lTGcZ12xDYhn1R9U+L0g+/Z4zvVuqxzNtXXQ/tkpCcor6xDpt
PrhZv791dz11dEttxeYMgav+7wSzz8TTN7/UxzMh9ZB6Gp5jZBKLszFmfcG8
/nI3uqy+e446654w61vHrlDP5W+ReT7vfCxbYGw6G45do5nkulyHyfgUddYr
Z7/Om/a2sHGDYSsAAIBKQ1tzOdB0mep5sYR2nKPROF+HXA6/m2EXUHSl9ynK
6Oy67sDE2JHXOp78N9nGMNH5/czvirpAIzPeBpFelsGGr4m/P0xTWXQiP9+a
7n014/fnx3hzozSNd7/Oje+1S9d5JRh9eNMm2qRemu4wlFwz9KyM+9V0R9QN
Fm5/L+O+pke/5jReE8NabJQa9jzJqbtqOtn+qWX9S6BB7by+9N2na2jbtm36
95898zFfp7NlhQbbjnD9Te9v/VR814qxH13Sefa/483HWmqKGmotfvh3X6GH
3B+LdXnjNDdNG3c30FB0lfuU8+94yXNK3fvKaxeH+TELbEDfK3bfW7GvS1k/
95fO92JObQVKWvLX/4x8btJlxdP6t45w7W1e0hNseQmJL6h5z+aM70tz/JA4
L99r+bt1n4VbeVoabdJAtxWIcmvgdmYftBvTzSxRzymrXUB59lZ42jQfl68n
L9Gf9H0j1XIe5HFFz2tNlr0STvu/E1R/BZIdqOUkJ/1VdOb65/y8OxxjVqMf
0fHajZnvFr85FF+n1em3mPZfTVfv/8XTdyTW4p/x27JsB1/O+P1yyPDHcJ4T
GxIAAEAZk35E0ai2viHIvnsjkQhFwhGKJZxsSJTszTHlGfGKa2st4nsjkSjF
4wlKplKUFrLPBCXbu/RN6R3RWCLLflO/6ZV4SOfEce2ZDBt/wN8SligWVfIU
yxlgKC3HblLKMSrHQSoX0smHFFXrPxqNU2GTnqaE3v6i+nqcRiqZFNuf/1UO
o43Hcq+ZCOa6jCedb+x19p3C5Dnzs+h7wEqR2mIJp8ckD2PGvCoZk2LwieOh
KA/SYrrsWllx5al3WN8SUgkLyTkKh8O5x3QO0vq+1n8jYhlozyai0rvilBDr
MZVOUw61wiHB9H9JRj3UA7c80uswEo05qkOnY4wcE0Ytm6jYnkyvFlKUTCQp
neV7bsYyc1tOuLTnAwAAAKWPkErI9gp2jNP8AGXzWQ8A8Af6HgCPD478UAIA
AAAAlAqMf+xn9f2eS8r+VpypAyB/oO8B8Fihx0n2Gt8GAAAAAKCQMDGYND/a
Wuwpu1htAIAAQN8D4DGCiZO88ZyNPxcAAAAAgFLi93Rcm69c+JxmRxR/i8+1
cuItAQACBH0PgMpH8hn5DNeX39MbT9ADbDAAAAAAQAmzGvuEGg5u1/WXo62f
Yv8zAAUAfQ+ASidNIx2vU1NLG3V0dNCNGzfk/7a1tVBTUyfNoMMDAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAoAz5/wHL8+pp
    "], {{0, 454}, {1035, 
    0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  BaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{1035, 454},
  PlotRange->{{0, 1035}, {0, 454}}]], "Text",
 CellChangeTimes->{3.649165203820484*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"S", "[", 
   RowBox[{"m_", ",", "n_"}], "]"}], "=", 
  RowBox[{
   RowBox[{"Sum", "[", 
    RowBox[{
     FractionBox["1", "k"], ",", 
     RowBox[{"{", 
      RowBox[{"k", ",", 
       RowBox[{"n", "+", "1"}], ",", 
       RowBox[{"m", " ", "n"}]}], "}"}]}], "]"}], "-", 
   FractionBox[
    RowBox[{"m", "-", "1"}], 
    RowBox[{"2", "n"}]]}]}]], "Input",
 CellChangeTimes->{{3.649165237412812*^9, 3.6491652769805183`*^9}, {
  3.649165334968566*^9, 3.6491653359757833`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   FractionBox[
    RowBox[{
     RowBox[{"-", "1"}], "+", "m"}], 
    RowBox[{"2", " ", "n"}]]}], "-", 
  RowBox[{"PolyGamma", "[", 
   RowBox[{"0", ",", 
    RowBox[{"1", "+", "n"}]}], "]"}], "+", 
  RowBox[{"PolyGamma", "[", 
   RowBox[{"0", ",", 
    RowBox[{"1", "+", 
     RowBox[{"m", " ", "n"}]}]}], "]"}]}]], "Output",
 CellChangeTimes->{{3.64916524875742*^9, 3.649165277355101*^9}, {
   3.649165336477367*^9, 3.649165340269218*^9}, 3.649165409491334*^9, 
   3.6496711496475067`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"S", "[", 
   RowBox[{"m", ",", 
    RowBox[{"m", "  ", "k"}]}], "]"}], "//", 
  RowBox[{
   RowBox[{
    RowBox[{"Series", "[", 
     RowBox[{"#", ",", 
      RowBox[{"{", 
       RowBox[{"m", ",", "\[Infinity]", ",", "1"}], "}"}]}], "]"}], "/.", 
    RowBox[{"c_Floor", "\[Rule]", "0"}]}], "&"}]}]], "Input",
 CellChangeTimes->{{3.649165274257379*^9, 3.6491653204772177`*^9}, 
   3.6491653582793427`*^9, {3.649165416771253*^9, 3.649165416841127*^9}, {
   3.6496711520215187`*^9, 3.6496711537643213`*^9}}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", 
      FractionBox["1", 
       RowBox[{"2", " ", "k"}]]}], "-", 
     RowBox[{"Log", "[", 
      FractionBox["1", "m"], "]"}]}], ")"}], "+", 
   InterpretationBox[
    SuperscriptBox[
     RowBox[{"O", "[", 
      FractionBox["1", "m"], "]"}], "2"],
    SeriesData[$CellContext`m, 
     DirectedInfinity[1], {}, 0, 2, 1],
    Editable->False]}],
  SeriesData[$CellContext`m, 
   DirectedInfinity[1], {
   Rational[-1, 2]/$CellContext`k - Log[$CellContext`m^(-1)]}, 0, 2, 1],
  Editable->False]], "Output",
 CellChangeTimes->{{3.649165282731015*^9, 3.649165358748042*^9}, {
  3.649165410066819*^9, 3.649165417337834*^9}, {3.649671152457079*^9, 
  3.649671154145878*^9}}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"\[DoubleStruckCapitalI]", "=", "IdentityMatrix"}], ";"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"CircleTimes", "=", "KroneckerProduct"}], ";"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"e", "[", 
   RowBox[{"i_", ",", "dim_"}], "]"}], ":=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"Boole", "[", 
      RowBox[{"j", "\[Equal]", "i"}], "]"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"j", ",", "dim"}], "}"}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.649166046620311*^9, 3.64916604689356*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Monitor", "[", 
   RowBox[{
    RowBox[{"Table", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"dim", "=", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"dimA", "=", "5"}], ")"}], "*", 
         RowBox[{"(", 
          RowBox[{"dimB", "=", "20"}], ")"}]}]}], ";", "\[IndentingNewLine]", 
       
       RowBox[{"X", "=", 
        RowBox[{
         RowBox[{
          RowBox[{"RandomReal", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"dim", ",", "1"}], "}"}]}], "]"}], "+", 
          RowBox[{"I", " ", 
           RowBox[{"RandomReal", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"dim", ",", "1"}], "}"}]}], "]"}]}]}], "//", "N"}]}], 
       ";", "\[IndentingNewLine]", 
       RowBox[{"\[Rho]", "=", 
        FractionBox[
         RowBox[{"X", ".", 
          RowBox[{"X", "\[HermitianConjugate]"}]}], 
         RowBox[{"Tr", "[", 
          RowBox[{"X", ".", 
           RowBox[{"X", "\[HermitianConjugate]"}]}], "]"}]]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"\[Rho]A", "=", 
        RowBox[{
         UnderoverscriptBox["\[Sum]", 
          RowBox[{"b", "=", "1"}], "dimB"], 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"\[DoubleStruckCapitalI]", "[", "dimA", "]"}], 
             "\[CircleTimes]", 
             RowBox[{"e", "[", 
              RowBox[{"b", ",", "dimB"}], "]"}]}], ")"}], "\[Transpose]"}], 
          ".", "\[Rho]", ".", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"\[DoubleStruckCapitalI]", "[", "dimA", "]"}], 
            "\[CircleTimes]", 
            RowBox[{"e", "[", 
             RowBox[{"b", ",", "dimB"}], "]"}]}], ")"}]}]}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"SA", "=", 
          RowBox[{"-", 
           RowBox[{
            RowBox[{"Eigenvalues", "[", "\[Rho]A", "]"}], ".", 
            RowBox[{"Log", "[", 
             RowBox[{"Eigenvalues", "[", "\[Rho]A", "]"}], "]"}]}]}]}], ",", 
         RowBox[{"\[Rho]A2", "=", 
          RowBox[{
           RowBox[{"Eigenvalues", "[", "\[Rho]A", "]"}], ".", 
           RowBox[{"Eigenvalues", "[", "\[Rho]A", "]"}]}]}]}], "}"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"n", ",", "1000"}], "}"}]}], "]"}], ",", 
    RowBox[{"ProgressIndicator", "[", 
     RowBox[{"n", ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", "1000"}], "}"}]}], "]"}]}], "]"}], "//", 
  "Mean"}]], "Input",
 CellChangeTimes->{{3.649165784306486*^9, 3.64916579915757*^9}, {
  3.649165912059144*^9, 3.649166032555427*^9}, {3.649166070003234*^9, 
  3.649166169631496*^9}, {3.6491664121711683`*^9, 3.6491664387047777`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1.500760227759089`", ",", "0.24295577616695066`"}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.649166102529092*^9, 3.649166194305372*^9}, {
  3.649166428931563*^9, 3.6491664430548553`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{
    RowBox[{"S", "[", 
     RowBox[{"dimA", ",", "dimB"}], "]"}], ",", 
    FractionBox[
     RowBox[{"dimA", "+", "dimB"}], 
     RowBox[{
      RowBox[{"dimA", " ", "dimB"}], "+", "1"}]]}], "}"}], "//", 
  "N"}]], "Input",
 CellChangeTimes->{{3.649166115026264*^9, 3.649166122096628*^9}, {
  3.649166475448769*^9, 3.649166476825841*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1.4896378604959382`", ",", "0.24752475247524752`"}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.64916612020428*^9, 3.649166194874671*^9}, 
   3.649166444848935*^9, 3.649166477570161*^9}]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1440, 852},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
ShowSelection->True,
Magnification:>FEPrivate`If[
  FEPrivate`Equal[FEPrivate`$VersionNumber, 6.], 1.5, 1.5 Inherited],
FrontEndVersion->"10.2 for Mac OS X x86 (32-bit, 64-bit Kernel) (July 29, \
2015)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[579, 22, 166, 2, 95, "Section"],
Cell[748, 26, 505, 11, 69, "Input"],
Cell[1256, 39, 230, 3, 46, "Text"],
Cell[CellGroupData[{
Cell[1511, 46, 1534, 38, 194, "Input"],
Cell[3048, 86, 461, 6, 43, "Output"]
}, Open  ]],
Cell[3524, 95, 375, 11, 44, "Input"],
Cell[3902, 108, 160, 3, 46, "Text"],
Cell[4065, 113, 987, 26, 43, "Input"],
Cell[5055, 141, 575, 13, 73, "Input"],
Cell[5633, 156, 1008, 26, 86, "Input"],
Cell[6644, 184, 878, 24, 86, "Input"],
Cell[7525, 210, 1037, 28, 86, "Input"],
Cell[8565, 240, 396, 10, 43, "Input"],
Cell[CellGroupData[{
Cell[8986, 254, 1394, 44, 119, "Input"],
Cell[10383, 300, 995, 13, 43, "Output"],
Cell[11381, 315, 996, 13, 43, "Output"],
Cell[12380, 330, 995, 13, 43, "Output"],
Cell[13378, 345, 995, 13, 43, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[14410, 363, 77, 1, 43, "Input"],
Cell[14490, 366, 452, 7, 43, "Output"]
}, Open  ]],
Cell[14957, 376, 297, 5, 46, "Text"],
Cell[CellGroupData[{
Cell[15279, 385, 350, 9, 43, "Input"],
Cell[15632, 396, 449, 6, 43, "Output"]
}, Open  ]],
Cell[16096, 405, 266, 5, 46, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[16399, 415, 214, 3, 95, "Section"],
Cell[16616, 420, 64079, 1056, 530, "Text"],
Cell[CellGroupData[{
Cell[80720, 1480, 511, 16, 69, "Input"],
Cell[81234, 1498, 532, 16, 65, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[81803, 1519, 540, 14, 44, "Input"],
Cell[82346, 1535, 763, 23, 66, "Output"]
}, Open  ]],
Cell[83124, 1561, 616, 19, 94, "Input"],
Cell[CellGroupData[{
Cell[83765, 1584, 3018, 83, 313, "Input"],
Cell[86786, 1669, 229, 5, 43, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[87052, 1679, 391, 12, 70, "Input"],
Cell[87446, 1693, 226, 5, 43, "Output"]
}, Open  ]]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
