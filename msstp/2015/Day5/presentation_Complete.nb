(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    438033,       8545]
NotebookOptionsPosition[    431922,       8350]
NotebookOutlinePosition[    432838,       8382]
CellTagsIndexPosition[    432758,       8377]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["", "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell["Packages", "Section",
 CellChangeTimes->{{3.6490198441901093`*^9, 3.6490198528872685`*^9}, {
  3.6491039122816877`*^9, 3.6491039182605696`*^9}}],

Cell["\<\
Almost always useful: different notebooks for different parameters/options, \
simulations versus analysing \
\>", "Subsection",
 CellChangeTimes->{{3.649019908752827*^9, 3.6490199130798907`*^9}, {
  3.649103923536899*^9, 3.649103959820616*^9}}],

Cell["\<\
Easy to make: convert initialisation cells to package
Trick: Edit --> Preferences --> Advanced --> Option Inspector -->  Notebook \
options --> 
          File Options --> Autogenerated package -->  Manual
\
\>", "Subsection",
 CellChangeTimes->{{3.6491039609444237`*^9, 3.649103989610711*^9}, {
  3.6491040234887342`*^9, 3.6491040674667525`*^9}}],

Cell[CellGroupData[{

Cell["\<\
Either put parameters/options before loading package or after\
\>", "Subsection",
 CellChangeTimes->{{3.649104075146948*^9, 3.649104091522264*^9}, {
  3.6495905969005365`*^9, 3.649590596973587*^9}}],

Cell["Example:", "Text",
 CellChangeTimes->{{3.649104175646567*^9, 3.6491041765802097`*^9}, {
  3.649105347531686*^9, 3.649105350595008*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"SetDirectory", "[", 
   RowBox[{"NotebookDirectory", "[", "]"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"<<", "MERA`"}]}], "Input",
 CellChangeTimes->{{3.608897198745143*^9, 3.608897219229314*^9}, 
   3.616231103652793*^9, 3.6162354926218276`*^9, 3.616400747616225*^9, {
   3.6194133132513437`*^9, 3.6194133138973804`*^9}, 3.621976963886171*^9, 
   3.6484374729054546`*^9, {3.6491041546830034`*^9, 3.6491041576150646`*^9}, {
   3.649105361480112*^9, 3.649105375723316*^9}, {3.6491054166640053`*^9, 
   3.6491054168881807`*^9}, {3.6495207448414526`*^9, 3.649520755087695*^9}}],

Cell[BoxData[
 RowBox[{"domodel", "[", 
  RowBox[{"initIsing", ",", "6"}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"analysefile", "[", "\"\<Ising6.dat\>\"", " ", "]"}]], "Input"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell["Ncon", "Section",
 CellChangeTimes->{{3.6492693894817104`*^9, 3.6492693918673973`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"contract", "[", 
   RowBox[{"a_", ",", "b_", ",", "links_"}], "]"}], ":=", 
  RowBox[{"(", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
      RowBox[{
      "contract", " ", "takes", " ", "2", " ", "tensors", " ", "and", " ", 
       "the", " ", "links", " ", "which", " ", "have", " ", "to", " ", "be", 
       " ", "contracted"}], ";", " ", 
      RowBox[{"it", " ", "then", " ", "rearranges", " ", 
       RowBox[{"(", 
        RowBox[{"with", " ", "Flatten"}], ")"}], " ", "the", " ", "tensors", 
       " ", "in", " ", "such", " ", "a", " ", "way", " ", "that", " ", "the", 
       " ", "summation", " ", "can", " ", "be", " ", "done", " ", "using", 
       " ", "an", " ", "ordinary", " ", "dot", " ", "product"}]}], ",", " ", 
     RowBox[{
      RowBox[{"i", ".", "e", ".", " ", "A", ".", "B"}], " ", "sums", " ", 
      "the", " ", "last", " ", "index", " ", "of", " ", "A", " ", "with", " ",
       "the", " ", "first", " ", "index", " ", "of", " ", "B"}]}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"rearrangea", "=", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"List", "/@", 
        RowBox[{"Select", "[", 
         RowBox[{
          RowBox[{"Range", "[", 
           RowBox[{"ArrayDepth", "[", "a", "]"}], "]"}], ",", 
          RowBox[{"m", "\[Function]", 
           RowBox[{"!", 
            RowBox[{"MemberQ", "[", 
             RowBox[{
              RowBox[{"links", "\[LeftDoubleBracket]", 
               RowBox[{";;", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
              "m"}], "]"}]}]}]}], "]"}]}], ")"}], "~", "Join", "~", 
      RowBox[{"{", 
       RowBox[{"links", "\[LeftDoubleBracket]", 
        RowBox[{";;", ",", "1"}], "\[RightDoubleBracket]"}], "}"}]}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"rearrangeb", "=", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"links", "\[LeftDoubleBracket]", 
        RowBox[{";;", ",", "2"}], "\[RightDoubleBracket]"}], "}"}], "~", 
      "Join", "~", 
      RowBox[{"(", 
       RowBox[{"List", "/@", 
        RowBox[{"Select", "[", 
         RowBox[{
          RowBox[{"Range", "[", 
           RowBox[{"ArrayDepth", "[", "b", "]"}], "]"}], ",", 
          RowBox[{"m", "\[Function]", 
           RowBox[{"!", 
            RowBox[{"MemberQ", "[", 
             RowBox[{
              RowBox[{"links", "\[LeftDoubleBracket]", 
               RowBox[{";;", ",", "2"}], "\[RightDoubleBracket]"}], ",", 
              "m"}], "]"}]}]}]}], "]"}]}], ")"}]}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Flatten", "[", 
      RowBox[{"a", ",", "rearrangea"}], "]"}], ".", 
     RowBox[{"Flatten", "[", 
      RowBox[{"b", ",", "rearrangeb"}], "]"}]}]}], "\[IndentingNewLine]", 
   ")"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"out", "[", 
   RowBox[{"a_", ",", "b_"}], "]"}], ":=", 
  RowBox[{"contract", "[", 
   RowBox[{
    RowBox[{"{", "a", "}"}], ",", 
    RowBox[{"{", "b", "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"{", 
      RowBox[{"1", ",", "1"}], "}"}], "}"}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.6043404813683443`*^9, 3.604340493725051*^9}, {
   3.6043406952845793`*^9, 3.6043407212350636`*^9}, {3.6043415432030773`*^9, 
   3.60434164814108*^9}, {3.6043425332567053`*^9, 3.604342537168929*^9}, {
   3.604342568676731*^9, 3.6043426162884545`*^9}, {3.6043427314380407`*^9, 
   3.6043427419576426`*^9}, {3.604344084038405*^9, 3.6043441130690656`*^9}, {
   3.604345399878667*^9, 3.6043454224209557`*^9}, {3.604345452540679*^9, 
   3.604345565696151*^9}, {3.604345650702013*^9, 3.604345695243561*^9}, {
   3.604345733715761*^9, 3.604345798640475*^9}, {3.6043458318383737`*^9, 
   3.6043459237726316`*^9}, {3.6043515322214165`*^9, 3.60435153298146*^9}, {
   3.604353106302449*^9, 3.6043531153119645`*^9}, {3.6043531984597197`*^9, 
   3.604353260958295*^9}, {3.604353390370697*^9, 3.6043533949819603`*^9}, {
   3.6043534491100564`*^9, 3.604353567059803*^9}, {3.604353604099921*^9, 
   3.604353623373024*^9}, {3.6043537292650805`*^9, 3.6043537318222265`*^9}, {
   3.604353761983952*^9, 3.604353974971134*^9}, {3.6043542590523825`*^9, 
   3.6043542872519956`*^9}, 3.604356792301276*^9, {3.604362123251189*^9, 
   3.6043621345208335`*^9}, {3.604419362238072*^9, 3.604419370356536*^9}, {
   3.6044209022871575`*^9, 3.6044209076564646`*^9}, {3.6044209556952124`*^9, 
   3.6044210084452295`*^9}, {3.6044210568339972`*^9, 3.6044210614722624`*^9}, 
   3.6044232590459566`*^9, {3.6044240086708326`*^9, 3.6044240188614154`*^9}, {
   3.604424312197193*^9, 3.6044243127632256`*^9}, {3.6044254690193596`*^9, 
   3.604425475520732*^9}, {3.60443709255274*^9, 3.6044371118788457`*^9}, {
   3.604664494647627*^9, 3.6046645112475767`*^9}, {3.6046663999956064`*^9, 
   3.6046664039578333`*^9}, {3.604666706403132*^9, 3.604666788946853*^9}, {
   3.6046692874317584`*^9, 3.6046692974903336`*^9}, {3.6046719961256866`*^9, 
   3.604671998329813*^9}, {3.604672029137575*^9, 3.6046720327647824`*^9}, 
   3.6046721960451217`*^9, {3.604672661099721*^9, 3.604672734445916*^9}, {
   3.6046729682922916`*^9, 3.6046730558482995`*^9}, {3.6046870349868603`*^9, 
   3.604687057566152*^9}, {3.604687215215169*^9, 3.6046872767286873`*^9}, {
   3.6046873072564335`*^9, 3.6046873318718414`*^9}, 3.604687586354397*^9, {
   3.60509365968259*^9, 3.605093664488865*^9}, {3.60509384151399*^9, 
   3.6050938781870875`*^9}, {3.60509393558337*^9, 3.6050939375954857`*^9}, {
   3.6050940552742167`*^9, 3.6050940789795723`*^9}, {3.6052718947113094`*^9, 
   3.605271973433812*^9}, {3.6052720700883403`*^9, 3.605272071519422*^9}, {
   3.605272106088399*^9, 3.6052721069834504`*^9}, {3.6052721980496593`*^9, 
   3.605272200794816*^9}, {3.605272260376224*^9, 3.6052723509494047`*^9}, {
   3.605272400547241*^9, 3.6052724017713113`*^9}, {3.605272453975297*^9, 
   3.6052724810038433`*^9}, {3.6052725342808905`*^9, 
   3.6052725356619697`*^9}, {3.605272626707177*^9, 3.605272646436305*^9}, {
   3.6052727395926332`*^9, 3.6052727597447863`*^9}, {3.6052728144369144`*^9, 
   3.605272839478347*^9}, 3.6052770911025257`*^9, {3.605277549970772*^9, 
   3.605277551620866*^9}, {3.6088974908238487`*^9, 3.6088974928719654`*^9}, {
   3.622822244531176*^9, 3.622822280332484*^9}, 3.6228294643680105`*^9, {
   3.6228303011930666`*^9, 3.6228303049657326`*^9}, {3.6228355703977456`*^9, 
   3.622835580667004*^9}, {3.647783129816166*^9, 3.647783243322394*^9}, 
   3.648140570939349*^9, {3.6491023641160927`*^9, 3.6491023881617303`*^9}, {
   3.6491058485099754`*^9, 3.6491058495156746`*^9}, {3.6491059855943756`*^9, 
   3.6491059953467665`*^9}, {3.6495202790836115`*^9, 
   3.6495204368471293`*^9}, {3.649520942675306*^9, 3.6495209443555083`*^9}, {
   3.6495209978302994`*^9, 3.6495210211317587`*^9}, {3.6495246673535676`*^9, 
   3.6495246681791506`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"trace", "[", 
   RowBox[{"a_", ",", "links_", ",", 
    RowBox[{"print_:", "True"}]}], "]"}], ":=", 
  RowBox[{"(", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"If", "[", 
     RowBox[{"print", ",", 
      RowBox[{"Print", "[", "\"\<taking trace\>\"", "]"}]}], "]"}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"rearrange", "=", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"links", "\[LeftDoubleBracket]", 
        RowBox[{";;", ",", "1"}], "\[RightDoubleBracket]"}], "}"}], "~", 
      "Join", "~", 
      RowBox[{"{", 
       RowBox[{"links", "\[LeftDoubleBracket]", 
        RowBox[{";;", ",", "2"}], "\[RightDoubleBracket]"}], "}"}], "~", 
      "Join", "~", 
      RowBox[{"(", 
       RowBox[{"List", "/@", 
        RowBox[{"Select", "[", 
         RowBox[{
          RowBox[{"Range", "[", 
           RowBox[{"ArrayDepth", "[", "a", "]"}], "]"}], ",", 
          RowBox[{"m", "\[Function]", 
           RowBox[{"!", 
            RowBox[{"MemberQ", "[", 
             RowBox[{
              RowBox[{"Flatten", "[", 
               RowBox[{
               "links", "\[LeftDoubleBracket]", ";;", 
                "\[RightDoubleBracket]"}], "]"}], ",", "m"}], "]"}]}]}]}], 
         "]"}]}], ")"}]}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"Tr", "[", 
     RowBox[{
      RowBox[{"Flatten", "[", 
       RowBox[{"a", ",", "rearrange"}], "]"}], ",", "Plus", ",", "2"}], 
     "]"}]}], "\[IndentingNewLine]", ")"}]}]], "Input",
 CellChangeTimes->{{3.6043404813683443`*^9, 3.604340493725051*^9}, {
   3.6043406952845793`*^9, 3.6043407212350636`*^9}, {3.6043415432030773`*^9, 
   3.60434164814108*^9}, {3.6043425332567053`*^9, 3.604342537168929*^9}, {
   3.604342568676731*^9, 3.6043426162884545`*^9}, {3.6043427314380407`*^9, 
   3.6043427419576426`*^9}, {3.604344084038405*^9, 3.6043441130690656`*^9}, {
   3.604345399878667*^9, 3.6043454224209557`*^9}, {3.604345452540679*^9, 
   3.604345565696151*^9}, {3.604345650702013*^9, 3.604345695243561*^9}, {
   3.604345733715761*^9, 3.604345798640475*^9}, {3.6043458318383737`*^9, 
   3.6043459237726316`*^9}, {3.6043515322214165`*^9, 3.60435153298146*^9}, {
   3.604353106302449*^9, 3.6043531153119645`*^9}, {3.6043531984597197`*^9, 
   3.604353260958295*^9}, {3.604353390370697*^9, 3.6043533949819603`*^9}, {
   3.6043534491100564`*^9, 3.604353567059803*^9}, {3.604353604099921*^9, 
   3.604353623373024*^9}, {3.6043537292650805`*^9, 3.6043537318222265`*^9}, {
   3.604353761983952*^9, 3.604353974971134*^9}, {3.6043542590523825`*^9, 
   3.6043542872519956`*^9}, 3.604356792301276*^9, {3.604359027580127*^9, 
   3.6043590301142716`*^9}, {3.604359530133871*^9, 3.604359533102041*^9}, {
   3.6043595813478003`*^9, 3.6043596010859294`*^9}, 3.6043596594982705`*^9, {
   3.604359892756612*^9, 3.6043598956677785`*^9}, {3.604359993762389*^9, 
   3.6043599947934484`*^9}, {3.6045130607697573`*^9, 3.604513060925767*^9}, {
   3.6045131015570908`*^9, 3.6045131033241916`*^9}, {3.604664543776437*^9, 
   3.6046645484957066`*^9}, {3.6082924216292343`*^9, 
   3.6082924304537387`*^9}, {3.6495205766639714`*^9, 3.649520579896248*^9}, {
   3.6495211664604883`*^9, 3.6495211688161535`*^9}, {3.6495212020366364`*^9, 
   3.649521229818285*^9}, {3.6495214350683784`*^9, 3.6495214383607073`*^9}, {
   3.6495215264249454`*^9, 3.649521583833517*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ncon", "[", 
   RowBox[{"tensors_", ",", "legs_", ",", "sequence_"}], "]"}], ":=", 
  RowBox[{"(", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"tens1", ",", "legs1"}], "}"}], "=", 
     RowBox[{"{", 
      RowBox[{"tensors", ",", "legs"}], "}"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"For", "[", 
     RowBox[{
      RowBox[{"inc", "=", "1"}], ",", 
      RowBox[{"inc", "\[LessEqual]", 
       RowBox[{"Length", "[", "sequence", "]"}]}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{"contr1", ",", "contr2"}], "}"}], "=", 
        RowBox[{
         RowBox[{"Position", "[", 
          RowBox[{"legs1", ",", 
           RowBox[{
           "sequence", "\[LeftDoubleBracket]", "inc", 
            "\[RightDoubleBracket]"}]}], "]"}], "\[LeftDoubleBracket]", 
         RowBox[{";;", ",", "1"}], "\[RightDoubleBracket]"}]}], ";", 
       RowBox[{"(*", 
        RowBox[{"tensors", " ", "to", " ", "be", " ", "contracted"}], "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"links", "=", 
          RowBox[{"{", "}"}]}], ",", 
         RowBox[{"(*", 
          RowBox[{
          "look", " ", "if", " ", "we", " ", "are", " ", "to", " ", 
           "contract", " ", "more", " ", "than", " ", "one", " ", "leg"}], 
          "*)"}], "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"Length", "[", "links", "]"}], "+", "inc"}], 
           "\[LessEqual]", 
           RowBox[{"Length", "[", "sequence", "]"}]}], "&&", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"contr1", ",", "contr2"}], "}"}], "\[Equal]", 
           RowBox[{
            RowBox[{"Position", "[", 
             RowBox[{"legs1", ",", 
              RowBox[{"sequence", "\[LeftDoubleBracket]", 
               RowBox[{
                RowBox[{"Length", "[", "links", "]"}], "+", "inc"}], 
               "\[RightDoubleBracket]"}]}], "]"}], "\[LeftDoubleBracket]", 
            RowBox[{";;", ",", "1"}], "\[RightDoubleBracket]"}]}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"AppendTo", "[", 
          RowBox[{"links", ",", 
           RowBox[{
            RowBox[{"Position", "[", 
             RowBox[{"legs1", ",", 
              RowBox[{"sequence", "\[LeftDoubleBracket]", 
               RowBox[{
                RowBox[{"Length", "[", "links", "]"}], "+", "inc"}], 
               "\[RightDoubleBracket]"}]}], "]"}], "\[LeftDoubleBracket]", 
            RowBox[{";;", ",", "2"}], "\[RightDoubleBracket]"}]}], "]"}]}], 
        "]"}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"nlegs", "=", 
        RowBox[{"Select", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
           "legs1", "\[LeftDoubleBracket]", "contr1", 
            "\[RightDoubleBracket]"}], "~", "Join", "~", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"contr1", "\[NotEqual]", "contr2"}], ",", 
             RowBox[{
             "legs1", "\[LeftDoubleBracket]", "contr2", 
              "\[RightDoubleBracket]"}], ",", 
             RowBox[{"{", "}"}]}], "]"}]}], ",", 
          RowBox[{
           RowBox[{"!", 
            RowBox[{"MemberQ", "[", 
             RowBox[{
              RowBox[{"sequence", "\[LeftDoubleBracket]", 
               RowBox[{"inc", ";;", 
                RowBox[{"inc", "+", 
                 RowBox[{"Length", "[", "links", "]"}], "-", "1"}]}], 
               "\[RightDoubleBracket]"}], ",", "#"}], "]"}]}], "&"}]}], 
         "]"}]}], ";", " ", 
       RowBox[{"(*", 
        RowBox[{"combine", " ", "legs"}], "*)"}], "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"contr1", "\[Equal]", "contr2"}], ",", 
         RowBox[{"(*", 
          RowBox[{"trace", ",", " ", 
           RowBox[{
           "remove", " ", "tensor", " ", "and", " ", "add", " ", "traced"}]}],
           "*)"}], "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"tens1", "=", 
           RowBox[{
            RowBox[{"Drop", "[", 
             RowBox[{"tens1", ",", 
              RowBox[{"{", "contr2", "}"}]}], "]"}], "~", "Join", "~", 
            RowBox[{"{", 
             RowBox[{"trace", "[", 
              RowBox[{
               RowBox[{
               "tens1", "\[LeftDoubleBracket]", "contr1", 
                "\[RightDoubleBracket]"}], ",", "links", ",", 
               RowBox[{
                RowBox[{"Length", "[", "tensors", "]"}], ">", "1"}]}], "]"}], 
             "}"}]}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"legs1", "=", 
           RowBox[{
            RowBox[{"Drop", "[", 
             RowBox[{"legs1", ",", 
              RowBox[{"{", "contr2", "}"}]}], "]"}], "~", "Join", "~", 
            RowBox[{"{", "nlegs", "}"}]}]}], ";"}], "\[IndentingNewLine]", 
         ",", 
         RowBox[{"(*", 
          RowBox[{"contract", ",", " ", 
           RowBox[{
           "remove", " ", "tensor", " ", "and", " ", "add", " ", 
            "contracted"}]}], "*)"}], "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"tens1", "=", 
           RowBox[{
            RowBox[{"Drop", "[", 
             RowBox[{
              RowBox[{"Drop", "[", 
               RowBox[{"tens1", ",", 
                RowBox[{"{", "contr2", "}"}]}], "]"}], ",", 
              RowBox[{"{", "contr1", "}"}]}], "]"}], "~", "Join", "~", 
            RowBox[{"{", 
             RowBox[{"contract", "[", 
              RowBox[{
               RowBox[{
               "tens1", "\[LeftDoubleBracket]", "contr1", 
                "\[RightDoubleBracket]"}], ",", 
               RowBox[{
               "tens1", "\[LeftDoubleBracket]", "contr2", 
                "\[RightDoubleBracket]"}], ",", "links"}], "]"}], "}"}]}]}], 
          ";", "\[IndentingNewLine]", 
          RowBox[{"legs1", "=", 
           RowBox[{
            RowBox[{"Drop", "[", 
             RowBox[{
              RowBox[{"Drop", "[", 
               RowBox[{"legs1", ",", 
                RowBox[{"{", "contr2", "}"}]}], "]"}], ",", 
              RowBox[{"{", "contr1", "}"}]}], "]"}], "~", "Join", "~", 
            RowBox[{"{", "nlegs", "}"}]}]}]}]}], "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"inc", "+=", 
        RowBox[{"Length", "[", "links", "]"}]}]}]}], "]"}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"While", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Length", "[", "legs1", "]"}], ">", "1"}], ",", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"outer", " ", "product"}], ",", " ", 
        RowBox[{"only", " ", "at", " ", "end"}]}], "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"tens1", "=", 
        RowBox[{
         RowBox[{"Drop", "[", 
          RowBox[{"tens1", ",", "2"}], "]"}], "~", "Join", "~", 
         RowBox[{"{", 
          RowBox[{"out", "[", 
           RowBox[{
            RowBox[{
            "tens1", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
            ",", 
            RowBox[{
            "tens1", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}],
            "]"}], "}"}]}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"legs1", "=", 
        RowBox[{
         RowBox[{"Drop", "[", 
          RowBox[{"legs1", ",", "2"}], "]"}], "~", "Join", "~", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{
           "legs1", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
           "~", "Join", "~", 
           RowBox[{
           "legs1", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], 
          "}"}]}]}]}]}], "]"}], ";", "\[IndentingNewLine]", 
    RowBox[{"(*", 
     RowBox[{
      RowBox[{"rearranging", " ", "legs", " ", "according", " ", "to"}], " ", 
      "-", "legs"}], "*)"}], "\[IndentingNewLine]", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Length", "[", 
        RowBox[{
        "legs1", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
        "]"}], ">", "0"}], ",", 
      RowBox[{"Transpose", "[", 
       RowBox[{
        RowBox[{
        "tens1", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], ",", 
        RowBox[{"-", 
         RowBox[{
         "legs1", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}]}], 
       "]"}], ",", 
      RowBox[{
      "tens1", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], 
     "]"}]}], "\[IndentingNewLine]", ")"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ncon", "[", 
   RowBox[{"tensors_", ",", "legs_"}], "]"}], ":=", 
  RowBox[{"ncon", "[", 
   RowBox[{"tensors", ",", "legs", ",", 
    RowBox[{"Union", "[", 
     RowBox[{"Select", "[", 
      RowBox[{
       RowBox[{"Flatten", "[", "legs", "]"}], ",", 
       RowBox[{
        RowBox[{"#", ">", "0"}], "&"}]}], "]"}], "]"}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.6043540266910925`*^9, 3.604354047727296*^9}, {
   3.6043543246161327`*^9, 3.604354359276115*^9}, {3.6043544796259985`*^9, 
   3.604354485314324*^9}, {3.6043546107684994`*^9, 3.604354624530287*^9}, {
   3.6043549879260716`*^9, 3.6043549959725323`*^9}, {3.6043552149320555`*^9, 
   3.604355224289591*^9}, {3.604355434481613*^9, 3.6043555395996256`*^9}, {
   3.6043556101396604`*^9, 3.604355630871846*^9}, {3.604355664124748*^9, 
   3.604355727906396*^9}, {3.604355789995948*^9, 3.6043559024343786`*^9}, {
   3.6043559535923047`*^9, 3.604356038466159*^9}, {3.6043561516056304`*^9, 
   3.6043561921529493`*^9}, {3.6043562523573933`*^9, 3.604356253021431*^9}, {
   3.604356293059721*^9, 3.6043563369522314`*^9}, {3.6043563928794303`*^9, 
   3.604356401804941*^9}, {3.6043564631624503`*^9, 3.6043564720529585`*^9}, {
   3.6043565820082483`*^9, 3.604356589423672*^9}, {3.6043566209234743`*^9, 
   3.6043566393665285`*^9}, {3.604356824981145*^9, 3.604356825955201*^9}, {
   3.6043571687288065`*^9, 3.604357189680005*^9}, {3.604357256811845*^9, 
   3.604357257555887*^9}, {3.604357308078777*^9, 3.60435730864981*^9}, {
   3.6043574144848633`*^9, 3.6043574270725827`*^9}, {3.604357874095151*^9, 
   3.6043578896760426`*^9}, {3.6043590863974905`*^9, 3.604359089037642*^9}, {
   3.604359141407637*^9, 3.604359321639946*^9}, {3.6043600991054144`*^9, 
   3.604360106566841*^9}, {3.60436015322151*^9, 3.6043601647091665`*^9}, {
   3.6043602103767786`*^9, 3.60436024780392*^9}, {3.6043616059426003`*^9, 
   3.604361694304655*^9}, {3.604361804070933*^9, 3.604361884699545*^9}, {
   3.604361956218635*^9, 3.604361984749267*^9}, {3.604362024275528*^9, 
   3.60436202744971*^9}, {3.6043620635897765`*^9, 3.604362063741785*^9}, {
   3.6043621379480295`*^9, 3.6043621498827124`*^9}, {3.6043628584482403`*^9, 
   3.604362874570162*^9}, {3.6043629047068853`*^9, 3.6043629134613867`*^9}, {
   3.604362950640513*^9, 3.604362994100999*^9}, {3.604363041838729*^9, 
   3.6043631310198298`*^9}, 3.604434695818655*^9, {3.6044355532106953`*^9, 
   3.6044355585860023`*^9}, {3.6044359420499353`*^9, 3.604435981487191*^9}, {
   3.6044361733481646`*^9, 3.604436181673641*^9}, {3.6044364339760723`*^9, 
   3.604436488588196*^9}, 3.604437553377098*^9, {3.6044377684263983`*^9, 
   3.604437772411626*^9}, {3.6046646441611786`*^9, 3.604664649770499*^9}, {
   3.604664696907195*^9, 3.6046647072077847`*^9}, {3.60466479715893*^9, 
   3.6046649907350016`*^9}, {3.604665044449074*^9, 3.60466508809657*^9}, {
   3.60466512288756*^9, 3.6046651913884783`*^9}, {3.604665468916352*^9, 
   3.604665561102625*^9}, {3.6046656385920568`*^9, 3.6046656449224186`*^9}, {
   3.6046657430490313`*^9, 3.6046657726837263`*^9}, 3.6046658047725616`*^9, {
   3.604665882845027*^9, 3.604665882930032*^9}, {3.6046660401310234`*^9, 
   3.604666045242316*^9}, {3.6046661315542526`*^9, 3.604666138522651*^9}, {
   3.604666259919595*^9, 3.6046662683070745`*^9}, {3.604666302881052*^9, 
   3.6046663172128716`*^9}, {3.6046664756519337`*^9, 3.6046665089048357`*^9}, 
   3.6046665764366984`*^9, {3.604669132099874*^9, 3.604669161037529*^9}, {
   3.6046727613734565`*^9, 3.604672773273137*^9}, {3.6046734112246256`*^9, 
   3.6046734646986847`*^9}, {3.6046735506436005`*^9, 3.604673554399815*^9}, {
   3.6046749000587826`*^9, 3.6046749223620577`*^9}, {3.6046831014158735`*^9, 
   3.604683101621885*^9}, {3.6082924410783463`*^9, 3.6082924458146176`*^9}, {
   3.6219733261371036`*^9, 3.621973334171563*^9}, 3.648141139394475*^9, {
   3.6491000105490637`*^9, 3.6491000629291534`*^9}, {3.6491003027470636`*^9, 
   3.64910032013412*^9}, {3.6491004414340086`*^9, 3.649100450035098*^9}, {
   3.64910061753971*^9, 3.6491006280051203`*^9}, {3.6491023455547447`*^9, 
   3.64910235546941*^9}, {3.6491060444758177`*^9, 3.6491060726355467`*^9}, {
   3.6491069008917255`*^9, 3.649106906731953*^9}, {3.6495238315013256`*^9, 
   3.649523859608205*^9}, {3.649524217763796*^9, 3.649524227024328*^9}, {
   3.6495245704290023`*^9, 3.6495246069027824`*^9}}],

Cell[TextData[StyleBox["IdentityMatrix, change order, translational operator",
 FontColor->GrayLevel[0.5]]], "Text",
 CellChangeTimes->{{3.6495307606402607`*^9, 3.6495307643368587`*^9}, {
  3.649549677595624*^9, 3.649549679037715*^9}, {3.649593220223274*^9, 
  3.6495932254999685`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Chi]", "=", "18"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"w", ",", "u", ",", "operator"}], "}"}], "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Random", "[", "]"}], ",", 
     RowBox[{"{", "3", "}"}], ",", 
     RowBox[{"{", "\[Chi]", "}"}], ",", 
     RowBox[{"{", "\[Chi]", "}"}], ",", 
     RowBox[{"{", "\[Chi]", "}"}], ",", 
     RowBox[{"{", "\[Chi]", "}"}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.6496803562091694`*^9, 3.649680377270039*^9}, {
  3.6496804429520273`*^9, 3.6496804430570755`*^9}, {3.6496806362251787`*^9, 
  3.6496806554577713`*^9}}],

Cell[BoxData[
 RowBox[{"AbsoluteTiming", "[", 
  RowBox[{
   RowBox[{"nconp", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"w", ",", 
       RowBox[{"w", "\[Conjugate]"}], ",", "w", ",", 
       RowBox[{"w", "\[Conjugate]"}], ",", "u", ",", 
       RowBox[{"u", "\[Conjugate]"}], ",", "operator"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "1"}], ",", "1", ",", "2", ",", "3"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "3"}], ",", "1", ",", "2", ",", "9"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "2"}], ",", "4", ",", "11", ",", "12"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "4"}], ",", "10", ",", "11", ",", "12"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"3", ",", "4", ",", "5", ",", "6"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"7", ",", "8", ",", "9", ",", "10"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"5", ",", "6", ",", "7", ",", "8"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "5", ",", "6", ",", "7", ",", "8", ",", "1", ",", "2", ",", "3", ",", 
       "9", ",", "11", ",", "12", ",", "4", ",", "10"}], "}"}]}], "]"}], "//",
    "Dimensions"}], "]"}]], "Input",
 CellChangeTimes->{{3.6496807008700857`*^9, 3.649680701305365*^9}}],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJzsnQV8G9fSxb9XZqbX9pW5SdNAwwxNw3GooYaZmdEOOMzMzGwncWI7dpiZ
mZnJcZxkPp0rryrLkizJsleSz7+/W8fr1Wp2dXd1z525M1/XaFqqznP/93//
1/IVw/9KVW+bp0WL6u1Lv2D4JW/7VrVrPG/4x27D3zsY/oGNhBBCCCGEEEJ8
DyGEEEIIIYQQ4hNQ5xFCCCGEEEKIb0GdRwghhBBCCCG+BXWe/ty8eVPOnTsn
ly5dkgcPHsizZ8/0NokQQgghhBDixVDn6cetW7ckMjJSBg0aJK1bt5aAgADZ
unWrREdH620aIXbBXMTjx4/l/v37ao7i5MmTcvHiRfU7+y8hhBBCiP5Q5+nD
wYMHpVOnTpI6dWr54IMP5K233pIvvvhCJk6cqHx6hHgqly9flo0bN8qyZctk
+PDhkj17dvn++++lePHi6vd58+bJ9u3b5e7du3qbSgghhBCSYqHOS14Qozlt
2jTJly+ffPTRR7j+pvbSSy+pcTJ1HvFEjh07JmPHjpW///5bMmfOLGnSpJGv
vvoqTh/++uuvJVWqVJItWzZp2bKlbN68WW+zCSGEEEJSJNR5yQNi2TZs2KB8
eL/++mucsbHW3n77bRk9ejR1HvEoEF+8ZMkSqVSpknz33XdW+6619vrrr0vZ
smUlJCRExXgSQgghhJDkgzov6Tlz5ozygxQtWlSef/55NQb+5JNPJGvWrPLp
p59S5xGPBevwli9fLhkzZjT105dffll+/vlnyZIli+TKlUty586tfqI//+9/
/4uj9V544QXV79etWycxMTF6nw4hhBBCSIqBOi/pwBj51KlTKn4NGg6X+bXX
XpOffvpJevToIfv375cKFSpQ5xGP5enTp8oHrem7jz/+WPn1sAZvz549cvr0
aTl79qzq53v37pWBAwfKl19+GUfrvfHGG1K1alUV90kIIYQQQpIH6ryk4+HD
hzJmzBiVYwWXGHlWmjVrJmFhYSoWDlSvXp06j3g0HTt2lFdeeUXq1Kmjcq8g
v+ajR4+s7nvnzh2ZO3euystirvWQa2j27NlKNxJCCCGEkKSHOi/pQI759u3b
q3FusWLFZNGiRSqG05x//vmHOo94NJs2bVJxx0eOHHFof6xFHTx4sPz444+m
vo145X79+sm9e/eS2FpCCCGEEAKo85IO5J5ADooOHTrI+vXrre5DnUc8HcQf
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
l5kkA1HRj2Xt9mPSrM9cyfJPP+XjSm8j34pW+zxbzSGSv/kMKdZ1peu1z5O8
L4crPyPmVpCfJaMtrfdPH5UvCflZ/qw/VAZPD5NT56/r/bEQQgghhBA7uFvn
xTx+Kht2nZBWAxeqOsyIYdT8Hpbrl/7Nt2IYEzcz5iD0i42T1H0sbGN87Be7
tgrj4zwNY/MXooa7ZX6WKkZfiLZ+q2jjkTJidgTHx17G7XsPZcmaPSrfCvpx
6tJGP21mK2vxjGs3+6i1pQVUvpVVsWvxPLE/G7Wen6EvF+0YJPmaaOtPreQa
Ql+Ozc/yayl/5c/sPjpYdh85p/fHQ5zk7NmzUrt2bSldurSpNW3aVK5du5bo
Y8+bNy/OcdFmzpzpBquTjvDwcClTpoyUL19e1UHyBnbv3q1sRtu4caPe5sTj
5MmTUqNGjXh9wbK1aNFCbt68qbe5iuvXr6v7ICGba9asKadPn3bq2CtXrox3
nFGjRiXRmRBCSFzcqfMwJg6K3Ce1uk2XtOWNOUn+sJKD0JifwpjPBGuECrac
q2IiPc7vYaWVNDS/WDuRvzBv4ynKF2ktP4uWY0YbH+euOUh6jluhfJ3IP0o8
m0vX78i0oC1SttU4FacJfxbWrFnrz0ofYW1p3TFSsPUCKY61pTrkW3G6PwcY
1+xhjqVA8xmSvcbg2FxItvKzBMovfsb8LC0GzJfIHczP4k2cOnUKz/w47eWX
X5YTJ04k+tjt2rWLd2xoSk9m2rRpJluh+byByMhIk82w39M4ePBgvH5grb31
1lty//59vc1V3L59W1577TWH7D569KhTx+7Zs2e8Y0CjE0JIcuAunYeayjOW
b1Vj4t/K9JDUhjGxrThNaKIsKgfhGLVGSI03k6r2eVKNj/1j87MYxsfx8hda
iX2D3v21VID6d+uBC2XdzuPyIIrjY08E+VZOnr8mw2ZHSOFGI5RPGlrder6V
2LoJyLfSQMu3skbn/EFONlXHDzUjV0nBlnMkR63hsXmRbMUk9zHWRanQS6p3
mSbLIvbIrbsP9f7YiB0OHz6s/ArTp08XPz8/+fPPP02tVq1acvWqa3USHz58
qHQHjt2tW7c4x0WbNGmSe08kEZw7d07Zad7gU8LX3yuvvCLr1q3T28R44HNZ
tWpVHJvNdcPcuXP1NtEE9B3smzJlipQsWTJeX7BsFStWVD5gvAbzD3qA+Q28
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
+6S2/3RJX763pC6NfCs2/HjQ5IaWvdYwY76VLiFG31YK0nhx9F6sD7NIxyDJ
22iyZK06QNWHz2hj/Sm0Hp4X+WoPloCxy2XP0XPiYvp+kkio86xDnZf8oLY7
atXVrl1b5Z2cOXOmyofiKaDeHeyz1qpVqyajRo1SNiPvjKtQ5xFCkgt7Ou/q
zXuyIHSnVO08RcViIQfhHxVt5FsxtKxVB0qe+uOlcNslhvFwpJTuvUFK9Vyn
/u3XY20KbIbz7rlWSvVarxriOP9sMVty1B5h9IfEXjfL8XH6Chgfd1f5WeBD
3br/tMr5TxIH6lfMCN4mf7cZr+KO4W/C9Y+bH9ZYGw/bVH+OrX0OfVe6F/sz
+jHua9WXUVO9zkibfTlLlX5qTgj5WbBOt9XABbJ253F5+Oix3l0hxUGdZx3q
vORHq7/w+uuvy/379/U2Jx6oNWmvlsW1a4mvHUOdRwhJLqzpPNTMPXv5loxb
sF6KNx2lxsOYm483JjbTeYhJzFlnlPzVer7yeyB3Q7EuK1WcW4pvuA5dDdek
+2qVqz5f02mqjqAtnQcd/Udsbv8/KvWRhr1mSejmQ3L3QZRe3cSrQZ3Hk+ev
yag5kSqOENf19797WvVBKZ1X2TiXkbPuKCnYep6hP69UtRPYn419uTj6ctfV
qgamysVZY6hkqmS9L2dGXzZcz9/KGdef1uo+XYLW7pPb95ifJTnxdJ13+vRp
CQ0NdalhnZerUOclD/fu3ZPIyEj1ebVr107y5s0r1atXlxs3buhtWjxmz56t
7LPWihcvrnx5YWFhcvToUZffgzqPEJJcWOo8jImPnr4s/SavlgJ1h0iq0sa6
eFbzrcTRJv0lR82hkrvBOMnTcLzkrj9O5dlki231x6p1Tag9navuGLV+0d71
1PKzII4znUFjV2o/UeaH7uL42EmePn0mB05clB7jVqh8K7/FrsWze+2hV6r0
kxy1hql+DJ+e+vz07kOe1OqPV9dF9eXqDvRltWavp1qDWqbVWJkevFVu3vG8
uXxfpUWLFmpc+c0338j58+fddtxz587Jp59+qo7dvn17l4/Tr18/+c9//uNS
a9SokcvvS52XPBw6dEjl1sTnhbV4Dx48kKioKDWn7GnExMQo+6y1U6dOSbp0
6eS1116TVq1aufweiP3UPsNt27a50XpCCImLpc47ffGG9Bi/QnLXHKTWiSHf
SuYENJ55bnXEvGk56NmsNGs+D7taz5ifBT6oMq3GyQKD1otmDKeDPJNjZ69K
t9FB6lriGqavEGjMt1LFkevfT81vsD8n0JcdupZGrYd5i1/8ukuxpqNk9opt
cucefdTJgebPQ65Ad/rzMO794osv1LE7duzo8nECAgLsxsrZazVq1HD5fanz
kofdu3fLiy++qGweOHCg3ua4DGqpf/fdd+o86tWr5/JxxowZo46Ba7J582Y3
WkgIIXEx13m37j6UGcu3Sv56Q9RYLB1i21AXubL12m/x/SCBqraWsTa4/i1j
xZ6SsUJsQ+4TD7BJa9byFNrSztAayHH6i183qd19mmw/eEYex1DrJQR8n5OW
bJJ8dQbLt0U6S/ryNmI1bTRj7lhP6c+9/u3P+Km7Pf9eF4eeDWZzQOjHeL5U
6zRZNu45KTExT/XuKj7F1KlTpVKlSnEadNT06dNVjomHD12LCUDtsGbNmsU5
LnJpjB49Wh17z549Ltt84MABdQxX2tatW11+X+q8pEXri3Xq1JFx48apzwu+
PW/FXfXzjh07pq7FhAkTpGHDhnHuqVq1aiUqFpkQQswx13l7jl6QBr1mSZpy
PVSMFfIooJnm6x3063lG0+w2nAP+rZreNrnYKhvHxz8bxsc5agyUkfMilSYn
tkE80MGTl6RuwExVN+H3v3ubtJvjusRTWmxfVvdi/9if3tmf8TzJZDifVKV7
qDWoI+dGMn7Tzfz999/xfF6DBw9O9HGRB9/yuM8//7w8fuy9eXWo85IWrMGD
nW+++abL8wuehLt0njmIpba8r0JCQtxybEIIMdd5yIVXttVYSVXKX9JX7Cs5
6o6W3A0nSc56Y1XeEPiWssSO1Ty6IV+MYTyMvDC5YH/98ZKt+hDR8ijqbp+j
LfZ6Z8Xax9rDJV3V4ZK19hjpOWm1yh1JbAOdt3XfKSnXapz8VqGf5Kg/wdCP
x6l+gJhNr+kHmj6qOkBy1Blt6M+TJVe98aqen9fcj1o/rjZQctYdI3kaTZZ0
VYbJr2V6SY/xy1kn0s0MHTpUcubMGaehDjXyYGAtUHR0tEvHxVo8aEjz45Ys
WVIWLFigjo0YTm+DOs/9IOcKruWaNWtU7kr0E9QjQI1xb8ddOu/ixYvqnlmx
YoXy4ZnfU4UKFZK9e/e60WpCSErGXOcdOHFJWvSfJ2nL9ZDfK/aXPM1nS+HO
IZK/1QLJUnOEQfv1Vjn/M1QM9OiW/u8e8kflfpKvmcH+LqulQLulkrXWSLU9
gxfYbzqPCsbrnanKIMndZIZka7ZICrVfKiMWbpMbdx7o3XU8HuQTaj1woeRq
MEnytF4mf7ZbJtkNei9DpT4qhlPvz9ehhj5gsDXjP4b7sdlMKdw1VAqiP+N+
LN9LNd1tTLAfG+3MXG2o5Gs5Twp2XCFZG82UvPVHy8QlG+TmXfrz3Al0HPLV
mzfkjEAee+SQwBjTFZ4+fap8MubHRbzlTz/9pI7t7+/v5jNJeqjz3I9W/xy+
XuTXQT9Bv/HEnCvO4i6dh36He+a9996TiIiIOPcU8r08ecJ1GYQQ92Cu8x5F
x0hQ5F4p23KMZDBoi1zN5kpR/0gp0HappK8yVMUN/lSyq+Fnd49uPxbvLKnK
9jLo1HlSoud6KdhppWSoNlx+Mmz3Bvu19lPJbqr9Wq63ZG04XbK3WiF+AeEy
MeSI3L7v2px8SuLBw0eyIOKAVOixQrK3Xin52gVL+hqj5edS/vJTiS66f74O
9wGDrakNfSBXszlSotcG+atTiOF+HGbY3lU1vW1M+ByMdv5eaZDkbblI8nc0
atX2o1bJgZMX5clTrs9LarR8m19++aVb821CM3788cfq2PDdeBvUee4H9cOR
V9Nd8cKehLt03ogRI0yfYWLqrRNCSEJY5tu8efu+LFy9U5oOWCrFOi6TPzuH
StHOy6VU2+kqH3rZ1mjjPLqVazVGSreeaLB/qRTqFiFFuqySkm1nGPTraK+w
P04zXPO/246Xcl0WSoEOIVK4W7j0W3BALtzw/rUOSc0zw39r912S6gPXSeaW
y6V4l+VSvtMs+bvNODWXoftn62hraezPxTsukULdI1V/LqX681jVP3S3L8E2
VsoYzsGvzVQpbHim5Gm3Sqr1i5Tlm09KVLT3ru3yJjy9fp5euFvnbdmyRf75
5x+rDbGLyDuZWNyt844cOaLypNiyG/GXjjBlyhS1f/369VV9OORgSaqcK9Bb
mLuwZfPChQsdOs7SpUvV/qjN4cj8h7t0nrvr5+EYtq4F1kgyDpSQlIulzgP3
HzySiN1npcnIDZKzzQqp1j9SpqzYK6FbDkv41sMStvWIR7eIbYdlceQBaTR8
g2RvvULK9AyXUUt2SviWQ15hv9bC0QzXfI3B5rnhh6ThyE2Sq+1KqT10o2w6
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
6hXvGGXLlk2iMyGEkLhQ53k/Dx/FyNLNZ6V0z3DJ1DxIAufulUs3fL8OK/rj
yu3npFRAuIpZ7WroryeveMa4wd1Q5xFP5NGjR7J7927ZunWr8oekT58+ToO2
0pOYmBilO2DfwIED49lnrTVs2FDtv23bNlVDXk+gP2AH7NHakCFDTHphzpw5
utpnzunTp5V98+fPl9y5cyd4nYsXLy4hISHqNZcu6fP9fPHiRfX+K1eulKJF
iyZoc548eWTBggXqNfBbOsK8efPiHadp06amPuYpWpcQ4ptQ53k/GCofOHNb
Wo7bJpmbB0vNweslYp9v+rXMgZYdtGi/5IrNQTMz4qTc8sGYTUCdRzwRjO3T
pk0r77//vnTu3FmuX78epz148EBX+xCPlytXLnnzzTeldu3a8eyz1saNG6fO
5+OPP5b169fraj900Hvvvafs19qrr75q0nlz587V1T5zWrRooezLlCmT8nkl
dJ03btwo33//vbrWw4YN08XmQYMGqff/8ccfZfPmzQnafOjQIcmcObN6TYcO
HRx6j6ioqHjHwfwHjvHZZ58pvUcIIUkFdZ5vcPv+Yxmx7JDkMWieAh1DZHzI
UeXn82W2Hbku9YZvlD+aLZN6wzbIrhM3fFbbUucRT+TYsWNqvIqvEOg8T+Pa
tWvyzTffKPsqV67s0GumT59u0lGrV69OYgvts3DhQrsxhJ6k8/755x9l01df
fSX3799PcH/0HU2zBgQEJIOF8enatat6f+jTU6dOJbg/fG/ffvuteg3W2bnK
hAkTTJ8h1o0SQkhSQZ3nG+CzWbH9vFToEylZWgRJpyk75NSluz5VK9ycR4+f
yLy1p6RYt1DJ1Wa59Jm3V33mvgp1HvFETpw4ocb1nqrzEFeKOEL4T5APwxEm
T56szueFF16QNWvWJK2BCYDYwNGjRyv7tdaoUSOP1Hlr165V9sGmhw8TXjew
d+9e+fDDD9V59O3bNxksjI+2du6TTz5R8b0JgfjSVKlSqdcg9tJVxo4dq47x
yiuvKL8mIYQkFdR5vgE+meOGzwznnKn5MqncL1LCdl+UxzG+WU3vwvUH0nP2
bsnSPEjpnmVbzxm0n2+eK6DOI56Ip+s8V/AknWcN6AJP1HnOQp1HnUcISXqo
83wH+LimhB6XvO1WSoGOq2T08iNy467v+bjQDzcevCo1B62XdI2XSusJ2+T4
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
9N/wXSvtHz958uQs3yH0GNbiiy++UNw/AHlrljZLx0D9HNTNMf232NhY0fvD
GsiNk+zatGmT+IyW621t2KODtdZ5+/fvF/5M03V+6qmnjOcdfksMw9gP6zzG
FqeuJlGX5Wep4tCD1GFJCIXeVJ7jHZmYRt1XGDTKwH2GOULp6GXO11YK6zxG
j7iDzitXrpyw75VXXjHWkZAzsKc/duyYouPBX2epEerUqUPnz58XQ4taFdBl
6JsHGyV9hv0yekXgb0pzpwIDAylfvnxmNpcsWVL4rWAztJUS0MutUqVKZmsJ
jSvNjfhNy7WW2wsCvkXL90r6EdoU56Lpv9WoUUPUDlLC9OnTs3yHv/zyi1gL
aGlbGiw74OO1tPnNN980zg19avpvpUuXppMnT1qdb9WqVcb3os6lknO6Z8+e
imw3RWud5+/vTy+//LLZOqPHOz471vrevXt2H4NhGOs6L+rmAxq55rTYk3Wb
d8Swr4ynDDvrLToT1nnKSE64TbcjIigu7CzFhYdT/Lkwun0+nM4eDaYp832o
QZcV1HrAWtqx/TBdP3vW8O/hdCs8zObA+2NDQslrVyB1GLbBMMcyGj/Xk04H
BlO84d/jz5+ju1ejKT1FXV5JXsLtdZ5hhMck0uAVJ6m64ZrSe9ExOnP5DmWy
znNr9K7zTOM21Qxvb29FxzPdC0sDPc+1ZOvWrTZtRu6XEpAH9eqrr5rNAa2h
FuSbKV3noUOHypobsbdK5oX2U+p/8/DwyDJPv3791CyFIDv/YE4DMY3W+OOP
P1Sfz/D7qkVrnQc9h2cvpvaVLVvW7nkZhjEnW51n2HpFXLtPw1afoqoDvKnH
/KN0KiqBMtmfl+tIuXOHIg33lMMzZ5Bn3960rXMn2ta1C+3oZhjdu9KWTp1p
QYu2NKJOMxpVtxktbvkLbe3S2fDvXWm74TW2xk683zDfIsN7xn3TgkbXa07z
m/9Mmzp2NByjE+3o2Z32jBxOp1evMujLMMpMUx4TmlfIDTovNPouDfgjSDw7
6rfkOIVFJ7I/z83Ru85DDCPqbA4ZMkTxQH0POXU9EBe4fv16mjhxoqhz/3//
iz9r3ry5mAf+HC2BT2n48OFW7ZZbvwJ+P9jcuXNnET8Iuxs0aCDmQA6d2rou
iCNEHQ0law3fjhx2796taF7U+ZATq4i4UehjrIfUqwK+pvbt24t5oHHUAp+w
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
9NHRo0fN/g213FnnZQ/rPNZ5ltSpU0cco3LlyprMxzqPYRwH67y8iVydh3hL
6DTEbqodmOPqqhX/6Dz48z4vzjpPIazzGD2ilc5Dz+fbt2+rGg8fWj+PUF8F
dRPxOtSgz5cvH7311luiB7QprPOswzqPdR5AbLP0m2vatKn4LeF/tYB1HsM4
DtZ5eRNbOs+jXBlaUKkCbWv9Ex3s35f8B/SjA317qx5iDoNm9O3SiVbVrS10
5HzWeYpgncfoEfSX/uijj8Qebfjw4arnWbVqleh1oGZMnjzZ6rzQb+idgPqa
6EMHfRccHCziNE2BVpR0nlSbRa+wzjOHdd6/OFLnBQYGUpkyZcRvDv31goKC
6OLFi+JZir3gNwqbq1SpQkmGvQnDMNrBOi9vYkvnSRpsUdUqtOSrarTUMJZU
r6p+/G+OxYb/v6ByRTNfHus8ebDOY/QInu1r0Ut68ODBRu2idNjyKSQkJFCR
IkXE67p27WrThq+//lq8rlOnTqo/hzNgnWcO67x/caTOM+2hsHXrVk3nbtKk
iZgXGpJhGG1hnZc3efzwIR2Z50GzS5bIqvOk+M3SX4hcOq3GLMNxPMqXzXIc
1nk5wzqPcTXoO4eaegsWLDCO2bNnU8+ePYWG2rlzp+q59+zZI+ZQMzZs2GB1
XuiSChUqiD0k+uOZ2m46Zs6cSYULFxavQ88F/G3p0qVir683WOeZwzrvX7TW
efDVQd/h94CaK507dxa/OfjEtQT+fMyLdUZ9F9PfJjQlYkYZhlEH67y8idB5
HnNt6jxnDUnnrWvZgm5fOO/qpdElrPMYV3P+/Hl65ZVXzHxpr732mvCZ6RXY
VqJECdW+wt27d7v6I2SBdZ45rPP+xRH+PGk+PCdxNNCPlr/BTz/9VOTYMgyj
DtZ5eRPEbR5buIDmGjSeTZ1XqcK/I6d/z+m11nRe2dI067NPaV2L5qzzrMA6
j3E1UVFRVLx4cXrppZeMA/vgs2fPipwaPT5zv3v3rqgNiNjSV1991cx2y/HU
U0+JfSV0EP777bffpkOHDrn6I2SBdZ45rPP+RSudl5aWJr5rxGX/+OOP4veg
Vc2V7EhNTRXXkH379onfnenvslatWiLPlmEYdbDOy5tkGPZkZ9atFTlzsz8v
LmqvKNVnmgzDMZEjOLvEZ7Slw29097J29+ncBOs8xtVgDxkSEkInTpwwDvTR
qlevntAAixYtcrWJWUhPTxd980xtzm5A/3zxxRdif/ztt9+Kv508eVKXtf9Y
55nDOu9ftNJ5eL5RtmxZMVBzBb+HiIgITWquZMfo0aPF+QWbcWzT3+a5c+co
IyPDIcdlmLwA67y8Ca7X1wzX0K0d29PMYkVp2n8L0SyD1kL8pLXh8UVxWlTm
c1pS9nNaUKoEzfnc+uvnlPyMFpb+nJaWKyneg//O9rWGY04t9LHo4xAweyal
6HAfoQdY5zF6BHGRiN10p72wNbgOS/awznOfc1srnbdr1y7jObZ9+3YNLcye
xo0bi2OVKlXK4cdimLwG67y8S+q9e3TecxdtbtdW9FHwKFuK5qFOCuphZjMW
VSpPC0U9zrLkUe6fYe21qLeCf19QsZzhPYZRqRwtMH1N+XI0z/DvON7SWjVo
z6gRFHf2LGWmp7t6WXQJ6zxGj7hTn3RbaNU/D+sBv2Z2A36Rq1ev2m2rO+k8
1OK3th6wXYsa+u6i8xCbiJoi1tbj4MGDdh/DHp2XmZkp/POwBTVX8L2j7orW
NVeyQ+v+eYcPH7a6zlu2bBH9Ohkmr8A6L2+TlpJMVw75U6DHHNo3fgwdnDyR
Dk6ZbDb8DWP/pMm05veRNLJ1H+rVqBtN7zCQdo0eb/x309fif7cMG0vj2vaj
7t91pTE/96Udo8bR4akm806eRAcnThDHO71mNcVzXp5NWOcxeiS36DzEN1Sv
Xl18jg4dOqieZ/369Tbrumzbts1uWxHXJs0Hv4sS/Pz8jO9F7VQ5/Pbbb+L1
0DxKa+50797d6lq8//77FBsbq2i+7Jg4caKYr1ChQnTr1i2755OA9pdq+AwZ
MsTu+bB26BtgbT2aN2+ugdVE9evXF/O1adNG0fsQ44xcVrz3+++/18QWuWit
8+CTt7bO6Pd548YNDaxmGPeAdR7zd0YGpT96RGnJyQbdl5JlpBvGvcSHtMbv
IjUa60c1BnnRnG1nKS4hKdvXY1yIvkPDVp6k8r12Upup/nQ49AalZpn/n/9G
riA5KO4/t8A6j9Ej7q7zUDsGtVrgZ6tYsaL4HD/99JP4G2r8pSuML0CPh+z2
li+++KKoAwNfnBJQDwN2wB5pwB8hzbtixQqzf8OwVQ8Hfo78+fOLWNs//vgj
y3uzG126dBGvr1mzpvhvJWSn85588kmxHvAPKt1vww9jad+gQYOM+3f4nkz/
Db1A4KfKCbwGus70vcgLK1q0qJgbn8PyuEp9QvCFos+45Xo8++yzYj1y6u9o
CZ5NPHz40MymmzdvGuOPUT/F0mZb/lOc63Xr1hXvhd6D3ko23LOxhnLOE3vq
MGmt8+CHtFxn1FnCOqNvipbPAxhG77DOY+QQl/Q3jdt6kSoP3U8NJwbStlPx
ZEuZPTTcWhfvj6Xqww9S/XEBtNz/Gt3nkEzVsM5j9Ii76zz4w6DvypUrJ2r7
4XO88cYb4m/YL586dUrRfJs3b86yv8Q8R44coaNHjyquD4+4R+x9YY80JO2B
8d///tfs3zBs9YKAloEdsKdHjx5Z3pvdQG9BvD40NFSx7u3Tp0+W9ejVq5eY
78yZM4q1wcKFC7PYB78g5n3mmWdELR3Tf4PWiYmJyXHeuLg4atmypdl74Xt7
/vnnxdzvvPNOtuuiBHz30rMEU/2PeF6sB+rZKgE6s1u3bmY2QTtLvU9QY9bS
Zlt+SXy3qEGE9+KZBPpOyjk/pAFfsVq01nk4ty3Pu969e4t1Ri0pPD9hmLwC
6zwmJ9LSM+lQWBz9MuMwVerrSf2WBonzwxZ41oj3tDO8B/v63ouPU0Sse51D
eoJ1HqNH3F3nzZo1y2acpZeXl6L50FPaco7vvvtOtX0bN260aV92Q27dU9gl
Zz70qlbL4MGDs8w3e/Zs1fPZisezNsLCwnKcF+expOnkDuhCpUg5oKYDukMN
0EOFCxdWZHPlypWtzgedJ8UuqxnLli1T9TmA1joP+ZSW9nl4eNg9L8O4I6zz
mJxIeJBKi30iqO6w3VRjsA8t3X2R7iXl/BwW+/hx64KpSj8vajJ+P+09fYMe
p+ccQ8NkhXUeo0fcXecFBASIehPZDfgELly4kOMcqPkOPQi/jBQvhthE5Elh
Hnv6TcCHhrhJazZmN44fPy5r7uXLl8uaT2kPQfRc+/PPP8V6oPfZ//3PR9q6
dWsx3969e9UshQD5jUrWAv4rOTF6iKkcOXKkorkRoysH9PXAWuCZQsGCBcV6
oPc35oBvU23tGNR1mT59uiKbbZ2LiF2FFlIyn+lAHxK1aKHz4uPjafXq1WKt
a9SoIeZDjDLyFGGfPf5GhnFnWOcxOXEuJtFwDgTRlwO8qMWkg3QgNE7W+x4k
p9GGg5ep4Sg/qjXEl+ZsP0c37nKdKzWwzmP0iLvrPC1A/Bxi3Cz9B0pz8XIL
0JlSz3lpFClSRHENl9zCjBkzspwb7dq1c7VZukILnYeYTMt1LlasmOKcUobJ
bbDOY2yBmE3voFhqNuEAfT3Im0atCaaoG/Kuw8jfOx2ZQJ3nHhE+vS7zjtCp
yLx5r7cX1nmMHmGd908te+Q1Ie4POX7IbXrzzTc1qZPvjqAWCmqiYD1efvll
sR7VqlVTnJuYW1i8eLFYixdeeIHy5csn1qNv376uNktXaKHz4E9ErqbpeYfc
WOSkMkxehnUeYwuso8fO81R9gDd9M2IPbT4cTSmPM2S//1pCMk3eFGrQiD70
/Wg/2hoYTY/T5b+f+QfWeYwegc4rUKBAntZ5iHdDDhhqpkgDvoW86kdATccT
J06YrQe0nz31GN0Z1MA0XQsMpTVXcjuSzqtSpYpqnYfao/Alm64zav1wzRUm
r8M6j7HFqag71HPhMapiOA9+nRkg/lsJyakZtONYDDWZsF/49KBVriXY3xs3
r8E6j9EjFy9eFD6KvKzzGIaxj1atWolrSPHixdn/xjAawzqPsUZ65t/Cf9dg
5F6qOcSXpm4Oo+t3khXPE3H9ntCK+C46zA6gwHPcu0YprPMYPYLaBwMHDqRf
f/2VRo0aJWp7mA6lfQkYhsnd+Pv7Z7lOoC4rriETJkwQcdAMw2gH6zzGGtB0
kwzaokIfT2oy/gB5HY+llFTlTfDuJT+m2dvDRS0WaMY/911SFPvJsM5j9M/w
4cOz1EHgPCSGYUz5/vvvNe3JwDCMbVjnMdmB/nf+Z+Oo/ZxAqtTPi/osPi7q
bqoBvRT2nr5OP0/3p4oGzTh89WmKvsV7fCWwzmP0zpQpU+i5554zG/DxMQzD
SCAXz/I6sX79elebxTC5FtZ5THZAmy3bfZFqDdlNdYbupoVe5+mujJ552WE4
nSjasKcfuuIUle2xk9pOP0QHQm9QWgb30pML6zxG78TExNDhw4fNRnR0tKvN
YhhGR6AnpeV1Qk6PQ4Zh1ME6j7FE6LJbSTR81Wmxfm2mHiK/4OuUnvG36jmT
U9PpD4NurG3QjfWG7aYFBt2YqFI35kVY5zEMwzAMwzBKYJ3nOlJTU0Ut4OTk
ZNkDNasx8F7EVjqCx2mZ5HPyGrWecogq9fES63j55gOy53A4pw6F3aLfZgdQ
hT67DOfWCYq8rq5+cl6EdR7DMAzDMAyjBNZ5zgf67Pbt27RhwwaaN28eLVq0
SPZYuHChGMhbRvyDI7jzIJXmbA+nmoN8qN7wPfTn/ih6pEHdlJj4JBq3PkTk
6DWfdIB2n7pOqWnOqceSkZFBKSkpdO/ePbp27RqFhoZSZGSkqOGMfj167+3E
Oo9hGIZhGIZRAus854O+nV5eXvT555+L3lMYL7/8Mr300kuyB14/Z84ch9gX
Fn2Xei/6p2ce/G+HwuM0mTclNYM2+F+mb0ftFTl/M7aG0807KZrMbQ2s9eXL
l2nPnj20Zs0amjlzJnXo0IEKFy5MtWrVorlz59L8+fNp+/btdP78eeFf1SOs
8xiGYRiGYRglsM5zPtAemzZtojfffDNLfWElY8yYMZrb9vBROv0VEE0/jNlH
1QZ40ZTNoRR7W7u+5kERCdTF4whVMpxXHeccoZDLyvquKyEkJISmTZtGdevW
pWLFilHBggXp3XffpRdffNG4hu+99x598MEHVKRIESpbtiyNHj1al/17WOcx
DMMwDMMwSmCd53yg87Zu3UofffSR0BoFChSgZs2aUadOnahz587if62Njh07
itGtWzc6cOCA5rYhtnLihhCqPtCbvh25l3YcuUpp6drVxbyWkEzTtpyl6r/7
UMPRfrQ1MFrUaNES5DFu3rxZ9On58MMPFWnnOnXqUGKiuv4RjoR1HsMwDMMw
DKME1nnOx1Lnwd+0f/9+kTeGERsba3WgdjnGzZs3Nc8pQ5mVo+fi6beZh6nq
AG/qseAYhVzS1t+W8jiddh2LoR/H76dqBi2JfD0t9/vItVu7di2VL1/eqN0Q
51qxYkVq3Lgx/fzzz2ajTZs21LRpU6pXrx6VKlWKevXqRXfuOM7HqBbWeYze
gf989erVZiM4OFjRHHhGs3PnzizzWA7EQ+jxd5od6C0h2Y3ruyuJi4ujdevW
5bi+2Q1vb29R/0sPIK8a91Brtp45c0bRfKhttmPHDrM58KxQj8/8GIZhlMA6
z/lY6rwffvjBYTVVlJCUmi5qrtQZ6ku1hvjSYu8LlHBf+xjG8OhEoSHRf/2X
GQEUEH7LrlqeElI8bIUKFYwa7/XXXxf5eH5+fnT37t1s3wdtePHiRdq2bRvt
3btXlzl6rPMYvYOYZ0v/eL9+/RTNgX11oUKFcvS7P//88xQWFuagT6It0K2S
3Z6eni61Bc8TX3jhBVV5Ap999hklJCS41H4JPOvMnz+/VVsHDRqkaD5occTv
m87xyiuvUEREhIM+AcMwjHNgned89KrzLt14QKPWBIvvvNnEA7TfsGaO6N1w
K/ERzdkRTnWG7ab6qOe57xIlpdgfuwnfQf369enJJ58U6/rqq6/S8OHD6dKl
S6LeZk7ge4GP1FH9KuyBdR6jR/BbQR1b+ENGjhxJTz31lNnA708O+O1hDtTA
RX0qy3ksx9tvv02BgYHiPXqtlYs8X9i3atUqo3bYtWuXS23at28fPf3000Z7
clpn01G5cmWX+1DxXWNN4TvG8wBrtuKZgxKgG0uUKGE2x/vvv0/Hjx/X9TnG
MAyTE6zznI+lzkMe2blz51xtFvkF36CfpviL3LxBK07SRQf1t0tL/5sOhNyk
NlP9RY8F9GO3t5ce9lSTJ082PuOFH69///6i1mZugHUeo0du3DBcM376iWrU
qCF0HvxFpgPPWOSwfv16+vrrr+mbb74R/WYs57Ec0EstW7YUx3VU3WF7wHOl
33//XXym4sWLi2sS9BXqLLsS5HQ/++yzRp9XTutsOk6ePCnuXa4E/YSwpo0a
NaK//vrLqq1Kr/uIRz127JjZHIjjRN48zjH0MmIYhnFHWOc5Hz3qvKRH6bTI
K4K+HOBN34zYSyv9oigxyXHPMFHvZdDyIKpg0HltpvnT3uDrlJmpzo8GnwLy
MapWrSqewz733HPCR4pYzNwC6zxGj+A3hr4wuI6NGDFC9TzQHJKPKSoqKsfX
4xqK3ih4/S+//KL6uI4E+b6mcYDQV3rQebhGwh7oJHejd+/ewvYnnnhC9KB1
JPBTS7GcXbp0ceixGIZhHAXrPOejR513NjqR+i85QeV676J2swLoyPl4Ss9w
XPxi0qM0+mN3JDUYsUfkAi70ukD3k9U9K0Y+3YIFC4QPD+uJ/R96yucmWOcx
egT+uo8//thunYe8tdatW4v9NGLocuLWrVtGHdW9e3fVx9Waq1evij6dK1eu
FJoEn6latWrGGEk96DwpbhM2ugOouQJNinWFzxhr2rdvX4qPj3foca9fvy5y
ErFWiA1hGIZxR1jnOR+96TzouS2Ho6nRmH1U/XdvmrAxhGJvJzv2mJl/01GD
luw4O5DK9tpJ/f8IoguGc0xNahxyG5s0aSL8eFJvhKCgIO2NdiGs8xg9opXO
U4pedd7GjRuN/jtfX1/xN1zrpb+xzlMO7o1vvfWWsHn8+PFOOy7rPIZhcgOs
85yPpc5DroErYwxv339EUzedFd81+qNvOnSFUlJzrltiLzfuptDY9WdE7Ca0
i1dQLKWmKT8u9k6vvfaacS+FfCFHP+t1NqzzGD3COs8c5BlK1yHU7gWm9TZZ
5ykHOk+6vrPOYxiGUQbrPOdjqfPgi5LyxpEPjjr/6CPljLqP8OWJ/fe8owa9
tYt6LTpGp6LuaNLnICdS0zNp46HL9N1oP6ox2Jem/RVm0JzK+jNlZmbS8uXL
jTknUi6FnPqa7gTrPEaPuErn4TnOF198IY7brVs3px03J9DXRboO+fj4iL9t
2bJFlzoPdUDdgfPnz9O7777LOo9hGEYFrPOcj6TzChQoIO4h//3vf6ldu3bU
o0cP6ty5M7Vv3546duwonlOjPsHixYvp8OHDoje61jxMSaPV+yKp4ei9ImZz
3q5zlPjQeTWkT0UmUPcFx8T31MXjCJ01nHdKNCbqbKLe3jPPPCPWEnnzHh4e
jjPYRbDOY/SIq3SeXuuwoEajpOnw/4HedJ671WFhnccwDKMe1nnOB3sU3Pvf
e+89Wf1pcY9DvXHca1BXGjGe8GNpQfStB4Z1OkVVB3hRkwn7yetErCbzyiUu
MYVmbgunqv29qdFYP9py+Iqo/SkXPNdHrySpZ17dunVFzyOQnp4u6iLs3r1b
+PygBzHmzp1Ls2fPpqVLl4r6D7if6x3WeYwecaTOQ94teixkN+CL6tSpE7Vo
0UL8tl0JYgegn2DXjBkzhE0YqAEM9KbzpDzmrl27Wl1f0yGn/qkjyU7nofYW
emtYs/ns2bN2H5d1HsMwuQHWec4H+gPPeuHHe+mll+iNN96g//znP2YDtSNf
eOGFLJoP/4b9De7X8GXZZUdGJh0IvUE/Tz9EVfp70uAVpyj86j2NPqU80tIz
adfxGGoyfj99PciHRq8JNmjPJNnvxx4EflBpfdBPAWuD/Sfu96h5Z0tPo9/y
0KFDhd5DLzC9wjqP0SOO1Hnoh2ntd/viiy+6vEaxKVJNzYYNG2b5t82bN+tG
5/n5+YmeBHKeL0oDz8NcianOmzp1qvgbNJhUmyW7gbqc9sI6j2GY3ADrPOeD
vLsTJ07Qb7/9Rh06dKAJEybQmDFjzAbuZ4jdfPXVV40xiaZ7HPitvL297crh
S7ifSkt8Iqj20N1CY6Fn3kMFvjStCDGca70WGc61vp7U1qA5j52XX0MFewDE
uUp7l3Llyon/btCggdDP2Wlly/Hyyy+LPQNiZPXq22Odx+gRR+q8mTNnWv3N
4vd66tQpTY+nFPjx8Kzt7t27VLNmTWEXerdboied5+/vT/nz56fnn3/eLKfZ
1pg/f774nMgdd0bOuCWmOg+xG7AFGl8677Ibw4YNE6/DUGsz6zyGYXIDrPNc
A+JOEH+JfRJiD1E/znQkJCSI2ix4/oq6aMjbk/L5MKD9fv75ZwoNDVVtQ1h0
Ig1YGkTVBnpTqyn+dDgsTsNPKJ9bhu9qvucFoTfrD99Dq/dF0T2ZPdqxB4Be
lvYs8I9KfZulmNemTZvS8OHDhX8AY+zYsSIfUqqDIw3sf7BXTUqS7090Fqzz
GD2Ca5R0XdJa50VHR9OePXuyHdu3b6dWrVqJHiquysfdv3+/OH6tWrWEzwv1
NbO7HpvGbeLZnCuBJt23b5/Vdc1uQOPgcyJuAjXCnA2u8R9++KFYP+Rk1q5d
m5o3by70szWboQdhM86Ra9euqToudF6xYsVY5zEM49awznMPoAmRm1CwYEGj
7+rNN98U97OUlBTF86VlZJLniVhqNPafnnnj1ofQVQXxkloCWw6Gxhm+J3/D
+eZNQwwa4EKsvPhRyZ9n+mwa/k748wYMGCDqnAcHB1NcXJzot4tx584dCg8P
p9WrV4vXmWo9xNKiPoHe6nWyzmP0CJ5HSTXv+/Xr57Tj6qEOy4oVK4zXDVv5
YMgPll4XEBDgRAu14ddffzVeG2/fdv51B9d402ecGKgZassW3BelewHer4bY
2Fh65513xDzoy84wDOOOsM5zH/BcErnzzz77rPF+h/hNaEClsSlxd1No9vZw
UX+lwci99FdgNKU8dp22uXzzAf2+7KRBA3hTyykHaW/wdcrIzPkzSTpPqsOC
eC74Pk+ePClL/yKO6csvvzTGd2JtmzVrprv+e6zzGFeDGATEHaJ3gDRQAwU6
C78Z9Ah3Fnron7du3TrjdRjxAqbrYjqgf6XXDR48WPwNes8VMZBqQP4AbC9f
vrx4RuZscI1HHWXYUKJECXGu9erVS5wD1pB0HvyAanvTwvcJfYfjIQ7U8nvF
80OGYRi9wzrPfcC+AHsL5JNJ+4bKlSuLeCGl9TeDDHvu7oY9d9UB3tR57hEK
vuT8+7cpiQ9TacVe9Hfwo1qDfWiR1wW6I6O/g6TzpPWoV68eHTp0SPZxHz9+
LO7ZhQoVMs6BnAzk/uhpH8Y6j3E1qH+JukWmfhXERauNi7MHPeg8xAPIyW/L
btSvX1+zmsmORg86T2lfBS10nimoo2r5HaJPK8MwjN5hnede4DkwarNI9xrs
daBTUMNTLvCTbfS/TPWG76FaQ3bTrG3hdCtReeynluCcC7p4m36bFWD4znYa
zrkgWbU/LXUees6fPn1a0bEjIiKMe0YpBwR+CyVr6mhY5zGuBvtly/g51MJA
jrGz0YPOQz1f+P9N4yvkju+//551nkxMdd6UKVNkvUdrnTd9+vQs32HPnj3t
npdhGMbRsM5zL44ePWqm80qWLCly0JRokmu3k2jihhCq0MeTGk84QJ7HY+mR
C2M2JdBLb/TaYKpi0AHNJx002BUjej/YAnXXUIdFWg/k5yvVecjzqFChgpnO
Q98L1nnawTrP/UlOThZxzr6+vsaBWE3UOYIfHT3tnIUedB76sJiuhbWBmE7p
2jJu3DjxN8T86SlewBZ60nnO9Och9xSfHec2eu9Yfq9q8/4YhmGcCes89yIw
MNBunbf/zA1qN+MwVezrSf2XnqDzMfdIRiqcw3n0OJ02HboiasNUHehNM/4K
ozsPUm2+B74EPFeV8vM++eQTWrJkiaLjJiYmUsWKFc1qsaAHL+s87WCdlzvB
Xhg9Pf/PyXVY9KDz5OLudVjyqs7jOiwMw+QGWOe5F8ePHzfTeWXKlKGtW7fK
1iRJqem0yDuCag72EX0MFntfoHvJ8noYOBqcdyGX71KPBUepdI8dIn8Q/21L
g2K/h564prFT3bp1U3Rc5Ntb6rydO3eyztMQ1nm5E6365yF2GnXy8bu7dy/n
eG17dB5qdaInAo6X3QgKClL7MbJFq/55iOWwZjNykuXUCEZ9KdQTxnvQt0IO
9ui8M2fOWLUZ/Q/k1Mpylc7Tun8ecsHR08LaeqB2GMMwjNawznMvEDdlqvOq
Vq1Khw8flpXrgTChiGsP6Pflp0TM5s/TD4m6lmk5xEY6k4QHqTR9a5ioD/Pj
uH20yf8KJT+yvn9BDUDkTjz33HPGNUGfJyUxUdi7sD/PsbDOy51opfMmTJgg
5kCNKWi+nEAfN6m3GXSIEqAjq1SpYjV3Lrte5/YA7SrNjX2+WhAfa83matWq
iZ7gOYF+rNJ7/vzzT1nHlfKfUesS/lsl9O7d26rNuM7KqeGDHjjSPU+pznvj
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
hlEK67zcRebfmeR5PIa+G+VH1X/3ocmbQikmPsnVZmlCUmo6bTsSQz+M2Sdq
y0zbEkbXEtTd190N1nmM3pkwYUKWPulDhgyR9d7p06fTM888Q08//XSWOayN
p556SrynV69eDv5kOVOnTp0c7X3iiSdoz549rjbVSLt27WSt8/Lly11tqk0m
TpwozgP0Ob98+bKqOeLj4+nTTz/NcS3QO11pT8h58+ZlmadTp06q7GQYhlEK
67zcxY27yTRrW5jQQQ0NWm9r4FVKMeij3ADqa4ZdTaTOHkdEPZYuc4+4nd5R
C+s8Ru+MGDEiy372999/l/Xe7DSi3NGxY0cHfzLboMd2tWrVZNm6c+dOl9pq
SsuWLWXZvGDBAlebahM8S4Cdb731FkVFRamaAz63ggUL5rgW+fLlo9OnTyua
e+7cuVnmadu2rSo7GYZhlMI6L3dx5Nwt6jA7QMRsSjlsuan/wC3D9zpjaxjV
HrqbGgzfQ+sPXqZHbtb7XQ2s8xg9EhcXR127dqWmTZvSqFGjaPPmzWZDbkzl
1KlTjfvoGTNmZJlHGlu2bBFj2bJl9PHHH4v3dO/e3cGfMnsOHz4sPvePP/4o
fDbWbJbGpk2bqGfPnuI9U6ZMob//dv6VGd9H8+bNhQ3Tpk3L0WYMaHW8ftCg
QfTwoWt/s+vWraMmTZqYjWLFionzoHDhwiL+Vwlbt24Vn61Vq1binMppLf78
80/67bffxHvk+jlhk+U8+P4xx08//SQ7tplhGEYNrPNyD4/TM0RNylqDfanW
EF/y2HlO6IPcRGpaJu0+dY1aTD5A5Q3f7bj1IRSbkDviUm3BOo/RI8iNeuWV
V8Q+G/48tYwePdoYiwnfihyKFi0q3vPLL7+oPq49rFixwuifCQgIkPWeGjVq
iNd//fXXIq/P2SBuVLJ57dq1st7z66+/itcjLvL2bdded+C7teZrK1KkiGKd
N3z4cPHe5557jmJjc+49lJqaSh999JF4T/v27dV+DKERJbuRF8gwDOMoWOfl
HqJvPaQxa89QpT6eQgv4GvRQai6sUxJ5/T71W3KCyvfeRb/NDqBDYXG5ymeZ
HazzGD2CfXWBAgXs1nnwcdSvX1/EEl65csXq66ABfXx8hE/v559/Fu+ZP3++
6uPaA3xL0l5dTt5deno6NWjQQLz++++/d4nOO3DggNDSsGHlypWy3iNpq3Ll
ytGdO3ccbKFtYDO+c9MB/anWn4fcPrz37bffpnPnzuX4evivixcvLt7Tu3dv
tR+DlixZYtSXR44cUT0PwzBMTrDOyx1kZP5Ne0/foLbTD4m+A0MM++ioG+71
ncnlXlIaLfaJoPoj9lCdYbtpqW9ErslBtAbrPEaPYF8txU/ao/MyMjLo8ePH
YtiKZ/Tw8KBnn31W1MNAjUu8HvrJFSjVeWlpaUad98MPP7hM50m1bpTqvPLl
y7tc55meJ9KQfHI4D9XqvHfeeYfCw8NzfP3NmzepRIkSmum8559/nnUewzAO
hXVe7uBBShot8o6gWkN2i7HEoIOSc6n2Sc/4W3yfbacfprI9dwpNe/VW7tYM
rPMYPaKVzpMLcspwLGg9V/dTYJ2nD6QaPqzzGIZhssI6z/0xyB46F3OP+v8R
RBX7eIpe4vuCb4jvMbdy5eYDGrE6mCoYPm+b6Ydo9+nrlJqL67GwzmP0iLN1
3uzZs8Wx/vOf/9CpU6ccfjxbsM7TB6j/wzqPYRgme1jnuT+oN7nzeAw1mbDf
oHt20fj1IaKvXO5VeSR8lWv2RYnYzZpDfGnWtnC6++Cxq81yGKzzGD3ibJ2H
uE1JWyFu05W4Yx0WNToPNUJZ5/0D6zyGYdwNR+u8pKQkkbuM6+ODBw+cdm/L
SzpP9BrYFkY1BvtQveF7aIP/5Vzty5NAD4nfZgUIn16vRcfofOx9l9Qqdwas
8xg94gydhxyso0ePCp/ZpEmTRE9y9DJArU9Xsn//fmFLrVq1xL4d9tkavr6+
1LlzZ/GekSNHuuRaJVfnJSYmis8HuyUfZIUKFVjnsc5jGMbNcJTOQ+/Ys2fP
ivrBuA4PGzaMvL29ndZ/R2udh1z/R48e0a1btygmJkZc76Fhc6ob4AyCo+5Q
l/lHqMoAL+q+4BgFXXQvDaCWq/EPaeLGEKo6wJuaTjhA249epaRHuTMnkXUe
o0ecofNwzUWtR9Qm7NOnj6htj+Hq664EbKldu3aOPbahr3APdCX79u0z2rN6
9WqrrwsKChK9DE3tr1ixIus81nkMw7gZjtB58fHx4jqGGJV3332XXn/9dXrt
tddEn1Xcs52BVjrv3r17dPr0afEsdtWqVfTdd9/RZ599RnXr1qU5c+aIeuCI
H8LrXAHiF/8KiKZvR+017J+9ae6O87muZ5410jMyaduRaGo4yo++GuRDkzeH
0vVc2kuPdR6jR5yh87C3Rm80HAMxhHrkq6++ylHnyc3jcyRy+yqgB7z0OtZ5
/8I6j2EYd0NLnQffFnp+om+t1NPGdCBm5caNGw77LKbYq/Ng54YNG6hDhw5U
vXp1Klu2LH366admnwf3lc8//5yqVq1K3bt3F/dQZ9f4Rs+8CetD6OvffajR
uH3kE3SNMjP18ZzbGZyKSqDOHkeoSj9v6jT3CJ2MdC/9IxfWeYwecYbOQ9x/
yZIl7d5baw1y8lq0aEHNmjWjuXPnivuFrYG6LbAf70HdUFf4I/GcdePGjcKe
gQMHCluyG127djXaXbNmTY7b/B+s8xiGcTe00nnIlViwYIHwc1l7lolnsbhO
OgO1Og/xptCqsLVUqVKyntFKMTnffvstbd26VczhLALCb1HrKf5UbYA3DVwW
JOpu5iVu3kkRNVhqDvalb0bspY3+lynlce6L3WSdx+iRhIQEEauBa2C/fv0c
cgzUqSxYsKA4Rvv27R1yDDW4Yx0WUxo2bGj1fvbRRx8ZX8d1WP5FK52H5wLS
WoeGhqqeh2EYJifs1XnI1/b09KROnTqJayWmeuGFF6hMmTJZfHruoPOQl1C/
fn0zu7HHKF26NFWqVImqVKlClStXFve8AgUKmL3uiSeeEL4/5GAgZ8PRIBdt
lV8k1RjkQ7WG+NIfvhF056Hjj6snHqdl0u5T16nxhP2iP/y4dWcM+uGBq83S
HNZ5jKtJTk6mwMBA8vPzM44tW7aImiioRQLdoyVXr14Vx9i2bRu1bNlSHGP+
/PmaHsMelPZVQKyHVNPk+++/d7nOmzJlivDVZTdwr4a+BtxX4V+00nleXl7i
fEZNHuSDmP6mDh48KPZVDMMwWmCPzkNNFcQfFCtWzOjTyp8/P7Vr107krE2e
PNntdN6iRYuErU8++aTo0QTNt2zZMvF5IiMjxX0kKiqKQkJCxGsRy4nXSp8R
/XsbN25MwcHBDv6EROHRiTRo+Umxb24z1V98xrQM1+4dXEHEtXvUc9ExsQ6/
zjpM/mfjXG2S5rDOY1wNYjYKFSoknmdJo3DhwuLviEHUOg4RPo8XX3xR5Hjj
+gudKWkPPeCO/fNMQZ4F1jS7YfqcknXev2il86TfC/Qcnh2b/qZeffVVkR/J
MAyjBWp1Hu5Rhw4dEn47vB3346ZNm4p7X2xsrHjN4sWL3U7nIfYUWq1Ro0bi
s2APg7qa2QGd6+PjI2rBmX5O+DPR5wn3UUfieTyGGo3dR9UGetOoNcF5dt98
98H/s3cW8FGd2f/+b7f72+1uu92tbd0p7hQvDsEpDoHgXtwdghYpENzdSoEi
ISRAIBDcNQS3oMGCR+D7v983ucPEZyY3mZnMefp5P1By55137kyS+9xz3nNe
YKbvGVQcuEnlb872O4vH6azupnieYG+Cg4Px4YcfxvpZx+vj69evp8rzMd7E
52CdzaCgoFR5jpTg7J5nKeJ5rzHK83T4GWCuUNy8IMb0BEEQjCAlnrdixQq1
j5jxPPoR+yiY32+dPHmy03ke43TMDWL+pqU1VZivxDot5q+Ve9y5dyW1oNtM
XBukegpUHuyPxVsv4NFTx7nXnZZERb1C4MlbaDhmB/J2WIe+Cw7i/I30lbsp
nifYG/Y/Xbt2rfIbfcyePRtNmzZF/fr11e8DIxk3bpz6Wcr9f2mRH2Et4nmO
gTN6Hvtb8HuGg9cb5t9TrOHNmuWCIAhGYKvnMeeA+4f79u2LRYsWJehEzuh5
tuQfhYaGmn4X6oP1As6cOWPL0pNfozYOnbuLDlP3In8nb7SdvEf1zKPvGDL/
q5fa+xmBp88e497DO7h+6xIuXDmFMxeO4uyFY9qfx3AsaA/2Ht6C3Qd9teGH
3Yc2xRu7+DXtz8MnAhF8/gjOXjqu5jh36QSu3biAO/du4PGThwgPf4Gol5Ep
yvu6cvuJcgd+Xt1HBWDjwfRVd1Q8T3BEUrMOy4QJE0w/T3nfzdFwFc+jx3PN
3G+fmvcubcUZPU/qsAiCkFaktA5LUjEvZ/Q8W+BeBl7jmL/WmjVrptq1yfOI
KKzYcQlVPf1RtJsPRq88gdAw63rmRUax7/sThD26h1uh13BR87jjMe4WsGcd
fLYuw0rvmZj/x1hMntcfv07pgCETWmHohNYYMr4Veo90R/v+ldGub3ltVEC7
fvFHG+1rv/SviO5D68BzXAsMm9gGnuNban+2g9ec3pi1bASWr52Ctb7z4bf9
dwTu98GBo9sQdPag8sB7D27jydNHCI94oX0mk74mYp7mIv/zqpdesR4+mLDm
FMKepm7ebFoinic4IhcvXjTVo+rfv3+K5+PP0r1792Lr1q0YOXKkqk/JmiXc
G20U/J116NAh9RwJDUtzRNPa85gvk9iaGe800hvZD5a5g5y7W7du6n1grwXG
dK2B+x4SWzP3XBpRr8wZPU/vq8Cc5D179tg8jw57jyR2nvk+OmIcVhCEtCGl
npcUruJ5vG5gnqb5a2VPJV5LpAbX7z3BiBXH1b686kO3YuXOy4iITPx3PONz
EZorPXv2GKH3buD85VM4cCwAfgHLsezPicrjhnm1RY9hdZW3NepcBDVaZUfV
phnVqNL0B1RukgGVG39vGpUaf4eKjb61aPBY9bgm35v+rNI0g5q7WtNMatRp
kwvNe5RAB80d+43ywJhpXTBb88C1vvMQuM8HJ4L3a+53EWGPH+BF+HNERcW/
v7D3zF209Nqtcje7zNiHoCsPkV4ieuJ5giNidP889i1lDvy//vUvde+Me6NZ
F8RIhwkLC1M1Jfkc+uD+8r/97W+qNzjjV5bAPBb95z2vpy3Bzc1NHV+hQgWr
X1ODBg1irZlDXzPnff7cunt9SXHw4EE1P+dmXiHfB/YLsjbngr8X466Z+985
b86cOQ3Z2zl06FBTXeyQkBCrHjtkyBD12Pfee085aXLcv38fGTNmVI9p166d
rUs2vH8ec6bjnmfOzfPMz7afn1+Kn0MQBOdEPC/lJOR5Hh4eOHnyZCo81yvs
DrqDpuN34sfO69Ft1gH1XiXGI82LGB+j0y1a+Ru85vSB54RW6DS4Ojw6FUL1
FlmiXU7zuEqNvkcFj2/h1vArlGvwJcq5fwm3Bl+hfMOvtX//Jtao6EF/+z6W
+yU2KmmuF/fxnLO8Nrebep4vtOf7AuU9vlbz8jFVmvyAas0yoW6b3Gjdqyz6
jHTHqKmdMHPxMPy5cTb2HN6MkFsXERH1OmZ3+2EkxqwKxk/d/VBnRABW7bqC
py/SRz0W8TzBETHa83idrs/XuXNnA1YYH9Y4TKo3Ku/RWcKSJUtMj2E9/OSg
I+k9e9i7zlrPS6rfHXv9GNm3lf0A9blnzZpl8zxt2rRJdM2MA+s121KCp6en
yfMuX75s1WOHDRumHsv6QqwzlBzcN6fXF+f1jK0Y7XkLFy5M9DxzrF+/PsXP
IQiCcyKel3KY49K+fftYr5U5HUb8Dov3XE/CMX/zeZQfsAmFu2/AjI1n8Sz8
9T3WV9q1Q+jdGzh0fAfWbp6P6YuGYODYpmjRoxRqtc6Bqs0yKj+jv5Wu+wlK
1fkYZet/rv6f/qXcTXM+HkfPSqtB14x2wu9QQXNAul/pup+iNNen/Z1ro4tW
b54FDTsWQNchNTB6ehcsXDUem7b/gaBzB3A/7C7W7buBmiP2oljvrRj+xync
emDcPW57Ip4nOCJGex7jO1myZFHzdenSxYAVxoc/r1nL3vznNWskM++U18vs
EWgJzFnl8ey7Qyflvb2kRqNGjVRtGT5m27ZtVsfGWM867vU7f+9wvs2bNyMq
Ksqq+VgPO7G18nc1/Y5zWxLnSgz+Hoy7Znd3dzXvunXrVKzWGlijJO5ac+TI
oeZlDIt1ss2/xphwUtcczIXlWtgjiU6a3HvIffe8ruFj9u/fb/N5MdrzzHOI
9VGgQAG1zsWLF6daTVxBEBwf8byUw3uI/B1g/lqZD2Lk/VWds9cfoufcg/ip
52Y0Hn8Iu4Oj90vcvX8TB48HYLXPbJWH2WtEfc2HCqqcS8bM6Ex0ujL1P1Nx
NPoU3ern5pljjbR0u8TGz81ir4mxPXpetPtpblr3Y7hpf2dOaI2W2dC8eykM
HtcMC/8YgWnL56DxiKWaS6xBq8kHcOSSeJ4jIJ6XPjHa83hvjP3yOB9rW6UW
xYsXj3ddfPjwYZvn0/dsJTd8fX1tfg7mbcadj/VPbYU9upOKtRlB7969483N
+jq2ErfemSXDkrwauj890ZL5UuK9OkZ7nre3d7x10nkFQRDE81LO8uXLkT9/
fvUa2fuG/dW5d8Nool6+wuajt1F75G4U7bkFnkuOYt/JYBw44od5v49EF8/q
qNkquykv0q3BF3Br+KXyoSpNbIjPNY2Os1VtklE9vkrjH1CZo1H0qGTFUI/R
HltFH02i560asz/PurVF55lW8Pg6Ou9TG4wBVmuWAQ06FEK9LnVQrn131Og/
E4s2n8D9x85fj0U8T3BEjPY81i5u3LgxSpQooX5/GAn3/jGOxmti3ctYf4PP
xfoojO3YAuursFZJsWLFkhzcE8gaM9bA+hnbt29X69bdlHvJOB/XnZI+a6xB
kthauffM2libDvvKMibKNbMeGdf89ttvqxgq18yYnK0wxhh3rTwvnJd/xv1a
3bp1LcqrYT4m463JvYfVq1fH+fPnbV6/jhGex/jt0aNH1Xnm9x7ne+ONN1R8
k+eD+ayCIAjieSmDe/pr1Kih9jvzNb755puqJ44ltbusJTQsEtN8LqFcPz+U
6TEfvSd6Yez0bmjfz03lWXJfXYWGMXvnGn2vYnmq1kkSOZhV47lcxmiXi/E5
3ckYU+PXdN+rqnualUN/DjWf7o4xDhjtgbr/6SPpXM/Yewu/0eb4Bj83/RYV
G2dDhRbl0fnXvvDb6YcHYaGqHo2zIp4nOCJGex5zGekXdAUjajGaw15//Pms
/6zmqFevnnou1hmxNu/RHOZucJ7khrXP4ePjo3JKuW59zfQN9jfgfJb2eE0I
nt/E1mlLzRUdxkU//fTTWGv+4YcflB9xbvMeu9YSHh5u0XnWh6U1fMw/d0kN
fk6MqAlkhOdxLWXKlIl1njn+/PNPtVYj6/IIguC8iOfZDn/e79ixA7lz5za9
RsbyFixYoH4fGc2Jy4/Reao/ynUajCrtaqFO2/yo3kyPa30VE7fT3U73ofi5
mNFuFD1M8bkY96qq+1zjjOqxtdpkRf2OOeDRPTea9foRzfv8iFYDCuCXoYXR
YVgRtLdg8Dge37J/fjTrnQ9Ne+WFR9fcqNchO2q0yqz5aMaYOF/0GqLX9No3
q8R4X1K++vp1ZdBew7fa0JxPOx9Vm2ZBmz4VMWvZSFWPJiU9+uyJeJ7giBjt
eanJpEmT4uW2cb+VI7NmzZp4a2ZtTUeG+9ZYU9N8zdmzZ7e6J0N6xgjPo8vl
y5cv1nmm8/GaRBAEQUc8z3auXLmiarPR7fj63nnnHZUnYm0PH0t48vwFlm/a
glrd2qJCs0Kav3yHSg0/hZv755rffRe9ry2R/XWMidGXKnlkQEVtmOJ0jaPj
ZbXaZFPe1UrzsPaaj3X5tRi6/1YSvSeVRv9pZTF4dnkMW1AJvy6pglFLq2DM
79UwYXUNeK2pCa8/LRjacTx+9PJqao6Riytj2PyKGDTLDf2mlEHPCSXRdUxx
dBhRFO08C6FZn3yop7ll9ZZZTE4avf7vUbFhBu3PmLUn6nyZo51Q870KDT9H
2fqfqXzWgWOawjfgd9VbwtkQzxMcEWfyvDNnzmD+/PmxButKOjLMOWQtDfM1
s1dfSmKPqQ1jjdzLYL5m7iNMjf3qzooRnsdYLvd7mp9n7heRmiuCIJgjnmcb
jNexzhr3HZjvXWeejdG/g+89uAVv/xXoMLg+KjKvstEXqNrka1Rr+kOM2yUQ
s9PcqFKjDMqLOOhJdB+T0/XTnG5IYeVX/aaUxdB5FTBmeVXlY1O8a2OmX33M
3qINf3dtNMCcre6Yu61B9NjaAPMCGlo99MdyzNHmnL3FXY1Zm+tj+sa6mLiu
FsavrK65YGXlgL29SqHLqGJoN7iQigMyrlhDc78qTTIp16tg9tpixzBjxzKZ
x8r6LdzL17xHScxeOhynzx3Sfk/anj+U1ojnxYY5S6x3yBoLV69eNSxHiXnY
3Md17Ngxlec3ceJElQd1+vRpdc1tdC6hs8OaFP/+97+dwvMEwVGYO3eu6bqB
+y8FQRBSC/E862HuX2BgoMqNZ59aPZbHWmDszWQkN29fwdI1E9G8e0lVV6Vy
o680p8mQaNxO7a+LqX3COBj749Vrn115UvvhRdB7YmkMmUunq4ZJmlfN3FQ/
xr3oce7Rf9/2eszhUF7mbhq6n1k7zOdQI85zvfbA6LXwmOm+9eC1uqbJ/bqP
K4m2mvc16pZb5ZTydTM2SaetHLNvMLGcTu7fYw+Jn5tnweBxLbDviD9ehDvH
PWZbPI/3IljH4fbt2ypnyuj7D7w/z3v3rJ2R3L4VozyPe2i4/4c5eB07dlS1
E0aNGqWcz1boiIxLMeYwZswY9OvXT+2x1b+3v/vuOzRr1gy9evXCtGnTcODA
AZUzJUT3QWC9/6JFi2LgwIHq56L5sLafmSCkN3jfKO73Bftr8HuGtXlsrf8j
CIJgCeJ51sMYAvd16Pv5uReBNeKMqMNlzu3QEMxdPgru7fOjTL3PVL/xhPao
mec2RsftMim3azWgoPKiwZofjV5WFZO9ayvfokcpdzOLrb32t/qmMUsfm1Nx
xDyH+fO+dsGY9W2NjifSOfkY5oKOWFgJfaeUQccRRdGkRx7Uap0lus5L49f1
YuLW8dR79DGu59bwa/QcVg+7Dvo5RVzPGs9jPg9ziletWqUciNff/DudzAjo
j+wpzL5Mw4cPVz1EmEuWlPuk1PN4b4W+yhy20qVLqxro9DDuR2Fdin379lm9
95JeeuvWLZVjxpr1//vf/2LV6DAfrKPL73PWxGBdP67D6Hs6zgjPIR2f9xH4
OeN7Yj74b4LgyrA3X9zvC14/8HsmNe6/CYIgmCOeZx28fmbvVz1XiYP1Nq2t
l50cYY/uY43vHHh0KowydT9TdTSrJZCbWLXp634H1Zpngke33Oj8azG1p27c
yuqY7lsXc2LczjxmprzOP9rrUtXjUjj03NG4eaN8Pfz65PW1MWppZbXPr+2g
gqj7SzblePoevoR6NrBWC+N67MUwYGxTnDyzH1EvHft3raWex9gUazdw3+g3
33yj3OX9999H06ZNDbkPcf/+fbUPpHz58vjyyy/x4Ycf4oMPPkCfPn2UMyVG
SjyPuZL0OF4bff7558q5zH+usKcJ97hY63msicv+1nwdf//73y3ux8Xa5Tlz
5lQxRfbdEqIZNGhQvHOVWr3OBcFZYOwu7vcF7wsLgiCkBeJ5lsN4Ba9nP/ro
I9NrKlCgADZu3GhIrWUdzrX70GZ0HFgFZet9rvqax62xQr9jXRWOmq2yoFmf
H9F9XAmMWFQJk9dFx+3mBTTA/O0NMZ9747Y2MO2Fc/ZBR41+bR7aa/NQ7jdz
Uz2MX1Udg2aWQ4fhReDeMafyPO7fi9s7kH3Yef5K1/lE/f/EuX1x7abxtXOM
xBLPY5yZfYnz5MkTLy5VqVIltcfMVhgjpEu1bt0amTNnjnfdwn9Pav+/rZ7H
fMypU6eiQoUK8Wr46aNIkSLqPos1nsfa7r/99puphpJ5fiZ9ZfTo0SqH89df
f1X7zhLqq50rVy4sXbpU6pfHcOTIEbXvyHwcOnTI3ssSBLvCn7txvy8cvf6P
IAjpB/E8y2Acg31l2VfX3PF+//13lbdkJCE3LmLczJ6oyH7nDbgf74dYnqdq
rHhE+0vDrrk0vyuOUUurqlomyn9Y92RbQ+VD9nay1I/3ucfUhYl2Wsb+Jq2t
hcGzyqP1wAKo2Tqriu3p+awm19POJ3vulan3KRp0KABv/8V4/sK2vsBpQVKe
x+8pfg49PDxMe8riDsacWW/QFi5duqRqDlWuXDnRGBe/t7kPJTGs9TzmM7Gm
Eb2L9Y3052H/36pVq8aqf2Sr5/F88fHsmc06ubz+Yl0R87qAnJPf335+fsqV
zWOJjOtxjy57FQuCIAiCIDga4nnJw1oW3Oek52oyVlKwYEF1bW10n7yXL6Ow
accfaNG9FMrW+wxVGn8fJ+cwus5KjVZZ1P67oXMrYLpvHVM9S5WLuTn9+12C
zheT38lzwRqh41b+jB7jSqBBp1ym/Yvmfdfpem7uX6regyMnd8DFK0GGvpdG
Yu559Udtx8Hz9/FU85EDB/aruiFZsmQx7SPLmDEjMmTIoDwkJZ5H19qyZYuq
d/LFF1+oeZjfmDVrVlMt/dTwPMbHVq9ere6j6D7F5+MeOtYwYH8ufT22eh4Z
OXKk2tvHWuTc+5ccjFeVLFkS//znP03PzXggY3qyx0YQBEEQBEdDPC9puP+G
+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
AzZLlixqnm7dutk0R2Lonsfcb/E8QRBSE/E8x+X23etYtHIcGnQogFJ1PlY1
OPX6mwm5XsVGGVTPAOYkMp+zRb/86PxrMQyaXg6/raim9vHN3FRPxfbmx/SU
UzU76U3M8XQQ31Nep+J1DUzrpKPy3xm3m7y+lopb9tbcjrE71lip0y57dHyz
YQZU9tAcr3H88xQdA82AMpo3l3H/DD2G18HuA34IDzeuzmtqIZ73mrT2PHpH
nTp1Yr1e7tOzx14lR8OVPW/BggWmz8P27dvtvRxDYYxSf21z5syx61rE8wRB
EGxHPM+xuXXnGpas9kLzbiVQrv6ncGvwGao1zRAvh9O8Hmf0frToPWnVW2SB
e4ecaN4nn6rR2XdyaQxfUAnjVlZXvjRtY91o99Ncb0GgBxbtbKTqmCzY7hGz
z69BrLxPQ+J0MXmXKq80xuMW7PBQz8vBOpk8doZvPUzbUAcT19TE6KVVMGhW
efQYVxLtPAuhcfc8yu2qsv8dX2vMa67aJL7f6Xsb6cnsh87z1H90Y+zc74MX
L1LeHyktEM97TVp6HntfsY4k6wTrz1eqVCn4+/sb/lzOiCt7HnP89c8E972l
J7jfgA7C10YnsSfieYIgCLYjnuf4hN69Cd9ty9BrRAPld5U9vtB85hvN935I
MGZlivGxtzrjfA05oh2ozi/Z0EhzJNbqZCys+28l0H9aWZP7TVpXE1O8ayu/
mk4H9Kun/G6uf7STsaYnnSzu0Oug6COhYzg4x5yY+OFMupw2P12TsUbuK/T6
syZGaU43WHM6xuu6jCqGtoMLoVnvfHDvlAs1WmWJeU0Z1N5EvsYqjePvwTM/
DxUbfYsy9T5FuQZfonn3Epi2YDCOB+11ijiejnjea9LK8x49eqRqorOPlv5c
OXLkUDl6QjRGe54z1WFJz57HnuH6a2NvQ3tirzos4nmCIKQHxPOcg8jIcOw/
vhv9xnVHpeb5lbtUa/K15jzfqLqR7A2n15FMKM6nRpOMJkeq0ID5jRlQvUVm
1G2fAx6a+zXv+yPaDC6IjiOKav5XXO15GzijHIbMq4Bfl1SN9sC1NVUccPK6
2EO5oU8dNaZqjhjvGO3/WQdz/KoaGL2sKoYvrKRqpvSbWkb1PugyupjaV9h6
YEE07ZlX5Z3WapNVrZvr1b1Od7qE9t1VM9WqofNxf963KK+5HfsmVG+ZDb1H
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
+pPk1f3oRLhsO4tKQz20rOevMl9SSsH7dxYmmV/sNfcgymi112/hEVy89STP
31vQnCd9O7PmvIkTJxq9D1L2+Eke1z+G9GWR/jFxcXFGPU5WzHlEREREZAzm
vOK1atUq/PWvf83MAJL5rly5kufv37VrV2bOk6t+/frqrIG8kLWZRy49RO+5
h1BukDsGLTmKk3IeuQn7bBpy61GCmmeU/YMt7AOw61A44pPy1gelIDlPzquw
s7PLlvMkVxtLfp6NjU3mY0gfVcmPDx/mP5sx5xERERGRMZjzio/M2UkPkaw5
QvqsyPxPXp06dQrlypVT6z3l+ytXrqz6seRl75ecmbfO/xoajfdDlWGemO92
EU/iTd9/5XlJqenYeSgCTSf7oeoIL9htPIWbD/I2F1aQnCfzpSNGjMj2+kiv
TWP31cnaXHkcfc9N6dkp84JyLl9+MecRERERkTGY84qPrP8bNWpUthwxdepU
o3KEZAXp2y/n6cn3f/bZZ1i+fHme+v7fuB+HietPqozX0j4AHsdyP/fblE5d
j0L/hYdhY+uOrjP3q3p8+vTlz1NBct6dO3fQv3//bK+Ps7Oz0TlP8rz06KxQ
oYJ6DHmtJk+ebPQ+v6yY84iIiIjIGMx5xUdynmS0rDli5syZRj2GzP0tWbIE
H374ofr+d999V53FID05c/3ZcmbB2XvoNGMfbIZ6YuTKEJyPyPu+t+Im9TY/
4yy9+uP3Yo3fNUTnYe6xIDkvMjISAwYMyPb6LFiwwOh7l5zn6uqq5l2Z83SY
84iIiIiKF3Ne8SmMnCfzdrt378b//d//qe+X3ptylt7jx49z/b7HcSlY4XMV
tcd4o9pIL6zaew3xSfk/Z72oSQ0Gaq9ZO+21q6DlgjGrT+Dy7ZiXfl9h5zz5
fmNJzpPXSH+2AnMecx4RERFRcWPOKz6G1m3a29ur/Vx5Jb1CPDw88Omnn2Y+
xg8//PDSnHfh5hOMXBGCyiM88ZNLEILP53+vWHG5fjcWw1ceR6VhHmg/NRh+
p+68dA0lc555Ys4jIiIiKl7MecVHxv/SdyVrjpD9YJIvjHkMLy+vbDlPzvWW
vWU5f88zeIfcRgs7f1TRct7kjacQdi/vvV9MJSY+Va3XbDTRD9VGemKRx8v7
xhR2zps9e7bR9y2v0Z49e7huMwvmPCIiIqLixZxXvJ4/V0F6dezcudOox5Cz
FT755JPMx/juu+9w8eLFHL/+UUwSFrhdQOVhnqg/zhdb9t0w6zWbelKHIVce
ofusA/h+wB7YLjuG8xHRuX5PYfdhcXR0NPq+Jee5ublly3nSt5P9NpnziIiI
iIoLc17xkrPyevbsmZkjfvOb36BFixY4e/asWpOZmydPnuDIkSNqj99f/vKX
bGety/fn5NS1KAxadASVhnqip/aaHr9iORnhXlSiOldB1m62niJn6UUgNT3n
M+ULkvMkh0lPm6w5T87TM7bfpqzPXbx4Mb744ovMcxVkfe6DBw+MepysmPOI
iIiIyBjMecVLspzM6b3++uuZWeLNN99EvXr14Ofnh0ePHqn5ID3poynrCU+f
Pq329sk8nuSGV199Nc85b+fBcDScsBfVR3rBZdtZREblLfeYg6SUNGzdfwMt
HAJQ0dZDnZ/+MCYpx68vSM5LTEx84XzD/OQ8eRzJ7vrz7GX+dv78+Sqn5xdz
HhEREREZgzmv+F2/fh09evTAb3/722yZQvp2NGnSBG3atEG7du3Qtm1blRca
NmyIatWq4b333sv29Vn3592+fdvgz7qvPQ/TdpxTPSub2wdomS8CCcm5zxua
E8lYZ8IeY8Cioyg9wBW95x1GyNVHSMthTq8gOU9+loODwwvn2BvTJ0fIz7Ox
scl8DDkDY/369UhKyjmfvgxzHhEREREZgznPNM6fP6/WCJYqVcpgdjN0yRyg
zPvVqFFDnZun//z333+fY7/NA6H30XPOQZQf7I7BS4/iXHi0en0tSXRcCua5
XlS9WJpM8sNa/2uITza8v7AgOU9Mnz4923M+ePBgo9dbPnz4UJ11oX+M//zn
P/Dx8XnputxcH5M5j4iIiIiMwJxnOtJ/ccOGDfjpp5/U2QhffvklPv74Y3z0
0Ufq+ve//43PP/9crcuU+aERI0bg8OHDWLduXeb5ebJ+s06dOoiOfrE/SWJK
OlbvvYa643xRY6SXykp5OWvc3Mg8m8+JO+o8CBtbd4xZcwK3HxrObgXNeRs3
blTrYvWP0bFjR1y6dMmo+5U1tPozFeSS1/HMmTNGPcbzmPOIiIiIyBjMeaYl
e/Ek70l/FVdXVyxZsgRz5szB3LlzVS+Pbdu2ITg4WK31lDPS9efn/fe//1UZ
4k9/+pPat2coy9y4F4eJ60+pfW1tnYLgfvRWrj1MzNnFm08walUIKgx2Ryct
KwSfu2dw7WZBc15ISAiaNWum+uPIY1SsWFGdhZdX0oNF+qFKPpfvl7W55cuX
N+rsDEOY84iIiIjIGMx55iMlJQVxcXGIiYlRl3wse8Oy9mWRnCfnMMhaQHnZ
ZA5Q5vckA2Z7rNSn8D8dic7T96k1m6NXncClWzHF/SsVGjk3b6XPFdQZ44O6
43yw0OOieo2fV9CcJ3lM9uTpe6hIj5x+/frlec1lVFSU+v4PPvhAfb+cc7hw
4cIC7c0TzHlEREREZAzmPMsiPRtlru9vf/ubyhGVK1dGYGBgtiwoZE/bUq/L
qDvWB9VGeGkZ6SqSUiyn/8rznj57hn3n7qHD1GBUHOqOQUuOItTAWXoFzXmS
tVevXp2tH6r0wAkNDc3T9x88eFCts9X32JHzEWXNprE9O5/HnEdERERExmDO
syySN6QXi8wzyctWt25dg2ekX74Vg+HLj6tz59pr2SjwjOX//mH34jB50xnU
GOOP1s4H4XXqxf4oXbt2zZbzVqxYYXTGOnXqFGrWrJn5HP/9739XPXNeds75
sWPH0KpVK7zyyiuZ56Pb2trm2CPHGMx5RERERGQM5jzLsmfPHrzxxhuZe7/k
fIbne7CkpD2Fd8httJoSCJuhHrDffEbt1bN0sYmp2BJ0GQ1G7kSF/hsxcdV+
nLkUgYcPH6hzB6XPpZxJoc9577zzDqZNm4aIiAj136Rvpv6S9ZU5nZcg839y
DkLWs+hlH6ScpSc9VuT5lnWycslZebLWU+ZUs/5seW0k8x0/frxQfnfmPCIi
IiIyBnOe5ZA9e87Oznjttdcy937JmevPux+diPluF1BjlDfqjPXB1n03kJpm
mf1XnucVcARlG/fBX8v+iPJNeuGXwaMxxcEeTo6O6uw7WTOpz1qyx07OI5Sz
z6dMmaJy2uTJk9Xl4uKCffv25fhzwsPD1ZzeW2+9lfl4kq8bN26MmTNnYvv2
7WqfpOyNlD6osk9S/3XSw6VKlSrYsWNHgc5SyIo5j4iIiIiMwZxnOWTOqHbt
2pnrArt06YJr16698HWnwqLQb+ERVB3uhZ5zDuG4hWWC3GzevAXvvPdnvPLa
W3jtzXfwzh/exR//+L46C0HWST5/9rysvZTz5eW/ySUfyyXzcyNHjszx58h+
R+lz2r9/f/zzn//MfDw5x+LPf/6z+pycffGPf/xDrQ/N+t9lz6RkPGP2Bb4M
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
lkfM2olKXbRabin9WXTnK+RUy1V+nqfV8hY1j9vcwrOevr9Mo7EeqKlqeZaa
jzbYOyizlu3ReOBCLNjKWiYiIiIyJwXNecoz4NyVO7Bb6omaP89S4z95nz/n
nhbOap6gzuCNmf0Lm1laTwsZz6uzAQPQcLQravRdnnH2ueFz8WTfkjprvq0D
2o1Yjo2ex/EwOq6QXkUqLDKvev7qHTgs02q552x800rXVyS3/ixSy7UHb9D1
Z8noTWny+jTq+nUddSOtlqv/slxlWzUnncNZmfI3LvXcZtgybPA4pta+EhER
EZH5KJScp3mqjY9v3Hmkzn2r/8t8fJNL1svsadF1JmoNWKPOl1OZyWLm9XR7
sppOlh4Vu1C19xJU7Dg1l4znjNLamFjOQO8+cR3c9p1DXHxyYbx8VASklsMj
ozB3UyAaSC231tVyuRz27MnrW1Ffy2M9LCzrBWTOp8t58NX6LMk8GyWnWpaM
J3P23SasVefOsz8sERERkfkprJynF/kwBiv3HEbLoUvV+Fj6cRo+d0HWvjmi
Ypfp6kyuhmPdf+1lMtl8x8hyj7J/qemkvWrtaZWeC3/tz2FgXCx7vL5uba9+
XzlnPvjEVfYhtBD3o2Kx1u0IWg1dglJtHfBtRl9ZQ7Vctr2Trpb7rdBq2U1X
yw5BZt1rKLPfilbL9YZvQ9Weuv6w5XLptyJ/07IHdxBrmYiIiMisFXbOE4+e
xGN3wGn1fr/kvK8z+q2/2J8lox9l52mo1ncpGozcjeaTAzL27Jnf+Fg3Lg5W
fQjr2G5E5R7ztPGwk26v1nNjYtmrKP1W/tdiMqp2n4nxC1xxPDQCaelPC/Op
piL2OCYBrsFn0X3SOnV+yNet7HTzdwZ6Db1Qy3LGuJn2GtLl0F9rWfYZSh3r
+sO+2Dvo+3ZO+LKFHSp3m4Gx810RcoG1TERERGTOiiLnieSUVAQev4wBzlvU
erevVf9Cpxd6WpTP7GnhoubG6g/bhmaT/NScmTmNj/Xn/jUe54VaA9ep8991
a9ucs52boJ/rkXz7VUt71Os7DzPX+eNS+P3CfoqpmKSmpSM45AoGuWxV81zy
uupq2dActW5PW5Ve5lrLAZnzeLKfsNagdaik1XKFHHoHqVpu66B60tTrMxfT
1uzFpRv3TP2SEBEREdFLFFXOE+npT9X7/mPm7UbVbjPUeXGyr+f5ua+s/Vkq
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
hU1U/8Lc5/XU3Ie+p2a/lWoNqPR5MdSjQp2bID01Wzug2aDF6pz32/ej1V4s
opeRWpa5stFzd6FS1+kZfWUNZL1OLhlnMzqjSnetlm03q7m5l2U9XS0HqVqW
c9grdsnoD2tg7lBqWfqtSC03HbQIS7VavnXvMWuZiIiIyEqZW84T6U+f4kLY
XUxd5YNaveaoPXHS98RwTwsnNbaVc+5qqf6FXmiRMcfxQo+KjD4XDUftQfW+
y9SaTP342mBPzTYOalzcftRKbNt7Up3zTmSMp0+fqTkzmQeu03sOvm5pp9ZN
Gsx6HXUZrVK32ag9aJ2q5eY51bJa2xn4ay1LT832hmtZLqlluX4atQLbfKWW
40391BARERFRETLHnKcn59Et2roPTQYuVGdQS+/3nNZwStaT8+5q9V+NxmPd
s/WqVz0qHDL6rQzfjqq9F2fMoTi+uH+p8zSU0R5P5l6kN35vuw3wPhCK2IRk
Uz8dZMFk7mzpjgNoNniR2hv3ndRyx4z9ny/04nTUctsM1Oy/Ss3VZe0r+2vv
IH/UG7Ejo5anZqz9fLHfivQM+qaVgzqzpJf9BngdOM9aJiIiIioBzDnniQdR
cdjkdQw/jlyhcp7sLZK9ey/2L3RBOdXTYpo6M0zXvzBAy3vB6pLz1esN3azO
qNat93QycH7DVNUD5mst41XqOgPDZ+7EodPXkZaWbuqngayAzAdv9gnBT6NW
onS7KZn9WQxmvYxalrMcG47eo6tl+2B1yfnq9YZu+bWWn1unqf/bkGwn71fI
+udhM3fgIGuZiIiIqMQw95wn4hOT4bH/PHpMXq/ONpA9e2UN9GfRZb2MXpy9
F6PByF1qjVuTiT7qfPXK3Wcb7Kmp37+kMl4re9TsNRv2y7zU2ddEhSk+IVnN
qfWctE6rVd28cY61nJHfdLW8U8t6/irj1RmyMaOWX9yLpzKe7Cv90UnlyJo9
Z6nz289evW3qX52IiIiIipEl5DyRnJKm5iOGztihjWWn6XpatM+lf6H2sfQv
rDNkkzpXXfY86frMO78wj1e+068Zr8Ev8zFvcyBuREbhKXtUUBFITknFoVPX
MWzmTth0nqbmj8sYOnehk76WXVC110LU1fJd7Sy1bKjfilzSU1POAGnQbx7m
bgxA2O1Hap8gEREREZUclpLzRFr6U5y7egd2SzzU2V9ftrTLuX+hnEPdcSps
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
iIiIiMi6MOcRERERERFZF+Y8IiIiIiIi68KcR0REREREZF2Y84iIiIiIiKwL
cx4REREREZF1Yc4jIiIiIiKyLsx5RERERERE1oU5j4iIiIiIyLow5xERERER
EVkX5jwiIiIiIiLrwpxX+FJSUhAeHo4LFy5g+/bt6Nu3r7pWrFiBI0eO4NKl
S0hISDD1bRIVqmfPnuHx48eqvqXO5ZK/gaioKFPfGhEREVGJw5xXeCIjI+Hr
64spU6agT58+6NSpE77//nt5jtX1ySefoFmzZujatSsmTpwId3d3NS4msgbH
jx/HiBEjVH1LncslfwNTp07Fw4cPTX17RERERCUKc17BxcfH49ChQxg7dixK
ly6dmetedn355ZdwdnbG9evXTf0rEBVIbGwsbG1tDdb5F198gTNnzpj6FomI
iIhKFOa8gpG1art27UK1atXw2muvZY5tf/e73+Gtt97CO++8g3fffVddb7/9
Nl599dVsY2D5nKzpjI6ONvWvQpQv8jewY8eObHPXWa///e9/zHlERERExYw5
r2CePHmi1qbpx7SvvPIKevfujdWrV8Pb2xsHDx7MvGSd5pAhQ9T6zefHwdu2
bUN6erqpfx0io924cQPt27fH66+/rt7X+O6779T7Gvr6/uabb3D27FlT3yYR
ERFRicKcVzCPHj1SazVl/q5nz56YP38+rly5gqdPnxr8eunPIms1P/30U/zm
N79R4+A333wTP/74I/tVkEVauXIl/v3vf6ta/vDDDzFu3Dj13gVzHhEREZHp
MOcVTGJiIuzs7NTevIiIiDx9z82bNzF48OAX5jxOnz6t1sARWQqZy2vatKla
j/z++++r/kN+fn4oX748cx4RERGRCTHnFZxkPTlLIa9SU1PVnr6PP/44W08W
Hx8frt0ki/HgwQNMnjwZH3zwgVqvLP01z58/r85SKFOmDHMeERERkQkx55nG
iRMnVB/CrDlP9vMx55GlkPcq/vznP6v6lfcsli9frj4v65Zljx5zHhEREZHp
MOeZhvQfzLqHifN5ZElkjfKAAQMy67dz586Z65YvXrzInEdERERkYsx5piHn
7X322WfZcp705OT+PDJ3su5Y5u70646//fZbNbenFxoaypxHREREZGLMecVP
xskrVqzAP/7xDzUOlr6b9evXz3MfFyJTkrnoxo0bZ+a4iRMnqr6zerJHjzmP
iIiIyLSY84qfjJObN2+ON954Q42D//73v2PWrFkq/xGZM1lX7OTkhL/85S+q
dv/73/8iMDAw29cw5xERERGZHnNe8ZEz9eT8vDFjxmRmPOlT2KpVK1y+fNnU
t0eUK1lTfODAAVSvXj3zrDx5fyI6Ojrb1zHnEREREZkec17xkB70bm5uql+F
fi5Erjp16mDv3r05nqtOZC5u376t5qHfeustvPnmm+jQoQOuXbv2wtcx5xER
ERGZHnNe4ZEst3LlSgwZMgSDBg1S18CBA9G7d2+0b98e5cqVw29/+1s19q1b
ty6GDx+O4OBgrtcks5eWlobdu3dnnqPw1VdfYceOHQb7wzLnEREREZkec17h
kfPvZK+dfnxr6JJ5kEqVKmHx4sW4c+eOqW+ZKE/k7POWLVvi7bffxjvvvKPO
VJD3NQxhziMiIiIyPea8wrNt2zbVQ/P9999X1x//+Ef17+9+97vMMe8f/vAH
1VtzxIgRqufmyZMnERsba+pbJ8pRfHw8pk2bpvrCSg3XqFEDQUFBOX49cx4R
ERGR6ZXknCd9JWRfXF6vl7l+/brqS2FnZwd7e3s4Ojpi8uTJ6Nixo5rnk31N
cv3+979X8yKSAStUqIB58+apvU9Ehamw6jsgIAAVK1ZUme3VV19VdS3rOHPC
nEdERERkeiU15yUmJqrzDWTP0c6dO9W/OV1bt26Fj49PtjPCDJG9So8fP8b9
+/fVmraHDx+qj69evYr9+/ers6RdXFxQtWrVbGs5P/roI3Tr1g1hYWHF9NuT
tZM9nzdu3ICXl5eaZ86tvqX+pTYN9VSRGh45ciRef/11Vatt27ZVfze5Yc4j
IiIiMr2SmvOioqLUPFrZsmVRpkwZ9W9O1/fff48GDRrAz8+vwD1TZI2mr6+v
6lsocyP6sbDseZK5QFkjR1RQycnJ8PT0RMOGDVX95lbf+vpfuHDhC2uI58+f
r87I0/decXV1zXUuTzDnEREREZleSc550g8zt54pz1/SSzMlJaVQfv6hQ4dQ
r149tYZTvx5O1nAeP35crbcjKgh5P2Lt2rWZe+rycv3yyy/Z5qzv3r2rzv2Q
/yZngcyYMeOlGU/IGmTJjvrHlcx38+bNovx1iYiIiOg5JTXnybzZokWL8PXX
X+fpelnvCWPJGk9ZM5d13kPm9JYsWaLWlBIVhOy3k311tWvXznONy99DUlKS
+n6ZD5SesJ9//rmqzf/85z9YunSpWrMpc3O5XbIG9Isvvsis608//VSdwaD/
75cuXVLrm/l+BhEREVHRKak5T8aYcXFx6myDvFz37t1TY9/CFBERodbVZT1z
Ydy4cWoehaigJLNJ3ea1xuXvQZ+9ZH+pzC/r1xa/9tprak7vww8/VD1lc7s+
+OAD9fX6upaP5XP6/166dGm1RjkhIcHEzxARERGR9SqpOc8cyBq5Fi1aZMt5
gwcPVv0ziEwpMjISn3zyiVHrmo25KleurHq8EBEREVHRYM4zHdkjKGdP68e+
b7zxBvr166fOZyAypZiYGPTu3Tuzz2ZhX+3bt8eTJ09M/WsSERERWS3mPNOR
9ZlNmzbNHPvKmXpjxoxRcylEpiT7R6UnkJyp0K5dO6Mu6U373nvvZdb1u+++
i/r162f+d1tbW+zbty9PPV2IiIiIKH+Y8womL+en5yQ4ODjz/Gm55Az15cuX
Z/bCILJEoaGhL5yrcO7cOVPfFhEREVGJwpyXf3LGwsWLF9UYVvoHGkPWrA0f
Phx/+tOfMsfD0udi7969RXS3RMXj6tWr6sw+fV1/++23uHz5sqlvi4iIiKhE
Yc7Lv+joaEyaNAnly5dX/VNOnTr1wjnThkhvQ+lR/9lnn+GVV17JXNvWt29f
3Lp1qxjunKjo8Jx0IiIiItNjzss/mcMbMGBA5tl3jRs3Rp8+fdTay8OHD6vz
oqXXivTVlL14Mv5dtmwZOnTooM4r02c8uWT/kpxNJvuiiCwZcx4RERGR6THn
5Z/so9u8eTP+/e9/Z+sl+NFHH6FZs2Zqjm/s2LGqt8qwYcPQqVMn/Otf/8r2
tdJ7pW7duuocaSJrIOuYn8958h4GERERERUf5ryCCQsLQ+fOnfHxxx+rvXZZ
z4fO7ZL5P8mD3bp1w4EDB9h7kKyG9GH54osvMmv9v//9L3MeERERUTFjzisY
6bcp++2CgoIwe/ZstG3bVu21y7omM+v16quvqnwnveV3796NmzdvFqhnJ5G5
CQ8PV31k5ew9ucqUKcM+LERERETFjDmv8EhfFum/KT0zZT2n7NObO3cuHB0d
sWDBAqxYsQJbt25VmVDyHffikTWS9cyHDh2Cl5eXumS+OiEhwdS3RURERFSi
MOcVLTl7ISYmhpmOiIiIiIiKDXMeERERERGRdWHOIyIiIiIisi7MeURERERE
RNaFOY+IiIiIiMi6MOcRERERERFZF+Y8IiIiIiIi68KcR0REREREZF2Y84iI
iIiIiKwLcx4REREREZF1Yc4jIiIiIiKyLsx5RERERERE1oU5j4iIiIiIyLr8
PyIiIiIiIrI6/x89MdCu
    "], {{0, 720}, {890, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  BaseStyle->"ImageGraphics",
  ImageSize->{489.9999999999966, Automatic},
  ImageSizeRaw->{890, 720},
  PlotRange->{{0, 890}, {0, 720}}]], "Input"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell["CUDA", "Section",
 CellChangeTimes->{{3.649103899821354*^9, 3.6491039002106295`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"cuda", "=", "False"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"usecuda", ":=", 
  RowBox[{"(", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Needs", "[", "\"\<CUDALink`\>\"", "]"}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"cuda", "=", "True"}], ";"}], ")"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"CUDADot2", "[", 
   RowBox[{"a_", ",", "b_"}], "]"}], ":=", 
  RowBox[{"(", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"dima", "=", 
     RowBox[{"Dimensions", "[", "a", "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"dimb", "=", 
     RowBox[{"Dimensions", "[", "b", "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"Length", "[", "dima", "]"}], ">", "2"}], "||", 
       RowBox[{
        RowBox[{"Length", "[", "dimb", "]"}], ">", "2"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"ArrayReshape", "[", 
       RowBox[{
        RowBox[{"CUDALink`CUDADot", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Flatten", "[", 
            RowBox[{"a", ",", 
             RowBox[{
              RowBox[{"Length", "[", "dima", "]"}], "-", "2"}]}], "]"}], "//",
            "N"}], ",", 
          RowBox[{
           RowBox[{"Flatten", "/@", "b"}], "//", "N"}]}], "]"}], ",", 
        RowBox[{
         RowBox[{"dima", "\[LeftDoubleBracket]", 
          RowBox[{";;", 
           RowBox[{"-", "2"}]}], "\[RightDoubleBracket]"}], "~", "Join", "~", 
         RowBox[{"dimb", "\[LeftDoubleBracket]", 
          RowBox[{"2", ";;"}], "\[RightDoubleBracket]"}]}]}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"CUDALink`CUDADot", "[", 
       RowBox[{
        RowBox[{"a", "//", "N"}], ",", 
        RowBox[{"b", "//", "N"}]}], "]"}]}], "]"}]}], "\[IndentingNewLine]", 
   ")"}]}]}], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"dot", "[", 
    RowBox[{"a_", ",", "b_"}], "]"}], ":=", 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{"cuda", "&&", 
      RowBox[{
       RowBox[{
        RowBox[{"Dimensions", "[", "a", "]"}], "\[LeftDoubleBracket]", 
        RowBox[{"-", "1"}], "\[RightDoubleBracket]"}], "<", "2500"}]}], ",", 
     RowBox[{"CUDADot2", "[", 
      RowBox[{"a", ",", "b"}], "]"}], ",", 
     RowBox[{"a", ".", "b"}]}], "]"}]}], ";"}]], "Input"],

Cell[BoxData["usecuda"], "Input",
 CellChangeTimes->{{3.649680345283391*^9, 3.6496803468755274`*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell["NDSolve and/or spectral methods", "Section",
 CellChangeTimes->{{3.649103883226541*^9, 3.6491038898699255`*^9}}],

Cell["Solve linear ODE:", "Text",
 CellChangeTimes->{{3.6491105296841354`*^9, 3.649110539302202*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"LDE", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"2", "+", "x"}], ")"}], " ", 
     RowBox[{
      RowBox[{"y", "''"}], "[", "x", "]"}]}], "+", 
    RowBox[{
     RowBox[{"y", "'"}], "[", "x", "]"}], "-", 
    RowBox[{"20", "x", " ", 
     RowBox[{"y", "[", "x", "]"}]}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"LDEboundary", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"y", "[", 
       RowBox[{"-", "1"}], "]"}], "\[Equal]", "5"}], ",", 
     RowBox[{
      RowBox[{"y", "[", "1", "]"}], "\[Equal]", 
      RowBox[{"-", "1"}]}]}], "}"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.567826462952276*^9, 3.567826497535254*^9}, {
   3.567826624766531*^9, 3.5678266942075033`*^9}, {3.5678268543976655`*^9, 
   3.567826910701886*^9}, {3.5678269664490747`*^9, 3.567826966583082*^9}, {
   3.56782718474656*^9, 3.5678271865586643`*^9}, {3.5678282778150806`*^9, 
   3.5678283089658623`*^9}, 3.6491094837840137`*^9, {3.649722219701731*^9, 
   3.6497222198438597`*^9}, {3.6497222999065905`*^9, 3.649722327695319*^9}}],

Cell[BoxData[{
 RowBox[{"dsolLDE", "=", 
  RowBox[{"y", "/.", 
   RowBox[{
    RowBox[{"DSolve", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"LDE", "\[Equal]", "0"}], ",", "LDEboundary"}], "}"}], "//", 
       "Flatten"}], ",", "y", ",", 
      RowBox[{"{", 
       RowBox[{"x", ",", 
        RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "]"}], 
    "\[LeftDoubleBracket]", "1", 
    "\[RightDoubleBracket]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{"ndsolLDE", "=", 
  RowBox[{"y", "/.", 
   RowBox[{
    RowBox[{"NDSolve", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"LDE", "\[Equal]", "0"}], ",", "LDEboundary"}], "}"}], "//", 
       "Flatten"}], ",", "y", ",", 
      RowBox[{"{", 
       RowBox[{"x", ",", 
        RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "]"}], 
    "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}]}]}], "Input",
 CellChangeTimes->{{3.5678266076075497`*^9, 3.5678266343740807`*^9}, {
  3.5678267152507067`*^9, 3.5678267368869443`*^9}, {3.6491083698693686`*^9, 
  3.649108415558735*^9}, {3.6491094902896214`*^9, 3.649109491089259*^9}, {
  3.6491100218115683`*^9, 3.6491100346707354`*^9}, {3.649110346920513*^9, 
  3.6491103557246027`*^9}, {3.6491104675034637`*^9, 3.649110471927231*^9}}],

Cell[BoxData[
 RowBox[{"pl", "=", 
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"dsolLDE", "[", "\[FormalX]", "]"}], "//", "Re"}], ",", 
    RowBox[{"{", 
     RowBox[{"\[FormalX]", ",", 
      RowBox[{"-", "1"}], ",", "1.`"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.649525154576973*^9, 3.649525155426585*^9}, {
  3.6497222573664303`*^9, 3.6497222870064735`*^9}, {3.6497225443208895`*^9, 
  3.649722563441444*^9}},
 NumberMarks->False],

Cell[BoxData[
 RowBox[{
  RowBox[{"initGrid", "[", "points_", "]"}], ":=", 
  RowBox[{"(", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"nx", "=", "points"}], ";", "\[IndentingNewLine]", 
    RowBox[{"x", "=", 
     RowBox[{"N", "[", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"-", 
         RowBox[{"Cos", "[", 
          FractionBox[
           RowBox[{"r", " ", "\[Pi]"}], 
           RowBox[{"nx", "-", "1"}]], "]"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"r", ",", "0", ",", 
          RowBox[{"nx", "-", "1"}]}], "}"}]}], "]"}], "]"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"DSpec", "=", 
     RowBox[{
      RowBox[{"NDSolve`FiniteDifferenceDerivative", "[", 
       RowBox[{"1", ",", "x", ",", 
        RowBox[{"DifferenceOrder", "\[Rule]", 
         RowBox[{"points", "-", "1"}]}]}], "]"}], "[", 
      "\"\<DifferentiationMatrix\>\"", "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"D2Spec", "=", 
     RowBox[{"DSpec", ".", "DSpec"}]}], ";", "\[IndentingNewLine]", "x"}], 
   ")"}]}]], "Input",
 CellChangeTimes->{{3.5678272659242034`*^9, 3.5678272694394045`*^9}, 
   3.5678274066252513`*^9, {3.5678277719501467`*^9, 3.5678278062691097`*^9}, {
   3.5678279296381655`*^9, 3.5678279300001864`*^9}, {3.5986107520608687`*^9, 
   3.598610752765909*^9}, {3.649108452124614*^9, 3.649108452970214*^9}, {
   3.6491084965420785`*^9, 3.649108523560197*^9}, {3.649109341974521*^9, 
   3.6491093486079645`*^9}, {3.6491093979508977`*^9, 
   3.6491094182908497`*^9}, {3.649109458071701*^9, 3.6491094655487976`*^9}, {
   3.6491096093863106`*^9, 3.649109616199907*^9}, {3.6491106202074814`*^9, 
   3.649110621132262*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"eqm", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"DiagonalMatrix", "[", 
      RowBox[{"D", "[", 
       RowBox[{"LDE", ",", 
        RowBox[{
         RowBox[{"y", "''"}], "[", "x", "]"}]}], "]"}], "]"}], ".", 
     "D2Spec"}], "+", 
    RowBox[{
     RowBox[{"DiagonalMatrix", "[", 
      RowBox[{"D", "[", 
       RowBox[{"LDE", ",", 
        RowBox[{
         RowBox[{"y", "'"}], "[", "x", "]"}]}], "]"}], "]"}], ".", "DSpec"}], 
    "+", 
    RowBox[{"DiagonalMatrix", "[", 
     RowBox[{"D", "[", 
      RowBox[{"LDE", ",", 
       RowBox[{"y", "[", "x", "]"}]}], "]"}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"source", "=", 
   RowBox[{"LDE", "/.", 
    RowBox[{"y", "\[Rule]", 
     RowBox[{"(", 
      RowBox[{"0", "&"}], ")"}]}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.6491094361848006`*^9, 3.6491094544355063`*^9}, {
  3.6491095466218214`*^9, 3.6491095951450715`*^9}, {3.649109645336141*^9, 
  3.649109652937291*^9}, {3.64910968772199*^9, 3.649109697919569*^9}, {
  3.649722397945093*^9, 3.649722411252554*^9}}],

Cell[BoxData[
 RowBox[{"LinearSolve", "[", 
  RowBox[{"eqm", ",", 
   RowBox[{"-", "source"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.649109807148431*^9, 3.649109818411459*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"eqm", "\[LeftDoubleBracket]", 
    RowBox[{"1", ",", ";;"}], "\[RightDoubleBracket]"}], "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"i", "\[Equal]", "1"}], ",", "1", ",", "0"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "nx"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"eqm", "\[LeftDoubleBracket]", 
    RowBox[{
     RowBox[{"-", "1"}], ",", ";;"}], "\[RightDoubleBracket]"}], "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"i", "\[Equal]", "nx"}], ",", "1", ",", "0"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "nx"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     RowBox[{"source", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}],
      "=", 
     RowBox[{"-", "5"}]}], ",", 
    RowBox[{
     RowBox[{"source", "\[LeftDoubleBracket]", 
      RowBox[{"-", "1"}], "\[RightDoubleBracket]"}], "=", "1"}]}], "}"}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.6491097132281976`*^9, 3.649109794119665*^9}, {
  3.6491099772519417`*^9, 3.6491099789971776`*^9}}],

Cell[BoxData[
 RowBox[{"function", "=", 
  RowBox[{"LinearSolve", "[", 
   RowBox[{"eqm", ",", 
    RowBox[{"-", "source"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.6491097528771706`*^9, 3.6491097554943094`*^9}, {
  3.6491098363282084`*^9, 3.6491098406352315`*^9}}],

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{"pl", ",", 
   RowBox[{"ListPlot", "[", 
    RowBox[{"Thread", "[", 
     RowBox[{"{", 
      RowBox[{"x", ",", "function"}], "}"}], "]"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.649109843737979*^9, 3.6491098554431067`*^9}, {
  3.6495251611896462`*^9, 3.6495251639015636`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"function", "-", 
   RowBox[{"dsolLDE", "[", "x", "]"}]}], "//", "ListPlot"}]], "Input",
 CellChangeTimes->{{3.649110001900264*^9, 3.6491100108433704`*^9}, {
   3.6491100827035513`*^9, 3.6491100838193536`*^9}, {3.6491104168245277`*^9, 
   3.6491104407920256`*^9}, 3.649110605520056*^9, 3.6495248588909597`*^9, 
   3.6495251757809815`*^9, {3.64952523962409*^9, 3.6495252437510076`*^9}, 
   3.6497224681348567`*^9, 3.64972249854844*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"grid", "=", "x"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"x", "=."}]}], "Input",
 CellChangeTimes->{{3.649524882234462*^9, 3.649524882578704*^9}, {
  3.649524928579221*^9, 3.6495249368100386`*^9}}],

Cell[BoxData[
 RowBox[{"ndsolLDE2", "=", 
  RowBox[{"y", "/.", 
   RowBox[{
    RowBox[{"NDSolve", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"LDE", "\[Equal]", "0"}], ",", "LDEboundary"}], "}"}], "//", 
       "Flatten"}], ",", "y", ",", 
      RowBox[{"{", 
       RowBox[{"x", ",", 
        RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
      RowBox[{"StartingStepSize", "\[Rule]", 
       SuperscriptBox["10", 
        RowBox[{"-", "2"}]]}], ",", 
      RowBox[{"Method", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\"\<FixedStep\>\"", ",", 
         RowBox[{"Method", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"\"\<ExplicitRungeKutta\>\"", ",", 
            RowBox[{"\"\<DifferenceOrder\>\"", "\[Rule]", "8"}], ",", 
            RowBox[{"\"\<StiffnessTest\>\"", "\[Rule]", "False"}]}], 
           "}"}]}]}], "}"}]}]}], "]"}], "\[LeftDoubleBracket]", "1", 
    "\[RightDoubleBracket]"}]}]}]], "Input",
 CellChangeTimes->{
  3.6495247238925347`*^9, {3.6495248776942515`*^9, 3.649524907196106*^9}, {
   3.649524959203868*^9, 3.6495250048651447`*^9}, 3.649525117411701*^9, {
   3.6495252217854795`*^9, 3.6495252301343822`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"function", "-", 
   RowBox[{"ndsolLDE2", "[", "grid", "]"}]}], "//", 
  RowBox[{
   RowBox[{"ListPlot", "[", 
    RowBox[{"#", ",", 
     RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}], "&"}]}]], "Input",
 CellChangeTimes->{{3.64952494265417*^9, 3.649524943280613*^9}, 
   3.649524987751048*^9, {3.649722489509004*^9, 3.6497224932656956`*^9}}],

Cell["Hint for time-dependent problem:", "Text",
 CellChangeTimes->{{3.649524771422135*^9, 3.6495247893077755`*^9}}],

Cell[BoxData[""], "Input",
 CellChangeTimes->{3.649721155192142*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell["Transforming functions/coordinate transformation", "Section",
 CellChangeTimes->{{3.6491072010202703`*^9, 3.649107247689316*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"metric", "=", 
   RowBox[{"(", GridBox[{
      {"0", "1", "0", "0", "0"},
      {"1", 
       RowBox[{"-", 
        RowBox[{"A", "[", 
         RowBox[{"t", ",", "r"}], "]"}]}], "0", "0", "0"},
      {"0", "0", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"S", "[", 
          RowBox[{"t", ",", "r"}], "]"}], "2"], 
        RowBox[{"Exp", "[", 
         RowBox[{
          RowBox[{"-", "2"}], 
          RowBox[{"B", "[", 
           RowBox[{"t", ",", "r"}], "]"}]}], "]"}]}], "0", "0"},
      {"0", "0", "0", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"S", "[", 
          RowBox[{"t", ",", "r"}], "]"}], "2"], 
        RowBox[{"Exp", "[", 
         RowBox[{"B", "[", 
          RowBox[{"t", ",", "r"}], "]"}], "]"}]}], "0"},
      {"0", "0", "0", "0", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"S", "[", 
          RowBox[{"t", ",", "r"}], "]"}], "2"], 
        RowBox[{"Exp", "[", 
         RowBox[{"B", "[", 
          RowBox[{"t", ",", "r"}], "]"}], "]"}]}]}
     }], ")"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"coord", "=", 
   RowBox[{"{", 
    RowBox[{"r", ",", "t", ",", "x1", ",", "x2", ",", "x3"}], "}"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.424340856952167*^9, 3.424340894883247*^9}, {
   3.4243419327629023`*^9, 3.424341940592133*^9}, 3.424473090723262*^9, 
   3.42447317672616*^9, {3.424817035704811*^9, 3.424817132194788*^9}, {
   3.4248172858199253`*^9, 3.424817369701791*^9}, {3.424817420229842*^9, 
   3.424817480137473*^9}, {3.424817516702015*^9, 3.4248175486615877`*^9}, {
   3.424817825791355*^9, 3.424817849072001*^9}, {3.424819880267191*^9, 
   3.424819901996335*^9}, {3.429205085605362*^9, 3.429205098061276*^9}, {
   3.429288271063569*^9, 3.42928827198637*^9}, {3.429290914310234*^9, 
   3.429290927685672*^9}, {3.442924093072465*^9, 3.442924139065889*^9}, {
   3.443879354006606*^9, 3.4438793623651237`*^9}, 3.444064192733309*^9, {
   3.444064251795888*^9, 3.444064281478696*^9}, {3.448858939336195*^9, 
   3.448859081641399*^9}, {3.448859210300955*^9, 3.448859231855585*^9}, {
   3.4489676133716707`*^9, 3.448967621747665*^9}, {3.44911791545042*^9, 
   3.449117919144391*^9}, {3.449397125007783*^9, 3.44939713075414*^9}, {
   3.462639853249119*^9, 3.462639918414275*^9}, {3.53977632507113*^9, 
   3.5397763875524063`*^9}, {3.587712032370226*^9, 3.5877120921709547`*^9}, {
   3.587712131224145*^9, 3.5877121531990747`*^9}, {3.587712451844763*^9, 
   3.587712453954342*^9}, {3.587712691678594*^9, 3.587712692418214*^9}, {
   3.587721121960034*^9, 3.587721224967008*^9}, {3.587721462135201*^9, 
   3.587721462252387*^9}, {3.5877239068133*^9, 3.587723910043788*^9}, {
   3.588150905832047*^9, 3.5881509814122868`*^9}, {3.588161724814446*^9, 
   3.58816172510056*^9}, {3.6496783329761686`*^9, 3.6496783403273835`*^9}, {
   3.6496785412903748`*^9, 3.649678543810153*^9}, {3.649679634921014*^9, 
   3.6496796365762105`*^9}, {3.6496796690988445`*^9, 3.649679677245615*^9}, {
   3.6497129666785083`*^9, 3.649712974235866*^9}, {3.6497213751794114`*^9, 
   3.64972139374057*^9}, {3.6497218285057845`*^9, 3.6497218306172924`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"SetDirectory", "[", 
   RowBox[{"NotebookDirectory", "[", "]"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"<<", "\"\<diffgeo.m\>\""}], ";"}]}], "Input",
 CellChangeTimes->{{3.5881517847257557`*^9, 3.588151788520145*^9}, {
   3.649678263456643*^9, 3.649678310001769*^9}, 3.649712466386238*^9, 
   3.6497214246664944`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"SetDelayed", "::", "write"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Tag \[NoBreak]\\!\\(Laplacian\\)\[NoBreak] in \
\[NoBreak]\\!\\(Laplacian[\\(\\(scalar_ ? scalarQ\\)\\)]\\)\[NoBreak] is \
Protected. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\
\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/write\\\", ButtonNote -> \
\\\"SetDelayed::write\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.649725321477262*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["We obtain Einstein' s equations :", "Subsection",
 CellChangeTimes->{{3.649724230678444*^9, 3.649724237479281*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"EE", "=", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"RicciTensor", "+", 
      RowBox[{"4", "metric"}]}], "//", "Flatten"}], "//", "Union"}], "//", 
   "Simplify"}]}]], "Input",
 CellChangeTimes->{{3.6496783552228727`*^9, 3.649678358055885*^9}, {
  3.649678449988735*^9, 3.6496784777743435`*^9}, {3.6496786864799633`*^9, 
  3.649678717592936*^9}, {3.6496787580985317`*^9, 3.6496787620032854`*^9}, {
  3.6496794872892113`*^9, 3.6496794969250097`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", 
   RowBox[{
    RowBox[{
     RowBox[{"-", 
      FractionBox["3", "2"]}], " ", 
     SuperscriptBox[
      RowBox[{
       SuperscriptBox["B", 
        TagBox[
         RowBox[{"(", 
          RowBox[{"0", ",", "1"}], ")"}],
         Derivative],
        MultilineFunction->None], "[", 
       RowBox[{"t", ",", "r"}], "]"}], "2"]}], "-", 
    FractionBox[
     RowBox[{"3", " ", 
      RowBox[{
       SuperscriptBox["S", 
        TagBox[
         RowBox[{"(", 
          RowBox[{"0", ",", "2"}], ")"}],
         Derivative],
        MultilineFunction->None], "[", 
       RowBox[{"t", ",", "r"}], "]"}]}], 
     RowBox[{"S", "[", 
      RowBox[{"t", ",", "r"}], "]"}]]}], ",", 
   RowBox[{"4", "-", 
    FractionBox[
     RowBox[{
      RowBox[{"3", " ", 
       RowBox[{
        SuperscriptBox["A", 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "1"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "r"}], "]"}], " ", 
       RowBox[{
        SuperscriptBox["S", 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "1"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "r"}], "]"}]}], "+", 
      RowBox[{
       RowBox[{"S", "[", 
        RowBox[{"t", ",", "r"}], "]"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          SuperscriptBox["A", 
           TagBox[
            RowBox[{"(", 
             RowBox[{"0", ",", "2"}], ")"}],
            Derivative],
           MultilineFunction->None], "[", 
          RowBox[{"t", ",", "r"}], "]"}], "+", 
         RowBox[{"3", " ", 
          RowBox[{
           SuperscriptBox["B", 
            TagBox[
             RowBox[{"(", 
              RowBox[{"0", ",", "1"}], ")"}],
             Derivative],
            MultilineFunction->None], "[", 
           RowBox[{"t", ",", "r"}], "]"}], " ", 
          RowBox[{
           SuperscriptBox["B", 
            TagBox[
             RowBox[{"(", 
              RowBox[{"1", ",", "0"}], ")"}],
             Derivative],
            MultilineFunction->None], "[", 
           RowBox[{"t", ",", "r"}], "]"}]}]}], ")"}]}], "+", 
      RowBox[{"6", " ", 
       RowBox[{
        SuperscriptBox["S", 
         TagBox[
          RowBox[{"(", 
           RowBox[{"1", ",", "1"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "r"}], "]"}]}]}], 
     RowBox[{"2", " ", 
      RowBox[{"S", "[", 
       RowBox[{"t", ",", "r"}], "]"}]}]]}], ",", 
   RowBox[{
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{"-", "2"}], " ", 
      RowBox[{"B", "[", 
       RowBox[{"t", ",", "r"}], "]"}]}]], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "2"}], " ", 
       RowBox[{
        SuperscriptBox["S", 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "1"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "r"}], "]"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"A", "[", 
           RowBox[{"t", ",", "r"}], "]"}], " ", 
          RowBox[{
           SuperscriptBox["S", 
            TagBox[
             RowBox[{"(", 
              RowBox[{"0", ",", "1"}], ")"}],
             Derivative],
            MultilineFunction->None], "[", 
           RowBox[{"t", ",", "r"}], "]"}]}], "+", 
         RowBox[{"2", " ", 
          RowBox[{
           SuperscriptBox["S", 
            TagBox[
             RowBox[{"(", 
              RowBox[{"1", ",", "0"}], ")"}],
             Derivative],
            MultilineFunction->None], "[", 
           RowBox[{"t", ",", "r"}], "]"}]}]}], ")"}]}], "+", 
      RowBox[{
       SuperscriptBox[
        RowBox[{"S", "[", 
         RowBox[{"t", ",", "r"}], "]"}], "2"], " ", 
       RowBox[{"(", 
        RowBox[{"4", "+", 
         RowBox[{
          RowBox[{
           SuperscriptBox["A", 
            TagBox[
             RowBox[{"(", 
              RowBox[{"0", ",", "1"}], ")"}],
             Derivative],
            MultilineFunction->None], "[", 
           RowBox[{"t", ",", "r"}], "]"}], " ", 
          RowBox[{
           SuperscriptBox["B", 
            TagBox[
             RowBox[{"(", 
              RowBox[{"0", ",", "1"}], ")"}],
             Derivative],
            MultilineFunction->None], "[", 
           RowBox[{"t", ",", "r"}], "]"}]}], "+", 
         RowBox[{
          RowBox[{"A", "[", 
           RowBox[{"t", ",", "r"}], "]"}], " ", 
          RowBox[{
           SuperscriptBox["B", 
            TagBox[
             RowBox[{"(", 
              RowBox[{"0", ",", "2"}], ")"}],
             Derivative],
            MultilineFunction->None], "[", 
           RowBox[{"t", ",", "r"}], "]"}]}], "+", 
         RowBox[{"2", " ", 
          RowBox[{
           SuperscriptBox["B", 
            TagBox[
             RowBox[{"(", 
              RowBox[{"1", ",", "1"}], ")"}],
             Derivative],
            MultilineFunction->None], "[", 
           RowBox[{"t", ",", "r"}], "]"}]}]}], ")"}]}], "-", 
      RowBox[{
       RowBox[{"S", "[", 
        RowBox[{"t", ",", "r"}], "]"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{
           SuperscriptBox["A", 
            TagBox[
             RowBox[{"(", 
              RowBox[{"0", ",", "1"}], ")"}],
             Derivative],
            MultilineFunction->None], "[", 
           RowBox[{"t", ",", "r"}], "]"}], " ", 
          RowBox[{
           SuperscriptBox["S", 
            TagBox[
             RowBox[{"(", 
              RowBox[{"0", ",", "1"}], ")"}],
             Derivative],
            MultilineFunction->None], "[", 
           RowBox[{"t", ",", "r"}], "]"}]}], "+", 
         RowBox[{
          RowBox[{"A", "[", 
           RowBox[{"t", ",", "r"}], "]"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "3"}], " ", 
             RowBox[{
              SuperscriptBox["B", 
               TagBox[
                RowBox[{"(", 
                 RowBox[{"0", ",", "1"}], ")"}],
                Derivative],
               MultilineFunction->None], "[", 
              RowBox[{"t", ",", "r"}], "]"}], " ", 
             RowBox[{
              SuperscriptBox["S", 
               TagBox[
                RowBox[{"(", 
                 RowBox[{"0", ",", "1"}], ")"}],
                Derivative],
               MultilineFunction->None], "[", 
              RowBox[{"t", ",", "r"}], "]"}]}], "+", 
            RowBox[{
             SuperscriptBox["S", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"0", ",", "2"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"t", ",", "r"}], "]"}]}], ")"}]}], "-", 
         RowBox[{"3", " ", 
          RowBox[{
           SuperscriptBox["S", 
            TagBox[
             RowBox[{"(", 
              RowBox[{"0", ",", "1"}], ")"}],
             Derivative],
            MultilineFunction->None], "[", 
           RowBox[{"t", ",", "r"}], "]"}], " ", 
          RowBox[{
           SuperscriptBox["B", 
            TagBox[
             RowBox[{"(", 
              RowBox[{"1", ",", "0"}], ")"}],
             Derivative],
            MultilineFunction->None], "[", 
           RowBox[{"t", ",", "r"}], "]"}]}], "-", 
         RowBox[{"3", " ", 
          RowBox[{
           SuperscriptBox["B", 
            TagBox[
             RowBox[{"(", 
              RowBox[{"0", ",", "1"}], ")"}],
             Derivative],
            MultilineFunction->None], "[", 
           RowBox[{"t", ",", "r"}], "]"}], " ", 
          RowBox[{
           SuperscriptBox["S", 
            TagBox[
             RowBox[{"(", 
              RowBox[{"1", ",", "0"}], ")"}],
             Derivative],
            MultilineFunction->None], "[", 
           RowBox[{"t", ",", "r"}], "]"}]}], "+", 
         RowBox[{"2", " ", 
          RowBox[{
           SuperscriptBox["S", 
            TagBox[
             RowBox[{"(", 
              RowBox[{"1", ",", "1"}], ")"}],
             Derivative],
            MultilineFunction->None], "[", 
           RowBox[{"t", ",", "r"}], "]"}]}]}], ")"}]}]}], ")"}]}], ",", 
   RowBox[{
    RowBox[{"-", 
     FractionBox["1", "2"]}], " ", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{"B", "[", 
      RowBox[{"t", ",", "r"}], "]"}]], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"4", " ", 
       RowBox[{
        SuperscriptBox["S", 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "1"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", "r"}], "]"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"A", "[", 
           RowBox[{"t", ",", "r"}], "]"}], " ", 
          RowBox[{
           SuperscriptBox["S", 
            TagBox[
             RowBox[{"(", 
              RowBox[{"0", ",", "1"}], ")"}],
             Derivative],
            MultilineFunction->None], "[", 
           RowBox[{"t", ",", "r"}], "]"}]}], "+", 
         RowBox[{"2", " ", 
          RowBox[{
           SuperscriptBox["S", 
            TagBox[
             RowBox[{"(", 
              RowBox[{"1", ",", "0"}], ")"}],
             Derivative],
            MultilineFunction->None], "[", 
           RowBox[{"t", ",", "r"}], "]"}]}]}], ")"}]}], "+", 
      RowBox[{
       SuperscriptBox[
        RowBox[{"S", "[", 
         RowBox[{"t", ",", "r"}], "]"}], "2"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "8"}], "+", 
         RowBox[{
          RowBox[{
           SuperscriptBox["A", 
            TagBox[
             RowBox[{"(", 
              RowBox[{"0", ",", "1"}], ")"}],
             Derivative],
            MultilineFunction->None], "[", 
           RowBox[{"t", ",", "r"}], "]"}], " ", 
          RowBox[{
           SuperscriptBox["B", 
            TagBox[
             RowBox[{"(", 
              RowBox[{"0", ",", "1"}], ")"}],
             Derivative],
            MultilineFunction->None], "[", 
           RowBox[{"t", ",", "r"}], "]"}]}], "+", 
         RowBox[{
          RowBox[{"A", "[", 
           RowBox[{"t", ",", "r"}], "]"}], " ", 
          RowBox[{
           SuperscriptBox["B", 
            TagBox[
             RowBox[{"(", 
              RowBox[{"0", ",", "2"}], ")"}],
             Derivative],
            MultilineFunction->None], "[", 
           RowBox[{"t", ",", "r"}], "]"}]}], "+", 
         RowBox[{"2", " ", 
          RowBox[{
           SuperscriptBox["B", 
            TagBox[
             RowBox[{"(", 
              RowBox[{"1", ",", "1"}], ")"}],
             Derivative],
            MultilineFunction->None], "[", 
           RowBox[{"t", ",", "r"}], "]"}]}]}], ")"}]}], "+", 
      RowBox[{
       RowBox[{"S", "[", 
        RowBox[{"t", ",", "r"}], "]"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"2", " ", 
          RowBox[{
           SuperscriptBox["A", 
            TagBox[
             RowBox[{"(", 
              RowBox[{"0", ",", "1"}], ")"}],
             Derivative],
            MultilineFunction->None], "[", 
           RowBox[{"t", ",", "r"}], "]"}], " ", 
          RowBox[{
           SuperscriptBox["S", 
            TagBox[
             RowBox[{"(", 
              RowBox[{"0", ",", "1"}], ")"}],
             Derivative],
            MultilineFunction->None], "[", 
           RowBox[{"t", ",", "r"}], "]"}]}], "+", 
         RowBox[{
          RowBox[{"A", "[", 
           RowBox[{"t", ",", "r"}], "]"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"3", " ", 
             RowBox[{
              SuperscriptBox["B", 
               TagBox[
                RowBox[{"(", 
                 RowBox[{"0", ",", "1"}], ")"}],
                Derivative],
               MultilineFunction->None], "[", 
              RowBox[{"t", ",", "r"}], "]"}], " ", 
             RowBox[{
              SuperscriptBox["S", 
               TagBox[
                RowBox[{"(", 
                 RowBox[{"0", ",", "1"}], ")"}],
                Derivative],
               MultilineFunction->None], "[", 
              RowBox[{"t", ",", "r"}], "]"}]}], "+", 
            RowBox[{"2", " ", 
             RowBox[{
              SuperscriptBox["S", 
               TagBox[
                RowBox[{"(", 
                 RowBox[{"0", ",", "2"}], ")"}],
                Derivative],
               MultilineFunction->None], "[", 
              RowBox[{"t", ",", "r"}], "]"}]}]}], ")"}]}], "+", 
         RowBox[{"3", " ", 
          RowBox[{
           SuperscriptBox["S", 
            TagBox[
             RowBox[{"(", 
              RowBox[{"0", ",", "1"}], ")"}],
             Derivative],
            MultilineFunction->None], "[", 
           RowBox[{"t", ",", "r"}], "]"}], " ", 
          RowBox[{
           SuperscriptBox["B", 
            TagBox[
             RowBox[{"(", 
              RowBox[{"1", ",", "0"}], ")"}],
             Derivative],
            MultilineFunction->None], "[", 
           RowBox[{"t", ",", "r"}], "]"}]}], "+", 
         RowBox[{"3", " ", 
          RowBox[{
           SuperscriptBox["B", 
            TagBox[
             RowBox[{"(", 
              RowBox[{"0", ",", "1"}], ")"}],
             Derivative],
            MultilineFunction->None], "[", 
           RowBox[{"t", ",", "r"}], "]"}], " ", 
          RowBox[{
           SuperscriptBox["S", 
            TagBox[
             RowBox[{"(", 
              RowBox[{"1", ",", "0"}], ")"}],
             Derivative],
            MultilineFunction->None], "[", 
           RowBox[{"t", ",", "r"}], "]"}]}], "+", 
         RowBox[{"4", " ", 
          RowBox[{
           SuperscriptBox["S", 
            TagBox[
             RowBox[{"(", 
              RowBox[{"1", ",", "1"}], ")"}],
             Derivative],
            MultilineFunction->None], "[", 
           RowBox[{"t", ",", "r"}], "]"}]}]}], ")"}]}]}], ")"}]}], ",", 
   FractionBox[
    RowBox[{
     RowBox[{
      RowBox[{"A", "[", 
       RowBox[{"t", ",", "r"}], "]"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"3", " ", 
         RowBox[{
          SuperscriptBox["A", 
           TagBox[
            RowBox[{"(", 
             RowBox[{"0", ",", "1"}], ")"}],
            Derivative],
           MultilineFunction->None], "[", 
          RowBox[{"t", ",", "r"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["S", 
           TagBox[
            RowBox[{"(", 
             RowBox[{"0", ",", "1"}], ")"}],
            Derivative],
           MultilineFunction->None], "[", 
          RowBox[{"t", ",", "r"}], "]"}]}], "+", 
        RowBox[{
         RowBox[{"S", "[", 
          RowBox[{"t", ",", "r"}], "]"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "8"}], "+", 
           RowBox[{
            SuperscriptBox["A", 
             TagBox[
              RowBox[{"(", 
               RowBox[{"0", ",", "2"}], ")"}],
              Derivative],
             MultilineFunction->None], "[", 
            RowBox[{"t", ",", "r"}], "]"}]}], ")"}]}]}], ")"}]}], "-", 
     RowBox[{"3", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{
          SuperscriptBox["S", 
           TagBox[
            RowBox[{"(", 
             RowBox[{"0", ",", "1"}], ")"}],
            Derivative],
           MultilineFunction->None], "[", 
          RowBox[{"t", ",", "r"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["A", 
           TagBox[
            RowBox[{"(", 
             RowBox[{"1", ",", "0"}], ")"}],
            Derivative],
           MultilineFunction->None], "[", 
          RowBox[{"t", ",", "r"}], "]"}]}], "+", 
        RowBox[{
         RowBox[{"S", "[", 
          RowBox[{"t", ",", "r"}], "]"}], " ", 
         SuperscriptBox[
          RowBox[{
           SuperscriptBox["B", 
            TagBox[
             RowBox[{"(", 
              RowBox[{"1", ",", "0"}], ")"}],
             Derivative],
            MultilineFunction->None], "[", 
           RowBox[{"t", ",", "r"}], "]"}], "2"]}], "-", 
        RowBox[{
         RowBox[{
          SuperscriptBox["A", 
           TagBox[
            RowBox[{"(", 
             RowBox[{"0", ",", "1"}], ")"}],
            Derivative],
           MultilineFunction->None], "[", 
          RowBox[{"t", ",", "r"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["S", 
           TagBox[
            RowBox[{"(", 
             RowBox[{"1", ",", "0"}], ")"}],
            Derivative],
           MultilineFunction->None], "[", 
          RowBox[{"t", ",", "r"}], "]"}]}], "+", 
        RowBox[{"2", " ", 
         RowBox[{
          SuperscriptBox["S", 
           TagBox[
            RowBox[{"(", 
             RowBox[{"2", ",", "0"}], ")"}],
            Derivative],
           MultilineFunction->None], "[", 
          RowBox[{"t", ",", "r"}], "]"}]}]}], ")"}]}]}], 
    RowBox[{"2", " ", 
     RowBox[{"S", "[", 
      RowBox[{"t", ",", "r"}], "]"}]}]]}], "}"}]], "Output",
 CellChangeTimes->{
  3.6496783138814774`*^9, {3.6496784555776796`*^9, 3.6496784785328903`*^9}, 
   3.649678549428115*^9, {3.6496786957575097`*^9, 3.649678718159331*^9}, 
   3.6496787624805923`*^9, {3.6496794922416763`*^9, 3.649679497584448*^9}, 
   3.649679642332242*^9, {3.649679685494419*^9, 3.6496797006199603`*^9}, 
   3.649712986467661*^9, 3.649713561381868*^9, 3.6497144597708755`*^9, 
   3.6497146432009125`*^9, 3.6497147116840925`*^9, 3.649717142267682*^9, 
   3.6497214272683396`*^9, 3.6497218382977257`*^9, 3.6497243448151855`*^9, 
   3.6497253247307353`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Do a linearized approximations (look up black brane, or solve by near \
boundary analysis)\
\>", "Subsection",
 CellChangeTimes->{{3.6497242413309827`*^9, 3.649724267144326*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"funcs", "=", 
   RowBox[{"{", 
    RowBox[{"A", ",", "B", ",", "S"}], "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.649678329581772*^9, 3.6496783509388437`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"linear", "=", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"f", "\[Function]", 
     RowBox[{"(", 
      RowBox[{"f", "\[Rule]", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"ToExpression", "[", 
            RowBox[{
             RowBox[{"ToString", "[", "f", "]"}], "<>", "\"\<0\>\""}], "]"}], 
           "[", 
           RowBox[{"#1", ",", "#2"}], "]"}], "+", 
          RowBox[{"\[Epsilon]", " ", 
           RowBox[{
            RowBox[{"ToExpression", "[", 
             RowBox[{"\"\<\[Delta]\>\"", "<>", 
              RowBox[{"ToString", "[", "f", "]"}]}], "]"}], "[", 
            RowBox[{"#1", ",", "#2"}], "]"}]}]}], "&"}], ")"}]}], ")"}]}], 
    ")"}], "/@", "funcs"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"D", "[", 
   RowBox[{
    RowBox[{"A", "[", 
     RowBox[{"t", ",", "r"}], "]"}], ",", "t"}], "]"}], "/.", 
  "linear"}]}], "Input",
 CellChangeTimes->{{3.64967931549675*^9, 3.6496793969323697`*^9}, 
   3.6497214432046366`*^9, {3.649724352782834*^9, 3.649724354370985*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"A", "\[Rule]", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"ToExpression", "[", 
         RowBox[{
          RowBox[{"ToString", "[", "A", "]"}], "<>", "\<\"0\"\>"}], "]"}], 
        "[", 
        RowBox[{"#1", ",", "#2"}], "]"}], "+", 
       RowBox[{"\[Epsilon]", " ", 
        RowBox[{
         RowBox[{"ToExpression", "[", 
          RowBox[{"\<\"\[Delta]\"\>", "<>", 
           RowBox[{"ToString", "[", "A", "]"}]}], "]"}], "[", 
         RowBox[{"#1", ",", "#2"}], "]"}]}]}], "&"}], ")"}]}], ",", 
   RowBox[{"B", "\[Rule]", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"ToExpression", "[", 
         RowBox[{
          RowBox[{"ToString", "[", "B", "]"}], "<>", "\<\"0\"\>"}], "]"}], 
        "[", 
        RowBox[{"#1", ",", "#2"}], "]"}], "+", 
       RowBox[{"\[Epsilon]", " ", 
        RowBox[{
         RowBox[{"ToExpression", "[", 
          RowBox[{"\<\"\[Delta]\"\>", "<>", 
           RowBox[{"ToString", "[", "B", "]"}]}], "]"}], "[", 
         RowBox[{"#1", ",", "#2"}], "]"}]}]}], "&"}], ")"}]}], ",", 
   RowBox[{"S", "\[Rule]", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"ToExpression", "[", 
         RowBox[{
          RowBox[{"ToString", "[", "S", "]"}], "<>", "\<\"0\"\>"}], "]"}], 
        "[", 
        RowBox[{"#1", ",", "#2"}], "]"}], "+", 
       RowBox[{"\[Epsilon]", " ", 
        RowBox[{
         RowBox[{"ToExpression", "[", 
          RowBox[{"\<\"\[Delta]\"\>", "<>", 
           RowBox[{"ToString", "[", "S", "]"}]}], "]"}], "[", 
         RowBox[{"#1", ",", "#2"}], "]"}]}]}], "&"}], ")"}]}]}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.6496793442860446`*^9, 3.6496793976668587`*^9}, 
   3.649679499178585*^9, 3.649679644440729*^9, {3.6496796868263464`*^9, 
   3.649679703031657*^9}, 3.6497129879357014`*^9, {3.6497135409137197`*^9, 
   3.6497135638766365`*^9}, 3.649714459879952*^9, 3.6497146433029847`*^9, 
   3.6497147117911687`*^9, 3.649717145836913*^9, {3.649721433184533*^9, 
   3.6497214433677645`*^9}, 3.649721842203495*^9, 3.649724355173542*^9, 
   3.649725327500697*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   SuperscriptBox["A0", 
    TagBox[
     RowBox[{"(", 
      RowBox[{"1", ",", "0"}], ")"}],
     Derivative],
    MultilineFunction->None], "[", 
   RowBox[{"t", ",", "r"}], "]"}], "+", 
  RowBox[{"\[Epsilon]", " ", 
   RowBox[{
    SuperscriptBox["\[Delta]A", 
     TagBox[
      RowBox[{"(", 
       RowBox[{"1", ",", "0"}], ")"}],
      Derivative],
     MultilineFunction->None], "[", 
    RowBox[{"t", ",", "r"}], "]"}]}]}]], "Output",
 CellChangeTimes->{{3.6496793442860446`*^9, 3.6496793976668587`*^9}, 
   3.649679499178585*^9, 3.649679644440729*^9, {3.6496796868263464`*^9, 
   3.649679703031657*^9}, 3.6497129879357014`*^9, {3.6497135409137197`*^9, 
   3.6497135638766365`*^9}, 3.649714459879952*^9, 3.6497146433029847`*^9, 
   3.6497147117911687`*^9, 3.649717145836913*^9, {3.649721433184533*^9, 
   3.6497214433677645`*^9}, 3.649721842203495*^9, 3.649724355173542*^9, 
   3.649725327503701*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"blackbrane", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"B0", "\[Rule]", 
      RowBox[{"(", 
       RowBox[{"0", "&"}], ")"}]}], ",", 
     RowBox[{"S0", "\[Rule]", 
      RowBox[{"(", 
       RowBox[{"#2", "&"}], ")"}]}], ",", 
     RowBox[{"A0", "\[Rule]", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         SuperscriptBox["#2", "2"], "-", " ", 
         RowBox[{"1", "/", 
          SuperscriptBox["#2", "2"]}]}], "&"}], ")"}]}]}], "}"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.6496794111263566`*^9, 3.6496794549652987`*^9}, {
  3.6497134809842353`*^9, 3.6497134821910896`*^9}, {3.649721456546095*^9, 
  3.6497214621961*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"EEl", "=", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"SeriesCoefficient", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"EE", "/.", "linear"}], "/.", "blackbrane"}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Epsilon]", ",", "0", ",", "1"}], "}"}]}], "]"}], "/.", 
     RowBox[{"\[Delta]S", "\[Rule]", 
      RowBox[{"(", 
       RowBox[{"0", "&"}], ")"}]}]}], "/.", 
    RowBox[{"\[Delta]A", "\[Rule]", 
     RowBox[{"(", 
      RowBox[{"0", "&"}], ")"}]}]}], "//", "FullSimplify"}]}]], "Input",
 CellChangeTimes->{{3.6496798525154066`*^9, 3.6496798821403103`*^9}, {
  3.6496800321390133`*^9, 3.649680058484923*^9}, {3.649680106774971*^9, 
  3.6496801272344265`*^9}, {3.649721467225665*^9, 3.649721474372733*^9}, {
  3.6497219047438617`*^9, 3.6497219454837275`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", "0", ",", "0", ",", 
   FractionBox[
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        RowBox[{"5", " ", 
         SuperscriptBox["r", "4"]}]}], ")"}], " ", 
      RowBox[{
       SuperscriptBox["\[Delta]B", 
        TagBox[
         RowBox[{"(", 
          RowBox[{"0", ",", "1"}], ")"}],
         Derivative],
        MultilineFunction->None], "[", 
       RowBox[{"t", ",", "r"}], "]"}]}], "+", 
     RowBox[{"r", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", 
           SuperscriptBox["r", "4"]}], ")"}], " ", 
         RowBox[{
          SuperscriptBox["\[Delta]B", 
           TagBox[
            RowBox[{"(", 
             RowBox[{"0", ",", "2"}], ")"}],
            Derivative],
           MultilineFunction->None], "[", 
          RowBox[{"t", ",", "r"}], "]"}]}], "+", 
        RowBox[{"r", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"3", " ", 
            RowBox[{
             SuperscriptBox["\[Delta]B", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"1", ",", "0"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"t", ",", "r"}], "]"}]}], "+", 
           RowBox[{"2", " ", "r", " ", 
            RowBox[{
             SuperscriptBox["\[Delta]B", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"1", ",", "1"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"t", ",", "r"}], "]"}]}]}], ")"}]}]}], ")"}]}]}], "r"], 
   ",", 
   FractionBox[
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "-", 
        RowBox[{"5", " ", 
         SuperscriptBox["r", "4"]}]}], ")"}], " ", 
      RowBox[{
       SuperscriptBox["\[Delta]B", 
        TagBox[
         RowBox[{"(", 
          RowBox[{"0", ",", "1"}], ")"}],
         Derivative],
        MultilineFunction->None], "[", 
       RowBox[{"t", ",", "r"}], "]"}]}], "+", 
     RowBox[{"r", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", 
            SuperscriptBox["r", "4"]}], ")"}]}], " ", 
         RowBox[{
          SuperscriptBox["\[Delta]B", 
           TagBox[
            RowBox[{"(", 
             RowBox[{"0", ",", "2"}], ")"}],
            Derivative],
           MultilineFunction->None], "[", 
          RowBox[{"t", ",", "r"}], "]"}]}], "-", 
        RowBox[{"r", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"3", " ", 
            RowBox[{
             SuperscriptBox["\[Delta]B", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"1", ",", "0"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"t", ",", "r"}], "]"}]}], "+", 
           RowBox[{"2", " ", "r", " ", 
            RowBox[{
             SuperscriptBox["\[Delta]B", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"1", ",", "1"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"t", ",", "r"}], "]"}]}]}], ")"}]}]}], ")"}]}]}], 
    RowBox[{"2", " ", "r"}]], ",", "0"}], "}"}]], "Output",
 CellChangeTimes->{{3.649679872986865*^9, 3.6496798896866407`*^9}, {
   3.649680041096625*^9, 3.649680059107356*^9}, {3.6496801080248504`*^9, 
   3.64968012780882*^9}, 3.649712990267354*^9, {3.6497134856965747`*^9, 
   3.649713493174876*^9}, 3.649713589989148*^9, 3.6497144600550756`*^9, 
   3.6497146434921207`*^9, 3.649714711996315*^9, 3.649717149864769*^9, {
   3.649721468930874*^9, 3.6497214753754435`*^9}, 3.649721845170601*^9, {
   3.6497219059737167`*^9, 3.649721946024096*^9}, 3.6497243582927523`*^9, 
   3.649725330629915*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Change coordinates to 1/r and B to ",
 Cell[BoxData[
  FormBox[
   RowBox[{"B", "/", 
    SuperscriptBox["z", "4"]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ", which makes B regular at the boundary:"
}], "Subsection",
 CellChangeTimes->{{3.649724272438575*^9, 3.649724278105506*^9}, {
  3.649724394678762*^9, 3.649724411450548*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"replrtou", "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     RowBox[{
      SuperscriptBox["f_", 
       TagBox[
        RowBox[{"(", 
         RowBox[{"a_", ",", "b_"}], ")"}],
        Derivative],
       MultilineFunction->None], "[", 
      RowBox[{"t", ",", "r"}], "]"}], "\[Rule]", 
     RowBox[{"D", "[", 
      RowBox[{
       RowBox[{
        SuperscriptBox["f", 
         TagBox[
          RowBox[{"(", 
           RowBox[{"a", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"t", ",", 
         FractionBox["1", "r"]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"r", ",", "b"}], "}"}]}], "]"}]}], ",", 
    RowBox[{
     RowBox[{"f_", "[", 
      RowBox[{"t", ",", "r"}], "]"}], "\[Rule]", 
     RowBox[{"f", "[", 
      RowBox[{"t", ",", "u"}], "]"}]}], ",", 
    RowBox[{"r", "\[Rule]", 
     RowBox[{"1", "/", "u"}]}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.649721481530821*^9, 3.6497215626813354`*^9}, {
  3.6497216238797307`*^9, 3.6497216364406257`*^9}, {3.649721670566818*^9, 
  3.6497216725632334`*^9}, {3.649721703387086*^9, 3.649721775438177*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{
     SuperscriptBox["f_", 
      TagBox[
       RowBox[{"(", 
        RowBox[{"a_", ",", "b_"}], ")"}],
       Derivative],
      MultilineFunction->None], "[", 
     RowBox[{"t", ",", "r"}], "]"}], "\[Rule]", 
    RowBox[{
     SubscriptBox["\[PartialD]", 
      RowBox[{"{", 
       RowBox[{"r", ",", "b"}], "}"}]], 
     RowBox[{
      SuperscriptBox["f", 
       TagBox[
        RowBox[{"(", 
         RowBox[{"a", ",", "0"}], ")"}],
        Derivative],
       MultilineFunction->None], "[", 
      RowBox[{"t", ",", 
       FractionBox["1", "r"]}], "]"}]}]}], ",", 
   RowBox[{
    RowBox[{"f_", "[", 
     RowBox[{"t", ",", "r"}], "]"}], "\[Rule]", 
    RowBox[{"f", "[", 
     RowBox[{"t", ",", "u"}], "]"}]}], ",", 
   RowBox[{"r", "\[Rule]", 
    FractionBox["1", "u"]}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.649721537463458*^9, 3.6497216370770764`*^9, 3.6497216732097025`*^9, {
   3.649721706858547*^9, 3.6497217320604124`*^9}, {3.6497217762907677`*^9, 
   3.6497217827903757`*^9}, 3.649721948522868*^9, 3.6497243597547755`*^9, 
   3.649725333973299*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"EElreg", "=", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"-", 
       FractionBox["1", 
        SuperscriptBox["u", "3"]]}], 
      RowBox[{"EEl", "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}],
      "//.", "replrtou"}], "/.", 
    RowBox[{"\[Delta]B", "\[Rule]", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"\[Delta]Breg", "[", 
         RowBox[{"#1", ",", "#2"}], "]"}], 
        SuperscriptBox["#2", "4"]}], "&"}], ")"}]}]}], "//", 
   "FullSimplify"}]}]], "Input",
 CellChangeTimes->{{3.6497131176216383`*^9, 3.6497131453162737`*^9}, {
   3.649713184607127*^9, 3.6497131857749534`*^9}, 3.6497144488311205`*^9, {
   3.6497146489740057`*^9, 3.649714651084502*^9}, {3.64972432041952*^9, 
   3.6497243388989916`*^9}, {3.6497243704303737`*^9, 3.6497243718463774`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"16", " ", 
   SuperscriptBox["u", "3"], " ", 
   RowBox[{"\[Delta]Breg", "[", 
    RowBox[{"t", ",", "u"}], "]"}]}], "+", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "5"}], "+", 
     RowBox[{"9", " ", 
      SuperscriptBox["u", "4"]}]}], ")"}], " ", 
   RowBox[{
    SuperscriptBox["\[Delta]Breg", 
     TagBox[
      RowBox[{"(", 
       RowBox[{"0", ",", "1"}], ")"}],
      Derivative],
     MultilineFunction->None], "[", 
    RowBox[{"t", ",", "u"}], "]"}]}], "+", 
  RowBox[{"u", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "1"}], "+", 
     SuperscriptBox["u", "4"]}], ")"}], " ", 
   RowBox[{
    SuperscriptBox["\[Delta]Breg", 
     TagBox[
      RowBox[{"(", 
       RowBox[{"0", ",", "2"}], ")"}],
      Derivative],
     MultilineFunction->None], "[", 
    RowBox[{"t", ",", "u"}], "]"}]}], "+", 
  RowBox[{"5", " ", 
   RowBox[{
    SuperscriptBox["\[Delta]Breg", 
     TagBox[
      RowBox[{"(", 
       RowBox[{"1", ",", "0"}], ")"}],
      Derivative],
     MultilineFunction->None], "[", 
    RowBox[{"t", ",", "u"}], "]"}]}], "+", 
  RowBox[{"2", " ", "u", " ", 
   RowBox[{
    SuperscriptBox["\[Delta]Breg", 
     TagBox[
      RowBox[{"(", 
       RowBox[{"1", ",", "1"}], ")"}],
      Derivative],
     MultilineFunction->None], "[", 
    RowBox[{"t", ",", "u"}], "]"}]}]}]], "Output",
 CellChangeTimes->{{3.649713142196059*^9, 3.6497131457055483`*^9}, 
   3.6497131859460764`*^9, 3.6497135925519667`*^9, 3.649714463014174*^9, {
   3.649714643628216*^9, 3.6497146512956514`*^9}, 3.6497147121133966`*^9, 
   3.649717154287908*^9, {3.649724363384349*^9, 3.6497243720074763`*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Now write time derivative equation numerically, as ",
 Cell[BoxData[
  FormBox[
   RowBox[{"Bc", 
    RowBox[{
     SubscriptBox["\[PartialD]", "z"], 
     RowBox[{"(", 
      RowBox[{
       SubscriptBox["\[PartialD]", "t"], "B"}], ")"}]}]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 "+",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{"Cc", "(", 
      RowBox[{
       SubscriptBox["\[PartialD]", "t"], "B"}], ")"}], "+", "Sc"}], "=", 
    "0"}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ", which is easy to solve spectrally"
}], "Subsection",
 CellChangeTimes->{{3.649724416044803*^9, 3.6497244838316717`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Bc", "=", 
  RowBox[{"D", "[", 
   RowBox[{"EElreg", ",", 
    RowBox[{
     SuperscriptBox["\[Delta]Breg", 
      TagBox[
       RowBox[{"(", 
        RowBox[{"1", ",", "1"}], ")"}],
       Derivative],
      MultilineFunction->None], "[", 
     RowBox[{"t", ",", "u"}], "]"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"Cc", "=", 
  RowBox[{"D", "[", 
   RowBox[{"EElreg", ",", 
    RowBox[{
     SuperscriptBox["\[Delta]Breg", 
      TagBox[
       RowBox[{"(", 
        RowBox[{"1", ",", "0"}], ")"}],
       Derivative],
      MultilineFunction->None], "[", 
     RowBox[{"t", ",", "u"}], "]"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"Sc", "=", 
  RowBox[{
   RowBox[{"EElreg", "/.", 
    RowBox[{
     RowBox[{
      SuperscriptBox["\[Delta]Breg", 
       TagBox[
        RowBox[{"(", 
         RowBox[{"1", ",", "a_"}], ")"}],
        Derivative],
       MultilineFunction->None], "[", 
      RowBox[{"t", ",", "u"}], "]"}], "\[Rule]", "0"}]}], "//", 
   "FullSimplify"}]}]}], "Input",
 CellChangeTimes->{{3.649712546260851*^9, 3.6497125882406244`*^9}, {
   3.649712998462165*^9, 3.64971303469585*^9}, {3.6497130653996162`*^9, 
   3.649713100076213*^9}, {3.6497131503608475`*^9, 3.649713172226362*^9}, {
   3.649714693055896*^9, 3.649714694441871*^9}, 3.6497147281517687`*^9, {
   3.6497171601230536`*^9, 3.6497171628599825`*^9}}],

Cell[BoxData[
 RowBox[{"2", " ", "u"}]], "Output",
 CellChangeTimes->{{3.649712992966268*^9, 3.6497130353253098`*^9}, {
   3.6497130672779503`*^9, 3.6497131006466074`*^9}, {3.6497131585106387`*^9, 
   3.6497131914459753`*^9}, {3.649713595582113*^9, 3.6497135990035405`*^9}, {
   3.6497144639218197`*^9, 3.6497144682548895`*^9}, 3.6497146567671647`*^9, {
   3.6497146951733875`*^9, 3.649714732460461*^9}, 3.6497171660232244`*^9, 
   3.64972200630283*^9, 3.6497243738527775`*^9}],

Cell[BoxData["5"], "Output",
 CellChangeTimes->{{3.649712992966268*^9, 3.6497130353253098`*^9}, {
   3.6497130672779503`*^9, 3.6497131006466074`*^9}, {3.6497131585106387`*^9, 
   3.6497131914459753`*^9}, {3.649713595582113*^9, 3.6497135990035405`*^9}, {
   3.6497144639218197`*^9, 3.6497144682548895`*^9}, 3.6497146567671647`*^9, {
   3.6497146951733875`*^9, 3.649714732460461*^9}, 3.6497171660232244`*^9, 
   3.64972200630283*^9, 3.6497243738557725`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"16", " ", 
   SuperscriptBox["u", "3"], " ", 
   RowBox[{"\[Delta]Breg", "[", 
    RowBox[{"t", ",", "u"}], "]"}]}], "+", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "5"}], "+", 
     RowBox[{"9", " ", 
      SuperscriptBox["u", "4"]}]}], ")"}], " ", 
   RowBox[{
    SuperscriptBox["\[Delta]Breg", 
     TagBox[
      RowBox[{"(", 
       RowBox[{"0", ",", "1"}], ")"}],
      Derivative],
     MultilineFunction->None], "[", 
    RowBox[{"t", ",", "u"}], "]"}]}], "+", 
  RowBox[{"u", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "1"}], "+", 
     SuperscriptBox["u", "4"]}], ")"}], " ", 
   RowBox[{
    SuperscriptBox["\[Delta]Breg", 
     TagBox[
      RowBox[{"(", 
       RowBox[{"0", ",", "2"}], ")"}],
      Derivative],
     MultilineFunction->None], "[", 
    RowBox[{"t", ",", "u"}], "]"}]}]}]], "Output",
 CellChangeTimes->{{3.649712992966268*^9, 3.6497130353253098`*^9}, {
   3.6497130672779503`*^9, 3.6497131006466074`*^9}, {3.6497131585106387`*^9, 
   3.6497131914459753`*^9}, {3.649713595582113*^9, 3.6497135990035405`*^9}, {
   3.6497144639218197`*^9, 3.6497144682548895`*^9}, 3.6497146567671647`*^9, {
   3.6497146951733875`*^9, 3.649714732460461*^9}, 3.6497171660232244`*^9, 
   3.64972200630283*^9, 3.649724373867793*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Snum", "[", "Bnum_", "]"}], "=", 
  RowBox[{"Sc", "/.", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"\[Delta]Breg", "[", 
       RowBox[{"t", ",", "u"}], "]"}], "\[Rule]", "Bnum"}], ",", 
     RowBox[{
      RowBox[{
       SuperscriptBox["\[Delta]Breg", 
        TagBox[
         RowBox[{"(", 
          RowBox[{"0", ",", "1"}], ")"}],
         Derivative],
        MultilineFunction->None], "[", 
       RowBox[{"t", ",", "u"}], "]"}], "\[Rule]", 
      RowBox[{"DSpec", ".", "Bnum"}]}], ",", 
     RowBox[{
      RowBox[{
       SuperscriptBox["\[Delta]Breg", 
        TagBox[
         RowBox[{"(", 
          RowBox[{"0", ",", "2"}], ")"}],
         Derivative],
        MultilineFunction->None], "[", 
       RowBox[{"t", ",", "u"}], "]"}], "\[Rule]", 
      RowBox[{"D2Spec", ".", "Bnum"}]}]}], "}"}]}]}]], "Input",
 CellChangeTimes->{{3.64971369723419*^9, 3.649713722082792*^9}, {
   3.6497142354717455`*^9, 3.649714237157941*^9}, 3.6497171734524903`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"16", " ", "Bnum", " ", 
   SuperscriptBox["u", "3"]}], "+", 
  RowBox[{"u", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "1"}], "+", 
     SuperscriptBox["u", "4"]}], ")"}], " ", 
   RowBox[{"D2Spec", ".", "Bnum"}]}], "+", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "5"}], "+", 
     RowBox[{"9", " ", 
      SuperscriptBox["u", "4"]}]}], ")"}], " ", 
   RowBox[{"DSpec", ".", "Bnum"}]}]}]], "Output",
 CellChangeTimes->{
  3.649713723182573*^9, 3.6497142377933908`*^9, {3.649714272339883*^9, 
   3.6497142786513567`*^9}, 3.6497144704404397`*^9, 3.6497146586565*^9, 
   3.6497147338684607`*^9, {3.6497171699770265`*^9, 3.649717174332117*^9}, {
   3.649722012992571*^9, 3.64972202946525*^9}, {3.649724375892234*^9, 
   3.649724386077448*^9}}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"init", "[", 
   RowBox[{"Breg_", ",", "points_"}], "]"}], ":=", 
  RowBox[{"(", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"nu", "=", "points"}], ";", "\[IndentingNewLine]", 
    RowBox[{"u", "=", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"N", "[", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"-", 
            RowBox[{"Cos", "[", 
             FractionBox[
              RowBox[{"r", " ", "\[Pi]"}], 
              RowBox[{"nu", "-", "1"}]], "]"}]}], ",", 
           RowBox[{"{", 
            RowBox[{"r", ",", "0", ",", 
             RowBox[{"nu", "-", "1"}]}], "}"}]}], "]"}], "]"}], "+", "1"}], 
       ")"}], "/", "2"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"DSpec", "=", 
     RowBox[{
      RowBox[{"NDSolve`FiniteDifferenceDerivative", "[", 
       RowBox[{"1", ",", "u", ",", 
        RowBox[{"DifferenceOrder", "\[Rule]", 
         RowBox[{"points", "-", "1"}]}]}], "]"}], "[", 
      "\"\<DifferentiationMatrix\>\"", "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"D2Spec", "=", 
     RowBox[{"DSpec", ".", "DSpec"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"Bnum", "=", 
     RowBox[{"Breg", "[", "u", "]"}]}]}], ")"}]}], "\[IndentingNewLine]", 
 RowBox[{"u", "//", "Unprotect"}]}], "Input",
 CellChangeTimes->{{3.6497132069349556`*^9, 3.6497132091645355`*^9}, {
  3.6497132419737964`*^9, 3.6497133263656216`*^9}, {3.6497150188765087`*^9, 
  3.6497150521561146`*^9}, {3.6497244908786664`*^9, 3.6497244910197663`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"init", "[", 
  RowBox[{
   RowBox[{"u", "\[Function]", 
    RowBox[{"2", "u"}]}], ",", "30"}], "]"}]], "Input",
 CellChangeTimes->{{3.6497133725493617`*^9, 3.6497133926265955`*^9}, {
  3.6497138616117096`*^9, 3.6497138616827583`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.`", ",", "0.005862042845640403`", ",", "0.023379444289913343`", ",", 
   "0.052346828817197544`", ",", "0.092424580329043`", ",", 
   "0.14314282383241073`", ",", "0.20390693429435625`", ",", 
   "0.27400450807686916`", ",", "0.3526137152181724`", ",", 
   "0.4388129346376177`", ",", "0.5315915593002098`", ",", 
   "0.6298618446600857`", ",", "0.7324716614707791`", ",", 
   "0.8382180034472353`", ",", "0.9458610914145825`", ",", 
   "1.0541389085854176`", ",", "1.1617819965527647`", ",", 
   "1.2675283385292209`", ",", "1.3701381553399143`", ",", 
   "1.4684084406997902`", ",", "1.5611870653623823`", ",", 
   "1.6473862847818275`", ",", "1.7259954919231308`", ",", 
   "1.7960930657056438`", ",", "1.8568571761675892`", ",", 
   "1.9075754196709571`", ",", "1.9476531711828025`", ",", 
   "1.9766205557100867`", ",", "1.9941379571543596`", ",", "2.`"}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.649713393233025*^9, 3.649713609710128*^9, 3.6497137360917225`*^9, 
   3.6497138319506807`*^9, 3.649713862049017*^9, 3.6497142830364647`*^9, {
   3.649714477424391*^9, 3.649714486267658*^9}, 3.6497146649599714`*^9, {
   3.6497147401288977`*^9, 3.649714743730464*^9}, {3.6497150438972454`*^9, 
   3.6497150543886833`*^9}, 3.6497155770179873`*^9, {3.6497171801412325`*^9, 
   3.649717183310478*^9}, 3.649717216665403*^9, 3.64971802137488*^9, 
   3.649722037362467*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"dBregdt", "[", "Bnum_List", "]"}], ":=", 
  RowBox[{"LinearSolve", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"DiagonalMatrix", "[", "Bc", "]"}], ".", "DSpec"}], "+", 
     RowBox[{"DiagonalMatrix", "[", 
      RowBox[{"Cc", "+", 
       RowBox[{"0", " ", "u"}]}], "]"}]}], ",", 
    RowBox[{"-", 
     RowBox[{"Snum", "[", "Bnum", "]"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.6497138819881535`*^9, 3.649713909356557*^9}, {
  3.6497140293806567`*^9, 3.6497140321005707`*^9}, {3.6497141950901184`*^9, 
  3.6497142101067653`*^9}, {3.6497142971344604`*^9, 3.6497142984373846`*^9}, {
  3.6497144112354693`*^9, 3.649714412008028*^9}, {3.64971474879104*^9, 
  3.649714750035923*^9}, {3.649717196111833*^9, 3.6497171987186813`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Time stepping with NDSolve and/or ones favorite method (Runge-Kutta, \
Adams-Bashforth, implicit/explicit etc)\
\>", "Subsection",
 CellChangeTimes->{{3.649724497940673*^9, 3.649724529811164*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Timing", "[", 
  RowBox[{
   RowBox[{"ndsol", "=", 
    RowBox[{
     RowBox[{"NDSolve", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"D", "[", 
           RowBox[{
            RowBox[{"b", "[", "t", "]"}], ",", "t"}], "]"}], "\[Equal]", 
          RowBox[{"dBregdt", "[", 
           RowBox[{"b", "[", "t", "]"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"b", "[", "0", "]"}], "\[Equal]", "Bnum"}]}], "}"}], ",", 
       "b", ",", 
       RowBox[{"{", 
        RowBox[{"t", ",", "0", ",", "8"}], "}"}]}], "]"}], 
     "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], ";"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"bi", "=", 
  RowBox[{"b", "/.", "ndsol"}]}]}], "Input",
 CellChangeTimes->{{3.649714931813798*^9, 3.649714950646138*^9}, {
   3.649715070048787*^9, 3.649715084917328*^9}, {3.649715131736532*^9, 
   3.6497151343893986`*^9}, 3.6497180245671434`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.140625`5.168662448735062", ",", "Null"}], "}"}]], "Output",
 CellChangeTimes->{{3.649714932945593*^9, 3.6497149511164713`*^9}, {
   3.649715062756616*^9, 3.649715085557783*^9}, 3.6497151352129817`*^9, {
   3.6497155678624997`*^9, 3.649715578715192*^9}, {3.649717187711599*^9, 
   3.6497172021511135`*^9}, 3.6497180255178175`*^9, 3.64972204392912*^9}],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["InterpolatingFunction", "SummaryHead"], 
       "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open$$ = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open$$ = True), Appearance -> None,
                 Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GraphicsBox[{{
                 GrayLevel[0.6], 
                 AbsolutePointSize[5], 
                 PointBox[{1, 1}], 
                 PointBox[{2, 4}], 
                 PointBox[{3, 2}], 
                 PointBox[{4, 3}]}, {{}, {}, {
                  AbsoluteThickness[1], 
                  Opacity[1.], 
                  LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAA4ScLwZmZ6T/ACPskWpOYv4AjHgZ5
3Os/cnpQh5xu1j/qWn1XCVDuP5K7ih5ptuc/r+pongFN8D/CUK87BHLxP46d
cUQ/bPE/ujUa8/qu9j9TbqBw1aPyP/TWyyAhFfw/neDJZqDG8z+QAqdF9GsA
QM1wGePDAfU/VsVD/9nXAkCidscSKDf2P6Bp73exDQVA/B1wDMFX9z+TpM3k
wfUGQDzjPoyykPg/7M3Z+O7ZCEABSgjW2LT5P3pl9LwNcgpAbCYw0z/T+j86
ypori9cLQL0gflb/Cfw/lpOs9xIqDUCTvMaj8yv9Pw4alcoYNg5AT3Y1d0Bm
/j+pB2LLtyIPQLClAv7Nmv8/NnA5bbjSD0BLO2UnSF0AQFrcILXmpw9AsTLc
klX5AED+sDHBQukOQNp6UGP9igFAbZ+lR/sLDkD10dd20SgCQNHi3Mj38wxA
42MO5MXDAkAZdr6AZb8LQJRGQrZUVANArv7zEMKHCkA4OInLD/EDQLBlMO3M
IglAnnrNRWWDBEA3d8OX6skHQNf3wBnbEgVAD3D3ndNyBkADhMcwfa4FQHOK
7Wak/wRA8WDLrLk/BkC/MhCgYawDQNJM4msi3QZAwss/TmVLAkCGc6iEq3cH
QIsIg92+BgFA/OprAs8HCECrPCvgePD/P2VxQsMepAhAKXVLE0Xg/j+RSBbp
CDYJQPRz0a7WJ/4/kFqZaBPFCUDN4sX5uLj9P4J7LytKYApAvh1MbRmT/T82
7cJSG/EKQHzT1YZwwv0/3W1pvRiOC0B2LZ/10lT+P0c/DY2wIAxAVrX8MJA7
/z+DS2C2aLAMQElWzbMzPQBAsmbGIk1MDUCi9bAadCABQKTSKfTL3Q1AYexd
q+EpAkCJTaAId3sOQFyS/ndEhgNAQAPGdkIWD0BHWcLdahwFQLoJ6Umopg9A
vd1CiejSBkCTjw8wnSEQQPiVkXD08QhAq0KpbbNqEEBsk2Azxi4LQCyTGthZ
shBAYCBYjj+gDUAnaxVkFgARQMwfdA9ySBBAg+uOIqBIEUBj/5rHgMsRQNFn
q5SZmRFAL++xNeOlE0Dwt3AR
                   "]]}}}, AspectRatio -> 1, Axes -> False, Background -> 
               GrayLevel[0.93], Frame -> True, FrameStyle -> Directive[
                 GrayLevel[0.7], 
                 Thickness[Tiny]], FrameTicks -> None, 
               ImageSize -> {Automatic, 
                 Dynamic[
                 3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])]}, PlotRange -> {{0, 5}, {0, 5}}], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "8.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Output dimensions: \"", "SummaryItemAnnotation"],
                    "\[InvisibleSpace]", 
                   TagBox[
                    RowBox[{"{", "30", "}"}], "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}], True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                None, Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GraphicsBox[{{
                 GrayLevel[0.6], 
                 AbsolutePointSize[5], 
                 PointBox[{1, 1}], 
                 PointBox[{2, 4}], 
                 PointBox[{3, 2}], 
                 PointBox[{4, 3}]}, {{}, {}, {
                  AbsoluteThickness[1], 
                  Opacity[1.], 
                  LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAA4ScLwZmZ6T/ACPskWpOYv4AjHgZ5
3Os/cnpQh5xu1j/qWn1XCVDuP5K7ih5ptuc/r+pongFN8D/CUK87BHLxP46d
cUQ/bPE/ujUa8/qu9j9TbqBw1aPyP/TWyyAhFfw/neDJZqDG8z+QAqdF9GsA
QM1wGePDAfU/VsVD/9nXAkCidscSKDf2P6Bp73exDQVA/B1wDMFX9z+TpM3k
wfUGQDzjPoyykPg/7M3Z+O7ZCEABSgjW2LT5P3pl9LwNcgpAbCYw0z/T+j86
ypori9cLQL0gflb/Cfw/lpOs9xIqDUCTvMaj8yv9Pw4alcoYNg5AT3Y1d0Bm
/j+pB2LLtyIPQLClAv7Nmv8/NnA5bbjSD0BLO2UnSF0AQFrcILXmpw9AsTLc
klX5AED+sDHBQukOQNp6UGP9igFAbZ+lR/sLDkD10dd20SgCQNHi3Mj38wxA
42MO5MXDAkAZdr6AZb8LQJRGQrZUVANArv7zEMKHCkA4OInLD/EDQLBlMO3M
IglAnnrNRWWDBEA3d8OX6skHQNf3wBnbEgVAD3D3ndNyBkADhMcwfa4FQHOK
7Wak/wRA8WDLrLk/BkC/MhCgYawDQNJM4msi3QZAwss/TmVLAkCGc6iEq3cH
QIsIg92+BgFA/OprAs8HCECrPCvgePD/P2VxQsMepAhAKXVLE0Xg/j+RSBbp
CDYJQPRz0a7WJ/4/kFqZaBPFCUDN4sX5uLj9P4J7LytKYApAvh1MbRmT/T82
7cJSG/EKQHzT1YZwwv0/3W1pvRiOC0B2LZ/10lT+P0c/DY2wIAxAVrX8MJA7
/z+DS2C2aLAMQElWzbMzPQBAsmbGIk1MDUCi9bAadCABQKTSKfTL3Q1AYexd
q+EpAkCJTaAId3sOQFyS/ndEhgNAQAPGdkIWD0BHWcLdahwFQLoJ6Umopg9A
vd1CiejSBkCTjw8wnSEQQPiVkXD08QhAq0KpbbNqEEBsk2Azxi4LQCyTGthZ
shBAYCBYjj+gDUAnaxVkFgARQMwfdA9ySBBAg+uOIqBIEUBj/5rHgMsRQNFn
q5SZmRFAL++xNeOlE0Dwt3AR
                   "]]}}}, AspectRatio -> 1, Axes -> False, Background -> 
               GrayLevel[0.93], Frame -> True, FrameStyle -> Directive[
                 GrayLevel[0.7], 
                 Thickness[Tiny]], FrameTicks -> None, 
               ImageSize -> {Automatic, 
                 Dynamic[
                 3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])]}, PlotRange -> {{0, 5}, {0, 5}}], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "8.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Output dimensions: \"", "SummaryItemAnnotation"],
                    "\[InvisibleSpace]", 
                   TagBox[
                    RowBox[{"{", "30", "}"}], "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["3", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["False", "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open$$], ImageSize -> Automatic], BaselinePosition -> 
        Baseline], DynamicModuleValues :> {}], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("InterpolatingFunction[{{0., 8.}}, <>]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.649714932945593*^9, 3.6497149511164713`*^9}, {
   3.649715062756616*^9, 3.649715085557783*^9}, 3.6497151352129817`*^9, {
   3.6497155678624997`*^9, 3.649715578715192*^9}, {3.649717187711599*^9, 
   3.6497172021511135`*^9}, 3.6497180255178175`*^9, 3.6497220439511356`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"tgrid", "=", 
  RowBox[{
   RowBox[{"bi", "[", "\"\<Grid\>\"", "]"}], "\[LeftDoubleBracket]", 
   RowBox[{";;", ",", "1"}], "\[RightDoubleBracket]"}]}]], "Input",
 CellChangeTimes->{{3.6497154884797106`*^9, 3.649715494134721*^9}, {
  3.649715608541337*^9, 3.6497156108669853`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.`", ",", "0.00008733252529617828`", ",", "0.00017466505059235657`", ",", 
   "0.0031067357645888642`", ",", "0.006038806478585372`", ",", 
   "0.00897087719258188`", ",", "0.01720488239147805`", ",", 
   "0.025438887590374222`", ",", "0.033672892789270395`", ",", 
   "0.04190689798816656`", ",", "0.05837490838595891`", ",", 
   "0.07484291878375125`", ",", "0.0913109291815436`", ",", 
   "0.10777893957933593`", ",", "0.12424694997712828`", ",", 
   "0.15539700942150292`", ",", "0.18654706886587757`", ",", 
   "0.2176971283102522`", ",", "0.24884718775462686`", ",", 
   "0.2799972471990015`", ",", "0.31114730664337614`", ",", 
   "0.3511710244889891`", ",", "0.39119474233460205`", ",", 
   "0.43121846018021504`", ",", "0.47124217802582796`", ",", 
   "0.5112658958714409`", ",", "0.5512896137170539`", ",", 
   "0.5913133315626669`", ",", "0.6026730209955462`", ",", 
   "0.6140327104284256`", ",", "0.6253923998613049`", ",", 
   "0.6367520892941843`", ",", "0.6481117787270636`", ",", 
   "0.659471468159943`", ",", "0.6653327152356439`", ",", 
   "0.6711939623113448`", ",", "0.6770552093870457`", ",", 
   "0.6829164564627466`", ",", "0.6887777035384475`", ",", 
   "0.6962309781812149`", ",", "0.7036842528239823`", ",", 
   "0.7111375274667497`", ",", "0.7185908021095171`", ",", 
   "0.7355708610146681`", ",", "0.752550919919819`", ",", 
   "0.7695309788249701`", ",", "0.7865110377301211`", ",", 
   "0.8034910966352721`", ",", "0.829910143937358`", ",", 
   "0.856329191239444`", ",", "0.88274823854153`", ",", "0.909167285843616`", 
   ",", "0.9355863331457019`", ",", "0.9620053804477878`", ",", 
   "0.9948043418719601`", ",", "1.0276033032961325`", ",", 
   "1.0604022647203046`", ",", "1.093201226144477`", ",", 
   "1.1260001875686492`", ",", "1.1587991489928213`", ",", 
   "1.1915981104169937`", ",", "1.1967123262535515`", ",", 
   "1.2018265420901093`", ",", "1.206940757926667`", ",", 
   "1.2120549737632251`", ",", "1.217169189599783`", ",", 
   "1.2222834054363407`", ",", "1.2332679139917964`", ",", 
   "1.2442524225472522`", ",", "1.2552369311027078`", ",", 
   "1.2662214396581637`", ",", "1.2772059482136193`", ",", 
   "1.2956915080514055`", ",", "1.314177067889192`", ",", 
   "1.3326626277269782`", ",", "1.3511481875647646`", ",", 
   "1.3696337474025508`", ",", "1.3881193072403373`", ",", 
   "1.4173163418240526`", ",", "1.4465133764077682`", ",", 
   "1.4757104109914836`", ",", "1.5049074455751992`", ",", 
   "1.5341044801589145`", ",", "1.56330151474263`", ",", 
   "1.5924985493263455`", ",", "1.6184870229499897`", ",", 
   "1.6444754965736341`", ",", "1.6704639701972783`", ",", 
   "1.6964524438209228`", ",", "1.722440917444567`", ",", 
   "1.7484293910682114`", ",", "1.7744178646918556`", ",", 
   "1.7804078742015004`", ",", "1.7863978837111452`", ",", 
   "1.7923878932207897`", ",", "1.7983779027304345`", ",", 
   "1.8043679122400793`", ",", "1.810357921749724`", ",", 
   "1.821709336550421`", ",", "1.8330607513511181`", ",", 
   "1.8444121661518151`", ",", "1.8557635809525121`", ",", 
   "1.8671149957532092`", ",", "1.8813918388636708`", ",", 
   "1.8956686819741326`", ",", "1.9099455250845943`", ",", 
   "1.9242223681950559`", ",", "1.9384992113055177`", ",", 
   "1.9614003382423884`", ",", "1.9843014651792588`", ",", 
   "2.0072025921161294`", ",", "2.0301037190530002`", ",", 
   "2.0530048459898707`", ",", "2.075905972926741`", ",", 
   "2.104069218653035`", ",", "2.1322324643793293`", ",", 
   "2.1603957101056235`", ",", "2.1885589558319176`", ",", 
   "2.2167222015582118`", ",", "2.244885447284506`", ",", "2.2730486930108`", 
   ",", "2.301211938737094`", ",", "2.3293751844633883`", ",", 
   "2.3632974813256795`", ",", "2.3972197781879703`", ",", 
   "2.431142075050261`", ",", "2.4650643719125522`", ",", 
   "2.498986668774843`", ",", "2.532908965637134`", ",", "2.566831262499425`",
    ",", "2.5778268584578345`", ",", "2.588822454416244`", ",", 
   "2.5998180503746537`", ",", "2.6108136463330633`", ",", 
   "2.621809242291473`", ",", "2.6328048382498825`", ",", 
   "2.650316720014447`", ",", "2.6678286017790107`", ",", 
   "2.685340483543575`", ",", "2.702852365308139`", ",", "2.720364247072703`",
    ",", "2.7516298879352785`", ",", "2.7828955287978543`", ",", 
   "2.81416116966043`", ",", "2.8454268105230054`", ",", "2.876692451385581`",
    ",", "2.907958092248157`", ",", "2.9468145173239457`", ",", 
   "2.985670942399735`", ",", "3.024527367475524`", ",", 
   "3.0633837925513134`", ",", "3.1022402176271027`", ",", 
   "3.1410966427028915`", ",", "3.1799530677786807`", ",", 
   "3.188618749268188`", ",", "3.1972844307576955`", ",", 
   "3.2059501122472027`", ",", "3.21461579373671`", ",", "3.223281475226217`",
    ",", "3.2319471567157247`", ",", "3.242852064138406`", ",", 
   "3.2537569715610872`", ",", "3.2646618789837687`", ",", 
   "3.27556678640645`", ",", "3.2864716938291316`", ",", 
   "3.3036271857215085`", ",", "3.320782677613885`", ",", 
   "3.3379381695062613`", ",", "3.355093661398638`", ",", 
   "3.383215626429887`", ",", "3.4113375914611352`", ",", 
   "3.439459556492384`", ",", "3.4675815215236327`", ",", 
   "3.4957034865548815`", ",", "3.5519474166173786`", ",", 
   "3.6081913466798756`", ",", "3.664435276742373`", ",", "3.72067920680487`",
    ",", "3.7769231368673677`", ",", "3.8331670669298648`", ",", 
   "3.8616012524956322`", ",", "3.8900354380613993`", ",", 
   "3.9184696236271668`", ",", "3.9469038091929343`", ",", 
   "3.9753379947587013`", ",", "3.9881214408338423`", ",", 
   "4.000904886908983`", ",", "4.013688332984124`", ",", "4.026471779059264`",
    ",", "4.0648033201265745`", ",", "4.103134861193886`", ",", 
   "4.141466402261196`", ",", "4.179797943328507`", ",", "4.225204433556102`",
    ",", "4.270610923783698`", ",", "4.316017414011293`", ",", 
   "4.361423904238889`", ",", "4.406830394466485`", ",", "4.450250745405742`",
    ",", "4.493671096345`", ",", "4.537091447284258`", ",", 
   "4.580511798223515`", ",", "4.623932149162773`", ",", 
   "4.6832571158254686`", ",", "4.742582082488164`", ",", "4.80190704915086`",
    ",", "4.861232015813557`", ",", "4.920556982476253`", ",", 
   "4.942536879320634`", ",", "4.964516776165015`", ",", "4.986496673009396`",
    ",", "5.0084765698537765`", ",", "5.026428192734984`", ",", 
   "5.044379815616192`", ",", "5.0623314384974`", ",", "5.102201879756887`", 
   ",", "5.142072321016373`", ",", "5.1819427622758605`", ",", 
   "5.221813203535348`", ",", "5.271929359166657`", ",", "5.322045514797967`",
    ",", "5.372161670429277`", ",", "5.422277826060586`", ",", 
   "5.446737560287945`", ",", "5.471197294515303`", ",", "5.495657028742661`",
    ",", "5.516202226019434`", ",", "5.536747423296207`", ",", 
   "5.55729262057298`", ",", "5.620239660162532`", ",", "5.683186699752085`", 
   ",", "5.746133739341636`", ",", "5.809080778931189`", ",", 
   "5.830847847394718`", ",", "5.852614915858249`", ",", "5.874381984321778`",
    ",", "5.918752620209289`", ",", "5.963123256096798`", ",", 
   "6.007493891984309`", ",", "6.066114031563412`", ",", "6.124734171142516`",
    ",", "6.18335431072162`", ",", "6.195266899241642`", ",", 
   "6.207179487761664`", ",", "6.219092076281687`", ",", "6.253366004061843`",
    ",", "6.2876399318419995`", ",", "6.321913859622155`", ",", 
   "6.3475143384881525`", ",", "6.373114817354149`", ",", 
   "6.3987152962201455`", ",", "6.4247197910352085`", ",", 
   "6.450724285850272`", ",", "6.476728780665335`", ",", "6.496776410022493`",
    ",", "6.516824039379652`", ",", "6.5368716687368105`", ",", 
   "6.564689463113142`", ",", "6.592507257489473`", ",", "6.620325051865804`",
    ",", "6.664849585985376`", ",", "6.709374120104949`", ",", 
   "6.753898654224521`", ",", "6.768724321984023`", ",", "6.783549989743525`",
    ",", "6.798375657503027`", ",", "6.825105091673005`", ",", 
   "6.851834525842983`", ",", "6.87856396001296`", ",", "6.899541803021222`", 
   ",", "6.920519646029483`", ",", "6.9414974890377446`", ",", 
   "6.971861811545446`", ",", "7.0022261340531475`", ",", 
   "7.032590456560849`", ",", "7.0597384131876995`", ",", 
   "7.086886369814551`", ",", "7.114034326441402`", ",", "7.16794451240938`", 
   ",", "7.221854698377358`", ",", "7.275764884345336`", ",", 
   "7.317037639522705`", ",", "7.358310394700074`", ",", "7.399583149877443`",
    ",", "7.42496798342901`", ",", "7.450352816980576`", ",", 
   "7.475737650532143`", ",", "7.5091566199447115`", ",", "7.54257558935728`",
    ",", "7.575994558769848`", ",", "7.603152814093576`", ",", 
   "7.6303110694173055`", ",", "7.657469324741034`", ",", 
   "7.739746752492732`", ",", "7.822024180244432`", ",", "7.90430160799613`", 
   ",", "7.9276478049074734`", ",", "7.950994001818818`", ",", 
   "7.974340198730161`", ",", "8.`"}], "}"}]], "Output",
 CellChangeTimes->{3.6497154948462253`*^9, 3.649715580466444*^9, 
  3.6497156114193754`*^9, 3.6497172072167053`*^9, 3.6497180270328937`*^9, 
  3.64972204593956*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"bi3d", "=", 
  RowBox[{
   RowBox[{"Flatten", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{
         "tgrid", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}], ",", 
         RowBox[{"u", "\[LeftDoubleBracket]", "j", "\[RightDoubleBracket]"}], 
         ",", 
         RowBox[{
          RowBox[{"bi", "[", 
           RowBox[{"tgrid", "[", 
            RowBox[{"[", "i", "]"}], "]"}], "]"}], "[", 
          RowBox[{"[", "j", "]"}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", 
         RowBox[{"Length", "[", "tgrid", "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"j", ",", 
         RowBox[{"Length", "[", "u", "]"}]}], "}"}]}], "]"}], ",", "1"}], 
    "]"}], "//", "Interpolation"}]}]], "Input",
 CellChangeTimes->{{3.649715479815568*^9, 3.649715552886382*^9}, {
  3.649715616753159*^9, 3.649715618252221*^9}, {3.649718112040157*^9, 
  3.649718115006258*^9}}],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["InterpolatingFunction", "SummaryHead"], 
       "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open$$ = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open$$ = True), Appearance -> None,
                 Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GraphicsBox[{{
                 GrayLevel[0.6], 
                 AbsolutePointSize[5], 
                 PointBox[{1, 1}], 
                 PointBox[{2, 4}], 
                 PointBox[{3, 2}], 
                 PointBox[{4, 3}]}, {{}, {}, {
                  AbsoluteThickness[1], 
                  Opacity[1.], 
                  LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAA4ScLwZmZ6T/ACPskWpOYv4AjHgZ5
3Os/cnpQh5xu1j/qWn1XCVDuP5K7ih5ptuc/r+pongFN8D/CUK87BHLxP46d
cUQ/bPE/ujUa8/qu9j9TbqBw1aPyP/TWyyAhFfw/neDJZqDG8z+QAqdF9GsA
QM1wGePDAfU/VsVD/9nXAkCidscSKDf2P6Bp73exDQVA/B1wDMFX9z+TpM3k
wfUGQDzjPoyykPg/7M3Z+O7ZCEABSgjW2LT5P3pl9LwNcgpAbCYw0z/T+j86
ypori9cLQL0gflb/Cfw/lpOs9xIqDUCTvMaj8yv9Pw4alcoYNg5AT3Y1d0Bm
/j+pB2LLtyIPQLClAv7Nmv8/NnA5bbjSD0BLO2UnSF0AQFrcILXmpw9AsTLc
klX5AED+sDHBQukOQNp6UGP9igFAbZ+lR/sLDkD10dd20SgCQNHi3Mj38wxA
42MO5MXDAkAZdr6AZb8LQJRGQrZUVANArv7zEMKHCkA4OInLD/EDQLBlMO3M
IglAnnrNRWWDBEA3d8OX6skHQNf3wBnbEgVAD3D3ndNyBkADhMcwfa4FQHOK
7Wak/wRA8WDLrLk/BkC/MhCgYawDQNJM4msi3QZAwss/TmVLAkCGc6iEq3cH
QIsIg92+BgFA/OprAs8HCECrPCvgePD/P2VxQsMepAhAKXVLE0Xg/j+RSBbp
CDYJQPRz0a7WJ/4/kFqZaBPFCUDN4sX5uLj9P4J7LytKYApAvh1MbRmT/T82
7cJSG/EKQHzT1YZwwv0/3W1pvRiOC0B2LZ/10lT+P0c/DY2wIAxAVrX8MJA7
/z+DS2C2aLAMQElWzbMzPQBAsmbGIk1MDUCi9bAadCABQKTSKfTL3Q1AYexd
q+EpAkCJTaAId3sOQFyS/ndEhgNAQAPGdkIWD0BHWcLdahwFQLoJ6Umopg9A
vd1CiejSBkCTjw8wnSEQQPiVkXD08QhAq0KpbbNqEEBsk2Azxi4LQCyTGthZ
shBAYCBYjj+gDUAnaxVkFgARQMwfdA9ySBBAg+uOIqBIEUBj/5rHgMsRQNFn
q5SZmRFAL++xNeOlE0Dwt3AR
                   "]]}}}, AspectRatio -> 1, Axes -> False, Background -> 
               GrayLevel[0.93], Frame -> True, FrameStyle -> Directive[
                 GrayLevel[0.7], 
                 Thickness[Tiny]], FrameTicks -> None, 
               ImageSize -> {Automatic, 
                 Dynamic[
                 3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])]}, PlotRange -> {{0, 5}, {0, 5}}], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "8.`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "1.`"}], "}"}]}], "}"}], 
                    "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"scalar\"", "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}], True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                None, Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GraphicsBox[{{
                 GrayLevel[0.6], 
                 AbsolutePointSize[5], 
                 PointBox[{1, 1}], 
                 PointBox[{2, 4}], 
                 PointBox[{3, 2}], 
                 PointBox[{4, 3}]}, {{}, {}, {
                  AbsoluteThickness[1], 
                  Opacity[1.], 
                  LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAA4ScLwZmZ6T/ACPskWpOYv4AjHgZ5
3Os/cnpQh5xu1j/qWn1XCVDuP5K7ih5ptuc/r+pongFN8D/CUK87BHLxP46d
cUQ/bPE/ujUa8/qu9j9TbqBw1aPyP/TWyyAhFfw/neDJZqDG8z+QAqdF9GsA
QM1wGePDAfU/VsVD/9nXAkCidscSKDf2P6Bp73exDQVA/B1wDMFX9z+TpM3k
wfUGQDzjPoyykPg/7M3Z+O7ZCEABSgjW2LT5P3pl9LwNcgpAbCYw0z/T+j86
ypori9cLQL0gflb/Cfw/lpOs9xIqDUCTvMaj8yv9Pw4alcoYNg5AT3Y1d0Bm
/j+pB2LLtyIPQLClAv7Nmv8/NnA5bbjSD0BLO2UnSF0AQFrcILXmpw9AsTLc
klX5AED+sDHBQukOQNp6UGP9igFAbZ+lR/sLDkD10dd20SgCQNHi3Mj38wxA
42MO5MXDAkAZdr6AZb8LQJRGQrZUVANArv7zEMKHCkA4OInLD/EDQLBlMO3M
IglAnnrNRWWDBEA3d8OX6skHQNf3wBnbEgVAD3D3ndNyBkADhMcwfa4FQHOK
7Wak/wRA8WDLrLk/BkC/MhCgYawDQNJM4msi3QZAwss/TmVLAkCGc6iEq3cH
QIsIg92+BgFA/OprAs8HCECrPCvgePD/P2VxQsMepAhAKXVLE0Xg/j+RSBbp
CDYJQPRz0a7WJ/4/kFqZaBPFCUDN4sX5uLj9P4J7LytKYApAvh1MbRmT/T82
7cJSG/EKQHzT1YZwwv0/3W1pvRiOC0B2LZ/10lT+P0c/DY2wIAxAVrX8MJA7
/z+DS2C2aLAMQElWzbMzPQBAsmbGIk1MDUCi9bAadCABQKTSKfTL3Q1AYexd
q+EpAkCJTaAId3sOQFyS/ndEhgNAQAPGdkIWD0BHWcLdahwFQLoJ6Umopg9A
vd1CiejSBkCTjw8wnSEQQPiVkXD08QhAq0KpbbNqEEBsk2Azxi4LQCyTGthZ
shBAYCBYjj+gDUAnaxVkFgARQMwfdA9ySBBAg+uOIqBIEUBj/5rHgMsRQNFn
q5SZmRFAL++xNeOlE0Dwt3AR
                   "]]}}}, AspectRatio -> 1, Axes -> False, Background -> 
               GrayLevel[0.93], Frame -> True, FrameStyle -> Directive[
                 GrayLevel[0.7], 
                 Thickness[Tiny]], FrameTicks -> None, 
               ImageSize -> {Automatic, 
                 Dynamic[
                 3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])]}, PlotRange -> {{0, 5}, {0, 5}}], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "8.`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "1.`"}], "}"}]}], "}"}], 
                    "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"scalar\"", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    RowBox[{"{", 
                    RowBox[{"3", ",", "3"}], "}"}], "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["False", "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open$$], ImageSize -> Automatic], BaselinePosition -> 
        Baseline], DynamicModuleValues :> {}], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->(
    "InterpolatingFunction[{{0., 8.}, {0., 1.}}, <>]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.6497155375575047`*^9, 3.6497155533366966`*^9}, {
   3.649715584786495*^9, 3.649715619016762*^9}, 3.6497172192842607`*^9, 
   3.649718028875199*^9, 3.649718116075015*^9, 3.649722050116522*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot3D", "[", 
  RowBox[{
   RowBox[{"bi3d", "[", 
    RowBox[{"x", ",", "y"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0.`", ",", "8.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"y", ",", "0.`", ",", "1.`"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6497181210395346`*^9, 3.649718122312438*^9}},
 NumberMarks->False],

Cell[BoxData[
 Graphics3DBox[GraphicsComplex3DBox[CompressedData["
1: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
f3u+ta9Pq6W8cm5yW0vWow5tZN9qp6bymb4ldBwuktWTU/GpoWxd6qL/tgaj
Dimk/OvNZeZ8dqXXoQ9J+e+JuP8p06Pjc5d60ac0089UW+i9D1O/0DpYkP0I
f+/K6a1ytA4Tfz9RRq/v/ha5SecxJv5+ptQnrcc7if/sArtlHFzTUYcycm7t
mxxLXHm4AnXIGDXwF1NppFoyhv521lehDqFkfy3Z8Y2FkDw9L70V/OeAj1gD
9W3PFgv+ejqPYUbKb22Snb9oF53H0CTl53+32sxYgs5jVP5X3mZqSacVv3sg
vR7fQ85p1IX/Ekhv/Ir64PlnpuO9p6Z0vuJO9QNvMZUmSmH0/rHS33S+Qpes
ZzknrbsryHMdZzzO3zODg87zwHNPFFs+2fsR9cmSYq9JM22m1AOCNJz30/kK
SXJ+Iy9AaOfPK3SeJ9y5OMW0volqz/ZvPyJK5yvmk/KvPOl7IVCJbifupPze
6cFFglp0vkLaZ8otMZU2anve330L+oZRB9iPszjsEt7nTucfutzPiqj4tFA8
Ti0e1JQtqMNLsj69PmkdLUX82z6Vc7iW+hPnLZHkfIv24JU1PUX0+kWwvdSg
Pq2VinrXUXpzAZ1/uEPOqxzYftg+sZ3WgU3+oaKPWCvFtjVYK2XTbdTBkpTf
MSRS1K2Ezq92kvKfa0v//W4dnX/wUqqYq+LTQR2XcFnsO0Kvo6eQ/e7C1vmZ
SiUtqA/sP65rvSxqfZzOMyhTm+JM69uod1LMMC9OKdRnIVmHXpi0XvYgz7UN
4zlNOQ2gPhzkudHDrbdl3Wl9Jv62U7YzelMkpuejPl3kHMK4CONb50ZaH91v
xiVppu2Uxsb6dIasC+pTQcpv8Eb83p+yc3Q+kJRfxbW0/oU1nWf4/jM0zLS+
k+J6fVb9de4g6gD7gzt8rPM5NtF5g6iBqfI+Yl8o9XVTrntziKIOtmT96DJp
nfuN+OdblaOzfsE31EGP7GNqNn1Wc1Sk+0ulmulVMZVOKvxOLU/n1mzUQZns
h17fLLXVvpuOJy9DNx+vT/tCrZYtifyRQecNpEj567W880Yz6bxBJCm/8Xgg
K7+Lzhvse3pR0kesm3ox5xH/sNEABfN/4f+e85UKZk410hYyx/k/nPewDgtu
W7uPzgNwxlTmpZl+pVYp3/UryeJDfarJum/6pPWpKnluaLpkGfWlFfVhkvOf
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
6gP8TW56wI5VK1Ef+C5AkPo9ZHOc/p1o4Gc/rl90yzQGxxfg/leunNgpfxV1
A/7j72WDOTxGqBvw+OenTQZd5qBuwC/c+Z699dlS1A141w6u7w8ZzagbcGby
Z3vhZZWoG/B7v97u3TItFnUDbrD1Zst95nXUDZ97csM2odqzqBvwRt0Rd+f+
pagbcIvpDy4kDIuibvBdgDDv4VyPHnq8Bn6M/G4F/s4s4WP1H3lPaEWhnsBn
HOk+VVxmjXoC1+EWvn1KxgD1BM7mIhVZ3DLIAD2BB3s+alp1Uhj1BK47PLVg
G3sL6gncd4MWU/9GGeoJnDn6dlfKNHp8BO5Zplewr8ke9QS+ZfXG1VbdZ1BP
4Lzzc9VypPhRT+C7cjcKHpJeinrCebl43SOLd0ztRT2Bv8mO/XRSjb4fG/iK
i4yHxTsiUU/gO3SZi6/MNUc9gfMpmy+ziNJHPYFrtTWGfk3pYoKewJe8j5Lf
LSSIegL38Z35yfY33T6BB3fzNj1fUoh6Am8PKlc92f8Y9QSuxnhf2bzUGvUE
zlhaN89v52nUE3jxyu9yQ7G/toOewJff2HWx4dEi5sT37bDPk0TtjLtakLJ3
lHwH/hN58Lal6u+EG8j30uyYT/iqalOavzeDNfFdMZ0nkf8ssLFc1Is18f3t
DOTp/de0So9ZUh/IdyjIyff+G/47P0TnQ/qctfM2rP7M9PzvPBCdD9GPlT/K
ZvWZ0fPf+R5B5AcV6lMsA/2Ze//bj6HzIYlFh/487PZlPvlvH4XOhwgzZVs7
/rXDiX2+JcjZjJ/L/Xy5kQH3r0I+gfvVa+fFlT6siTz1DOSSf2tDaiosyf60
APIi4Ynv+ifyxf8r71GeUZZs0MLQ/2+/WRB5Uu6u5xJx/gzWf/tGC5H/dJxW
wWkaxFz8334PnfeoOZYW0ZF5jAH3qAM/tfT3ldJZhxgT58+4MT8g1CzvqDbN
mpy7mof8AvnufiK/Joh8n/6vqLTIMMbEvtdC5A8aN/5VnhLGnNivEkYuW3Or
+t4yTcbEfiqdl8iSiVVUDj9Cfq9lAa67t5Dv3CfOTS5E7vpXZc2vKRHMif1U
YeQ9fFt23LulzzhFfn8c+Eeegmx+w2MMYfL9EaxP9cn34xP7o8LIP+TLb5Io
OMuY+M5KBPmVH7qXnXuPMr6T75VgXbaYfGc98f2VCHLbeXe6rg1rMHRJXIL5
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
NSc8sGm8pL9Mdp5UoPqvXyzz/4Hk/41l/rwd+fnhlJfjPEn3U1NfVq7i5wXP
VWo97v9Taof9f7jfp6rTW4X/yOZdMM072Anmi2epeGvyhhyOA9GO9zWtiPIm
gRxvw/+sXRA6VEOtTFBTW3ruv/c7KWm/U44sbllIcUuyLN++jvLtqTK+gLi7
7H8tkf7Xuter5h3eY7pVuZ1p0mehK8078FU683vNdJTuC+6xeFPpu4OFQhHN
L3D/fuvKemx/LNjQ/AJXFpR1Dht7Szh079/5JWfKLw0nP8D7K0o3tI0r+8r7
wTD+1iffzpXqT8UqMP76IZ3bq6lJuvbwM7naYy/U13/nOI3Xf0nX3k7GVxH3
o+8a/MNKj1sPY098oboP+ewHYrzUTY9WfGS7ZT3K4jQ9tyFvhRzZvlMf2nfq
Q88LezC9Vz0nqfaD4E/jD252f95Qt9OfhY3k98AvXLj6yGZ5mdCH/B64donr
xsHBlUI+vRdwHae0byeFX/OP3gu4YfcOymF7/hbKZd9ZB/rO4n8H7+sM6Z6z
fjq9L8FEY/LRdTW/7Dn53H+/r/70vkr+n7zfcLJDvMdTbdP61LWV9MHB78eU
BOWF1Ajl9N0H107ZZLvz9RERdoX3eIl0xpHPBD9LHHE1uBnphitlPH+kitfT
fWEPRb33DUvQjRVfk5/H92KMfbRlwosz4hMaf/4vNsuy1yr9JIwm/4xxa65n
PT702TH2/+BNhn5oMe/1u1/++N/xgBfFA8kyPpS4scxfhZC/yqO8PfpzupnH
tXPakk40eI+9N52iSt2oPkhD5uaj3lqNOBsietF6E/gu269bFjvNE9/QugPs
3JJ0qN/KeE/iyA/APwRFe/5nws59YhD93/E+vcwc56GHpP02sMM8yxrPpF/9
+YvyHuB1pB8dK+Mi8Scy/+NK/gcc49/y4NVll75KetAYTzeZHjTssGHHC7H2
9bWsawk/kEnn2jDO4H7itIizVWNYrxnjmd4/yKzINp//6+XrCNtl+9Xdab/6
Gfr/xXfnP9cNEhZGSPEG+Phimw6ndp8VnSl+4/8I0lMeJeNBxBtR/AZ+mfSU
tWU8ijj8MO+Lnqo7W0OtVNCnPC3G+ed41bk2vF/w+x/U7Tud287xA8Y590uB
R9DrALYfzLvxr/c0npdxTjxHcS/aKbFI0z4/8jOPJ9oxPPlui9uQSD7fh/f7
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
Ehzva0KGqp7k/wC3u8pA
   "], {{
     {RGBColor[0.880722, 0.611041, 0.142051], EdgeForm[None], Specularity[
       GrayLevel[1], 3], 
      StyleBox[GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1:eJxFnHXgF8Xz/18Xu3dvURCwk1QsxO4WAxOxFcXGwEQEFBMVCwUMxEDEQgxM
sFuxPioWBhIqYmKhqKjf54Pn+vv9sa+Z197e3t3e7s7Mc2au7eEn7XVi3mg0
PoyNRiF6edloLJo1GpeJ/q9qNB7SwTdF/1J5QPzV0fUPin9D9ILMbdbTuTPF
3y3+DNGuufnLVL+4On5Y/HbidxOdoHKc2nDBf3P3u6Bym7dEHxV9RGVbNRkc
Go3eanuY6PaqG6dyierXFh2jsmzmPm9Wman6I2uf+53abyA6VmUJ1XdX/Qt6
prtFn1T5WNdeTPQ+nX+L2pwgulZuXqc2HtD/W8WfKLpubr6V6h/O3OdJop1E
R6scL/4e0fGMj/r9NvEj1X4H0ftURokv9Wzrqm1P0VL3sq/qDlT7V3Qfmf4v
Lfqbjv2p9lH88yq/63hr0Tt0/Hu1HyA6JHisLhb9U8d3ZFxF305jyFh+pHZr
61p3ia4h+p3abKVyb3D/94jmOra36vbXudfq/yaq30/0VZ2/j86ZLLq0Sg/x
f4jem/s5r9c5X2T+D/+ajg3Q/9NEa/oVP1N9b6typ47fov7XU92P4ndXOVn8
bTq3PX2ozU+qO0v0Ff1fR2Wu/v+mfrYQ/UTz7XHV3an27fT/Y55J/I6i2+Tm
+6j+X137cfFPqv1sjVd39beh6Puqf0L174p+q/8D1e/z4mPh+kHMMdHnVA5S
WU7HDlLfA0Tnqn1P9bOF6Lmqe1XHVxYdEXzvN/NOVHdTer9TdM5j4h/SPZTq
fxLzp2FK/XY65yKVJ8VfrvpBos8w5ir9VZ5W2UflPV1vafW9lMqP6vM31ZXc
g+izKgeo7K3ylMp89fOP2kwU/3D0uL6exvadys/H/TAOXPc90UNEn1fJeK+6
zx3UZlfR73XsZ+p1rWmV51t/3cMb+r+ynvkw1VUqG/GORGeqvquOr5PWHOuW
Obd74lm/3M/tKm3FX60+7sg9bn1yH6OeOt5vx/Se70jvelLmc5kvL4m+nOof
ycyvJNpM970Ia0j/J+d+R0s20v6k0kH8+Zn5VUU/071uqut3Fv2k8vHLNT69
dPwFlUJtjhB9kTUo/s/KfV+hNsuLP1h134peldocpnKlnmsF1Y9Uv7X6baX7
aSY6X7Sr+t9FtNCxfcQfID6I30/8QeIPE/+W+MniH1e/F6u/qcxV9Xmq+pzA
e1O5VPUfiR6u9m+r/atqf4T4d1h/4n9U2yNVmlT2Vv0zjJ/qDxL/mvjnxR/C
uxT/kvgj1d8iavue/h+q+jdFX1Z9L/Z98a+I7yH+afETxe8l/inxj4o/Rvfx
rs7tLbqT6ieofpzqV2YeZ94vmF/Ms54qf6jMzb1HfKlxnCV6is7dQefep3Pv
1Ln7in9O/OPsZ+LvF3+X+NmZ9yL2lMnBY/uK6Ofq5zPVncxepfbPqv1jOnag
+FfFPyd+0SbNVf1fS+9ittrdpPO6qG5J8Xume2itskvqZ7rads8sJz7kXTMv
RTfX/1vU5yj1+an4XdXmGdGOOnaK+AtFN9P/0WpzvdpsIX6M+BvEj6wsA34V
3ULlSrX/VPQDlQOZ66J7iFbMcZ3zg+ihKjVjpX4OY+6KdlA5T8fPUZ+XBa/3
S0VX0vm91OYc9rnSe8xE0Wv0zCsxjtHz9Ig0V9lj9k37DHvP/mn/+Ujnba/y
V8N1HFsg/sTKx04S3V39Pc7a0j1M1/EpPBeyR8fuYd0zlip3i9+VOaJrPya+
u/gV2XfY70UX4bl03uHq587gPecO0aX0bs7Usd1178+q7WqsNWSx6ubx7KIt
1SZX2x3Vz8fct8rPOvam2m6s8ov4xdTuCNGj1P9T6utz0eaiLVV/jOqP1f+v
1Udn8e/pHhdX/dHiezPP1V93ld/0/xmd873qFhdtrjZHqu5o/W8h/ijxx4h/
UNdcnnfV8JrYUuV39ii1+YO9p/Q+zX7dQ+Xz0nvIq6K99f8YZI7+H1V733pD
9zUl+t6mi/9C11hV/HqiH+uZh3HfGoO7g+XCONHR6utrteknukz02CI72M/Y
1w5V2Vn/H1D93TyP+lmSPY19Rtc+UCWo7K9SqjyqdnPVbiPRrUV/UNkQ/QF9
Tf2PUV9tdA/tdf4U3ovq9lcZqHOfVt31Oj5b9X2R7Yyv+Nd1n+/p/5JqM1z0
KpUvVH9q6bmzuMrntNP5F6rtGup/cZWVdXw1jc0HpWXvDaXn12Iqs1hjuXU0
9t+hwTrAFaKnJ/nYI8135v2fDe+h7KXfRO8tV+TeX9bVtSar7x61961LeGeq
30P/hyDjmjyWVyJ/M+sMF6r8qz73yLxvX8ceVLlu57R/XJT7+PTM7buJ/lR7
z92q9jW4nzt0zuq6xrm6916qn1X6nXDtf/T/RNFuon+r9BG/s+hX6OnpPlfV
uX3RAXTdpyrLMZ7xR3SN3Hvyampztvo/tHYdz34XurTq3xU/q3I9dWP0rm/N
PA7oCZ9zL+lZllT7l0UPYF2L/1p8v8o6+SiVFjp/ZdX/lPalH2vLni3Zk1T/
XdKveNbrc88H9r1rxR8u+oja7YpM0v0/LH4X5Jb4h8R3E/+6+B9qy7bNRb/O
PQ/QJV6srO9/LfoLMjm3/XBb5nfHuExNcna2+nmi8vPBP5vk+jPIBd3nM8jS
yu+M9z2EcdE9X8feq2svrzbr6P/BuocPVfeWyp5qs6zqO6j+IHQB8UuIPwD7
A12CdaFr/av/J6mPXdD91WaorrEZdpb+H6/6HWvv8YXew0nsucE21gPBBZ51
ckTtPeBy0fuD9Zn7gvV2dPXvmA/Be8uTok261kB0L93D1TpnRWSw+OHil2ct
Ru9FT6jtsaJ/6f+Nav9SZZsKPe+zpBOhdy2F/pTWHesPWw6briPmndr9L7Wf
hYxT+yvY92uv0VtFD6stx0aKNlSa1GawrnlJknHIupox1L2Njb5OUJuz0RV0
TFWN5fX/xuBr3Mw9qJ/t0Ht08FX9v6Fh2b+o6lur7a6q/7W2LrWt6DyV/6Gf
iRYqi6lNLvoca6Vh2TRf/3urTVfRn2vrSVvzToP1XGyxu9KezN68QMdOUJud
RP9UOU78DqK/1Nb5tsG2UzlG/PbYfSpHI7+5Bz1vUB/7i28m/mbNja6V730J
dKXMlP93M+fTPXAvy1Q+vqFoc53bhn2f9ZL7HNrfnmQusrdZ0lcr0VLtL9G5
56r9YuLX1/G+6ueZ4HmNbXi/2m2tPierzQTx26Bvib9X/JbiXwYfqC2DV8T+
UllGfPvaa7RPWqfvIu9U3070/OD6LrqPKUlOtxV9u7asXVn0ZB0/JbdNgl58
kvhtxL9TW363waaPPo7t8laS2SuJLqr/W+mcm0Q/1P/l0N2QKSrLoluJTk3z
f5XasqNfbtvq1dq6+7Kir9W225cTfb22Hr98bTlzemr/Um2bfCnRLpnvm/t8
sbattaTo5Nq29zK1dY1Tk77xVW09e6Paz3hyet7rxZ+R2rB2z8ytYwxM9Khg
+3FAknHbZrYtTxD/YeZ6nr955WO3VH4XyMz7K69x7MW/Rd9kvHQPK4h+k3vt
d0GnUrutk86PLO2froWeOCjpip/o+Hniu4pOUru/Vbed6Cfqq736XL32fXDu
cTrWonLbW7kfZEXqExsXW5fzOQ4/QHxL7A39v1305OA5AL7B9c9O9/CprtFZ
dWske/m81E8z9G/0Q/RPdPrM+/Oc2nbOxqLXq7QV/4jG4Sbxq4qfxP4nfhXx
E8Vfx5zXtS/jnsV3VP2jqr9FdVejN5TWqUaI78lYq83qqntCbW4W30n8Y9F4
w+CkPzynviahW6r+zGDd/wu1G6f2G4g+r/rx4jcW/5L4SeL3w24U/6j4PbDZ
xN/H+Ip/Jen8yDJs2Kdr65EtmO+V9Zd7kqwblto8W1vPayl6h8q62JDo7+L3
x+ZEVoo/EptT/BnB+gl6yte1bc5NRO9UWQ97TG1Gi18Nm0H8R+JXEL+q6KOV
18sj6PBJBnUS/by27bee6DSVtcWvKfplbdtjA9HvWHvi92Z+1rb9NuX5atui
64t+X9sO3Ez0wcrr6wHRh1R6apxbYzvm1pdYP7Nq26Lr1rbJLkh62lj9XxP9
Xe1vF7+O+KfFA5i+qdIJO019biJ6pOiI9Iz38n5r69Ctal//tLR+79L/9dXm
ObWZUdu27IIcqY0XLCE6vbY9uTZ1wXrF9MrjcRXyVu2i9uc79T9X/aeZbdgz
G97j2euRAf8w93NjkRcVxk3XUn/rquyl49eo7kuVZVTfXnTb4HX4D7qpznlf
/DbojcH7xolqs7XqpyZbEbxrMLozdm1p/f3k0vozOik6LdgfGOB6wfb6bui7
+r9+ZTsaPApc90Lsx8z4DTgOuj666JDMuusM8Fp05MJ66+VJb9+gSjY77xTc
RW1WET218nGwTPAGnhessk/hffECbEn01fSMOyQcADzgXca1YQx8isoM5Exp
nBnc+liVjrn1S3TLt0vjMK+r7zeDdSJ0mG5q8zO2ncocdJnMOHMHZG+qB4M5
OjMOMw0sS7RDYVyatthI2Cn7ZdbLT9Cx40VXBQ9HdxVth37EfOY5VMYle+oK
9Jvcx3bOPLeZ10N0/gD1M5Dx1PlrBu+rZyK32PMz46trB7+vIeC3lftGDwFz
BXulzRtJt7wgGmthjMHAZ2TGWHjXHwTrg2Bof5TGDCaUxgG6i99H7ReUlp8P
izZhI4s/FHuz9L7+OM9S+d4eVD8blsbXR6jNbyrri9+iMDbwD7Ko9PjclFkG
rVF6/rMOsCkHpjFoJn4v8fuK/5V3mhtrGJsZrxrXMC7KfVbRfgbmwSAd21X0
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
/wCso1ML
          "]], Polygon3DBox[CompressedData["
1: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
WMd/2AT8I3i7Ov69/NJ3rm3gB10rwF+At60TT2wA/hZ8oD4beKcy/skB4PfB
O5bxR04yDvX7onyDvQ/1bzuflYlH9gS/4foL/qWfNcy17FHK79h7Uf8m9VtR
/yt4b/Bb4G3K1C/M+zrHWAfc531NDt4K/Bz4Z+r3pf07zpdl4pX9wO+Cty8T
f+xUx7/aFPwT+Bz+TtxJzOJ8uj/171G/Qxl/6uT291zfSXxzL2WpTnykO7CP
5L6XBV/QCf9yG2UR7HM7mb9maePDQWX8zSuq+AtyUnJOB5XxBRag/WRyHG38
OG0Z/3WFOtzbYmXihcf4u2YnPs1ltF+mjWcWKeOPOh7kNlYq488X7XrWlInX
Vm/92eXKzEertfHvsmX8+zXa+GL5MvFCp10v+2Xmx3+rrDd1Gf9xrSq+pZzO
A9ijtvHhmGXWq6nb9Wxi8Bngv5vMx3Ipx4M3aeOLtcr4t1NTvxu/b+oq68+s
bbw9TRn/fMbWP5+qTDwwHXgn8GRl4rNRWv92jDLr50xt/D51mXhi5jaeHlgm
fpiV6x3u+6zCL/7TZH2SGzwbPAl4E+qH0v4r8NJtPLlwmfhr3jY+maVMvDli
lbEyPc9kedebMrytY8hv4xXK9tgzUH8K9tnt+HPNOon214Hn0Nei/GKfzmHY
p1F+xF6W+7kEu3Jdk59qx9urlEOwV6jS94yUFbFv5th81D1POdAx0uKzO+Fz
7mnH8/md+M/Hlf/RFcXI4OOd08v4ivpI8rsfgffthCOWD/23Cf8l93qpsU0b
3y9UJl6anfojja+pvwQ8XxvfzVom/p8TfKC+R5n4fsk2fl+wDB8zfxvvzVYm
fl+gjd9mLxO/D/ebpf/lu+HHFmzjuTnK8Akfu350wgHKTy1C/QnUz12GX3IN
PcpnV2Vt/b5KfPZH6y9tTfun9Fdp/zX4pyrx3D+tvznceFN/nXIvfY0JXg17
d8qtxltN8OqUi5q0se0wrvkpbV8BD+nmGfms9P/X6caneq2ND9brxqfSt7qV
c+6Wn6e8CJ4WvAb2mpRL7KuOb+Uz9dl6f8b6+lD6Ui834cq95qtNxv9infT5
EvZUjKmt+I130GZzzh2Dsorxg/wm9Xf7PruJWfTvRgLv1c2c7Nw8gnwUeA/n
R+dqylLYX1C/l7GR/mo3nMXefuvOL91wYgeCxwIvZDwI3ga8JveyaRV+9lzw
YMpa2Gs7/2FPwf1OVIUf73FuRVmAuuc4f2Pqz6LM140Ptx72F3V8eX04fbkT
6nDPcjpyO+YvXuwmhpb/ehp8QzcxiPHSdFzviCr5kmea+PvGG3Km8rmn18lt
yGnIbTzFset9Vlxz1ybx5bzGy/pETXwifSOPWTcq+FvG2kGd+OPP+s6pO0yf
u4kPoy+jv6M/PQL47zLrzeV1fBh9GTl342Xv0Xu1j+ewr3aMgY9t/Vefh/Zx
lPvAc/QTK8uN609c1SQ2Par1v2ek/1OqxDtvg0v5D+pepnwIftd77iZml+8f
Gbwf9r6UO7Fvq+OLO2c7d4/PsVPAJzvmm9yD96IP/WUdDlou2hhyc+7ngSZt
NzGmx55mQMvr098jfg8DwnPLdz/ahI/22n6DfosDqd+Y9hsU+T7vohzWTcxt
/GL8aKxszGz+4fA6Y8OchrkN8YBeOFu520n192n7g3MI9ueUz/weurn+lD5j
7BOpn79JPD8c/DV4P33jOrkD5yTnpi7XGJn+f+RY7bWMV/w2ab8l9szc/wVV
8gOfgmfx+ZTJT33WhIOQi7CPXj85Lf0M/Y0t+8mhmEuRE9oKvFwdbuZvYy7O
H6eJ/Q/l9yZF+7pu+A/Ht/GtOYw/2+/Hsf4v9X804eDk4sakfqR+8gndXtr/
1b5/5ybXWNfaFVp/RQ7P/OKV7Xquj6CvYP5n9F7yHeaGhrTzt2uOa4/5u1Gx
fzUGkyvzHrEvbvmSWbmfwVX8Jbmgaf1mu1lDXUsryivgZ8AbYQ+jvNrNmHZs
y/HO0stvdH6Yif5WA69YZLwbvxpLGFP87rcP3rWbOfM87Klpv20VTkhuaJDJ
uSr5t9GbcJ4L9PJMnS9G5dhBnqtPgt13juymz1uwb28ytzqeXWuM8c0F/tlJ
7G/Oy7Exbvv8zSlM3MsYdrw+2vqT5nRH6IcjWbPXjnljtDr8lj6q+TnHoGNR
zuob8JOUNTrhxOTGfOY+ezmuH5pwHsv0Mic6N8rJbwbepAhXb07Q3KDx8hbY
43NsPL8xxvCJ/fBXr3XzDj5ucmznXjhc2+oz6juaj9sM+7sq+YvfWz7lzyr8
VIf+ntB/dc7ififg+OPgGzi+EvVPd8KX7V/G1ue6HnvFftaKs6rkr28swwXI
CchnLt0LF/Bk2+d4VeJbY0Zjx4PLrF36ZMYCt1A2pP0LrX//VJncuj7UMOzN
m8TDxsXjDcia5/lT0nZ88AFl1jJ9Nn23W42bOP/FTvjY541Ji/hAn5bhpIy/
J8UeZUB4nNfa+9FXvMs4jPrXO+F7XTPla+VtXUuX4vyLqFuqSv5zmn7G4qJV
8nefl8nPDzQmxt6kiu91I+Vw7BnlNTrhDOUPnykzN+uDfYJ9nzFwJxywfPH0
4B3A43WS83oGvFkn/Kl8sPHRC+3v15eVg/H5P9IJ/7y7cUonPvQ5bcwhV2bM
YSxiDCCXtlWR2GCEMtytY9yxfkET30YfRl9GTlBu0JjpxyocjVygMY/cjRyb
XNtSRXxFcxzmOsyZmBs3RpJLMgYydjKHYi7FnIy52b85NrX+djf5D3Mm5k7M
magV0KeUyzTm0tc0ZjPXZkxjLGfMJdcq52ostmsZPYDxhbHqPmWejTHDFdij
6st18k58N3KQkxd5ZuYj5d0+LdJmtHY8q53QH9EvWaNJX8YhY/H+X5WvMP6u
kj9WLyI/rUZCrcT8vXCzD+mfVOFU5VbVjJgPH7PK+c6XcjFyuLYf0kk+fyBl
uyI5ifXa9nLBc4HXcG3uxxeTF56S6+/XS2793U70DMZfY3WSkzQ3qW5E/Ygx
jrH7u2W4yfc74T9nqGIbwxvLH2nM0wmH9J4xbpm+5Zzext6x1+ZGOsk//Fkm
NzIa11gYfHiZOq9nbDWkDDf6dif5jGmr2EtQ9nENLJN7GbObb8zrmXtWo7FY
+34/LjK/z9mO9+GOhW5yy36PUzgWOtHMyDebazaHai71izK5EzVD81XRD+1C
/Rscn3RAciTmSiboJkY7som+Qp3FZOb/y/Qt5yX3NUYTvYm6k8kHJN8r3ywn
LTf9W5ncj5oetT0/lNEbqMlRm/NzmfyKmha1LeY8zX0OKqKNObqX+/EdqKcx
RjJWmgV7wgGJScw3bV0lVnG8OJctRNm+l/Gv1sQclbmqlXwmRTQsalnOon62
buYLY+8JeslVe2zVtv3M2Ac6J/XyvtQvmJPaoI1FFgHv1I1exO9r0iKaHbU7
5kjMldiHehnzC2pB1EiplXJ9kNs2Rtq1ig9g/so8lr6B48dcljkuc129Ktqi
CbuZkx2faiXUHKk9OqOX3Mgnnei75J31neVQ5VJ3axK/G8f/j/5nrvI85TTl
Nusq2rCJ6G+ZKvketT7mgMwFqY/xtxpPGFfowzh/O4/r25jDM5e3aftOzOf9
N3eDt6vCB6sHMWbbskpO2ty0OW+1RlvT38udxAjGCmoa1DYYY6u1UiOiVkRN
h1ojNR5qPdSEqGVTI+YYnaQT7ZgaEbUiakzUqqgRUStiTl9tlJoQtSFqSNQ+
XVnFv9Ff1m82X6Y2Sf9YP1kNgFoANWdqqW6u4svq095SRYOjb6qP+ij2DVV8
YTVu5oP0d+6tEjMYP6g/Mr7SP9ZP1kfTV3u8iu98obxINzmO06rEb+aX1MoZ
ex5Txr91PZXbOJZyVjfr/39ciGO0E02O2pxrqvhn+shXVdEPLVoknjKuMkfi
euA1zZ8sz/Wu4fxfKT/Wybk5vi7ohiORv1Qv5zO7sp0/1Z6ZUzK3pK/tfP9t
N/ykMZCx0MFVYjN9P2MpNV/mS3ymPtu3wEN4FiPV0S+OWiY/qF+o/7g55RVj
ozp6x9HK5Atd013bRy+Tf9y0Tr5l7TL59L+r5Bt7ZfQv6vvMh33bi97p2yr6
mN96yb+NWEevOEqZfOg3VfQyv1L/MPijKvm7b3rRm/1VJX/aLaOn+adKPrMs
o6dxjXatrsrk+zdp4s+dUyU/+yLHt/F7o7xURl82kPYf96JvlD8cZnxE/YnY
E7axp+Ppnip83UjUbUd5Wc5N36OTnOUKZea7/3XCJzi/7VxHT7B5Gb3CCHXy
4SOXyee+XkVPN8z3Ax5QJz8+EvXPer8cf0H/qgwn/2GV/OXX8r/9aJbOKKPJ
Ust0apn3L+cp92mM7ng9sErsLken9kcOW+5OTk9tjhyrXJ+c4glVOC3jvSco
1xrLdaN3kjNUG2RMKN8lR6jWRw5S7lBOVi3QKUW4WjlitTzGoPIPcshqSw4p
wi2raVHb4jvwXchRqlWSk5S7nJnfcEIvOR5zPVPqo/aSQzOXJqesNkWOU65Z
zlkty6FFuGg1PWp71Aip/by4CTdoznOUJpohc7WOUceqmhm1M+YM1ZaqIVFL
oqZG7aCctT6OHJ5cnpy5Pr96A7l0OXO1LUcU4dLNQah9ObxIbsJ46mr6+aWb
eFuO9gHOX74TPtIchFoaOVVzE7M1ySWO3Y1eSv9/6040imoV1ciplZOjn4j2
49LXLr3EcMZyxjNqCY3x/AaMydfn/CfLxOrOZ2od5VQuqTLfqS0c3sb0ch7D
sC+swoXIeai3VHcpF/IH7efvRLOodvG4KlypGk7zv8Z7atvUTKidOJFybzea
YPPR9mv/aorVc5pvcS5TM3FtFc7LfK9a1Rnb+Votkzloc9Hmi9XGyCEaQ6oJ
VBtozmGyOppBtYPmhKaok2M4tgonJh+i5kjt0S7UT1hHo6hWUU5k3DoaQLWA
5jQm8ftowv3KGcgdDKyTczHXcmY/+ZmVi2j6zsS+vAl3qs+h76GeQi2tnN0Z
Vc7Zu5cclH2pYVTLaA5mKvALZeasD4rkAr8rs065Xr3T8idyI2pQjN/vb9fP
8drvaZYmXKaac/Ug68hnFxkD6nP2lEPrhDOWO/6jTqxgzGDssQfl9SI5P3N/
zsGztd+rc7N8umPXdyq/rd7MWEsOTi7u2zrc9nqd6OUOpjxeZM2Uv9uK+ieL
5HzM/cg5yz2raVE/JcewcPt9yj081M4Xg9rv9bs6WqiNO9F3Dm3jxaXbeM01
YYU2fnStcE1SmymH4VrlGqI20zXJtcU1SW2Ia45r1WZltGDO4c7l8nVqk/bu
hL97tw63PID7PaqJJlht8Je0f71ODLdXmfjM2G7DJtyXHIBcwILgkzuJAYwF
1MyonfmW89+jfvc6voZzuHP5lnV8EX2Sh5rEhGqLvyjyvtRH3t2Jpue3OvyR
XKKcuNy4fO7tRdYs+d8lKBd2Msc41yzTJPduzsHcwyN1tA9+o84FizXJvcrh
yuXeUieXNQ74xCYaD/UB9rmk3BL192P35CuaaA70ma8sokXYl2N3Folp5Wcf
a+dj52vj/f0dA0V84AOavA+1euaUd2r5v/WKcDr/z9fJNTsnmQ+RrzeGVL+2
Zj8aaXUS6iXkx7doshdi3k74Xt+PuY3ZO+EnzXkb5xjvmG9ZtwkXZY7DXMf7
fpNFNE/qdVzj1Sa+2I4X9eAHd+Ivq1/4vf2+ZtRfxr6xib9gLnIGrvWhnGIR
TYh6GHO0jr+HiuRu9bGGtONR38tn5LP6sxeuRA7FtervXriVNbnmPb1oDNQa
mENVyzq4SG7VHLbaysuK5LbNeauVlSOWKzYnrZZVH89ctTlstTXmkM1tv1Ln
t/ibnDvU97pWGbMauy7D9a/pRdOitkUNwD3t7/H9mQNX63pzkdy4nOG+ZZ6p
XKLOl1yfnN871B9EOaATH26KJt+U39bcrgft+1A7JQfp+QvQ13m9aHTU6pgj
VVt6aZHc6YgDonNZrh2v5vDV5qrxMLdvTlSt+iVFcqWrNuFOSuco8Bt1tFly
TP/UyR/J1RlDmP95m2MLFPkN/pY3eolzjXenaxIvGkua8zL3pb5cX0sN5zRN
cqZq8+WQzVfIMaprUd8i9/hZnb1AcsTmu1wvHH9qZH0+akSear8XtSN+j85N
cgSrUf8VuOxEE7RHO58598gZmC8zhj2qzD16r36zfrufte09X/toylzt/Zh7
cw/UqU2+32/Bm1Mma783cytqXEevoyF5sJc1wPXlmzq5S30MfQ3nB3M35jDN
ZU4sR9zLnGE+cyLwE2V+w9d1OAt11uZg5TLM2csryS+Zf1Dj8nAvGh21L2pi
Huol56xWpqT9+MaXjinXTo6N3fmPCiyeqbKeqf2WE5EbUfOiVl8NkVqYn+pw
g3KEKzXR4Lg3QM2P2pwf6uT6jfmWo/74OnODPo6+zlCuMUonMcb3dTjqyavw
z3LX+vvytvK3v1B/XB17fOefOvOH/Pmb9PcJ7bsDwsGpP1yrH02PcYTxhFog
NTruFVDDpHbnijq+rDHs9000OWqd1TCp1fH9mPtat5P88qF1cn9yUvM2WY/d
a6HGeNc68a3PUk7I3yvHvkkvHL3cu9/PV0X21KhvNN/uXjE1Ii+164/5FTUD
agdOasKdDaQMcn4YEE7VPQEbGo820V6YkzY3fUgdbZTvxHcjB3dJGX5Obs5v
2G/5pE70jQeDj/HZUg5tkh9WV2Uf8zi/cI+TFOFwnb//Gx9F5vgZmuSEzQ2P
Tp/H6Os0ieXNgZkLk+Pbs8x+C9d7n7e5lf80OOD5muQuu8b37fM9rpMc5+ft
eJmySE5A/sU9ifKN+hALNfFB9EXUkOo/uOa69qohfb31N7z2Lm17OcVOFf23
87VruGu5HO6x2HuX4bXlpNds8pv8beY4tm+y30guVY3ujtiT0N/9vfh46gvG
HRAdjO9kM/C2TbQzag7UHqjZlr/6tl3fJxgQXY1ttmuieXu6XU/1f90vJjen
ptT9Qr4j35Wa2hWaPDOfnT6Q+0PM0cnlHteOz1OacG9qZN3/JOci93JM+713
uP7rZfZMmD/WXzXXrGZit3a909dyTv+c53Z0Ey5aTm2rJnqgcTuZM9QbOf9/
U2RN/4W6j5r4FuY0zW3eRP3eRWIAYwHjE7VQfgOb9LOH4oBe9sS4t8I9Do+0
85daQ88x9rixTl/u0Tm2lz087t1RYyOP5BhcpZ/4Xu2QmpRN+4k/5aH9plbu
J3+kL+587Lzs/il9a9+p71bOaKJe9jjKJbk+yHW6Bn3efl9y3a6B/9Z5n1NV
0dv9p8fnxNt70VSqdXSPzuW97Llx7457xs7qZQ+Pe8ncg3NbL3s83Jsj5zFr
L5yJXIicySS9cFpyKav3k++7uRf9mBrZs3vR+KqdVeN7XC8aUrW/akgPbPkE
taX6EPoSD7fj3d/itzJFkfzbRv3ELmog5FNOa5Irub9dT52TnJvM6S3dJF9o
7GQM9Wwv+xHcO2CMaH53jX7ydT5r10Lfoe9yEGWaOvG8PNwEdeJT9TnGlcaX
7jexTq5Ozsg25mCX7YVDMzerZvWKXjTDalnN0RvXG9+rjVCDvEsb/8qnmC81
Nry7fYar9cMvyjPKF8jJLdgLByVXp79mXlafeIV+9kcZ67lGu1bLuck7yD+Y
a5bTWquXnLFc11v95Au3LhJHOx+Z6zDGWLxJzsnck/P/nE1youZtnHOcexbv
Z+12TXdtdz3YsYpG4IZ2/SurxDTGNov1M7Zd81371bvcWoVfVjthDlbe3znG
uWbRfnxnfVZ9V310Ne/q3/XdF+lHL3x3L/reQf3wo/4mf9u8/fi++sDqe+fq
511c2Yv+WH9Q3Z8+gb7B3P3oxa/qRa/seq1WV02w2lzjdddefR59n1n7Gdvn
9KIvn70fX1efV/24fMH3ZfxTc6Gz9aNfP7cXPbmcityKmqy3mnDect9qqoaC
F+5HP31XL/pmcybmToz5FqV++n6+HTk59dfm8OVh5GPUdpnjNtdtPn/9dj2Y
tMo34H6c8VqNujHYupw/Uz/f5vG96Otn7of7kwNUX288bW5Un+HNOuuTPIp8
ilooc1TmRcyPXNuut+bW9NmX5/z1+4nd9RH1Fd2/bG5Aje94TfQ7D1fh79W6
yHnJUakZGt4kB2MuRs5hA+rn6+dbuaUXveJC/ejL7+xFT75gP3PdHb3ovefv
J7YwxlAfrn7owSp6Xvc2yanJrZm/Xakf/dBjVfIdanP8Pwf8vwccY1PW2S+j
7y7HIv88uE4+15jV2NX479o2XjN+NH+qdlBNg9oGx+Q1bfxlfOgcrf/nGuzc
7TvwXfgO3Ptg/lR9gpoGtQ0319kvYExibCLfpdbGY+oF5QfVvurv6fet7Tfa
iU+ub+6eMPeGmQOYuM43ar5Yn9Vv97Ym2k41WWqz3DPm3rHNaPO/OjGHscfn
rf+v/2W+2Jjf2N89Y+oPNimiezH/phbJHIu5PPN9ztXmQM2FGpMZm41WxP/2
G/Vb9Zt074BrivOi71y+yv08cv1jFPE/vmnjx3vb9dkxcUsbT6ptNR6VHz+1
jSf1Nz3XmMPYY+N+fEk1deZvHDOOHceUewecY+5u43n3FvhN+m06B7kXwTnD
ucM9I+59cP/Uf3shivhnfkN+S/LzxsPuT/V7MKZz/4caxMFt/G/86x6Iq9v4
3b0RjmnHtnOCeyeua/KtqSlUW2h+UW7FMag/ZMxi7KKmSm2VfJP7M4y5jb3d
P6gWV47J/SPu39f3l1N0v4maS/cyzVVGi/lTmdje7199tppL/d8ry2gxXSP8
lh8ts3aY/3ZvjT7YNWXOV9u9cBFtkfly957o08mjuR9TX1x+3/0G5h/MV5hP
MJ9h/kG+WL7d/IV88H/agiJ6YPcf6uuYs1OftV4/XJRj39jH/INclDla9cmO
b7knNZJqJfUP1XaqkVMr55zq3HpIkfyHc6b7F/SpnUv9P0f8v0e25Njkdf7P
D//vjy3Ak9bRtA4rEsMYy5jjcy+gOTNzf7+W4Y7lW9S/y9ec3/Ij8jHm5Nyr
aE7PXJ16Hvc1ql9TX2YOy72J5uRGaPtTS6/ma/Ve9AnuPTImvbFdi4y11KDM
365B57b8jHudXMNcy1yj3Dvl+3Tt9/+YcH42B+neRXN85ibVE8nNbVtEL21O
Ur2O+h1zla6B57X8jfyT8dVnRXx8ff3/A57L5P4=
          "]], Polygon3DBox[CompressedData["
1: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
          "]]}],
       Lighting->{{"Ambient", 
          RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]}, {
         "Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{0, 2, 2}]}, {"Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{2, 2, 2}]}, {"Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{2, 0, 2}]}}]}, {}, {}, {}, {}}, {
     {GrayLevel[0], Line3DBox[CompressedData["
1:eJwl0slLVWEcBuCf18osJyQIsUwrxSlXuSt0m1eEgoKUEAc0CxV3uog2ga5a
FiQULRJ1Y4v8C2rX5HidSm0h6F6Tdj6HFt993vcM3/edc09F9/C9oayImDTe
pSKS3McC4evpiCK9X1+Vr8g7bOABb/MvW7mXE7Hhuo5kLvmuXHwm4ol+X66V
x+SHcqM8IXfIzfJredo9j/QpeUbulOflWblL/iJXyL32dUdf1q+xR/+WHbGS
7FtOJ3uVK/lYf2F/c3LGse+uW+MPrvMnN7jARWNTXuIWl/mLK/zNVW4zwx2u
cTe5/pRntM5Ha/zR3/KZ/txzLekj/MwefuIDfmALX7GJ47zJUdaw2hiQi9jO
FNM88iy3uM8b3GYZj50vseZ7axfqbzio19tjgV7LfFYzj1U8z+s8x6vMZTnP
8jIvGV53lNL0cdF8bcl/b27EP/2C0arUO+Y1xEs/xY7V6W6LQ7nQqNFTyTt1
/mnW/+/sBGIxSdA=
       "]]}, 
     {GrayLevel[0.2], 
      Line3DBox[{1483, 1777, 1835, 984, 1778, 1867, 1868, 1779, 1848, 2308, 
       1664, 1922, 1869, 1870, 1836, 2319, 1849, 1665, 1780, 1871, 1872, 2152,
        1781, 1850, 1666, 2025, 1988, 2346, 2144, 1837, 1667, 1484, 2149, 
       2153, 2048, 1668, 1485, 2154, 2061, 2236, 1486, 2155, 1669, 1487, 2156,
        1670, 1488, 2157, 1671, 1489, 2158, 1672, 1490, 2159, 1673, 1491, 
       2160, 1674, 1492, 2309, 1782, 1675, 1783}], 
      Line3DBox[{1493, 616, 1838, 617, 1389, 618, 434, 509, 396, 745, 667, 
       1967, 2349, 709, 710, 437, 1337, 512, 397, 550, 511, 2161, 1839, 1676, 
       2011, 2350, 2010, 2042, 1677, 1494, 2162, 2062, 2237, 1495, 2063, 2238,
        1496, 2163, 1678, 1497, 2164, 1679, 1498, 2165, 1680, 1499, 2166, 
       1681, 1500, 2167, 1682, 1501, 2168, 1683, 1502}], 
      Line3DBox[{1503, 1746, 1785, 1966, 2304, 2142, 1784, 1873, 1747, 1923, 
       1851, 2305, 1852, 1828, 1989, 1787, 1789, 1264, 2012, 1853, 1788, 1874,
        2124, 2337, 1926, 1854, 1855, 1829, 1925, 2336, 1791, 1840, 1997, 
       1998, 1996, 2347, 1995, 2043, 1684, 1504, 2169, 2064, 2239, 1505, 2065,
        2240, 1506, 2066, 2241, 1507, 2170, 1685, 1508, 2171, 1686, 1509, 
       2172, 1687, 1510, 2173, 1688, 1511, 2174, 1689, 1512}], 
      Line3DBox[{1513, 1748, 1786, 1749, 2322, 2137, 1939, 1875, 1750, 1924, 
       1751, 2323, 1876, 1514, 1752, 1790, 1753, 2324, 1877, 1940, 1878, 1144,
        2013, 1754, 1968, 1515, 2310, 1794, 1841, 1795, 2014, 1516, 2148, 
       2348, 1999, 2044, 2000, 1517, 2175, 2067, 2242, 1518, 2068, 2243, 1519,
        2069, 2244, 1520, 2070, 2245, 1521, 2176, 1690, 1522, 2177, 1691, 
       1523, 2178, 1692, 1524, 2179, 1693, 1525}], 
      Line3DBox[{1526, 1755, 1792, 1756, 1879, 2311, 1942, 1880, 1757, 1927, 
       1758, 2325, 1881, 1527, 1759, 1793, 2246, 2125, 1882, 1943, 1883, 2126,
        2326, 2016, 1760, 2015, 1528, 1366, 1946, 1941, 2039, 1529, 2151, 
       2355, 2037, 2054, 2038, 1530, 2180, 2071, 2247, 1531, 2072, 2248, 1532,
        2073, 2249, 1533, 2074, 2250, 1534, 2075, 2251, 1535, 2181, 1694, 
       1536, 2182, 1695, 1537, 2183, 1696, 1538}], 
      Line3DBox[{1552, 1698, 2186, 1551, 1697, 2185, 1550, 2258, 2081, 1549, 
       2257, 2080, 1548, 2256, 2079, 1547, 2255, 2078, 1546, 2254, 2077, 1545,
        2253, 2076, 2184, 1544, 1034, 1543, 2029, 2049, 2356, 2051, 2050, 
       1542, 2030, 2031, 1799, 2327, 1891, 1890, 1541, 1888, 1889, 2252, 1798,
        2020, 2019, 1540, 2017, 2351, 2018, 1797, 1887, 1886, 1539, 2339, 
       1884, 1885, 1796, 1761, 2021}], 
      Line3DBox[{1554, 1948, 1949, 1804, 1856, 2312, 1699, 1928, 1895, 1896, 
       1805, 1975, 2313, 1700, 1950, 1951, 1952, 1806, 2134, 2314, 1701, 1929,
        1900, 1901, 2187, 1830, 1702, 2033, 2147, 2188, 2045, 1703, 1559, 
       2189, 1704, 1561, 2190, 1047, 1563, 2191, 1705, 1565, 2192, 1706, 1567,
        2193, 1707, 1569, 2194, 1708, 1571, 2195, 1709, 1573, 2196, 1710, 
       1575, 2198, 1712, 1577}], 
      Line3DBox[{1576, 1711, 2197, 1574, 2266, 2088, 1572, 2265, 2087, 1570, 
       2264, 2086, 1568, 2263, 2085, 1566, 2262, 2084, 1564, 2261, 2083, 1562,
        2260, 1046, 1560, 2259, 2082, 1558, 2032, 2052, 2150, 2357, 2053, 
       1557, 2034, 2035, 1803, 2330, 1899, 1898, 1556, 1897, 2329, 2139, 1802,
        1974, 1973, 1555, 1971, 2343, 1972, 1801, 1894, 1893, 1553, 2138, 
       2328, 1892, 1800, 1970, 1969, 1947}], 
      Line3DBox[{1578, 1953, 1954, 1807, 1857, 2089, 2320, 1932, 1902, 1903, 
       1831, 2318, 1713, 1955, 1956, 1957, 1809, 2344, 1858, 1714, 1934, 1930,
        1931, 2199, 1842, 2002, 1715, 2001, 2145, 2200, 2046, 1716, 1579, 
       2201, 1717, 1580, 2202, 2090, 2267, 1581, 1060, 1582, 2203, 1718, 1583,
        2204, 1719, 1584, 2205, 1720, 1585, 2206, 1721, 1586, 2207, 1722, 
       1587, 2208, 1723, 1588}], 
      Line3DBox[{1589, 1958, 2006, 1762, 1976, 1859, 1860, 2338, 1810, 1933, 
       1808, 1843, 1861, 2315, 1862, 1811, 1904, 1763, 1936, 2321, 1863, 1864,
        1832, 1935, 2128, 2209, 1844, 2004, 2005, 2003, 2146, 2210, 2047, 
       1724, 1590, 2211, 1725, 1591, 2212, 2091, 2268, 1592, 2092, 2269, 1593,
        1072, 1594, 2213, 1726, 1595, 2214, 1727, 1596, 2215, 1728, 1597, 
       2216, 1729, 1598, 2217, 1730, 1599}], 
      Line3DBox[{1600, 1959, 2007, 1764, 1977, 1865, 2306, 2135, 1833, 2026, 
       1812, 1991, 2093, 2316, 1813, 1905, 1765, 1937, 2136, 2307, 1866, 1834,
        1990, 2129, 2218, 1845, 1731, 2023, 2352, 2022, 2058, 1732, 1601, 
       2219, 1733, 1602, 2220, 2094, 2270, 1603, 2095, 2271, 1604, 2096, 2272,
        1605, 1085, 1606, 2221, 1734, 1607, 2222, 1735, 1608, 2223, 1736, 
       1609, 2224, 1737, 1610}], 
      Line3DBox[{1622, 1741, 2229, 1621, 1740, 2228, 1620, 1739, 2227, 1619, 
       1097, 1618, 2276, 2100, 1617, 2275, 2099, 1616, 2274, 2098, 1615, 2273,
        2097, 2226, 1614, 1738, 2225, 1613, 2056, 2059, 2055, 2358, 2060, 
       1612, 2057, 1816, 1846, 2340, 2130, 2036, 1944, 1994, 1907, 2332, 1769,
        1938, 1768, 1906, 1993, 1992, 2028, 1815, 2041, 1814, 2040, 1611, 
       2140, 2331, 1767, 1979, 1766, 2008, 1978, 1960}], 
      Line3DBox[{1635, 1744, 2233, 1634, 1743, 2232, 1633, 1110, 1632, 2282, 
       2106, 1631, 2281, 2105, 1630, 2280, 2104, 1629, 2279, 2103, 1628, 2278,
        2102, 2231, 1627, 1742, 2230, 1626, 2277, 2101, 1625, 1819, 2027, 
       2354, 2131, 1624, 1982, 2127, 2353, 2024, 1774, 1911, 1945, 1910, 2333,
        1773, 1847, 1772, 1909, 1623, 2317, 1908, 1771, 1981, 1770, 2009, 
       1980, 1961}], 
      Line3DBox[{1649, 1745, 2235, 1648, 1123, 1647, 2292, 2114, 1646, 2291, 
       2113, 1645, 2290, 2112, 1644, 2289, 2111, 1643, 2288, 2110, 1642, 2287,
        2109, 2234, 1641, 2286, 2108, 1640, 2285, 2107, 1639, 1823, 2284, 
       2132, 1638, 1985, 1986, 2283, 1820, 1915, 1914, 1637, 1912, 2334, 1913,
        1818, 1775, 1636, 2341, 1963, 1964, 1817, 1984, 1983, 1962}], 
      Line3DBox[{1663, 1827, 1232, 1662, 2303, 2123, 1661, 2302, 2122, 1660, 
       2301, 2121, 1659, 2300, 2120, 1658, 2299, 2119, 1657, 2298, 2118, 1656,
        2297, 2296, 2117, 1655, 2295, 2116, 1654, 2294, 2115, 1653, 1826, 
       2293, 2133, 1652, 1987, 2345, 2143, 1824, 1921, 1920, 1651, 1918, 2335,
        1919, 1822, 1776, 1650, 2141, 2342, 1965, 1821, 1917, 1916, 1825}]}, 
     {GrayLevel[0.2], 
      Line3DBox[{795, 1466, 1467, 2153, 1468, 1469, 1470, 1426, 2350, 1425, 
       1454, 1455, 1456, 1414, 2347, 1413, 1457, 1458, 1459, 2348, 1416, 1415,
        1475, 1476, 1477, 2355, 1453, 1452, 853, 1034, 866, 2259, 1045, 2189, 
       879, 1057, 2201, 892, 1068, 2211, 905, 1080, 2219, 918, 1091, 2225, 
       932, 1103, 2230, 947, 2286, 1115, 962, 2295, 1127, 975}], 
      Line3DBox[{796, 985, 2154, 798, 994, 2162, 817, 1004, 2169, 829, 1014, 
       2175, 841, 1024, 2180, 854, 1035, 2184, 867, 1046, 2190, 880, 1058, 
       2202, 893, 1069, 2212, 906, 1081, 2220, 919, 1092, 2226, 933, 1104, 
       2231, 948, 1116, 2234, 963, 2296, 1128, 976}], 
      Line3DBox[{800, 987, 2155, 801, 2238, 996, 819, 2240, 1006, 831, 2243, 
       1016, 843, 2248, 1026, 856, 2254, 1037, 869, 2261, 1048, 2191, 882, 
       1060, 895, 2269, 1071, 908, 2271, 1083, 921, 2274, 1094, 935, 2279, 
       1106, 950, 2288, 1118, 965, 2298, 1130, 978}], 
      Line3DBox[{802, 988, 2156, 803, 997, 2163, 820, 2241, 1007, 832, 2244, 
       1017, 844, 2249, 1027, 857, 2255, 1038, 870, 2262, 1049, 2192, 883, 
       1061, 2203, 896, 1072, 909, 2272, 1084, 922, 2275, 1095, 936, 2280, 
       1107, 951, 2289, 1119, 966, 2299, 1131, 979}], 
      Line3DBox[{804, 989, 2157, 805, 998, 2164, 821, 1008, 2170, 833, 2245, 
       1018, 845, 2250, 1028, 858, 2256, 1039, 871, 2263, 1050, 2193, 884, 
       1062, 2204, 897, 1073, 2213, 910, 1085, 923, 2276, 1096, 937, 2281, 
       1108, 952, 2290, 1120, 967, 2300, 1132, 980}], 
      Line3DBox[{806, 990, 2158, 807, 999, 2165, 822, 1009, 2171, 834, 1019, 
       2176, 846, 2251, 1029, 859, 2257, 1040, 872, 2264, 1051, 2194, 885, 
       1063, 2205, 898, 1074, 2214, 911, 1086, 2221, 924, 1097, 938, 2282, 
       1109, 953, 2291, 1121, 968, 2301, 1133, 981}], 
      Line3DBox[{808, 991, 2159, 809, 1000, 2166, 823, 1010, 2172, 835, 1020, 
       2177, 847, 1030, 2181, 860, 2258, 1041, 873, 2265, 1052, 2195, 886, 
       1064, 2206, 899, 1075, 2215, 912, 1087, 2222, 925, 1098, 2227, 939, 
       1110, 954, 2292, 1122, 969, 2302, 1134, 982}], 
      Line3DBox[{810, 992, 2160, 811, 1001, 2167, 824, 1011, 2173, 836, 1021, 
       2178, 848, 1031, 2182, 861, 1042, 2185, 874, 2266, 1053, 2196, 887, 
       1065, 2207, 900, 1076, 2216, 913, 1088, 2223, 926, 1099, 2228, 940, 
       1111, 2232, 955, 1123, 970, 2303, 1135, 983}], 
      Line3DBox[{812, 1172, 2309, 1173, 813, 1002, 2168, 825, 1012, 2174, 837,
        1022, 2179, 849, 1032, 2183, 862, 1043, 2186, 875, 1054, 2197, 2198, 
       888, 1066, 2208, 901, 1077, 2217, 914, 1089, 2224, 927, 1100, 2229, 
       941, 1112, 2233, 956, 1124, 2235, 971, 1232, 1233, 1234}], 
      Line3DBox[CompressedData["
1:eJwVzz0oxHEcx/HfceKUCAMJcXmIXEQG5aFLNuGiHEl5yPNdRrOysCmbEpuB
wWJgNdksFsVsU1dK4fUf3n0/38/72+/fv2Uln8nFQgj7eC4OYT0ewlZJCDvY
RnsihEd9Vr9mX8Um2vQb5g03yZXLT+aAWcH1mxdcWlcqv5sN+j65F6fcoO5S
jqOIe7On5EP04MhNt25cbuVj5oO921xCFw7cNOuq+LT9V75Hp7yIDuy6KeNr
9WP2H/MOSXkheht1/LK7hH7U/m3eoknOIsk3mhk3fxiRC/w16uVSfj56BxN8
AcPyF3+F6uj79jnUYIj/RF7OIfDn0X/Is6hEiv/AXvQPOOOnzRlMRd/iXnGi
P8YL/gH2JS4X
       "]], 
      Line3DBox[{587, 423, 1229, 497, 2335, 958, 422, 1226, 492, 2334, 943, 
       421, 1223, 2333, 489, 929, 652, 752, 2028, 684, 916, 1079, 2316, 1217, 
       1216, 903, 414, 2315, 1213, 1209, 890, 2318, 1056, 1382, 1155, 877, 
       2313, 634, 1381, 628, 2343, 864, 732, 1432, 723, 2351, 851, 405, 1195, 
       2325, 454, 839, 402, 1188, 2323, 447, 827, 398, 2305, 1239, 440, 815, 
       396, 1237, 433, 793, 2308, 393, 1165, 425, 500}], 
      Line3DBox[CompressedData["
1:eJwVz7srhQEYB+BXKHIphqMwOIU/QCGyGJhMZlEGmcg1ImK1KOlESi4pRFEY
FHIpctulDJLBMdo9Z3j6/d73/b6+vmTvYOdAVkT08Zwd8ZoT8c0Lf3kRV3ZP
+hePpO2O7B70T+6py4/Yyo3Y5s68L29ltX2P/qvPyT3v3ugfXNNtl5btcsPt
Un/ngja7H9kqU25n+jmndNm9yVq54Davn2S+Qblv1tgf60k5K4+Yocytyu5Q
r5SrTOsHTJFwT9lVsJt5Xg4xqe8wwbI5waZeKltIem/cvM4YzXYlrOnFsolR
fYURGs1FLOmFst8/NMhh8yJD1JsL6OAf/543pw==
       "]], Line3DBox[CompressedData["
1:eJwVzr1KQnEcBuBfZFJ3UWtTQ0XgNehQYNDo4Kh1B62VBTVIlEofpNUY2sdU
Nmg5NEnoBQgVtDb3ODy873n5/885c7niamEiItJ8TEbkExF/0xFtfUP/1e/0
jD7SL/XuVMQbyzMRHdnjnSoLtpqs8MQjF+7tywNKPHDPsX1X7rFDi+b4jP1G
3nLNK0ve25Z1GlyxaHuRz6xTJkuOzfFd/zwk6VxD/pCyn8tZ20Ce8c2Kfct3
T/VPTlizfcl5Z7f1I73PIWnPGf4BX5Uw1w==
       "]], 
      Line3DBox[{977, 1129, 2297, 964, 1117, 2287, 949, 1105, 2278, 934, 1093,
        2273, 920, 1082, 2270, 907, 1070, 2268, 894, 1059, 2267, 881, 1047, 
       2260, 868, 1036, 2253, 855, 1025, 2247, 842, 1015, 2242, 830, 1005, 
       2239, 818, 995, 2237, 799, 986, 2236, 797}], Line3DBox[CompressedData["
1:eJwV0EsrhVEYhuHFRpuJFAM7JWVAkcPYzMDGbOcH2H7AJuczyXmAQkg5lZmB
gZGJmZF/oBTJRDlERMT1De6e91n3u75aX0VXdyqTFUIYwEpOCD1YxRMK80N4
lolYCKncELbM25E313Jrsp6bkRvY49bli3xFE1eiD5mL7R/LN7wjySW4y3gI
o/oJPvCJDq6cu+J25ISzU3xhV/+WaTulvlmp92La2Rl+0Kf/ygI+Y69a78es
s3P8YUCv4oMcs1MjmzHHXSPbXMS3yBgW7dTJJOb5G8T4XL0Vedi00yjbsMCX
8bcyrrcjH0d2BuU+GvhF/g5D+giGcWpnVD56/4Fc4u8xFv0LjOMiepf7k+ZD
LPMP6DRPIR29F/898zzO
       "]]}, {}, {}}},
   VertexNormals->CompressedData["
1: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
RvxYvWqQDTG3Cy3mISs2SAnc3JeKtY9dX13W0YlxnSfs8Ge1tNkaEib7oOXK
Sc06bIswnQu6kvMBYyDPS5x70tqWSyACdxsn9pPlgnTNi1DcjDpfEi7gg1v9
IfI3PDs0iVMPm5gPDPY9bfQPj0tgbBS9iFfFtjIox6iK3/yHA+O9/qtmmUY3
7Cr7s2OyqQ18lS6Zz1e1wK1S2ZXkUgo8/cFgaUZug1Rcf9sjgQ4QNLI10eOs
gPiMOsNd6xJBvrJAcTpxCMyf2J49s9kXXS9x/mgfHoYm/AJV3o3RxrfR/1nG
E4jqd1M74ve6o92XX7PLTFNB4XUU28NEfbDmuHPQ8L4BZMyGJzbR5iNuVKaR
MCMP/r9uzcjynIMSuWdnF+qFz510rk7WEq6OaT/q47DiRE3U1zfMW5kQ8/EP
i5yoZXbtt/lWlGBazJ6Mke86sb35dF4fY0l7rVFrG2ajPxM42VWBdeTT91+Q
ZJ3R6/8WN5xABwTswvEigveyo4vpiXVMEF43cWi8oPcN3kzkw75h+VnOSXq0
bDGMdJPLcIF/tqiLK1x+nJeliO1hEKs7804CmyH0gQo3kQ37e4C/2z3e+Vcb
rFeTYtS83wRHBbdO5l+kgCTXfMn8iRY4aS92T2egE3JXb3riMlYEtxRHO8Sa
IiDuEnvZh7NUSMJLlItcA5AeZNbNhYUijnwfFvFxKqwNq0//aPQBmRt9knw+
6IBCqDu/zs/Q8l4JknFGhh64sdccnJ3WgRrXhCOdC3G2e2quLFaGVt8Vn5+4
cBJa+CTvLfBelhFcHSeCq1NFcHVYS21K3l7cgOZXxf6u6pzFj980X8wPA46G
uP/cXIUdN7LNnlbpwKob6fvM4BQ3bBTciB1d2Xfm2rViTMyGXkf7XWN8WjDo
i8tOgM6tvC/4OsKeXxoEN37bGoD/noC/LkavcMYZum4a4Nu3vkcXW8YwqRby
Re+fuLNJ45KOX9wd7AyDMjniE/zDgSlxX593PqIHzKSu+xwXbQOX4vWdr083
QkeQ+db+Hx9RVOu95VpyIajg058s0z9U8Gi5v/pcozdqlfXaaxRljbDtk5pr
aXWr7QMLptsvdWC/yDm9bD8tWDW0dVcPbXyP7OXLOLhuQL74APs1wwMwLBe6
bOG+jR/onJw9Szg5BbKkFbX4GiRx9HO985FxnCWZZXGeEY/y90c+rMF0siyO
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
IlzSdoh5NzqJZIoMCrajzaFNi/5/n9Z4kRXLCH71aGqIyKVUfHXS4OJ8bMt6
1KjVg5ikaejYum/d2DW53kVdRYhxbkdNHBa3Z7kpz1cL/AtRL19+K5HzOycO
Z8u0luMhfcVriHi3j/my2Mqhq7R8rq3xecHTf/KWN2++6jKpGmIrGLgu7Vf8
X/9BtvynZkoVCQp6lx/gi2sHcrHJ2f7sTpA9uoPhzrouiHmubH3EtROka3/K
bPvVBCd1VSXuMD6BM3Wqm7W1TOBJ8eXjC/XdJoMhj1pbLUjetPGjzDlFiJrR
eb7QZ7hM1Msjt/9dL3+ptfHNfMaDYn1jB2p6OZDS9fuL9fIJ88g7VltI+JFU
n4q46wXYjhR6Pmz+KeB30Zde7AvX8bSo1k4sac/wol5IPnmlTy0Yy2ZnMDxi
EoDfIuplQ/2V7V7y33HptpPV7pqh+HNi3zQkAlm/f3+ITc1DcfRHY6yF2Ae+
X6xBcxaLfQbe817/6zN8o67zfp9LAZunKyyFrnSAoQ7TZe2YNvi89pjKC089
ODNeYrv9vjE8lTTsX/heuOTGmeWf9j2CPd9S04SuyYL8/ZSVC32DT0SdG7Ok
zp0qEjRjatmO/Ha9WSvhuA5R6qMXecjx5bNe1ywr8BT/rVPtfrUYVxk9/7+Y
KXiwv5KChfVl25O+tWAFO+hxs1KgRK4t2QELnra+MWj7GZ8kOJBf7QIOhc5E
4M+obV+fn/qE3yb6BmoFJo1nkh/T6lxutRF540Vq6mLd1xjRMvZSA9vBsCs3
pOt/fYOYbTYxMX1dYHnK6RbjhQ7ID3nkmy/XDBTewGMyK0PQVLTfS5Z2b6QX
vqIuaJJmtym7wshO+nBxnvP6uYdPoe+Vsc4CZz7G9lVmcIkSgFHCCY7PV+FT
qMu1hT7Aa6I+jVtSn57nD5nRzt2Mtrpn4cVBKxAbHF2MsxHJtx35Zr/ivRUf
AnMVmjB2Vnoc2fyT0TfZoBNTddZperS1Dnv+gd4HkN6lsemNgCneO4Xecb75
gncTdnJB2FP/r1Eobk9lz7j2wAd/TtQFHhTXXwdndGh2ssfIrObpP/2o4i+P
oi/iqtgWBuE/Q8r/6wOwx651mo3qhvhhjXDyWDvsDR8P5XdqBK/wFNvTwoFI
eafJxewYd3RUV91Ygla/BwmPjvHL6kObpOeXgzsNgNfRnXnBz3jrMG48vf4u
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
1Uhj1sN4zraWzcfyOvaTXI79JJ2wn+T/AR2MErA=
    "]],
  Axes->True,
  AxesLabel->{None, None, None},
  BoxRatios->{1, 1, 0.4},
  DisplayFunction->Identity,
  FaceGridsStyle->Automatic,
  Method->{"DefaultBoundaryStyle" -> Directive[
      GrayLevel[0.3]], "RotationControl" -> "Globe"},
  PlotRange->{All, All, All},
  PlotRangePadding->{Automatic, Automatic, Automatic},
  Ticks->{Automatic, Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.6497181176401267`*^9, 3.6497181234852695`*^9}, 
   3.6497220521949806`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["One clearly sees the lowest QNM:", "Subsection",
 CellChangeTimes->{{3.6497245371994023`*^9, 3.6497245463078613`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"LogPlot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"bi3d", "[", 
     RowBox[{"t", ",", "0"}], "]"}], "//", "Abs"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "8"}], "}"}], ",", 
   RowBox[{"BaseStyle", "\[Rule]", "20"}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "600"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<t\>\"", ",", "\"\<\[CapitalDelta]P\>\""}], "}"}]}]}], 
  "]"}]], "Input"],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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
X2YqTpZNx/8Blw1/tg==
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"t\"", TraditionalForm], 
    FormBox["\"\[CapitalDelta]P\"", TraditionalForm]},
  AxesOrigin->{0, -23.504325345070892`},
  BaseStyle->20,
  CoordinatesToolOptions:>{"DisplayFunction" -> ({
      Part[#, 1], 
      Exp[
       Part[#, 2]]}& ), "CopiedValueFunction" -> ({
      Part[#, 1], 
      Exp[
       Part[#, 2]]}& )},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{
     Charting`ScaledTicks[{Log, Exp}], 
     Charting`ScaledFrameTicks[{Log, Exp}]}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->600,
  Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
  PlotRange->{{0, 8}, {-23.504325345070892`, 2.6381452861061985`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->FrontEndValueCache[{Automatic, 
     Charting`ScaledTicks[{Log, Exp}]}, {Automatic, {{-23.025850929940457`, 
       FormBox[
        TemplateBox[{"10", 
          RowBox[{"-", "10"}]}, "Superscript", SyntaxForm -> SuperscriptBox], 
        TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {-18.420680743952367`, 
       FormBox[
        TemplateBox[{"10", 
          RowBox[{"-", "8"}]}, "Superscript", SyntaxForm -> SuperscriptBox], 
        TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {-13.815510557964274`, 
       FormBox[
        TemplateBox[{"10", 
          RowBox[{"-", "6"}]}, "Superscript", SyntaxForm -> SuperscriptBox], 
        TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {-9.210340371976182, 
       FormBox[
        TemplateBox[{"10", 
          RowBox[{"-", "4"}]}, "Superscript", SyntaxForm -> SuperscriptBox], 
        TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {-4.605170185988091, 
       FormBox["0.01`", TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {0., 
       FormBox["1", TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {-20.72326583694641, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-16.11809565095832, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-11.512925464970229`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-6.907755278982137, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-2.3025850929940455`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {2.302585092994046, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {4.605170185988092, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {5.0106352940962555`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {5.298317366548036, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}}}]]], "Output",
 CellChangeTimes->{3.6497220556404243`*^9}]
}, Open  ]],

Cell["My other favourite NDSolve methods :", "Text",
 CellChangeTimes->{{3.6497211207277374`*^9, 3.6497211315623913`*^9}}],

Cell[BoxData[
 RowBox[{"NDSolve", "[", 
  RowBox[{
   RowBox[{"...", "."}], ",", 
   RowBox[{"StartingStepSize", "\[Rule]", 
    SuperscriptBox["10", 
     RowBox[{"-", "2"}]]}], ",", 
   RowBox[{"Method", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<FixedStep\>\"", ",", 
      RowBox[{"Method", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\"\<ExplicitRungeKutta\>\"", ",", 
         RowBox[{"\"\<DifferenceOrder\>\"", "\[Rule]", "8"}], ",", 
         RowBox[{"\"\<StiffnessTest\>\"", "\[Rule]", "False"}]}], "}"}]}]}], 
     "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.649721141507444*^9, 3.6497211961483927`*^9}}],

Cell["For a time dependent problem:", "Text",
 CellChangeTimes->{{3.649721184786653*^9, 3.6497211997249284`*^9}}],

Cell[BoxData[
 RowBox[{"NDSolve", "[", 
  RowBox[{
   RowBox[{"...", "."}], ",", 
   RowBox[{"StartingStepSize", "\[Rule]", 
    SuperscriptBox["10", 
     RowBox[{"-", "2"}]]}], ",", 
   RowBox[{"Method", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<MethodOfLines\>\"", ",", 
      RowBox[{"\"\<SpatialDiscretization\>\"", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\"\<TensorProductGrid\>\"", ",", 
         RowBox[{"\"\<MinPoints\>\"", "\[Rule]", "50"}], ",", 
         RowBox[{"\"\<MaxPoints\>\"", "\[Rule]", "50"}], ",", 
         RowBox[{"\"\<DifferenceOrder\>\"", "\[Rule]", "4"}]}], "}"}]}]}], 
     "}"}]}]}], "]"}]], "Input"]
}, Open  ]],

Cell[CellGroupData[{

Cell["One could compute entanglement entropy (1506.02658)", "Subsection",
 CellChangeTimes->{{3.649716892277464*^9, 3.6497168960521336`*^9}, {
  3.649724550790044*^9, 3.649724577782173*^9}}],

Cell[BoxData[
 RowBox[{"u", "=."}]], "Input",
 CellChangeTimes->{{3.6497169226860275`*^9, 3.6497169246063814`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Sigma]", "=", 
   RowBox[{"{", 
    RowBox[{"\[Lambda]", ",", "\[Lambda]2", ",", "\[Lambda]3"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Xmu", "[", 
    RowBox[{"\[Lambda]_", ",", "\[Lambda]2_", ",", "\[Lambda]3_"}], "]"}], ":=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"u", "[", "\[Lambda]", "]"}], ",", 
     RowBox[{"t", "[", "\[Lambda]", "]"}], ",", 
     RowBox[{"x1", "[", "\[Lambda]", "]"}], ",", "\[Lambda]2", ",", 
     "\[Lambda]3"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"area", "=", 
  RowBox[{"Integrate", "[", 
   RowBox[{
    RowBox[{"Det", "[", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"D", "[", 
         RowBox[{
          RowBox[{"Xmu", "@@", "\[Sigma]"}], ",", 
          RowBox[{
          "\[Sigma]", "\[LeftDoubleBracket]", "i", 
           "\[RightDoubleBracket]"}]}], "]"}], ".", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"metric", "/.", 
           RowBox[{"u", "\[Rule]", 
            RowBox[{"u", "[", "\[Lambda]", "]"}]}]}], "/.", 
          RowBox[{"t", "\[Rule]", 
           RowBox[{"t", "[", "\[Lambda]", "]"}]}]}], ")"}], ".", 
        RowBox[{"D", "[", 
         RowBox[{
          RowBox[{"Xmu", "@@", "\[Sigma]"}], ",", 
          RowBox[{
          "\[Sigma]", "\[LeftDoubleBracket]", "j", 
           "\[RightDoubleBracket]"}]}], "]"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "3"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"j", ",", "3"}], "}"}]}], "]"}], "]"}], ",", "\[Lambda]"}], 
   "]"}]}]}], "Input",
 CellChangeTimes->{{3.6497168969727864`*^9, 3.649716959535138*^9}, {
  3.64971698954041*^9, 3.649717081252425*^9}, {3.6497172661524997`*^9, 
  3.6497172738889713`*^9}, {3.649717375324898*^9, 3.6497173778857064`*^9}, {
  3.6497174366513557`*^9, 3.64971744626017*^9}, {3.6497179034893103`*^9, 
  3.649717912352592*^9}}],

Cell[BoxData[
 RowBox[{"\[Integral]", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"-", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"2", " ", 
         RowBox[{"B", "[", 
          RowBox[{
           RowBox[{"t", "[", "\[Lambda]", "]"}], ",", 
           RowBox[{"u", "[", "\[Lambda]", "]"}]}], "]"}]}]]}], " ", 
      RowBox[{"A", "[", 
       RowBox[{
        RowBox[{"t", "[", "\[Lambda]", "]"}], ",", 
        RowBox[{"u", "[", "\[Lambda]", "]"}]}], "]"}], " ", 
      SuperscriptBox[
       RowBox[{"S", "[", 
        RowBox[{
         RowBox[{"t", "[", "\[Lambda]", "]"}], ",", 
         RowBox[{"u", "[", "\[Lambda]", "]"}]}], "]"}], "4"], " ", 
      SuperscriptBox[
       RowBox[{
        SuperscriptBox["t", "\[Prime]",
         MultilineFunction->None], "[", "\[Lambda]", "]"}], "2"]}], "-", 
     FractionBox[
      RowBox[{"2", " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"2", " ", 
         RowBox[{"B", "[", 
          RowBox[{
           RowBox[{"t", "[", "\[Lambda]", "]"}], ",", 
           RowBox[{"u", "[", "\[Lambda]", "]"}]}], "]"}]}]], " ", 
       SuperscriptBox[
        RowBox[{"S", "[", 
         RowBox[{
          RowBox[{"t", "[", "\[Lambda]", "]"}], ",", 
          RowBox[{"u", "[", "\[Lambda]", "]"}]}], "]"}], "4"], " ", 
       RowBox[{
        SuperscriptBox["t", "\[Prime]",
         MultilineFunction->None], "[", "\[Lambda]", "]"}], " ", 
       RowBox[{
        SuperscriptBox["u", "\[Prime]",
         MultilineFunction->None], "[", "\[Lambda]", "]"}]}], 
      SuperscriptBox[
       RowBox[{"u", "[", "\[Lambda]", "]"}], "2"]], "+", 
     RowBox[{
      SuperscriptBox[
       RowBox[{"S", "[", 
        RowBox[{
         RowBox[{"t", "[", "\[Lambda]", "]"}], ",", 
         RowBox[{"u", "[", "\[Lambda]", "]"}]}], "]"}], "6"], " ", 
      SuperscriptBox[
       RowBox[{
        SuperscriptBox["x1", "\[Prime]",
         MultilineFunction->None], "[", "\[Lambda]", "]"}], "2"]}]}], ")"}], 
   RowBox[{"\[DifferentialD]", "\[Lambda]"}]}]}]], "Output",
 CellChangeTimes->{3.64971744733293*^9, 3.649717913219207*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"eq", "=", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"D", "[", 
      RowBox[{
       RowBox[{"D", "[", 
        RowBox[{"area", ",", 
         RowBox[{"D", "[", 
          RowBox[{
           RowBox[{"#", "[", "\[Lambda]", "]"}], ",", "\[Lambda]"}], "]"}]}], 
        "]"}], ",", "\[Lambda]"}], "]"}], "-", 
     RowBox[{"D", "[", 
      RowBox[{"area", ",", 
       RowBox[{"#", "[", "\[Lambda]", "]"}]}], "]"}]}], "&"}], "/@", 
   RowBox[{"{", 
    RowBox[{"t", ",", "u", ",", "x1"}], "}"}]}]}]], "Input",
 CellChangeTimes->{{3.649724208104455*^9, 3.6497242189331026`*^9}}]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
AutoGeneratedPackage->None,
Evaluator->"New Kernel",
WindowSize->{1902, 937},
WindowMargins->{{Automatic, -13}, {898, Automatic}},
FrontEndVersion->"10.2 for Mac OS X x86 (32-bit, 64-bit Kernel) (July 6, \
2015)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "SlideShowHeader"->{
  Cell[580, 22, 64, 1, 74, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[2682, 85, 64, 1, 74, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[152024, 2675, 64, 1, 74, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[154692, 2757, 64, 1, 74, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[165207, 3055, 64, 1, 74, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"SlideShowHeader", 432288, 8363}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 64, 1, 74, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[669, 27, 150, 2, 64, "Section"],
Cell[822, 31, 254, 5, 44, "Subsection"],
Cell[1079, 38, 357, 8, 111, "Subsection"],
Cell[CellGroupData[{
Cell[1461, 50, 208, 4, 36, "Subsection"],
Cell[1672, 56, 141, 2, 30, "Text"],
Cell[1816, 60, 622, 11, 46, "Input"],
Cell[2441, 73, 91, 2, 28, "Input"],
Cell[2535, 77, 86, 1, 28, "Input"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[2682, 85, 64, 1, 74, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[2771, 90, 93, 1, 64, "Section"],
Cell[2867, 93, 6772, 128, 131, "Input"],
Cell[9642, 223, 3328, 65, 97, "Input"],
Cell[12973, 290, 12929, 282, 420, "Input"],
Cell[25905, 574, 286, 4, 30, "Text"],
Cell[26194, 580, 662, 17, 46, "Input"],
Cell[26859, 599, 1371, 35, 30, "Input"],
Cell[28233, 636, 123742, 2033, 411, "Input"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[152024, 2675, 64, 1, 74, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[152113, 2680, 91, 1, 64, "Section"],
Cell[152207, 2683, 1848, 49, 199, "Input"],
Cell[154058, 2734, 481, 14, 28, "Input"],
Cell[154542, 2750, 101, 1, 28, "Input"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[154692, 2757, 64, 1, 74, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[154781, 2762, 118, 1, 64, "Section"],
Cell[154902, 2765, 101, 1, 30, "Text"],
Cell[155006, 2768, 1099, 28, 46, "Input"],
Cell[156108, 2798, 1304, 34, 46, "Input"],
Cell[157415, 2834, 463, 12, 35, "Input"],
Cell[157881, 2848, 1659, 37, 164, "Input"],
Cell[159543, 2887, 1090, 32, 46, "Input"],
Cell[160636, 2921, 179, 4, 28, "Input"],
Cell[160818, 2927, 1254, 38, 63, "Input"],
Cell[162075, 2967, 268, 6, 28, "Input"],
Cell[162346, 2975, 333, 8, 28, "Input"],
Cell[162682, 2985, 468, 8, 28, "Input"],
Cell[163153, 2995, 235, 5, 46, "Input"],
Cell[163391, 3002, 1194, 30, 35, "Input"],
Cell[164588, 3034, 380, 9, 28, "Input"],
Cell[164971, 3045, 116, 1, 30, "Text"],
Cell[165090, 3048, 68, 1, 28, "Input"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[165207, 3055, 64, 1, 74, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[165296, 3060, 135, 1, 64, "Section"],
Cell[165434, 3063, 3151, 66, 130, "Input"],
Cell[CellGroupData[{
Cell[168610, 3133, 376, 9, 46, "Input"],
Cell[168989, 3144, 522, 11, 24, "Message"]
}, Open  ]],
Cell[CellGroupData[{
Cell[169548, 3160, 121, 1, 44, "Subsection"],
Cell[CellGroupData[{
Cell[169694, 3165, 482, 11, 28, "Input"],
Cell[170179, 3178, 17722, 555, 202, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[187950, 3739, 188, 4, 44, "Subsection"],
Cell[188141, 3745, 198, 5, 28, "Input"],
Cell[CellGroupData[{
Cell[188364, 3754, 1073, 30, 46, "Input"],
Cell[189440, 3786, 2181, 58, 46, "Output"],
Cell[191624, 3846, 943, 25, 32, "Output"]
}, Open  ]],
Cell[192582, 3874, 687, 21, 35, "Input"],
Cell[CellGroupData[{
Cell[193294, 3899, 809, 20, 28, "Input"],
Cell[194106, 3921, 3970, 118, 51, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[198125, 4045, 365, 10, 49, "Subsection"],
Cell[CellGroupData[{
Cell[198515, 4059, 1155, 35, 48, "Input"],
Cell[199673, 4096, 1137, 36, 47, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[200847, 4137, 847, 22, 49, "Input"],
Cell[201697, 4161, 1661, 54, 35, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[203407, 4221, 674, 23, 46, "Subsection"],
Cell[CellGroupData[{
Cell[204106, 4248, 1370, 40, 77, "Input"],
Cell[205479, 4290, 477, 7, 28, "Output"],
Cell[205959, 4299, 455, 6, 28, "Output"],
Cell[206417, 4307, 1302, 38, 35, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[207756, 4350, 1012, 30, 35, "Input"],
Cell[208771, 4382, 802, 22, 35, "Output"]
}, Open  ]],
Cell[209588, 4407, 1535, 37, 183, "Input"],
Cell[CellGroupData[{
Cell[211148, 4448, 258, 6, 28, "Input"],
Cell[211409, 4456, 1417, 25, 46, "Output"]
}, Open  ]],
Cell[212841, 4484, 783, 17, 28, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[213661, 4506, 206, 4, 44, "Subsection"],
Cell[CellGroupData[{
Cell[213892, 4514, 960, 26, 46, "Input"],
Cell[214855, 4542, 392, 6, 28, "Output"],
Cell[215250, 4550, 9235, 187, 64, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[224522, 4742, 305, 6, 28, "Input"],
Cell[224830, 4750, 8996, 141, 233, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[233863, 4896, 1003, 27, 28, "Input"],
Cell[234869, 4925, 9434, 194, 64, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[244340, 5124, 414, 11, 28, "Input"],
Cell[244757, 5137, 143321, 2343, 302, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[388127, 7486, 124, 1, 44, "Subsection"],
Cell[CellGroupData[{
Cell[388276, 7491, 460, 13, 28, "Input"],
Cell[388739, 7506, 36563, 649, 394, "Output"]
}, Open  ]],
Cell[425317, 8158, 122, 1, 30, "Text"],
Cell[425442, 8161, 631, 16, 35, "Input"],
Cell[426076, 8179, 113, 1, 30, "Text"],
Cell[426192, 8182, 645, 16, 35, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[426874, 8203, 190, 2, 44, "Subsection"],
Cell[427067, 8207, 115, 2, 28, "Input"],
Cell[CellGroupData[{
Cell[427207, 8213, 1931, 51, 63, "Input"],
Cell[429141, 8266, 2119, 58, 54, "Output"]
}, Open  ]],
Cell[431275, 8327, 607, 18, 28, "Input"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
