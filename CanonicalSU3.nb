(* Content-type: application/mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 6.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       145,          7]
NotebookDataLength[    539308,      17722]
NotebookOptionsPosition[    523016,      17225]
NotebookOutlinePosition[    523506,      17246]
CellTagsIndexPosition[    523463,      17243]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[TextData[{
 "Canonical Representation ",
 Cell[BoxData[
  FormBox[
   RowBox[{"SU", "[", "3", "]"}], TraditionalForm]]]
}], "Title"],

Cell["\<\
Renan Cabrera
University of Windsor
Windsor Ontario Canada
cabrer7@uwindsor.ca\
\>", "Text"],

Cell[TextData[{
 "This notebook illustrates the canonical representation of the generators of \
the Lie algebra ",
 Cell[BoxData[
  FormBox[
   RowBox[{"su", "[", "3", "]"}], TraditionalForm]]],
 " "
}], "Text"],

Cell[CellGroupData[{

Cell["Initialization (Automatic)", "Section",
 FontColor->GrayLevel[0.6]],

Cell["We load the packages.", "Text"],

Cell[BoxData[
 RowBox[{"Needs", "[", "\"\<TensorCalculus4V6`Tensorial`\>\"", "]"}]], "Input",\

 InitializationCell->True,
 CellChangeTimes->{{3.422457473222733*^9, 3.422457473731838*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Needs", "[", "\"\<DrawGraphics`DrawingMaster`\>\"", "]"}]], "Input",\

 InitializationCell->True],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{"Get", "::", "\<\"noopen\"\>"}], ":", 
   " ", "\<\"Cannot open \
\\!\\(TraditionalForm\\`\\\"DrawGraphics`DrawingMaster`\\\"\\). \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/noopen\\\", \
ButtonNote -> \\\"Get::noopen\\\"]\\)\"\>"}], TraditionalForm]], "Message", \
"MSG",
 CellChangeTimes->{3.422457818359169*^9, 3.436563970509823*^9}],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{"Needs", "::", "\<\"nocont\"\>"}], ":", 
   " ", "\<\"Context \
\\!\\(TraditionalForm\\`\\\"DrawGraphics`DrawingMaster`\\\"\\) was not \
created when Needs was evaluated. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/Needs/nocont\\\", \
ButtonNote -> \\\"Needs::nocont\\\"]\\)\"\>"}], TraditionalForm]], "Message", \
"MSG",
 CellChangeTimes->{3.422457818359169*^9, 3.43656397073559*^9}],

Cell[BoxData[
 FormBox["$Failed", TraditionalForm]], "Output",
 CellChangeTimes->{3.42245781854503*^9, 3.436563970768222*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"<<", "\"\<Combinatorica`\>\""}]], "Input",
 InitializationCell->True],

Cell["We define index sets for spaces of various dimensions.", "Text"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Indices2D", "=", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Indices3D", "=", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Indices6D", "=", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"GluonIndices", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
    "1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6", ",", "7", ",", 
     "8"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"CartanIndices", "=", 
   RowBox[{"{", 
    RowBox[{"7", ",", "8"}], "}"}]}], ";"}]}], "Input",
 InitializationCell->True],

Cell[BoxData[
 RowBox[{"DeclareIndexFlavor", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"red", ",", "Red"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"blue", ",", "Blue"}], "}"}]}], "]"}]], "Input",
 InitializationCell->True],

Cell["\<\
Gluon indices will be shown in red, 6-dimensional indices in blue, and all \
other flavors will be 3-dimensional.\
\>", "Text"],

Cell[BoxData[
 RowBox[{"DeclareBaseIndices", "[", 
  RowBox[{"Indices3D", ",", 
   RowBox[{"{", 
    RowBox[{"red", ",", "GluonIndices"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"blue", ",", "Indices2D"}], "}"}]}], "]"}]], "Input",
 InitializationCell->True],

Cell[BoxData[
 RowBox[{"DefineTensorShortcuts", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "a", ",", "G", ",", "J", ",", "L", ",", "R", ",", "A\[DoubleStruckD]", 
       ",", "A\[DoubleStruckD]t", ",", "T", ",", "\[Sigma]", " ", ",", 
       "\[Lambda]", ",", "F", ",", "zero", ",", "\[Alpha]", ",", "h", ",", 
       "k", ",", "F\[DoubleStruckD]", ",", "F\[DoubleStruckD]t"}], "}"}], ",",
      "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "\[Delta]", " ", ",", "\[Sigma]", ",", "zero", ",", "A", ",", "B", ",", 
       "Bi", ",", "b", ",", "T", ",", "C"}], "}"}], ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"G", ",", "c", ",", "cc", ",", "X"}], "}"}], ",", "3"}], 
    "}"}]}], "]"}]], "Input",
 InitializationCell->True],

Cell[BoxData[{
 RowBox[{"DeclareZeroTensor", "[", "zero", "]"}], "\[IndentingNewLine]", 
 RowBox[{"TensorLabelFormat", "[", 
  RowBox[{"zero", ",", "0"}], "]"}]}], "Input",
 InitializationCell->True],

Cell[TextData[{
 "Set index parsing rules for ",
 Cell[BoxData["MCommutator"]],
 " and ",
 Cell[BoxData["MatrixExp"]],
 "."
}], "Text"],

Cell[BoxData[
 RowBox[{
  RowBox[{"IndexParsingRules", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"MatrixExp", "[", "a_", "]"}], "\[Rule]", "a"}], ",", 
     RowBox[{
      RowBox[{"HoldForm", "[", 
       RowBox[{"MCommutator", "[", 
        RowBox[{"a_", ",", "b_"}], "]"}], "]"}], "\[Rule]", 
      RowBox[{"a", " ", "b"}]}]}], "}"}]}], ";"}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"IndexParsingRules", "=", 
   RowBox[{"{", "}"}]}], ";"}]], "Input"],

Cell[BoxData[
 RowBox[{"TensorLabelFormat", "[", 
  RowBox[{"Bi", ",", " ", 
   RowBox[{"Superscript", "[", 
    RowBox[{"B", ",", "\"\<-1\>\""}], "]"}]}], " ", "]"}]], "Input",
 InitializationCell->True],

Cell[BoxData[{
 RowBox[{"TensorLabelFormat", "[", 
  RowBox[{"A\[DoubleStruckD]t", ",", " ", 
   RowBox[{"Superscript", "[", " ", 
    RowBox[{"A\[DoubleStruckD]", " ", ",", 
     RowBox[{"red", "@", "T"}]}], "]"}]}], " ", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"TensorLabelFormat", "[", 
  RowBox[{"F\[DoubleStruckD]t", ",", " ", 
   RowBox[{"Superscript", "[", " ", 
    RowBox[{"F\[DoubleStruckD]", " ", ",", 
     RowBox[{"red", "@", "T"}]}], "]"}]}], " ", "]"}]}], "Input",
 InitializationCell->True],

Cell[BoxData[
 RowBox[{"TensorLabelFormat", "[", 
  RowBox[{"cc", ",", 
   RowBox[{"OverBar", "[", "c", "]"}]}], " ", "]"}]], "Input",
 InitializationCell->True],

Cell["\<\
We set tensor values for the Kronecker for efficient evaluation.\
\>", "Text"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"SetTensorValues", "[", 
  RowBox[{
   RowBox[{"\[Delta]ud", "[", 
    RowBox[{"i", ",", "j"}], "]"}], ",", 
   RowBox[{"DiagonalMatrix", "[", 
    RowBox[{"{", 
     RowBox[{"1", ",", "1", ",", "1"}], "}"}], "]"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"\[Delta]ud", "[", 
  RowBox[{"i", ",", "j"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"%", "//", 
   RowBox[{"EinsteinArray", "[", "]"}]}], "//", "MatrixForm"}]}], "Input",
 InitializationCell->True],

Cell[BoxData[
 FormBox[
  InterpretationBox[
   SubsuperscriptBox["\[Delta]", 
    RowBox[{
     StyleBox["i",
      StripOnInput->False,
      ShowContents->False], "j"}], 
    RowBox[{"i", 
     StyleBox["j",
      StripOnInput->False,
      ShowContents->False]}]],
   TensorCalculus4V6`Tensorial`Tensor[$CellContext`\[Delta], {$CellContext`i, 
     TensorCalculus4V6`Tensorial`Void}, {
    TensorCalculus4V6`Tensorial`Void, $CellContext`j}],
   BaseStyle->{AutoMultiplicationSymbol -> False},
   Editable->False], TraditionalForm]], "Output",
 CellChangeTimes->{3.422457821147586*^9, 3.436563973238564*^9}],

Cell[BoxData[
 FormBox[
  TagBox[
   RowBox[{"(", "\[NoBreak]", GridBox[{
      {"1", "0", "0"},
      {"0", "1", "0"},
      {"0", "0", "1"}
     },
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.7]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
   Function[BoxForm`e$, 
    MatrixForm[BoxForm`e$]]], TraditionalForm]], "Output",
 CellChangeTimes->{3.422457821147586*^9, 3.436563973294833*^9}]
}, Open  ]],

Cell["Definition of canonical matrices used in Lie group theory.", "Text"],

Cell["Pauli matrices", "Text"],

Cell[BoxData[
 RowBox[{
  RowBox[{"paulimatrices", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "0"}], "}"}]}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", 
         RowBox[{"-", "I"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"I", ",", "0"}], "}"}]}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", 
         RowBox[{"-", "1"}]}], "}"}]}], "}"}]}], " ", "}"}]}], ";"}]], "Input",\

 InitializationCell->True],

Cell["Gell-Mann matrices", "Text"],

Cell[BoxData[
 RowBox[{
  RowBox[{"gellmannmatrices", "=", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "1", ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", 
         RowBox[{"-", "I"}], ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"I", ",", "0", ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "0", ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "0", ",", "0"}], "}"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "0", ",", 
         RowBox[{"-", "I"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"I", ",", "0", ",", "0"}], "}"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0", ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "1", ",", "0"}], "}"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0", ",", 
         RowBox[{"-", "I"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "I", ",", "0"}], "}"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", 
         RowBox[{"-", "1"}], ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "1", ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0", ",", 
          RowBox[{"-", "2"}]}], "}"}]}], "}"}], 
      RowBox[{"2", "/", "3"}]}]}], "\[IndentingNewLine]", "}"}]}], 
  ";"}]], "Input",
 InitializationCell->True]
}, Open  ]],

Cell[CellGroupData[{

Cell["Local Routines (Automatically Initialized) ", "Section",
 InitializationCell->True,
 FontColor->GrayLevel[0.6]],

Cell["Matrix tensor product", "Text",
 InitializationCell->True],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"CircleTimes", "::", "usage"}], " ", "=", " ", 
    "\"\<CircleTimes[A,B], calculates the matrix tensor product of A and \
B\>\""}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"CircleTimes", "[", 
    RowBox[{"u_List", ",", "v_List"}], "]"}], ":=", 
   RowBox[{"Partition", "[", 
    RowBox[{
     RowBox[{"Flatten", "@", 
      RowBox[{"MapThread", "[", 
       RowBox[{"List", ",", 
        RowBox[{"Transpose", "@", 
         RowBox[{"Map", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"u", "*", "#"}], "&"}], ",", "v", ",", 
           RowBox[{"{", "2", "}"}]}], "]"}]}], ",", "2"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"Length", "[", "u", "]"}], "*", 
      RowBox[{"Length", "[", "v", "]"}]}]}], "]"}]}], ";"}]}], "Input",
 InitializationCell->True],

Cell["New version of MCommutator", "Text",
 InitializationCell->True],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"MCommutator", "::", "usage"}], " ", "=", " ", 
   "\"\<MCommutator[A,B] calculates the commutator of matrices A and B\>\""}],
   ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"MCommutator", "[", 
    RowBox[{
     RowBox[{"A_", "?", "MatrixQ"}], ",", 
     RowBox[{"B_", "?", "MatrixQ"}]}], "]"}], ":=", 
   RowBox[{
    RowBox[{"A", ".", "B"}], "-", 
    RowBox[{"B", ".", "A"}]}]}], ";"}]}], "Input",
 InitializationCell->True],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"LinearlyIndependentQ", "::", "usage"}], "=", 
    "\"\<LinearlyDependentQ[u_List] establishes the status of linear \
dependence of vectors u in a space of dimesion n. Every number involved must \
be in exact representation (No float decimal point).\>\""}], ";"}], 
  "\n"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"LinearlyIndependentQ", "[", "u_List", "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"n", ",", "m", ",", "sub"}], "}"}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{"n", ",", "m"}], "}"}], "=", 
        RowBox[{"Dimensions", "[", "u", "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"sub", "=", 
        RowBox[{"KSubsets", "[", 
         RowBox[{
          RowBox[{"Range", "[", "m", "]"}], ",", "n"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Do", "[", 
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"Abs", "[", 
              RowBox[{"Det", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"Part", "[", 
                  RowBox[{"u", ",", "All", ",", "#"}], "]"}], "&"}], "/@", 
                RowBox[{"sub", "[", 
                 RowBox[{"[", "i", "]"}], "]"}]}], "]"}], "]"}], "=!=", "0"}],
             ")"}], ",", 
           RowBox[{"Throw", "[", "True", "]"}], ","}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", 
           RowBox[{"Length", "[", "sub", "]"}]}], "}"}]}], "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Throw", "[", "False", "]"}]}]}], "]"}]}], ";"}], 
  "\n"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"AppendNewIndependentCommutator", "[", 
     RowBox[{"u_List", ",", "w_"}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", "}"}], ",", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"Catch", "@", 
         RowBox[{"LinearlyIndependentQ", "[", 
          RowBox[{"Append", "[", 
           RowBox[{
            RowBox[{"Flatten", "/@", "u"}], ",", 
            RowBox[{"Flatten", "@", "w"}]}], "]"}], "]"}]}], ",", 
        RowBox[{"Append", "[", 
         RowBox[{"u", ",", "w"}], "]"}], ",", "u"}], "]"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"NewIndependentCommutators", "::", "usage"}], " ", "=", " ", 
    "\"\<NewIndependentCommutators[w_List], From the list of matrices w, it \
calculates commutators made from all the possible pairs. Many applications \
may be needed to find the complete set of all the possible commutators\>\""}],
    ";"}], "\[IndentingNewLine]"}], "\n", 
 RowBox[{
  RowBox[{"NewIndependentCommutators", "[", "w_List", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"pairs", ",", "NewComm"}], "}"}], ",", 
    RowBox[{
     RowBox[{"pairs", "=", 
      RowBox[{"KSubsets", "[", 
       RowBox[{
        RowBox[{"Range", "[", 
         RowBox[{"Length", "@", "w"}], "]"}], ",", "2"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"NewComm", "=", 
      RowBox[{"pairs", "/.", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"i_", ",", "j_"}], "}"}], "\[RuleDelayed]", 
        RowBox[{"MCommutator", "[", 
         RowBox[{
          RowBox[{"w", "[", 
           RowBox[{"[", "i", "]"}], "]"}], ",", 
          RowBox[{"w", "[", 
           RowBox[{"[", "j", "]"}], "]"}]}], "]"}]}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Fold", "[", 
      RowBox[{"AppendNewIndependentCommutator", ",", "w", ",", "NewComm"}], 
      "]"}]}]}], "]"}]}]}], "Input",
 InitializationCell->True],

Cell[TextData[{
 "Adding a ",
 Cell[BoxData["MakeBoxes"]],
 " definition for ",
 Cell[BoxData["MatrixExp"]],
 "."
}], "Text",
 InitializationCell->True],

Cell[BoxData[
 RowBox[{
  RowBox[{"MakeBoxes", "[", 
   RowBox[{
    RowBox[{"MatrixExp", "[", "x_", "]"}], ",", 
    RowBox[{"form", ":", 
     RowBox[{"StandardForm", "|", "TraditionalForm"}]}]}], "]"}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{"InterpretationBox", "[", 
     RowBox[{"#1", ",", "#2", ",", 
      RowBox[{"SyntaxForm", "\[Rule]", "\"\<Exp\>\""}]}], "]"}], "&"}], " ", "@@",
    "\n", "    ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"SuperscriptBox", "[", 
      RowBox[{"\"\<\[ExponentialE]\>\"", ",", 
       RowBox[{"MakeBoxes", "[", 
        RowBox[{"x", ",", "form"}], "]"}]}], "]"}], ",", " ", 
     RowBox[{"MatrixExp", "[", "x", "]"}]}], "}"}]}]}]], "Input",
 InitializationCell->True],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatrixExp", "[", 
  RowBox[{
   RowBox[{"-", "\[Theta]"}], " ", 
   RowBox[{"Gd", "[", "i", "]"}]}], "]"}]], "Input",
 InitializationCell->True],

Cell[BoxData[
 FormBox[
  InterpretationBox[
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{
     RowBox[{"-", "\[Theta]"}], " ", 
     InterpretationBox[
      SubsuperscriptBox["G", "i", 
       StyleBox["i",
        StripOnInput->False,
        ShowContents->False]],
      TensorCalculus4V6`Tensorial`Tensor[$CellContext`G, {
       TensorCalculus4V6`Tensorial`Void}, {$CellContext`i}],
      BaseStyle->{AutoMultiplicationSymbol -> False},
      Editable->False]}]],
   MatrixExp[(-$CellContext`\[Theta]) 
    TensorCalculus4V6`Tensorial`Tensor[$CellContext`G, {
      TensorCalculus4V6`Tensorial`Void}, {$CellContext`i}]],
   SyntaxForm->"Exp"], TraditionalForm]], "Output",
 CellChangeTimes->{3.422457821315556*^9, 3.436563973476255*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  TagBox[
   FormBox[
    RowBox[{"Commutator", "[", 
     RowBox[{"A_", ",", "B_"}], "]"}],
    StandardForm],
   Format], "=", 
  RowBox[{"Row", "[", 
   RowBox[{"{", 
    RowBox[{
    "\"\<[\>\"", ",", "A", ",", "\"\<,\>\"", ",", "B", ",", "\"\<]\>\""}], 
    "}"}], "]"}]}]], "Input",
 InitializationCell->True],

Cell[BoxData[
 FormBox[
  InterpretationBox[
   RowBox[{"\<\"[\"\>", "\[InvisibleSpace]", "A", 
    "\[InvisibleSpace]", "\<\",\"\>", "\[InvisibleSpace]", "B", 
    "\[InvisibleSpace]", "\<\"]\"\>"}],
   Row[{"[", $CellContext`A, ",", $CellContext`B, "]"}]], 
  TraditionalForm]], "Output",
 CellChangeTimes->{3.422457821366769*^9, 3.436563973576906*^9}]
}, Open  ]],

Cell[TextData[{
 "Adding a ",
 Cell[BoxData["MakeBoxes"]],
 " definition for ",
 Cell[BoxData["MCommutator"]],
 "."
}], "Text",
 InitializationCell->True],

Cell[BoxData[
 RowBox[{
  RowBox[{"MakeBoxes", "[", 
   RowBox[{
    RowBox[{"MCommutator", "[", 
     RowBox[{"a_", ",", "b_"}], "]"}], ",", 
    RowBox[{"form", ":", 
     RowBox[{"StandardForm", "|", "TraditionalForm"}]}]}], "]"}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{"InterpretationBox", "[", 
     RowBox[{"#1", ",", "#2", ",", 
      RowBox[{"SyntaxForm", "\[Rule]", "\"\<Times\>\""}]}], "]"}], "&"}], " ",
    "@@", "\n", "    ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"RowBox", "[", 
      RowBox[{"{", 
       RowBox[{"\"\<[\>\"", ",", 
        RowBox[{"MakeBoxes", "[", 
         RowBox[{"a", ",", "form"}], "]"}], ",", "\"\<,\>\"", ",", 
        RowBox[{"MakeBoxes", "[", 
         RowBox[{"b", ",", "form"}], "]"}], ",", "\"\<]\>\""}], "}"}], "]"}], 
     ",", " ", 
     RowBox[{"MCommutator", "[", 
      RowBox[{"a", ",", "b"}], "]"}]}], "}"}]}]}]], "Input",
 InitializationCell->True],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"MCommutator", "[", 
   RowBox[{"a", ",", "b"}], "]"}], "//", 
  RowBox[{"HoldOp", "[", "MCommutator", "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"%", "//", "ReleaseHold"}]}], "Input",
 InitializationCell->True],

Cell[BoxData[
 FormBox[
  TagBox[
   InterpretationBox[
    RowBox[{"[", "a", ",", "b", "]"}],
    $CellContext`MCommutator[$CellContext`a, $CellContext`b],
    SyntaxForm->"Times"],
   HoldForm], TraditionalForm]], "Output",
 CellChangeTimes->{3.4224578214442596`*^9, 3.436563973661146*^9}],

Cell[BoxData[
 FormBox[
  InterpretationBox[
   RowBox[{"[", "a", ",", "b", "]"}],
   $CellContext`MCommutator[$CellContext`a, $CellContext`b],
   SyntaxForm->"Times"], TraditionalForm]], "Output",
 CellChangeTimes->{3.4224578214442596`*^9, 3.436563973664146*^9}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"AllNonPositiveQ", "=", " ", 
   RowBox[{
    RowBox[{"And", "@@", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"#", "\[LessEqual]", " ", "0"}], "&"}], "/@", 
       RowBox[{"Flatten", "@", "#"}]}], ")"}]}], "&"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"AllNonNegativeQ", "=", " ", 
   RowBox[{
    RowBox[{"And", "@@", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"#", "\[GreaterEqual]", "  ", "0"}], "&"}], "/@", 
       RowBox[{"Flatten", "@", "#"}]}], ")"}]}], "&"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"AllIntegerQ", "=", " ", 
   RowBox[{
    RowBox[{"And", "@@", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"IntegerQ", "[", "#", "]"}], "&"}], "/@", 
       RowBox[{"Flatten", "@", "#"}]}], ")"}]}], "&"}]}], ";"}]}], "Input",
 InitializationCell->True],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"FindSimpleRootVectors", "::", "usage"}], "=", 
    "\"\<Catch@SimpleVectors[ReducedRootVectors] sorts the list of root \
vectors ReducedRootVectors such that the the simple roots are last. \
ReducedRootVectors should not contain two roots one of them negative of the \
other.\>\""}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"FindSimpleRootVectors", "[", "ReducedRootVectors_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"m", ",", "cols", ",", "dim", ",", "roots"}], "}"}], ",", " ", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{"cols", ",", "dim"}], "}"}], "=", 
      RowBox[{"Dimensions", "[", "ReducedRootVectors", "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Map", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"Function", "[", 
          RowBox[{
           RowBox[{"{", "m", "}"}], ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"rightside", " ", "=", " ", 
             RowBox[{"Part", "[", 
              RowBox[{"m", ",", "All", ",", 
               RowBox[{"Range", "[", 
                RowBox[{
                 RowBox[{"cols", "-", "dim", "+", "1"}], ",", "cols"}], 
                "]"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
            RowBox[{"leftside", " ", "=", " ", 
             RowBox[{"Part", "[", 
              RowBox[{"m", ",", "All", ",", 
               RowBox[{"Range", "[", 
                RowBox[{"cols", "-", "dim"}], "]"}]}], "]"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"AllNonPositiveQ", "[", "rightside", "]"}], "&&", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"MatrixRank", "[", "leftside", "]"}], "==", 
                 RowBox[{"cols", "-", "dim"}]}], ")"}], "&&", 
               RowBox[{"(", 
                RowBox[{"AllIntegerQ", "@", "rightside"}], ")"}]}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{"Throw", "[", 
               RowBox[{"Drop", "[", 
                RowBox[{"roots", ",", 
                 RowBox[{"cols", "-", "dim"}]}], "]"}], "]"}], ","}], 
             "]"}]}]}], "    ", "]"}], "@", " ", "\[IndentingNewLine]", 
         RowBox[{"RowReduce", "@", 
          RowBox[{"NullSpace", "[", 
           RowBox[{"Transpose", "@", 
            RowBox[{"(", 
             RowBox[{"roots", "=", 
              RowBox[{"Join", "[", 
               RowBox[{
                RowBox[{"Complement", "[", " ", 
                 RowBox[{"ReducedRootVectors", " ", ",", 
                  SubscriptBox["ReducedRootVectors", 
                   RowBox[{
                   "\[LeftDoubleBracket]", "#", "\[RightDoubleBracket]"}]]}], 
                 "]"}], ",", 
                SubscriptBox["ReducedRootVectors", 
                 RowBox[{
                 "\[LeftDoubleBracket]", "#", "\[RightDoubleBracket]"}]]}], 
               "]"}]}], ")"}]}], "]"}]}]}], "&"}], ",", " ", 
       RowBox[{"Reverse", "@", 
        RowBox[{"KSubsets", "[", 
         RowBox[{
          RowBox[{"Range", "[", "cols", "]"}], ",", "dim"}], "]"}]}]}], 
      "\[IndentingNewLine]", "]"}]}]}], "\[IndentingNewLine]", 
   "]"}]}]}], "Input",
 InitializationCell->True],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"DynkinDiagram", "::", "usage"}], "=", 
    "\"\<DynkinDiagram[CM_,darkRoots_] tries to plot the Dynking diagram. \
darkRoots is the list of position of the root vector with smallest \
length.\>\""}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"DynkinDiagram", "[", 
     RowBox[{"CM_", ",", "darkRoots_"}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "n", ",", "links", ",", "disks", ",", "prelinks", ",", "L", ",", 
        RowBox[{"r", "=", "0.15"}]}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"n", "=", " ", 
        RowBox[{"Length", "[", "CM", "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"prelinks", "=", 
        RowBox[{"CM", "*", 
         RowBox[{"Transpose", "[", "CM", "]"}]}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"links", "=", 
        RowBox[{
         RowBox[{
          RowBox[{"Drop", "[", 
           RowBox[{
            SubscriptBox["prelinks", 
             RowBox[{"\[LeftDoubleBracket]", "#", "\[RightDoubleBracket]"}]], 
            ",", "#"}], "]"}], "&"}], "/@", " ", 
         RowBox[{"Range", "[", 
          RowBox[{"n", "-", "1"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"L", "=", "4"}], ";", "\[IndentingNewLine]", 
       RowBox[{"lines", "=", 
        RowBox[{
         RowBox[{"Table", "[", " ", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"Table", "[", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"Table", "[", " ", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"Line", "[", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"i", "+", "r"}], ",", 
                    RowBox[{
                    RowBox[{"k", "/", "16"}], "-", 
                    RowBox[{
                    SubscriptBox["links", 
                    RowBox[{"\[LeftDoubleBracket]", 
                    RowBox[{"i", ",", "j"}], "\[RightDoubleBracket]"}]], "/", 
                    "29"}]}]}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"j", "+", "i", "-", "r"}], ",", 
                    RowBox[{
                    RowBox[{"k", "/", "16"}], "-", 
                    RowBox[{
                    SubscriptBox["links", 
                    RowBox[{"\[LeftDoubleBracket]", 
                    RowBox[{"i", ",", "j"}], "\[RightDoubleBracket]"}]], "/", 
                    "29"}]}]}], "}"}]}], "}"}], "]"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"k", ",", "1", ",", 
                 SubscriptBox["links", 
                  RowBox[{"\[LeftDoubleBracket]", 
                   RowBox[{"i", ",", "j"}], "\[RightDoubleBracket]"}]]}], 
                "}"}]}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"j", ",", "1", ",", 
               RowBox[{"Length", "@", 
                SubscriptBox["links", 
                 RowBox[{
                 "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}]]}]}], 
              "}"}]}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "1", ",", 
             RowBox[{"n", "-", "1"}]}], "}"}]}], "]"}], "//.", 
         RowBox[{
          RowBox[{"{", "}"}], "\[Rule]", " ", 
          RowBox[{"Sequence", "[", "]"}]}]}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"disks", "=", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"Disk", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"#", ",", "0"}], "}"}], ",", "r"}], "]"}], ")"}], "&"}],
          "/@", "darkRoots"}]}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"Draw2D", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"lines", ",", "disks", ",", "\[IndentingNewLine]", 
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"Circle", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"i", ",", "0"}], "}"}], ",", "r"}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"i", ",", "1", ",", "n"}], "}"}]}], "]"}]}], "}"}], ",", 
         RowBox[{"AspectRatio", "\[Rule]", " ", "Automatic"}], ",", 
         RowBox[{"PlotRange", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"0", ",", "5"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "0.5"}], ",", "0.5"}], "}"}]}], "}"}]}]}], "]"}], 
       ";"}]}], "\[IndentingNewLine]", "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"DynkinDiagram", "[", "CM_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"n", ",", "links", ",", "prelinks", ",", "L", ",", 
      RowBox[{"r", "=", "0.15"}]}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"n", "=", " ", 
      RowBox[{"Length", "[", "CM", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"prelinks", "=", 
      RowBox[{"CM", "*", 
       RowBox[{"Transpose", "[", "CM", "]"}]}]}], ";", "\[IndentingNewLine]", 
     
     RowBox[{"links", "=", 
      RowBox[{
       RowBox[{
        RowBox[{"Drop", "[", 
         RowBox[{
          SubscriptBox["prelinks", 
           RowBox[{"\[LeftDoubleBracket]", "#", "\[RightDoubleBracket]"}]], 
          ",", "#"}], "]"}], "&"}], "/@", " ", 
       RowBox[{"Range", "[", 
        RowBox[{"n", "-", "1"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"L", "=", "4"}], ";", "\[IndentingNewLine]", 
     RowBox[{"lines", "=", 
      RowBox[{
       RowBox[{"Table", "[", " ", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Table", "[", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"Table", "[", " ", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"Line", "[", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"i", "+", "r"}], ",", 
                   RowBox[{
                    RowBox[{"k", "/", "16"}], "-", 
                    RowBox[{
                    SubscriptBox["links", 
                    RowBox[{"\[LeftDoubleBracket]", 
                    RowBox[{"i", ",", "j"}], "\[RightDoubleBracket]"}]], "/", 
                    "29"}]}]}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"j", "+", "i", "-", "r"}], ",", 
                   RowBox[{
                    RowBox[{"k", "/", "16"}], "-", 
                    RowBox[{
                    SubscriptBox["links", 
                    RowBox[{"\[LeftDoubleBracket]", 
                    RowBox[{"i", ",", "j"}], "\[RightDoubleBracket]"}]], "/", 
                    "29"}]}]}], "}"}]}], "}"}], "]"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"k", ",", "1", ",", 
               SubscriptBox["links", 
                RowBox[{"\[LeftDoubleBracket]", 
                 RowBox[{"i", ",", "j"}], "\[RightDoubleBracket]"}]]}], 
              "}"}]}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"j", ",", "1", ",", 
             RowBox[{"Length", "@", 
              SubscriptBox["links", 
               RowBox[{
               "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}]]}]}], 
            "}"}]}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", 
           RowBox[{"n", "-", "1"}]}], "}"}]}], "]"}], "//.", 
       RowBox[{
        RowBox[{"{", "}"}], "\[Rule]", " ", 
        RowBox[{"Sequence", "[", "]"}]}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Draw2D", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"lines", ",", "\[IndentingNewLine]", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"Circle", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"i", ",", "0"}], "}"}], ",", "r"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "1", ",", "n"}], "}"}]}], "]"}]}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"AspectRatio", "\[Rule]", " ", "Automatic"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"PlotRange", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0", ",", "5"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "0.5"}], ",", "0.5"}], "}"}]}], "}"}]}]}], "]"}], 
     ";"}]}], "\[IndentingNewLine]", "]"}]}]}], "Input",
 InitializationCell->True]
}, Open  ]],

Cell[CellGroupData[{

Cell["Standard representation in terms of the Gell-Mann matrices", "Section"],

Cell[TextData[{
 "The Gell-Mann matrices are a complete orthogonal representation of su[3].  \
The Hermitian generators, ",
 Cell[BoxData[
  FormBox[
   InterpretationBox[
    SubsuperscriptBox["F", 
     FormBox[
      TagBox[
       StyleBox["i",
        FontColor->RGBColor[1, 0, 0]],
       StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
      TraditionalForm], 
     TagBox[
      StyleBox[
       FormBox[
        TagBox[
         StyleBox["i",
          FontColor->RGBColor[1, 0, 0]],
         StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
        TraditionalForm],
       ShowContents->False],
      StyleForm[#, ShowContents -> False]& ]],
    Tensor[F, {Void}, {
      red[i]}],
    Editable->False], TraditionalForm]]],
 ", are defined as follows."
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"(", 
    RowBox[{"Fdarray", "=", 
     RowBox[{"gellmannmatrices", "/", "2"}]}], ")"}], "//", 
   RowBox[{
    RowBox[{"Partition", "[", 
     RowBox[{"#", ",", "4"}], "]"}], "&"}]}], "//", "MatrixForm"}], "\n", 
 RowBox[{
  RowBox[{"SetTensorValueRules", "[", 
   RowBox[{
    RowBox[{"Fd", "[", 
     RowBox[{"red", "@", "i"}], "]"}], ",", "Fdarray", " ", ",", "True"}], 
   "]"}], ";"}]}], "Input"],

Cell[BoxData[
 FormBox[
  TagBox[
   RowBox[{"(", "\[NoBreak]", GridBox[{
      {
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", 
           FractionBox["1", "2"], "0"},
          {
           FractionBox["1", "2"], "0", "0"},
          {"0", "0", "0"}
         },
         GridBoxAlignment->{
          "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", 
           RowBox[{"-", 
            FractionBox["\[ImaginaryI]", "2"]}], "0"},
          {
           FractionBox["\[ImaginaryI]", "2"], "0", "0"},
          {"0", "0", "0"}
         },
         GridBoxAlignment->{
          "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "0", 
           FractionBox["1", "2"]},
          {"0", "0", "0"},
          {
           FractionBox["1", "2"], "0", "0"}
         },
         GridBoxAlignment->{
          "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "0", 
           RowBox[{"-", 
            FractionBox["\[ImaginaryI]", "2"]}]},
          {"0", "0", "0"},
          {
           FractionBox["\[ImaginaryI]", "2"], "0", "0"}
         },
         GridBoxAlignment->{
          "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}]},
      {
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "0", "0"},
          {"0", "0", 
           FractionBox["1", "2"]},
          {"0", 
           FractionBox["1", "2"], "0"}
         },
         GridBoxAlignment->{
          "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "0", "0"},
          {"0", "0", 
           RowBox[{"-", 
            FractionBox["\[ImaginaryI]", "2"]}]},
          {"0", 
           FractionBox["\[ImaginaryI]", "2"], "0"}
         },
         GridBoxAlignment->{
          "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {
           FractionBox["1", "2"], "0", "0"},
          {"0", 
           RowBox[{"-", 
            FractionBox["1", "2"]}], "0"},
          {"0", "0", "0"}
         },
         GridBoxAlignment->{
          "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {
           FractionBox["1", "3"], "0", "0"},
          {"0", 
           FractionBox["1", "3"], "0"},
          {"0", "0", 
           RowBox[{"-", 
            FractionBox["2", "3"]}]}
         },
         GridBoxAlignment->{
          "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}]}
     },
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.7]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
   Function[BoxForm`e$, 
    MatrixForm[BoxForm`e$]]], TraditionalForm]], "Output",
 CellChangeTimes->{3.43656400454319*^9}]
}, Open  ]],

Cell["\<\
We follow the convention such that the matrix exponential will be globally \
multiplied by -\[ImaginaryI] in order to get the actual group element. \
\>", "Text"],

Cell["\<\
The following is not an element of SU[3] but an element of the larger SL[3,C]\
\
\>", "Text"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"MatrixExp", "[", 
  RowBox[{
   RowBox[{"Fd", "[", 
    RowBox[{"red", "@", "1"}], "]"}], " ", "\[Theta]"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"%", "/.", 
  RowBox[{"TensorValueRules", "[", "F", "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"%", "//", "ExpToTrig"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"%", "//", "Simplify"}], "//", "MatrixForm"}]}], "Input",
 CellChangeTimes->{{3.43658746809601*^9, 3.4365874701777983`*^9}, {
  3.436587765761129*^9, 3.4365877668208237`*^9}}],

Cell[BoxData[
 FormBox[
  InterpretationBox[
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"\[Theta]", " ", 
     InterpretationBox[
      SubsuperscriptBox["F", 
       FormBox[
        StyleBox["1",
         StripOnInput->False,
         FontColor->RGBColor[1, 0, 0]],
        TraditionalForm], 
       StyleBox[
        FormBox[
         StyleBox["1",
          StripOnInput->False,
          FontColor->RGBColor[1, 0, 0]],
         TraditionalForm],
        StripOnInput->False,
        ShowContents->False]],
      TensorCalculus4V6`Tensorial`Tensor[$CellContext`F, {
       TensorCalculus4V6`Tensorial`Void}, {
        $CellContext`red[1]}],
      BaseStyle->{AutoMultiplicationSymbol -> False},
      Editable->False]}]],
   MatrixExp[$CellContext`\[Theta] 
    TensorCalculus4V6`Tensorial`Tensor[$CellContext`F, {
      TensorCalculus4V6`Tensorial`Void}, {
       $CellContext`red[1]}]],
   SyntaxForm->"Exp"], TraditionalForm]], "Output",
 CellChangeTimes->{3.436564010373458*^9, 3.436587472708231*^9, 
  3.4365877689154263`*^9}],

Cell[BoxData[
 FormBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{
       FractionBox["1", "2"], " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"-", "\[Theta]"}], "/", "2"}]], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         SuperscriptBox["\[ExponentialE]", "\[Theta]"]}], ")"}]}], 
      RowBox[{
       FractionBox["1", "2"], " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"-", "\[Theta]"}], "/", "2"}]], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", 
         SuperscriptBox["\[ExponentialE]", "\[Theta]"]}], ")"}]}], "0"},
     {
      RowBox[{
       FractionBox["1", "2"], " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"-", "\[Theta]"}], "/", "2"}]], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", 
         SuperscriptBox["\[ExponentialE]", "\[Theta]"]}], ")"}]}], 
      RowBox[{
       FractionBox["1", "2"], " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"-", "\[Theta]"}], "/", "2"}]], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         SuperscriptBox["\[ExponentialE]", "\[Theta]"]}], ")"}]}], "0"},
     {"0", "0", "1"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
  TraditionalForm]], "Output",
 CellChangeTimes->{3.436564010373458*^9, 3.436587472708231*^9, 
  3.436587768932598*^9}],

Cell[BoxData[
 FormBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{
       FractionBox["1", "2"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"cosh", "(", 
          FractionBox["\[Theta]", "2"], ")"}], "-", 
         RowBox[{"sinh", "(", 
          FractionBox["\[Theta]", "2"], ")"}]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"cosh", "(", "\[Theta]", ")"}], "+", 
         RowBox[{"sinh", "(", "\[Theta]", ")"}], "+", "1"}], ")"}]}], 
      RowBox[{
       FractionBox["1", "2"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"cosh", "(", 
          FractionBox["\[Theta]", "2"], ")"}], "-", 
         RowBox[{"sinh", "(", 
          FractionBox["\[Theta]", "2"], ")"}]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"cosh", "(", "\[Theta]", ")"}], "+", 
         RowBox[{"sinh", "(", "\[Theta]", ")"}], "-", "1"}], ")"}]}], "0"},
     {
      RowBox[{
       FractionBox["1", "2"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"cosh", "(", 
          FractionBox["\[Theta]", "2"], ")"}], "-", 
         RowBox[{"sinh", "(", 
          FractionBox["\[Theta]", "2"], ")"}]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"cosh", "(", "\[Theta]", ")"}], "+", 
         RowBox[{"sinh", "(", "\[Theta]", ")"}], "-", "1"}], ")"}]}], 
      RowBox[{
       FractionBox["1", "2"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"cosh", "(", 
          FractionBox["\[Theta]", "2"], ")"}], "-", 
         RowBox[{"sinh", "(", 
          FractionBox["\[Theta]", "2"], ")"}]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"cosh", "(", "\[Theta]", ")"}], "+", 
         RowBox[{"sinh", "(", "\[Theta]", ")"}], "+", "1"}], ")"}]}], "0"},
     {"0", "0", "1"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
  TraditionalForm]], "Output",
 CellChangeTimes->{3.436564010373458*^9, 3.436587472708231*^9, 
  3.436587768937663*^9}],

Cell[BoxData[
 FormBox[
  TagBox[
   RowBox[{"(", "\[NoBreak]", GridBox[{
      {
       RowBox[{"cosh", "(", 
        FractionBox["\[Theta]", "2"], ")"}], 
       RowBox[{"sinh", "(", 
        FractionBox["\[Theta]", "2"], ")"}], "0"},
      {
       RowBox[{"sinh", "(", 
        FractionBox["\[Theta]", "2"], ")"}], 
       RowBox[{"cosh", "(", 
        FractionBox["\[Theta]", "2"], ")"}], "0"},
      {"0", "0", "1"}
     },
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.7]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
   Function[BoxForm`e$, 
    MatrixForm[BoxForm`e$]]], TraditionalForm]], "Output",
 CellChangeTimes->{3.436564010373458*^9, 3.436587472708231*^9, 
  3.436587768970058*^9}]
}, Open  ]],

Cell["The actual group element is obtained as", "Text"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"MatrixExp", "[", 
   RowBox[{
    RowBox[{"-", "\[ImaginaryI]"}], " ", 
    RowBox[{"Fd", "[", 
     RowBox[{"red", "@", "1"}], "]"}], " ", "\[Theta]"}], "]"}], "//", 
  "MatrixForm"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"%", "/.", 
   RowBox[{"TensorValueRules", "[", "F", "]"}]}], "//", 
  "MatrixForm"}]}], "Input"],

Cell[BoxData[
 FormBox[
  TagBox[
   InterpretationBox[
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{"-", "\[ImaginaryI]"}], " ", "\[Theta]", " ", 
      InterpretationBox[
       SubsuperscriptBox["F", 
        FormBox[
         TagBox[
          StyleBox["1",
           FontColor->RGBColor[1, 0, 0]],
          StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
         TraditionalForm], 
        TagBox[
         StyleBox[
          FormBox[
           TagBox[
            StyleBox["1",
             FontColor->RGBColor[1, 0, 0]],
            StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
           TraditionalForm],
          ShowContents->False],
         StyleForm[#, ShowContents -> False]& ]],
       Tensor[F, {Void}, {
         red[1]}],
       Editable->False]}]],
    MatrixExp[(Complex[0, -1] \[Theta]) Tensor[F, {Void}, {
        red[1]}]],
    SyntaxForm->"Exp"],
   Function[BoxForm`e$, 
    MatrixForm[BoxForm`e$]]], TraditionalForm]], "Output"],

Cell[BoxData[
 FormBox[
  TagBox[
   RowBox[{"(", "\[NoBreak]", GridBox[{
      {
       RowBox[{"cos", "(", 
        FractionBox["\[Theta]", "2"], ")"}], 
       RowBox[{
        RowBox[{"-", "\[ImaginaryI]"}], " ", 
        RowBox[{"sin", "(", 
         FractionBox["\[Theta]", "2"], ")"}]}], "0"},
      {
       RowBox[{
        RowBox[{"-", "\[ImaginaryI]"}], " ", 
        RowBox[{"sin", "(", 
         FractionBox["\[Theta]", "2"], ")"}]}], 
       RowBox[{"cos", "(", 
        FractionBox["\[Theta]", "2"], ")"}], "0"},
      {"0", "0", "1"}
     }], "\[NoBreak]", ")"}],
   Function[BoxForm`e$, 
    MatrixForm[BoxForm`e$]]], TraditionalForm]], "Output"]
}, Open  ]],

Cell["\<\
We obtain the weighting factor by evaluating the Killing form\
\>", "Text"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Tr", "[", 
  RowBox[{
   RowBox[{"Fd", "[", 
    RowBox[{"red", "@", "i"}], "]"}], ".", 
   RowBox[{"Fd", "[", 
    RowBox[{"red", "@", "j"}], "]"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"(", 
    RowBox[{"%", "//", 
     RowBox[{"ArrayExpansion", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"red", "@", "i"}], ",", 
        RowBox[{"red", "@", "j"}]}], "}"}], "]"}]}], ")"}], "/.", 
   RowBox[{"TensorValueRules", "[", "F", "]"}]}], "//", 
  "MatrixForm"}]}], "Input"],

Cell[BoxData[
 FormBox[
  RowBox[{"Tr", "[", 
   RowBox[{
    InterpretationBox[
     SubsuperscriptBox["F", 
      FormBox[
       TagBox[
        StyleBox["i",
         FontColor->RGBColor[1, 0, 0]],
        StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
       TraditionalForm], 
      TagBox[
       StyleBox[
        FormBox[
         TagBox[
          StyleBox["i",
           FontColor->RGBColor[1, 0, 0]],
          StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
         TraditionalForm],
        ShowContents->False],
       StyleForm[#, ShowContents -> False]& ]],
     Tensor[F, {Void}, {
       red[i]}],
     Editable->False], ".", 
    InterpretationBox[
     SubsuperscriptBox["F", 
      FormBox[
       TagBox[
        StyleBox["j",
         FontColor->RGBColor[1, 0, 0]],
        StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
       TraditionalForm], 
      TagBox[
       StyleBox[
        FormBox[
         TagBox[
          StyleBox["j",
           FontColor->RGBColor[1, 0, 0]],
          StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
         TraditionalForm],
        ShowContents->False],
       StyleForm[#, ShowContents -> False]& ]],
     Tensor[F, {Void}, {
       red[j]}],
     Editable->False]}], "]"}], TraditionalForm]], "Output"],

Cell[BoxData[
 FormBox[
  TagBox[
   RowBox[{"(", "\[NoBreak]", GridBox[{
      {
       FractionBox["1", "2"], "0", "0", "0", "0", "0", "0", "0"},
      {"0", 
       FractionBox["1", "2"], "0", "0", "0", "0", "0", "0"},
      {"0", "0", 
       FractionBox["1", "2"], "0", "0", "0", "0", "0"},
      {"0", "0", "0", 
       FractionBox["1", "2"], "0", "0", "0", "0"},
      {"0", "0", "0", "0", 
       FractionBox["1", "2"], "0", "0", "0"},
      {"0", "0", "0", "0", "0", 
       FractionBox["1", "2"], "0", "0"},
      {"0", "0", "0", "0", "0", "0", 
       FractionBox["1", "2"], "0"},
      {"0", "0", "0", "0", "0", "0", "0", 
       FractionBox["2", "3"]}
     },
     GridBoxAlignment->{
      "Columns" -> {{Decimal}}, "ColumnsIndexed" -> {}, 
       "Rows" -> {{Baseline}}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
   Function[BoxForm`e$, 
    MatrixForm[BoxForm`e$]]], TraditionalForm]], "Output"]
}, Open  ]],

Cell["\<\
This matrix is diagonal so the trace of two different matrices is zero. Using \
the fact that the trace in this representation works as a scalar product of \
orthogonal elements, the formula for the structure constants is then\
\>", "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Tr", "[", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"Fd", "[", 
        RowBox[{"red", "@", "i"}], "]"}], ".", 
       RowBox[{"Fd", "[", 
        RowBox[{"red", "@", "j"}], "]"}]}], "-", 
      RowBox[{
       RowBox[{"Fd", "[", 
        RowBox[{"red", "@", "j"}], "]"}], ".", 
       RowBox[{"Fd", "[", 
        RowBox[{"red", "@", "i"}], "]"}]}]}], ")"}], ".", 
    RowBox[{"Fd", "[", 
     RowBox[{"red", "@", "k"}], "]"}]}], "]"}], "/", 
  RowBox[{"(", 
   RowBox[{"1", "/", "2"}], ")"}]}]], "Input"],

Cell[BoxData[
 FormBox[
  RowBox[{"2", " ", 
   RowBox[{"Tr", "[", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        InterpretationBox[
         SubsuperscriptBox["F", 
          FormBox[
           TagBox[
            StyleBox["i",
             FontColor->RGBColor[1, 0, 0]],
            StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
           TraditionalForm], 
          TagBox[
           StyleBox[
            FormBox[
             TagBox[
              StyleBox["i",
               FontColor->RGBColor[1, 0, 0]],
              StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
             TraditionalForm],
            ShowContents->False],
           StyleForm[#, ShowContents -> False]& ]],
         Tensor[F, {Void}, {
           red[i]}],
         Editable->False], ".", 
        InterpretationBox[
         SubsuperscriptBox["F", 
          FormBox[
           TagBox[
            StyleBox["j",
             FontColor->RGBColor[1, 0, 0]],
            StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
           TraditionalForm], 
          TagBox[
           StyleBox[
            FormBox[
             TagBox[
              StyleBox["j",
               FontColor->RGBColor[1, 0, 0]],
              StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
             TraditionalForm],
            ShowContents->False],
           StyleForm[#, ShowContents -> False]& ]],
         Tensor[F, {Void}, {
           red[j]}],
         Editable->False]}], "-", 
       RowBox[{
        InterpretationBox[
         SubsuperscriptBox["F", 
          FormBox[
           TagBox[
            StyleBox["j",
             FontColor->RGBColor[1, 0, 0]],
            StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
           TraditionalForm], 
          TagBox[
           StyleBox[
            FormBox[
             TagBox[
              StyleBox["j",
               FontColor->RGBColor[1, 0, 0]],
              StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
             TraditionalForm],
            ShowContents->False],
           StyleForm[#, ShowContents -> False]& ]],
         Tensor[F, {Void}, {
           red[j]}],
         Editable->False], ".", 
        InterpretationBox[
         SubsuperscriptBox["F", 
          FormBox[
           TagBox[
            StyleBox["i",
             FontColor->RGBColor[1, 0, 0]],
            StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
           TraditionalForm], 
          TagBox[
           StyleBox[
            FormBox[
             TagBox[
              StyleBox["i",
               FontColor->RGBColor[1, 0, 0]],
              StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
             TraditionalForm],
            ShowContents->False],
           StyleForm[#, ShowContents -> False]& ]],
         Tensor[F, {Void}, {
           red[i]}],
         Editable->False]}]}], ")"}], ".", 
     InterpretationBox[
      SubsuperscriptBox["F", 
       FormBox[
        TagBox[
         StyleBox["k",
          FontColor->RGBColor[1, 0, 0]],
         StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
        TraditionalForm], 
       TagBox[
        StyleBox[
         FormBox[
          TagBox[
           StyleBox["k",
            FontColor->RGBColor[1, 0, 0]],
           StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
          TraditionalForm],
         ShowContents->False],
        StyleForm[#, ShowContents -> False]& ]],
      Tensor[F, {Void}, {
        red[k]}],
      Editable->False]}], "]"}]}], TraditionalForm]], "Output"]
}, Open  ]],

Cell["\<\
This is discussed in detail in the introductory notebook about Lie groups \
[The file name here to be defined yet]\
\>", "Text"],

Cell["\<\
Which, for efficiency, we evaluate by array methods and then set tensor value \
rules.\
\>", "Text"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"cdduarray", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "2"}], 
      RowBox[{"Tr", "[", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"Part", "[", 
            RowBox[{"Fdarray", ",", "i"}], "]"}], ".", 
           RowBox[{"Part", "[", 
            RowBox[{"Fdarray", ",", "j"}], "]"}]}], "-", 
          RowBox[{
           RowBox[{"Part", "[", 
            RowBox[{"Fdarray", ",", "j"}], "]"}], ".", 
           RowBox[{"Part", "[", 
            RowBox[{"Fdarray", ",", "i"}], "]"}]}]}], ")"}], ".", 
        RowBox[{"Part", "[", 
         RowBox[{"Fdarray", ",", "k"}], "]"}]}], "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "8"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"j", ",", "1", ",", "8"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"k", ",", "1", ",", "8"}], "}"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{"SetTensorValueRules", "[", 
  RowBox[{
   RowBox[{"cddu", "[", 
    RowBox[{
     RowBox[{"red", "@", "i"}], ",", 
     RowBox[{"red", "@", "j"}], ",", 
     RowBox[{"red", "@", "k"}]}], "]"}], ",", "%"}], "]"}]}], "Input"],

Cell["\<\
The structure constants are antisymmetric in the first and second indices and \
invariant under cyclic permutation. The following are some nonzero structure \
constants with the first two indices ordered.\
\>", "Text"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"SelectedTensorRules", "[", 
   RowBox[{"c", ",", " ", 
    RowBox[{
     RowBox[{"cddu", "[", 
      RowBox[{"i_", ",", "j_", ",", "k_"}], "]"}], "/;", 
     RowBox[{"OrderedQ", "[", 
      RowBox[{"{", 
       RowBox[{"i", ",", "j"}], "}"}], "]"}]}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Partition", "[", 
    RowBox[{"%", ",", "9"}], "]"}], "//", "Transpose"}], "//", 
  "MatrixForm"}]}], "Input"],

Cell[BoxData[
 FormBox[
  TagBox[
   RowBox[{"(", "\[NoBreak]", GridBox[{
      {
       RowBox[{
        InterpretationBox[
         SubsuperscriptBox["c", 
          RowBox[{
           FormBox[
            TagBox[
             StyleBox["1",
              FontColor->RGBColor[1, 0, 0]],
             StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
            TraditionalForm], 
           FormBox[
            TagBox[
             StyleBox["2",
              FontColor->RGBColor[1, 0, 0]],
             StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
            TraditionalForm], 
           TagBox[
            StyleBox[
             FormBox[
              TagBox[
               StyleBox["7",
                FontColor->RGBColor[1, 0, 0]],
               StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
              TraditionalForm],
             ShowContents->False],
            StyleForm[#, ShowContents -> False]& ]}], 
          RowBox[{
           TagBox[
            StyleBox[
             FormBox[
              TagBox[
               StyleBox["1",
                FontColor->RGBColor[1, 0, 0]],
               StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
              TraditionalForm],
             ShowContents->False],
            StyleForm[#, ShowContents -> False]& ], 
           TagBox[
            StyleBox[
             FormBox[
              TagBox[
               StyleBox["2",
                FontColor->RGBColor[1, 0, 0]],
               StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
              TraditionalForm],
             ShowContents->False],
            StyleForm[#, ShowContents -> False]& ], 
           FormBox[
            TagBox[
             StyleBox["7",
              FontColor->RGBColor[1, 0, 0]],
             StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
            TraditionalForm]}]],
         Tensor[c, {Void, Void, 
           red[7]}, {
           red[1], 
           red[2], Void}],
         Editable->False], "\[Rule]", 
        RowBox[{"-", "\[ImaginaryI]"}]}], 
       RowBox[{
        InterpretationBox[
         SubsuperscriptBox["c", 
          RowBox[{
           FormBox[
            TagBox[
             StyleBox["2",
              FontColor->RGBColor[1, 0, 0]],
             StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
            TraditionalForm], 
           FormBox[
            TagBox[
             StyleBox["6",
              FontColor->RGBColor[1, 0, 0]],
             StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
            TraditionalForm], 
           TagBox[
            StyleBox[
             FormBox[
              TagBox[
               StyleBox["4",
                FontColor->RGBColor[1, 0, 0]],
               StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
              TraditionalForm],
             ShowContents->False],
            StyleForm[#, ShowContents -> False]& ]}], 
          RowBox[{
           TagBox[
            StyleBox[
             FormBox[
              TagBox[
               StyleBox["2",
                FontColor->RGBColor[1, 0, 0]],
               StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
              TraditionalForm],
             ShowContents->False],
            StyleForm[#, ShowContents -> False]& ], 
           TagBox[
            StyleBox[
             FormBox[
              TagBox[
               StyleBox["6",
                FontColor->RGBColor[1, 0, 0]],
               StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
              TraditionalForm],
             ShowContents->False],
            StyleForm[#, ShowContents -> False]& ], 
           FormBox[
            TagBox[
             StyleBox["4",
              FontColor->RGBColor[1, 0, 0]],
             StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
            TraditionalForm]}]],
         Tensor[c, {Void, Void, 
           red[4]}, {
           red[2], 
           red[6], Void}],
         Editable->False], "\[Rule]", 
        FractionBox["\[ImaginaryI]", "2"]}], 
       RowBox[{
        InterpretationBox[
         SubsuperscriptBox["c", 
          RowBox[{
           FormBox[
            TagBox[
             StyleBox["4",
              FontColor->RGBColor[1, 0, 0]],
             StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
            TraditionalForm], 
           FormBox[
            TagBox[
             StyleBox["6",
              FontColor->RGBColor[1, 0, 0]],
             StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
            TraditionalForm], 
           TagBox[
            StyleBox[
             FormBox[
              TagBox[
               StyleBox["2",
                FontColor->RGBColor[1, 0, 0]],
               StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
              TraditionalForm],
             ShowContents->False],
            StyleForm[#, ShowContents -> False]& ]}], 
          RowBox[{
           TagBox[
            StyleBox[
             FormBox[
              TagBox[
               StyleBox["4",
                FontColor->RGBColor[1, 0, 0]],
               StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
              TraditionalForm],
             ShowContents->False],
            StyleForm[#, ShowContents -> False]& ], 
           TagBox[
            StyleBox[
             FormBox[
              TagBox[
               StyleBox["6",
                FontColor->RGBColor[1, 0, 0]],
               StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
              TraditionalForm],
             ShowContents->False],
            StyleForm[#, ShowContents -> False]& ], 
           FormBox[
            TagBox[
             StyleBox["2",
              FontColor->RGBColor[1, 0, 0]],
             StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
            TraditionalForm]}]],
         Tensor[c, {Void, Void, 
           red[2]}, {
           red[4], 
           red[6], Void}],
         Editable->False], "\[Rule]", 
        RowBox[{"-", 
         FractionBox["\[ImaginaryI]", "2"]}]}]},
      {
       RowBox[{
        InterpretationBox[
         SubsuperscriptBox["c", 
          RowBox[{
           FormBox[
            TagBox[
             StyleBox["1",
              FontColor->RGBColor[1, 0, 0]],
             StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
            TraditionalForm], 
           FormBox[
            TagBox[
             StyleBox["3",
              FontColor->RGBColor[1, 0, 0]],
             StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
            TraditionalForm], 
           TagBox[
            StyleBox[
             FormBox[
              TagBox[
               StyleBox["6",
                FontColor->RGBColor[1, 0, 0]],
               StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
              TraditionalForm],
             ShowContents->False],
            StyleForm[#, ShowContents -> False]& ]}], 
          RowBox[{
           TagBox[
            StyleBox[
             FormBox[
              TagBox[
               StyleBox["1",
                FontColor->RGBColor[1, 0, 0]],
               StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
              TraditionalForm],
             ShowContents->False],
            StyleForm[#, ShowContents -> False]& ], 
           TagBox[
            StyleBox[
             FormBox[
              TagBox[
               StyleBox["3",
                FontColor->RGBColor[1, 0, 0]],
               StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
              TraditionalForm],
             ShowContents->False],
            StyleForm[#, ShowContents -> False]& ], 
           FormBox[
            TagBox[
             StyleBox["6",
              FontColor->RGBColor[1, 0, 0]],
             StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
            TraditionalForm]}]],
         Tensor[c, {Void, Void, 
           red[6]}, {
           red[1], 
           red[3], Void}],
         Editable->False], "\[Rule]", 
        RowBox[{"-", 
         FractionBox["\[ImaginaryI]", "2"]}]}], 
       RowBox[{
        InterpretationBox[
         SubsuperscriptBox["c", 
          RowBox[{
           FormBox[
            TagBox[
             StyleBox["2",
              FontColor->RGBColor[1, 0, 0]],
             StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
            TraditionalForm], 
           FormBox[
            TagBox[
             StyleBox["7",
              FontColor->RGBColor[1, 0, 0]],
             StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
            TraditionalForm], 
           TagBox[
            StyleBox[
             FormBox[
              TagBox[
               StyleBox["1",
                FontColor->RGBColor[1, 0, 0]],
               StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
              TraditionalForm],
             ShowContents->False],
            StyleForm[#, ShowContents -> False]& ]}], 
          RowBox[{
           TagBox[
            StyleBox[
             FormBox[
              TagBox[
               StyleBox["2",
                FontColor->RGBColor[1, 0, 0]],
               StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
              TraditionalForm],
             ShowContents->False],
            StyleForm[#, ShowContents -> False]& ], 
           TagBox[
            StyleBox[
             FormBox[
              TagBox[
               StyleBox["7",
                FontColor->RGBColor[1, 0, 0]],
               StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
              TraditionalForm],
             ShowContents->False],
            StyleForm[#, ShowContents -> False]& ], 
           FormBox[
            TagBox[
             StyleBox["1",
              FontColor->RGBColor[1, 0, 0]],
             StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
            TraditionalForm]}]],
         Tensor[c, {Void, Void, 
           red[1]}, {
           red[2], 
           red[7], Void}],
         Editable->False], "\[Rule]", 
        RowBox[{"-", "\[ImaginaryI]"}]}], 
       RowBox[{
        InterpretationBox[
         SubsuperscriptBox["c", 
          RowBox[{
           FormBox[
            TagBox[
             StyleBox["4",
              FontColor->RGBColor[1, 0, 0]],
             StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
            TraditionalForm], 
           FormBox[
            TagBox[
             StyleBox["7",
              FontColor->RGBColor[1, 0, 0]],
             StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
            TraditionalForm], 
           TagBox[
            StyleBox[
             FormBox[
              TagBox[
               StyleBox["3",
                FontColor->RGBColor[1, 0, 0]],
               StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
              TraditionalForm],
             ShowContents->False],
            StyleForm[#, ShowContents -> False]& ]}], 
          RowBox[{
           TagBox[
            StyleBox[
             FormBox[
              TagBox[
               StyleBox["4",
                FontColor->RGBColor[1, 0, 0]],
               StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
              TraditionalForm],
             ShowContents->False],
            StyleForm[#, ShowContents -> False]& ], 
           TagBox[
            StyleBox[
             FormBox[
              TagBox[
               StyleBox["7",
                FontColor->RGBColor[1, 0, 0]],
               StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
              TraditionalForm],
             ShowContents->False],
            StyleForm[#, ShowContents -> False]& ], 
           FormBox[
            TagBox[
             StyleBox["3",
              FontColor->RGBColor[1, 0, 0]],
             StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
            TraditionalForm]}]],
         Tensor[c, {Void, Void, 
           red[3]}, {
           red[4], 
           red[7], Void}],
         Editable->False], "\[Rule]", 
        RowBox[{"-", 
         FractionBox["\[ImaginaryI]", "2"]}]}]},
      {
       RowBox[{
        InterpretationBox[
         SubsuperscriptBox["c", 
          RowBox[{
           FormBox[
            TagBox[
             StyleBox["1",
              FontColor->RGBColor[1, 0, 0]],
             StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
            TraditionalForm], 
           FormBox[
            TagBox[
             StyleBox["4",
              FontColor->RGBColor[1, 0, 0]],
             StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
            TraditionalForm], 
           TagBox[
            StyleBox[
             FormBox[
              TagBox[
               StyleBox["5",
                FontColor->RGBColor[1, 0, 0]],
               StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
              TraditionalForm],
             ShowContents->False],
            StyleForm[#, ShowContents -> False]& ]}], 
          RowBox[{
           TagBox[
            StyleBox[
             FormBox[
              TagBox[
               StyleBox["1",
                FontColor->RGBColor[1, 0, 0]],
               StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
              TraditionalForm],
             ShowContents->False],
            StyleForm[#, ShowContents -> False]& ], 
           TagBox[
            StyleBox[
             FormBox[
              TagBox[
               StyleBox["4",
                FontColor->RGBColor[1, 0, 0]],
               StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
              TraditionalForm],
             ShowContents->False],
            StyleForm[#, ShowContents -> False]& ], 
           FormBox[
            TagBox[
             StyleBox["5",
              FontColor->RGBColor[1, 0, 0]],
             StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
            TraditionalForm]}]],
         Tensor[c, {Void, Void, 
           red[5]}, {
           red[1], 
           red[4], Void}],
         Editable->False], "\[Rule]", 
        FractionBox["\[ImaginaryI]", "2"]}], 
       RowBox[{
        InterpretationBox[
         SubsuperscriptBox["c", 
          RowBox[{
           FormBox[
            TagBox[
             StyleBox["3",
              FontColor->RGBColor[1, 0, 0]],
             StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
            TraditionalForm], 
           FormBox[
            TagBox[
             StyleBox["4",
              FontColor->RGBColor[1, 0, 0]],
             StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
            TraditionalForm], 
           TagBox[
            StyleBox[
             FormBox[
              TagBox[
               StyleBox["7",
                FontColor->RGBColor[1, 0, 0]],
               StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
              TraditionalForm],
             ShowContents->False],
            StyleForm[#, ShowContents -> False]& ]}], 
          RowBox[{
           TagBox[
            StyleBox[
             FormBox[
              TagBox[
               StyleBox["3",
                FontColor->RGBColor[1, 0, 0]],
               StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
              TraditionalForm],
             ShowContents->False],
            StyleForm[#, ShowContents -> False]& ], 
           TagBox[
            StyleBox[
             FormBox[
              TagBox[
               StyleBox["4",
                FontColor->RGBColor[1, 0, 0]],
               StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
              TraditionalForm],
             ShowContents->False],
            StyleForm[#, ShowContents -> False]& ], 
           FormBox[
            TagBox[
             StyleBox["7",
              FontColor->RGBColor[1, 0, 0]],
             StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
            TraditionalForm]}]],
         Tensor[c, {Void, Void, 
           red[7]}, {
           red[3], 
           red[4], Void}],
         Editable->False], "\[Rule]", 
        RowBox[{"-", 
         FractionBox["\[ImaginaryI]", "2"]}]}], 
       RowBox[{
        InterpretationBox[
         SubsuperscriptBox["c", 
          RowBox[{
           FormBox[
            TagBox[
             StyleBox["4",
              FontColor->RGBColor[1, 0, 0]],
             StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
            TraditionalForm], 
           FormBox[
            TagBox[
             StyleBox["8",
              FontColor->RGBColor[1, 0, 0]],
             StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
            TraditionalForm], 
           TagBox[
            StyleBox[
             FormBox[
              TagBox[
               StyleBox["3",
                FontColor->RGBColor[1, 0, 0]],
               StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
              TraditionalForm],
             ShowContents->False],
            StyleForm[#, ShowContents -> False]& ]}], 
          RowBox[{
           TagBox[
            StyleBox[
             FormBox[
              TagBox[
               StyleBox["4",
                FontColor->RGBColor[1, 0, 0]],
               StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
              TraditionalForm],
             ShowContents->False],
            StyleForm[#, ShowContents -> False]& ], 
           TagBox[
            StyleBox[
             FormBox[
              TagBox[
               StyleBox["8",
                FontColor->RGBColor[1, 0, 0]],
               StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
              TraditionalForm],
             ShowContents->False],
            StyleForm[#, ShowContents -> False]& ], 
           FormBox[
            TagBox[
             StyleBox["3",
              FontColor->RGBColor[1, 0, 0]],
             StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
            TraditionalForm]}]],
         Tensor[c, {Void, Void, 
           red[3]}, {
           red[4], 
           red[8], Void}],
         Editable->False], "\[Rule]", 
        RowBox[{"-", "\[ImaginaryI]"}]}]},
      {
       RowBox[{
        InterpretationBox[
         SubsuperscriptBox["c", 
          RowBox[{
           FormBox[
            TagBox[
             StyleBox["1",
              FontColor->RGBColor[1, 0, 0]],
             StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
            TraditionalForm], 
           FormBox[
            TagBox[
             StyleBox["5",
              FontColor->RGBColor[1, 0, 0]],
             StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
            TraditionalForm], 
           TagBox[
            StyleBox[
             FormBox[
              TagBox[
               StyleBox["4",
                FontColor->RGBColor[1, 0, 0]],
               StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
              TraditionalForm],
             ShowContents->False],
            StyleForm[#, ShowContents -> False]& ]}], 
          RowBox[{
           TagBox[
            StyleBox[
             FormBox[
              TagBox[
               StyleBox["1",
                FontColor->RGBColor[1, 0, 0]],
               StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
              TraditionalForm],
             ShowContents->False],
            StyleForm[#, ShowContents -> False]& ], 
           TagBox[
            StyleBox[
             FormBox[
              TagBox[
               StyleBox["5",
                FontColor->RGBColor[1, 0, 0]],
               StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
              TraditionalForm],
             ShowContents->False],
            StyleForm[#, ShowContents -> False]& ], 
           FormBox[
            TagBox[
             StyleBox["4",
              FontColor->RGBColor[1, 0, 0]],
             StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
            TraditionalForm]}]],
         Tensor[c, {Void, Void, 
           red[4]}, {
           red[1], 
           red[5], Void}],
         Editable->False], "\[Rule]", 
        RowBox[{"-", 
         FractionBox["\[ImaginaryI]", "2"]}]}], 
       RowBox[{
        InterpretationBox[
         SubsuperscriptBox["c", 
          RowBox[{
           FormBox[
            TagBox[
             StyleBox["3",
              FontColor->RGBColor[1, 0, 0]],
             StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
            TraditionalForm], 
           FormBox[
            TagBox[
             StyleBox["4",
              FontColor->RGBColor[1, 0, 0]],
             StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
            TraditionalForm], 
           TagBox[
            StyleBox[
             FormBox[
              TagBox[
               StyleBox["8",
                FontColor->RGBColor[1, 0, 0]],
               StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
              TraditionalForm],
             ShowContents->False],
            StyleForm[#, ShowContents -> False]& ]}], 
          RowBox[{
           TagBox[
            StyleBox[
             FormBox[
              TagBox[
               StyleBox["3",
                FontColor->RGBColor[1, 0, 0]],
               StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
              TraditionalForm],
             ShowContents->False],
            StyleForm[#, ShowContents -> False]& ], 
           TagBox[
            StyleBox[
             FormBox[
              TagBox[
               StyleBox["4",
                FontColor->RGBColor[1, 0, 0]],
               StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
              TraditionalForm],
             ShowContents->False],
            StyleForm[#, ShowContents -> False]& ], 
           FormBox[
            TagBox[
             StyleBox["8",
              FontColor->RGBColor[1, 0, 0]],
             StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
            TraditionalForm]}]],
         Tensor[c, {Void, Void, 
           red[8]}, {
           red[3], 
           red[4], Void}],
         Editable->False], "\[Rule]", 
        RowBox[{"-", "\[ImaginaryI]"}]}], 
       RowBox[{
        InterpretationBox[
         SubsuperscriptBox["c", 
          RowBox[{
           FormBox[
            TagBox[
             StyleBox["5",
              FontColor->RGBColor[1, 0, 0]],
             StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
            TraditionalForm], 
           FormBox[
            TagBox[
             StyleBox["6",
              FontColor->RGBColor[1, 0, 0]],
             StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
            TraditionalForm], 
           TagBox[
            StyleBox[
             FormBox[
              TagBox[
               StyleBox["7",
                FontColor->RGBColor[1, 0, 0]],
               StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
              TraditionalForm],
             ShowContents->False],
            StyleForm[#, ShowContents -> False]& ]}], 
          RowBox[{
           TagBox[
            StyleBox[
             FormBox[
              TagBox[
               StyleBox["5",
                FontColor->RGBColor[1, 0, 0]],
               StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
              TraditionalForm],
             ShowContents->False],
            StyleForm[#, ShowContents -> False]& ], 
           TagBox[
            StyleBox[
             FormBox[
              TagBox[
               StyleBox["6",
                FontColor->RGBColor[1, 0, 0]],
               StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
              TraditionalForm],
             ShowContents->False],
            StyleForm[#, ShowContents -> False]& ], 
           FormBox[
            TagBox[
             StyleBox["7",
              FontColor->RGBColor[1, 0, 0]],
             StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
            TraditionalForm]}]],
         Tensor[c, {Void, Void, 
           red[7]}, {
           red[5], 
           red[6], Void}],
         Editable->False], "\[Rule]", 
        FractionBox["\[ImaginaryI]", "2"]}]},
      {
       RowBox[{
        InterpretationBox[
         SubsuperscriptBox["c", 
          RowBox[{
           FormBox[
            TagBox[
             StyleBox["1",
              FontColor->RGBColor[1, 0, 0]],
             StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
            TraditionalForm], 
           FormBox[
            TagBox[
             StyleBox["6",
              FontColor->RGBColor[1, 0, 0]],
             StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
            TraditionalForm], 
           TagBox[
            StyleBox[
             FormBox[
              TagBox[
               StyleBox["3",
                FontColor->RGBColor[1, 0, 0]],
               StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
              TraditionalForm],
             ShowContents->False],
            StyleForm[#, ShowContents -> False]& ]}], 
          RowBox[{
           TagBox[
            StyleBox[
             FormBox[
              TagBox[
               StyleBox["1",
                FontColor->RGBColor[1, 0, 0]],
               StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
              TraditionalForm],
             ShowContents->False],
            StyleForm[#, ShowContents -> False]& ], 
           TagBox[
            StyleBox[
             FormBox[
              TagBox[
               StyleBox["6",
                FontColor->RGBColor[1, 0, 0]],
               StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
              TraditionalForm],
             ShowContents->False],
            StyleForm[#, ShowContents -> False]& ], 
           FormBox[
            TagBox[
             StyleBox["3",
              FontColor->RGBColor[1, 0, 0]],
             StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
            TraditionalForm]}]],
         Tensor[c, {Void, Void, 
           red[3]}, {
           red[1], 
           red[6], Void}],
         Editable->False], "\[Rule]", 
        FractionBox["\[ImaginaryI]", "2"]}], 
       RowBox[{
        InterpretationBox[
         SubsuperscriptBox["c", 
          RowBox[{
           FormBox[
            TagBox[
             StyleBox["3",
              FontColor->RGBColor[1, 0, 0]],
             StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
            TraditionalForm], 
           FormBox[
            TagBox[
             StyleBox["5",
              FontColor->RGBColor[1, 0, 0]],
             StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
            TraditionalForm], 
           TagBox[
            StyleBox[
             FormBox[
              TagBox[
               StyleBox["2",
                FontColor->RGBColor[1, 0, 0]],
               StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
              TraditionalForm],
             ShowContents->False],
            StyleForm[#, ShowContents -> False]& ]}], 
          RowBox[{
           TagBox[
            StyleBox[
             FormBox[
              TagBox[
               StyleBox["3",
                FontColor->RGBColor[1, 0, 0]],
               StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
              TraditionalForm],
             ShowContents->False],
            StyleForm[#, ShowContents -> False]& ], 
           TagBox[
            StyleBox[
             FormBox[
              TagBox[
               StyleBox["5",
                FontColor->RGBColor[1, 0, 0]],
               StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
              TraditionalForm],
             ShowContents->False],
            StyleForm[#, ShowContents -> False]& ], 
           FormBox[
            TagBox[
             StyleBox["2",
              FontColor->RGBColor[1, 0, 0]],
             StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
            TraditionalForm]}]],
         Tensor[c, {Void, Void, 
           red[2]}, {
           red[3], 
           red[5], Void}],
         Editable->False], "\[Rule]", 
        RowBox[{"-", 
         FractionBox["\[ImaginaryI]", "2"]}]}], 
       RowBox[{
        InterpretationBox[
         SubsuperscriptBox["c", 
          RowBox[{
           FormBox[
            TagBox[
             StyleBox["5",
              FontColor->RGBColor[1, 0, 0]],
             StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
            TraditionalForm], 
           FormBox[
            TagBox[
             StyleBox["6",
              FontColor->RGBColor[1, 0, 0]],
             StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
            TraditionalForm], 
           TagBox[
            StyleBox[
             FormBox[
              TagBox[
               StyleBox["8",
                FontColor->RGBColor[1, 0, 0]],
               StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
              TraditionalForm],
             ShowContents->False],
            StyleForm[#, ShowContents -> False]& ]}], 
          RowBox[{
           TagBox[
            StyleBox[
             FormBox[
              TagBox[
               StyleBox["5",
                FontColor->RGBColor[1, 0, 0]],
               StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
              TraditionalForm],
             ShowContents->False],
            StyleForm[#, ShowContents -> False]& ], 
           TagBox[
            StyleBox[
             FormBox[
              TagBox[
               StyleBox["6",
                FontColor->RGBColor[1, 0, 0]],
               StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
              TraditionalForm],
             ShowContents->False],
            StyleForm[#, ShowContents -> False]& ], 
           FormBox[
            TagBox[
             StyleBox["8",
              FontColor->RGBColor[1, 0, 0]],
             StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
            TraditionalForm]}]],
         Tensor[c, {Void, Void, 
           red[8]}, {
           red[5], 
           red[6], Void}],
         Editable->False], "\[Rule]", 
        RowBox[{"-", "\[ImaginaryI]"}]}]},
      {
       RowBox[{
        InterpretationBox[
         SubsuperscriptBox["c", 
          RowBox[{
           FormBox[
            TagBox[
             StyleBox["1",
              FontColor->RGBColor[1, 0, 0]],
             StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
            TraditionalForm], 
           FormBox[
            TagBox[
             StyleBox["7",
              FontColor->RGBColor[1, 0, 0]],
             StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
            TraditionalForm], 
           TagBox[
            StyleBox[
             FormBox[
              TagBox[
               StyleBox["2",
                FontColor->RGBColor[1, 0, 0]],
               StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
              TraditionalForm],
             ShowContents->False],
            StyleForm[#, ShowContents -> False]& ]}], 
          RowBox[{
           TagBox[
            StyleBox[
             FormBox[
              TagBox[
               StyleBox["1",
                FontColor->RGBColor[1, 0, 0]],
               StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
              TraditionalForm],
             ShowContents->False],
            StyleForm[#, ShowContents -> False]& ], 
           TagBox[
            StyleBox[
             FormBox[
              TagBox[
               StyleBox["7",
                FontColor->RGBColor[1, 0, 0]],
               StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
              TraditionalForm],
             ShowContents->False],
            StyleForm[#, ShowContents -> False]& ], 
           FormBox[
            TagBox[
             StyleBox["2",
              FontColor->RGBColor[1, 0, 0]],
             StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
            TraditionalForm]}]],
         Tensor[c, {Void, Void, 
           red[2]}, {
           red[1], 
           red[7], Void}],
         Editable->False], "\[Rule]", "\[ImaginaryI]"}], 
       RowBox[{
        InterpretationBox[
         SubsuperscriptBox["c", 
          RowBox[{
           FormBox[
            TagBox[
             StyleBox["3",
              FontColor->RGBColor[1, 0, 0]],
             StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
            TraditionalForm], 
           FormBox[
            TagBox[
             StyleBox["6",
              FontColor->RGBColor[1, 0, 0]],
             StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
            TraditionalForm], 
           TagBox[
            StyleBox[
             FormBox[
              TagBox[
               StyleBox["1",
                FontColor->RGBColor[1, 0, 0]],
               StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
              TraditionalForm],
             ShowContents->False],
            StyleForm[#, ShowContents -> False]& ]}], 
          RowBox[{
           TagBox[
            StyleBox[
             FormBox[
              TagBox[
               StyleBox["3",
                FontColor->RGBColor[1, 0, 0]],
               StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
              TraditionalForm],
             ShowContents->False],
            StyleForm[#, ShowContents -> False]& ], 
           TagBox[
            StyleBox[
             FormBox[
              TagBox[
               StyleBox["6",
                FontColor->RGBColor[1, 0, 0]],
               StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
              TraditionalForm],
             ShowContents->False],
            StyleForm[#, ShowContents -> False]& ], 
           FormBox[
            TagBox[
             StyleBox["1",
              FontColor->RGBColor[1, 0, 0]],
             StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
            TraditionalForm]}]],
         Tensor[c, {Void, Void, 
           red[1]}, {
           red[3], 
           red[6], Void}],
         Editable->False], "\[Rule]", 
        RowBox[{"-", 
         FractionBox["\[ImaginaryI]", "2"]}]}], 
       RowBox[{
        InterpretationBox[
         SubsuperscriptBox["c", 
          RowBox[{
           FormBox[
            TagBox[
             StyleBox["5",
              FontColor->RGBColor[1, 0, 0]],
             StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
            TraditionalForm], 
           FormBox[
            TagBox[
             StyleBox["7",
              FontColor->RGBColor[1, 0, 0]],
             StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
            TraditionalForm], 
           TagBox[
            StyleBox[
             FormBox[
              TagBox[
               StyleBox["6",
                FontColor->RGBColor[1, 0, 0]],
               StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
              TraditionalForm],
             ShowContents->False],
            StyleForm[#, ShowContents -> False]& ]}], 
          RowBox[{
           TagBox[
            StyleBox[
             FormBox[
              TagBox[
               StyleBox["5",
                FontColor->RGBColor[1, 0, 0]],
               StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
              TraditionalForm],
             ShowContents->False],
            StyleForm[#, ShowContents -> False]& ], 
           TagBox[
            StyleBox[
             FormBox[
              TagBox[
               StyleBox["7",
                FontColor->RGBColor[1, 0, 0]],
               StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
              TraditionalForm],
             ShowContents->False],
            StyleForm[#, ShowContents -> False]& ], 
           FormBox[
            TagBox[
             StyleBox["6",
              FontColor->RGBColor[1, 0, 0]],
             StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
            TraditionalForm]}]],
         Tensor[c, {Void, Void, 
           red[6]}, {
           red[5], 
           red[7], Void}],
         Editable->False], "\[Rule]", 
        RowBox[{"-", 
         FractionBox["\[ImaginaryI]", "2"]}]}]},
      {
       RowBox[{
        InterpretationBox[
         SubsuperscriptBox["c", 
          RowBox[{
           FormBox[
            TagBox[
             StyleBox["2",
              FontColor->RGBColor[1, 0, 0]],
             StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
            TraditionalForm], 
           FormBox[
            TagBox[
             StyleBox["3",
              FontColor->RGBColor[1, 0, 0]],
             StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
            TraditionalForm], 
           TagBox[
            StyleBox[
             FormBox[
              TagBox[
               StyleBox["5",
                FontColor->RGBColor[1, 0, 0]],
               StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
              TraditionalForm],
             ShowContents->False],
            StyleForm[#, ShowContents -> False]& ]}], 
          RowBox[{
           TagBox[
            StyleBox[
             FormBox[
              TagBox[
               StyleBox["2",
                FontColor->RGBColor[1, 0, 0]],
               StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
              TraditionalForm],
             ShowContents->False],
            StyleForm[#, ShowContents -> False]& ], 
           TagBox[
            StyleBox[
             FormBox[
              TagBox[
               StyleBox["3",
                FontColor->RGBColor[1, 0, 0]],
               StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
              TraditionalForm],
             ShowContents->False],
            StyleForm[#, ShowContents -> False]& ], 
           FormBox[
            TagBox[
             StyleBox["5",
              FontColor->RGBColor[1, 0, 0]],
             StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
            TraditionalForm]}]],
         Tensor[c, {Void, Void, 
           red[5]}, {
           red[2], 
           red[3], Void}],
         Editable->False], "\[Rule]", 
        RowBox[{"-", 
         FractionBox["\[ImaginaryI]", "2"]}]}], 
       RowBox[{
        InterpretationBox[
         SubsuperscriptBox["c", 
          RowBox[{
           FormBox[
            TagBox[
             StyleBox["3",
              FontColor->RGBColor[1, 0, 0]],
             StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
            TraditionalForm], 
           FormBox[
            TagBox[
             StyleBox["7",
              FontColor->RGBColor[1, 0, 0]],
             StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
            TraditionalForm], 
           TagBox[
            StyleBox[
             FormBox[
              TagBox[
               StyleBox["4",
                FontColor->RGBColor[1, 0, 0]],
               StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
              TraditionalForm],
             ShowContents->False],
            StyleForm[#, ShowContents -> False]& ]}], 
          RowBox[{
           TagBox[
            StyleBox[
             FormBox[
              TagBox[
               StyleBox["3",
                FontColor->RGBColor[1, 0, 0]],
               StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
              TraditionalForm],
             ShowContents->False],
            StyleForm[#, ShowContents -> False]& ], 
           TagBox[
            StyleBox[
             FormBox[
              TagBox[
               StyleBox["7",
                FontColor->RGBColor[1, 0, 0]],
               StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
              TraditionalForm],
             ShowContents->False],
            StyleForm[#, ShowContents -> False]& ], 
           FormBox[
            TagBox[
             StyleBox["4",
              FontColor->RGBColor[1, 0, 0]],
             StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
            TraditionalForm]}]],
         Tensor[c, {Void, Void, 
           red[4]}, {
           red[3], 
           red[7], Void}],
         Editable->False], "\[Rule]", 
        FractionBox["\[ImaginaryI]", "2"]}], 
       RowBox[{
        InterpretationBox[
         SubsuperscriptBox["c", 
          RowBox[{
           FormBox[
            TagBox[
             StyleBox["5",
              FontColor->RGBColor[1, 0, 0]],
             StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
            TraditionalForm], 
           FormBox[
            TagBox[
             StyleBox["8",
              FontColor->RGBColor[1, 0, 0]],
             StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
            TraditionalForm], 
           TagBox[
            StyleBox[
             FormBox[
              TagBox[
               StyleBox["6",
                FontColor->RGBColor[1, 0, 0]],
               StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
              TraditionalForm],
             ShowContents->False],
            StyleForm[#, ShowContents -> False]& ]}], 
          RowBox[{
           TagBox[
            StyleBox[
             FormBox[
              TagBox[
               StyleBox["5",
                FontColor->RGBColor[1, 0, 0]],
               StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
              TraditionalForm],
             ShowContents->False],
            StyleForm[#, ShowContents -> False]& ], 
           TagBox[
            StyleBox[
             FormBox[
              TagBox[
               StyleBox["8",
                FontColor->RGBColor[1, 0, 0]],
               StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
              TraditionalForm],
             ShowContents->False],
            StyleForm[#, ShowContents -> False]& ], 
           FormBox[
            TagBox[
             StyleBox["6",
              FontColor->RGBColor[1, 0, 0]],
             StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
            TraditionalForm]}]],
         Tensor[c, {Void, Void, 
           red[6]}, {
           red[5], 
           red[8], Void}],
         Editable->False], "\[Rule]", "\[ImaginaryI]"}]},
      {
       RowBox[{
        InterpretationBox[
         SubsuperscriptBox["c", 
          RowBox[{
           FormBox[
            TagBox[
             StyleBox["2",
              FontColor->RGBColor[1, 0, 0]],
             StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
            TraditionalForm], 
           FormBox[
            TagBox[
             StyleBox["4",
              FontColor->RGBColor[1, 0, 0]],
             StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
            TraditionalForm], 
           TagBox[
            StyleBox[
             FormBox[
              TagBox[
               StyleBox["6",
                FontColor->RGBColor[1, 0, 0]],
               StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
              TraditionalForm],
             ShowContents->False],
            StyleForm[#, ShowContents -> False]& ]}], 
          RowBox[{
           TagBox[
            StyleBox[
             FormBox[
              TagBox[
               StyleBox["2",
                FontColor->RGBColor[1, 0, 0]],
               StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
              TraditionalForm],
             ShowContents->False],
            StyleForm[#, ShowContents -> False]& ], 
           TagBox[
            StyleBox[
             FormBox[
              TagBox[
               StyleBox["4",
                FontColor->RGBColor[1, 0, 0]],
               StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
              TraditionalForm],
             ShowContents->False],
            StyleForm[#, ShowContents -> False]& ], 
           FormBox[
            TagBox[
             StyleBox["6",
              FontColor->RGBColor[1, 0, 0]],
             StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
            TraditionalForm]}]],
         Tensor[c, {Void, Void, 
           red[6]}, {
           red[2], 
           red[4], Void}],
         Editable->False], "\[Rule]", 
        RowBox[{"-", 
         FractionBox["\[ImaginaryI]", "2"]}]}], 
       RowBox[{
        InterpretationBox[
         SubsuperscriptBox["c", 
          RowBox[{
           FormBox[
            TagBox[
             StyleBox["3",
              FontColor->RGBColor[1, 0, 0]],
             StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
            TraditionalForm], 
           FormBox[
            TagBox[
             StyleBox["8",
              FontColor->RGBColor[1, 0, 0]],
             StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
            TraditionalForm], 
           TagBox[
            StyleBox[
             FormBox[
              TagBox[
               StyleBox["4",
                FontColor->RGBColor[1, 0, 0]],
               StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
              TraditionalForm],
             ShowContents->False],
            StyleForm[#, ShowContents -> False]& ]}], 
          RowBox[{
           TagBox[
            StyleBox[
             FormBox[
              TagBox[
               StyleBox["3",
                FontColor->RGBColor[1, 0, 0]],
               StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
              TraditionalForm],
             ShowContents->False],
            StyleForm[#, ShowContents -> False]& ], 
           TagBox[
            StyleBox[
             FormBox[
              TagBox[
               StyleBox["8",
                FontColor->RGBColor[1, 0, 0]],
               StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
              TraditionalForm],
             ShowContents->False],
            StyleForm[#, ShowContents -> False]& ], 
           FormBox[
            TagBox[
             StyleBox["4",
              FontColor->RGBColor[1, 0, 0]],
             StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
            TraditionalForm]}]],
         Tensor[c, {Void, Void, 
           red[4]}, {
           red[3], 
           red[8], Void}],
         Editable->False], "\[Rule]", "\[ImaginaryI]"}], 
       RowBox[{
        InterpretationBox[
         SubsuperscriptBox["c", 
          RowBox[{
           FormBox[
            TagBox[
             StyleBox["6",
              FontColor->RGBColor[1, 0, 0]],
             StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
            TraditionalForm], 
           FormBox[
            TagBox[
             StyleBox["7",
              FontColor->RGBColor[1, 0, 0]],
             StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
            TraditionalForm], 
           TagBox[
            StyleBox[
             FormBox[
              TagBox[
               StyleBox["5",
                FontColor->RGBColor[1, 0, 0]],
               StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
              TraditionalForm],
             ShowContents->False],
            StyleForm[#, ShowContents -> False]& ]}], 
          RowBox[{
           TagBox[
            StyleBox[
             FormBox[
              TagBox[
               StyleBox["6",
                FontColor->RGBColor[1, 0, 0]],
               StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
              TraditionalForm],
             ShowContents->False],
            StyleForm[#, ShowContents -> False]& ], 
           TagBox[
            StyleBox[
             FormBox[
              TagBox[
               StyleBox["7",
                FontColor->RGBColor[1, 0, 0]],
               StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
              TraditionalForm],
             ShowContents->False],
            StyleForm[#, ShowContents -> False]& ], 
           FormBox[
            TagBox[
             StyleBox["5",
              FontColor->RGBColor[1, 0, 0]],
             StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
            TraditionalForm]}]],
         Tensor[c, {Void, Void, 
           red[5]}, {
           red[6], 
           red[7], Void}],
         Editable->False], "\[Rule]", 
        FractionBox["\[ImaginaryI]", "2"]}]},
      {
       RowBox[{
        InterpretationBox[
         SubsuperscriptBox["c", 
          RowBox[{
           FormBox[
            TagBox[
             StyleBox["2",
              FontColor->RGBColor[1, 0, 0]],
             StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
            TraditionalForm], 
           FormBox[
            TagBox[
             StyleBox["5",
              FontColor->RGBColor[1, 0, 0]],
             StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
            TraditionalForm], 
           TagBox[
            StyleBox[
             FormBox[
              TagBox[
               StyleBox["3",
                FontColor->RGBColor[1, 0, 0]],
               StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
              TraditionalForm],
             ShowContents->False],
            StyleForm[#, ShowContents -> False]& ]}], 
          RowBox[{
           TagBox[
            StyleBox[
             FormBox[
              TagBox[
               StyleBox["2",
                FontColor->RGBColor[1, 0, 0]],
               StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
              TraditionalForm],
             ShowContents->False],
            StyleForm[#, ShowContents -> False]& ], 
           TagBox[
            StyleBox[
             FormBox[
              TagBox[
               StyleBox["5",
                FontColor->RGBColor[1, 0, 0]],
               StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
              TraditionalForm],
             ShowContents->False],
            StyleForm[#, ShowContents -> False]& ], 
           FormBox[
            TagBox[
             StyleBox["3",
              FontColor->RGBColor[1, 0, 0]],
             StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
            TraditionalForm]}]],
         Tensor[c, {Void, Void, 
           red[3]}, {
           red[2], 
           red[5], Void}],
         Editable->False], "\[Rule]", 
        FractionBox["\[ImaginaryI]", "2"]}], 
       RowBox[{
        InterpretationBox[
         SubsuperscriptBox["c", 
          RowBox[{
           FormBox[
            TagBox[
             StyleBox["4",
              FontColor->RGBColor[1, 0, 0]],
             StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
            TraditionalForm], 
           FormBox[
            TagBox[
             StyleBox["5",
              FontColor->RGBColor[1, 0, 0]],
             StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
            TraditionalForm], 
           TagBox[
            StyleBox[
             FormBox[
              TagBox[
               StyleBox["1",
                FontColor->RGBColor[1, 0, 0]],
               StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
              TraditionalForm],
             ShowContents->False],
            StyleForm[#, ShowContents -> False]& ]}], 
          RowBox[{
           TagBox[
            StyleBox[
             FormBox[
              TagBox[
               StyleBox["4",
                FontColor->RGBColor[1, 0, 0]],
               StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
              TraditionalForm],
             ShowContents->False],
            StyleForm[#, ShowContents -> False]& ], 
           TagBox[
            StyleBox[
             FormBox[
              TagBox[
               StyleBox["5",
                FontColor->RGBColor[1, 0, 0]],
               StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
              TraditionalForm],
             ShowContents->False],
            StyleForm[#, ShowContents -> False]& ], 
           FormBox[
            TagBox[
             StyleBox["1",
              FontColor->RGBColor[1, 0, 0]],
             StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
            TraditionalForm]}]],
         Tensor[c, {Void, Void, 
           red[1]}, {
           red[4], 
           red[5], Void}],
         Editable->False], "\[Rule]", 
        FractionBox["\[ImaginaryI]", "2"]}], 
       RowBox[{
        InterpretationBox[
         SubsuperscriptBox["c", 
          RowBox[{
           FormBox[
            TagBox[
             StyleBox["6",
              FontColor->RGBColor[1, 0, 0]],
             StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
            TraditionalForm], 
           FormBox[
            TagBox[
             StyleBox["8",
              FontColor->RGBColor[1, 0, 0]],
             StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
            TraditionalForm], 
           TagBox[
            StyleBox[
             FormBox[
              TagBox[
               StyleBox["5",
                FontColor->RGBColor[1, 0, 0]],
               StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
              TraditionalForm],
             ShowContents->False],
            StyleForm[#, ShowContents -> False]& ]}], 
          RowBox[{
           TagBox[
            StyleBox[
             FormBox[
              TagBox[
               StyleBox["6",
                FontColor->RGBColor[1, 0, 0]],
               StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
              TraditionalForm],
             ShowContents->False],
            StyleForm[#, ShowContents -> False]& ], 
           TagBox[
            StyleBox[
             FormBox[
              TagBox[
               StyleBox["8",
                FontColor->RGBColor[1, 0, 0]],
               StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
              TraditionalForm],
             ShowContents->False],
            StyleForm[#, ShowContents -> False]& ], 
           FormBox[
            TagBox[
             StyleBox["5",
              FontColor->RGBColor[1, 0, 0]],
             StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
            TraditionalForm]}]],
         Tensor[c, {Void, Void, 
           red[5]}, {
           red[6], 
           red[8], Void}],
         Editable->False], "\[Rule]", 
        RowBox[{"-", "\[ImaginaryI]"}]}]}
     }], "\[NoBreak]", ")"}],
   Function[BoxForm`e$, 
    MatrixForm[BoxForm`e$]]], TraditionalForm]], "Output"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Transformation to the canonical representation", "Section"],

Cell[CellGroupData[{

Cell["Adjoint representation ", "Subsection"],

Cell["\<\
There is a representation that minimizes the mixing of generators and \
ultimately leads to the characterization of the Lie algebra in terms of a \
minimum number of parameters called root vectors. In order to do that we have \
to define the adjoint representation in terms of the structure constants as \
follows\
\>", "Text"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"F\[DoubleStruckD]d", "[", 
   RowBox[{"red", "@", "i"}], "]"}], "\[Equal]", " ", 
  RowBox[{"-", 
   RowBox[{"cddu", "[", 
    RowBox[{
     RowBox[{"red", "@", "i"}], ",", 
     RowBox[{"red", "@", "j"}], ",", 
     RowBox[{"red", "@", "k"}]}], "]"}]}]}], "\n", 
 RowBox[{
  RowBox[{"F\[DoubleStruckD]td", "[", 
   RowBox[{"red", "@", "i"}], "]"}], "\[Equal]", " ", 
  RowBox[{"-", 
   RowBox[{"cddu", "[", 
    RowBox[{
     RowBox[{"red", "@", "i"}], ",", 
     RowBox[{"red", "@", "k"}], ",", 
     RowBox[{"red", "@", "j"}]}], "]"}]}]}]}], "Input"],

Cell[BoxData[
 FormBox[
  RowBox[{
   InterpretationBox[
    SubsuperscriptBox["F\[DoubleStruckD]", 
     FormBox[
      TagBox[
       StyleBox["i",
        FontColor->RGBColor[1, 0, 0]],
       StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
      TraditionalForm], 
     TagBox[
      StyleBox[
       FormBox[
        TagBox[
         StyleBox["i",
          FontColor->RGBColor[1, 0, 0]],
         StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
        TraditionalForm],
       ShowContents->False],
      StyleForm[#, ShowContents -> False]& ]],
    Tensor[F\[DoubleStruckD], {Void}, {
      red[i]}],
    Editable->False], "\[Equal]", 
   RowBox[{"-", 
    InterpretationBox[
     SubsuperscriptBox["c", 
      RowBox[{
       FormBox[
        TagBox[
         StyleBox["i",
          FontColor->RGBColor[1, 0, 0]],
         StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
        TraditionalForm], 
       FormBox[
        TagBox[
         StyleBox["j",
          FontColor->RGBColor[1, 0, 0]],
         StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
        TraditionalForm], 
       TagBox[
        StyleBox[
         FormBox[
          TagBox[
           StyleBox["k",
            FontColor->RGBColor[1, 0, 0]],
           StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
          TraditionalForm],
         ShowContents->False],
        StyleForm[#, ShowContents -> False]& ]}], 
      RowBox[{
       TagBox[
        StyleBox[
         FormBox[
          TagBox[
           StyleBox["i",
            FontColor->RGBColor[1, 0, 0]],
           StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
          TraditionalForm],
         ShowContents->False],
        StyleForm[#, ShowContents -> False]& ], 
       TagBox[
        StyleBox[
         FormBox[
          TagBox[
           StyleBox["j",
            FontColor->RGBColor[1, 0, 0]],
           StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
          TraditionalForm],
         ShowContents->False],
        StyleForm[#, ShowContents -> False]& ], 
       FormBox[
        TagBox[
         StyleBox["k",
          FontColor->RGBColor[1, 0, 0]],
         StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
        TraditionalForm]}]],
     Tensor[c, {Void, Void, 
       red[k]}, {
       red[i], 
       red[j], Void}],
     Editable->False]}]}], TraditionalForm]], "Output"],

Cell[BoxData[
 FormBox[
  RowBox[{
   InterpretationBox[
    SubsuperscriptBox[
     InterpretationBox[
      InterpretationBox[
       SuperscriptBox["F\[DoubleStruckD]", 
        FormBox[
         TagBox[
          StyleBox["T",
           FontColor->RGBColor[1, 0, 0]],
          StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
         TraditionalForm]],
       Superscript[F\[DoubleStruckD], 
        red[T]],
       Editable->False],
      F\[DoubleStruckD]t,
      Editable->False], 
     FormBox[
      TagBox[
       StyleBox["i",
        FontColor->RGBColor[1, 0, 0]],
       StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
      TraditionalForm], 
     TagBox[
      StyleBox[
       FormBox[
        TagBox[
         StyleBox["i",
          FontColor->RGBColor[1, 0, 0]],
         StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
        TraditionalForm],
       ShowContents->False],
      StyleForm[#, ShowContents -> False]& ]],
    Tensor[F\[DoubleStruckD]t, {Void}, {
      red[i]}],
    Editable->False], "\[Equal]", 
   RowBox[{"-", 
    InterpretationBox[
     SubsuperscriptBox["c", 
      RowBox[{
       FormBox[
        TagBox[
         StyleBox["i",
          FontColor->RGBColor[1, 0, 0]],
         StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
        TraditionalForm], 
       FormBox[
        TagBox[
         StyleBox["k",
          FontColor->RGBColor[1, 0, 0]],
         StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
        TraditionalForm], 
       TagBox[
        StyleBox[
         FormBox[
          TagBox[
           StyleBox["j",
            FontColor->RGBColor[1, 0, 0]],
           StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
          TraditionalForm],
         ShowContents->False],
        StyleForm[#, ShowContents -> False]& ]}], 
      RowBox[{
       TagBox[
        StyleBox[
         FormBox[
          TagBox[
           StyleBox["i",
            FontColor->RGBColor[1, 0, 0]],
           StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
          TraditionalForm],
         ShowContents->False],
        StyleForm[#, ShowContents -> False]& ], 
       TagBox[
        StyleBox[
         FormBox[
          TagBox[
           StyleBox["k",
            FontColor->RGBColor[1, 0, 0]],
           StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
          TraditionalForm],
         ShowContents->False],
        StyleForm[#, ShowContents -> False]& ], 
       FormBox[
        TagBox[
         StyleBox["j",
          FontColor->RGBColor[1, 0, 0]],
         StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
        TraditionalForm]}]],
     Tensor[c, {Void, Void, 
       red[j]}, {
       red[i], 
       red[k], Void}],
     Editable->False]}]}], TraditionalForm]], "Output"]
}, Open  ]],

Cell["where we defined the transpose as well. ", "Text"],

Cell["Setting the value rules", "Text"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Ftdarray", "=", 
   RowBox[{"Transpose", "[", 
    RowBox[{"cdduarray", ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "3", ",", "2"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"SetTensorValueRules", "[", 
  RowBox[{
   RowBox[{"F\[DoubleStruckD]d", "[", 
    RowBox[{"red", "@", "i"}], "]"}], ",", 
   RowBox[{"-", "cdduarray"}], ",", "True"}], "]"}], "\n", 
 RowBox[{"SetTensorValueRules", "[", 
  RowBox[{
   RowBox[{"F\[DoubleStruckD]td", "[", 
    RowBox[{"red", "@", "i"}], "]"}], ",", 
   RowBox[{"-", "Ftdarray"}], ",", "True"}], "]"}]}], "Input"],

Cell[TextData[{
 "and displaying the explicit matrices of ",
 Cell[BoxData[
  FormBox[
   InterpretationBox[
    SubsuperscriptBox[
     InterpretationBox[
      InterpretationBox[
       SuperscriptBox["F\[DoubleStruckD]", 
        FormBox[
         TagBox[
          StyleBox["T",
           FontColor->RGBColor[1, 0, 0]],
          StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
         TraditionalForm]],
       Superscript[F\[DoubleStruckD], 
        red[T]],
       Editable->False],
      F\[DoubleStruckD]t,
      Editable->False], 
     FormBox[
      TagBox[
       StyleBox["i",
        FontColor->RGBColor[1, 0, 0]],
       StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
      TraditionalForm], 
     TagBox[
      StyleBox[
       FormBox[
        TagBox[
         StyleBox["i",
          FontColor->RGBColor[1, 0, 0]],
         StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
        TraditionalForm],
       ShowContents->False],
      StyleForm[#, ShowContents -> False]& ]],
    Tensor[F\[DoubleStruckD]t, {Void}, {
      red[i]}],
    Editable->False], TraditionalForm]]]
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Partition", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"F\[DoubleStruckD]td", "[", 
        RowBox[{"red", "@", "i"}], "]"}], "//", 
       RowBox[{"EinsteinArray", "[", "]"}]}], ")"}], "/.", 
     RowBox[{"TensorValueRules", "[", "F\[DoubleStruckD]t", "]"}]}], 
    "\[IndentingNewLine]", ",", "2"}], "]"}], "//", "MatrixForm"}]], "Input"],

Cell[BoxData[
 FormBox[
  InterpretationBox[
   RowBox[{"(", "\[NoBreak]", GridBox[{
      {
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", 
           RowBox[{"-", "\[ImaginaryI]"}], "0"},
          {"0", "0", "0", "0", "0", 
           RowBox[{"-", 
            FractionBox["\[ImaginaryI]", "2"]}], "0", "0"},
          {"0", "0", "0", "0", 
           FractionBox["\[ImaginaryI]", "2"], "0", "0", "0"},
          {"0", "0", "0", 
           RowBox[{"-", 
            FractionBox["\[ImaginaryI]", "2"]}], "0", "0", "0", "0"},
          {"0", "0", 
           FractionBox["\[ImaginaryI]", "2"], "0", "0", "0", "0", "0"},
          {"0", "\[ImaginaryI]", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0"}
         },
         GridBoxAlignment->{
          "Columns" -> {{Decimal}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "0", "0", "0", "0", "0", "\[ImaginaryI]", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", 
           RowBox[{"-", 
            FractionBox["\[ImaginaryI]", "2"]}], "0", "0", "0"},
          {"0", "0", "0", "0", "0", 
           RowBox[{"-", 
            FractionBox["\[ImaginaryI]", "2"]}], "0", "0"},
          {"0", "0", 
           FractionBox["\[ImaginaryI]", "2"], "0", "0", "0", "0", "0"},
          {"0", "0", "0", 
           FractionBox["\[ImaginaryI]", "2"], "0", "0", "0", "0"},
          {
           RowBox[{"-", "\[ImaginaryI]"}], "0", "0", "0", "0", "0", "0", 
           "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0"}
         },
         GridBoxAlignment->{
          "Columns" -> {{Decimal}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}]},
      {
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "0", "0", "0", "0", 
           FractionBox["\[ImaginaryI]", "2"], "0", "0"},
          {"0", "0", "0", "0", 
           FractionBox["\[ImaginaryI]", "2"], "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", 
           RowBox[{"-", 
            FractionBox["\[ImaginaryI]", "2"]}], 
           RowBox[{"-", "\[ImaginaryI]"}]},
          {"0", 
           RowBox[{"-", 
            FractionBox["\[ImaginaryI]", "2"]}], "0", "0", "0", "0", "0", "0"},
          {
           RowBox[{"-", 
            FractionBox["\[ImaginaryI]", "2"]}], "0", "0", "0", "0", "0", "0",
            "0"},
          {"0", "0", "0", 
           FractionBox["\[ImaginaryI]", "2"], "0", "0", "0", "0"},
          {"0", "0", "0", "\[ImaginaryI]", "0", "0", "0", "0"}
         },
         GridBoxAlignment->{
          "Columns" -> {{Decimal}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "0", "0", "0", 
           RowBox[{"-", 
            FractionBox["\[ImaginaryI]", "2"]}], "0", "0", "0"},
          {"0", "0", "0", "0", "0", 
           FractionBox["\[ImaginaryI]", "2"], "0", "0"},
          {"0", "0", "0", "0", "0", "0", 
           FractionBox["\[ImaginaryI]", "2"], "\[ImaginaryI]"},
          {"0", "0", "0", "0", "0", "0", "0", "0"},
          {
           FractionBox["\[ImaginaryI]", "2"], "0", "0", "0", "0", "0", "0", 
           "0"},
          {"0", 
           RowBox[{"-", 
            FractionBox["\[ImaginaryI]", "2"]}], "0", "0", "0", "0", "0", "0"},
          {"0", "0", 
           RowBox[{"-", 
            FractionBox["\[ImaginaryI]", "2"]}], "0", "0", "0", "0", "0"},
          {"0", "0", 
           RowBox[{"-", "\[ImaginaryI]"}], "0", "0", "0", "0", "0"}
         },
         GridBoxAlignment->{
          "Columns" -> {{Decimal}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}]},
      {
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "0", "0", 
           FractionBox["\[ImaginaryI]", "2"], "0", "0", "0", "0"},
          {"0", "0", 
           RowBox[{"-", 
            FractionBox["\[ImaginaryI]", "2"]}], "0", "0", "0", "0", "0"},
          {"0", 
           FractionBox["\[ImaginaryI]", "2"], "0", "0", "0", "0", "0", "0"},
          {
           RowBox[{"-", 
            FractionBox["\[ImaginaryI]", "2"]}], "0", "0", "0", "0", "0", "0",
            "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", 
           FractionBox["\[ImaginaryI]", "2"], 
           RowBox[{"-", "\[ImaginaryI]"}]},
          {"0", "0", "0", "0", "0", 
           RowBox[{"-", 
            FractionBox["\[ImaginaryI]", "2"]}], "0", "0"},
          {"0", "0", "0", "0", "0", "\[ImaginaryI]", "0", "0"}
         },
         GridBoxAlignment->{
          "Columns" -> {{Decimal}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "0", 
           RowBox[{"-", 
            FractionBox["\[ImaginaryI]", "2"]}], "0", "0", "0", "0", "0"},
          {"0", "0", "0", 
           RowBox[{"-", 
            FractionBox["\[ImaginaryI]", "2"]}], "0", "0", "0", "0"},
          {
           FractionBox["\[ImaginaryI]", "2"], "0", "0", "0", "0", "0", "0", 
           "0"},
          {"0", 
           FractionBox["\[ImaginaryI]", "2"], "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", 
           RowBox[{"-", 
            FractionBox["\[ImaginaryI]", "2"]}], "\[ImaginaryI]"},
          {"0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", 
           FractionBox["\[ImaginaryI]", "2"], "0", "0", "0"},
          {"0", "0", "0", "0", 
           RowBox[{"-", "\[ImaginaryI]"}], "0", "0", "0"}
         },
         GridBoxAlignment->{
          "Columns" -> {{Decimal}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}]},
      {
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", 
           RowBox[{"-", "\[ImaginaryI]"}], "0", "0", "0", "0", "0", "0"},
          {"\[ImaginaryI]", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", 
           RowBox[{"-", 
            FractionBox["\[ImaginaryI]", "2"]}], "0", "0", "0", "0"},
          {"0", "0", 
           FractionBox["\[ImaginaryI]", "2"], "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", 
           FractionBox["\[ImaginaryI]", "2"], "0", "0"},
          {"0", "0", "0", "0", 
           RowBox[{"-", 
            FractionBox["\[ImaginaryI]", "2"]}], "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0"}
         },
         GridBoxAlignment->{
          "Columns" -> {{Decimal}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", 
           RowBox[{"-", "\[ImaginaryI]"}], "0", "0", "0", "0"},
          {"0", "0", "\[ImaginaryI]", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", 
           RowBox[{"-", "\[ImaginaryI]"}], "0", "0"},
          {"0", "0", "0", "0", "\[ImaginaryI]", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0"}
         },
         GridBoxAlignment->{
          "Columns" -> {{Decimal}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}}], "\[NoBreak]", 
        ")"}]}
     }], "\[NoBreak]", ")"}],
   MatrixForm[{{{{0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 
        Complex[0, -1], 0}, {0, 0, 0, 0, 0, 
        Complex[0, 
         Rational[-1, 2]], 0, 0}, {0, 0, 0, 0, 
        Complex[0, 
         Rational[1, 2]], 0, 0, 0}, {0, 0, 0, 
        Complex[0, 
         Rational[-1, 2]], 0, 0, 0, 0}, {0, 0, 
        Complex[0, 
         Rational[1, 2]], 0, 0, 0, 0, 0}, {0, 
        Complex[0, 1], 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0}}, {{
       0, 0, 0, 0, 0, 0, 
        Complex[0, 1], 0}, {0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 
        Complex[0, 
         Rational[-1, 2]], 0, 0, 0}, {0, 0, 0, 0, 0, 
        Complex[0, 
         Rational[-1, 2]], 0, 0}, {0, 0, 
        Complex[0, 
         Rational[1, 2]], 0, 0, 0, 0, 0}, {0, 0, 0, 
        Complex[0, 
         Rational[1, 2]], 0, 0, 0, 0}, {
        Complex[0, -1], 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0}}}, {{{
       0, 0, 0, 0, 0, 
        Complex[0, 
         Rational[1, 2]], 0, 0}, {0, 0, 0, 0, 
        Complex[0, 
         Rational[1, 2]], 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0}, {
       0, 0, 0, 0, 0, 0, 
        Complex[0, 
         Rational[-1, 2]], 
        Complex[0, -1]}, {0, 
        Complex[0, 
         Rational[-1, 2]], 0, 0, 0, 0, 0, 0}, {
        Complex[0, 
         Rational[-1, 2]], 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 
        Complex[0, 
         Rational[1, 2]], 0, 0, 0, 0}, {0, 0, 0, 
        Complex[0, 1], 0, 0, 0, 0}}, {{0, 0, 0, 0, 
        Complex[0, 
         Rational[-1, 2]], 0, 0, 0}, {0, 0, 0, 0, 0, 
        Complex[0, 
         Rational[1, 2]], 0, 0}, {0, 0, 0, 0, 0, 0, 
        Complex[0, 
         Rational[1, 2]], 
        Complex[0, 1]}, {0, 0, 0, 0, 0, 0, 0, 0}, {
        Complex[0, 
         Rational[1, 2]], 0, 0, 0, 0, 0, 0, 0}, {0, 
        Complex[0, 
         Rational[-1, 2]], 0, 0, 0, 0, 0, 0}, {0, 0, 
        Complex[0, 
         Rational[-1, 2]], 0, 0, 0, 0, 0}, {0, 0, 
        Complex[0, -1], 0, 0, 0, 0, 0}}}, {{{0, 0, 0, 
        Complex[0, 
         Rational[1, 2]], 0, 0, 0, 0}, {0, 0, 
        Complex[0, 
         Rational[-1, 2]], 0, 0, 0, 0, 0}, {0, 
        Complex[0, 
         Rational[1, 2]], 0, 0, 0, 0, 0, 0}, {
        Complex[0, 
         Rational[-1, 2]], 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0}, {
       0, 0, 0, 0, 0, 0, 
        Complex[0, 
         Rational[1, 2]], 
        Complex[0, -1]}, {0, 0, 0, 0, 0, 
        Complex[0, 
         Rational[-1, 2]], 0, 0}, {0, 0, 0, 0, 0, 
        Complex[0, 1], 0, 0}}, {{0, 0, 
        Complex[0, 
         Rational[-1, 2]], 0, 0, 0, 0, 0}, {0, 0, 0, 
        Complex[0, 
         Rational[-1, 2]], 0, 0, 0, 0}, {
        Complex[0, 
         Rational[1, 2]], 0, 0, 0, 0, 0, 0, 0}, {0, 
        Complex[0, 
         Rational[1, 2]], 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 
        Complex[0, 
         Rational[-1, 2]], 
        Complex[0, 1]}, {0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 
        Complex[0, 
         Rational[1, 2]], 0, 0, 0}, {0, 0, 0, 0, 
        Complex[0, -1], 0, 0, 0}}}, {{{0, 
        Complex[0, -1], 0, 0, 0, 0, 0, 0}, {
        Complex[0, 1], 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 
        Complex[0, 
         Rational[-1, 2]], 0, 0, 0, 0}, {0, 0, 
        Complex[0, 
         Rational[1, 2]], 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 
        Complex[0, 
         Rational[1, 2]], 0, 0}, {0, 0, 0, 0, 
        Complex[0, 
         Rational[-1, 2]], 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0,
        0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0}, {
       0, 0, 0, 
        Complex[0, -1], 0, 0, 0, 0}, {0, 0, 
        Complex[0, 1], 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 
        Complex[0, -1], 0, 0}, {0, 0, 0, 0, 
        Complex[0, 1], 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 
       0, 0}}}}]], TraditionalForm]], "Output"]
}, Open  ]],

Cell["\<\
The first and fourth generators commute in the original representation and \
therefore commute in its adjoint representation\
\>", "Text"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"MCommutator", "[", " ", 
  RowBox[{
   RowBox[{"F\[DoubleStruckD]td", "[", 
    RowBox[{"red", "@", "7"}], "]"}], " ", ",", " ", 
   RowBox[{"F\[DoubleStruckD]td", "[", 
    RowBox[{"red", "@", "8"}], "]"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"%", "/.", 
  RowBox[{"TensorValueRules", "[", "F\[DoubleStruckD]t", "]"}]}]}], "Input"],

Cell[BoxData[
 FormBox[
  InterpretationBox[
   RowBox[{"[", 
    InterpretationBox[
     SubsuperscriptBox[
      InterpretationBox[
       InterpretationBox[
        SuperscriptBox["F\[DoubleStruckD]", 
         FormBox[
          TagBox[
           StyleBox["T",
            FontColor->RGBColor[1, 0, 0]],
           StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
          TraditionalForm]],
        Superscript[F\[DoubleStruckD], 
         red[T]],
        Editable->False],
       F\[DoubleStruckD]t,
       Editable->False], 
      FormBox[
       TagBox[
        StyleBox["7",
         FontColor->RGBColor[1, 0, 0]],
        StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
       TraditionalForm], 
      TagBox[
       StyleBox[
        FormBox[
         TagBox[
          StyleBox["7",
           FontColor->RGBColor[1, 0, 0]],
          StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
         TraditionalForm],
        ShowContents->False],
       StyleForm[#, ShowContents -> False]& ]],
     Tensor[F\[DoubleStruckD]t, {Void}, {
       red[7]}],
     Editable->False], ",", 
    InterpretationBox[
     SubsuperscriptBox[
      InterpretationBox[
       InterpretationBox[
        SuperscriptBox["F\[DoubleStruckD]", 
         FormBox[
          TagBox[
           StyleBox["T",
            FontColor->RGBColor[1, 0, 0]],
           StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
          TraditionalForm]],
        Superscript[F\[DoubleStruckD], 
         red[T]],
        Editable->False],
       F\[DoubleStruckD]t,
       Editable->False], 
      FormBox[
       TagBox[
        StyleBox["8",
         FontColor->RGBColor[1, 0, 0]],
        StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
       TraditionalForm], 
      TagBox[
       StyleBox[
        FormBox[
         TagBox[
          StyleBox["8",
           FontColor->RGBColor[1, 0, 0]],
          StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
         TraditionalForm],
        ShowContents->False],
       StyleForm[#, ShowContents -> False]& ]],
     Tensor[F\[DoubleStruckD]t, {Void}, {
       red[8]}],
     Editable->False], "]"}],
   MCommutator[
    Tensor[F\[DoubleStruckD]t, {Void}, {
      red[7]}], 
    Tensor[F\[DoubleStruckD]t, {Void}, {
      red[8]}]],
   SyntaxForm->"Times"], TraditionalForm]], "Output"],

Cell[BoxData[
 FormBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0", "0", "0", "0", "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Decimal}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}},
       "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], TraditionalForm]], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"MCommutator", "[", " ", 
  RowBox[{
   RowBox[{"Fd", "[", 
    RowBox[{"red", "@", "7"}], "]"}], " ", ",", " ", 
   RowBox[{"Fd", "[", 
    RowBox[{"red", "@", "8"}], "]"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"%", "/.", 
  RowBox[{"TensorValueRules", "[", "F", "]"}]}]}], "Input"],

Cell[BoxData[
 FormBox[
  InterpretationBox[
   RowBox[{"[", 
    InterpretationBox[
     SubsuperscriptBox["F", 
      FormBox[
       TagBox[
        StyleBox["7",
         FontColor->RGBColor[1, 0, 0]],
        StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
       TraditionalForm], 
      TagBox[
       StyleBox[
        FormBox[
         TagBox[
          StyleBox["7",
           FontColor->RGBColor[1, 0, 0]],
          StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
         TraditionalForm],
        ShowContents->False],
       StyleForm[#, ShowContents -> False]& ]],
     Tensor[F, {Void}, {
       red[7]}],
     Editable->False], ",", 
    InterpretationBox[
     SubsuperscriptBox["F", 
      FormBox[
       TagBox[
        StyleBox["8",
         FontColor->RGBColor[1, 0, 0]],
        StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
       TraditionalForm], 
      TagBox[
       StyleBox[
        FormBox[
         TagBox[
          StyleBox["8",
           FontColor->RGBColor[1, 0, 0]],
          StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
         TraditionalForm],
        ShowContents->False],
       StyleForm[#, ShowContents -> False]& ]],
     Tensor[F, {Void}, {
       red[8]}],
     Editable->False], "]"}],
   MCommutator[
    Tensor[F, {Void}, {
      red[7]}], 
    Tensor[F, {Void}, {
      red[8]}]],
   SyntaxForm->"Times"], TraditionalForm]], "Output"],

Cell[BoxData[
 FormBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0", "0", "0"},
     {"0", "0", "0"},
     {"0", "0", "0"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Decimal}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}},
       "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], TraditionalForm]], "Output"]
}, Open  ]],

Cell["\<\
\[GrayCircle] Definition: The space of the mutually commuting generators is \
defined as the Cartan subalgebra and a each of the generators of a given \
basis is called weight generator.

\[GrayCircle] Definition: The maximum number of mutually commuting generators \
is defined as the rank of the Lie algebra. \
\>", "EmphasisText"],

Cell[TextData[{
 "Based in the definition we say that ",
 Cell[BoxData[
  FormBox[
   RowBox[{"{", 
    RowBox[{
     InterpretationBox[
      SubsuperscriptBox["F", 
       FormBox[
        TagBox[
         StyleBox["3",
          FontColor->RGBColor[1, 0, 0]],
         StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
        TraditionalForm], 
       TagBox[
        StyleBox[
         FormBox[
          TagBox[
           StyleBox["3",
            FontColor->RGBColor[1, 0, 0]],
           StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
          TraditionalForm],
         ShowContents->False],
        StyleForm[#, ShowContents -> False]& ]],
      Tensor[F, {Void}, {
        red[3]}],
      Editable->False], ",", 
     InterpretationBox[
      SubsuperscriptBox["F", 
       FormBox[
        TagBox[
         StyleBox["8",
          FontColor->RGBColor[1, 0, 0]],
         StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
        TraditionalForm], 
       TagBox[
        StyleBox[
         FormBox[
          TagBox[
           StyleBox["8",
            FontColor->RGBColor[1, 0, 0]],
           StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
          TraditionalForm],
         ShowContents->False],
        StyleForm[#, ShowContents -> False]& ]],
      Tensor[F, {Void}, {
        red[8]}],
      Editable->False]}], "}"}], TraditionalForm]]],
 " form a basis of the Cartan subalgebra of rank 2."
}], "Text"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Diagonalization of the Cartan basis. Root vectors.", "Subsection"],

Cell["\<\
\[GrayCircle] Definition: The representation where the adjoint representation \
of the Cartan subalgebra is defined as the canonical representation.\
\>", "EmphasisText"],

Cell["\<\
The basis of the Cartan subalgebra in the adjoint representation are not \
diagonal despite that they commute. However this ensures that they can be \
simultaneously diagonalized. \
\>", "Text"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"F\[DoubleStruckD]td", "[", 
     RowBox[{"red", "@", "7"}], "]"}], ",", 
    RowBox[{"F\[DoubleStruckD]td", "[", 
     RowBox[{"red", "@", "8"}], "]"}]}], "}"}], 
  "}"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"%", "/.", 
   RowBox[{"TensorValueRules", "[", "F\[DoubleStruckD]t", "]"}]}], "//", 
  "MatrixForm"}]}], "Input"],

Cell[BoxData[
 FormBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      InterpretationBox[
       SubsuperscriptBox[
        InterpretationBox[
         SuperscriptBox["F\[DoubleStruckD]", 
          FormBox[
           StyleBox["T",
            FontColor->RGBColor[1, 0, 0]],
           TraditionalForm]],
         F\[DoubleStruckD]t,
         Editable->False], 
        FormBox[
         StyleBox["7",
          FontColor->RGBColor[1, 0, 0]],
         TraditionalForm], 
        StyleBox[
         FormBox[
          StyleBox["7",
           FontColor->RGBColor[1, 0, 0]],
          TraditionalForm],
         ShowContents->False]],
       Tensor[F\[DoubleStruckD]t, {Void}, {
         red[7]}],
       Editable->False], 
      InterpretationBox[
       SubsuperscriptBox[
        InterpretationBox[
         SuperscriptBox["F\[DoubleStruckD]", 
          FormBox[
           StyleBox["T",
            FontColor->RGBColor[1, 0, 0]],
           TraditionalForm]],
         F\[DoubleStruckD]t,
         Editable->False], 
        FormBox[
         StyleBox["8",
          FontColor->RGBColor[1, 0, 0]],
         TraditionalForm], 
        StyleBox[
         FormBox[
          StyleBox["8",
           FontColor->RGBColor[1, 0, 0]],
          TraditionalForm],
         ShowContents->False]],
       Tensor[F\[DoubleStruckD]t, {Void}, {
         red[8]}],
       Editable->False]}
    }], "\[NoBreak]", ")"}], TraditionalForm]], "Output"],

Cell[BoxData[
 FormBox[
  InterpretationBox[
   RowBox[{"(", "\[NoBreak]", GridBox[{
      {
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", 
           RowBox[{"-", "\[ImaginaryI]"}], "0", "0", "0", "0", "0", "0"},
          {"\[ImaginaryI]", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", 
           RowBox[{"-", 
            FractionBox["\[ImaginaryI]", "2"]}], "0", "0", "0", "0"},
          {"0", "0", 
           FractionBox["\[ImaginaryI]", "2"], "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", 
           FractionBox["\[ImaginaryI]", "2"], "0", "0"},
          {"0", "0", "0", "0", 
           RowBox[{"-", 
            FractionBox["\[ImaginaryI]", "2"]}], "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0"}
         },
         GridBoxAlignment->{
          "Columns" -> {{Decimal}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", 
           RowBox[{"-", "\[ImaginaryI]"}], "0", "0", "0", "0"},
          {"0", "0", "\[ImaginaryI]", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", 
           RowBox[{"-", "\[ImaginaryI]"}], "0", "0"},
          {"0", "0", "0", "0", "\[ImaginaryI]", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0"}
         },
         GridBoxAlignment->{
          "Columns" -> {{Decimal}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}}], "\[NoBreak]", 
        ")"}]}
     }], "\[NoBreak]", ")"}],
   MatrixForm[{{{{0, 
        Complex[0, -1], 0, 0, 0, 0, 0, 0}, {
        Complex[0, 1], 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 
        Complex[0, 
         Rational[-1, 2]], 0, 0, 0, 0}, {0, 0, 
        Complex[0, 
         Rational[1, 2]], 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 
        Complex[0, 
         Rational[1, 2]], 0, 0}, {0, 0, 0, 0, 
        Complex[0, 
         Rational[-1, 2]], 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0,
        0, 0, 0}}, {{0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0}, {
       0, 0, 0, 
        Complex[0, -1], 0, 0, 0, 0}, {0, 0, 
        Complex[0, 1], 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 
        Complex[0, -1], 0, 0}, {0, 0, 0, 0, 
        Complex[0, 1], 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 
       0, 0}}}}]], TraditionalForm]], "Output"]
}, Open  ]],

Cell[TextData[{
 "Diagonalizing ",
 Cell[BoxData[
  FormBox[
   SubsuperscriptBox[
    InterpretationBox[
     SuperscriptBox["F\[DoubleStruckD]", 
      FormBox[
       StyleBox["T",
        FontColor->RGBColor[1, 0, 0]],
       TraditionalForm]],
     F\[DoubleStruckD]t,
     Editable->False], 
    FormBox[
     StyleBox["3",
      FontColor->RGBColor[1, 0, 0]],
     TraditionalForm], 
    StyleBox[
     FormBox[
      StyleBox["3",
       FontColor->RGBColor[1, 0, 0]],
      TraditionalForm],
     ShowContents->False]], TraditionalForm]]],
 " by using the following transformation matrix"
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{"preU1", "=", 
    RowBox[{"Eigenvectors", "[", 
     RowBox[{
      RowBox[{"F\[DoubleStruckD]td", "[", 
       RowBox[{"red", "@", "7"}], "]"}], "/.", 
      RowBox[{"TensorValueRules", "[", "F\[DoubleStruckD]t", "]"}]}], "]"}]}],
    ")"}], "//", "MatrixForm"}]], "Input"],

Cell[BoxData[
 FormBox[
  TagBox[
   RowBox[{"(", "\[NoBreak]", GridBox[{
      {"\[ImaginaryI]", "1", "0", "0", "0", "0", "0", "0"},
      {
       RowBox[{"-", "\[ImaginaryI]"}], "1", "0", "0", "0", "0", "0", "0"},
      {"0", "0", "0", "0", 
       RowBox[{"-", "\[ImaginaryI]"}], "1", "0", "0"},
      {"0", "0", "\[ImaginaryI]", "1", "0", "0", "0", "0"},
      {"0", "0", "0", "0", "\[ImaginaryI]", "1", "0", "0"},
      {"0", "0", 
       RowBox[{"-", "\[ImaginaryI]"}], "1", "0", "0", "0", "0"},
      {"0", "0", "0", "0", "0", "0", "0", "1"},
      {"0", "0", "0", "0", "0", "0", "1", "0"}
     },
     GridBoxAlignment->{
      "Columns" -> {{Decimal}}, "ColumnsIndexed" -> {}, 
       "Rows" -> {{Baseline}}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
   Function[BoxForm`e$, 
    MatrixForm[BoxForm`e$]]], TraditionalForm]], "Output"]
}, Open  ]],

Cell["\<\
where we arranged the rows such that the diagonal contains zeros in the third \
and seventh places.\
\>", "Text"],

Cell["Normalizing the transformation matrix", "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{"U1", "=", 
    RowBox[{"Transpose", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"#", "/", 
        RowBox[{"Sqrt", "[", 
         RowBox[{"#", ".", 
          RowBox[{"Conjugate", "[", "#", "]"}]}], "]"}]}], "&"}], "/@", 
      "preU1"}], "]"}]}], ")"}], "//", "MatrixForm"}]], "Input"],

Cell[BoxData[
 FormBox[
  TagBox[
   RowBox[{"(", "\[NoBreak]", GridBox[{
      {
       FractionBox["\[ImaginaryI]", 
        SqrtBox["2"]], 
       RowBox[{"-", 
        FractionBox["\[ImaginaryI]", 
         SqrtBox["2"]]}], "0", "0", "0", "0", "0", "0"},
      {
       FractionBox["1", 
        SqrtBox["2"]], 
       FractionBox["1", 
        SqrtBox["2"]], "0", "0", "0", "0", "0", "0"},
      {"0", "0", "0", 
       FractionBox["\[ImaginaryI]", 
        SqrtBox["2"]], "0", 
       RowBox[{"-", 
        FractionBox["\[ImaginaryI]", 
         SqrtBox["2"]]}], "0", "0"},
      {"0", "0", "0", 
       FractionBox["1", 
        SqrtBox["2"]], "0", 
       FractionBox["1", 
        SqrtBox["2"]], "0", "0"},
      {"0", "0", 
       RowBox[{"-", 
        FractionBox["\[ImaginaryI]", 
         SqrtBox["2"]]}], "0", 
       FractionBox["\[ImaginaryI]", 
        SqrtBox["2"]], "0", "0", "0"},
      {"0", "0", 
       FractionBox["1", 
        SqrtBox["2"]], "0", 
       FractionBox["1", 
        SqrtBox["2"]], "0", "0", "0"},
      {"0", "0", "0", "0", "0", "0", "0", "1"},
      {"0", "0", "0", "0", "0", "0", "1", "0"}
     }], "\[NoBreak]", ")"}],
   Function[BoxForm`e$, 
    MatrixForm[BoxForm`e$]]], TraditionalForm]], "Output"]
}, Open  ]],

Cell["\<\
This single transformation actually diagonalizes both by lucky accident. The \
following matrices are the adjoint canonical representation of the Cartan \
subalgebra.\
\>", "Text"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"{", 
  RowBox[{
   RowBox[{"F\[DoubleStruckD]td", "[", 
    RowBox[{"red", "@", "7"}], "]"}], ",", 
   RowBox[{"F\[DoubleStruckD]td", "[", 
    RowBox[{"red", "@", "8"}], "]"}]}], "}"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"{", 
   RowBox[{"CartanAdjointCanonical", "=", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"Inverse", "[", "U1", "]"}], ".", 
       RowBox[{"(", 
        RowBox[{"#", "/.", 
         RowBox[{"TensorValueRules", "[", "F\[DoubleStruckD]t", "]"}]}], 
        ")"}], ".", "U1"}], "&"}], "/@", "%"}]}], "}"}], "//", 
  "MatrixForm"}]}], "Input"],

Cell[BoxData[
 FormBox[
  RowBox[{"{", 
   RowBox[{
    InterpretationBox[
     SubsuperscriptBox[
      InterpretationBox[
       InterpretationBox[
        SuperscriptBox["F\[DoubleStruckD]", 
         FormBox[
          TagBox[
           StyleBox["T",
            FontColor->RGBColor[1, 0, 0]],
           StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
          TraditionalForm]],
        Superscript[F\[DoubleStruckD], 
         red[T]],
        Editable->False],
       F\[DoubleStruckD]t,
       Editable->False], 
      FormBox[
       TagBox[
        StyleBox["7",
         FontColor->RGBColor[1, 0, 0]],
        StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
       TraditionalForm], 
      TagBox[
       StyleBox[
        FormBox[
         TagBox[
          StyleBox["7",
           FontColor->RGBColor[1, 0, 0]],
          StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
         TraditionalForm],
        ShowContents->False],
       StyleForm[#, ShowContents -> False]& ]],
     Tensor[F\[DoubleStruckD]t, {Void}, {
       red[7]}],
     Editable->False], ",", 
    InterpretationBox[
     SubsuperscriptBox[
      InterpretationBox[
       InterpretationBox[
        SuperscriptBox["F\[DoubleStruckD]", 
         FormBox[
          TagBox[
           StyleBox["T",
            FontColor->RGBColor[1, 0, 0]],
           StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
          TraditionalForm]],
        Superscript[F\[DoubleStruckD], 
         red[T]],
        Editable->False],
       F\[DoubleStruckD]t,
       Editable->False], 
      FormBox[
       TagBox[
        StyleBox["8",
         FontColor->RGBColor[1, 0, 0]],
        StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
       TraditionalForm], 
      TagBox[
       StyleBox[
        FormBox[
         TagBox[
          StyleBox["8",
           FontColor->RGBColor[1, 0, 0]],
          StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
         TraditionalForm],
        ShowContents->False],
       StyleForm[#, ShowContents -> False]& ]],
     Tensor[F\[DoubleStruckD]t, {Void}, {
       red[8]}],
     Editable->False]}], "}"}], TraditionalForm]], "Output"],

Cell[BoxData[
 FormBox[
  InterpretationBox[
   RowBox[{"(", "\[NoBreak]", GridBox[{
      {
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {
           RowBox[{"-", "1"}], "0", "0", "0", "0", "0", "0", "0"},
          {"0", "1", "0", "0", "0", "0", "0", "0"},
          {"0", "0", 
           RowBox[{"-", 
            FractionBox["1", "2"]}], "0", "0", "0", "0", "0"},
          {"0", "0", "0", 
           RowBox[{"-", 
            FractionBox["1", "2"]}], "0", "0", "0", "0"},
          {"0", "0", "0", "0", 
           FractionBox["1", "2"], "0", "0", "0"},
          {"0", "0", "0", "0", "0", 
           FractionBox["1", "2"], "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0"}
         },
         GridBoxAlignment->{
          "Columns" -> {{Decimal}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "1", "0", "0", "0", "0", "0"},
          {"0", "0", "0", 
           RowBox[{"-", "1"}], "0", "0", "0", "0"},
          {"0", "0", "0", "0", 
           RowBox[{"-", "1"}], "0", "0", "0"},
          {"0", "0", "0", "0", "0", "1", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0"},
          {"0", "0", "0", "0", "0", "0", "0", "0"}
         },
         GridBoxAlignment->{
          "Columns" -> {{Decimal}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}}], "\[NoBreak]", 
        ")"}]}
     }], "\[NoBreak]", ")"}],
   MatrixForm[{{{{-1, 0, 0, 0, 0, 0, 0, 0}, {0, 1, 0, 0, 0, 0, 0, 0}, {0, 0, 
        Rational[-1, 2], 0, 0, 0, 0, 0}, {0, 0, 0, 
        Rational[-1, 2], 0, 0, 0, 0}, {0, 0, 0, 0, 
        Rational[1, 2], 0, 0, 0}, {0, 0, 0, 0, 0, 
        Rational[1, 2], 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0,
        0}}, {{0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 1, 0,
       0, 0, 0, 0}, {0, 0, 0, -1, 0, 0, 0, 0}, {0, 0, 0, 0, -1, 0, 0, 0}, {0, 
      0, 0, 0, 0, 1, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 
      0}}}}]], TraditionalForm]], "Output"]
}, Open  ]],

Cell["\<\
In the general case we have to work a little bit harder and proceed to make a \
sequence of diagonalizations.\
\>", "Text"],

Cell["\<\
\[GrayCircle] Definition: Root vectors are the multiplets formed by taking \
the diagonal elements of the adjoint canonical representation different from \
zero. \
\>", "EmphasisText"],

Cell["The vectors made from the diagonals after being ordered are", "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DiagonalVectors", " ", "=", " ", 
  RowBox[{"Reverse", "@", 
   RowBox[{"Sort", "@", 
    RowBox[{"Tr", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"MapThread", "[", 
       RowBox[{"List", ",", "CartanAdjointCanonical", ",", "2"}], "]"}], ",", 
      "List", ",", "2"}], "]"}]}]}]}]], "Input"],

Cell[BoxData[
 FormBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"1", "0"},
     {
      FractionBox["1", "2"], "1"},
     {
      FractionBox["1", "2"], 
      RowBox[{"-", "1"}]},
     {"0", "0"},
     {"0", "0"},
     {
      RowBox[{"-", 
       FractionBox["1", "2"]}], "1"},
     {
      RowBox[{"-", 
       FractionBox["1", "2"]}], 
      RowBox[{"-", "1"}]},
     {
      RowBox[{"-", "1"}], "0"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Decimal}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}},
       "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], TraditionalForm]], "Output"]
}, Open  ]],

Cell["The root vectors are those different from zero", "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RootVectors", " ", "=", 
  RowBox[{"DiagonalVectors", "/.", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}], "\[Rule]", " ", 
    RowBox[{"Sequence", "[", "]"}]}]}]}]], "Input"],

Cell[BoxData[
 FormBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"1", "0"},
     {
      FractionBox["1", "2"], "1"},
     {
      FractionBox["1", "2"], 
      RowBox[{"-", "1"}]},
     {
      RowBox[{"-", 
       FractionBox["1", "2"]}], "1"},
     {
      RowBox[{"-", 
       FractionBox["1", "2"]}], 
      RowBox[{"-", "1"}]},
     {
      RowBox[{"-", "1"}], "0"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Decimal}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}},
       "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], TraditionalForm]], "Output"]
}, Open  ]],

Cell["\<\
\[GrayCircle] Definition: Positive root vectors are a subset of the root \
vectors made by eliminating half of them such that there is no root vector \
along with its opposite. Additionally, the chosen root vectors are such that \
they have as few negative components as  possible.\
\>", "EmphasisText"],

Cell["The positive root vectors are only half of them", "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PositiveRootVectors", "=", 
  RowBox[{"Drop", "[", 
   RowBox[{"RootVectors", ",", 
    RowBox[{"-", "3"}]}], "]"}]}]], "Input"],

Cell[BoxData[
 FormBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"1", "0"},
     {
      FractionBox["1", "2"], "1"},
     {
      FractionBox["1", "2"], 
      RowBox[{"-", "1"}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Decimal}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}},
       "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], TraditionalForm]], "Output"]
}, Open  ]],

Cell["\<\
\[GrayCircle] Definition: Simple roots are defined as those root vectors that \
can form a complete basis for all the remaining root vectors such that the \
linear combinations are constrained to be given by positive integers.\
\>", "EmphasisText"],

Cell[TextData[{
 "The following is the list of the simple roots calculated by using the \
function ",
 Cell[BoxData[
  FormBox["FindSimpleRootVectors", TraditionalForm]]],
 " "
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SimpleRoots", "=", 
  RowBox[{"Catch", "@", 
   RowBox[{
   "FindSimpleRootVectors", "[", "PositiveRootVectors", "]"}]}]}]], "Input"],

Cell[BoxData[
 FormBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      FractionBox["1", "2"], "1"},
     {
      FractionBox["1", "2"], 
      RowBox[{"-", "1"}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Decimal}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}},
       "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], TraditionalForm]], "Output"]
}, Open  ]],

Cell["\<\
Following these results we define two global variables containing the indices \
of the reduced roots and simple roots\
\>", "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PositiveRootIndices", "=", 
  RowBox[{"Flatten", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Position", "[", 
      RowBox[{"RootVectors", ",", "#"}], "]"}], "&"}], "/@", 
    "PositiveRootVectors"}], "]"}]}]], "Input"],

Cell[BoxData[
 FormBox[
  RowBox[{"{", 
   RowBox[{"1", ",", "2", ",", "3"}], "}"}], TraditionalForm]], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SimpleRootIndices", "=", 
  RowBox[{"Flatten", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Position", "[", 
      RowBox[{"RootVectors", ",", "#"}], "]"}], "&"}], "/@", "SimpleRoots"}], 
   "]"}]}]], "Input"],

Cell[BoxData[
 FormBox[
  RowBox[{"{", 
   RowBox[{"2", ",", "3"}], "}"}], TraditionalForm]], "Output"]
}, Open  ]],

Cell[TextData[{
 "Finally we set value rules to ",
 Cell[BoxData[
  FormBox[
   InterpretationBox[
    SubsuperscriptBox["\[Alpha]", 
     FormBox[
      TagBox[
       StyleBox["i",
        FontColor->RGBColor[1, 0, 0]],
       StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
      TraditionalForm], 
     TagBox[
      StyleBox[
       FormBox[
        TagBox[
         StyleBox["i",
          FontColor->RGBColor[1, 0, 0]],
         StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
        TraditionalForm],
       ShowContents->False],
      StyleForm[#, ShowContents -> False]& ]],
    Tensor[\[Alpha], {Void}, {
      red[i]}],
    Editable->False], TraditionalForm]]]
}], "Text"],

Cell[BoxData[
 RowBox[{
  RowBox[{"SetTensorValueRules", "[", 
   RowBox[{
    RowBox[{"\[Alpha]d", "[", 
     RowBox[{"red", "@", "i"}], "]"}], ",", 
    RowBox[{"Join", "[", 
     RowBox[{"PositiveRootVectors", ",", 
      RowBox[{"-", "PositiveRootVectors"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0"}], "}"}]}], "]"}], ",", "True"}], "]"}], 
  ";"}]], "Input"],

Cell["and defining the list of the root indices", "Text"],

Cell[BoxData[
 RowBox[{
  RowBox[{"RootIndices", "=", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6"}], "}"}]}], 
  ";"}]], "Input"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Calculating the canonical presentation.", "Subsection"],

Cell["\<\
A general superposition of the generators without the weight generators is\
\>", "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"GRule", " ", "=", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"G", "\[Rule]", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"au", "[", 
         RowBox[{"red", "@", "i"}], "]"}], 
        RowBox[{"Fd", "[", 
         RowBox[{"red", "@", "i"}], "]"}]}], "//", 
       RowBox[{"EinsteinSum", "[", "RootIndices", "]"}]}], ")"}]}], "/.", 
    RowBox[{"TensorValueRules", "[", "F", "]"}]}], ")"}]}]], "Input"],

Cell[BoxData[
 FormBox[
  RowBox[{"G", "\[Rule]", 
   RowBox[{"(", "\[NoBreak]", GridBox[{
      {"0", 
       RowBox[{
        FractionBox[
         InterpretationBox[
          SubsuperscriptBox["a", 
           StyleBox[
            FormBox[
             StyleBox["1",
              FontColor->RGBColor[1, 0, 0]],
             TraditionalForm],
            ShowContents->False], 
           FormBox[
            StyleBox["1",
             FontColor->RGBColor[1, 0, 0]],
            TraditionalForm]],
          Tensor[a, {
            red[1]}, {Void}],
          Editable->False], "2"], "-", 
        FractionBox[
         RowBox[{"\[ImaginaryI]", " ", 
          InterpretationBox[
           SubsuperscriptBox["a", 
            StyleBox[
             FormBox[
              StyleBox["2",
               FontColor->RGBColor[1, 0, 0]],
              TraditionalForm],
             ShowContents->False], 
            FormBox[
             StyleBox["2",
              FontColor->RGBColor[1, 0, 0]],
             TraditionalForm]],
           Tensor[a, {
             red[2]}, {Void}],
           Editable->False]}], "2"]}], 
       RowBox[{
        FractionBox[
         InterpretationBox[
          SubsuperscriptBox["a", 
           StyleBox[
            FormBox[
             StyleBox["3",
              FontColor->RGBColor[1, 0, 0]],
             TraditionalForm],
            ShowContents->False], 
           FormBox[
            StyleBox["3",
             FontColor->RGBColor[1, 0, 0]],
            TraditionalForm]],
          Tensor[a, {
            red[3]}, {Void}],
          Editable->False], "2"], "-", 
        FractionBox[
         RowBox[{"\[ImaginaryI]", " ", 
          InterpretationBox[
           SubsuperscriptBox["a", 
            StyleBox[
             FormBox[
              StyleBox["4",
               FontColor->RGBColor[1, 0, 0]],
              TraditionalForm],
             ShowContents->False], 
            FormBox[
             StyleBox["4",
              FontColor->RGBColor[1, 0, 0]],
             TraditionalForm]],
           Tensor[a, {
             red[4]}, {Void}],
           Editable->False]}], "2"]}]},
      {
       RowBox[{
        FractionBox[
         InterpretationBox[
          SubsuperscriptBox["a", 
           StyleBox[
            FormBox[
             StyleBox["1",
              FontColor->RGBColor[1, 0, 0]],
             TraditionalForm],
            ShowContents->False], 
           FormBox[
            StyleBox["1",
             FontColor->RGBColor[1, 0, 0]],
            TraditionalForm]],
          Tensor[a, {
            red[1]}, {Void}],
          Editable->False], "2"], "+", 
        FractionBox[
         RowBox[{"\[ImaginaryI]", " ", 
          InterpretationBox[
           SubsuperscriptBox["a", 
            StyleBox[
             FormBox[
              StyleBox["2",
               FontColor->RGBColor[1, 0, 0]],
              TraditionalForm],
             ShowContents->False], 
            FormBox[
             StyleBox["2",
              FontColor->RGBColor[1, 0, 0]],
             TraditionalForm]],
           Tensor[a, {
             red[2]}, {Void}],
           Editable->False]}], "2"]}], "0", 
       RowBox[{
        FractionBox[
         InterpretationBox[
          SubsuperscriptBox["a", 
           StyleBox[
            FormBox[
             StyleBox["5",
              FontColor->RGBColor[1, 0, 0]],
             TraditionalForm],
            ShowContents->False], 
           FormBox[
            StyleBox["5",
             FontColor->RGBColor[1, 0, 0]],
            TraditionalForm]],
          Tensor[a, {
            red[5]}, {Void}],
          Editable->False], "2"], "-", 
        FractionBox[
         RowBox[{"\[ImaginaryI]", " ", 
          InterpretationBox[
           SubsuperscriptBox["a", 
            StyleBox[
             FormBox[
              StyleBox["6",
               FontColor->RGBColor[1, 0, 0]],
              TraditionalForm],
             ShowContents->False], 
            FormBox[
             StyleBox["6",
              FontColor->RGBColor[1, 0, 0]],
             TraditionalForm]],
           Tensor[a, {
             red[6]}, {Void}],
           Editable->False]}], "2"]}]},
      {
       RowBox[{
        FractionBox[
         InterpretationBox[
          SubsuperscriptBox["a", 
           StyleBox[
            FormBox[
             StyleBox["3",
              FontColor->RGBColor[1, 0, 0]],
             TraditionalForm],
            ShowContents->False], 
           FormBox[
            StyleBox["3",
             FontColor->RGBColor[1, 0, 0]],
            TraditionalForm]],
          Tensor[a, {
            red[3]}, {Void}],
          Editable->False], "2"], "+", 
        FractionBox[
         RowBox[{"\[ImaginaryI]", " ", 
          InterpretationBox[
           SubsuperscriptBox["a", 
            StyleBox[
             FormBox[
              StyleBox["4",
               FontColor->RGBColor[1, 0, 0]],
              TraditionalForm],
             ShowContents->False], 
            FormBox[
             StyleBox["4",
              FontColor->RGBColor[1, 0, 0]],
             TraditionalForm]],
           Tensor[a, {
             red[4]}, {Void}],
           Editable->False]}], "2"]}], 
       RowBox[{
        FractionBox[
         InterpretationBox[
          SubsuperscriptBox["a", 
           StyleBox[
            FormBox[
             StyleBox["5",
              FontColor->RGBColor[1, 0, 0]],
             TraditionalForm],
            ShowContents->False], 
           FormBox[
            StyleBox["5",
             FontColor->RGBColor[1, 0, 0]],
            TraditionalForm]],
          Tensor[a, {
            red[5]}, {Void}],
          Editable->False], "2"], "+", 
        FractionBox[
         RowBox[{"\[ImaginaryI]", " ", 
          InterpretationBox[
           SubsuperscriptBox["a", 
            StyleBox[
             FormBox[
              StyleBox["6",
               FontColor->RGBColor[1, 0, 0]],
              TraditionalForm],
             ShowContents->False], 
            FormBox[
             StyleBox["6",
              FontColor->RGBColor[1, 0, 0]],
             TraditionalForm]],
           Tensor[a, {
             red[6]}, {Void}],
           Editable->False]}], "2"]}], "0"}
     }], "\[NoBreak]", ")"}]}], TraditionalForm]], "Output"]
}, Open  ]],

Cell[TextData[{
 "The condition that characterizes the canonical representation is \n\t\t\t",
 Cell[BoxData[
  FormBox[
   TagBox[
    RowBox[{
     InterpretationBox[
      RowBox[{"[", 
       RowBox[{"{", 
        RowBox[{
         InterpretationBox[
          SubsuperscriptBox["F", 
           FormBox[
            TagBox[
             StyleBox["7",
              FontColor->RGBColor[1, 0, 0]],
             StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
            TraditionalForm], 
           TagBox[
            StyleBox[
             FormBox[
              TagBox[
               StyleBox["7",
                FontColor->RGBColor[1, 0, 0]],
               StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
              TraditionalForm],
             ShowContents->False],
            StyleForm[#, ShowContents -> False]& ]],
          Tensor[F, {Void}, {
            red[1]}],
          Editable->False], ",", 
         InterpretationBox[
          SubsuperscriptBox["F", 
           FormBox[
            TagBox[
             StyleBox["8",
              FontColor->RGBColor[1, 0, 0]],
             StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
            TraditionalForm], 
           TagBox[
            StyleBox[
             FormBox[
              TagBox[
               StyleBox["8",
                FontColor->RGBColor[1, 0, 0]],
               StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
              TraditionalForm],
             ShowContents->False],
            StyleForm[#, ShowContents -> False]& ]],
          Tensor[F, {Void}, {
            red[8]}],
          Editable->False]}], "}"}], ",", "G", "]"}],
      MCommutator[{
        Tensor[F, {Void}, {
          red[1]}], 
        Tensor[F, {Void}, {
          red[8]}]}, G],
      SyntaxForm->"Times"], "\[Equal]", 
     RowBox[{
      InterpretationBox[
       SubsuperscriptBox["\[Alpha]", 
        FormBox[
         TagBox[
          StyleBox["i",
           FontColor->RGBColor[1, 0, 0]],
          StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
         TraditionalForm], 
        TagBox[
         StyleBox[
          FormBox[
           TagBox[
            StyleBox["i",
             FontColor->RGBColor[1, 0, 0]],
            StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
           TraditionalForm],
          ShowContents->False],
         StyleForm[#, ShowContents -> False]& ]],
       Tensor[\[Alpha], {Void}, {
         red[i]}],
       Editable->False], " ", "G"}]}],
    HoldForm], TraditionalForm]]],
 " \nor what is the same\n\t\t\t ",
 Cell[BoxData[
  FormBox[
   FormBox[
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       InterpretationBox[
        RowBox[{"[", 
         InterpretationBox[
          SubsuperscriptBox["F", 
           FormBox[
            TagBox[
             StyleBox["7",
              FontColor->RGBColor[1, 0, 0]],
             StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
            TraditionalForm], 
           TagBox[
            StyleBox[
             FormBox[
              TagBox[
               StyleBox["7",
                FontColor->RGBColor[1, 0, 0]],
               StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
              TraditionalForm],
             ShowContents->False],
            StyleForm[#, ShowContents -> False]& ]],
          Tensor[F, {Void}, {
            red[8]}],
          Editable->False], ",", "G", "]"}],
        MCommutator[
         Tensor[F, {Void}, {
           red[8]}], G],
        SyntaxForm->"Times"], ",", 
       InterpretationBox[
        RowBox[{"[", 
         InterpretationBox[
          SubsuperscriptBox["F", 
           FormBox[
            TagBox[
             StyleBox["8",
              FontColor->RGBColor[1, 0, 0]],
             StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
            TraditionalForm], 
           TagBox[
            StyleBox[
             FormBox[
              TagBox[
               StyleBox["8",
                FontColor->RGBColor[1, 0, 0]],
               StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
              TraditionalForm],
             ShowContents->False],
            StyleForm[#, ShowContents -> False]& ]],
          Tensor[F, {Void}, {
            red[8]}],
          Editable->False], ",", "G", "]"}],
        MCommutator[
         Tensor[F, {Void}, {
           red[8]}], G],
        SyntaxForm->"Times"]}], "}"}], "\[Equal]", 
     RowBox[{"G", " ", 
      InterpretationBox[
       SubsuperscriptBox["\[Alpha]", 
        FormBox[
         TagBox[
          StyleBox["i",
           FontColor->RGBColor[1, 0, 0]],
          StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
         TraditionalForm], 
        TagBox[
         StyleBox[
          FormBox[
           TagBox[
            StyleBox["i",
             FontColor->RGBColor[1, 0, 0]],
            StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
           TraditionalForm],
          ShowContents->False],
         StyleForm[#, ShowContents -> False]& ]],
       Tensor[\[Alpha], {Void}, {
         red[i]}],
       Editable->False]}]}],
    TraditionalForm], TraditionalForm]]],
 "\nfor a set of generators ",
 Cell[BoxData[
  FormBox["G", TraditionalForm]]],
 " in the complementary space of the Cartan subspace (no weight generators \
present)."
}], "EmphasisText"],

Cell[TextData[{
 "\[GraySquare] Applying the condition for the root vector ",
 Cell[BoxData[
  FormBox[
   RowBox[{"{", 
    RowBox[{"1", ",", "0"}], "}"}], TraditionalForm]]],
 " "
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Join", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"Equal", "[", 
       RowBox[{"#", ",", "0"}], "]"}], "&"}], "/@", 
     RowBox[{"Simplify", "[", 
      RowBox[{
       RowBox[{"Flatten", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"MCommutator", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Fd", "[", 
             RowBox[{"red", "@", "7"}], "]"}], "/.", 
            RowBox[{"TensorValueRules", "[", "F", "]"}]}], ",", 
           RowBox[{"(", 
            RowBox[{"G", "/.", "GRule"}], ")"}]}], "]"}], "-", 
         RowBox[{"(", 
          RowBox[{"G", "/.", "GRule"}], ")"}]}], "\[IndentingNewLine]", "]"}],
        "/.", " ", 
       RowBox[{"0", "\[Rule]", " ", 
        RowBox[{"Sequence", "[", "]"}]}]}], " ", "]"}]}], 
    "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"Equal", "[", 
       RowBox[{"#", ",", "0"}], "]"}], "&"}], "/@", 
     RowBox[{"Simplify", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Flatten", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"MCommutator", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Fd", "[", 
              RowBox[{"red", "@", "8"}], "]"}], "/.", 
             RowBox[{"TensorValueRules", "[", "F", "]"}]}], ",", 
            RowBox[{"G", "/.", "GRule"}]}], "]"}], "-", 
          RowBox[{"0", 
           RowBox[{"(", 
            RowBox[{"G", "/.", "GRule"}], ")"}]}]}], "\[IndentingNewLine]", 
         "]"}], "4"}], "/.", " ", 
       RowBox[{"0", "\[Rule]", " ", 
        RowBox[{"Sequence", "[", "]"}]}]}], " ", "]"}]}]}], 
   "\[IndentingNewLine]", "]"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Reduce", "[", "%", "]"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Gsol", "[", 
   RowBox[{"{", 
    RowBox[{"1", ",", "0"}], "}"}], "]"}], "=", 
  SubscriptBox[
   RowBox[{"FindInstance", "[", " ", 
    RowBox[{
     RowBox[{"And", "[", 
      RowBox[{"%", ",", 
       RowBox[{
        RowBox[{"au", "[", 
         RowBox[{"red", "@", "1"}], "]"}], "\[Equal]", "1"}]}], "]"}], ",", 
     RowBox[{
      RowBox[{"EinsteinArray", "[", "RootIndices", "]"}], "[", 
      RowBox[{"au", "[", 
       RowBox[{"red", "@", "i"}], "]"}], "]"}]}], " ", "]"}], 
   RowBox[{
   "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]]}]}], "Input"],

Cell[BoxData[
 FormBox[
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     RowBox[{
      FractionBox["1", "4"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"\[ImaginaryI]", " ", 
         InterpretationBox[
          SubsuperscriptBox["a", 
           TagBox[
            StyleBox[
             FormBox[
              TagBox[
               StyleBox["4",
                FontColor->RGBColor[1, 0, 0]],
               StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
              TraditionalForm],
             ShowContents->False],
            StyleForm[#, ShowContents -> False]& ], 
           FormBox[
            TagBox[
             StyleBox["4",
              FontColor->RGBColor[1, 0, 0]],
             StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
            TraditionalForm]],
          Tensor[a, {
            red[4]}, {Void}],
          Editable->False]}], "-", 
        InterpretationBox[
         SubsuperscriptBox["a", 
          TagBox[
           StyleBox[
            FormBox[
             TagBox[
              StyleBox["3",
               FontColor->RGBColor[1, 0, 0]],
              StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
             TraditionalForm],
            ShowContents->False],
           StyleForm[#, ShowContents -> False]& ], 
          FormBox[
           TagBox[
            StyleBox["3",
             FontColor->RGBColor[1, 0, 0]],
            StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
           TraditionalForm]],
         Tensor[a, {
           red[3]}, {Void}],
         Editable->False]}], ")"}]}], "\[Equal]", "0"}], ",", 
    RowBox[{
     RowBox[{
      RowBox[{"-", 
       InterpretationBox[
        SubsuperscriptBox["a", 
         TagBox[
          StyleBox[
           FormBox[
            TagBox[
             StyleBox["1",
              FontColor->RGBColor[1, 0, 0]],
             StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
            TraditionalForm],
           ShowContents->False],
          StyleForm[#, ShowContents -> False]& ], 
         FormBox[
          TagBox[
           StyleBox["1",
            FontColor->RGBColor[1, 0, 0]],
           StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
          TraditionalForm]],
        Tensor[a, {
          red[1]}, {Void}],
        Editable->False]}], "-", 
      RowBox[{"\[ImaginaryI]", " ", 
       InterpretationBox[
        SubsuperscriptBox["a", 
         TagBox[
          StyleBox[
           FormBox[
            TagBox[
             StyleBox["2",
              FontColor->RGBColor[1, 0, 0]],
             StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
            TraditionalForm],
           ShowContents->False],
          StyleForm[#, ShowContents -> False]& ], 
         FormBox[
          TagBox[
           StyleBox["2",
            FontColor->RGBColor[1, 0, 0]],
           StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
          TraditionalForm]],
        Tensor[a, {
          red[2]}, {Void}],
        Editable->False]}]}], "\[Equal]", "0"}], ",", 
    RowBox[{
     RowBox[{
      RowBox[{"-", 
       FractionBox["3", "4"]}], " ", 
      RowBox[{"(", 
       RowBox[{
        InterpretationBox[
         SubsuperscriptBox["a", 
          TagBox[
           StyleBox[
            FormBox[
             TagBox[
              StyleBox["5",
               FontColor->RGBColor[1, 0, 0]],
              StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
             TraditionalForm],
            ShowContents->False],
           StyleForm[#, ShowContents -> False]& ], 
          FormBox[
           TagBox[
            StyleBox["5",
             FontColor->RGBColor[1, 0, 0]],
            StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
           TraditionalForm]],
         Tensor[a, {
           red[5]}, {Void}],
         Editable->False], "-", 
        RowBox[{"\[ImaginaryI]", " ", 
         InterpretationBox[
          SubsuperscriptBox["a", 
           TagBox[
            StyleBox[
             FormBox[
              TagBox[
               StyleBox["6",
                FontColor->RGBColor[1, 0, 0]],
               StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
              TraditionalForm],
             ShowContents->False],
            StyleForm[#, ShowContents -> False]& ], 
           FormBox[
            TagBox[
             StyleBox["6",
              FontColor->RGBColor[1, 0, 0]],
             StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
            TraditionalForm]],
          Tensor[a, {
            red[6]}, {Void}],
          Editable->False]}]}], ")"}]}], "\[Equal]", "0"}], ",", 
    RowBox[{
     RowBox[{
      RowBox[{"-", 
       FractionBox["3", "4"]}], " ", 
      RowBox[{"(", 
       RowBox[{
        InterpretationBox[
         SubsuperscriptBox["a", 
          TagBox[
           StyleBox[
            FormBox[
             TagBox[
              StyleBox["3",
               FontColor->RGBColor[1, 0, 0]],
              StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
             TraditionalForm],
            ShowContents->False],
           StyleForm[#, ShowContents -> False]& ], 
          FormBox[
           TagBox[
            StyleBox["3",
             FontColor->RGBColor[1, 0, 0]],
            StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
           TraditionalForm]],
         Tensor[a, {
           red[3]}, {Void}],
         Editable->False], "+", 
        RowBox[{"\[ImaginaryI]", " ", 
         InterpretationBox[
          SubsuperscriptBox["a", 
           TagBox[
            StyleBox[
             FormBox[
              TagBox[
               StyleBox["4",
                FontColor->RGBColor[1, 0, 0]],
               StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
              TraditionalForm],
             ShowContents->False],
            StyleForm[#, ShowContents -> False]& ], 
           FormBox[
            TagBox[
             StyleBox["4",
              FontColor->RGBColor[1, 0, 0]],
             StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
            TraditionalForm]],
          Tensor[a, {
            red[4]}, {Void}],
          Editable->False]}]}], ")"}]}], "\[Equal]", "0"}], ",", 
    RowBox[{
     RowBox[{
      FractionBox["1", "4"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", 
         InterpretationBox[
          SubsuperscriptBox["a", 
           TagBox[
            StyleBox[
             FormBox[
              TagBox[
               StyleBox["5",
                FontColor->RGBColor[1, 0, 0]],
               StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
              TraditionalForm],
             ShowContents->False],
            StyleForm[#, ShowContents -> False]& ], 
           FormBox[
            TagBox[
             StyleBox["5",
              FontColor->RGBColor[1, 0, 0]],
             StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
            TraditionalForm]],
          Tensor[a, {
            red[5]}, {Void}],
          Editable->False]}], "-", 
        RowBox[{"\[ImaginaryI]", " ", 
         InterpretationBox[
          SubsuperscriptBox["a", 
           TagBox[
            StyleBox[
             FormBox[
              TagBox[
               StyleBox["6",
                FontColor->RGBColor[1, 0, 0]],
               StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
              TraditionalForm],
             ShowContents->False],
            StyleForm[#, ShowContents -> False]& ], 
           FormBox[
            TagBox[
             StyleBox["6",
              FontColor->RGBColor[1, 0, 0]],
             StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
            TraditionalForm]],
          Tensor[a, {
            red[6]}, {Void}],
          Editable->False]}]}], ")"}]}], "\[Equal]", "0"}], ",", "True", ",", 
    
    RowBox[{
     RowBox[{"2", " ", 
      RowBox[{"(", 
       RowBox[{
        InterpretationBox[
         SubsuperscriptBox["a", 
          TagBox[
           StyleBox[
            FormBox[
             TagBox[
              StyleBox["3",
               FontColor->RGBColor[1, 0, 0]],
              StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
             TraditionalForm],
            ShowContents->False],
           StyleForm[#, ShowContents -> False]& ], 
          FormBox[
           TagBox[
            StyleBox["3",
             FontColor->RGBColor[1, 0, 0]],
            StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
           TraditionalForm]],
         Tensor[a, {
           red[3]}, {Void}],
         Editable->False], "-", 
        RowBox[{"\[ImaginaryI]", " ", 
         InterpretationBox[
          SubsuperscriptBox["a", 
           TagBox[
            StyleBox[
             FormBox[
              TagBox[
               StyleBox["4",
                FontColor->RGBColor[1, 0, 0]],
               StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
              TraditionalForm],
             ShowContents->False],
            StyleForm[#, ShowContents -> False]& ], 
           FormBox[
            TagBox[
             StyleBox["4",
              FontColor->RGBColor[1, 0, 0]],
             StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
            TraditionalForm]],
          Tensor[a, {
            red[4]}, {Void}],
          Editable->False]}]}], ")"}]}], "\[Equal]", "0"}], ",", "True", ",", 
    
    RowBox[{
     RowBox[{"2", " ", 
      RowBox[{"(", 
       RowBox[{
        InterpretationBox[
         SubsuperscriptBox["a", 
          TagBox[
           StyleBox[
            FormBox[
             TagBox[
              StyleBox["5",
               FontColor->RGBColor[1, 0, 0]],
              StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
             TraditionalForm],
            ShowContents->False],
           StyleForm[#, ShowContents -> False]& ], 
          FormBox[
           TagBox[
            StyleBox["5",
             FontColor->RGBColor[1, 0, 0]],
            StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
           TraditionalForm]],
         Tensor[a, {
           red[5]}, {Void}],
         Editable->False], "-", 
        RowBox[{"\[ImaginaryI]", " ", 
         InterpretationBox[
          SubsuperscriptBox["a", 
           TagBox[
            StyleBox[
             FormBox[
              TagBox[
               StyleBox["6",
                FontColor->RGBColor[1, 0, 0]],
               StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
              TraditionalForm],
             ShowContents->False],
            StyleForm[#, ShowContents -> False]& ], 
           FormBox[
            TagBox[
             StyleBox["6",
              FontColor->RGBColor[1, 0, 0]],
             StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
            TraditionalForm]],
          Tensor[a, {
            red[6]}, {Void}],
          Editable->False]}]}], ")"}]}], "\[Equal]", "0"}], ",", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "2"}], " ", 
      RowBox[{"(", 
       RowBox[{
        InterpretationBox[
         SubsuperscriptBox["a", 
          TagBox[
           StyleBox[
            FormBox[
             TagBox[
              StyleBox["3",
               FontColor->RGBColor[1, 0, 0]],
              StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
             TraditionalForm],
            ShowContents->False],
           StyleForm[#, ShowContents -> False]& ], 
          FormBox[
           TagBox[
            StyleBox["3",
             FontColor->RGBColor[1, 0, 0]],
            StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
           TraditionalForm]],
         Tensor[a, {
           red[3]}, {Void}],
         Editable->False], "+", 
        RowBox[{"\[ImaginaryI]", " ", 
         InterpretationBox[
          SubsuperscriptBox["a", 
           TagBox[
            StyleBox[
             FormBox[
              TagBox[
               StyleBox["4",
                FontColor->RGBColor[1, 0, 0]],
               StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
              TraditionalForm],
             ShowContents->False],
            StyleForm[#, ShowContents -> False]& ], 
           FormBox[
            TagBox[
             StyleBox["4",
              FontColor->RGBColor[1, 0, 0]],
             StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
            TraditionalForm]],
          Tensor[a, {
            red[4]}, {Void}],
          Editable->False]}]}], ")"}]}], "\[Equal]", "0"}], ",", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "2"}], " ", 
      RowBox[{"(", 
       RowBox[{
        InterpretationBox[
         SubsuperscriptBox["a", 
          TagBox[
           StyleBox[
            FormBox[
             TagBox[
              StyleBox["5",
               FontColor->RGBColor[1, 0, 0]],
              StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
             TraditionalForm],
            ShowContents->False],
           StyleForm[#, ShowContents -> False]& ], 
          FormBox[
           TagBox[
            StyleBox["5",
             FontColor->RGBColor[1, 0, 0]],
            StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
           TraditionalForm]],
         Tensor[a, {
           red[5]}, {Void}],
         Editable->False], "+", 
        RowBox[{"\[ImaginaryI]", " ", 
         InterpretationBox[
          SubsuperscriptBox["a", 
           TagBox[
            StyleBox[
             FormBox[
              TagBox[
               StyleBox["6",
                FontColor->RGBColor[1, 0, 0]],
               StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
              TraditionalForm],
             ShowContents->False],
            StyleForm[#, ShowContents -> False]& ], 
           FormBox[
            TagBox[
             StyleBox["6",
              FontColor->RGBColor[1, 0, 0]],
             StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
            TraditionalForm]],
          Tensor[a, {
            red[6]}, {Void}],
          Editable->False]}]}], ")"}]}], "\[Equal]", "0"}]}], "}"}], 
  TraditionalForm]], "Output"],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{
    InterpretationBox[
     SubsuperscriptBox["a", 
      TagBox[
       StyleBox[
        FormBox[
         TagBox[
          StyleBox["6",
           FontColor->RGBColor[1, 0, 0]],
          StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
         TraditionalForm],
        ShowContents->False],
       StyleForm[#, ShowContents -> False]& ], 
      FormBox[
       TagBox[
        StyleBox["6",
         FontColor->RGBColor[1, 0, 0]],
        StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
       TraditionalForm]],
     Tensor[a, {
       red[6]}, {Void}],
     Editable->False], "\[Equal]", "0"}], "\[And]", 
   RowBox[{
    InterpretationBox[
     SubsuperscriptBox["a", 
      TagBox[
       StyleBox[
        FormBox[
         TagBox[
          StyleBox["5",
           FontColor->RGBColor[1, 0, 0]],
          StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
         TraditionalForm],
        ShowContents->False],
       StyleForm[#, ShowContents -> False]& ], 
      FormBox[
       TagBox[
        StyleBox["5",
         FontColor->RGBColor[1, 0, 0]],
        StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
       TraditionalForm]],
     Tensor[a, {
       red[5]}, {Void}],
     Editable->False], "\[Equal]", "0"}], "\[And]", 
   RowBox[{
    InterpretationBox[
     SubsuperscriptBox["a", 
      TagBox[
       StyleBox[
        FormBox[
         TagBox[
          StyleBox["4",
           FontColor->RGBColor[1, 0, 0]],
          StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
         TraditionalForm],
        ShowContents->False],
       StyleForm[#, ShowContents -> False]& ], 
      FormBox[
       TagBox[
        StyleBox["4",
         FontColor->RGBColor[1, 0, 0]],
        StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
       TraditionalForm]],
     Tensor[a, {
       red[4]}, {Void}],
     Editable->False], "\[Equal]", "0"}], "\[And]", 
   RowBox[{
    InterpretationBox[
     SubsuperscriptBox["a", 
      TagBox[
       StyleBox[
        FormBox[
         TagBox[
          StyleBox["3",
           FontColor->RGBColor[1, 0, 0]],
          StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
         TraditionalForm],
        ShowContents->False],
       StyleForm[#, ShowContents -> False]& ], 
      FormBox[
       TagBox[
        StyleBox["3",
         FontColor->RGBColor[1, 0, 0]],
        StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
       TraditionalForm]],
     Tensor[a, {
       red[3]}, {Void}],
     Editable->False], "\[Equal]", "0"}], "\[And]", 
   RowBox[{
    InterpretationBox[
     SubsuperscriptBox["a", 
      TagBox[
       StyleBox[
        FormBox[
         TagBox[
          StyleBox["1",
           FontColor->RGBColor[1, 0, 0]],
          StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
         TraditionalForm],
        ShowContents->False],
       StyleForm[#, ShowContents -> False]& ], 
      FormBox[
       TagBox[
        StyleBox["1",
         FontColor->RGBColor[1, 0, 0]],
        StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
       TraditionalForm]],
     Tensor[a, {
       red[1]}, {Void}],
     Editable->False], "\[Equal]", 
    RowBox[{
     RowBox[{"-", "\[ImaginaryI]"}], " ", 
     InterpretationBox[
      SubsuperscriptBox["a", 
       TagBox[
        StyleBox[
         FormBox[
          TagBox[
           StyleBox["2",
            FontColor->RGBColor[1, 0, 0]],
           StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
          TraditionalForm],
         ShowContents->False],
        StyleForm[#, ShowContents -> False]& ], 
       FormBox[
        TagBox[
         StyleBox["2",
          FontColor->RGBColor[1, 0, 0]],
         StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
        TraditionalForm]],
      Tensor[a, {
        red[2]}, {Void}],
      Editable->False]}]}]}], TraditionalForm]], "Output"],

Cell[BoxData[
 FormBox[
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     InterpretationBox[
      SubsuperscriptBox["a", 
       TagBox[
        StyleBox[
         FormBox[
          TagBox[
           StyleBox["1",
            FontColor->RGBColor[1, 0, 0]],
           StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
          TraditionalForm],
         ShowContents->False],
        StyleForm[#, ShowContents -> False]& ], 
       FormBox[
        TagBox[
         StyleBox["1",
          FontColor->RGBColor[1, 0, 0]],
         StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
        TraditionalForm]],
      Tensor[a, {
        red[1]}, {Void}],
      Editable->False], "\[Rule]", "1"}], ",", 
    RowBox[{
     InterpretationBox[
      SubsuperscriptBox["a", 
       TagBox[
        StyleBox[
         FormBox[
          TagBox[
           StyleBox["2",
            FontColor->RGBColor[1, 0, 0]],
           StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
          TraditionalForm],
         ShowContents->False],
        StyleForm[#, ShowContents -> False]& ], 
       FormBox[
        TagBox[
         StyleBox["2",
          FontColor->RGBColor[1, 0, 0]],
         StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
        TraditionalForm]],
      Tensor[a, {
        red[2]}, {Void}],
      Editable->False], "\[Rule]", "\[ImaginaryI]"}], ",", 
    RowBox[{
     InterpretationBox[
      SubsuperscriptBox["a", 
       TagBox[
        StyleBox[
         FormBox[
          TagBox[
           StyleBox["3",
            FontColor->RGBColor[1, 0, 0]],
           StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
          TraditionalForm],
         ShowContents->False],
        StyleForm[#, ShowContents -> False]& ], 
       FormBox[
        TagBox[
         StyleBox["3",
          FontColor->RGBColor[1, 0, 0]],
         StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
        TraditionalForm]],
      Tensor[a, {
        red[3]}, {Void}],
      Editable->False], "\[Rule]", "0"}], ",", 
    RowBox[{
     InterpretationBox[
      SubsuperscriptBox["a", 
       TagBox[
        StyleBox[
         FormBox[
          TagBox[
           StyleBox["4",
            FontColor->RGBColor[1, 0, 0]],
           StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
          TraditionalForm],
         ShowContents->False],
        StyleForm[#, ShowContents -> False]& ], 
       FormBox[
        TagBox[
         StyleBox["4",
          FontColor->RGBColor[1, 0, 0]],
         StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
        TraditionalForm]],
      Tensor[a, {
        red[4]}, {Void}],
      Editable->False], "\[Rule]", "0"}], ",", 
    RowBox[{
     InterpretationBox[
      SubsuperscriptBox["a", 
       TagBox[
        StyleBox[
         FormBox[
          TagBox[
           StyleBox["5",
            FontColor->RGBColor[1, 0, 0]],
           StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
          TraditionalForm],
         ShowContents->False],
        StyleForm[#, ShowContents -> False]& ], 
       FormBox[
        TagBox[
         StyleBox["5",
          FontColor->RGBColor[1, 0, 0]],
         StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
        TraditionalForm]],
      Tensor[a, {
        red[5]}, {Void}],
      Editable->False], "\[Rule]", "0"}], ",", 
    RowBox[{
     InterpretationBox[
      SubsuperscriptBox["a", 
       TagBox[
        StyleBox[
         FormBox[
          TagBox[
           StyleBox["6",
            FontColor->RGBColor[1, 0, 0]],
           StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
          TraditionalForm],
         ShowContents->False],
        StyleForm[#, ShowContents -> False]& ], 
       FormBox[
        TagBox[
         StyleBox["6",
          FontColor->RGBColor[1, 0, 0]],
         StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
        TraditionalForm]],
      Tensor[a, {
        red[6]}, {Void}],
      Editable->False], "\[Rule]", "0"}]}], "}"}], TraditionalForm]], "Output"]
}, Open  ]],

Cell["which gives the following generator as solution", "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"(", 
    RowBox[{"G", "/.", "GRule"}], ")"}], "/.", 
   RowBox[{"Gsol", "[", 
    RowBox[{"{", 
     RowBox[{"1", ",", "0"}], "}"}], "]"}]}], "//", "MatrixForm"}]], "Input"],

Cell[BoxData[
 FormBox[
  TagBox[
   RowBox[{"(", "\[NoBreak]", GridBox[{
      {"0", "1", "0"},
      {"0", "0", "0"},
      {"0", "0", "0"}
     },
     GridBoxAlignment->{
      "Columns" -> {{Decimal}}, "ColumnsIndexed" -> {}, 
       "Rows" -> {{Baseline}}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
   Function[BoxForm`e$, 
    MatrixForm[BoxForm`e$]]], TraditionalForm]], "Output"]
}, Open  ]],

Cell[TextData[{
 "\[GraySquare] Applying the condition for the root vector ",
 Cell[BoxData[
  FormBox[
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "2"], ",", "1"}], "}"}], TraditionalForm]]],
 " and guessing a solution"
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Join", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"Equal", "[", 
      RowBox[{"#", ",", "0"}], "]"}], "&"}], "/@", 
    RowBox[{"Simplify", "[", 
     RowBox[{
      RowBox[{"Flatten", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"MCommutator", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Fd", "[", 
            RowBox[{"red", "@", "7"}], "]"}], "/.", 
           RowBox[{"TensorValueRules", "[", "F", "]"}]}], ",", 
          RowBox[{"(", 
           RowBox[{"G", "/.", "GRule"}], ")"}]}], "]"}], "-", 
        RowBox[{
         RowBox[{"1", "/", "2"}], 
         RowBox[{"(", 
          RowBox[{"G", "/.", "GRule"}], ")"}]}]}], "\[IndentingNewLine]", 
       "]"}], "/.", " ", 
      RowBox[{"0", "\[Rule]", " ", 
       RowBox[{"Sequence", "[", "]"}]}]}], " ", "]"}]}], 
   "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"Equal", "[", 
      RowBox[{"#", ",", "0"}], "]"}], "&"}], "/@", 
    RowBox[{"Simplify", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Flatten", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"MCommutator", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Fd", "[", 
             RowBox[{"red", "@", "8"}], "]"}], "/.", 
            RowBox[{"TensorValueRules", "[", "F", "]"}]}], ",", 
           RowBox[{"G", "/.", "GRule"}]}], "]"}], "-", 
         RowBox[{"(", 
          RowBox[{"G", "/.", "GRule"}], ")"}]}], "\[IndentingNewLine]", "]"}],
        "4"}], "/.", " ", 
      RowBox[{"0", "\[Rule]", " ", 
       RowBox[{"Sequence", "[", "]"}]}]}], " ", "]"}]}]}], 
  "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", 
 RowBox[{"Reduce", "[", "%", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Gsol", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"1", "/", "2"}], ",", "1"}], "}"}], "]"}], "=", 
  SubscriptBox[
   RowBox[{"FindInstance", "[", " ", 
    RowBox[{
     RowBox[{"And", "[", 
      RowBox[{"%", ",", 
       RowBox[{
        RowBox[{"au", "[", 
         RowBox[{"red", "@", "3"}], "]"}], "\[Equal]", "1"}]}], "]"}], ",", 
     RowBox[{
      RowBox[{"EinsteinArray", "[", "RootIndices", "]"}], "[", 
      RowBox[{"au", "[", 
       RowBox[{"red", "@", "i"}], "]"}], "]"}]}], " ", "]"}], 
   RowBox[{
   "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]]}]}], "Input"],

Cell[BoxData[
 FormBox[
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     RowBox[{
      FractionBox["1", "4"], " ", 
      RowBox[{"(", 
       RowBox[{
        InterpretationBox[
         SubsuperscriptBox["a", 
          TagBox[
           StyleBox[
            FormBox[
             TagBox[
              StyleBox["1",
               FontColor->RGBColor[1, 0, 0]],
              StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
             TraditionalForm],
            ShowContents->False],
           StyleForm[#, ShowContents -> False]& ], 
          FormBox[
           TagBox[
            StyleBox["1",
             FontColor->RGBColor[1, 0, 0]],
            StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
           TraditionalForm]],
         Tensor[a, {
           red[1]}, {Void}],
         Editable->False], "-", 
        RowBox[{"\[ImaginaryI]", " ", 
         InterpretationBox[
          SubsuperscriptBox["a", 
           TagBox[
            StyleBox[
             FormBox[
              TagBox[
               StyleBox["2",
                FontColor->RGBColor[1, 0, 0]],
               StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
              TraditionalForm],
             ShowContents->False],
            StyleForm[#, ShowContents -> False]& ], 
           FormBox[
            TagBox[
             StyleBox["2",
              FontColor->RGBColor[1, 0, 0]],
             StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
            TraditionalForm]],
          Tensor[a, {
            red[2]}, {Void}],
          Editable->False]}]}], ")"}]}], "\[Equal]", "0"}], ",", "True", ",", 
    
    RowBox[{
     RowBox[{
      RowBox[{"-", 
       FractionBox["3", "4"]}], " ", 
      RowBox[{"(", 
       RowBox[{
        InterpretationBox[
         SubsuperscriptBox["a", 
          TagBox[
           StyleBox[
            FormBox[
             TagBox[
              StyleBox["1",
               FontColor->RGBColor[1, 0, 0]],
              StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
             TraditionalForm],
            ShowContents->False],
           StyleForm[#, ShowContents -> False]& ], 
          FormBox[
           TagBox[
            StyleBox["1",
             FontColor->RGBColor[1, 0, 0]],
            StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
           TraditionalForm]],
         Tensor[a, {
           red[1]}, {Void}],
         Editable->False], "+", 
        RowBox[{"\[ImaginaryI]", " ", 
         InterpretationBox[
          SubsuperscriptBox["a", 
           TagBox[
            StyleBox[
             FormBox[
              TagBox[
               StyleBox["2",
                FontColor->RGBColor[1, 0, 0]],
               StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
              TraditionalForm],
             ShowContents->False],
            StyleForm[#, ShowContents -> False]& ], 
           FormBox[
            TagBox[
             StyleBox["2",
              FontColor->RGBColor[1, 0, 0]],
             StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
            TraditionalForm]],
          Tensor[a, {
            red[2]}, {Void}],
          Editable->False]}]}], ")"}]}], "\[Equal]", "0"}], ",", 
    RowBox[{
     RowBox[{
      FractionBox["1", "2"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"\[ImaginaryI]", " ", 
         InterpretationBox[
          SubsuperscriptBox["a", 
           TagBox[
            StyleBox[
             FormBox[
              TagBox[
               StyleBox["6",
                FontColor->RGBColor[1, 0, 0]],
               StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
              TraditionalForm],
             ShowContents->False],
            StyleForm[#, ShowContents -> False]& ], 
           FormBox[
            TagBox[
             StyleBox["6",
              FontColor->RGBColor[1, 0, 0]],
             StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
            TraditionalForm]],
          Tensor[a, {
            red[6]}, {Void}],
          Editable->False]}], "-", 
        InterpretationBox[
         SubsuperscriptBox["a", 
          TagBox[
           StyleBox[
            FormBox[
             TagBox[
              StyleBox["5",
               FontColor->RGBColor[1, 0, 0]],
              StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
             TraditionalForm],
            ShowContents->False],
           StyleForm[#, ShowContents -> False]& ], 
          FormBox[
           TagBox[
            StyleBox["5",
             FontColor->RGBColor[1, 0, 0]],
            StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
           TraditionalForm]],
         Tensor[a, {
           red[5]}, {Void}],
         Editable->False]}], ")"}]}], "\[Equal]", "0"}], ",", 
    RowBox[{
     RowBox[{
      FractionBox["1", "2"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", 
         InterpretationBox[
          SubsuperscriptBox["a", 
           TagBox[
            StyleBox[
             FormBox[
              TagBox[
               StyleBox["3",
                FontColor->RGBColor[1, 0, 0]],
               StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
              TraditionalForm],
             ShowContents->False],
            StyleForm[#, ShowContents -> False]& ], 
           FormBox[
            TagBox[
             StyleBox["3",
              FontColor->RGBColor[1, 0, 0]],
             StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
            TraditionalForm]],
          Tensor[a, {
            red[3]}, {Void}],
          Editable->False]}], "-", 
        RowBox[{"\[ImaginaryI]", " ", 
         InterpretationBox[
          SubsuperscriptBox["a", 
           TagBox[
            StyleBox[
             FormBox[
              TagBox[
               StyleBox["4",
                FontColor->RGBColor[1, 0, 0]],
               StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
              TraditionalForm],
             ShowContents->False],
            StyleForm[#, ShowContents -> False]& ], 
           FormBox[
            TagBox[
             StyleBox["4",
              FontColor->RGBColor[1, 0, 0]],
             StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
            TraditionalForm]],
          Tensor[a, {
            red[4]}, {Void}],
          Editable->False]}]}], ")"}]}], "\[Equal]", "0"}], ",", "True", ",", 
    
    RowBox[{
     RowBox[{
      RowBox[{"2", " ", "\[ImaginaryI]", " ", 
       InterpretationBox[
        SubsuperscriptBox["a", 
         TagBox[
          StyleBox[
           FormBox[
            TagBox[
             StyleBox["2",
              FontColor->RGBColor[1, 0, 0]],
             StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
            TraditionalForm],
           ShowContents->False],
          StyleForm[#, ShowContents -> False]& ], 
         FormBox[
          TagBox[
           StyleBox["2",
            FontColor->RGBColor[1, 0, 0]],
           StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
          TraditionalForm]],
        Tensor[a, {
          red[2]}, {Void}],
        Editable->False]}], "-", 
      RowBox[{"2", " ", 
       InterpretationBox[
        SubsuperscriptBox["a", 
         TagBox[
          StyleBox[
           FormBox[
            TagBox[
             StyleBox["1",
              FontColor->RGBColor[1, 0, 0]],
             StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
            TraditionalForm],
           ShowContents->False],
          StyleForm[#, ShowContents -> False]& ], 
         FormBox[
          TagBox[
           StyleBox["1",
            FontColor->RGBColor[1, 0, 0]],
           StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
          TraditionalForm]],
        Tensor[a, {
          red[1]}, {Void}],
        Editable->False]}]}], "\[Equal]", "0"}], ",", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "2"}], " ", 
      RowBox[{"(", 
       RowBox[{
        InterpretationBox[
         SubsuperscriptBox["a", 
          TagBox[
           StyleBox[
            FormBox[
             TagBox[
              StyleBox["1",
               FontColor->RGBColor[1, 0, 0]],
              StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
             TraditionalForm],
            ShowContents->False],
           StyleForm[#, ShowContents -> False]& ], 
          FormBox[
           TagBox[
            StyleBox["1",
             FontColor->RGBColor[1, 0, 0]],
            StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
           TraditionalForm]],
         Tensor[a, {
           red[1]}, {Void}],
         Editable->False], "+", 
        RowBox[{"\[ImaginaryI]", " ", 
         InterpretationBox[
          SubsuperscriptBox["a", 
           TagBox[
            StyleBox[
             FormBox[
              TagBox[
               StyleBox["2",
                FontColor->RGBColor[1, 0, 0]],
               StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
              TraditionalForm],
             ShowContents->False],
            StyleForm[#, ShowContents -> False]& ], 
           FormBox[
            TagBox[
             StyleBox["2",
              FontColor->RGBColor[1, 0, 0]],
             StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
            TraditionalForm]],
          Tensor[a, {
            red[2]}, {Void}],
          Editable->False]}]}], ")"}]}], "\[Equal]", "0"}], ",", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "4"}], " ", 
      RowBox[{"(", 
       RowBox[{
        InterpretationBox[
         SubsuperscriptBox["a", 
          TagBox[
           StyleBox[
            FormBox[
             TagBox[
              StyleBox["3",
               FontColor->RGBColor[1, 0, 0]],
              StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
             TraditionalForm],
            ShowContents->False],
           StyleForm[#, ShowContents -> False]& ], 
          FormBox[
           TagBox[
            StyleBox["3",
             FontColor->RGBColor[1, 0, 0]],
            StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
           TraditionalForm]],
         Tensor[a, {
           red[3]}, {Void}],
         Editable->False], "+", 
        RowBox[{"\[ImaginaryI]", " ", 
         InterpretationBox[
          SubsuperscriptBox["a", 
           TagBox[
            StyleBox[
             FormBox[
              TagBox[
               StyleBox["4",
                FontColor->RGBColor[1, 0, 0]],
               StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
              TraditionalForm],
             ShowContents->False],
            StyleForm[#, ShowContents -> False]& ], 
           FormBox[
            TagBox[
             StyleBox["4",
              FontColor->RGBColor[1, 0, 0]],
             StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
            TraditionalForm]],
          Tensor[a, {
            red[4]}, {Void}],
          Editable->False]}]}], ")"}]}], "\[Equal]", "0"}], ",", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "4"}], " ", 
      RowBox[{"(", 
       RowBox[{
        InterpretationBox[
         SubsuperscriptBox["a", 
          TagBox[
           StyleBox[
            FormBox[
             TagBox[
              StyleBox["5",
               FontColor->RGBColor[1, 0, 0]],
              StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
             TraditionalForm],
            ShowContents->False],
           StyleForm[#, ShowContents -> False]& ], 
          FormBox[
           TagBox[
            StyleBox["5",
             FontColor->RGBColor[1, 0, 0]],
            StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
           TraditionalForm]],
         Tensor[a, {
           red[5]}, {Void}],
         Editable->False], "+", 
        RowBox[{"\[ImaginaryI]", " ", 
         InterpretationBox[
          SubsuperscriptBox["a", 
           TagBox[
            StyleBox[
             FormBox[
              TagBox[
               StyleBox["6",
                FontColor->RGBColor[1, 0, 0]],
               StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
              TraditionalForm],
             ShowContents->False],
            StyleForm[#, ShowContents -> False]& ], 
           FormBox[
            TagBox[
             StyleBox["6",
              FontColor->RGBColor[1, 0, 0]],
             StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
            TraditionalForm]],
          Tensor[a, {
            red[6]}, {Void}],
          Editable->False]}]}], ")"}]}], "\[Equal]", "0"}]}], "}"}], 
  TraditionalForm]], "Output"],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{
    InterpretationBox[
     SubsuperscriptBox["a", 
      TagBox[
       StyleBox[
        FormBox[
         TagBox[
          StyleBox["6",
           FontColor->RGBColor[1, 0, 0]],
          StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
         TraditionalForm],
        ShowContents->False],
       StyleForm[#, ShowContents -> False]& ], 
      FormBox[
       TagBox[
        StyleBox["6",
         FontColor->RGBColor[1, 0, 0]],
        StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
       TraditionalForm]],
     Tensor[a, {
       red[6]}, {Void}],
     Editable->False], "\[Equal]", "0"}], "\[And]", 
   RowBox[{
    InterpretationBox[
     SubsuperscriptBox["a", 
      TagBox[
       StyleBox[
        FormBox[
         TagBox[
          StyleBox["5",
           FontColor->RGBColor[1, 0, 0]],
          StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
         TraditionalForm],
        ShowContents->False],
       StyleForm[#, ShowContents -> False]& ], 
      FormBox[
       TagBox[
        StyleBox["5",
         FontColor->RGBColor[1, 0, 0]],
        StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
       TraditionalForm]],
     Tensor[a, {
       red[5]}, {Void}],
     Editable->False], "\[Equal]", "0"}], "\[And]", 
   RowBox[{
    InterpretationBox[
     SubsuperscriptBox["a", 
      TagBox[
       StyleBox[
        FormBox[
         TagBox[
          StyleBox["3",
           FontColor->RGBColor[1, 0, 0]],
          StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
         TraditionalForm],
        ShowContents->False],
       StyleForm[#, ShowContents -> False]& ], 
      FormBox[
       TagBox[
        StyleBox["3",
         FontColor->RGBColor[1, 0, 0]],
        StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
       TraditionalForm]],
     Tensor[a, {
       red[3]}, {Void}],
     Editable->False], "\[Equal]", 
    RowBox[{
     RowBox[{"-", "\[ImaginaryI]"}], " ", 
     InterpretationBox[
      SubsuperscriptBox["a", 
       TagBox[
        StyleBox[
         FormBox[
          TagBox[
           StyleBox["4",
            FontColor->RGBColor[1, 0, 0]],
           StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
          TraditionalForm],
         ShowContents->False],
        StyleForm[#, ShowContents -> False]& ], 
       FormBox[
        TagBox[
         StyleBox["4",
          FontColor->RGBColor[1, 0, 0]],
         StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
        TraditionalForm]],
      Tensor[a, {
        red[4]}, {Void}],
      Editable->False]}]}], "\[And]", 
   RowBox[{
    InterpretationBox[
     SubsuperscriptBox["a", 
      TagBox[
       StyleBox[
        FormBox[
         TagBox[
          StyleBox["2",
           FontColor->RGBColor[1, 0, 0]],
          StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
         TraditionalForm],
        ShowContents->False],
       StyleForm[#, ShowContents -> False]& ], 
      FormBox[
       TagBox[
        StyleBox["2",
         FontColor->RGBColor[1, 0, 0]],
        StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
       TraditionalForm]],
     Tensor[a, {
       red[2]}, {Void}],
     Editable->False], "\[Equal]", "0"}], "\[And]", 
   RowBox[{
    InterpretationBox[
     SubsuperscriptBox["a", 
      TagBox[
       StyleBox[
        FormBox[
         TagBox[
          StyleBox["1",
           FontColor->RGBColor[1, 0, 0]],
          StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
         TraditionalForm],
        ShowContents->False],
       StyleForm[#, ShowContents -> False]& ], 
      FormBox[
       TagBox[
        StyleBox["1",
         FontColor->RGBColor[1, 0, 0]],
        StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
       TraditionalForm]],
     Tensor[a, {
       red[1]}, {Void}],
     Editable->False], "\[Equal]", "0"}]}], TraditionalForm]], "Output"],

Cell[BoxData[
 FormBox[
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     InterpretationBox[
      SubsuperscriptBox["a", 
       TagBox[
        StyleBox[
         FormBox[
          TagBox[
           StyleBox["1",
            FontColor->RGBColor[1, 0, 0]],
           StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
          TraditionalForm],
         ShowContents->False],
        StyleForm[#, ShowContents -> False]& ], 
       FormBox[
        TagBox[
         StyleBox["1",
          FontColor->RGBColor[1, 0, 0]],
         StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
        TraditionalForm]],
      Tensor[a, {
        red[1]}, {Void}],
      Editable->False], "\[Rule]", "0"}], ",", 
    RowBox[{
     InterpretationBox[
      SubsuperscriptBox["a", 
       TagBox[
        StyleBox[
         FormBox[
          TagBox[
           StyleBox["2",
            FontColor->RGBColor[1, 0, 0]],
           StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
          TraditionalForm],
         ShowContents->False],
        StyleForm[#, ShowContents -> False]& ], 
       FormBox[
        TagBox[
         StyleBox["2",
          FontColor->RGBColor[1, 0, 0]],
         StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
        TraditionalForm]],
      Tensor[a, {
        red[2]}, {Void}],
      Editable->False], "\[Rule]", "0"}], ",", 
    RowBox[{
     InterpretationBox[
      SubsuperscriptBox["a", 
       TagBox[
        StyleBox[
         FormBox[
          TagBox[
           StyleBox["3",
            FontColor->RGBColor[1, 0, 0]],
           StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
          TraditionalForm],
         ShowContents->False],
        StyleForm[#, ShowContents -> False]& ], 
       FormBox[
        TagBox[
         StyleBox["3",
          FontColor->RGBColor[1, 0, 0]],
         StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
        TraditionalForm]],
      Tensor[a, {
        red[3]}, {Void}],
      Editable->False], "\[Rule]", "1"}], ",", 
    RowBox[{
     InterpretationBox[
      SubsuperscriptBox["a", 
       TagBox[
        StyleBox[
         FormBox[
          TagBox[
           StyleBox["4",
            FontColor->RGBColor[1, 0, 0]],
           StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
          TraditionalForm],
         ShowContents->False],
        StyleForm[#, ShowContents -> False]& ], 
       FormBox[
        TagBox[
         StyleBox["4",
          FontColor->RGBColor[1, 0, 0]],
         StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
        TraditionalForm]],
      Tensor[a, {
        red[4]}, {Void}],
      Editable->False], "\[Rule]", "\[ImaginaryI]"}], ",", 
    RowBox[{
     InterpretationBox[
      SubsuperscriptBox["a", 
       TagBox[
        StyleBox[
         FormBox[
          TagBox[
           StyleBox["5",
            FontColor->RGBColor[1, 0, 0]],
           StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
          TraditionalForm],
         ShowContents->False],
        StyleForm[#, ShowContents -> False]& ], 
       FormBox[
        TagBox[
         StyleBox["5",
          FontColor->RGBColor[1, 0, 0]],
         StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
        TraditionalForm]],
      Tensor[a, {
        red[5]}, {Void}],
      Editable->False], "\[Rule]", "0"}], ",", 
    RowBox[{
     InterpretationBox[
      SubsuperscriptBox["a", 
       TagBox[
        StyleBox[
         FormBox[
          TagBox[
           StyleBox["6",
            FontColor->RGBColor[1, 0, 0]],
           StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
          TraditionalForm],
         ShowContents->False],
        StyleForm[#, ShowContents -> False]& ], 
       FormBox[
        TagBox[
         StyleBox["6",
          FontColor->RGBColor[1, 0, 0]],
         StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
        TraditionalForm]],
      Tensor[a, {
        red[6]}, {Void}],
      Editable->False], "\[Rule]", "0"}]}], "}"}], TraditionalForm]], "Output"]
}, Open  ]],

Cell["which gives the following generator as solution", "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"(", 
    RowBox[{"G", "/.", "GRule"}], ")"}], "/.", 
   RowBox[{"Gsol", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"1", "/", "2"}], ",", "1"}], "}"}], "]"}]}], "//", 
  "MatrixForm"}]], "Input"],

Cell[BoxData[
 FormBox[
  TagBox[
   RowBox[{"(", "\[NoBreak]", GridBox[{
      {"0", "0", "1"},
      {"0", "0", "0"},
      {"0", "0", "0"}
     },
     GridBoxAlignment->{
      "Columns" -> {{Decimal}}, "ColumnsIndexed" -> {}, 
       "Rows" -> {{Baseline}}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
   Function[BoxForm`e$, 
    MatrixForm[BoxForm`e$]]], TraditionalForm]], "Output"]
}, Open  ]],

Cell[TextData[{
 "\[GraySquare] Applying the condition for the root vector ",
 Cell[BoxData[
  FormBox[
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "2"], ",", 
     RowBox[{"-", "1"}]}], "}"}], TraditionalForm]]],
 " and guessing a solution"
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Join", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"Equal", "[", 
       RowBox[{"#", ",", "0"}], "]"}], "&"}], "/@", 
     RowBox[{"Simplify", "[", 
      RowBox[{
       RowBox[{"Flatten", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"MCommutator", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Fd", "[", 
             RowBox[{"red", "@", "7"}], "]"}], "/.", 
            RowBox[{"TensorValueRules", "[", "F", "]"}]}], ",", 
           RowBox[{"(", 
            RowBox[{"G", "/.", "GRule"}], ")"}]}], "]"}], "-", 
         RowBox[{
          RowBox[{"1", "/", "2"}], 
          RowBox[{"(", 
           RowBox[{"G", "/.", "GRule"}], ")"}]}]}], "\[IndentingNewLine]", 
        "]"}], "/.", " ", 
       RowBox[{"0", "\[Rule]", " ", 
        RowBox[{"Sequence", "[", "]"}]}]}], " ", "]"}]}], 
    "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"Equal", "[", 
       RowBox[{"#", ",", "0"}], "]"}], "&"}], "/@", 
     RowBox[{"Simplify", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Flatten", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"MCommutator", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Fd", "[", 
              RowBox[{"red", "@", "8"}], "]"}], "/.", 
             RowBox[{"TensorValueRules", "[", "F", "]"}]}], ",", 
            RowBox[{"G", "/.", "GRule"}]}], "]"}], "+", 
          RowBox[{"(", 
           RowBox[{"G", "/.", "GRule"}], ")"}]}], "\[IndentingNewLine]", 
         "]"}], "4"}], "/.", " ", 
       RowBox[{"0", "\[Rule]", " ", 
        RowBox[{"Sequence", "[", "]"}]}]}], " ", "]"}]}]}], 
   "\[IndentingNewLine]", "]"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Reduce", "[", "%", "]"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Gsol", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"1", "/", "2"}], ",", 
     RowBox[{"-", "1"}]}], "}"}], "]"}], "=", 
  SubscriptBox[
   RowBox[{"FindInstance", "[", " ", 
    RowBox[{
     RowBox[{"And", "[", 
      RowBox[{"%", ",", 
       RowBox[{
        RowBox[{"au", "[", 
         RowBox[{"red", "@", "5"}], "]"}], "\[Equal]", "1"}]}], "]"}], ",", 
     RowBox[{
      RowBox[{"EinsteinArray", "[", "RootIndices", "]"}], "[", 
      RowBox[{"au", "[", 
       RowBox[{"red", "@", "i"}], "]"}], "]"}]}], " ", "]"}], 
   RowBox[{
   "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]]}]}], "Input"],

Cell[BoxData[
 FormBox[
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     RowBox[{
      FractionBox["1", "4"], " ", 
      RowBox[{"(", 
       RowBox[{
        InterpretationBox[
         SubsuperscriptBox["a", 
          TagBox[
           StyleBox[
            FormBox[
             TagBox[
              StyleBox["1",
               FontColor->RGBColor[1, 0, 0]],
              StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
             TraditionalForm],
            ShowContents->False],
           StyleForm[#, ShowContents -> False]& ], 
          FormBox[
           TagBox[
            StyleBox["1",
             FontColor->RGBColor[1, 0, 0]],
            StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
           TraditionalForm]],
         Tensor[a, {
           red[1]}, {Void}],
         Editable->False], "-", 
        RowBox[{"\[ImaginaryI]", " ", 
         InterpretationBox[
          SubsuperscriptBox["a", 
           TagBox[
            StyleBox[
             FormBox[
              TagBox[
               StyleBox["2",
                FontColor->RGBColor[1, 0, 0]],
               StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
              TraditionalForm],
             ShowContents->False],
            StyleForm[#, ShowContents -> False]& ], 
           FormBox[
            TagBox[
             StyleBox["2",
              FontColor->RGBColor[1, 0, 0]],
             StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
            TraditionalForm]],
          Tensor[a, {
            red[2]}, {Void}],
          Editable->False]}]}], ")"}]}], "\[Equal]", "0"}], ",", "True", ",", 
    
    RowBox[{
     RowBox[{
      RowBox[{"-", 
       FractionBox["3", "4"]}], " ", 
      RowBox[{"(", 
       RowBox[{
        InterpretationBox[
         SubsuperscriptBox["a", 
          TagBox[
           StyleBox[
            FormBox[
             TagBox[
              StyleBox["1",
               FontColor->RGBColor[1, 0, 0]],
              StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
             TraditionalForm],
            ShowContents->False],
           StyleForm[#, ShowContents -> False]& ], 
          FormBox[
           TagBox[
            StyleBox["1",
             FontColor->RGBColor[1, 0, 0]],
            StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
           TraditionalForm]],
         Tensor[a, {
           red[1]}, {Void}],
         Editable->False], "+", 
        RowBox[{"\[ImaginaryI]", " ", 
         InterpretationBox[
          SubsuperscriptBox["a", 
           TagBox[
            StyleBox[
             FormBox[
              TagBox[
               StyleBox["2",
                FontColor->RGBColor[1, 0, 0]],
               StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
              TraditionalForm],
             ShowContents->False],
            StyleForm[#, ShowContents -> False]& ], 
           FormBox[
            TagBox[
             StyleBox["2",
              FontColor->RGBColor[1, 0, 0]],
             StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
            TraditionalForm]],
          Tensor[a, {
            red[2]}, {Void}],
          Editable->False]}]}], ")"}]}], "\[Equal]", "0"}], ",", 
    RowBox[{
     RowBox[{
      FractionBox["1", "2"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"\[ImaginaryI]", " ", 
         InterpretationBox[
          SubsuperscriptBox["a", 
           TagBox[
            StyleBox[
             FormBox[
              TagBox[
               StyleBox["6",
                FontColor->RGBColor[1, 0, 0]],
               StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
              TraditionalForm],
             ShowContents->False],
            StyleForm[#, ShowContents -> False]& ], 
           FormBox[
            TagBox[
             StyleBox["6",
              FontColor->RGBColor[1, 0, 0]],
             StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
            TraditionalForm]],
          Tensor[a, {
            red[6]}, {Void}],
          Editable->False]}], "-", 
        InterpretationBox[
         SubsuperscriptBox["a", 
          TagBox[
           StyleBox[
            FormBox[
             TagBox[
              StyleBox["5",
               FontColor->RGBColor[1, 0, 0]],
              StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
             TraditionalForm],
            ShowContents->False],
           StyleForm[#, ShowContents -> False]& ], 
          FormBox[
           TagBox[
            StyleBox["5",
             FontColor->RGBColor[1, 0, 0]],
            StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
           TraditionalForm]],
         Tensor[a, {
           red[5]}, {Void}],
         Editable->False]}], ")"}]}], "\[Equal]", "0"}], ",", 
    RowBox[{
     RowBox[{
      FractionBox["1", "2"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", 
         InterpretationBox[
          SubsuperscriptBox["a", 
           TagBox[
            StyleBox[
             FormBox[
              TagBox[
               StyleBox["3",
                FontColor->RGBColor[1, 0, 0]],
               StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
              TraditionalForm],
             ShowContents->False],
            StyleForm[#, ShowContents -> False]& ], 
           FormBox[
            TagBox[
             StyleBox["3",
              FontColor->RGBColor[1, 0, 0]],
             StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
            TraditionalForm]],
          Tensor[a, {
            red[3]}, {Void}],
          Editable->False]}], "-", 
        RowBox[{"\[ImaginaryI]", " ", 
         InterpretationBox[
          SubsuperscriptBox["a", 
           TagBox[
            StyleBox[
             FormBox[
              TagBox[
               StyleBox["4",
                FontColor->RGBColor[1, 0, 0]],
               StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
              TraditionalForm],
             ShowContents->False],
            StyleForm[#, ShowContents -> False]& ], 
           FormBox[
            TagBox[
             StyleBox["4",
              FontColor->RGBColor[1, 0, 0]],
             StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
            TraditionalForm]],
          Tensor[a, {
            red[4]}, {Void}],
          Editable->False]}]}], ")"}]}], "\[Equal]", "0"}], ",", "True", ",", 
    
    RowBox[{
     RowBox[{"2", " ", 
      RowBox[{"(", 
       RowBox[{
        InterpretationBox[
         SubsuperscriptBox["a", 
          TagBox[
           StyleBox[
            FormBox[
             TagBox[
              StyleBox["1",
               FontColor->RGBColor[1, 0, 0]],
              StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
             TraditionalForm],
            ShowContents->False],
           StyleForm[#, ShowContents -> False]& ], 
          FormBox[
           TagBox[
            StyleBox["1",
             FontColor->RGBColor[1, 0, 0]],
            StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
           TraditionalForm]],
         Tensor[a, {
           red[1]}, {Void}],
         Editable->False], "-", 
        RowBox[{"\[ImaginaryI]", " ", 
         InterpretationBox[
          SubsuperscriptBox["a", 
           TagBox[
            StyleBox[
             FormBox[
              TagBox[
               StyleBox["2",
                FontColor->RGBColor[1, 0, 0]],
               StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
              TraditionalForm],
             ShowContents->False],
            StyleForm[#, ShowContents -> False]& ], 
           FormBox[
            TagBox[
             StyleBox["2",
              FontColor->RGBColor[1, 0, 0]],
             StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
            TraditionalForm]],
          Tensor[a, {
            red[2]}, {Void}],
          Editable->False]}]}], ")"}]}], "\[Equal]", "0"}], ",", 
    RowBox[{
     RowBox[{"4", " ", 
      RowBox[{"(", 
       RowBox[{
        InterpretationBox[
         SubsuperscriptBox["a", 
          TagBox[
           StyleBox[
            FormBox[
             TagBox[
              StyleBox["3",
               FontColor->RGBColor[1, 0, 0]],
              StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
             TraditionalForm],
            ShowContents->False],
           StyleForm[#, ShowContents -> False]& ], 
          FormBox[
           TagBox[
            StyleBox["3",
             FontColor->RGBColor[1, 0, 0]],
            StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
           TraditionalForm]],
         Tensor[a, {
           red[3]}, {Void}],
         Editable->False], "-", 
        RowBox[{"\[ImaginaryI]", " ", 
         InterpretationBox[
          SubsuperscriptBox["a", 
           TagBox[
            StyleBox[
             FormBox[
              TagBox[
               StyleBox["4",
                FontColor->RGBColor[1, 0, 0]],
               StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
              TraditionalForm],
             ShowContents->False],
            StyleForm[#, ShowContents -> False]& ], 
           FormBox[
            TagBox[
             StyleBox["4",
              FontColor->RGBColor[1, 0, 0]],
             StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
            TraditionalForm]],
          Tensor[a, {
            red[4]}, {Void}],
          Editable->False]}]}], ")"}]}], "\[Equal]", "0"}], ",", 
    RowBox[{
     RowBox[{"2", " ", 
      RowBox[{"(", 
       RowBox[{
        InterpretationBox[
         SubsuperscriptBox["a", 
          TagBox[
           StyleBox[
            FormBox[
             TagBox[
              StyleBox["1",
               FontColor->RGBColor[1, 0, 0]],
              StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
             TraditionalForm],
            ShowContents->False],
           StyleForm[#, ShowContents -> False]& ], 
          FormBox[
           TagBox[
            StyleBox["1",
             FontColor->RGBColor[1, 0, 0]],
            StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
           TraditionalForm]],
         Tensor[a, {
           red[1]}, {Void}],
         Editable->False], "+", 
        RowBox[{"\[ImaginaryI]", " ", 
         InterpretationBox[
          SubsuperscriptBox["a", 
           TagBox[
            StyleBox[
             FormBox[
              TagBox[
               StyleBox["2",
                FontColor->RGBColor[1, 0, 0]],
               StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
              TraditionalForm],
             ShowContents->False],
            StyleForm[#, ShowContents -> False]& ], 
           FormBox[
            TagBox[
             StyleBox["2",
              FontColor->RGBColor[1, 0, 0]],
             StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
            TraditionalForm]],
          Tensor[a, {
            red[2]}, {Void}],
          Editable->False]}]}], ")"}]}], "\[Equal]", "0"}], ",", 
    RowBox[{
     RowBox[{"4", " ", 
      RowBox[{"(", 
       RowBox[{
        InterpretationBox[
         SubsuperscriptBox["a", 
          TagBox[
           StyleBox[
            FormBox[
             TagBox[
              StyleBox["5",
               FontColor->RGBColor[1, 0, 0]],
              StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
             TraditionalForm],
            ShowContents->False],
           StyleForm[#, ShowContents -> False]& ], 
          FormBox[
           TagBox[
            StyleBox["5",
             FontColor->RGBColor[1, 0, 0]],
            StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
           TraditionalForm]],
         Tensor[a, {
           red[5]}, {Void}],
         Editable->False], "-", 
        RowBox[{"\[ImaginaryI]", " ", 
         InterpretationBox[
          SubsuperscriptBox["a", 
           TagBox[
            StyleBox[
             FormBox[
              TagBox[
               StyleBox["6",
                FontColor->RGBColor[1, 0, 0]],
               StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
              TraditionalForm],
             ShowContents->False],
            StyleForm[#, ShowContents -> False]& ], 
           FormBox[
            TagBox[
             StyleBox["6",
              FontColor->RGBColor[1, 0, 0]],
             StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
            TraditionalForm]],
          Tensor[a, {
            red[6]}, {Void}],
          Editable->False]}]}], ")"}]}], "\[Equal]", "0"}], ",", "True", ",", 
    "True"}], "}"}], TraditionalForm]], "Output"],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{
    InterpretationBox[
     SubsuperscriptBox["a", 
      TagBox[
       StyleBox[
        FormBox[
         TagBox[
          StyleBox["5",
           FontColor->RGBColor[1, 0, 0]],
          StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
         TraditionalForm],
        ShowContents->False],
       StyleForm[#, ShowContents -> False]& ], 
      FormBox[
       TagBox[
        StyleBox["5",
         FontColor->RGBColor[1, 0, 0]],
        StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
       TraditionalForm]],
     Tensor[a, {
       red[5]}, {Void}],
     Editable->False], "\[Equal]", 
    RowBox[{"\[ImaginaryI]", " ", 
     InterpretationBox[
      SubsuperscriptBox["a", 
       TagBox[
        StyleBox[
         FormBox[
          TagBox[
           StyleBox["6",
            FontColor->RGBColor[1, 0, 0]],
           StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
          TraditionalForm],
         ShowContents->False],
        StyleForm[#, ShowContents -> False]& ], 
       FormBox[
        TagBox[
         StyleBox["6",
          FontColor->RGBColor[1, 0, 0]],
         StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
        TraditionalForm]],
      Tensor[a, {
        red[6]}, {Void}],
      Editable->False]}]}], "\[And]", 
   RowBox[{
    InterpretationBox[
     SubsuperscriptBox["a", 
      TagBox[
       StyleBox[
        FormBox[
         TagBox[
          StyleBox["4",
           FontColor->RGBColor[1, 0, 0]],
          StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
         TraditionalForm],
        ShowContents->False],
       StyleForm[#, ShowContents -> False]& ], 
      FormBox[
       TagBox[
        StyleBox["4",
         FontColor->RGBColor[1, 0, 0]],
        StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
       TraditionalForm]],
     Tensor[a, {
       red[4]}, {Void}],
     Editable->False], "\[Equal]", "0"}], "\[And]", 
   RowBox[{
    InterpretationBox[
     SubsuperscriptBox["a", 
      TagBox[
       StyleBox[
        FormBox[
         TagBox[
          StyleBox["3",
           FontColor->RGBColor[1, 0, 0]],
          StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
         TraditionalForm],
        ShowContents->False],
       StyleForm[#, ShowContents -> False]& ], 
      FormBox[
       TagBox[
        StyleBox["3",
         FontColor->RGBColor[1, 0, 0]],
        StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
       TraditionalForm]],
     Tensor[a, {
       red[3]}, {Void}],
     Editable->False], "\[Equal]", "0"}], "\[And]", 
   RowBox[{
    InterpretationBox[
     SubsuperscriptBox["a", 
      TagBox[
       StyleBox[
        FormBox[
         TagBox[
          StyleBox["2",
           FontColor->RGBColor[1, 0, 0]],
          StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
         TraditionalForm],
        ShowContents->False],
       StyleForm[#, ShowContents -> False]& ], 
      FormBox[
       TagBox[
        StyleBox["2",
         FontColor->RGBColor[1, 0, 0]],
        StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
       TraditionalForm]],
     Tensor[a, {
       red[2]}, {Void}],
     Editable->False], "\[Equal]", "0"}], "\[And]", 
   RowBox[{
    InterpretationBox[
     SubsuperscriptBox["a", 
      TagBox[
       StyleBox[
        FormBox[
         TagBox[
          StyleBox["1",
           FontColor->RGBColor[1, 0, 0]],
          StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
         TraditionalForm],
        ShowContents->False],
       StyleForm[#, ShowContents -> False]& ], 
      FormBox[
       TagBox[
        StyleBox["1",
         FontColor->RGBColor[1, 0, 0]],
        StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
       TraditionalForm]],
     Tensor[a, {
       red[1]}, {Void}],
     Editable->False], "\[Equal]", "0"}]}], TraditionalForm]], "Output"],

Cell[BoxData[
 FormBox[
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     InterpretationBox[
      SubsuperscriptBox["a", 
       TagBox[
        StyleBox[
         FormBox[
          TagBox[
           StyleBox["1",
            FontColor->RGBColor[1, 0, 0]],
           StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
          TraditionalForm],
         ShowContents->False],
        StyleForm[#, ShowContents -> False]& ], 
       FormBox[
        TagBox[
         StyleBox["1",
          FontColor->RGBColor[1, 0, 0]],
         StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
        TraditionalForm]],
      Tensor[a, {
        red[1]}, {Void}],
      Editable->False], "\[Rule]", "0"}], ",", 
    RowBox[{
     InterpretationBox[
      SubsuperscriptBox["a", 
       TagBox[
        StyleBox[
         FormBox[
          TagBox[
           StyleBox["2",
            FontColor->RGBColor[1, 0, 0]],
           StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
          TraditionalForm],
         ShowContents->False],
        StyleForm[#, ShowContents -> False]& ], 
       FormBox[
        TagBox[
         StyleBox["2",
          FontColor->RGBColor[1, 0, 0]],
         StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
        TraditionalForm]],
      Tensor[a, {
        red[2]}, {Void}],
      Editable->False], "\[Rule]", "0"}], ",", 
    RowBox[{
     InterpretationBox[
      SubsuperscriptBox["a", 
       TagBox[
        StyleBox[
         FormBox[
          TagBox[
           StyleBox["3",
            FontColor->RGBColor[1, 0, 0]],
           StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
          TraditionalForm],
         ShowContents->False],
        StyleForm[#, ShowContents -> False]& ], 
       FormBox[
        TagBox[
         StyleBox["3",
          FontColor->RGBColor[1, 0, 0]],
         StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
        TraditionalForm]],
      Tensor[a, {
        red[3]}, {Void}],
      Editable->False], "\[Rule]", "0"}], ",", 
    RowBox[{
     InterpretationBox[
      SubsuperscriptBox["a", 
       TagBox[
        StyleBox[
         FormBox[
          TagBox[
           StyleBox["4",
            FontColor->RGBColor[1, 0, 0]],
           StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
          TraditionalForm],
         ShowContents->False],
        StyleForm[#, ShowContents -> False]& ], 
       FormBox[
        TagBox[
         StyleBox["4",
          FontColor->RGBColor[1, 0, 0]],
         StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
        TraditionalForm]],
      Tensor[a, {
        red[4]}, {Void}],
      Editable->False], "\[Rule]", "0"}], ",", 
    RowBox[{
     InterpretationBox[
      SubsuperscriptBox["a", 
       TagBox[
        StyleBox[
         FormBox[
          TagBox[
           StyleBox["5",
            FontColor->RGBColor[1, 0, 0]],
           StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
          TraditionalForm],
         ShowContents->False],
        StyleForm[#, ShowContents -> False]& ], 
       FormBox[
        TagBox[
         StyleBox["5",
          FontColor->RGBColor[1, 0, 0]],
         StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
        TraditionalForm]],
      Tensor[a, {
        red[5]}, {Void}],
      Editable->False], "\[Rule]", "1"}], ",", 
    RowBox[{
     InterpretationBox[
      SubsuperscriptBox["a", 
       TagBox[
        StyleBox[
         FormBox[
          TagBox[
           StyleBox["6",
            FontColor->RGBColor[1, 0, 0]],
           StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
          TraditionalForm],
         ShowContents->False],
        StyleForm[#, ShowContents -> False]& ], 
       FormBox[
        TagBox[
         StyleBox["6",
          FontColor->RGBColor[1, 0, 0]],
         StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
        TraditionalForm]],
      Tensor[a, {
        red[6]}, {Void}],
      Editable->False], "\[Rule]", 
     RowBox[{"-", "\[ImaginaryI]"}]}]}], "}"}], TraditionalForm]], "Output"]
}, Open  ]],

Cell["which gives the following generator as solution", "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"(", 
    RowBox[{"G", "/.", "GRule"}], ")"}], "/.", 
   RowBox[{"Gsol", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"1", "/", "2"}], ",", 
      RowBox[{"-", "1"}]}], "}"}], "]"}]}], "//", "MatrixForm"}]], "Input"],

Cell[BoxData[
 FormBox[
  TagBox[
   RowBox[{"(", "\[NoBreak]", GridBox[{
      {"0", "0", "0"},
      {"0", "0", "0"},
      {"0", "1", "0"}
     },
     GridBoxAlignment->{
      "Columns" -> {{Decimal}}, "ColumnsIndexed" -> {}, 
       "Rows" -> {{Baseline}}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
   Function[BoxForm`e$, 
    MatrixForm[BoxForm`e$]]], TraditionalForm]], "Output"]
}, Open  ]],

Cell["\<\
From this point we obtained the generators associate to the positive root \
vectors\
\>", "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"PositiveCanonicalGenerators", "=", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"G", "/.", "GRule"}], ")"}], "/.", 
        RowBox[{"Gsol", "[", "#", "]"}]}], ")"}], "&"}], "/@", 
     "PositiveRootVectors"}]}], "}"}], "//", "MatrixForm"}]], "Input"],

Cell[BoxData[
 FormBox[
  InterpretationBox[
   RowBox[{"(", "\[NoBreak]", GridBox[{
      {
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "1", "0"},
          {"0", "0", "0"},
          {"0", "0", "0"}
         },
         GridBoxAlignment->{
          "Columns" -> {{Decimal}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "0", "1"},
          {"0", "0", "0"},
          {"0", "0", "0"}
         },
         GridBoxAlignment->{
          "Columns" -> {{Decimal}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "0", "0"},
          {"0", "0", "0"},
          {"0", "1", "0"}
         },
         GridBoxAlignment->{
          "Columns" -> {{Decimal}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}}], "\[NoBreak]", 
        ")"}]}
     }], "\[NoBreak]", ")"}],
   MatrixForm[{{{{0, 1, 0}, {0, 0, 0}, {0, 0, 0}}, {{0, 0, 1}, {0, 0, 0}, {0, 
    0, 0}}, {{0, 0, 0}, {0, 0, 0}, {0, 1, 0}}}}]], TraditionalForm]], "Output"]
}, Open  ]],

Cell["\<\
The generators of the negative root vectors could be calculated in similar \
way but they could be calculated taking the Hermitian conjugation\
\>", "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"NegativeCanonicalGenerators", "=", 
    RowBox[{
     RowBox[{
      RowBox[{"Conjugate", "[", 
       RowBox[{"Transpose", "[", "#", "]"}], "]"}], "&"}], "/@", 
     "PositiveCanonicalGenerators"}]}], "}"}], "//", "MatrixForm"}]], "Input"],

Cell[BoxData[
 FormBox[
  InterpretationBox[
   RowBox[{"(", "\[NoBreak]", GridBox[{
      {
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "0", "0"},
          {"1", "0", "0"},
          {"0", "0", "0"}
         },
         GridBoxAlignment->{
          "Columns" -> {{Decimal}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "0", "0"},
          {"0", "0", "0"},
          {"1", "0", "0"}
         },
         GridBoxAlignment->{
          "Columns" -> {{Decimal}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"0", "0", "0"},
          {"0", "0", "1"},
          {"0", "0", "0"}
         },
         GridBoxAlignment->{
          "Columns" -> {{Decimal}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}}], "\[NoBreak]", 
        ")"}]}
     }], "\[NoBreak]", ")"}],
   MatrixForm[{{{{0, 0, 0}, {1, 0, 0}, {0, 0, 0}}, {{0, 0, 0}, {0, 0, 0}, {1, 
    0, 0}}, {{0, 0, 0}, {0, 0, 1}, {0, 0, 0}}}}]], TraditionalForm]], "Output"]
}, Open  ]],

Cell[TextData[{
 "Now we append the two weight generators and assign the value rules \
associated to ",
 Cell[BoxData[
  FormBox[
   InterpretationBox[
    SubsuperscriptBox["T", 
     FormBox[
      TagBox[
       StyleBox["i",
        FontColor->RGBColor[1, 0, 0]],
       StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
      TraditionalForm], 
     TagBox[
      StyleBox[
       FormBox[
        TagBox[
         StyleBox["i",
          FontColor->RGBColor[1, 0, 0]],
         StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
        TraditionalForm],
       ShowContents->False],
      StyleForm[#, ShowContents -> False]& ]],
    Tensor[T, {Void}, {
      red[i]}],
    Editable->False], TraditionalForm]]]
}], "Text"],

Cell[BoxData[
 RowBox[{"SetTensorValueRules", "[", 
  RowBox[{
   RowBox[{"Td", "[", 
    RowBox[{"red", "@", "k"}], "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"Join", "[", 
    RowBox[{
    "PositiveCanonicalGenerators", ",", "NegativeCanonicalGenerators", ",", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Fd", "[", 
         RowBox[{"red", "@", "7"}], "]"}], ",", 
        RowBox[{"Fd", "[", 
         RowBox[{"red", "@", "8"}], "]"}]}], "}"}], "/.", 
      RowBox[{"TensorValueRules", "[", "F", "]"}]}]}], "]"}], 
   "\[IndentingNewLine]", ",", "True"}], "]"}]], "Input"],

Cell["\<\
The following diagram shows all the root vectors and their respective \
generators (evaluate the thin closed cell directly below)\
\>", "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "roots", "}"}], ",", 
    RowBox[{
     RowBox[{"roots", "=", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{
            "#1", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], ",", 
            RowBox[{
            "#1", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], ",", 
            RowBox[{
            "#1", "\[LeftDoubleBracket]", "6", "\[RightDoubleBracket]"}], ",", 
            RowBox[{
            "#1", "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}], ",", 
            RowBox[{
            "#1", "\[LeftDoubleBracket]", "5", "\[RightDoubleBracket]"}], ",", 
            RowBox[{
            "#1", "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}]}], 
           "}"}], "&"}], ")"}], "[", 
        RowBox[{
         RowBox[{"EinsteinArray", "[", "RootIndices", "]"}], "[", 
         RowBox[{"\[Alpha]d", "[", 
          RowBox[{"red", "[", "i", "]"}], "]"}], "]"}], "]"}], "/.", 
       "\[InvisibleSpace]", 
       RowBox[{"TensorValueRules", "[", "\[Alpha]", "]"}]}]}], ";", 
     RowBox[{"Draw2D", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"Gray", ",", 
         RowBox[{"AbsoluteThickness", "[", "1", "]"}], ",", 
         RowBox[{"Line", "[", 
          RowBox[{"Join", "[", 
           RowBox[{"roots", ",", 
            RowBox[{"{", 
             RowBox[{"First", "[", "roots", "]"}], "}"}]}], "]"}], "]"}], ",",
          "Blue", ",", 
         RowBox[{"AbsoluteThickness", "[", "1", "]"}], ",", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"Arrow", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"0", ",", "0"}], "}"}], ",", "#1"}], "]"}], "&"}], 
           ")"}], "/@", "roots"}], ",", 
         RowBox[{"RGBColor", "[", 
          RowBox[{"0", ",", "0", ",", "0"}], "]"}], ",", 
         RowBox[{"Text", "[", 
          RowBox[{
           RowBox[{"Style", "[", 
            RowBox[{
             RowBox[{"Td", "[", 
              RowBox[{"red", "[", "1", "]"}], "]"}], ",", 
             RowBox[{"FontSize", "\[Rule]", "14"}]}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"1.1`", ",", "0.1`"}], "}"}]}], "]"}], ",", 
         RowBox[{"Text", "[", 
          RowBox[{
           RowBox[{"Style", "[", 
            RowBox[{
             RowBox[{"Td", "[", 
              RowBox[{"red", "[", "4", "]"}], "]"}], ",", 
             RowBox[{"FontSize", "\[Rule]", "14"}]}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "1.1`"}], ",", "0.1`"}], "}"}]}], "]"}], ",", 
         RowBox[{"Text", "[", 
          RowBox[{
           RowBox[{"Style", "[", 
            RowBox[{
             RowBox[{"Td", "[", 
              RowBox[{"red", "[", "2", "]"}], "]"}], ",", 
             RowBox[{"FontSize", "\[Rule]", "14"}]}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"0.6`", ",", "1.1`"}], "}"}]}], "]"}], ",", 
         RowBox[{"Text", "[", 
          RowBox[{
           RowBox[{"Style", "[", 
            RowBox[{
             RowBox[{"Td", "[", 
              RowBox[{"red", "[", "5", "]"}], "]"}], ",", 
             RowBox[{"FontSize", "\[Rule]", "14"}]}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "0.6`"}], ",", 
             RowBox[{"-", "1.1`"}]}], "}"}]}], "]"}], ",", 
         RowBox[{"Text", "[", 
          RowBox[{
           RowBox[{"Style", "[", 
            RowBox[{
             RowBox[{"Td", "[", 
              RowBox[{"red", "[", "6", "]"}], "]"}], ",", 
             RowBox[{"FontSize", "\[Rule]", "14"}]}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "0.6`"}], ",", "1.1`"}], "}"}]}], "]"}], ",", 
         RowBox[{"Text", "[", 
          RowBox[{
           RowBox[{"Style", "[", 
            RowBox[{
             RowBox[{"Td", "[", 
              RowBox[{"red", "[", "3", "]"}], "]"}], ",", 
             RowBox[{"FontSize", "\[Rule]", "14"}]}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"0.6`", ",", 
             RowBox[{"-", "1.1`"}]}], "}"}]}], "]"}]}], "}"}], ",", 
       RowBox[{"Frame", "\[Rule]", "True"}], ",", 
       RowBox[{"FrameTicks", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"CustomTicks", "[", 
           RowBox[{"Identity", ",", 
            RowBox[{"databased", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "1"}], ",", 
               RowBox[{"-", 
                FractionBox["1", "2"]}], ",", 
               FractionBox["1", "2"], ",", "1"}], "}"}], "]"}]}], "]"}], ",", 
          
          RowBox[{"CustomTicks", "[", 
           RowBox[{"Identity", ",", 
            RowBox[{"databased", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "1"}], ",", "0", ",", "1"}], "}"}], "]"}]}], 
           "]"}], ",", 
          RowBox[{"CustomTicks", "[", 
           RowBox[{"Identity", ",", 
            RowBox[{"databased", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "1"}], ",", 
               RowBox[{"-", 
                FractionBox["1", "2"]}], ",", 
               FractionBox["1", "2"], ",", "1"}], "}"}], "]"}], ",", 
            RowBox[{"CTNumberFunction", "\[Rule]", 
             RowBox[{"(", 
              RowBox[{"\"\<\>\"", "&"}], ")"}]}]}], "]"}], ",", 
          RowBox[{"CustomTicks", "[", 
           RowBox[{"Identity", ",", 
            RowBox[{"databased", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "1"}], ",", "0", ",", "1"}], "}"}], "]"}], ",", 
            RowBox[{"CTNumberFunction", "\[Rule]", 
             RowBox[{"(", 
              RowBox[{"\"\<\>\"", "&"}], ")"}]}]}], "]"}]}], "}"}]}], ",", 
       RowBox[{"PlotLabel", "\[Rule]", "\"\<SU[3] Roots\>\""}], ",", 
       RowBox[{"AspectRatio", "\[Rule]", "Automatic"}], ",", 
       RowBox[{"PlotRange", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "1.2`"}], ",", "1.2`"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "1.2`"}], ",", "1.2`"}], "}"}]}], "}"}]}], ",", 
       RowBox[{"Axes", "\[Rule]", "True"}], ",", 
       RowBox[{"RotateLabel", "\[Rule]", "False"}], ",", 
       RowBox[{"AxesStyle", "\[Rule]", 
        RowBox[{"GrayLevel", "[", "0.7`", "]"}]}], ",", 
       RowBox[{"FrameLabel", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Style", "[", 
           RowBox[{
            RowBox[{"Td", "[", 
             RowBox[{"red", "[", "7", "]"}], "]"}], ",", 
            RowBox[{"FontSize", "\[Rule]", "16"}]}], "]"}], ",", 
          RowBox[{"Style", "[", 
           RowBox[{
            RowBox[{"Tensor", "[", 
             RowBox[{"T", ",", 
              RowBox[{"{", "Void", "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"red", "[", "8", "]"}], "}"}]}], "]"}], ",", 
            RowBox[{"FontSize", "\[Rule]", "16"}]}], "]"}]}], "}"}]}]}], 
      "]"}]}]}], "]"}], ";"}]], "Input"],

Cell[GraphicsData["PostScript", "\<\
%!
%%Creator: Mathematica
%%AspectRatio: 1 
MathPictureStart
/Mabs {
Mgmatrix idtransform
Mtmatrix dtransform
} bind def
/Mabsadd { Mabs
3 -1 roll add
3 1 roll add
exch } bind def
%% Graphics
%%IncludeResource: font Courier
%%IncludeFont: Courier
/Courier findfont 10  scalefont  setfont
% Scaling calculations
0.5 0.416667 0.5 0.416667 [
[.08333 -0.0125 -6 -9 ]
[.08333 -0.0125 6 0 ]
[.29167 -0.0125 -11.4062 -19.9375 ]
[.29167 -0.0125 11.4062 0 ]
[.70833 -0.0125 -8.09375 -19.9375 ]
[.70833 -0.0125 8.09375 0 ]
[.91667 -0.0125 -3 -9 ]
[.91667 -0.0125 3 0 ]
[ 0 0 -0.125 0 ]
[.5 -0.0125 -10.7188 -38.5 ]
[.5 -0.0125 10.7188 -19.9375 ]
[-0.0125 .08333 -12 -4.5 ]
[-0.0125 .08333 0 4.5 ]
[-0.0125 .5 -6 -4.5 ]
[-0.0125 .5 0 4.5 ]
[-0.0125 .91667 -6 -4.5 ]
[-0.0125 .91667 0 4.5 ]
[ 0 0 -0.125 0 ]
[-0.01875 .5 -33.4375 -9.4375 ]
[-0.01875 .5 -12 9.4375 ]
[ 0 1 .125 0 ]
[ 1 0 .125 0 ]
[.5 1.0125 -35 0 ]
[.5 1.0125 35 10.125 ]
[ 0 0 0 0 ]
[ 1 1 0 0 ]
] MathScale
% Start of Graphics
1 setlinecap
1 setlinejoin
newpath
0 g
.25 Mabswid
[ ] 0 setdash
.08333 0 m
.08333 .00625 L
s
[(-1)] .08333 -0.0125 0 1 Mshowa
.29167 0 m
.29167 .00625 L
s
gsave
.29167 -0.0125 -72.4062 -23.9375 Mabsadd m
1 1 Mabs scale
currentpoint translate
0 27.9375 translate 1 -1 scale
/g { setgray} bind def
/k { setcmykcolor} bind def
/p { gsave} bind def
/r { setrgbcolor} bind def
/w { setlinewidth} bind def
/C { curveto} bind def
/F { fill} bind def
/L { lineto} bind def
/rL { rlineto} bind def
/P { grestore} bind def
/s { stroke} bind def
/S { show} bind def
/N {currentpoint 3 -1 roll show moveto} bind def
/Msf { findfont exch scalefont [1 0 0 -1 0 0 ] makefont setfont} bind def
/m { moveto} bind def
/Mr { rmoveto} bind def
/Mx {currentpoint exch pop moveto} bind def
/My {currentpoint pop exch moveto} bind def
/X {0 rmoveto} bind def
/Y {0 exch rmoveto} bind def
/MISOfy
{
    /newfontname exch def
    /oldfontname exch def

    oldfontname findfont
    dup length dict begin
        {1 index /FID ne {def} {pop pop} ifelse} forall
        /Encoding ISOLatin1Encoding def
        currentdict
    end

    newfontname exch definefont pop
} def
63.000 16.938 moveto
%%IncludeResource: font Mathematica1Mono
%%IncludeFont: Mathematica1Mono
/Mathematica1Mono findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
(-) show
72.688 11.188 moveto
%%IncludeResource: font Courier
%%IncludeFont: Courier
%%BeginResource: font Courier-MISO
%%BeginFont: Courier-MISO
/Courier /Courier-MISO MISOfy
%%EndFont
%%EndResource
%%IncludeResource: font Courier-MISO
%%IncludeFont: Courier-MISO
/Courier-MISO findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
(1) show
%%IncludeResource: font Mathematica1Mono
%%IncludeFont: Mathematica1Mono
/Mathematica1Mono findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
71.438 16.938 moveto
(\\200) show
73.500 16.938 moveto
(\\200) show
75.562 16.938 moveto
(\\200) show
77.625 16.938 moveto
(\\200) show
78.062 16.938 moveto
(\\200) show
72.688 22.938 moveto
%%IncludeResource: font Courier-MISO
%%IncludeFont: Courier-MISO
/Courier-MISO findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
(2) show
1.000 setlinewidth
grestore
.70833 0 m
.70833 .00625 L
s
gsave
.70833 -0.0125 -69.0938 -23.9375 Mabsadd m
1 1 Mabs scale
currentpoint translate
0 27.9375 translate 1 -1 scale
/g { setgray} bind def
/k { setcmykcolor} bind def
/p { gsave} bind def
/r { setrgbcolor} bind def
/w { setlinewidth} bind def
/C { curveto} bind def
/F { fill} bind def
/L { lineto} bind def
/rL { rlineto} bind def
/P { grestore} bind def
/s { stroke} bind def
/S { show} bind def
/N {currentpoint 3 -1 roll show moveto} bind def
/Msf { findfont exch scalefont [1 0 0 -1 0 0 ] makefont setfont} bind def
/m { moveto} bind def
/Mr { rmoveto} bind def
/Mx {currentpoint exch pop moveto} bind def
/My {currentpoint pop exch moveto} bind def
/X {0 rmoveto} bind def
/Y {0 exch rmoveto} bind def
/MISOfy
{
    /newfontname exch def
    /oldfontname exch def

    oldfontname findfont
    dup length dict begin
        {1 index /FID ne {def} {pop pop} ifelse} forall
        /Encoding ISOLatin1Encoding def
        currentdict
    end

    newfontname exch definefont pop
} def
66.062 11.188 moveto
%%IncludeResource: font Courier
%%IncludeFont: Courier
%%BeginResource: font Courier-MISO
%%BeginFont: Courier-MISO
/Courier /Courier-MISO MISOfy
%%EndFont
%%EndResource
%%IncludeResource: font Courier-MISO
%%IncludeFont: Courier-MISO
/Courier-MISO findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
(1) show
%%IncludeResource: font Mathematica1Mono
%%IncludeFont: Mathematica1Mono
/Mathematica1Mono findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
64.812 16.938 moveto
(\\200) show
66.875 16.938 moveto
(\\200) show
68.938 16.938 moveto
(\\200) show
71.000 16.938 moveto
(\\200) show
71.438 16.938 moveto
(\\200) show
66.062 22.938 moveto
%%IncludeResource: font Courier-MISO
%%IncludeFont: Courier-MISO
/Courier-MISO findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
(2) show
1.000 setlinewidth
grestore
.91667 0 m
.91667 .00625 L
s
[(1)] .91667 -0.0125 0 1 Mshowa
0 0 m
1 0 L
s
gsave
.5 -0.0125 -71.7188 -42.5 Mabsadd m
1 1 Mabs scale
currentpoint translate
0 26.5625 translate 1 -1 scale
/g { setgray} bind def
/k { setcmykcolor} bind def
/p { gsave} bind def
/r { setrgbcolor} bind def
/w { setlinewidth} bind def
/C { curveto} bind def
/F { fill} bind def
/L { lineto} bind def
/rL { rlineto} bind def
/P { grestore} bind def
/s { stroke} bind def
/S { show} bind def
/N {currentpoint 3 -1 roll show moveto} bind def
/Msf { findfont exch scalefont [1 0 0 -1 0 0 ] makefont setfont} bind def
/m { moveto} bind def
/Mr { rmoveto} bind def
/Mx {currentpoint exch pop moveto} bind def
/My {currentpoint pop exch moveto} bind def
/X {0 rmoveto} bind def
/Y {0 exch rmoveto} bind def
/MISOfy
{
    /newfontname exch def
    /oldfontname exch def

    oldfontname findfont
    dup length dict begin
        {1 index /FID ne {def} {pop pop} ifelse} forall
        /Encoding ISOLatin1Encoding def
        currentdict
    end

    newfontname exch definefont pop
} def
63.000 18.000 moveto
%%IncludeResource: font Courier
%%IncludeFont: Courier
%%BeginResource: font Courier-MISO
%%BeginFont: Courier-MISO
/Courier /Courier-MISO MISOfy
%%EndFont
%%EndResource
%%IncludeResource: font Courier-MISO
%%IncludeFont: Courier-MISO
/Courier-MISO findfont 16.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
(T) show
72.562 21.562 moveto
%%IncludeResource: font Courier-MISO
%%IncludeFont: Courier-MISO
/Courier-MISO findfont 11.375 scalefont
[1 0 0 -1 0 0 ] makefont setfont
1.000 0.000 0.000 setrgbcolor
(7) show
1.000 setlinewidth
grestore
0 .08333 m
.00625 .08333 L
s
[(-1)] -0.0125 .08333 1 0 Mshowa
0 .5 m
.00625 .5 L
s
[(0)] -0.0125 .5 1 0 Mshowa
0 .91667 m
.00625 .91667 L
s
[(1)] -0.0125 .91667 1 0 Mshowa
0 0 m
0 1 L
s
gsave
-0.01875 .5 -94.4375 -13.4375 Mabsadd m
1 1 Mabs scale
currentpoint translate
0 26.875 translate 1 -1 scale
/g { setgray} bind def
/k { setcmykcolor} bind def
/p { gsave} bind def
/r { setrgbcolor} bind def
/w { setlinewidth} bind def
/C { curveto} bind def
/F { fill} bind def
/L { lineto} bind def
/rL { rlineto} bind def
/P { grestore} bind def
/s { stroke} bind def
/S { show} bind def
/N {currentpoint 3 -1 roll show moveto} bind def
/Msf { findfont exch scalefont [1 0 0 -1 0 0 ] makefont setfont} bind def
/m { moveto} bind def
/Mr { rmoveto} bind def
/Mx {currentpoint exch pop moveto} bind def
/My {currentpoint pop exch moveto} bind def
/X {0 rmoveto} bind def
/Y {0 exch rmoveto} bind def
/MISOfy
{
    /newfontname exch def
    /oldfontname exch def

    oldfontname findfont
    dup length dict begin
        {1 index /FID ne {def} {pop pop} ifelse} forall
        /Encoding ISOLatin1Encoding def
        currentdict
    end

    newfontname exch definefont pop
} def
63.000 18.188 moveto
%%IncludeResource: font Courier
%%IncludeFont: Courier
%%BeginResource: font Courier-MISO
%%BeginFont: Courier-MISO
/Courier /Courier-MISO MISOfy
%%EndFont
%%EndResource
%%IncludeResource: font Courier-MISO
%%IncludeFont: Courier-MISO
/Courier-MISO findfont 16.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
(T) show
72.562 21.750 moveto
%%IncludeResource: font Courier-MISO
%%IncludeFont: Courier-MISO
/Courier-MISO findfont 11.375 scalefont
[1 0 0 -1 0 0 ] makefont setfont
1.000 0.000 0.000 setrgbcolor
(8) show
1.000 setlinewidth
grestore
.08333 .99375 m
.08333 1 L
s
.29167 .99375 m
.29167 1 L
s
.70833 .99375 m
.70833 1 L
s
.91667 .99375 m
.91667 1 L
s
0 1 m
1 1 L
s
.99375 .08333 m
1 .08333 L
s
.99375 .5 m
1 .5 L
s
.99375 .91667 m
1 .91667 L
s
1 0 m
1 1 L
s
.7 g
0 .5 m
1 .5 L
s
.5 0 m
.5 1 L
s
0 g
gsave
.5 1.0125 -96 -4 Mabsadd m
1 1 Mabs scale
currentpoint translate
0 18.125 translate 1 -1 scale
/g { setgray} bind def
/k { setcmykcolor} bind def
/p { gsave} bind def
/r { setrgbcolor} bind def
/w { setlinewidth} bind def
/C { curveto} bind def
/F { fill} bind def
/L { lineto} bind def
/rL { rlineto} bind def
/P { grestore} bind def
/s { stroke} bind def
/S { show} bind def
/N {currentpoint 3 -1 roll show moveto} bind def
/Msf { findfont exch scalefont [1 0 0 -1 0 0 ] makefont setfont} bind def
/m { moveto} bind def
/Mr { rmoveto} bind def
/Mx {currentpoint exch pop moveto} bind def
/My {currentpoint pop exch moveto} bind def
/X {0 rmoveto} bind def
/Y {0 exch rmoveto} bind def
63.000 11.250 moveto
%%IncludeResource: font Courier
%%IncludeFont: Courier
/Courier findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
0.000 0.000 rmoveto
63.000 11.250 moveto
%%IncludeResource: font Courier
%%IncludeFont: Courier
/Courier findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
(SU) show
%%IncludeResource: font Mathematica2Mono
%%IncludeFont: Mathematica2Mono
/Mathematica2Mono findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
75.000 11.250 moveto
(@) show
81.000 11.250 moveto
%%IncludeResource: font Courier
%%IncludeFont: Courier
/Courier findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
(3) show
%%IncludeResource: font Mathematica2Mono
%%IncludeFont: Mathematica2Mono
/Mathematica2Mono findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
87.000 11.250 moveto
(D) show
99.000 11.250 moveto
%%IncludeResource: font Courier
%%IncludeFont: Courier
/Courier findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
(Roots) show
129.000 11.250 moveto
%%IncludeResource: font Courier
%%IncludeFont: Courier
/Courier findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
0.000 0.000 rmoveto
1.000 setlinewidth
grestore
0 0 m
1 0 L
1 1 L
0 1 L
closepath
clip
newpath
% Start of user PostScript
/mathtops {
gsave
MBeginOrig
moveto
MEndOrig
currentpoint
grestore
} bind def
/MAtocoords {
mathtops 4 2 roll mathtops
4 copy pop pop
3 -1 roll sub
/arry exch def
exch sub
/arrx exch def
arrx dup mul
arry dup mul
add sqrt
/arrl exch def
translate
} bind def
/MAarrowhead1 {
gsave
MAtocoords
arrl 0. eq
{ 0 0 Mdot }
{
[ arrx arrl div
arry arrl div
-1 arry mul arrl div
arrx arrl div
0 0 ]
concat
-0.05 0.0125 moveto 0 0 lineto
-0.05 -0.0125 lineto fill
-0.05 0.0125 moveto 0 0 lineto
-0.05 -0.0125 lineto
-0.05 0.0125 lineto stroke
} ifelse
grestore
} def
% End of user PostScript
.753 .753 .753 r
1 Mabswid
.91667 .5 m
.70833 .91667 L
.29167 .91667 L
.08333 .5 L
.29167 .08333 L
.70833 .08333 L
.91667 .5 L
s
0 0 1 r
.5 .5 m
.91667 .5 L
s
% Start of user PostScript
0 0 1. 0 MAarrowhead1
% End of user PostScript
.5 .5 m
.70833 .91667 L
s
% Start of user PostScript
0 0 0.5 1. MAarrowhead1
% End of user PostScript
.5 .5 m
.29167 .91667 L
s
% Start of user PostScript
0 0 -0.5 1. MAarrowhead1
% End of user PostScript
.5 .5 m
.08333 .5 L
s
% Start of user PostScript
0 0 -1. 0 MAarrowhead1
% End of user PostScript
.5 .5 m
.29167 .08333 L
s
% Start of user PostScript
0 0 -0.5 -1. MAarrowhead1
% End of user PostScript
.5 .5 m
.70833 .08333 L
s
% Start of user PostScript
0 0 0.5 -1. MAarrowhead1
% End of user PostScript
0 0 0 r
gsave
.95833 .54167 -70.6875 -12.2812 Mabsadd m
1 1 Mabs scale
currentpoint translate
0 24.5625 translate 1 -1 scale
/g { setgray} bind def
/k { setcmykcolor} bind def
/p { gsave} bind def
/r { setrgbcolor} bind def
/w { setlinewidth} bind def
/C { curveto} bind def
/F { fill} bind def
/L { lineto} bind def
/rL { rlineto} bind def
/P { grestore} bind def
/s { stroke} bind def
/S { show} bind def
/N {currentpoint 3 -1 roll show moveto} bind def
/Msf { findfont exch scalefont [1 0 0 -1 0 0 ] makefont setfont} bind def
/m { moveto} bind def
/Mr { rmoveto} bind def
/Mx {currentpoint exch pop moveto} bind def
/My {currentpoint pop exch moveto} bind def
/X {0 rmoveto} bind def
/Y {0 exch rmoveto} bind def
/MISOfy
{
    /newfontname exch def
    /oldfontname exch def

    oldfontname findfont
    dup length dict begin
        {1 index /FID ne {def} {pop pop} ifelse} forall
        /Encoding ISOLatin1Encoding def
        currentdict
    end

    newfontname exch definefont pop
} def
63.000 16.438 moveto
%%IncludeResource: font Courier
%%IncludeFont: Courier
%%BeginResource: font Courier-MISO
%%BeginFont: Courier-MISO
/Courier /Courier-MISO MISOfy
%%EndFont
%%EndResource
%%IncludeResource: font Courier-MISO
%%IncludeFont: Courier-MISO
/Courier-MISO findfont 14.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
(T) show
71.375 19.562 moveto
%%IncludeResource: font Courier-MISO
%%IncludeFont: Courier-MISO
/Courier-MISO findfont 9.938 scalefont
[1 0 0 -1 0 0 ] makefont setfont
1.000 0.000 0.000 setrgbcolor
(1) show
1.000 setlinewidth
grestore
gsave
.04167 .54167 -70.6875 -12.2812 Mabsadd m
1 1 Mabs scale
currentpoint translate
0 24.5625 translate 1 -1 scale
/g { setgray} bind def
/k { setcmykcolor} bind def
/p { gsave} bind def
/r { setrgbcolor} bind def
/w { setlinewidth} bind def
/C { curveto} bind def
/F { fill} bind def
/L { lineto} bind def
/rL { rlineto} bind def
/P { grestore} bind def
/s { stroke} bind def
/S { show} bind def
/N {currentpoint 3 -1 roll show moveto} bind def
/Msf { findfont exch scalefont [1 0 0 -1 0 0 ] makefont setfont} bind def
/m { moveto} bind def
/Mr { rmoveto} bind def
/Mx {currentpoint exch pop moveto} bind def
/My {currentpoint pop exch moveto} bind def
/X {0 rmoveto} bind def
/Y {0 exch rmoveto} bind def
/MISOfy
{
    /newfontname exch def
    /oldfontname exch def

    oldfontname findfont
    dup length dict begin
        {1 index /FID ne {def} {pop pop} ifelse} forall
        /Encoding ISOLatin1Encoding def
        currentdict
    end

    newfontname exch definefont pop
} def
63.000 16.438 moveto
%%IncludeResource: font Courier
%%IncludeFont: Courier
%%BeginResource: font Courier-MISO
%%BeginFont: Courier-MISO
/Courier /Courier-MISO MISOfy
%%EndFont
%%EndResource
%%IncludeResource: font Courier-MISO
%%IncludeFont: Courier-MISO
/Courier-MISO findfont 14.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
(T) show
71.375 19.562 moveto
%%IncludeResource: font Courier-MISO
%%IncludeFont: Courier-MISO
/Courier-MISO findfont 9.938 scalefont
[1 0 0 -1 0 0 ] makefont setfont
1.000 0.000 0.000 setrgbcolor
(4) show
1.000 setlinewidth
grestore
gsave
.75 .95833 -70.6875 -12.2812 Mabsadd m
1 1 Mabs scale
currentpoint translate
0 24.5625 translate 1 -1 scale
/g { setgray} bind def
/k { setcmykcolor} bind def
/p { gsave} bind def
/r { setrgbcolor} bind def
/w { setlinewidth} bind def
/C { curveto} bind def
/F { fill} bind def
/L { lineto} bind def
/rL { rlineto} bind def
/P { grestore} bind def
/s { stroke} bind def
/S { show} bind def
/N {currentpoint 3 -1 roll show moveto} bind def
/Msf { findfont exch scalefont [1 0 0 -1 0 0 ] makefont setfont} bind def
/m { moveto} bind def
/Mr { rmoveto} bind def
/Mx {currentpoint exch pop moveto} bind def
/My {currentpoint pop exch moveto} bind def
/X {0 rmoveto} bind def
/Y {0 exch rmoveto} bind def
/MISOfy
{
    /newfontname exch def
    /oldfontname exch def

    oldfontname findfont
    dup length dict begin
        {1 index /FID ne {def} {pop pop} ifelse} forall
        /Encoding ISOLatin1Encoding def
        currentdict
    end

    newfontname exch definefont pop
} def
63.000 16.438 moveto
%%IncludeResource: font Courier
%%IncludeFont: Courier
%%BeginResource: font Courier-MISO
%%BeginFont: Courier-MISO
/Courier /Courier-MISO MISOfy
%%EndFont
%%EndResource
%%IncludeResource: font Courier-MISO
%%IncludeFont: Courier-MISO
/Courier-MISO findfont 14.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
(T) show
71.375 19.562 moveto
%%IncludeResource: font Courier-MISO
%%IncludeFont: Courier-MISO
/Courier-MISO findfont 9.938 scalefont
[1 0 0 -1 0 0 ] makefont setfont
1.000 0.000 0.000 setrgbcolor
(2) show
1.000 setlinewidth
grestore
gsave
.25 .04167 -70.6875 -12.2812 Mabsadd m
1 1 Mabs scale
currentpoint translate
0 24.5625 translate 1 -1 scale
/g { setgray} bind def
/k { setcmykcolor} bind def
/p { gsave} bind def
/r { setrgbcolor} bind def
/w { setlinewidth} bind def
/C { curveto} bind def
/F { fill} bind def
/L { lineto} bind def
/rL { rlineto} bind def
/P { grestore} bind def
/s { stroke} bind def
/S { show} bind def
/N {currentpoint 3 -1 roll show moveto} bind def
/Msf { findfont exch scalefont [1 0 0 -1 0 0 ] makefont setfont} bind def
/m { moveto} bind def
/Mr { rmoveto} bind def
/Mx {currentpoint exch pop moveto} bind def
/My {currentpoint pop exch moveto} bind def
/X {0 rmoveto} bind def
/Y {0 exch rmoveto} bind def
/MISOfy
{
    /newfontname exch def
    /oldfontname exch def

    oldfontname findfont
    dup length dict begin
        {1 index /FID ne {def} {pop pop} ifelse} forall
        /Encoding ISOLatin1Encoding def
        currentdict
    end

    newfontname exch definefont pop
} def
63.000 16.312 moveto
%%IncludeResource: font Courier
%%IncludeFont: Courier
%%BeginResource: font Courier-MISO
%%BeginFont: Courier-MISO
/Courier /Courier-MISO MISOfy
%%EndFont
%%EndResource
%%IncludeResource: font Courier-MISO
%%IncludeFont: Courier-MISO
/Courier-MISO findfont 14.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
(T) show
71.375 19.438 moveto
%%IncludeResource: font Courier-MISO
%%IncludeFont: Courier-MISO
/Courier-MISO findfont 9.938 scalefont
[1 0 0 -1 0 0 ] makefont setfont
1.000 0.000 0.000 setrgbcolor
(5) show
1.000 setlinewidth
grestore
gsave
.25 .95833 -70.6875 -12.3438 Mabsadd m
1 1 Mabs scale
currentpoint translate
0 24.6875 translate 1 -1 scale
/g { setgray} bind def
/k { setcmykcolor} bind def
/p { gsave} bind def
/r { setrgbcolor} bind def
/w { setlinewidth} bind def
/C { curveto} bind def
/F { fill} bind def
/L { lineto} bind def
/rL { rlineto} bind def
/P { grestore} bind def
/s { stroke} bind def
/S { show} bind def
/N {currentpoint 3 -1 roll show moveto} bind def
/Msf { findfont exch scalefont [1 0 0 -1 0 0 ] makefont setfont} bind def
/m { moveto} bind def
/Mr { rmoveto} bind def
/Mx {currentpoint exch pop moveto} bind def
/My {currentpoint pop exch moveto} bind def
/X {0 rmoveto} bind def
/Y {0 exch rmoveto} bind def
/MISOfy
{
    /newfontname exch def
    /oldfontname exch def

    oldfontname findfont
    dup length dict begin
        {1 index /FID ne {def} {pop pop} ifelse} forall
        /Encoding ISOLatin1Encoding def
        currentdict
    end

    newfontname exch definefont pop
} def
63.000 16.438 moveto
%%IncludeResource: font Courier
%%IncludeFont: Courier
%%BeginResource: font Courier-MISO
%%BeginFont: Courier-MISO
/Courier /Courier-MISO MISOfy
%%EndFont
%%EndResource
%%IncludeResource: font Courier-MISO
%%IncludeFont: Courier-MISO
/Courier-MISO findfont 14.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
(T) show
71.375 19.562 moveto
%%IncludeResource: font Courier-MISO
%%IncludeFont: Courier-MISO
/Courier-MISO findfont 9.938 scalefont
[1 0 0 -1 0 0 ] makefont setfont
1.000 0.000 0.000 setrgbcolor
(6) show
1.000 setlinewidth
grestore
gsave
.75 .04167 -70.6875 -12.3438 Mabsadd m
1 1 Mabs scale
currentpoint translate
0 24.6875 translate 1 -1 scale
/g { setgray} bind def
/k { setcmykcolor} bind def
/p { gsave} bind def
/r { setrgbcolor} bind def
/w { setlinewidth} bind def
/C { curveto} bind def
/F { fill} bind def
/L { lineto} bind def
/rL { rlineto} bind def
/P { grestore} bind def
/s { stroke} bind def
/S { show} bind def
/N {currentpoint 3 -1 roll show moveto} bind def
/Msf { findfont exch scalefont [1 0 0 -1 0 0 ] makefont setfont} bind def
/m { moveto} bind def
/Mr { rmoveto} bind def
/Mx {currentpoint exch pop moveto} bind def
/My {currentpoint pop exch moveto} bind def
/X {0 rmoveto} bind def
/Y {0 exch rmoveto} bind def
/MISOfy
{
    /newfontname exch def
    /oldfontname exch def

    oldfontname findfont
    dup length dict begin
        {1 index /FID ne {def} {pop pop} ifelse} forall
        /Encoding ISOLatin1Encoding def
        currentdict
    end

    newfontname exch definefont pop
} def
63.000 16.438 moveto
%%IncludeResource: font Courier
%%IncludeFont: Courier
%%BeginResource: font Courier-MISO
%%BeginFont: Courier-MISO
/Courier /Courier-MISO MISOfy
%%EndFont
%%EndResource
%%IncludeResource: font Courier-MISO
%%IncludeFont: Courier-MISO
/Courier-MISO findfont 14.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
(T) show
71.375 19.562 moveto
%%IncludeResource: font Courier-MISO
%%IncludeFont: Courier-MISO
/Courier-MISO findfont 9.938 scalefont
[1 0 0 -1 0 0 ] makefont setfont
1.000 0.000 0.000 setrgbcolor
(3) show
1.000 setlinewidth
grestore
% End of Graphics
MathPictureEnd
\
\>"], "Graphics",
 ImageSize->{288, 288},
 ImageMargins->{{43, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 
  1}},ImageCache->GraphicsData["CompressedBitmap", "\<\
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
\
\>"],ImageRangeCache->{{{0, 287}, {287, 0}} -> {-1.67531, -1.62733, 0.01032, \
0.01032}}]
}, Open  ]],

Cell["\<\
It is important to note that the matrix exponential of the canonical \
generators are not elements of the respective Lie group because the \
generators are not anti-Hermitian. However we can always construct \
anti-Hermitian elements as complex linear combinations in general. For example\
\>", "Text"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"MatrixExp", "[", 
  RowBox[{"I", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Td", "[", 
      RowBox[{"red", "@", "1"}], "]"}], " ", "+", 
     RowBox[{"Td", "[", 
      RowBox[{"red", "@", "4"}], "]"}]}], ")"}], "\[Theta]"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"%", "/.", 
   RowBox[{"TensorValueRules", "[", "T", "]"}]}], "//", 
  "MatrixForm"}]}], "Input"],

Cell[BoxData[
 FormBox[
  InterpretationBox[
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"\[ImaginaryI]", " ", "\[Theta]", " ", 
     RowBox[{"(", 
      RowBox[{
       InterpretationBox[
        SubsuperscriptBox["T", 
         FormBox[
          TagBox[
           StyleBox["1",
            FontColor->RGBColor[1, 0, 0]],
           StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
          TraditionalForm], 
         TagBox[
          StyleBox[
           FormBox[
            TagBox[
             StyleBox["1",
              FontColor->RGBColor[1, 0, 0]],
             StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
            TraditionalForm],
           ShowContents->False],
          StyleForm[#, ShowContents -> False]& ]],
        Tensor[T, {Void}, {
          red[1]}],
        Editable->False], "+", 
       InterpretationBox[
        SubsuperscriptBox["T", 
         FormBox[
          TagBox[
           StyleBox["4",
            FontColor->RGBColor[1, 0, 0]],
           StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
          TraditionalForm], 
         TagBox[
          StyleBox[
           FormBox[
            TagBox[
             StyleBox["4",
              FontColor->RGBColor[1, 0, 0]],
             StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
            TraditionalForm],
           ShowContents->False],
          StyleForm[#, ShowContents -> False]& ]],
        Tensor[T, {Void}, {
          red[4]}],
        Editable->False]}], ")"}]}]],
   MatrixExp[(Complex[0, 1] \[Theta]) (Tensor[T, {Void}, {
        red[1]}] + Tensor[T, {Void}, {
        red[4]}])],
   SyntaxForm->"Exp"], TraditionalForm]], "Output"],

Cell[BoxData[
 FormBox[
  TagBox[
   RowBox[{"(", "\[NoBreak]", GridBox[{
      {
       RowBox[{"cos", "(", "\[Theta]", ")"}], 
       RowBox[{"\[ImaginaryI]", " ", 
        RowBox[{"sin", "(", "\[Theta]", ")"}]}], "0"},
      {
       RowBox[{"\[ImaginaryI]", " ", 
        RowBox[{"sin", "(", "\[Theta]", ")"}]}], 
       RowBox[{"cos", "(", "\[Theta]", ")"}], "0"},
      {"0", "0", "1"}
     }], "\[NoBreak]", ")"}],
   Function[BoxForm`e$, 
    MatrixForm[BoxForm`e$]]], TraditionalForm]], "Output"]
}, Open  ]],

Cell["\<\
The Killing form is strictly defined in terms of the trace in the adjoint \
representation but the direct calculation will be the same up to a \
proportionality constant.\
\>", "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Table", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Tr", "[", 
      RowBox[{
       RowBox[{"Td", "[", 
        RowBox[{"red", "@", "i"}], "]"}], ".", 
       RowBox[{"Td", "[", 
        RowBox[{"red", "@", "j"}], "]"}]}], "]"}], "\[IndentingNewLine]", ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "8"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"j", ",", "1", ",", "8"}], "}"}]}], "]"}], "/.", 
   RowBox[{"TensorValueRules", "[", "T", "]"}]}], "//", 
  "MatrixForm"}]], "Input"],

Cell[BoxData[
 FormBox[
  TagBox[
   RowBox[{"(", "\[NoBreak]", GridBox[{
      {"0", "0", "0", "1", "0", "0", "0", "0"},
      {"0", "0", "0", "0", "1", "0", "0", "0"},
      {"0", "0", "0", "0", "0", "1", "0", "0"},
      {"1", "0", "0", "0", "0", "0", "0", "0"},
      {"0", "1", "0", "0", "0", "0", "0", "0"},
      {"0", "0", "1", "0", "0", "0", "0", "0"},
      {"0", "0", "0", "0", "0", "0", 
       FractionBox["1", "2"], "0"},
      {"0", "0", "0", "0", "0", "0", "0", 
       FractionBox["2", "3"]}
     },
     GridBoxAlignment->{
      "Columns" -> {{Decimal}}, "ColumnsIndexed" -> {}, 
       "Rows" -> {{Baseline}}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
   Function[BoxForm`e$, 
    MatrixForm[BoxForm`e$]]], TraditionalForm]], "Output"]
}, Open  ]],

Cell["\<\
The Killing form is not diagonal except in the indices of the Cartan \
subalgebra so it cannot be use to extract the structure constants.\
\>", "Text"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Dual roots", "Subsection"],

Cell["\<\
For each reduced root  there is an associated dual root that lies in the \
Cartan subalgebra. Dual roots are elements that belong to the Cartan \
subalgebra and therefore they could be written as real linear superpositions \
of the Cartan subalgebra.\
\>", "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DualRootDefinition", "=", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"hd", "[", 
     RowBox[{"red", "@", "i"}], "]"}], "==", "  ", 
    RowBox[{
     RowBox[{"bdu", "[", 
      RowBox[{
       RowBox[{"red", "@", "i"}], ",", 
       RowBox[{"red", "@", "j"}]}], "]"}], "*", 
     RowBox[{"Td", "[", 
      RowBox[{"red", "@", "j"}], "]"}]}]}], ")"}]}]], "Input"],

Cell[BoxData[
 FormBox[
  RowBox[{
   InterpretationBox[
    SubsuperscriptBox["h", 
     FormBox[
      TagBox[
       StyleBox["i",
        FontColor->RGBColor[1, 0, 0]],
       StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
      TraditionalForm], 
     TagBox[
      StyleBox[
       FormBox[
        TagBox[
         StyleBox["i",
          FontColor->RGBColor[1, 0, 0]],
         StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
        TraditionalForm],
       ShowContents->False],
      StyleForm[#, ShowContents -> False]& ]],
    Tensor[h, {Void}, {
      red[i]}],
    Editable->False], "\[Equal]", 
   RowBox[{
    InterpretationBox[
     SubsuperscriptBox["b", 
      RowBox[{
       FormBox[
        TagBox[
         StyleBox["i",
          FontColor->RGBColor[1, 0, 0]],
         StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
        TraditionalForm], 
       TagBox[
        StyleBox[
         FormBox[
          TagBox[
           StyleBox["j",
            FontColor->RGBColor[1, 0, 0]],
           StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
          TraditionalForm],
         ShowContents->False],
        StyleForm[#, ShowContents -> False]& ]}], 
      RowBox[{
       TagBox[
        StyleBox[
         FormBox[
          TagBox[
           StyleBox["i",
            FontColor->RGBColor[1, 0, 0]],
           StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
          TraditionalForm],
         ShowContents->False],
        StyleForm[#, ShowContents -> False]& ], 
       FormBox[
        TagBox[
         StyleBox["j",
          FontColor->RGBColor[1, 0, 0]],
         StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
        TraditionalForm]}]],
     Tensor[b, {Void, 
       red[j]}, {
       red[i], Void}],
     Editable->False], " ", 
    InterpretationBox[
     SubsuperscriptBox["T", 
      FormBox[
       TagBox[
        StyleBox["j",
         FontColor->RGBColor[1, 0, 0]],
        StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
       TraditionalForm], 
      TagBox[
       StyleBox[
        FormBox[
         TagBox[
          StyleBox["j",
           FontColor->RGBColor[1, 0, 0]],
          StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
         TraditionalForm],
        ShowContents->False],
       StyleForm[#, ShowContents -> False]& ]],
     Tensor[T, {Void}, {
       red[j]}],
     Editable->False]}]}], TraditionalForm]], "Output"]
}, Open  ]],

Cell["\<\
where the summation indices run in the Cartan subalgebra and the free indices \
run in the positive roots. The positive roots were associated with the \
following generators\
\>", "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Td", "[", 
    RowBox[{"red", "@", "#"}], "]"}], "&"}], "/@", " ", 
  "PositiveRootIndices"}]], "Input"],

Cell[BoxData[
 FormBox[
  RowBox[{"{", 
   RowBox[{
    InterpretationBox[
     SubsuperscriptBox["T", 
      FormBox[
       TagBox[
        StyleBox["1",
         FontColor->RGBColor[1, 0, 0]],
        StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
       TraditionalForm], 
      TagBox[
       StyleBox[
        FormBox[
         TagBox[
          StyleBox["1",
           FontColor->RGBColor[1, 0, 0]],
          StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
         TraditionalForm],
        ShowContents->False],
       StyleForm[#, ShowContents -> False]& ]],
     Tensor[T, {Void}, {
       red[1]}],
     Editable->False], ",", 
    InterpretationBox[
     SubsuperscriptBox["T", 
      FormBox[
       TagBox[
        StyleBox["2",
         FontColor->RGBColor[1, 0, 0]],
        StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
       TraditionalForm], 
      TagBox[
       StyleBox[
        FormBox[
         TagBox[
          StyleBox["2",
           FontColor->RGBColor[1, 0, 0]],
          StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
         TraditionalForm],
        ShowContents->False],
       StyleForm[#, ShowContents -> False]& ]],
     Tensor[T, {Void}, {
       red[2]}],
     Editable->False], ",", 
    InterpretationBox[
     SubsuperscriptBox["T", 
      FormBox[
       TagBox[
        StyleBox["3",
         FontColor->RGBColor[1, 0, 0]],
        StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
       TraditionalForm], 
      TagBox[
       StyleBox[
        FormBox[
         TagBox[
          StyleBox["3",
           FontColor->RGBColor[1, 0, 0]],
          StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
         TraditionalForm],
        ShowContents->False],
       StyleForm[#, ShowContents -> False]& ]],
     Tensor[T, {Void}, {
       red[3]}],
     Editable->False]}], "}"}], TraditionalForm]], "Output"]
}, Open  ]],

Cell["From this we create the following rules", "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TableForm", "[", 
  RowBox[{"DualRootRule", "=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"DualRootDefinition", "//", 
       RowBox[{"EinsteinSum", "[", "CartanIndices", "]"}]}], "//", 
      RowBox[{"EinsteinArray", "[", "PositiveRootIndices", "]"}]}], ")"}], "/.", 
    RowBox[{"Equal", "\[Rule]", "Rule"}]}]}], "\[IndentingNewLine]", 
  "]"}]], "Input"],

Cell[BoxData[
 FormBox[
  InterpretationBox[GridBox[{
     {
      RowBox[{
       InterpretationBox[
        SubsuperscriptBox["h", 
         FormBox[
          TagBox[
           StyleBox["1",
            FontColor->RGBColor[1, 0, 0]],
           StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
          TraditionalForm], 
         TagBox[
          StyleBox[
           FormBox[
            TagBox[
             StyleBox["1",
              FontColor->RGBColor[1, 0, 0]],
             StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
            TraditionalForm],
           ShowContents->False],
          StyleForm[#, ShowContents -> False]& ]],
        Tensor[h, {Void}, {
          red[1]}],
        Editable->False], "\[Rule]", 
       RowBox[{
        RowBox[{
         InterpretationBox[
          SubsuperscriptBox["b", 
           RowBox[{
            FormBox[
             TagBox[
              StyleBox["1",
               FontColor->RGBColor[1, 0, 0]],
              StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
             TraditionalForm], 
            TagBox[
             StyleBox[
              FormBox[
               TagBox[
                StyleBox["7",
                 FontColor->RGBColor[1, 0, 0]],
                StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
               TraditionalForm],
              ShowContents->False],
             StyleForm[#, ShowContents -> False]& ]}], 
           RowBox[{
            TagBox[
             StyleBox[
              FormBox[
               TagBox[
                StyleBox["1",
                 FontColor->RGBColor[1, 0, 0]],
                StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
               TraditionalForm],
              ShowContents->False],
             StyleForm[#, ShowContents -> False]& ], 
            FormBox[
             TagBox[
              StyleBox["7",
               FontColor->RGBColor[1, 0, 0]],
              StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
             TraditionalForm]}]],
          Tensor[b, {Void, 
            red[7]}, {
            red[1], Void}],
          Editable->False], " ", 
         InterpretationBox[
          SubsuperscriptBox["T", 
           FormBox[
            TagBox[
             StyleBox["7",
              FontColor->RGBColor[1, 0, 0]],
             StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
            TraditionalForm], 
           TagBox[
            StyleBox[
             FormBox[
              TagBox[
               StyleBox["7",
                FontColor->RGBColor[1, 0, 0]],
               StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
              TraditionalForm],
             ShowContents->False],
            StyleForm[#, ShowContents -> False]& ]],
          Tensor[T, {Void}, {
            red[7]}],
          Editable->False]}], "+", 
        RowBox[{
         InterpretationBox[
          SubsuperscriptBox["b", 
           RowBox[{
            FormBox[
             TagBox[
              StyleBox["1",
               FontColor->RGBColor[1, 0, 0]],
              StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
             TraditionalForm], 
            TagBox[
             StyleBox[
              FormBox[
               TagBox[
                StyleBox["8",
                 FontColor->RGBColor[1, 0, 0]],
                StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
               TraditionalForm],
              ShowContents->False],
             StyleForm[#, ShowContents -> False]& ]}], 
           RowBox[{
            TagBox[
             StyleBox[
              FormBox[
               TagBox[
                StyleBox["1",
                 FontColor->RGBColor[1, 0, 0]],
                StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
               TraditionalForm],
              ShowContents->False],
             StyleForm[#, ShowContents -> False]& ], 
            FormBox[
             TagBox[
              StyleBox["8",
               FontColor->RGBColor[1, 0, 0]],
              StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
             TraditionalForm]}]],
          Tensor[b, {Void, 
            red[8]}, {
            red[1], Void}],
          Editable->False], " ", 
         InterpretationBox[
          SubsuperscriptBox["T", 
           FormBox[
            TagBox[
             StyleBox["8",
              FontColor->RGBColor[1, 0, 0]],
             StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
            TraditionalForm], 
           TagBox[
            StyleBox[
             FormBox[
              TagBox[
               StyleBox["8",
                FontColor->RGBColor[1, 0, 0]],
               StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
              TraditionalForm],
             ShowContents->False],
            StyleForm[#, ShowContents -> False]& ]],
          Tensor[T, {Void}, {
            red[8]}],
          Editable->False]}]}]}]},
     {
      RowBox[{
       InterpretationBox[
        SubsuperscriptBox["h", 
         FormBox[
          TagBox[
           StyleBox["2",
            FontColor->RGBColor[1, 0, 0]],
           StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
          TraditionalForm], 
         TagBox[
          StyleBox[
           FormBox[
            TagBox[
             StyleBox["2",
              FontColor->RGBColor[1, 0, 0]],
             StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
            TraditionalForm],
           ShowContents->False],
          StyleForm[#, ShowContents -> False]& ]],
        Tensor[h, {Void}, {
          red[2]}],
        Editable->False], "\[Rule]", 
       RowBox[{
        RowBox[{
         InterpretationBox[
          SubsuperscriptBox["b", 
           RowBox[{
            FormBox[
             TagBox[
              StyleBox["2",
               FontColor->RGBColor[1, 0, 0]],
              StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
             TraditionalForm], 
            TagBox[
             StyleBox[
              FormBox[
               TagBox[
                StyleBox["7",
                 FontColor->RGBColor[1, 0, 0]],
                StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
               TraditionalForm],
              ShowContents->False],
             StyleForm[#, ShowContents -> False]& ]}], 
           RowBox[{
            TagBox[
             StyleBox[
              FormBox[
               TagBox[
                StyleBox["2",
                 FontColor->RGBColor[1, 0, 0]],
                StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
               TraditionalForm],
              ShowContents->False],
             StyleForm[#, ShowContents -> False]& ], 
            FormBox[
             TagBox[
              StyleBox["7",
               FontColor->RGBColor[1, 0, 0]],
              StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
             TraditionalForm]}]],
          Tensor[b, {Void, 
            red[7]}, {
            red[2], Void}],
          Editable->False], " ", 
         InterpretationBox[
          SubsuperscriptBox["T", 
           FormBox[
            TagBox[
             StyleBox["7",
              FontColor->RGBColor[1, 0, 0]],
             StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
            TraditionalForm], 
           TagBox[
            StyleBox[
             FormBox[
              TagBox[
               StyleBox["7",
                FontColor->RGBColor[1, 0, 0]],
               StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
              TraditionalForm],
             ShowContents->False],
            StyleForm[#, ShowContents -> False]& ]],
          Tensor[T, {Void}, {
            red[7]}],
          Editable->False]}], "+", 
        RowBox[{
         InterpretationBox[
          SubsuperscriptBox["b", 
           RowBox[{
            FormBox[
             TagBox[
              StyleBox["2",
               FontColor->RGBColor[1, 0, 0]],
              StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
             TraditionalForm], 
            TagBox[
             StyleBox[
              FormBox[
               TagBox[
                StyleBox["8",
                 FontColor->RGBColor[1, 0, 0]],
                StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
               TraditionalForm],
              ShowContents->False],
             StyleForm[#, ShowContents -> False]& ]}], 
           RowBox[{
            TagBox[
             StyleBox[
              FormBox[
               TagBox[
                StyleBox["2",
                 FontColor->RGBColor[1, 0, 0]],
                StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
               TraditionalForm],
              ShowContents->False],
             StyleForm[#, ShowContents -> False]& ], 
            FormBox[
             TagBox[
              StyleBox["8",
               FontColor->RGBColor[1, 0, 0]],
              StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
             TraditionalForm]}]],
          Tensor[b, {Void, 
            red[8]}, {
            red[2], Void}],
          Editable->False], " ", 
         InterpretationBox[
          SubsuperscriptBox["T", 
           FormBox[
            TagBox[
             StyleBox["8",
              FontColor->RGBColor[1, 0, 0]],
             StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
            TraditionalForm], 
           TagBox[
            StyleBox[
             FormBox[
              TagBox[
               StyleBox["8",
                FontColor->RGBColor[1, 0, 0]],
               StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
              TraditionalForm],
             ShowContents->False],
            StyleForm[#, ShowContents -> False]& ]],
          Tensor[T, {Void}, {
            red[8]}],
          Editable->False]}]}]}]},
     {
      RowBox[{
       InterpretationBox[
        SubsuperscriptBox["h", 
         FormBox[
          TagBox[
           StyleBox["3",
            FontColor->RGBColor[1, 0, 0]],
           StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
          TraditionalForm], 
         TagBox[
          StyleBox[
           FormBox[
            TagBox[
             StyleBox["3",
              FontColor->RGBColor[1, 0, 0]],
             StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
            TraditionalForm],
           ShowContents->False],
          StyleForm[#, ShowContents -> False]& ]],
        Tensor[h, {Void}, {
          red[3]}],
        Editable->False], "\[Rule]", 
       RowBox[{
        RowBox[{
         InterpretationBox[
          SubsuperscriptBox["b", 
           RowBox[{
            FormBox[
             TagBox[
              StyleBox["3",
               FontColor->RGBColor[1, 0, 0]],
              StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
             TraditionalForm], 
            TagBox[
             StyleBox[
              FormBox[
               TagBox[
                StyleBox["7",
                 FontColor->RGBColor[1, 0, 0]],
                StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
               TraditionalForm],
              ShowContents->False],
             StyleForm[#, ShowContents -> False]& ]}], 
           RowBox[{
            TagBox[
             StyleBox[
              FormBox[
               TagBox[
                StyleBox["3",
                 FontColor->RGBColor[1, 0, 0]],
                StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
               TraditionalForm],
              ShowContents->False],
             StyleForm[#, ShowContents -> False]& ], 
            FormBox[
             TagBox[
              StyleBox["7",
               FontColor->RGBColor[1, 0, 0]],
              StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
             TraditionalForm]}]],
          Tensor[b, {Void, 
            red[7]}, {
            red[3], Void}],
          Editable->False], " ", 
         InterpretationBox[
          SubsuperscriptBox["T", 
           FormBox[
            TagBox[
             StyleBox["7",
              FontColor->RGBColor[1, 0, 0]],
             StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
            TraditionalForm], 
           TagBox[
            StyleBox[
             FormBox[
              TagBox[
               StyleBox["7",
                FontColor->RGBColor[1, 0, 0]],
               StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
              TraditionalForm],
             ShowContents->False],
            StyleForm[#, ShowContents -> False]& ]],
          Tensor[T, {Void}, {
            red[7]}],
          Editable->False]}], "+", 
        RowBox[{
         InterpretationBox[
          SubsuperscriptBox["b", 
           RowBox[{
            FormBox[
             TagBox[
              StyleBox["3",
               FontColor->RGBColor[1, 0, 0]],
              StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
             TraditionalForm], 
            TagBox[
             StyleBox[
              FormBox[
               TagBox[
                StyleBox["8",
                 FontColor->RGBColor[1, 0, 0]],
                StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
               TraditionalForm],
              ShowContents->False],
             StyleForm[#, ShowContents -> False]& ]}], 
           RowBox[{
            TagBox[
             StyleBox[
              FormBox[
               TagBox[
                StyleBox["3",
                 FontColor->RGBColor[1, 0, 0]],
                StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
               TraditionalForm],
              ShowContents->False],
             StyleForm[#, ShowContents -> False]& ], 
            FormBox[
             TagBox[
              StyleBox["8",
               FontColor->RGBColor[1, 0, 0]],
              StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
             TraditionalForm]}]],
          Tensor[b, {Void, 
            red[8]}, {
            red[3], Void}],
          Editable->False], " ", 
         InterpretationBox[
          SubsuperscriptBox["T", 
           FormBox[
            TagBox[
             StyleBox["8",
              FontColor->RGBColor[1, 0, 0]],
             StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
            TraditionalForm], 
           TagBox[
            StyleBox[
             FormBox[
              TagBox[
               StyleBox["8",
                FontColor->RGBColor[1, 0, 0]],
               StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
              TraditionalForm],
             ShowContents->False],
            StyleForm[#, ShowContents -> False]& ]],
          Tensor[T, {Void}, {
            red[8]}],
          Editable->False]}]}]}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[2.0999999999999996`]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}],
   TableForm[{Tensor[h, {Void}, {
        red[1]}] -> Tensor[b, {Void, 
          red[7]}, {
          red[1], Void}] Tensor[T, {Void}, {
          red[7]}] + Tensor[b, {Void, 
          red[8]}, {
          red[1], Void}] Tensor[T, {Void}, {
          red[8]}], Tensor[h, {Void}, {
        red[2]}] -> Tensor[b, {Void, 
          red[7]}, {
          red[2], Void}] Tensor[T, {Void}, {
          red[7]}] + Tensor[b, {Void, 
          red[8]}, {
          red[2], Void}] Tensor[T, {Void}, {
          red[8]}], Tensor[h, {Void}, {
        red[3]}] -> Tensor[b, {Void, 
          red[7]}, {
          red[3], Void}] Tensor[T, {Void}, {
          red[7]}] + Tensor[b, {Void, 
          red[8]}, {
          red[3], Void}] Tensor[T, {Void}, {
          red[8]}]}]], TraditionalForm]], "Output"]
}, Open  ]],

Cell["\<\
The dual roots are calculated from the following equations that come form the \
geometry of the root vectors where the killing form is understood as scalar \
product. (The Killing form is still diagonal in the Cartan subalgebra)\
\>", "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TableForm", "[", 
  RowBox[{"GeometryCondition", "=", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"Tr", "[", 
       RowBox[{
        RowBox[{"hd", "[", 
         RowBox[{"red", "@", "1"}], "]"}], ".", 
        RowBox[{"Td", "[", 
         RowBox[{"red", "@", "7"}], "]"}]}], "]"}], "\[Equal]", " ", "1"}], 
     ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Tr", "[", 
       RowBox[{
        RowBox[{"hd", "[", 
         RowBox[{"red", "@", "1"}], "]"}], ".", 
        RowBox[{"Td", "[", 
         RowBox[{"red", "@", "8"}], "]"}]}], "]"}], "\[Equal]", " ", "0"}], 
     ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Tr", "[", 
       RowBox[{
        RowBox[{"hd", "[", 
         RowBox[{"red", "@", "2"}], "]"}], ".", 
        RowBox[{"Td", "[", 
         RowBox[{"red", "@", "7"}], "]"}]}], "]"}], "\[Equal]", " ", 
      RowBox[{"1", "/", "2"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Tr", "[", 
       RowBox[{
        RowBox[{"hd", "[", 
         RowBox[{"red", "@", "2"}], "]"}], ".", 
        RowBox[{"Td", "[", 
         RowBox[{"red", "@", "8"}], "]"}]}], "]"}], "\[Equal]", " ", "1"}], 
     ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Tr", "[", 
       RowBox[{
        RowBox[{"hd", "[", 
         RowBox[{"red", "@", "3"}], "]"}], ".", 
        RowBox[{"Td", "[", 
         RowBox[{"red", "@", "7"}], "]"}]}], "]"}], "\[Equal]", " ", 
      RowBox[{"1", "/", "2"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Tr", "[", 
       RowBox[{
        RowBox[{"hd", "[", 
         RowBox[{"red", "@", "3"}], "]"}], ".", 
        RowBox[{"Td", "[", 
         RowBox[{"red", "@", "8"}], "]"}]}], "]"}], "\[Equal]", " ", 
      RowBox[{"-", "1"}]}]}], "}"}]}], "]"}]], "Input"],

Cell[BoxData[
 FormBox[
  InterpretationBox[GridBox[{
     {
      RowBox[{
       RowBox[{"Tr", "[", 
        RowBox[{
         InterpretationBox[
          SubsuperscriptBox["h", 
           FormBox[
            TagBox[
             StyleBox["1",
              FontColor->RGBColor[1, 0, 0]],
             StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
            TraditionalForm], 
           TagBox[
            StyleBox[
             FormBox[
              TagBox[
               StyleBox["1",
                FontColor->RGBColor[1, 0, 0]],
               StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
              TraditionalForm],
             ShowContents->False],
            StyleForm[#, ShowContents -> False]& ]],
          Tensor[h, {Void}, {
            red[1]}],
          Editable->False], ".", 
         InterpretationBox[
          SubsuperscriptBox["T", 
           FormBox[
            TagBox[
             StyleBox["7",
              FontColor->RGBColor[1, 0, 0]],
             StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
            TraditionalForm], 
           TagBox[
            StyleBox[
             FormBox[
              TagBox[
               StyleBox["7",
                FontColor->RGBColor[1, 0, 0]],
               StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
              TraditionalForm],
             ShowContents->False],
            StyleForm[#, ShowContents -> False]& ]],
          Tensor[T, {Void}, {
            red[7]}],
          Editable->False]}], "]"}], "\[Equal]", "1"}]},
     {
      RowBox[{
       RowBox[{"Tr", "[", 
        RowBox[{
         InterpretationBox[
          SubsuperscriptBox["h", 
           FormBox[
            TagBox[
             StyleBox["1",
              FontColor->RGBColor[1, 0, 0]],
             StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
            TraditionalForm], 
           TagBox[
            StyleBox[
             FormBox[
              TagBox[
               StyleBox["1",
                FontColor->RGBColor[1, 0, 0]],
               StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
              TraditionalForm],
             ShowContents->False],
            StyleForm[#, ShowContents -> False]& ]],
          Tensor[h, {Void}, {
            red[1]}],
          Editable->False], ".", 
         InterpretationBox[
          SubsuperscriptBox["T", 
           FormBox[
            TagBox[
             StyleBox["8",
              FontColor->RGBColor[1, 0, 0]],
             StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
            TraditionalForm], 
           TagBox[
            StyleBox[
             FormBox[
              TagBox[
               StyleBox["8",
                FontColor->RGBColor[1, 0, 0]],
               StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
              TraditionalForm],
             ShowContents->False],
            StyleForm[#, ShowContents -> False]& ]],
          Tensor[T, {Void}, {
            red[8]}],
          Editable->False]}], "]"}], "\[Equal]", "0"}]},
     {
      RowBox[{
       RowBox[{"Tr", "[", 
        RowBox[{
         InterpretationBox[
          SubsuperscriptBox["h", 
           FormBox[
            TagBox[
             StyleBox["2",
              FontColor->RGBColor[1, 0, 0]],
             StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
            TraditionalForm], 
           TagBox[
            StyleBox[
             FormBox[
              TagBox[
               StyleBox["2",
                FontColor->RGBColor[1, 0, 0]],
               StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
              TraditionalForm],
             ShowContents->False],
            StyleForm[#, ShowContents -> False]& ]],
          Tensor[h, {Void}, {
            red[2]}],
          Editable->False], ".", 
         InterpretationBox[
          SubsuperscriptBox["T", 
           FormBox[
            TagBox[
             StyleBox["7",
              FontColor->RGBColor[1, 0, 0]],
             StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
            TraditionalForm], 
           TagBox[
            StyleBox[
             FormBox[
              TagBox[
               StyleBox["7",
                FontColor->RGBColor[1, 0, 0]],
               StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
              TraditionalForm],
             ShowContents->False],
            StyleForm[#, ShowContents -> False]& ]],
          Tensor[T, {Void}, {
            red[7]}],
          Editable->False]}], "]"}], "\[Equal]", 
       FractionBox["1", "2"]}]},
     {
      RowBox[{
       RowBox[{"Tr", "[", 
        RowBox[{
         InterpretationBox[
          SubsuperscriptBox["h", 
           FormBox[
            TagBox[
             StyleBox["2",
              FontColor->RGBColor[1, 0, 0]],
             StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
            TraditionalForm], 
           TagBox[
            StyleBox[
             FormBox[
              TagBox[
               StyleBox["2",
                FontColor->RGBColor[1, 0, 0]],
               StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
              TraditionalForm],
             ShowContents->False],
            StyleForm[#, ShowContents -> False]& ]],
          Tensor[h, {Void}, {
            red[2]}],
          Editable->False], ".", 
         InterpretationBox[
          SubsuperscriptBox["T", 
           FormBox[
            TagBox[
             StyleBox["8",
              FontColor->RGBColor[1, 0, 0]],
             StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
            TraditionalForm], 
           TagBox[
            StyleBox[
             FormBox[
              TagBox[
               StyleBox["8",
                FontColor->RGBColor[1, 0, 0]],
               StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
              TraditionalForm],
             ShowContents->False],
            StyleForm[#, ShowContents -> False]& ]],
          Tensor[T, {Void}, {
            red[8]}],
          Editable->False]}], "]"}], "\[Equal]", "1"}]},
     {
      RowBox[{
       RowBox[{"Tr", "[", 
        RowBox[{
         InterpretationBox[
          SubsuperscriptBox["h", 
           FormBox[
            TagBox[
             StyleBox["3",
              FontColor->RGBColor[1, 0, 0]],
             StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
            TraditionalForm], 
           TagBox[
            StyleBox[
             FormBox[
              TagBox[
               StyleBox["3",
                FontColor->RGBColor[1, 0, 0]],
               StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
              TraditionalForm],
             ShowContents->False],
            StyleForm[#, ShowContents -> False]& ]],
          Tensor[h, {Void}, {
            red[3]}],
          Editable->False], ".", 
         InterpretationBox[
          SubsuperscriptBox["T", 
           FormBox[
            TagBox[
             StyleBox["7",
              FontColor->RGBColor[1, 0, 0]],
             StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
            TraditionalForm], 
           TagBox[
            StyleBox[
             FormBox[
              TagBox[
               StyleBox["7",
                FontColor->RGBColor[1, 0, 0]],
               StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
              TraditionalForm],
             ShowContents->False],
            StyleForm[#, ShowContents -> False]& ]],
          Tensor[T, {Void}, {
            red[7]}],
          Editable->False]}], "]"}], "\[Equal]", 
       FractionBox["1", "2"]}]},
     {
      RowBox[{
       RowBox[{"Tr", "[", 
        RowBox[{
         InterpretationBox[
          SubsuperscriptBox["h", 
           FormBox[
            TagBox[
             StyleBox["3",
              FontColor->RGBColor[1, 0, 0]],
             StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
            TraditionalForm], 
           TagBox[
            StyleBox[
             FormBox[
              TagBox[
               StyleBox["3",
                FontColor->RGBColor[1, 0, 0]],
               StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
              TraditionalForm],
             ShowContents->False],
            StyleForm[#, ShowContents -> False]& ]],
          Tensor[h, {Void}, {
            red[3]}],
          Editable->False], ".", 
         InterpretationBox[
          SubsuperscriptBox["T", 
           FormBox[
            TagBox[
             StyleBox["8",
              FontColor->RGBColor[1, 0, 0]],
             StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
            TraditionalForm], 
           TagBox[
            StyleBox[
             FormBox[
              TagBox[
               StyleBox["8",
                FontColor->RGBColor[1, 0, 0]],
               StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
              TraditionalForm],
             ShowContents->False],
            StyleForm[#, ShowContents -> False]& ]],
          Tensor[T, {Void}, {
            red[8]}],
          Editable->False]}], "]"}], "\[Equal]", 
       RowBox[{"-", "1"}]}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[2.0999999999999996`]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}],
   TableForm[{Tr[
       Dot[
        Tensor[h, {Void}, {
          red[1]}], 
        Tensor[T, {Void}, {
          red[7]}]]] == 1, Tr[
       Dot[
        Tensor[h, {Void}, {
          red[1]}], 
        Tensor[T, {Void}, {
          red[8]}]]] == 0, Tr[
       Dot[
        Tensor[h, {Void}, {
          red[2]}], 
        Tensor[T, {Void}, {
          red[7]}]]] == Rational[1, 2], Tr[
       Dot[
        Tensor[h, {Void}, {
          red[2]}], 
        Tensor[T, {Void}, {
          red[8]}]]] == 1, Tr[
       Dot[
        Tensor[h, {Void}, {
          red[3]}], 
        Tensor[T, {Void}, {
          red[7]}]]] == Rational[1, 2], Tr[
       Dot[
        Tensor[h, {Void}, {
          red[3]}], 
        Tensor[T, {Void}, {
          red[8]}]]] == -1}]], TraditionalForm]], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"(", 
    RowBox[{"GeometryCondition", "/.", "DualRootRule"}], ")"}], "/.", 
   RowBox[{"TensorValueRules", "[", 
    RowBox[{"A\[DoubleStruckD]t", ",", "T"}], "]"}]}], "//", 
  "ExpandAll"}], "\[IndentingNewLine]", 
 RowBox[{"DualRootSol", "=", 
  RowBox[{
   RowBox[{"Solve", "[", 
    RowBox[{"%", ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"bdu", "[", 
        RowBox[{
         RowBox[{"red", "@", "1"}], ",", 
         RowBox[{"red", "@", "7"}]}], "]"}], ",", 
       RowBox[{"bdu", "[", 
        RowBox[{
         RowBox[{"red", "@", "1"}], ",", 
         RowBox[{"red", "@", "8"}]}], "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"bdu", "[", 
        RowBox[{
         RowBox[{"red", "@", "2"}], ",", 
         RowBox[{"red", "@", "7"}]}], "]"}], ",", 
       RowBox[{"bdu", "[", 
        RowBox[{
         RowBox[{"red", "@", "2"}], ",", 
         RowBox[{"red", "@", "8"}]}], "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"bdu", "[", 
        RowBox[{
         RowBox[{"red", "@", "3"}], ",", 
         RowBox[{"red", "@", "7"}]}], "]"}], ",", 
       RowBox[{"bdu", "[", 
        RowBox[{
         RowBox[{"red", "@", "3"}], ",", 
         RowBox[{"red", "@", "8"}]}], "]"}]}], "}"}]}], "]"}], "[", 
   RowBox[{"[", "1", "]"}], "]"}]}]}], "Input"],

Cell[BoxData[
 FormBox[
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     FractionBox[
      InterpretationBox[
       SubsuperscriptBox["b", 
        RowBox[{
         FormBox[
          TagBox[
           StyleBox["1",
            FontColor->RGBColor[1, 0, 0]],
           StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
          TraditionalForm], 
         TagBox[
          StyleBox[
           FormBox[
            TagBox[
             StyleBox["7",
              FontColor->RGBColor[1, 0, 0]],
             StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
            TraditionalForm],
           ShowContents->False],
          StyleForm[#, ShowContents -> False]& ]}], 
        RowBox[{
         TagBox[
          StyleBox[
           FormBox[
            TagBox[
             StyleBox["1",
              FontColor->RGBColor[1, 0, 0]],
             StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
            TraditionalForm],
           ShowContents->False],
          StyleForm[#, ShowContents -> False]& ], 
         FormBox[
          TagBox[
           StyleBox["7",
            FontColor->RGBColor[1, 0, 0]],
           StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
          TraditionalForm]}]],
       Tensor[b, {Void, 
         red[7]}, {
         red[1], Void}],
       Editable->False], "2"], "\[Equal]", "1"}], ",", 
    RowBox[{
     FractionBox[
      RowBox[{"2", " ", 
       InterpretationBox[
        SubsuperscriptBox["b", 
         RowBox[{
          FormBox[
           TagBox[
            StyleBox["1",
             FontColor->RGBColor[1, 0, 0]],
            StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
           TraditionalForm], 
          TagBox[
           StyleBox[
            FormBox[
             TagBox[
              StyleBox["8",
               FontColor->RGBColor[1, 0, 0]],
              StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
             TraditionalForm],
            ShowContents->False],
           StyleForm[#, ShowContents -> False]& ]}], 
         RowBox[{
          TagBox[
           StyleBox[
            FormBox[
             TagBox[
              StyleBox["1",
               FontColor->RGBColor[1, 0, 0]],
              StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
             TraditionalForm],
            ShowContents->False],
           StyleForm[#, ShowContents -> False]& ], 
          FormBox[
           TagBox[
            StyleBox["8",
             FontColor->RGBColor[1, 0, 0]],
            StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
           TraditionalForm]}]],
        Tensor[b, {Void, 
          red[8]}, {
          red[1], Void}],
        Editable->False]}], "3"], "\[Equal]", "0"}], ",", 
    RowBox[{
     FractionBox[
      InterpretationBox[
       SubsuperscriptBox["b", 
        RowBox[{
         FormBox[
          TagBox[
           StyleBox["2",
            FontColor->RGBColor[1, 0, 0]],
           StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
          TraditionalForm], 
         TagBox[
          StyleBox[
           FormBox[
            TagBox[
             StyleBox["7",
              FontColor->RGBColor[1, 0, 0]],
             StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
            TraditionalForm],
           ShowContents->False],
          StyleForm[#, ShowContents -> False]& ]}], 
        RowBox[{
         TagBox[
          StyleBox[
           FormBox[
            TagBox[
             StyleBox["2",
              FontColor->RGBColor[1, 0, 0]],
             StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
            TraditionalForm],
           ShowContents->False],
          StyleForm[#, ShowContents -> False]& ], 
         FormBox[
          TagBox[
           StyleBox["7",
            FontColor->RGBColor[1, 0, 0]],
           StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
          TraditionalForm]}]],
       Tensor[b, {Void, 
         red[7]}, {
         red[2], Void}],
       Editable->False], "2"], "\[Equal]", 
     FractionBox["1", "2"]}], ",", 
    RowBox[{
     FractionBox[
      RowBox[{"2", " ", 
       InterpretationBox[
        SubsuperscriptBox["b", 
         RowBox[{
          FormBox[
           TagBox[
            StyleBox["2",
             FontColor->RGBColor[1, 0, 0]],
            StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
           TraditionalForm], 
          TagBox[
           StyleBox[
            FormBox[
             TagBox[
              StyleBox["8",
               FontColor->RGBColor[1, 0, 0]],
              StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
             TraditionalForm],
            ShowContents->False],
           StyleForm[#, ShowContents -> False]& ]}], 
         RowBox[{
          TagBox[
           StyleBox[
            FormBox[
             TagBox[
              StyleBox["2",
               FontColor->RGBColor[1, 0, 0]],
              StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
             TraditionalForm],
            ShowContents->False],
           StyleForm[#, ShowContents -> False]& ], 
          FormBox[
           TagBox[
            StyleBox["8",
             FontColor->RGBColor[1, 0, 0]],
            StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
           TraditionalForm]}]],
        Tensor[b, {Void, 
          red[8]}, {
          red[2], Void}],
        Editable->False]}], "3"], "\[Equal]", "1"}], ",", 
    RowBox[{
     FractionBox[
      InterpretationBox[
       SubsuperscriptBox["b", 
        RowBox[{
         FormBox[
          TagBox[
           StyleBox["3",
            FontColor->RGBColor[1, 0, 0]],
           StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
          TraditionalForm], 
         TagBox[
          StyleBox[
           FormBox[
            TagBox[
             StyleBox["7",
              FontColor->RGBColor[1, 0, 0]],
             StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
            TraditionalForm],
           ShowContents->False],
          StyleForm[#, ShowContents -> False]& ]}], 
        RowBox[{
         TagBox[
          StyleBox[
           FormBox[
            TagBox[
             StyleBox["3",
              FontColor->RGBColor[1, 0, 0]],
             StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
            TraditionalForm],
           ShowContents->False],
          StyleForm[#, ShowContents -> False]& ], 
         FormBox[
          TagBox[
           StyleBox["7",
            FontColor->RGBColor[1, 0, 0]],
           StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
          TraditionalForm]}]],
       Tensor[b, {Void, 
         red[7]}, {
         red[3], Void}],
       Editable->False], "2"], "\[Equal]", 
     FractionBox["1", "2"]}], ",", 
    RowBox[{
     FractionBox[
      RowBox[{"2", " ", 
       InterpretationBox[
        SubsuperscriptBox["b", 
         RowBox[{
          FormBox[
           TagBox[
            StyleBox["3",
             FontColor->RGBColor[1, 0, 0]],
            StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
           TraditionalForm], 
          TagBox[
           StyleBox[
            FormBox[
             TagBox[
              StyleBox["8",
               FontColor->RGBColor[1, 0, 0]],
              StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
             TraditionalForm],
            ShowContents->False],
           StyleForm[#, ShowContents -> False]& ]}], 
         RowBox[{
          TagBox[
           StyleBox[
            FormBox[
             TagBox[
              StyleBox["3",
               FontColor->RGBColor[1, 0, 0]],
              StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
             TraditionalForm],
            ShowContents->False],
           StyleForm[#, ShowContents -> False]& ], 
          FormBox[
           TagBox[
            StyleBox["8",
             FontColor->RGBColor[1, 0, 0]],
            StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
           TraditionalForm]}]],
        Tensor[b, {Void, 
          red[8]}, {
          red[3], Void}],
        Editable->False]}], "3"], "\[Equal]", 
     RowBox[{"-", "1"}]}]}], "}"}], TraditionalForm]], "Output"],

Cell[BoxData[
 FormBox[
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     InterpretationBox[
      SubsuperscriptBox["b", 
       RowBox[{
        FormBox[
         TagBox[
          StyleBox["1",
           FontColor->RGBColor[1, 0, 0]],
          StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
         TraditionalForm], 
        TagBox[
         StyleBox[
          FormBox[
           TagBox[
            StyleBox["7",
             FontColor->RGBColor[1, 0, 0]],
            StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
           TraditionalForm],
          ShowContents->False],
         StyleForm[#, ShowContents -> False]& ]}], 
       RowBox[{
        TagBox[
         StyleBox[
          FormBox[
           TagBox[
            StyleBox["1",
             FontColor->RGBColor[1, 0, 0]],
            StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
           TraditionalForm],
          ShowContents->False],
         StyleForm[#, ShowContents -> False]& ], 
        FormBox[
         TagBox[
          StyleBox["7",
           FontColor->RGBColor[1, 0, 0]],
          StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
         TraditionalForm]}]],
      Tensor[b, {Void, 
        red[7]}, {
        red[1], Void}],
      Editable->False], "\[Rule]", "2"}], ",", 
    RowBox[{
     InterpretationBox[
      SubsuperscriptBox["b", 
       RowBox[{
        FormBox[
         TagBox[
          StyleBox["1",
           FontColor->RGBColor[1, 0, 0]],
          StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
         TraditionalForm], 
        TagBox[
         StyleBox[
          FormBox[
           TagBox[
            StyleBox["8",
             FontColor->RGBColor[1, 0, 0]],
            StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
           TraditionalForm],
          ShowContents->False],
         StyleForm[#, ShowContents -> False]& ]}], 
       RowBox[{
        TagBox[
         StyleBox[
          FormBox[
           TagBox[
            StyleBox["1",
             FontColor->RGBColor[1, 0, 0]],
            StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
           TraditionalForm],
          ShowContents->False],
         StyleForm[#, ShowContents -> False]& ], 
        FormBox[
         TagBox[
          StyleBox["8",
           FontColor->RGBColor[1, 0, 0]],
          StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
         TraditionalForm]}]],
      Tensor[b, {Void, 
        red[8]}, {
        red[1], Void}],
      Editable->False], "\[Rule]", "0"}], ",", 
    RowBox[{
     InterpretationBox[
      SubsuperscriptBox["b", 
       RowBox[{
        FormBox[
         TagBox[
          StyleBox["2",
           FontColor->RGBColor[1, 0, 0]],
          StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
         TraditionalForm], 
        TagBox[
         StyleBox[
          FormBox[
           TagBox[
            StyleBox["7",
             FontColor->RGBColor[1, 0, 0]],
            StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
           TraditionalForm],
          ShowContents->False],
         StyleForm[#, ShowContents -> False]& ]}], 
       RowBox[{
        TagBox[
         StyleBox[
          FormBox[
           TagBox[
            StyleBox["2",
             FontColor->RGBColor[1, 0, 0]],
            StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
           TraditionalForm],
          ShowContents->False],
         StyleForm[#, ShowContents -> False]& ], 
        FormBox[
         TagBox[
          StyleBox["7",
           FontColor->RGBColor[1, 0, 0]],
          StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
         TraditionalForm]}]],
      Tensor[b, {Void, 
        red[7]}, {
        red[2], Void}],
      Editable->False], "\[Rule]", "1"}], ",", 
    RowBox[{
     InterpretationBox[
      SubsuperscriptBox["b", 
       RowBox[{
        FormBox[
         TagBox[
          StyleBox["2",
           FontColor->RGBColor[1, 0, 0]],
          StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
         TraditionalForm], 
        TagBox[
         StyleBox[
          FormBox[
           TagBox[
            StyleBox["8",
             FontColor->RGBColor[1, 0, 0]],
            StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
           TraditionalForm],
          ShowContents->False],
         StyleForm[#, ShowContents -> False]& ]}], 
       RowBox[{
        TagBox[
         StyleBox[
          FormBox[
           TagBox[
            StyleBox["2",
             FontColor->RGBColor[1, 0, 0]],
            StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
           TraditionalForm],
          ShowContents->False],
         StyleForm[#, ShowContents -> False]& ], 
        FormBox[
         TagBox[
          StyleBox["8",
           FontColor->RGBColor[1, 0, 0]],
          StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
         TraditionalForm]}]],
      Tensor[b, {Void, 
        red[8]}, {
        red[2], Void}],
      Editable->False], "\[Rule]", 
     FractionBox["3", "2"]}], ",", 
    RowBox[{
     InterpretationBox[
      SubsuperscriptBox["b", 
       RowBox[{
        FormBox[
         TagBox[
          StyleBox["3",
           FontColor->RGBColor[1, 0, 0]],
          StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
         TraditionalForm], 
        TagBox[
         StyleBox[
          FormBox[
           TagBox[
            StyleBox["7",
             FontColor->RGBColor[1, 0, 0]],
            StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
           TraditionalForm],
          ShowContents->False],
         StyleForm[#, ShowContents -> False]& ]}], 
       RowBox[{
        TagBox[
         StyleBox[
          FormBox[
           TagBox[
            StyleBox["3",
             FontColor->RGBColor[1, 0, 0]],
            StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
           TraditionalForm],
          ShowContents->False],
         StyleForm[#, ShowContents -> False]& ], 
        FormBox[
         TagBox[
          StyleBox["7",
           FontColor->RGBColor[1, 0, 0]],
          StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
         TraditionalForm]}]],
      Tensor[b, {Void, 
        red[7]}, {
        red[3], Void}],
      Editable->False], "\[Rule]", "1"}], ",", 
    RowBox[{
     InterpretationBox[
      SubsuperscriptBox["b", 
       RowBox[{
        FormBox[
         TagBox[
          StyleBox["3",
           FontColor->RGBColor[1, 0, 0]],
          StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
         TraditionalForm], 
        TagBox[
         StyleBox[
          FormBox[
           TagBox[
            StyleBox["8",
             FontColor->RGBColor[1, 0, 0]],
            StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
           TraditionalForm],
          ShowContents->False],
         StyleForm[#, ShowContents -> False]& ]}], 
       RowBox[{
        TagBox[
         StyleBox[
          FormBox[
           TagBox[
            StyleBox["3",
             FontColor->RGBColor[1, 0, 0]],
            StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
           TraditionalForm],
          ShowContents->False],
         StyleForm[#, ShowContents -> False]& ], 
        FormBox[
         TagBox[
          StyleBox["8",
           FontColor->RGBColor[1, 0, 0]],
          StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
         TraditionalForm]}]],
      Tensor[b, {Void, 
        red[8]}, {
        red[3], Void}],
      Editable->False], "\[Rule]", 
     RowBox[{"-", 
      FractionBox["3", "2"]}]}]}], "}"}], TraditionalForm]], "Output"]
}, Open  ]],

Cell["which results in the following dual roots", "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TableForm", "[", "\[IndentingNewLine]", 
  RowBox[{"DualRootsRule", "=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"DualRootDefinition", "//", 
         RowBox[{"EinsteinSum", "[", "CartanIndices", "]"}]}], "//", 
        RowBox[{"EinsteinArray", "[", "PositiveRootIndices", "]"}]}], ")"}], "/.",
       "DualRootSol"}], ")"}], "/.", 
    RowBox[{"Equal", "\[Rule]", "Rule"}]}]}], "]"}]], "Input"],

Cell[BoxData[
 FormBox[
  InterpretationBox[GridBox[{
     {
      RowBox[{
       InterpretationBox[
        SubsuperscriptBox["h", 
         FormBox[
          TagBox[
           StyleBox["1",
            FontColor->RGBColor[1, 0, 0]],
           StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
          TraditionalForm], 
         TagBox[
          StyleBox[
           FormBox[
            TagBox[
             StyleBox["1",
              FontColor->RGBColor[1, 0, 0]],
             StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
            TraditionalForm],
           ShowContents->False],
          StyleForm[#, ShowContents -> False]& ]],
        Tensor[h, {Void}, {
          red[1]}],
        Editable->False], "\[Rule]", 
       RowBox[{"2", " ", 
        InterpretationBox[
         SubsuperscriptBox["T", 
          FormBox[
           TagBox[
            StyleBox["7",
             FontColor->RGBColor[1, 0, 0]],
            StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
           TraditionalForm], 
          TagBox[
           StyleBox[
            FormBox[
             TagBox[
              StyleBox["7",
               FontColor->RGBColor[1, 0, 0]],
              StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
             TraditionalForm],
            ShowContents->False],
           StyleForm[#, ShowContents -> False]& ]],
         Tensor[T, {Void}, {
           red[7]}],
         Editable->False]}]}]},
     {
      RowBox[{
       InterpretationBox[
        SubsuperscriptBox["h", 
         FormBox[
          TagBox[
           StyleBox["2",
            FontColor->RGBColor[1, 0, 0]],
           StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
          TraditionalForm], 
         TagBox[
          StyleBox[
           FormBox[
            TagBox[
             StyleBox["2",
              FontColor->RGBColor[1, 0, 0]],
             StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
            TraditionalForm],
           ShowContents->False],
          StyleForm[#, ShowContents -> False]& ]],
        Tensor[h, {Void}, {
          red[2]}],
        Editable->False], "\[Rule]", 
       RowBox[{
        InterpretationBox[
         SubsuperscriptBox["T", 
          FormBox[
           TagBox[
            StyleBox["7",
             FontColor->RGBColor[1, 0, 0]],
            StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
           TraditionalForm], 
          TagBox[
           StyleBox[
            FormBox[
             TagBox[
              StyleBox["7",
               FontColor->RGBColor[1, 0, 0]],
              StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
             TraditionalForm],
            ShowContents->False],
           StyleForm[#, ShowContents -> False]& ]],
         Tensor[T, {Void}, {
           red[7]}],
         Editable->False], "+", 
        FractionBox[
         RowBox[{"3", " ", 
          InterpretationBox[
           SubsuperscriptBox["T", 
            FormBox[
             TagBox[
              StyleBox["8",
               FontColor->RGBColor[1, 0, 0]],
              StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
             TraditionalForm], 
            TagBox[
             StyleBox[
              FormBox[
               TagBox[
                StyleBox["8",
                 FontColor->RGBColor[1, 0, 0]],
                StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
               TraditionalForm],
              ShowContents->False],
             StyleForm[#, ShowContents -> False]& ]],
           Tensor[T, {Void}, {
             red[8]}],
           Editable->False]}], "2"]}]}]},
     {
      RowBox[{
       InterpretationBox[
        SubsuperscriptBox["h", 
         FormBox[
          TagBox[
           StyleBox["3",
            FontColor->RGBColor[1, 0, 0]],
           StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
          TraditionalForm], 
         TagBox[
          StyleBox[
           FormBox[
            TagBox[
             StyleBox["3",
              FontColor->RGBColor[1, 0, 0]],
             StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
            TraditionalForm],
           ShowContents->False],
          StyleForm[#, ShowContents -> False]& ]],
        Tensor[h, {Void}, {
          red[3]}],
        Editable->False], "\[Rule]", 
       RowBox[{
        InterpretationBox[
         SubsuperscriptBox["T", 
          FormBox[
           TagBox[
            StyleBox["7",
             FontColor->RGBColor[1, 0, 0]],
            StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
           TraditionalForm], 
          TagBox[
           StyleBox[
            FormBox[
             TagBox[
              StyleBox["7",
               FontColor->RGBColor[1, 0, 0]],
              StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
             TraditionalForm],
            ShowContents->False],
           StyleForm[#, ShowContents -> False]& ]],
         Tensor[T, {Void}, {
           red[7]}],
         Editable->False], "-", 
        FractionBox[
         RowBox[{"3", " ", 
          InterpretationBox[
           SubsuperscriptBox["T", 
            FormBox[
             TagBox[
              StyleBox["8",
               FontColor->RGBColor[1, 0, 0]],
              StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
             TraditionalForm], 
            TagBox[
             StyleBox[
              FormBox[
               TagBox[
                StyleBox["8",
                 FontColor->RGBColor[1, 0, 0]],
                StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
               TraditionalForm],
              ShowContents->False],
             StyleForm[#, ShowContents -> False]& ]],
           Tensor[T, {Void}, {
             red[8]}],
           Editable->False]}], "2"]}]}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[2.0999999999999996`]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}],
   TableForm[{Tensor[h, {Void}, {
        red[1]}] -> 2 Tensor[T, {Void}, {
         red[7]}], Tensor[h, {Void}, {
        red[2]}] -> Tensor[T, {Void}, {
         red[7]}] + Rational[3, 2] Tensor[T, {Void}, {
          red[8]}], Tensor[h, {Void}, {
        red[3]}] -> Tensor[T, {Void}, {
         red[7]}] + Rational[-3, 2] Tensor[T, {Void}, {
          red[8]}]}]], TraditionalForm]], "Output"]
}, Open  ]],

Cell[TextData[{
 "Setting the value rules to ",
 Cell[BoxData[
  FormBox[
   InterpretationBox[
    SubsuperscriptBox["h", 
     FormBox[
      TagBox[
       StyleBox["i",
        FontColor->RGBColor[1, 0, 0]],
       StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
      TraditionalForm], 
     TagBox[
      StyleBox[
       FormBox[
        TagBox[
         StyleBox["i",
          FontColor->RGBColor[1, 0, 0]],
         StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
        TraditionalForm],
       ShowContents->False],
      StyleForm[#, ShowContents -> False]& ]],
    Tensor[h, {Void}, {
      red[i]}],
    Editable->False], TraditionalForm]]],
 ", where the indices not involved are set to zero"
}], "Text"],

Cell[BoxData[
 RowBox[{"SetTensorValueRules", "[", 
  RowBox[{
   RowBox[{"hd", "[", 
    RowBox[{"red", "@", "i"}], "]"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"hd", "[", 
       RowBox[{"red", "@", "1"}], "]"}], ",", 
      RowBox[{"hd", "[", 
       RowBox[{"red", "@", "2"}], "]"}], ",", 
      RowBox[{"hd", "[", 
       RowBox[{"red", "@", "3"}], "]"}], ",", "0", ",", "0", ",", "0", ",", 
      "0", ",", "0"}], "}"}], "/.", "DualRootsRule"}]}], "]"}]], "Input"],

Cell["\<\
In this sense the dual roots could be understood as elements with square \
length 2\
\>", "Text"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Tr", "[", 
    RowBox[{
     RowBox[{"hd", "[", 
      RowBox[{"red", "@", "#"}], "]"}], ".", 
     RowBox[{"hd", "[", 
      RowBox[{"red", "@", "#"}], "]"}]}], "]"}], "&"}], "/@", 
  "PositiveRootIndices"}], "\[IndentingNewLine]", 
 RowBox[{"%", "//.", 
  RowBox[{"TensorValueRules", "[", 
   RowBox[{"h", ",", "T"}], "]"}]}]}], "Input"],

Cell[BoxData[
 FormBox[
  RowBox[{"{", 
   RowBox[{
    RowBox[{"Tr", "[", 
     RowBox[{
      InterpretationBox[
       SubsuperscriptBox["h", 
        FormBox[
         TagBox[
          StyleBox["1",
           FontColor->RGBColor[1, 0, 0]],
          StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
         TraditionalForm], 
        TagBox[
         StyleBox[
          FormBox[
           TagBox[
            StyleBox["1",
             FontColor->RGBColor[1, 0, 0]],
            StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
           TraditionalForm],
          ShowContents->False],
         StyleForm[#, ShowContents -> False]& ]],
       Tensor[h, {Void}, {
         red[1]}],
       Editable->False], ".", 
      InterpretationBox[
       SubsuperscriptBox["h", 
        FormBox[
         TagBox[
          StyleBox["1",
           FontColor->RGBColor[1, 0, 0]],
          StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
         TraditionalForm], 
        TagBox[
         StyleBox[
          FormBox[
           TagBox[
            StyleBox["1",
             FontColor->RGBColor[1, 0, 0]],
            StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
           TraditionalForm],
          ShowContents->False],
         StyleForm[#, ShowContents -> False]& ]],
       Tensor[h, {Void}, {
         red[1]}],
       Editable->False]}], "]"}], ",", 
    RowBox[{"Tr", "[", 
     RowBox[{
      InterpretationBox[
       SubsuperscriptBox["h", 
        FormBox[
         TagBox[
          StyleBox["2",
           FontColor->RGBColor[1, 0, 0]],
          StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
         TraditionalForm], 
        TagBox[
         StyleBox[
          FormBox[
           TagBox[
            StyleBox["2",
             FontColor->RGBColor[1, 0, 0]],
            StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
           TraditionalForm],
          ShowContents->False],
         StyleForm[#, ShowContents -> False]& ]],
       Tensor[h, {Void}, {
         red[2]}],
       Editable->False], ".", 
      InterpretationBox[
       SubsuperscriptBox["h", 
        FormBox[
         TagBox[
          StyleBox["2",
           FontColor->RGBColor[1, 0, 0]],
          StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
         TraditionalForm], 
        TagBox[
         StyleBox[
          FormBox[
           TagBox[
            StyleBox["2",
             FontColor->RGBColor[1, 0, 0]],
            StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
           TraditionalForm],
          ShowContents->False],
         StyleForm[#, ShowContents -> False]& ]],
       Tensor[h, {Void}, {
         red[2]}],
       Editable->False]}], "]"}], ",", 
    RowBox[{"Tr", "[", 
     RowBox[{
      InterpretationBox[
       SubsuperscriptBox["h", 
        FormBox[
         TagBox[
          StyleBox["3",
           FontColor->RGBColor[1, 0, 0]],
          StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
         TraditionalForm], 
        TagBox[
         StyleBox[
          FormBox[
           TagBox[
            StyleBox["3",
             FontColor->RGBColor[1, 0, 0]],
            StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
           TraditionalForm],
          ShowContents->False],
         StyleForm[#, ShowContents -> False]& ]],
       Tensor[h, {Void}, {
         red[3]}],
       Editable->False], ".", 
      InterpretationBox[
       SubsuperscriptBox["h", 
        FormBox[
         TagBox[
          StyleBox["3",
           FontColor->RGBColor[1, 0, 0]],
          StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
         TraditionalForm], 
        TagBox[
         StyleBox[
          FormBox[
           TagBox[
            StyleBox["3",
             FontColor->RGBColor[1, 0, 0]],
            StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
           TraditionalForm],
          ShowContents->False],
         StyleForm[#, ShowContents -> False]& ]],
       Tensor[h, {Void}, {
         red[3]}],
       Editable->False]}], "]"}]}], "}"}], TraditionalForm]], "Output"],

Cell[BoxData[
 FormBox[
  RowBox[{"{", 
   RowBox[{"2", ",", "2", ",", "2"}], "}"}], TraditionalForm]], "Output"]
}, Open  ]],

Cell["\<\
The square length of the root vectors are defined in terms of the trace of \
their respective dual roots square. For semisimple Lie algebras, the lengths \
of the roots are constrained to a maximum of two different values at most.\
\>", "EmphasisText"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Cartan Matrix", "Subsection"],

Cell["\<\
\[GraySquare]  The components of the dual roots along the basis of the Cartan \
subalgebra are defined as the contravariant root vector components.\
\>", "EmphasisText"],

Cell[TextData[{
 "Extracting the components of the dual roots and assigning the value rules \
to ",
 Cell[BoxData[
  FormBox[
   InterpretationBox[
    SubsuperscriptBox["\[Alpha]", 
     TagBox[
      StyleBox[
       FormBox[
        TagBox[
         StyleBox["i",
          FontColor->RGBColor[1, 0, 0]],
         StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
        TraditionalForm],
       ShowContents->False],
      StyleForm[#, ShowContents -> False]& ], 
     FormBox[
      TagBox[
       StyleBox["i",
        FontColor->RGBColor[1, 0, 0]],
       StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
      TraditionalForm]],
    Tensor[\[Alpha], {
      red[i]}, {Void}],
    Editable->False], TraditionalForm]]]
}], "Text"],

Cell[BoxData[
 RowBox[{"SetTensorValueRules", "[", 
  RowBox[{
   RowBox[{"\[Alpha]u", "[", 
    RowBox[{"red", "@", "i"}], "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"hd", "[", 
         RowBox[{"red", "@", "i"}], "]"}], "//", 
        RowBox[{"EinsteinArray", "[", "]"}]}], ")"}], "/.", 
      RowBox[{"TensorValueRules", "[", "h", "]"}]}], ")"}], "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"x_.", " ", 
         RowBox[{"Td", "[", 
          RowBox[{"red", "@", "7"}], "]"}]}], "+", 
        RowBox[{"y_", " ", 
         RowBox[{"Td", "[", 
          RowBox[{"red", "@", "8"}], "]"}]}]}], "\[Rule]", " ", 
       RowBox[{"{", 
        RowBox[{"x", ",", "y"}], "}"}]}], ",", 
      RowBox[{
       RowBox[{"x_.", " ", 
        RowBox[{"Td", "[", 
         RowBox[{"red", "@", "7"}], "]"}]}], "\[Rule]", " ", 
       RowBox[{"{", 
        RowBox[{"x", ",", "0"}], "}"}]}]}], "}"}]}]}], "\[IndentingNewLine]", 
  "]"}]], "Input"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Alpha]u", "[", 
   RowBox[{"red", "@", "i"}], "]"}], "//", 
  RowBox[{
  "EinsteinArray", "[", "PositiveRootIndices", "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"%", "/.", 
  RowBox[{"TensorValueRules", "[", "\[Alpha]", "]"}]}]}], "Input"],

Cell[BoxData[
 FormBox[
  RowBox[{"{", 
   RowBox[{
    InterpretationBox[
     SubsuperscriptBox["\[Alpha]", 
      TagBox[
       StyleBox[
        FormBox[
         TagBox[
          StyleBox["1",
           FontColor->RGBColor[1, 0, 0]],
          StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
         TraditionalForm],
        ShowContents->False],
       StyleForm[#, ShowContents -> False]& ], 
      FormBox[
       TagBox[
        StyleBox["1",
         FontColor->RGBColor[1, 0, 0]],
        StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
       TraditionalForm]],
     Tensor[\[Alpha], {
       red[1]}, {Void}],
     Editable->False], ",", 
    InterpretationBox[
     SubsuperscriptBox["\[Alpha]", 
      TagBox[
       StyleBox[
        FormBox[
         TagBox[
          StyleBox["2",
           FontColor->RGBColor[1, 0, 0]],
          StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
         TraditionalForm],
        ShowContents->False],
       StyleForm[#, ShowContents -> False]& ], 
      FormBox[
       TagBox[
        StyleBox["2",
         FontColor->RGBColor[1, 0, 0]],
        StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
       TraditionalForm]],
     Tensor[\[Alpha], {
       red[2]}, {Void}],
     Editable->False], ",", 
    InterpretationBox[
     SubsuperscriptBox["\[Alpha]", 
      TagBox[
       StyleBox[
        FormBox[
         TagBox[
          StyleBox["3",
           FontColor->RGBColor[1, 0, 0]],
          StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
         TraditionalForm],
        ShowContents->False],
       StyleForm[#, ShowContents -> False]& ], 
      FormBox[
       TagBox[
        StyleBox["3",
         FontColor->RGBColor[1, 0, 0]],
        StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
       TraditionalForm]],
     Tensor[\[Alpha], {
       red[3]}, {Void}],
     Editable->False]}], "}"}], TraditionalForm]], "Output"],

Cell[BoxData[
 FormBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"2", "0"},
     {"1", 
      FractionBox["3", "2"]},
     {"1", 
      RowBox[{"-", 
       FractionBox["3", "2"]}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Decimal}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}},
       "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], TraditionalForm]], "Output"]
}, Open  ]],

Cell[TextData[{
 "The contraction of the indices of the reduced roots define a scalar \
product. For example, the square length of ",
 Cell[BoxData[
  FormBox[
   InterpretationBox[
    SubsuperscriptBox["\[Alpha]", 
     TagBox[
      StyleBox[
       FormBox[
        TagBox[
         StyleBox["6",
          FontColor->RGBColor[1, 0, 0]],
         StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
        TraditionalForm],
       ShowContents->False],
      StyleForm[#, ShowContents -> False]& ], 
     FormBox[
      TagBox[
       StyleBox["6",
        FontColor->RGBColor[1, 0, 0]],
       StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
      TraditionalForm]],
    Tensor[\[Alpha], {
      red[6]}, {Void}],
    Editable->False], TraditionalForm]]],
 "could be calculated as"
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Alpha]u", "[", 
   RowBox[{"red", "@", "1"}], "]"}], ".", 
  RowBox[{"\[Alpha]d", "[", 
   RowBox[{"red", "@", "1"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"%", "/.", 
  RowBox[{"TensorValueRules", "[", "\[Alpha]", "]"}]}]}], "Input"],

Cell[BoxData[
 FormBox[
  RowBox[{
   InterpretationBox[
    SubsuperscriptBox["\[Alpha]", 
     TagBox[
      StyleBox[
       FormBox[
        TagBox[
         StyleBox["1",
          FontColor->RGBColor[1, 0, 0]],
         StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
        TraditionalForm],
       ShowContents->False],
      StyleForm[#, ShowContents -> False]& ], 
     FormBox[
      TagBox[
       StyleBox["1",
        FontColor->RGBColor[1, 0, 0]],
       StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
      TraditionalForm]],
    Tensor[\[Alpha], {
      red[1]}, {Void}],
    Editable->False], ".", 
   InterpretationBox[
    SubsuperscriptBox["\[Alpha]", 
     FormBox[
      TagBox[
       StyleBox["1",
        FontColor->RGBColor[1, 0, 0]],
       StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
      TraditionalForm], 
     TagBox[
      StyleBox[
       FormBox[
        TagBox[
         StyleBox["1",
          FontColor->RGBColor[1, 0, 0]],
         StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
        TraditionalForm],
       ShowContents->False],
      StyleForm[#, ShowContents -> False]& ]],
    Tensor[\[Alpha], {Void}, {
      red[1]}],
    Editable->False]}], TraditionalForm]], "Output"],

Cell[BoxData[
 FormBox["2", TraditionalForm]], "Output"]
}, Open  ]],

Cell["The Cartan Matrix is defined in terms of the simple roots as", "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CartanMatrixDef", " ", "=", " ", 
  RowBox[{"2", 
   RowBox[{
    RowBox[{
     RowBox[{"\[Alpha]u", "[", 
      RowBox[{"red", "@", "i"}], "]"}], ".", 
     RowBox[{"\[Alpha]d", "[", 
      RowBox[{"red", "@", "j"}], "]"}]}], "/", 
    RowBox[{
     RowBox[{"\[Alpha]u", "[", 
      RowBox[{"red", "@", "j"}], "]"}], ".", 
     RowBox[{"\[Alpha]d", "[", 
      RowBox[{"red", "@", "j"}], "]"}]}]}]}]}]], "Input"],

Cell[BoxData[
 FormBox[
  FractionBox[
   RowBox[{"2", " ", 
    RowBox[{
     InterpretationBox[
      SubsuperscriptBox["\[Alpha]", 
       TagBox[
        StyleBox[
         FormBox[
          TagBox[
           StyleBox["i",
            FontColor->RGBColor[1, 0, 0]],
           StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
          TraditionalForm],
         ShowContents->False],
        StyleForm[#, ShowContents -> False]& ], 
       FormBox[
        TagBox[
         StyleBox["i",
          FontColor->RGBColor[1, 0, 0]],
         StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
        TraditionalForm]],
      Tensor[\[Alpha], {
        red[i]}, {Void}],
      Editable->False], ".", 
     InterpretationBox[
      SubsuperscriptBox["\[Alpha]", 
       FormBox[
        TagBox[
         StyleBox["j",
          FontColor->RGBColor[1, 0, 0]],
         StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
        TraditionalForm], 
       TagBox[
        StyleBox[
         FormBox[
          TagBox[
           StyleBox["j",
            FontColor->RGBColor[1, 0, 0]],
           StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
          TraditionalForm],
         ShowContents->False],
        StyleForm[#, ShowContents -> False]& ]],
      Tensor[\[Alpha], {Void}, {
        red[j]}],
      Editable->False]}]}], 
   RowBox[{
    InterpretationBox[
     SubsuperscriptBox["\[Alpha]", 
      TagBox[
       StyleBox[
        FormBox[
         TagBox[
          StyleBox["j",
           FontColor->RGBColor[1, 0, 0]],
          StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
         TraditionalForm],
        ShowContents->False],
       StyleForm[#, ShowContents -> False]& ], 
      FormBox[
       TagBox[
        StyleBox["j",
         FontColor->RGBColor[1, 0, 0]],
        StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
       TraditionalForm]],
     Tensor[\[Alpha], {
       red[j]}, {Void}],
     Editable->False], ".", 
    InterpretationBox[
     SubsuperscriptBox["\[Alpha]", 
      FormBox[
       TagBox[
        StyleBox["j",
         FontColor->RGBColor[1, 0, 0]],
        StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
       TraditionalForm], 
      TagBox[
       StyleBox[
        FormBox[
         TagBox[
          StyleBox["j",
           FontColor->RGBColor[1, 0, 0]],
          StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
         TraditionalForm],
        ShowContents->False],
       StyleForm[#, ShowContents -> False]& ]],
     Tensor[\[Alpha], {Void}, {
       red[j]}],
     Editable->False]}]], TraditionalForm]], "Output"]
}, Open  ]],

Cell["and is evaluated explicitly as", "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{"CartanMatrix", "=", 
    RowBox[{
     RowBox[{"Map", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"Apply", "[", 
         RowBox[{
          RowBox[{"Function", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"i", ",", "j"}], "}"}], ",", 
            RowBox[{"Evaluate", "[", "CartanMatrixDef", "]"}]}], "]"}], ",", 
          "#"}], "]"}], "&"}], ",", "\[IndentingNewLine]", 
       RowBox[{"Outer", "[", 
        RowBox[{"List", ",", "SimpleRootIndices", ",", "SimpleRootIndices"}], 
        "]"}], "\[IndentingNewLine]", ",", 
       RowBox[{"{", "2", "}"}]}], "]"}], "/.", 
     RowBox[{"TensorValueRules", "[", "\[Alpha]", "]"}]}]}], ")"}], "//", 
  "MatrixForm"}]], "Input"],

Cell[BoxData[
 FormBox[
  TagBox[
   RowBox[{"(", "\[NoBreak]", GridBox[{
      {"2", 
       RowBox[{"-", "1"}]},
      {
       RowBox[{"-", "1"}], "2"}
     },
     GridBoxAlignment->{
      "Columns" -> {{Decimal}}, "ColumnsIndexed" -> {}, 
       "Rows" -> {{Baseline}}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
   Function[BoxForm`e$, 
    MatrixForm[BoxForm`e$]]], TraditionalForm]], "Output"]
}, Open  ]],

Cell[TextData[{
 "In general the diagonal elements of the Cartan matrix are always 2 and the \
off diagonal elements are constrained to be one of the  values: ",
 Cell[BoxData[
  RowBox[{"{", 
   RowBox[{"0", ",", 
    RowBox[{"-", "1"}], ",", 
    RowBox[{"-", "2"}], ",", 
    RowBox[{"-", "3"}]}], "}"}]]],
 "."
}], "Text"],

Cell["\<\
An alternative method to calculate the Cartan matrix is by using the trace of \
the dual roots as\
\>", "Text"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Outer", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"2", 
      RowBox[{
       RowBox[{"Tr", "[", 
        RowBox[{
         RowBox[{"hd", "[", 
          RowBox[{"red", "@", "#1"}], "]"}], ".", 
         RowBox[{"hd", "[", 
          RowBox[{"red", "@", "#2"}], "]"}]}], "]"}], "/", 
       RowBox[{"Tr", "[", 
        RowBox[{
         RowBox[{"hd", "[", 
          RowBox[{"red", "@", "#1"}], "]"}], ".", 
         RowBox[{"hd", "[", 
          RowBox[{"red", "@", "#1"}], "]"}]}], "]"}]}]}], "&"}], 
    "\[IndentingNewLine]", ",", "SimpleRootIndices", ",", 
    "SimpleRootIndices"}], "]"}], "//", "MatrixForm"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"%", "//.", 
   RowBox[{"TensorValueRules", "[", 
    RowBox[{"h", ",", "T"}], "]"}]}], "//", "MatrixForm"}]}], "Input"],

Cell[BoxData[
 FormBox[
  TagBox[
   RowBox[{"(", "\[NoBreak]", GridBox[{
      {"2", 
       FractionBox[
        RowBox[{"2", " ", 
         RowBox[{"Tr", "[", 
          RowBox[{
           InterpretationBox[
            SubsuperscriptBox["h", 
             FormBox[
              TagBox[
               StyleBox["2",
                FontColor->RGBColor[1, 0, 0]],
               StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
              TraditionalForm], 
             TagBox[
              StyleBox[
               FormBox[
                TagBox[
                 StyleBox["2",
                  FontColor->RGBColor[1, 0, 0]],
                 StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
                TraditionalForm],
               ShowContents->False],
              StyleForm[#, ShowContents -> False]& ]],
            Tensor[h, {Void}, {
              red[2]}],
            Editable->False], ".", 
           InterpretationBox[
            SubsuperscriptBox["h", 
             FormBox[
              TagBox[
               StyleBox["3",
                FontColor->RGBColor[1, 0, 0]],
               StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
              TraditionalForm], 
             TagBox[
              StyleBox[
               FormBox[
                TagBox[
                 StyleBox["3",
                  FontColor->RGBColor[1, 0, 0]],
                 StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
                TraditionalForm],
               ShowContents->False],
              StyleForm[#, ShowContents -> False]& ]],
            Tensor[h, {Void}, {
              red[3]}],
            Editable->False]}], "]"}]}], 
        RowBox[{"Tr", "[", 
         RowBox[{
          InterpretationBox[
           SubsuperscriptBox["h", 
            FormBox[
             TagBox[
              StyleBox["2",
               FontColor->RGBColor[1, 0, 0]],
              StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
             TraditionalForm], 
            TagBox[
             StyleBox[
              FormBox[
               TagBox[
                StyleBox["2",
                 FontColor->RGBColor[1, 0, 0]],
                StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
               TraditionalForm],
              ShowContents->False],
             StyleForm[#, ShowContents -> False]& ]],
           Tensor[h, {Void}, {
             red[2]}],
           Editable->False], ".", 
          InterpretationBox[
           SubsuperscriptBox["h", 
            FormBox[
             TagBox[
              StyleBox["2",
               FontColor->RGBColor[1, 0, 0]],
              StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
             TraditionalForm], 
            TagBox[
             StyleBox[
              FormBox[
               TagBox[
                StyleBox["2",
                 FontColor->RGBColor[1, 0, 0]],
                StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
               TraditionalForm],
              ShowContents->False],
             StyleForm[#, ShowContents -> False]& ]],
           Tensor[h, {Void}, {
             red[2]}],
           Editable->False]}], "]"}]]},
      {
       FractionBox[
        RowBox[{"2", " ", 
         RowBox[{"Tr", "[", 
          RowBox[{
           InterpretationBox[
            SubsuperscriptBox["h", 
             FormBox[
              TagBox[
               StyleBox["3",
                FontColor->RGBColor[1, 0, 0]],
               StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
              TraditionalForm], 
             TagBox[
              StyleBox[
               FormBox[
                TagBox[
                 StyleBox["3",
                  FontColor->RGBColor[1, 0, 0]],
                 StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
                TraditionalForm],
               ShowContents->False],
              StyleForm[#, ShowContents -> False]& ]],
            Tensor[h, {Void}, {
              red[3]}],
            Editable->False], ".", 
           InterpretationBox[
            SubsuperscriptBox["h", 
             FormBox[
              TagBox[
               StyleBox["2",
                FontColor->RGBColor[1, 0, 0]],
               StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
              TraditionalForm], 
             TagBox[
              StyleBox[
               FormBox[
                TagBox[
                 StyleBox["2",
                  FontColor->RGBColor[1, 0, 0]],
                 StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
                TraditionalForm],
               ShowContents->False],
              StyleForm[#, ShowContents -> False]& ]],
            Tensor[h, {Void}, {
              red[2]}],
            Editable->False]}], "]"}]}], 
        RowBox[{"Tr", "[", 
         RowBox[{
          InterpretationBox[
           SubsuperscriptBox["h", 
            FormBox[
             TagBox[
              StyleBox["3",
               FontColor->RGBColor[1, 0, 0]],
              StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
             TraditionalForm], 
            TagBox[
             StyleBox[
              FormBox[
               TagBox[
                StyleBox["3",
                 FontColor->RGBColor[1, 0, 0]],
                StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
               TraditionalForm],
              ShowContents->False],
             StyleForm[#, ShowContents -> False]& ]],
           Tensor[h, {Void}, {
             red[3]}],
           Editable->False], ".", 
          InterpretationBox[
           SubsuperscriptBox["h", 
            FormBox[
             TagBox[
              StyleBox["3",
               FontColor->RGBColor[1, 0, 0]],
              StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
             TraditionalForm], 
            TagBox[
             StyleBox[
              FormBox[
               TagBox[
                StyleBox["3",
                 FontColor->RGBColor[1, 0, 0]],
                StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
               TraditionalForm],
              ShowContents->False],
             StyleForm[#, ShowContents -> False]& ]],
           Tensor[h, {Void}, {
             red[3]}],
           Editable->False]}], "]"}]], "2"}
     }], "\[NoBreak]", ")"}],
   Function[BoxForm`e$, 
    MatrixForm[BoxForm`e$]]], TraditionalForm]], "Output"],

Cell[BoxData[
 FormBox[
  TagBox[
   RowBox[{"(", "\[NoBreak]", GridBox[{
      {"2", 
       RowBox[{"-", "1"}]},
      {
       RowBox[{"-", "1"}], "2"}
     },
     GridBoxAlignment->{
      "Columns" -> {{Decimal}}, "ColumnsIndexed" -> {}, 
       "Rows" -> {{Baseline}}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
   Function[BoxForm`e$, 
    MatrixForm[BoxForm`e$]]], TraditionalForm]], "Output"]
}, Open  ]],

Cell["The respective Dynkin diagram is", "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DynkinDiagram", "[", "CartanMatrix", "]"}]], "Input"],

Cell[GraphicsData["PostScript", "\<\
%!
%%Creator: Mathematica
%%AspectRatio: .2 
MathPictureStart
/Mabs {
Mgmatrix idtransform
Mtmatrix dtransform
} bind def
/Mabsadd { Mabs
3 -1 roll add
3 1 roll add
exch } bind def
%% Graphics
%%IncludeResource: font Courier
%%IncludeFont: Courier
/Courier findfont 10  scalefont  setfont
% Scaling calculations
-2.77556e-17 0.2 0.1 0.2 [
[ 0 0 0 0 ]
[ 1 .2 0 0 ]
] MathScale
% Start of Graphics
1 setlinecap
1 setlinejoin
newpath
0 0 m
1 0 L
1 .2 L
0 .2 L
closepath
clip
newpath
0 g
.5 Mabswid
[ ] 0 setdash
.23 .1056 m
.37 .1056 L
s
newpath
.2 .1 .03 0 365.73 arc
s
newpath
.4 .1 .03 0 365.73 arc
s
% End of Graphics
MathPictureEnd
\
\>"], "Graphics",
 ImageSize->{288, 57.5625},
 ImageMargins->{{43, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 
  1}},ImageCache->GraphicsData["CompressedBitmap", "\<\
eJzzTSzJSM1NLMlMTlRwL0osyMhMLlZwyy8CCjEzMjAwKjAwMFgqMIDY/4FM
KPGf4d/XZ4ogAiQy/NnmIIoN5HVjOGsVRMoMTDGDRMAsEGYBkUwgEX04iw3O
WgHRaIpFIztckQ4WWQ4sYkshhplgkeLCIqZBpLollBvLjUVsMcRYYyxSPFjE
1IhUBzXWCIsULxYxVSxifFjEFuE2FptylZFmLDhsNUEiAmRoJCKusalbRFoS
UidSHR5jsSVkEhM8tnzEiUVMi0h10OwJLkLAxQWi4NDDohxR9iyHaDSHC7Bg
UQ4utMBCzHB1KyEaLUEUC0jAFK5oNURqMJTTtGYzMAIAhQpGWQ==\
\>"],ImageRangeCache->{{{0, 287}, {56.5625, 0}} -> {-0.0370419, -0.500005, \
0.0176797, 0.0176797}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Commutation relations in the canonical representation", "Subsection"],

Cell["\<\
Each root vector has an associated generator so it possible to relabel the \
generators other than the weight generators with the root vectors as\
\>", "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TableForm", "[", "\[IndentingNewLine]", 
  RowBox[{"RootLabelsRule", " ", "=", "\[IndentingNewLine]", 
   RowBox[{"MapThread", "[", 
    RowBox[{"Rule", ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"EinsteinArray", "[", "RootIndices", "]"}], "[", 
          RowBox[{"\[Alpha]d", "[", 
           RowBox[{"red", "@", "i"}], "]"}], "]"}], "/.", 
         RowBox[{"TensorValueRules", "[", "\[Alpha]", "]"}]}], ")"}], 
       "\[IndentingNewLine]", ",", 
       RowBox[{"Range", "[", "6", "]"}]}], "}"}]}], "\[IndentingNewLine]", 
    "]"}]}], "\[IndentingNewLine]", "]"}]], "Input"],

Cell[BoxData[
 FormBox[
  InterpretationBox[GridBox[{
     {
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", "0"}], "}"}], "\[Rule]", "1"}]},
     {
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         FractionBox["1", "2"], ",", "1"}], "}"}], "\[Rule]", "2"}]},
     {
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         FractionBox["1", "2"], ",", 
         RowBox[{"-", "1"}]}], "}"}], "\[Rule]", "3"}]},
     {
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "1"}], ",", "0"}], "}"}], "\[Rule]", "4"}]},
     {
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", 
          FractionBox["1", "2"]}], ",", 
         RowBox[{"-", "1"}]}], "}"}], "\[Rule]", "5"}]},
     {
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", 
          FractionBox["1", "2"]}], ",", "1"}], "}"}], "\[Rule]", "6"}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[2.0999999999999996`]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}],
   TableForm[{{1, 0} -> 1, {
       Rational[1, 2], 1} -> 2, {
       Rational[1, 2], -1} -> 3, {-1, 0} -> 4, {
       Rational[-1, 2], -1} -> 5, {
       Rational[-1, 2], 1} -> 6}]], TraditionalForm]], "Output"]
}, Open  ]],

Cell["\<\
Now we can tell general statements about the commutators in the canonical \
representation\
\>", "Text"],

Cell["\<\
\[FilledSquare] All the  elements of the Cartan subalgebra including any \
linear combinations commute.\
\>", "Text"],

Cell["\<\
\[FilledSquare] The commutator of a generator outside the Cartan subalgebra \
with a weight generator gives as result the same generator multiplied by its \
respective root vector component.\
\>", "Text"],

Cell["Some examples are", "Text"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"MCommutator", "[", 
   RowBox[{
    RowBox[{"Td", "[", 
     RowBox[{"red", "@", "7"}], "]"}], ",", 
    RowBox[{"Td", "[", 
     RowBox[{"red", "@", 
      RowBox[{"{", 
       RowBox[{"1", ",", "0"}], "}"}]}], "]"}]}], "]"}], "\[Equal]", 
  RowBox[{
   RowBox[{"HoldForm", "[", "1", "]"}], 
   RowBox[{"Td", "[", 
    RowBox[{"red", "@", 
     RowBox[{"{", 
      RowBox[{"1", ",", "0"}], "}"}]}], "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{"%", "/.", "RootLabelsRule"}], ")"}], "/.", 
    RowBox[{"TensorValueRules", "[", "T", "]"}]}], "//", "ReleaseHold"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"MCommutator", "[", 
   RowBox[{
    RowBox[{"Td", "[", 
     RowBox[{"red", "@", "8"}], "]"}], ",", 
    RowBox[{"Td", "[", 
     RowBox[{"red", "@", 
      RowBox[{"{", 
       RowBox[{"1", ",", "0"}], "}"}]}], "]"}]}], "]"}], "\[Equal]", 
  RowBox[{
   RowBox[{"HoldForm", "[", "0", "]"}], 
   RowBox[{"Td", "[", 
    RowBox[{"red", "@", 
     RowBox[{"{", 
      RowBox[{"1", ",", "0"}], "}"}]}], "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"%", "/.", "RootLabelsRule"}], "/.", 
   RowBox[{"TensorValueRules", "[", "T", "]"}]}], "//", 
  "ReleaseHold"}]}], "Input"],

Cell[BoxData[
 FormBox[
  RowBox[{
   InterpretationBox[
    RowBox[{"[", 
     InterpretationBox[
      SubsuperscriptBox["T", 
       FormBox[
        TagBox[
         StyleBox["7",
          FontColor->RGBColor[1, 0, 0]],
         StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
        TraditionalForm], 
       TagBox[
        StyleBox[
         FormBox[
          TagBox[
           StyleBox["7",
            FontColor->RGBColor[1, 0, 0]],
           StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
          TraditionalForm],
         ShowContents->False],
        StyleForm[#, ShowContents -> False]& ]],
      Tensor[T, {Void}, {
        red[7]}],
      Editable->False], ",", 
     InterpretationBox[
      SubsuperscriptBox["T", 
       FormBox[
        TagBox[
         StyleBox[
          RowBox[{"{", 
           RowBox[{"1", ",", "0"}], "}"}],
          FontColor->RGBColor[1, 0, 0]],
         StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
        TraditionalForm], 
       TagBox[
        StyleBox[
         FormBox[
          TagBox[
           StyleBox[
            RowBox[{"{", 
             RowBox[{"1", ",", "0"}], "}"}],
            FontColor->RGBColor[1, 0, 0]],
           StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
          TraditionalForm],
         ShowContents->False],
        StyleForm[#, ShowContents -> False]& ]],
      Tensor[T, {Void}, {
        red[{1, 0}]}],
      Editable->False], "]"}],
    MCommutator[
     Tensor[T, {Void}, {
       red[7]}], 
     Tensor[T, {Void}, {
       red[{1, 0}]}]],
    SyntaxForm->"Times"], "\[Equal]", 
   RowBox[{
    TagBox["1",
     HoldForm], " ", 
    InterpretationBox[
     SubsuperscriptBox["T", 
      FormBox[
       TagBox[
        StyleBox[
         RowBox[{"{", 
          RowBox[{"1", ",", "0"}], "}"}],
         FontColor->RGBColor[1, 0, 0]],
        StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
       TraditionalForm], 
      TagBox[
       StyleBox[
        FormBox[
         TagBox[
          StyleBox[
           RowBox[{"{", 
            RowBox[{"1", ",", "0"}], "}"}],
           FontColor->RGBColor[1, 0, 0]],
          StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
         TraditionalForm],
        ShowContents->False],
       StyleForm[#, ShowContents -> False]& ]],
     Tensor[T, {Void}, {
       red[{1, 0}]}],
     Editable->False]}]}], TraditionalForm]], "Output"],

Cell[BoxData[
 FormBox["True", TraditionalForm]], "Output"],

Cell[BoxData[
 FormBox[
  RowBox[{
   InterpretationBox[
    RowBox[{"[", 
     InterpretationBox[
      SubsuperscriptBox["T", 
       FormBox[
        TagBox[
         StyleBox["8",
          FontColor->RGBColor[1, 0, 0]],
         StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
        TraditionalForm], 
       TagBox[
        StyleBox[
         FormBox[
          TagBox[
           StyleBox["8",
            FontColor->RGBColor[1, 0, 0]],
           StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
          TraditionalForm],
         ShowContents->False],
        StyleForm[#, ShowContents -> False]& ]],
      Tensor[T, {Void}, {
        red[8]}],
      Editable->False], ",", 
     InterpretationBox[
      SubsuperscriptBox["T", 
       FormBox[
        TagBox[
         StyleBox[
          RowBox[{"{", 
           RowBox[{"1", ",", "0"}], "}"}],
          FontColor->RGBColor[1, 0, 0]],
         StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
        TraditionalForm], 
       TagBox[
        StyleBox[
         FormBox[
          TagBox[
           StyleBox[
            RowBox[{"{", 
             RowBox[{"1", ",", "0"}], "}"}],
            FontColor->RGBColor[1, 0, 0]],
           StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
          TraditionalForm],
         ShowContents->False],
        StyleForm[#, ShowContents -> False]& ]],
      Tensor[T, {Void}, {
        red[{1, 0}]}],
      Editable->False], "]"}],
    MCommutator[
     Tensor[T, {Void}, {
       red[8]}], 
     Tensor[T, {Void}, {
       red[{1, 0}]}]],
    SyntaxForm->"Times"], "\[Equal]", 
   RowBox[{
    TagBox["0",
     HoldForm], " ", 
    InterpretationBox[
     SubsuperscriptBox["T", 
      FormBox[
       TagBox[
        StyleBox[
         RowBox[{"{", 
          RowBox[{"1", ",", "0"}], "}"}],
         FontColor->RGBColor[1, 0, 0]],
        StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
       TraditionalForm], 
      TagBox[
       StyleBox[
        FormBox[
         TagBox[
          StyleBox[
           RowBox[{"{", 
            RowBox[{"1", ",", "0"}], "}"}],
           FontColor->RGBColor[1, 0, 0]],
          StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
         TraditionalForm],
        ShowContents->False],
       StyleForm[#, ShowContents -> False]& ]],
     Tensor[T, {Void}, {
       red[{1, 0}]}],
     Editable->False]}]}], TraditionalForm]], "Output"],

Cell[BoxData[
 FormBox["True", TraditionalForm]], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"MCommutator", "[", 
   RowBox[{
    RowBox[{"Td", "[", 
     RowBox[{"red", "@", "7"}], "]"}], ",", 
    RowBox[{"Td", "[", 
     RowBox[{"red", "@", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "1"}], ",", "0"}], "}"}]}], "]"}]}], "]"}], "\[Equal]", 
  RowBox[{
   RowBox[{"HoldForm", "[", 
    RowBox[{"-", "1"}], "]"}], 
   RowBox[{"Td", "[", 
    RowBox[{"red", "@", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "1"}], ",", "0"}], "}"}]}], 
    "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{"%", "/.", "RootLabelsRule"}], ")"}], "/.", 
    RowBox[{"TensorValueRules", "[", "T", "]"}]}], "//", "ReleaseHold"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"MCommutator", "[", 
   RowBox[{
    RowBox[{"Td", "[", 
     RowBox[{"red", "@", "8"}], "]"}], ",", 
    RowBox[{"Td", "[", 
     RowBox[{"red", "@", 
      RowBox[{"{", 
       RowBox[{"1", ",", "0"}], "}"}]}], "]"}]}], "]"}], "\[Equal]", 
  RowBox[{
   RowBox[{"HoldForm", "[", "0", "]"}], 
   RowBox[{"Td", "[", 
    RowBox[{"red", "@", 
     RowBox[{"{", 
      RowBox[{"1", ",", "0"}], "}"}]}], "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"%", "/.", "RootLabelsRule"}], "/.", 
   RowBox[{"TensorValueRules", "[", "T", "]"}]}], "//", 
  "ReleaseHold"}]}], "Input"],

Cell[BoxData[
 FormBox[
  RowBox[{
   InterpretationBox[
    RowBox[{"[", 
     InterpretationBox[
      SubsuperscriptBox["T", 
       FormBox[
        TagBox[
         StyleBox["7",
          FontColor->RGBColor[1, 0, 0]],
         StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
        TraditionalForm], 
       TagBox[
        StyleBox[
         FormBox[
          TagBox[
           StyleBox["7",
            FontColor->RGBColor[1, 0, 0]],
           StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
          TraditionalForm],
         ShowContents->False],
        StyleForm[#, ShowContents -> False]& ]],
      Tensor[T, {Void}, {
        red[7]}],
      Editable->False], ",", 
     InterpretationBox[
      SubsuperscriptBox["T", 
       FormBox[
        TagBox[
         StyleBox[
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "1"}], ",", "0"}], "}"}],
          FontColor->RGBColor[1, 0, 0]],
         StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
        TraditionalForm], 
       TagBox[
        StyleBox[
         FormBox[
          TagBox[
           StyleBox[
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "1"}], ",", "0"}], "}"}],
            FontColor->RGBColor[1, 0, 0]],
           StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
          TraditionalForm],
         ShowContents->False],
        StyleForm[#, ShowContents -> False]& ]],
      Tensor[T, {Void}, {
        red[{-1, 0}]}],
      Editable->False], "]"}],
    MCommutator[
     Tensor[T, {Void}, {
       red[7]}], 
     Tensor[T, {Void}, {
       red[{-1, 0}]}]],
    SyntaxForm->"Times"], "\[Equal]", 
   RowBox[{
    TagBox[
     RowBox[{"-", "1"}],
     HoldForm], " ", 
    InterpretationBox[
     SubsuperscriptBox["T", 
      FormBox[
       TagBox[
        StyleBox[
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "1"}], ",", "0"}], "}"}],
         FontColor->RGBColor[1, 0, 0]],
        StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
       TraditionalForm], 
      TagBox[
       StyleBox[
        FormBox[
         TagBox[
          StyleBox[
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "1"}], ",", "0"}], "}"}],
           FontColor->RGBColor[1, 0, 0]],
          StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
         TraditionalForm],
        ShowContents->False],
       StyleForm[#, ShowContents -> False]& ]],
     Tensor[T, {Void}, {
       red[{-1, 0}]}],
     Editable->False]}]}], TraditionalForm]], "Output"],

Cell[BoxData[
 FormBox["True", TraditionalForm]], "Output"],

Cell[BoxData[
 FormBox[
  RowBox[{
   InterpretationBox[
    RowBox[{"[", 
     InterpretationBox[
      SubsuperscriptBox["T", 
       FormBox[
        TagBox[
         StyleBox["8",
          FontColor->RGBColor[1, 0, 0]],
         StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
        TraditionalForm], 
       TagBox[
        StyleBox[
         FormBox[
          TagBox[
           StyleBox["8",
            FontColor->RGBColor[1, 0, 0]],
           StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
          TraditionalForm],
         ShowContents->False],
        StyleForm[#, ShowContents -> False]& ]],
      Tensor[T, {Void}, {
        red[8]}],
      Editable->False], ",", 
     InterpretationBox[
      SubsuperscriptBox["T", 
       FormBox[
        TagBox[
         StyleBox[
          RowBox[{"{", 
           RowBox[{"1", ",", "0"}], "}"}],
          FontColor->RGBColor[1, 0, 0]],
         StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
        TraditionalForm], 
       TagBox[
        StyleBox[
         FormBox[
          TagBox[
           StyleBox[
            RowBox[{"{", 
             RowBox[{"1", ",", "0"}], "}"}],
            FontColor->RGBColor[1, 0, 0]],
           StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
          TraditionalForm],
         ShowContents->False],
        StyleForm[#, ShowContents -> False]& ]],
      Tensor[T, {Void}, {
        red[{1, 0}]}],
      Editable->False], "]"}],
    MCommutator[
     Tensor[T, {Void}, {
       red[8]}], 
     Tensor[T, {Void}, {
       red[{1, 0}]}]],
    SyntaxForm->"Times"], "\[Equal]", 
   RowBox[{
    TagBox["0",
     HoldForm], " ", 
    InterpretationBox[
     SubsuperscriptBox["T", 
      FormBox[
       TagBox[
        StyleBox[
         RowBox[{"{", 
          RowBox[{"1", ",", "0"}], "}"}],
         FontColor->RGBColor[1, 0, 0]],
        StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
       TraditionalForm], 
      TagBox[
       StyleBox[
        FormBox[
         TagBox[
          StyleBox[
           RowBox[{"{", 
            RowBox[{"1", ",", "0"}], "}"}],
           FontColor->RGBColor[1, 0, 0]],
          StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
         TraditionalForm],
        ShowContents->False],
       StyleForm[#, ShowContents -> False]& ]],
     Tensor[T, {Void}, {
       red[{1, 0}]}],
     Editable->False]}]}], TraditionalForm]], "Output"],

Cell[BoxData[
 FormBox["True", TraditionalForm]], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"MCommutator", "[", 
   RowBox[{
    RowBox[{"Td", "[", 
     RowBox[{"red", "@", "7"}], "]"}], ",", 
    RowBox[{"Td", "[", 
     RowBox[{"red", "@", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"1", "/", "2"}], ",", "1"}], "}"}]}], "]"}]}], "]"}], 
  "\[Equal]", 
  RowBox[{
   RowBox[{"HoldForm", "[", 
    RowBox[{"1", "/", "2"}], "]"}], 
   RowBox[{"Td", "[", 
    RowBox[{"red", "@", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"1", "/", "2"}], ",", "1"}], "}"}]}], 
    "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{"%", "/.", "RootLabelsRule"}], ")"}], "/.", 
    RowBox[{"TensorValueRules", "[", "T", "]"}]}], "//", "ReleaseHold"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"MCommutator", "[", 
   RowBox[{
    RowBox[{"Td", "[", 
     RowBox[{"red", "@", "8"}], "]"}], ",", 
    RowBox[{"Td", "[", 
     RowBox[{"red", "@", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"1", "/", "2"}], ",", "1"}], "}"}]}], "]"}]}], "]"}], 
  "\[Equal]", 
  RowBox[{
   RowBox[{"HoldForm", "[", "1", "]"}], 
   RowBox[{"Td", "[", 
    RowBox[{"red", "@", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"1", "/", "2"}], ",", "1"}], "}"}]}], 
    "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"%", "/.", "RootLabelsRule"}], "/.", 
   RowBox[{"TensorValueRules", "[", "T", "]"}]}], "//", 
  "ReleaseHold"}]}], "Input"],

Cell[BoxData[
 FormBox[
  RowBox[{
   InterpretationBox[
    RowBox[{"[", 
     InterpretationBox[
      SubsuperscriptBox["T", 
       FormBox[
        TagBox[
         StyleBox["7",
          FontColor->RGBColor[1, 0, 0]],
         StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
        TraditionalForm], 
       TagBox[
        StyleBox[
         FormBox[
          TagBox[
           StyleBox["7",
            FontColor->RGBColor[1, 0, 0]],
           StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
          TraditionalForm],
         ShowContents->False],
        StyleForm[#, ShowContents -> False]& ]],
      Tensor[T, {Void}, {
        red[7]}],
      Editable->False], ",", 
     InterpretationBox[
      SubsuperscriptBox["T", 
       FormBox[
        TagBox[
         StyleBox[
          RowBox[{"{", 
           RowBox[{
            FractionBox["1", "2"], ",", "1"}], "}"}],
          FontColor->RGBColor[1, 0, 0]],
         StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
        TraditionalForm], 
       TagBox[
        StyleBox[
         FormBox[
          TagBox[
           StyleBox[
            RowBox[{"{", 
             RowBox[{
              FractionBox["1", "2"], ",", "1"}], "}"}],
            FontColor->RGBColor[1, 0, 0]],
           StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
          TraditionalForm],
         ShowContents->False],
        StyleForm[#, ShowContents -> False]& ]],
      Tensor[T, {Void}, {
        red[{
          Rational[1, 2], 1}]}],
      Editable->False], "]"}],
    MCommutator[
     Tensor[T, {Void}, {
       red[7]}], 
     Tensor[T, {Void}, {
       red[{
         Rational[1, 2], 1}]}]],
    SyntaxForm->"Times"], "\[Equal]", 
   RowBox[{
    TagBox[
     FractionBox["1", "2"],
     HoldForm], " ", 
    InterpretationBox[
     SubsuperscriptBox["T", 
      FormBox[
       TagBox[
        StyleBox[
         RowBox[{"{", 
          RowBox[{
           FractionBox["1", "2"], ",", "1"}], "}"}],
         FontColor->RGBColor[1, 0, 0]],
        StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
       TraditionalForm], 
      TagBox[
       StyleBox[
        FormBox[
         TagBox[
          StyleBox[
           RowBox[{"{", 
            RowBox[{
             FractionBox["1", "2"], ",", "1"}], "}"}],
           FontColor->RGBColor[1, 0, 0]],
          StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
         TraditionalForm],
        ShowContents->False],
       StyleForm[#, ShowContents -> False]& ]],
     Tensor[T, {Void}, {
       red[{
         Rational[1, 2], 1}]}],
     Editable->False]}]}], TraditionalForm]], "Output"],

Cell[BoxData[
 FormBox["True", TraditionalForm]], "Output"],

Cell[BoxData[
 FormBox[
  RowBox[{
   InterpretationBox[
    RowBox[{"[", 
     InterpretationBox[
      SubsuperscriptBox["T", 
       FormBox[
        TagBox[
         StyleBox["8",
          FontColor->RGBColor[1, 0, 0]],
         StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
        TraditionalForm], 
       TagBox[
        StyleBox[
         FormBox[
          TagBox[
           StyleBox["8",
            FontColor->RGBColor[1, 0, 0]],
           StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
          TraditionalForm],
         ShowContents->False],
        StyleForm[#, ShowContents -> False]& ]],
      Tensor[T, {Void}, {
        red[8]}],
      Editable->False], ",", 
     InterpretationBox[
      SubsuperscriptBox["T", 
       FormBox[
        TagBox[
         StyleBox[
          RowBox[{"{", 
           RowBox[{
            FractionBox["1", "2"], ",", "1"}], "}"}],
          FontColor->RGBColor[1, 0, 0]],
         StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
        TraditionalForm], 
       TagBox[
        StyleBox[
         FormBox[
          TagBox[
           StyleBox[
            RowBox[{"{", 
             RowBox[{
              FractionBox["1", "2"], ",", "1"}], "}"}],
            FontColor->RGBColor[1, 0, 0]],
           StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
          TraditionalForm],
         ShowContents->False],
        StyleForm[#, ShowContents -> False]& ]],
      Tensor[T, {Void}, {
        red[{
          Rational[1, 2], 1}]}],
      Editable->False], "]"}],
    MCommutator[
     Tensor[T, {Void}, {
       red[8]}], 
     Tensor[T, {Void}, {
       red[{
         Rational[1, 2], 1}]}]],
    SyntaxForm->"Times"], "\[Equal]", 
   RowBox[{
    TagBox["1",
     HoldForm], " ", 
    InterpretationBox[
     SubsuperscriptBox["T", 
      FormBox[
       TagBox[
        StyleBox[
         RowBox[{"{", 
          RowBox[{
           FractionBox["1", "2"], ",", "1"}], "}"}],
         FontColor->RGBColor[1, 0, 0]],
        StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
       TraditionalForm], 
      TagBox[
       StyleBox[
        FormBox[
         TagBox[
          StyleBox[
           RowBox[{"{", 
            RowBox[{
             FractionBox["1", "2"], ",", "1"}], "}"}],
           FontColor->RGBColor[1, 0, 0]],
          StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
         TraditionalForm],
        ShowContents->False],
       StyleForm[#, ShowContents -> False]& ]],
     Tensor[T, {Void}, {
       red[{
         Rational[1, 2], 1}]}],
     Editable->False]}]}], TraditionalForm]], "Output"],

Cell[BoxData[
 FormBox["True", TraditionalForm]], "Output"]
}, Open  ]],

Cell["\<\
\[FilledSquare] The commutator of two generators outside the Cartan \
subalgebra depends on the sum of the root labels with three cases.\
\>", "Text"],

Cell["\<\
\[FilledSmallCircle] If the sum of the root labels is a root vector,then the \
result is in general proportional to the generator with the sum of the roots \
as label.\
\>", "Text"],

Cell["The following commutator gives an example of this case", "Text"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"(", 
  RowBox[{
   RowBox[{"MCommutator", "[", 
    RowBox[{
     RowBox[{"Td", "[", 
      RowBox[{"red", "@", 
       RowBox[{"{", 
        RowBox[{"1", ",", "0"}], "}"}]}], "]"}], ",", 
     RowBox[{"Td", "[", 
      RowBox[{"red", "@", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "1"}], "/", "2"}], ",", "1"}], "}"}]}], "]"}]}], "]"}],
    "   ", "\[Equal]", " ", 
   RowBox[{"Td", "[", 
    RowBox[{"red", "@", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"1", "/", "2"}], ",", "1"}], "}"}]}], "]"}]}], 
  ")"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"%", "/.", "RootLabelsRule"}], "/.", 
  RowBox[{"TensorValueRules", "[", "T", "]"}]}]}], "Input"],

Cell[BoxData[
 FormBox[
  RowBox[{
   InterpretationBox[
    RowBox[{"[", 
     InterpretationBox[
      SubsuperscriptBox["T", 
       FormBox[
        TagBox[
         StyleBox[
          RowBox[{"{", 
           RowBox[{"1", ",", "0"}], "}"}],
          FontColor->RGBColor[1, 0, 0]],
         StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
        TraditionalForm], 
       TagBox[
        StyleBox[
         FormBox[
          TagBox[
           StyleBox[
            RowBox[{"{", 
             RowBox[{"1", ",", "0"}], "}"}],
            FontColor->RGBColor[1, 0, 0]],
           StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
          TraditionalForm],
         ShowContents->False],
        StyleForm[#, ShowContents -> False]& ]],
      Tensor[T, {Void}, {
        red[{1, 0}]}],
      Editable->False], ",", 
     InterpretationBox[
      SubsuperscriptBox["T", 
       FormBox[
        TagBox[
         StyleBox[
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", 
             FractionBox["1", "2"]}], ",", "1"}], "}"}],
          FontColor->RGBColor[1, 0, 0]],
         StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
        TraditionalForm], 
       TagBox[
        StyleBox[
         FormBox[
          TagBox[
           StyleBox[
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", 
               FractionBox["1", "2"]}], ",", "1"}], "}"}],
            FontColor->RGBColor[1, 0, 0]],
           StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
          TraditionalForm],
         ShowContents->False],
        StyleForm[#, ShowContents -> False]& ]],
      Tensor[T, {Void}, {
        red[{
          Rational[-1, 2], 1}]}],
      Editable->False], "]"}],
    MCommutator[
     Tensor[T, {Void}, {
       red[{1, 0}]}], 
     Tensor[T, {Void}, {
       red[{
         Rational[-1, 2], 1}]}]],
    SyntaxForm->"Times"], "\[Equal]", 
   InterpretationBox[
    SubsuperscriptBox["T", 
     FormBox[
      TagBox[
       StyleBox[
        RowBox[{"{", 
         RowBox[{
          FractionBox["1", "2"], ",", "1"}], "}"}],
        FontColor->RGBColor[1, 0, 0]],
       StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
      TraditionalForm], 
     TagBox[
      StyleBox[
       FormBox[
        TagBox[
         StyleBox[
          RowBox[{"{", 
           RowBox[{
            FractionBox["1", "2"], ",", "1"}], "}"}],
          FontColor->RGBColor[1, 0, 0]],
         StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
        TraditionalForm],
       ShowContents->False],
      StyleForm[#, ShowContents -> False]& ]],
    Tensor[T, {Void}, {
      red[{
        Rational[1, 2], 1}]}],
    Editable->False]}], TraditionalForm]], "Output"],

Cell[BoxData[
 FormBox["True", TraditionalForm]], "Output"]
}, Open  ]],

Cell["\<\
which is represented in the following graph (evaluate the thin closed cell) \
where the commutator of the roots in blue give the root in green\
\>", "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "roots", "}"}], ",", 
    RowBox[{
     RowBox[{"roots", "=", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{
            "#1", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], ",", 
            RowBox[{
            "#1", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], ",", 
            RowBox[{
            "#1", "\[LeftDoubleBracket]", "6", "\[RightDoubleBracket]"}], ",", 
            RowBox[{
            "#1", "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}], ",", 
            RowBox[{
            "#1", "\[LeftDoubleBracket]", "5", "\[RightDoubleBracket]"}], ",", 
            RowBox[{
            "#1", "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}]}], 
           "}"}], "&"}], ")"}], "[", 
        RowBox[{
         RowBox[{"EinsteinArray", "[", "RootIndices", "]"}], "[", 
         RowBox[{"\[Alpha]d", "[", 
          RowBox[{"red", "[", "i", "]"}], "]"}], "]"}], "]"}], "/.", 
       "\[InvisibleSpace]", 
       RowBox[{"TensorValueRules", "[", "\[Alpha]", "]"}]}]}], ";", 
     RowBox[{"Draw2D", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"Gray", ",", 
         RowBox[{"AbsoluteThickness", "[", "1", "]"}], ",", 
         RowBox[{"Line", "[", 
          RowBox[{"Join", "[", 
           RowBox[{"roots", ",", 
            RowBox[{"{", 
             RowBox[{"First", "[", "roots", "]"}], "}"}]}], "]"}], "]"}], ",",
          "Blue", ",", 
         RowBox[{"AbsoluteThickness", "[", "1", "]"}], ",", 
         RowBox[{"Arrow", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", "0"}], "}"}], ",", 
           RowBox[{
           "roots", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], 
          "]"}], ",", 
         RowBox[{"Arrow", "[", 
          RowBox[{
           RowBox[{
           "roots", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
           ",", 
           RowBox[{
            RowBox[{
            "roots", "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], 
            "+", 
            RowBox[{
            "roots", "\[LeftDoubleBracket]", "1", 
             "\[RightDoubleBracket]"}]}]}], "]"}], ",", 
         RowBox[{"RGBColor", "[", 
          RowBox[{"0", ",", "0.5`", ",", "0"}], "]"}], ",", 
         RowBox[{"Arrow", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", "0"}], "}"}], ",", 
           RowBox[{
           "roots", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], 
          "]"}], ",", "Gray", ",", 
         RowBox[{"Dashing", "[", 
          RowBox[{"{", 
           RowBox[{"0.015`", ",", "0.02`"}], "}"}], "]"}], ",", 
         RowBox[{"Arrow", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", "0"}], "}"}], ",", 
           RowBox[{
           "roots", "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}]}], 
          "]"}], ",", 
         RowBox[{"RGBColor", "[", 
          RowBox[{"0", ",", "0", ",", "0"}], "]"}], ",", 
         RowBox[{"Text", "[", 
          RowBox[{
           RowBox[{"Style", "[", 
            RowBox[{
             RowBox[{"Td", "[", 
              RowBox[{"red", "[", "1", "]"}], "]"}], ",", 
             RowBox[{"FontSize", "\[Rule]", "14"}]}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"1.1`", ",", "0.1`"}], "}"}]}], "]"}], ",", 
         RowBox[{"Text", "[", 
          RowBox[{
           RowBox[{"Style", "[", 
            RowBox[{
             RowBox[{"Td", "[", 
              RowBox[{"red", "[", "4", "]"}], "]"}], ",", 
             RowBox[{"FontSize", "\[Rule]", "14"}]}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "1.1`"}], ",", "0.1`"}], "}"}]}], "]"}], ",", 
         RowBox[{"Text", "[", 
          RowBox[{
           RowBox[{"Style", "[", 
            RowBox[{
             RowBox[{"Td", "[", 
              RowBox[{"red", "[", "2", "]"}], "]"}], ",", 
             RowBox[{"FontSize", "\[Rule]", "14"}]}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"0.6`", ",", "1.1`"}], "}"}]}], "]"}], ",", 
         RowBox[{"Text", "[", 
          RowBox[{
           RowBox[{"Style", "[", 
            RowBox[{
             RowBox[{"Td", "[", 
              RowBox[{"red", "[", "5", "]"}], "]"}], ",", 
             RowBox[{"FontSize", "\[Rule]", "14"}]}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "0.6`"}], ",", 
             RowBox[{"-", "1.1`"}]}], "}"}]}], "]"}], ",", 
         RowBox[{"Text", "[", 
          RowBox[{
           RowBox[{"Style", "[", 
            RowBox[{
             RowBox[{"Td", "[", 
              RowBox[{"red", "[", "6", "]"}], "]"}], ",", 
             RowBox[{"FontSize", "\[Rule]", "14"}]}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "0.6`"}], ",", "1.1`"}], "}"}]}], "]"}], ",", 
         RowBox[{"Text", "[", 
          RowBox[{
           RowBox[{"Style", "[", 
            RowBox[{
             RowBox[{"Td", "[", 
              RowBox[{"red", "[", "3", "]"}], "]"}], ",", 
             RowBox[{"FontSize", "\[Rule]", "14"}]}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"0.6`", ",", 
             RowBox[{"-", "1.1`"}]}], "}"}]}], "]"}], ",", 
         RowBox[{"RGBColor", "[", 
          RowBox[{"0.0313726`", ",", "0.666667`", ",", "0"}], "]"}]}], "}"}], 
       ",", 
       RowBox[{"Frame", "\[Rule]", "True"}], ",", 
       RowBox[{"FrameTicks", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"CustomTicks", "[", 
           RowBox[{"Identity", ",", 
            RowBox[{"databased", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "1"}], ",", 
               RowBox[{"-", 
                FractionBox["1", "2"]}], ",", 
               FractionBox["1", "2"], ",", "1"}], "}"}], "]"}]}], "]"}], ",", 
          
          RowBox[{"CustomTicks", "[", 
           RowBox[{"Identity", ",", 
            RowBox[{"databased", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "1"}], ",", "0", ",", "1"}], "}"}], "]"}]}], 
           "]"}], ",", 
          RowBox[{"CustomTicks", "[", 
           RowBox[{"Identity", ",", 
            RowBox[{"databased", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "1"}], ",", 
               RowBox[{"-", 
                FractionBox["1", "2"]}], ",", 
               FractionBox["1", "2"], ",", "1"}], "}"}], "]"}], ",", 
            RowBox[{"CTNumberFunction", "\[Rule]", 
             RowBox[{"(", 
              RowBox[{"\"\<\>\"", "&"}], ")"}]}]}], "]"}], ",", 
          RowBox[{"CustomTicks", "[", 
           RowBox[{"Identity", ",", 
            RowBox[{"databased", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "1"}], ",", "0", ",", "1"}], "}"}], "]"}], ",", 
            RowBox[{"CTNumberFunction", "\[Rule]", 
             RowBox[{"(", 
              RowBox[{"\"\<\>\"", "&"}], ")"}]}]}], "]"}]}], "}"}]}], ",", 
       RowBox[{"PlotLabel", "\[Rule]", "\"\<SU[3] Roots\>\""}], ",", 
       RowBox[{"AspectRatio", "\[Rule]", "Automatic"}], ",", 
       RowBox[{"PlotRange", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "1.2`"}], ",", "1.2`"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "1.2`"}], ",", "1.2`"}], "}"}]}], "}"}]}], ",", 
       RowBox[{"Axes", "\[Rule]", "True"}], ",", 
       RowBox[{"RotateLabel", "\[Rule]", "False"}], ",", 
       RowBox[{"AxesStyle", "\[Rule]", 
        RowBox[{"GrayLevel", "[", "0.7`", "]"}]}], ",", 
       RowBox[{"FrameLabel", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Style", "[", 
           RowBox[{
            RowBox[{"Td", "[", 
             RowBox[{"red", "[", "7", "]"}], "]"}], ",", 
            RowBox[{"FontSize", "\[Rule]", "16"}]}], "]"}], ",", 
          RowBox[{"Style", "[", 
           RowBox[{
            RowBox[{"Tensor", "[", 
             RowBox[{"T", ",", 
              RowBox[{"{", "Void", "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"red", "[", "8", "]"}], "}"}]}], "]"}], ",", 
            RowBox[{"FontSize", "\[Rule]", "16"}]}], "]"}]}], "}"}]}]}], 
      "]"}]}]}], "]"}], ";"}]], "Input",
 CellOpen->False],

Cell[GraphicsData["PostScript", "\<\
%!
%%Creator: Mathematica
%%AspectRatio: 1 
MathPictureStart
/Mabs {
Mgmatrix idtransform
Mtmatrix dtransform
} bind def
/Mabsadd { Mabs
3 -1 roll add
3 1 roll add
exch } bind def
%% Graphics
%%IncludeResource: font Courier
%%IncludeFont: Courier
/Courier findfont 10  scalefont  setfont
% Scaling calculations
0.5 0.416667 0.5 0.416667 [
[.08333 -0.0125 -6 -9 ]
[.08333 -0.0125 6 0 ]
[.29167 -0.0125 -11.4062 -19.9375 ]
[.29167 -0.0125 11.4062 0 ]
[.70833 -0.0125 -8.09375 -19.9375 ]
[.70833 -0.0125 8.09375 0 ]
[.91667 -0.0125 -3 -9 ]
[.91667 -0.0125 3 0 ]
[ 0 0 -0.125 0 ]
[.5 -0.0125 -10.7188 -38.5 ]
[.5 -0.0125 10.7188 -19.9375 ]
[-0.0125 .08333 -12 -4.5 ]
[-0.0125 .08333 0 4.5 ]
[-0.0125 .5 -6 -4.5 ]
[-0.0125 .5 0 4.5 ]
[-0.0125 .91667 -6 -4.5 ]
[-0.0125 .91667 0 4.5 ]
[ 0 0 -0.125 0 ]
[-0.01875 .5 -33.4375 -9.4375 ]
[-0.01875 .5 -12 9.4375 ]
[ 0 1 .125 0 ]
[ 1 0 .125 0 ]
[.5 1.0125 -35 0 ]
[.5 1.0125 35 10.125 ]
[ 0 0 0 0 ]
[ 1 1 0 0 ]
] MathScale
% Start of Graphics
1 setlinecap
1 setlinejoin
newpath
0 g
.25 Mabswid
[ ] 0 setdash
.08333 0 m
.08333 .00625 L
s
[(-1)] .08333 -0.0125 0 1 Mshowa
.29167 0 m
.29167 .00625 L
s
gsave
.29167 -0.0125 -72.4062 -23.9375 Mabsadd m
1 1 Mabs scale
currentpoint translate
0 27.9375 translate 1 -1 scale
/g { setgray} bind def
/k { setcmykcolor} bind def
/p { gsave} bind def
/r { setrgbcolor} bind def
/w { setlinewidth} bind def
/C { curveto} bind def
/F { fill} bind def
/L { lineto} bind def
/rL { rlineto} bind def
/P { grestore} bind def
/s { stroke} bind def
/S { show} bind def
/N {currentpoint 3 -1 roll show moveto} bind def
/Msf { findfont exch scalefont [1 0 0 -1 0 0 ] makefont setfont} bind def
/m { moveto} bind def
/Mr { rmoveto} bind def
/Mx {currentpoint exch pop moveto} bind def
/My {currentpoint pop exch moveto} bind def
/X {0 rmoveto} bind def
/Y {0 exch rmoveto} bind def
/MISOfy
{
    /newfontname exch def
    /oldfontname exch def

    oldfontname findfont
    dup length dict begin
        {1 index /FID ne {def} {pop pop} ifelse} forall
        /Encoding ISOLatin1Encoding def
        currentdict
    end

    newfontname exch definefont pop
} def
63.000 16.938 moveto
%%IncludeResource: font Mathematica1Mono
%%IncludeFont: Mathematica1Mono
/Mathematica1Mono findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
(-) show
72.688 11.188 moveto
%%IncludeResource: font Courier
%%IncludeFont: Courier
%%BeginResource: font Courier-MISO
%%BeginFont: Courier-MISO
/Courier /Courier-MISO MISOfy
%%EndFont
%%EndResource
%%IncludeResource: font Courier-MISO
%%IncludeFont: Courier-MISO
/Courier-MISO findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
(1) show
%%IncludeResource: font Mathematica1Mono
%%IncludeFont: Mathematica1Mono
/Mathematica1Mono findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
71.438 16.938 moveto
(\\200) show
73.500 16.938 moveto
(\\200) show
75.562 16.938 moveto
(\\200) show
77.625 16.938 moveto
(\\200) show
78.062 16.938 moveto
(\\200) show
72.688 22.938 moveto
%%IncludeResource: font Courier-MISO
%%IncludeFont: Courier-MISO
/Courier-MISO findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
(2) show
1.000 setlinewidth
grestore
.70833 0 m
.70833 .00625 L
s
gsave
.70833 -0.0125 -69.0938 -23.9375 Mabsadd m
1 1 Mabs scale
currentpoint translate
0 27.9375 translate 1 -1 scale
/g { setgray} bind def
/k { setcmykcolor} bind def
/p { gsave} bind def
/r { setrgbcolor} bind def
/w { setlinewidth} bind def
/C { curveto} bind def
/F { fill} bind def
/L { lineto} bind def
/rL { rlineto} bind def
/P { grestore} bind def
/s { stroke} bind def
/S { show} bind def
/N {currentpoint 3 -1 roll show moveto} bind def
/Msf { findfont exch scalefont [1 0 0 -1 0 0 ] makefont setfont} bind def
/m { moveto} bind def
/Mr { rmoveto} bind def
/Mx {currentpoint exch pop moveto} bind def
/My {currentpoint pop exch moveto} bind def
/X {0 rmoveto} bind def
/Y {0 exch rmoveto} bind def
/MISOfy
{
    /newfontname exch def
    /oldfontname exch def

    oldfontname findfont
    dup length dict begin
        {1 index /FID ne {def} {pop pop} ifelse} forall
        /Encoding ISOLatin1Encoding def
        currentdict
    end

    newfontname exch definefont pop
} def
66.062 11.188 moveto
%%IncludeResource: font Courier
%%IncludeFont: Courier
%%BeginResource: font Courier-MISO
%%BeginFont: Courier-MISO
/Courier /Courier-MISO MISOfy
%%EndFont
%%EndResource
%%IncludeResource: font Courier-MISO
%%IncludeFont: Courier-MISO
/Courier-MISO findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
(1) show
%%IncludeResource: font Mathematica1Mono
%%IncludeFont: Mathematica1Mono
/Mathematica1Mono findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
64.812 16.938 moveto
(\\200) show
66.875 16.938 moveto
(\\200) show
68.938 16.938 moveto
(\\200) show
71.000 16.938 moveto
(\\200) show
71.438 16.938 moveto
(\\200) show
66.062 22.938 moveto
%%IncludeResource: font Courier-MISO
%%IncludeFont: Courier-MISO
/Courier-MISO findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
(2) show
1.000 setlinewidth
grestore
.91667 0 m
.91667 .00625 L
s
[(1)] .91667 -0.0125 0 1 Mshowa
0 0 m
1 0 L
s
gsave
.5 -0.0125 -71.7188 -42.5 Mabsadd m
1 1 Mabs scale
currentpoint translate
0 26.5625 translate 1 -1 scale
/g { setgray} bind def
/k { setcmykcolor} bind def
/p { gsave} bind def
/r { setrgbcolor} bind def
/w { setlinewidth} bind def
/C { curveto} bind def
/F { fill} bind def
/L { lineto} bind def
/rL { rlineto} bind def
/P { grestore} bind def
/s { stroke} bind def
/S { show} bind def
/N {currentpoint 3 -1 roll show moveto} bind def
/Msf { findfont exch scalefont [1 0 0 -1 0 0 ] makefont setfont} bind def
/m { moveto} bind def
/Mr { rmoveto} bind def
/Mx {currentpoint exch pop moveto} bind def
/My {currentpoint pop exch moveto} bind def
/X {0 rmoveto} bind def
/Y {0 exch rmoveto} bind def
/MISOfy
{
    /newfontname exch def
    /oldfontname exch def

    oldfontname findfont
    dup length dict begin
        {1 index /FID ne {def} {pop pop} ifelse} forall
        /Encoding ISOLatin1Encoding def
        currentdict
    end

    newfontname exch definefont pop
} def
63.000 18.000 moveto
%%IncludeResource: font Courier
%%IncludeFont: Courier
%%BeginResource: font Courier-MISO
%%BeginFont: Courier-MISO
/Courier /Courier-MISO MISOfy
%%EndFont
%%EndResource
%%IncludeResource: font Courier-MISO
%%IncludeFont: Courier-MISO
/Courier-MISO findfont 16.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
(T) show
72.562 21.562 moveto
%%IncludeResource: font Courier-MISO
%%IncludeFont: Courier-MISO
/Courier-MISO findfont 11.375 scalefont
[1 0 0 -1 0 0 ] makefont setfont
1.000 0.000 0.000 setrgbcolor
(7) show
1.000 setlinewidth
grestore
0 .08333 m
.00625 .08333 L
s
[(-1)] -0.0125 .08333 1 0 Mshowa
0 .5 m
.00625 .5 L
s
[(0)] -0.0125 .5 1 0 Mshowa
0 .91667 m
.00625 .91667 L
s
[(1)] -0.0125 .91667 1 0 Mshowa
0 0 m
0 1 L
s
gsave
-0.01875 .5 -94.4375 -13.4375 Mabsadd m
1 1 Mabs scale
currentpoint translate
0 26.875 translate 1 -1 scale
/g { setgray} bind def
/k { setcmykcolor} bind def
/p { gsave} bind def
/r { setrgbcolor} bind def
/w { setlinewidth} bind def
/C { curveto} bind def
/F { fill} bind def
/L { lineto} bind def
/rL { rlineto} bind def
/P { grestore} bind def
/s { stroke} bind def
/S { show} bind def
/N {currentpoint 3 -1 roll show moveto} bind def
/Msf { findfont exch scalefont [1 0 0 -1 0 0 ] makefont setfont} bind def
/m { moveto} bind def
/Mr { rmoveto} bind def
/Mx {currentpoint exch pop moveto} bind def
/My {currentpoint pop exch moveto} bind def
/X {0 rmoveto} bind def
/Y {0 exch rmoveto} bind def
/MISOfy
{
    /newfontname exch def
    /oldfontname exch def

    oldfontname findfont
    dup length dict begin
        {1 index /FID ne {def} {pop pop} ifelse} forall
        /Encoding ISOLatin1Encoding def
        currentdict
    end

    newfontname exch definefont pop
} def
63.000 18.188 moveto
%%IncludeResource: font Courier
%%IncludeFont: Courier
%%BeginResource: font Courier-MISO
%%BeginFont: Courier-MISO
/Courier /Courier-MISO MISOfy
%%EndFont
%%EndResource
%%IncludeResource: font Courier-MISO
%%IncludeFont: Courier-MISO
/Courier-MISO findfont 16.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
(T) show
72.562 21.750 moveto
%%IncludeResource: font Courier-MISO
%%IncludeFont: Courier-MISO
/Courier-MISO findfont 11.375 scalefont
[1 0 0 -1 0 0 ] makefont setfont
1.000 0.000 0.000 setrgbcolor
(8) show
1.000 setlinewidth
grestore
.08333 .99375 m
.08333 1 L
s
.29167 .99375 m
.29167 1 L
s
.70833 .99375 m
.70833 1 L
s
.91667 .99375 m
.91667 1 L
s
0 1 m
1 1 L
s
.99375 .08333 m
1 .08333 L
s
.99375 .5 m
1 .5 L
s
.99375 .91667 m
1 .91667 L
s
1 0 m
1 1 L
s
.7 g
0 .5 m
1 .5 L
s
.5 0 m
.5 1 L
s
0 g
gsave
.5 1.0125 -96 -4 Mabsadd m
1 1 Mabs scale
currentpoint translate
0 18.125 translate 1 -1 scale
/g { setgray} bind def
/k { setcmykcolor} bind def
/p { gsave} bind def
/r { setrgbcolor} bind def
/w { setlinewidth} bind def
/C { curveto} bind def
/F { fill} bind def
/L { lineto} bind def
/rL { rlineto} bind def
/P { grestore} bind def
/s { stroke} bind def
/S { show} bind def
/N {currentpoint 3 -1 roll show moveto} bind def
/Msf { findfont exch scalefont [1 0 0 -1 0 0 ] makefont setfont} bind def
/m { moveto} bind def
/Mr { rmoveto} bind def
/Mx {currentpoint exch pop moveto} bind def
/My {currentpoint pop exch moveto} bind def
/X {0 rmoveto} bind def
/Y {0 exch rmoveto} bind def
63.000 11.250 moveto
%%IncludeResource: font Courier
%%IncludeFont: Courier
/Courier findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
0.000 0.000 rmoveto
63.000 11.250 moveto
%%IncludeResource: font Courier
%%IncludeFont: Courier
/Courier findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
(SU) show
%%IncludeResource: font Mathematica2Mono
%%IncludeFont: Mathematica2Mono
/Mathematica2Mono findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
75.000 11.250 moveto
(@) show
81.000 11.250 moveto
%%IncludeResource: font Courier
%%IncludeFont: Courier
/Courier findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
(3) show
%%IncludeResource: font Mathematica2Mono
%%IncludeFont: Mathematica2Mono
/Mathematica2Mono findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
87.000 11.250 moveto
(D) show
99.000 11.250 moveto
%%IncludeResource: font Courier
%%IncludeFont: Courier
/Courier findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
(Roots) show
129.000 11.250 moveto
%%IncludeResource: font Courier
%%IncludeFont: Courier
/Courier findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
0.000 0.000 rmoveto
1.000 setlinewidth
grestore
0 0 m
1 0 L
1 1 L
0 1 L
closepath
clip
newpath
% Start of user PostScript
/mathtops {
gsave
MBeginOrig
moveto
MEndOrig
currentpoint
grestore
} bind def
/MAtocoords {
mathtops 4 2 roll mathtops
4 copy pop pop
3 -1 roll sub
/arry exch def
exch sub
/arrx exch def
arrx dup mul
arry dup mul
add sqrt
/arrl exch def
translate
} bind def
/MAarrowhead1 {
gsave
MAtocoords
arrl 0. eq
{ 0 0 Mdot }
{
[ arrx arrl div
arry arrl div
-1 arry mul arrl div
arrx arrl div
0 0 ]
concat
-0.05 0.0125 moveto 0 0 lineto
-0.05 -0.0125 lineto fill
-0.05 0.0125 moveto 0 0 lineto
-0.05 -0.0125 lineto
-0.05 0.0125 lineto stroke
} ifelse
grestore
} def
% End of user PostScript
.753 .753 .753 r
1 Mabswid
.91667 .5 m
.70833 .91667 L
.29167 .91667 L
.08333 .5 L
.29167 .08333 L
.70833 .08333 L
.91667 .5 L
s
0 0 1 r
.5 .5 m
.91667 .5 L
s
% Start of user PostScript
0 0 1. 0 MAarrowhead1
% End of user PostScript
.91667 .5 m
.70833 .91667 L
s
% Start of user PostScript
1. 0 0.5 1. MAarrowhead1
% End of user PostScript
0 .5 0 r
.5 .5 m
.70833 .91667 L
s
% Start of user PostScript
0 0 0.5 1. MAarrowhead1
% End of user PostScript
.753 .753 .753 r
[ .015 .02 ] 0 setdash
.5 .5 m
.29167 .91667 L
s
% Start of user PostScript
0 0 -0.5 1. MAarrowhead1
% End of user PostScript
0 0 0 r
gsave
.95833 .54167 -70.6875 -12.2812 Mabsadd m
1 1 Mabs scale
currentpoint translate
0 24.5625 translate 1 -1 scale
/g { setgray} bind def
/k { setcmykcolor} bind def
/p { gsave} bind def
/r { setrgbcolor} bind def
/w { setlinewidth} bind def
/C { curveto} bind def
/F { fill} bind def
/L { lineto} bind def
/rL { rlineto} bind def
/P { grestore} bind def
/s { stroke} bind def
/S { show} bind def
/N {currentpoint 3 -1 roll show moveto} bind def
/Msf { findfont exch scalefont [1 0 0 -1 0 0 ] makefont setfont} bind def
/m { moveto} bind def
/Mr { rmoveto} bind def
/Mx {currentpoint exch pop moveto} bind def
/My {currentpoint pop exch moveto} bind def
/X {0 rmoveto} bind def
/Y {0 exch rmoveto} bind def
/MISOfy
{
    /newfontname exch def
    /oldfontname exch def

    oldfontname findfont
    dup length dict begin
        {1 index /FID ne {def} {pop pop} ifelse} forall
        /Encoding ISOLatin1Encoding def
        currentdict
    end

    newfontname exch definefont pop
} def
63.000 16.438 moveto
%%IncludeResource: font Courier
%%IncludeFont: Courier
%%BeginResource: font Courier-MISO
%%BeginFont: Courier-MISO
/Courier /Courier-MISO MISOfy
%%EndFont
%%EndResource
%%IncludeResource: font Courier-MISO
%%IncludeFont: Courier-MISO
/Courier-MISO findfont 14.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
(T) show
71.375 19.562 moveto
%%IncludeResource: font Courier-MISO
%%IncludeFont: Courier-MISO
/Courier-MISO findfont 9.938 scalefont
[1 0 0 -1 0 0 ] makefont setfont
1.000 0.000 0.000 setrgbcolor
(1) show
1.000 setlinewidth
grestore
gsave
.04167 .54167 -70.6875 -12.2812 Mabsadd m
1 1 Mabs scale
currentpoint translate
0 24.5625 translate 1 -1 scale
/g { setgray} bind def
/k { setcmykcolor} bind def
/p { gsave} bind def
/r { setrgbcolor} bind def
/w { setlinewidth} bind def
/C { curveto} bind def
/F { fill} bind def
/L { lineto} bind def
/rL { rlineto} bind def
/P { grestore} bind def
/s { stroke} bind def
/S { show} bind def
/N {currentpoint 3 -1 roll show moveto} bind def
/Msf { findfont exch scalefont [1 0 0 -1 0 0 ] makefont setfont} bind def
/m { moveto} bind def
/Mr { rmoveto} bind def
/Mx {currentpoint exch pop moveto} bind def
/My {currentpoint pop exch moveto} bind def
/X {0 rmoveto} bind def
/Y {0 exch rmoveto} bind def
/MISOfy
{
    /newfontname exch def
    /oldfontname exch def

    oldfontname findfont
    dup length dict begin
        {1 index /FID ne {def} {pop pop} ifelse} forall
        /Encoding ISOLatin1Encoding def
        currentdict
    end

    newfontname exch definefont pop
} def
63.000 16.438 moveto
%%IncludeResource: font Courier
%%IncludeFont: Courier
%%BeginResource: font Courier-MISO
%%BeginFont: Courier-MISO
/Courier /Courier-MISO MISOfy
%%EndFont
%%EndResource
%%IncludeResource: font Courier-MISO
%%IncludeFont: Courier-MISO
/Courier-MISO findfont 14.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
(T) show
71.375 19.562 moveto
%%IncludeResource: font Courier-MISO
%%IncludeFont: Courier-MISO
/Courier-MISO findfont 9.938 scalefont
[1 0 0 -1 0 0 ] makefont setfont
1.000 0.000 0.000 setrgbcolor
(4) show
1.000 setlinewidth
grestore
gsave
.75 .95833 -70.6875 -12.2812 Mabsadd m
1 1 Mabs scale
currentpoint translate
0 24.5625 translate 1 -1 scale
/g { setgray} bind def
/k { setcmykcolor} bind def
/p { gsave} bind def
/r { setrgbcolor} bind def
/w { setlinewidth} bind def
/C { curveto} bind def
/F { fill} bind def
/L { lineto} bind def
/rL { rlineto} bind def
/P { grestore} bind def
/s { stroke} bind def
/S { show} bind def
/N {currentpoint 3 -1 roll show moveto} bind def
/Msf { findfont exch scalefont [1 0 0 -1 0 0 ] makefont setfont} bind def
/m { moveto} bind def
/Mr { rmoveto} bind def
/Mx {currentpoint exch pop moveto} bind def
/My {currentpoint pop exch moveto} bind def
/X {0 rmoveto} bind def
/Y {0 exch rmoveto} bind def
/MISOfy
{
    /newfontname exch def
    /oldfontname exch def

    oldfontname findfont
    dup length dict begin
        {1 index /FID ne {def} {pop pop} ifelse} forall
        /Encoding ISOLatin1Encoding def
        currentdict
    end

    newfontname exch definefont pop
} def
63.000 16.438 moveto
%%IncludeResource: font Courier
%%IncludeFont: Courier
%%BeginResource: font Courier-MISO
%%BeginFont: Courier-MISO
/Courier /Courier-MISO MISOfy
%%EndFont
%%EndResource
%%IncludeResource: font Courier-MISO
%%IncludeFont: Courier-MISO
/Courier-MISO findfont 14.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
(T) show
71.375 19.562 moveto
%%IncludeResource: font Courier-MISO
%%IncludeFont: Courier-MISO
/Courier-MISO findfont 9.938 scalefont
[1 0 0 -1 0 0 ] makefont setfont
1.000 0.000 0.000 setrgbcolor
(2) show
1.000 setlinewidth
grestore
gsave
.25 .04167 -70.6875 -12.2812 Mabsadd m
1 1 Mabs scale
currentpoint translate
0 24.5625 translate 1 -1 scale
/g { setgray} bind def
/k { setcmykcolor} bind def
/p { gsave} bind def
/r { setrgbcolor} bind def
/w { setlinewidth} bind def
/C { curveto} bind def
/F { fill} bind def
/L { lineto} bind def
/rL { rlineto} bind def
/P { grestore} bind def
/s { stroke} bind def
/S { show} bind def
/N {currentpoint 3 -1 roll show moveto} bind def
/Msf { findfont exch scalefont [1 0 0 -1 0 0 ] makefont setfont} bind def
/m { moveto} bind def
/Mr { rmoveto} bind def
/Mx {currentpoint exch pop moveto} bind def
/My {currentpoint pop exch moveto} bind def
/X {0 rmoveto} bind def
/Y {0 exch rmoveto} bind def
/MISOfy
{
    /newfontname exch def
    /oldfontname exch def

    oldfontname findfont
    dup length dict begin
        {1 index /FID ne {def} {pop pop} ifelse} forall
        /Encoding ISOLatin1Encoding def
        currentdict
    end

    newfontname exch definefont pop
} def
63.000 16.312 moveto
%%IncludeResource: font Courier
%%IncludeFont: Courier
%%BeginResource: font Courier-MISO
%%BeginFont: Courier-MISO
/Courier /Courier-MISO MISOfy
%%EndFont
%%EndResource
%%IncludeResource: font Courier-MISO
%%IncludeFont: Courier-MISO
/Courier-MISO findfont 14.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
(T) show
71.375 19.438 moveto
%%IncludeResource: font Courier-MISO
%%IncludeFont: Courier-MISO
/Courier-MISO findfont 9.938 scalefont
[1 0 0 -1 0 0 ] makefont setfont
1.000 0.000 0.000 setrgbcolor
(5) show
1.000 setlinewidth
grestore
gsave
.25 .95833 -70.6875 -12.3438 Mabsadd m
1 1 Mabs scale
currentpoint translate
0 24.6875 translate 1 -1 scale
/g { setgray} bind def
/k { setcmykcolor} bind def
/p { gsave} bind def
/r { setrgbcolor} bind def
/w { setlinewidth} bind def
/C { curveto} bind def
/F { fill} bind def
/L { lineto} bind def
/rL { rlineto} bind def
/P { grestore} bind def
/s { stroke} bind def
/S { show} bind def
/N {currentpoint 3 -1 roll show moveto} bind def
/Msf { findfont exch scalefont [1 0 0 -1 0 0 ] makefont setfont} bind def
/m { moveto} bind def
/Mr { rmoveto} bind def
/Mx {currentpoint exch pop moveto} bind def
/My {currentpoint pop exch moveto} bind def
/X {0 rmoveto} bind def
/Y {0 exch rmoveto} bind def
/MISOfy
{
    /newfontname exch def
    /oldfontname exch def

    oldfontname findfont
    dup length dict begin
        {1 index /FID ne {def} {pop pop} ifelse} forall
        /Encoding ISOLatin1Encoding def
        currentdict
    end

    newfontname exch definefont pop
} def
63.000 16.438 moveto
%%IncludeResource: font Courier
%%IncludeFont: Courier
%%BeginResource: font Courier-MISO
%%BeginFont: Courier-MISO
/Courier /Courier-MISO MISOfy
%%EndFont
%%EndResource
%%IncludeResource: font Courier-MISO
%%IncludeFont: Courier-MISO
/Courier-MISO findfont 14.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
(T) show
71.375 19.562 moveto
%%IncludeResource: font Courier-MISO
%%IncludeFont: Courier-MISO
/Courier-MISO findfont 9.938 scalefont
[1 0 0 -1 0 0 ] makefont setfont
1.000 0.000 0.000 setrgbcolor
(6) show
1.000 setlinewidth
grestore
gsave
.75 .04167 -70.6875 -12.3438 Mabsadd m
1 1 Mabs scale
currentpoint translate
0 24.6875 translate 1 -1 scale
/g { setgray} bind def
/k { setcmykcolor} bind def
/p { gsave} bind def
/r { setrgbcolor} bind def
/w { setlinewidth} bind def
/C { curveto} bind def
/F { fill} bind def
/L { lineto} bind def
/rL { rlineto} bind def
/P { grestore} bind def
/s { stroke} bind def
/S { show} bind def
/N {currentpoint 3 -1 roll show moveto} bind def
/Msf { findfont exch scalefont [1 0 0 -1 0 0 ] makefont setfont} bind def
/m { moveto} bind def
/Mr { rmoveto} bind def
/Mx {currentpoint exch pop moveto} bind def
/My {currentpoint pop exch moveto} bind def
/X {0 rmoveto} bind def
/Y {0 exch rmoveto} bind def
/MISOfy
{
    /newfontname exch def
    /oldfontname exch def

    oldfontname findfont
    dup length dict begin
        {1 index /FID ne {def} {pop pop} ifelse} forall
        /Encoding ISOLatin1Encoding def
        currentdict
    end

    newfontname exch definefont pop
} def
63.000 16.438 moveto
%%IncludeResource: font Courier
%%IncludeFont: Courier
%%BeginResource: font Courier-MISO
%%BeginFont: Courier-MISO
/Courier /Courier-MISO MISOfy
%%EndFont
%%EndResource
%%IncludeResource: font Courier-MISO
%%IncludeFont: Courier-MISO
/Courier-MISO findfont 14.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
(T) show
71.375 19.562 moveto
%%IncludeResource: font Courier-MISO
%%IncludeFont: Courier-MISO
/Courier-MISO findfont 9.938 scalefont
[1 0 0 -1 0 0 ] makefont setfont
1.000 0.000 0.000 setrgbcolor
(3) show
1.000 setlinewidth
grestore
% End of Graphics
MathPictureEnd
\
\>"], "Graphics",
 ImageSize->{288, 288},
 ImageMargins->{{43, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 
  1}},ImageCache->GraphicsData["CompressedBitmap", "\<\
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\
\>"],ImageRangeCache->{{{0, 287}, {287, 0}} -> {-1.67531, -1.62733, 0.01032, \
0.01032}}]
}, Open  ]],

Cell["\<\
\[FilledSmallCircle] If the sum of the labels is zero, then the result is a \
linear combination of the weight generators. This particular combination is \
the respective dual root\
\>", "Text"],

Cell["For example", "Text"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"MCommutator", "[", 
   RowBox[{
    RowBox[{"Td", "[", 
     RowBox[{"red", "@", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"1", "/", "2"}], ",", "1"}], "}"}]}], "]"}], ",", 
    RowBox[{"Td", "[", 
     RowBox[{"red", "@", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "1"}], "/", "2"}], ",", 
        RowBox[{"-", "1"}]}], "}"}]}], "]"}]}], "]"}], "   ", "\[Equal]", 
  "  ", 
  RowBox[{"hd", "[", 
   RowBox[{"red", "@", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"1", "/", "2"}], ",", "1"}], "}"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(", 
   RowBox[{"%", "/.", "RootLabelsRule"}], ")"}], "//.", 
  RowBox[{"TensorValueRules", "[", 
   RowBox[{"h", ",", "T"}], "]"}]}]}], "Input"],

Cell[BoxData[
 FormBox[
  RowBox[{
   InterpretationBox[
    RowBox[{"[", 
     InterpretationBox[
      SubsuperscriptBox["T", 
       FormBox[
        TagBox[
         StyleBox[
          RowBox[{"{", 
           RowBox[{
            FractionBox["1", "2"], ",", "1"}], "}"}],
          FontColor->RGBColor[1, 0, 0]],
         StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
        TraditionalForm], 
       TagBox[
        StyleBox[
         FormBox[
          TagBox[
           StyleBox[
            RowBox[{"{", 
             RowBox[{
              FractionBox["1", "2"], ",", "1"}], "}"}],
            FontColor->RGBColor[1, 0, 0]],
           StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
          TraditionalForm],
         ShowContents->False],
        StyleForm[#, ShowContents -> False]& ]],
      Tensor[T, {Void}, {
        red[{
          Rational[1, 2], 1}]}],
      Editable->False], ",", 
     InterpretationBox[
      SubsuperscriptBox["T", 
       FormBox[
        TagBox[
         StyleBox[
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", 
             FractionBox["1", "2"]}], ",", 
            RowBox[{"-", "1"}]}], "}"}],
          FontColor->RGBColor[1, 0, 0]],
         StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
        TraditionalForm], 
       TagBox[
        StyleBox[
         FormBox[
          TagBox[
           StyleBox[
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", 
               FractionBox["1", "2"]}], ",", 
              RowBox[{"-", "1"}]}], "}"}],
            FontColor->RGBColor[1, 0, 0]],
           StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
          TraditionalForm],
         ShowContents->False],
        StyleForm[#, ShowContents -> False]& ]],
      Tensor[T, {Void}, {
        red[{
          Rational[-1, 2], -1}]}],
      Editable->False], "]"}],
    MCommutator[
     Tensor[T, {Void}, {
       red[{
         Rational[1, 2], 1}]}], 
     Tensor[T, {Void}, {
       red[{
         Rational[-1, 2], -1}]}]],
    SyntaxForm->"Times"], "\[Equal]", 
   InterpretationBox[
    SubsuperscriptBox["h", 
     FormBox[
      TagBox[
       StyleBox[
        RowBox[{"{", 
         RowBox[{
          FractionBox["1", "2"], ",", "1"}], "}"}],
        FontColor->RGBColor[1, 0, 0]],
       StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
      TraditionalForm], 
     TagBox[
      StyleBox[
       FormBox[
        TagBox[
         StyleBox[
          RowBox[{"{", 
           RowBox[{
            FractionBox["1", "2"], ",", "1"}], "}"}],
          FontColor->RGBColor[1, 0, 0]],
         StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
        TraditionalForm],
       ShowContents->False],
      StyleForm[#, ShowContents -> False]& ]],
    Tensor[h, {Void}, {
      red[{
        Rational[1, 2], 1}]}],
    Editable->False]}], TraditionalForm]], "Output"],

Cell[BoxData[
 FormBox["True", TraditionalForm]], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "roots", "}"}], ",", 
    RowBox[{
     RowBox[{"roots", "=", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{
            "#1", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], ",", 
            RowBox[{
            "#1", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], ",", 
            RowBox[{
            "#1", "\[LeftDoubleBracket]", "6", "\[RightDoubleBracket]"}], ",", 
            RowBox[{
            "#1", "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}], ",", 
            RowBox[{
            "#1", "\[LeftDoubleBracket]", "5", "\[RightDoubleBracket]"}], ",", 
            RowBox[{
            "#1", "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}]}], 
           "}"}], "&"}], ")"}], "[", 
        RowBox[{
         RowBox[{"EinsteinArray", "[", "RootIndices", "]"}], "[", 
         RowBox[{"\[Alpha]d", "[", 
          RowBox[{"red", "[", "i", "]"}], "]"}], "]"}], "]"}], "/.", 
       "\[InvisibleSpace]", 
       RowBox[{"TensorValueRules", "[", "\[Alpha]", "]"}]}]}], ";", 
     RowBox[{"Draw2D", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"Gray", ",", 
         RowBox[{"AbsoluteThickness", "[", "1", "]"}], ",", 
         RowBox[{"Line", "[", 
          RowBox[{"Join", "[", 
           RowBox[{"roots", ",", 
            RowBox[{"{", 
             RowBox[{"First", "[", "roots", "]"}], "}"}]}], "]"}], "]"}], ",",
          "Blue", ",", 
         RowBox[{"AbsoluteThickness", "[", "1", "]"}], ",", 
         RowBox[{"Arrow", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", "0"}], "}"}], ",", 
           RowBox[{
           "roots", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], 
          "]"}], ",", 
         RowBox[{"Arrow", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", "0"}], "}"}], ",", 
           RowBox[{"-", 
            RowBox[{
            "roots", "\[LeftDoubleBracket]", "2", 
             "\[RightDoubleBracket]"}]}]}], "]"}], ",", 
         RowBox[{"RGBColor", "[", 
          RowBox[{"0", ",", "0", ",", "0"}], "]"}], ",", 
         RowBox[{"Text", "[", 
          RowBox[{
           RowBox[{"Style", "[", 
            RowBox[{
             RowBox[{"Td", "[", 
              RowBox[{"red", "[", "1", "]"}], "]"}], ",", 
             RowBox[{"FontSize", "\[Rule]", "14"}]}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"1.1`", ",", "0.1`"}], "}"}]}], "]"}], ",", 
         RowBox[{"Text", "[", 
          RowBox[{
           RowBox[{"Style", "[", 
            RowBox[{
             RowBox[{"Td", "[", 
              RowBox[{"red", "[", "4", "]"}], "]"}], ",", 
             RowBox[{"FontSize", "\[Rule]", "14"}]}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "1.1`"}], ",", "0.1`"}], "}"}]}], "]"}], ",", 
         RowBox[{"Text", "[", 
          RowBox[{
           RowBox[{"Style", "[", 
            RowBox[{
             RowBox[{"Td", "[", 
              RowBox[{"red", "[", "2", "]"}], "]"}], ",", 
             RowBox[{"FontSize", "\[Rule]", "14"}]}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"0.6`", ",", "1.1`"}], "}"}]}], "]"}], ",", 
         RowBox[{"Text", "[", 
          RowBox[{
           RowBox[{"Style", "[", 
            RowBox[{
             RowBox[{"Td", "[", 
              RowBox[{"red", "[", "5", "]"}], "]"}], ",", 
             RowBox[{"FontSize", "\[Rule]", "14"}]}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "0.6`"}], ",", 
             RowBox[{"-", "1.1`"}]}], "}"}]}], "]"}], ",", 
         RowBox[{"Text", "[", 
          RowBox[{
           RowBox[{"Style", "[", 
            RowBox[{
             RowBox[{"Td", "[", 
              RowBox[{"red", "[", "6", "]"}], "]"}], ",", 
             RowBox[{"FontSize", "\[Rule]", "14"}]}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "0.6`"}], ",", "1.1`"}], "}"}]}], "]"}], ",", 
         RowBox[{"Text", "[", 
          RowBox[{
           RowBox[{"Style", "[", 
            RowBox[{
             RowBox[{"Td", "[", 
              RowBox[{"red", "[", "3", "]"}], "]"}], ",", 
             RowBox[{"FontSize", "\[Rule]", "14"}]}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"0.6`", ",", 
             RowBox[{"-", "1.1`"}]}], "}"}]}], "]"}], ",", 
         RowBox[{"RGBColor", "[", 
          RowBox[{"0.0313726`", ",", "0.666667`", ",", "0"}], "]"}]}], "}"}], 
       ",", 
       RowBox[{"Frame", "\[Rule]", "True"}], ",", 
       RowBox[{"FrameTicks", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"CustomTicks", "[", 
           RowBox[{"Identity", ",", 
            RowBox[{"databased", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "1"}], ",", 
               RowBox[{"-", 
                FractionBox["1", "2"]}], ",", 
               FractionBox["1", "2"], ",", "1"}], "}"}], "]"}]}], "]"}], ",", 
          
          RowBox[{"CustomTicks", "[", 
           RowBox[{"Identity", ",", 
            RowBox[{"databased", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "1"}], ",", "0", ",", "1"}], "}"}], "]"}]}], 
           "]"}], ",", 
          RowBox[{"CustomTicks", "[", 
           RowBox[{"Identity", ",", 
            RowBox[{"databased", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "1"}], ",", 
               RowBox[{"-", 
                FractionBox["1", "2"]}], ",", 
               FractionBox["1", "2"], ",", "1"}], "}"}], "]"}], ",", 
            RowBox[{"CTNumberFunction", "\[Rule]", 
             RowBox[{"(", 
              RowBox[{"\"\<\>\"", "&"}], ")"}]}]}], "]"}], ",", 
          RowBox[{"CustomTicks", "[", 
           RowBox[{"Identity", ",", 
            RowBox[{"databased", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "1"}], ",", "0", ",", "1"}], "}"}], "]"}], ",", 
            RowBox[{"CTNumberFunction", "\[Rule]", 
             RowBox[{"(", 
              RowBox[{"\"\<\>\"", "&"}], ")"}]}]}], "]"}]}], "}"}]}], ",", 
       RowBox[{"PlotLabel", "\[Rule]", "\"\<SU[3] Roots\>\""}], ",", 
       RowBox[{"AspectRatio", "\[Rule]", "Automatic"}], ",", 
       RowBox[{"PlotRange", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "1.2`"}], ",", "1.2`"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "1.2`"}], ",", "1.2`"}], "}"}]}], "}"}]}], ",", 
       RowBox[{"Axes", "\[Rule]", "True"}], ",", 
       RowBox[{"RotateLabel", "\[Rule]", "False"}], ",", 
       RowBox[{"AxesStyle", "\[Rule]", 
        RowBox[{"GrayLevel", "[", "0.7`", "]"}]}], ",", 
       RowBox[{"FrameLabel", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Style", "[", 
           RowBox[{
            RowBox[{"Td", "[", 
             RowBox[{"red", "[", "7", "]"}], "]"}], ",", 
            RowBox[{"FontSize", "\[Rule]", "16"}]}], "]"}], ",", 
          RowBox[{"Style", "[", 
           RowBox[{
            RowBox[{"Tensor", "[", 
             RowBox[{"T", ",", 
              RowBox[{"{", "Void", "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"red", "[", "8", "]"}], "}"}]}], "]"}], ",", 
            RowBox[{"FontSize", "\[Rule]", "16"}]}], "]"}]}], "}"}]}]}], 
      "]"}]}]}], "]"}], ";"}]], "Input",
 CellOpen->False],

Cell[GraphicsData["PostScript", "\<\
%!
%%Creator: Mathematica
%%AspectRatio: 1 
MathPictureStart
/Mabs {
Mgmatrix idtransform
Mtmatrix dtransform
} bind def
/Mabsadd { Mabs
3 -1 roll add
3 1 roll add
exch } bind def
%% Graphics
%%IncludeResource: font Courier
%%IncludeFont: Courier
/Courier findfont 10  scalefont  setfont
% Scaling calculations
0.5 0.416667 0.5 0.416667 [
[.08333 -0.0125 -6 -9 ]
[.08333 -0.0125 6 0 ]
[.29167 -0.0125 -11.4062 -19.9375 ]
[.29167 -0.0125 11.4062 0 ]
[.70833 -0.0125 -8.09375 -19.9375 ]
[.70833 -0.0125 8.09375 0 ]
[.91667 -0.0125 -3 -9 ]
[.91667 -0.0125 3 0 ]
[ 0 0 -0.125 0 ]
[.5 -0.0125 -10.7188 -38.5 ]
[.5 -0.0125 10.7188 -19.9375 ]
[-0.0125 .08333 -12 -4.5 ]
[-0.0125 .08333 0 4.5 ]
[-0.0125 .5 -6 -4.5 ]
[-0.0125 .5 0 4.5 ]
[-0.0125 .91667 -6 -4.5 ]
[-0.0125 .91667 0 4.5 ]
[ 0 0 -0.125 0 ]
[-0.01875 .5 -33.4375 -9.4375 ]
[-0.01875 .5 -12 9.4375 ]
[ 0 1 .125 0 ]
[ 1 0 .125 0 ]
[.5 1.0125 -35 0 ]
[.5 1.0125 35 10.125 ]
[ 0 0 0 0 ]
[ 1 1 0 0 ]
] MathScale
% Start of Graphics
1 setlinecap
1 setlinejoin
newpath
0 g
.25 Mabswid
[ ] 0 setdash
.08333 0 m
.08333 .00625 L
s
[(-1)] .08333 -0.0125 0 1 Mshowa
.29167 0 m
.29167 .00625 L
s
gsave
.29167 -0.0125 -72.4062 -23.9375 Mabsadd m
1 1 Mabs scale
currentpoint translate
0 27.9375 translate 1 -1 scale
/g { setgray} bind def
/k { setcmykcolor} bind def
/p { gsave} bind def
/r { setrgbcolor} bind def
/w { setlinewidth} bind def
/C { curveto} bind def
/F { fill} bind def
/L { lineto} bind def
/rL { rlineto} bind def
/P { grestore} bind def
/s { stroke} bind def
/S { show} bind def
/N {currentpoint 3 -1 roll show moveto} bind def
/Msf { findfont exch scalefont [1 0 0 -1 0 0 ] makefont setfont} bind def
/m { moveto} bind def
/Mr { rmoveto} bind def
/Mx {currentpoint exch pop moveto} bind def
/My {currentpoint pop exch moveto} bind def
/X {0 rmoveto} bind def
/Y {0 exch rmoveto} bind def
/MISOfy
{
    /newfontname exch def
    /oldfontname exch def

    oldfontname findfont
    dup length dict begin
        {1 index /FID ne {def} {pop pop} ifelse} forall
        /Encoding ISOLatin1Encoding def
        currentdict
    end

    newfontname exch definefont pop
} def
63.000 16.938 moveto
%%IncludeResource: font Mathematica1Mono
%%IncludeFont: Mathematica1Mono
/Mathematica1Mono findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
(-) show
72.688 11.188 moveto
%%IncludeResource: font Courier
%%IncludeFont: Courier
%%BeginResource: font Courier-MISO
%%BeginFont: Courier-MISO
/Courier /Courier-MISO MISOfy
%%EndFont
%%EndResource
%%IncludeResource: font Courier-MISO
%%IncludeFont: Courier-MISO
/Courier-MISO findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
(1) show
%%IncludeResource: font Mathematica1Mono
%%IncludeFont: Mathematica1Mono
/Mathematica1Mono findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
71.438 16.938 moveto
(\\200) show
73.500 16.938 moveto
(\\200) show
75.562 16.938 moveto
(\\200) show
77.625 16.938 moveto
(\\200) show
78.062 16.938 moveto
(\\200) show
72.688 22.938 moveto
%%IncludeResource: font Courier-MISO
%%IncludeFont: Courier-MISO
/Courier-MISO findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
(2) show
1.000 setlinewidth
grestore
.70833 0 m
.70833 .00625 L
s
gsave
.70833 -0.0125 -69.0938 -23.9375 Mabsadd m
1 1 Mabs scale
currentpoint translate
0 27.9375 translate 1 -1 scale
/g { setgray} bind def
/k { setcmykcolor} bind def
/p { gsave} bind def
/r { setrgbcolor} bind def
/w { setlinewidth} bind def
/C { curveto} bind def
/F { fill} bind def
/L { lineto} bind def
/rL { rlineto} bind def
/P { grestore} bind def
/s { stroke} bind def
/S { show} bind def
/N {currentpoint 3 -1 roll show moveto} bind def
/Msf { findfont exch scalefont [1 0 0 -1 0 0 ] makefont setfont} bind def
/m { moveto} bind def
/Mr { rmoveto} bind def
/Mx {currentpoint exch pop moveto} bind def
/My {currentpoint pop exch moveto} bind def
/X {0 rmoveto} bind def
/Y {0 exch rmoveto} bind def
/MISOfy
{
    /newfontname exch def
    /oldfontname exch def

    oldfontname findfont
    dup length dict begin
        {1 index /FID ne {def} {pop pop} ifelse} forall
        /Encoding ISOLatin1Encoding def
        currentdict
    end

    newfontname exch definefont pop
} def
66.062 11.188 moveto
%%IncludeResource: font Courier
%%IncludeFont: Courier
%%BeginResource: font Courier-MISO
%%BeginFont: Courier-MISO
/Courier /Courier-MISO MISOfy
%%EndFont
%%EndResource
%%IncludeResource: font Courier-MISO
%%IncludeFont: Courier-MISO
/Courier-MISO findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
(1) show
%%IncludeResource: font Mathematica1Mono
%%IncludeFont: Mathematica1Mono
/Mathematica1Mono findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
64.812 16.938 moveto
(\\200) show
66.875 16.938 moveto
(\\200) show
68.938 16.938 moveto
(\\200) show
71.000 16.938 moveto
(\\200) show
71.438 16.938 moveto
(\\200) show
66.062 22.938 moveto
%%IncludeResource: font Courier-MISO
%%IncludeFont: Courier-MISO
/Courier-MISO findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
(2) show
1.000 setlinewidth
grestore
.91667 0 m
.91667 .00625 L
s
[(1)] .91667 -0.0125 0 1 Mshowa
0 0 m
1 0 L
s
gsave
.5 -0.0125 -71.7188 -42.5 Mabsadd m
1 1 Mabs scale
currentpoint translate
0 26.5625 translate 1 -1 scale
/g { setgray} bind def
/k { setcmykcolor} bind def
/p { gsave} bind def
/r { setrgbcolor} bind def
/w { setlinewidth} bind def
/C { curveto} bind def
/F { fill} bind def
/L { lineto} bind def
/rL { rlineto} bind def
/P { grestore} bind def
/s { stroke} bind def
/S { show} bind def
/N {currentpoint 3 -1 roll show moveto} bind def
/Msf { findfont exch scalefont [1 0 0 -1 0 0 ] makefont setfont} bind def
/m { moveto} bind def
/Mr { rmoveto} bind def
/Mx {currentpoint exch pop moveto} bind def
/My {currentpoint pop exch moveto} bind def
/X {0 rmoveto} bind def
/Y {0 exch rmoveto} bind def
/MISOfy
{
    /newfontname exch def
    /oldfontname exch def

    oldfontname findfont
    dup length dict begin
        {1 index /FID ne {def} {pop pop} ifelse} forall
        /Encoding ISOLatin1Encoding def
        currentdict
    end

    newfontname exch definefont pop
} def
63.000 18.000 moveto
%%IncludeResource: font Courier
%%IncludeFont: Courier
%%BeginResource: font Courier-MISO
%%BeginFont: Courier-MISO
/Courier /Courier-MISO MISOfy
%%EndFont
%%EndResource
%%IncludeResource: font Courier-MISO
%%IncludeFont: Courier-MISO
/Courier-MISO findfont 16.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
(T) show
72.562 21.562 moveto
%%IncludeResource: font Courier-MISO
%%IncludeFont: Courier-MISO
/Courier-MISO findfont 11.375 scalefont
[1 0 0 -1 0 0 ] makefont setfont
1.000 0.000 0.000 setrgbcolor
(7) show
1.000 setlinewidth
grestore
0 .08333 m
.00625 .08333 L
s
[(-1)] -0.0125 .08333 1 0 Mshowa
0 .5 m
.00625 .5 L
s
[(0)] -0.0125 .5 1 0 Mshowa
0 .91667 m
.00625 .91667 L
s
[(1)] -0.0125 .91667 1 0 Mshowa
0 0 m
0 1 L
s
gsave
-0.01875 .5 -94.4375 -13.4375 Mabsadd m
1 1 Mabs scale
currentpoint translate
0 26.875 translate 1 -1 scale
/g { setgray} bind def
/k { setcmykcolor} bind def
/p { gsave} bind def
/r { setrgbcolor} bind def
/w { setlinewidth} bind def
/C { curveto} bind def
/F { fill} bind def
/L { lineto} bind def
/rL { rlineto} bind def
/P { grestore} bind def
/s { stroke} bind def
/S { show} bind def
/N {currentpoint 3 -1 roll show moveto} bind def
/Msf { findfont exch scalefont [1 0 0 -1 0 0 ] makefont setfont} bind def
/m { moveto} bind def
/Mr { rmoveto} bind def
/Mx {currentpoint exch pop moveto} bind def
/My {currentpoint pop exch moveto} bind def
/X {0 rmoveto} bind def
/Y {0 exch rmoveto} bind def
/MISOfy
{
    /newfontname exch def
    /oldfontname exch def

    oldfontname findfont
    dup length dict begin
        {1 index /FID ne {def} {pop pop} ifelse} forall
        /Encoding ISOLatin1Encoding def
        currentdict
    end

    newfontname exch definefont pop
} def
63.000 18.188 moveto
%%IncludeResource: font Courier
%%IncludeFont: Courier
%%BeginResource: font Courier-MISO
%%BeginFont: Courier-MISO
/Courier /Courier-MISO MISOfy
%%EndFont
%%EndResource
%%IncludeResource: font Courier-MISO
%%IncludeFont: Courier-MISO
/Courier-MISO findfont 16.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
(T) show
72.562 21.750 moveto
%%IncludeResource: font Courier-MISO
%%IncludeFont: Courier-MISO
/Courier-MISO findfont 11.375 scalefont
[1 0 0 -1 0 0 ] makefont setfont
1.000 0.000 0.000 setrgbcolor
(8) show
1.000 setlinewidth
grestore
.08333 .99375 m
.08333 1 L
s
.29167 .99375 m
.29167 1 L
s
.70833 .99375 m
.70833 1 L
s
.91667 .99375 m
.91667 1 L
s
0 1 m
1 1 L
s
.99375 .08333 m
1 .08333 L
s
.99375 .5 m
1 .5 L
s
.99375 .91667 m
1 .91667 L
s
1 0 m
1 1 L
s
.7 g
0 .5 m
1 .5 L
s
.5 0 m
.5 1 L
s
0 g
gsave
.5 1.0125 -96 -4 Mabsadd m
1 1 Mabs scale
currentpoint translate
0 18.125 translate 1 -1 scale
/g { setgray} bind def
/k { setcmykcolor} bind def
/p { gsave} bind def
/r { setrgbcolor} bind def
/w { setlinewidth} bind def
/C { curveto} bind def
/F { fill} bind def
/L { lineto} bind def
/rL { rlineto} bind def
/P { grestore} bind def
/s { stroke} bind def
/S { show} bind def
/N {currentpoint 3 -1 roll show moveto} bind def
/Msf { findfont exch scalefont [1 0 0 -1 0 0 ] makefont setfont} bind def
/m { moveto} bind def
/Mr { rmoveto} bind def
/Mx {currentpoint exch pop moveto} bind def
/My {currentpoint pop exch moveto} bind def
/X {0 rmoveto} bind def
/Y {0 exch rmoveto} bind def
63.000 11.250 moveto
%%IncludeResource: font Courier
%%IncludeFont: Courier
/Courier findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
0.000 0.000 rmoveto
63.000 11.250 moveto
%%IncludeResource: font Courier
%%IncludeFont: Courier
/Courier findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
(SU) show
%%IncludeResource: font Mathematica2Mono
%%IncludeFont: Mathematica2Mono
/Mathematica2Mono findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
75.000 11.250 moveto
(@) show
81.000 11.250 moveto
%%IncludeResource: font Courier
%%IncludeFont: Courier
/Courier findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
(3) show
%%IncludeResource: font Mathematica2Mono
%%IncludeFont: Mathematica2Mono
/Mathematica2Mono findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
87.000 11.250 moveto
(D) show
99.000 11.250 moveto
%%IncludeResource: font Courier
%%IncludeFont: Courier
/Courier findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
(Roots) show
129.000 11.250 moveto
%%IncludeResource: font Courier
%%IncludeFont: Courier
/Courier findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
0.000 0.000 rmoveto
1.000 setlinewidth
grestore
0 0 m
1 0 L
1 1 L
0 1 L
closepath
clip
newpath
% Start of user PostScript
/mathtops {
gsave
MBeginOrig
moveto
MEndOrig
currentpoint
grestore
} bind def
/MAtocoords {
mathtops 4 2 roll mathtops
4 copy pop pop
3 -1 roll sub
/arry exch def
exch sub
/arrx exch def
arrx dup mul
arry dup mul
add sqrt
/arrl exch def
translate
} bind def
/MAarrowhead1 {
gsave
MAtocoords
arrl 0. eq
{ 0 0 Mdot }
{
[ arrx arrl div
arry arrl div
-1 arry mul arrl div
arrx arrl div
0 0 ]
concat
-0.05 0.0125 moveto 0 0 lineto
-0.05 -0.0125 lineto fill
-0.05 0.0125 moveto 0 0 lineto
-0.05 -0.0125 lineto
-0.05 0.0125 lineto stroke
} ifelse
grestore
} def
% End of user PostScript
.753 .753 .753 r
1 Mabswid
.91667 .5 m
.70833 .91667 L
.29167 .91667 L
.08333 .5 L
.29167 .08333 L
.70833 .08333 L
.91667 .5 L
s
0 0 1 r
.5 .5 m
.70833 .91667 L
s
% Start of user PostScript
0 0 0.5 1. MAarrowhead1
% End of user PostScript
.5 .5 m
.29167 .08333 L
s
% Start of user PostScript
0 0 -0.5 -1. MAarrowhead1
% End of user PostScript
0 0 0 r
gsave
.95833 .54167 -70.6875 -12.2812 Mabsadd m
1 1 Mabs scale
currentpoint translate
0 24.5625 translate 1 -1 scale
/g { setgray} bind def
/k { setcmykcolor} bind def
/p { gsave} bind def
/r { setrgbcolor} bind def
/w { setlinewidth} bind def
/C { curveto} bind def
/F { fill} bind def
/L { lineto} bind def
/rL { rlineto} bind def
/P { grestore} bind def
/s { stroke} bind def
/S { show} bind def
/N {currentpoint 3 -1 roll show moveto} bind def
/Msf { findfont exch scalefont [1 0 0 -1 0 0 ] makefont setfont} bind def
/m { moveto} bind def
/Mr { rmoveto} bind def
/Mx {currentpoint exch pop moveto} bind def
/My {currentpoint pop exch moveto} bind def
/X {0 rmoveto} bind def
/Y {0 exch rmoveto} bind def
/MISOfy
{
    /newfontname exch def
    /oldfontname exch def

    oldfontname findfont
    dup length dict begin
        {1 index /FID ne {def} {pop pop} ifelse} forall
        /Encoding ISOLatin1Encoding def
        currentdict
    end

    newfontname exch definefont pop
} def
63.000 16.438 moveto
%%IncludeResource: font Courier
%%IncludeFont: Courier
%%BeginResource: font Courier-MISO
%%BeginFont: Courier-MISO
/Courier /Courier-MISO MISOfy
%%EndFont
%%EndResource
%%IncludeResource: font Courier-MISO
%%IncludeFont: Courier-MISO
/Courier-MISO findfont 14.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
(T) show
71.375 19.562 moveto
%%IncludeResource: font Courier-MISO
%%IncludeFont: Courier-MISO
/Courier-MISO findfont 9.938 scalefont
[1 0 0 -1 0 0 ] makefont setfont
1.000 0.000 0.000 setrgbcolor
(1) show
1.000 setlinewidth
grestore
gsave
.04167 .54167 -70.6875 -12.2812 Mabsadd m
1 1 Mabs scale
currentpoint translate
0 24.5625 translate 1 -1 scale
/g { setgray} bind def
/k { setcmykcolor} bind def
/p { gsave} bind def
/r { setrgbcolor} bind def
/w { setlinewidth} bind def
/C { curveto} bind def
/F { fill} bind def
/L { lineto} bind def
/rL { rlineto} bind def
/P { grestore} bind def
/s { stroke} bind def
/S { show} bind def
/N {currentpoint 3 -1 roll show moveto} bind def
/Msf { findfont exch scalefont [1 0 0 -1 0 0 ] makefont setfont} bind def
/m { moveto} bind def
/Mr { rmoveto} bind def
/Mx {currentpoint exch pop moveto} bind def
/My {currentpoint pop exch moveto} bind def
/X {0 rmoveto} bind def
/Y {0 exch rmoveto} bind def
/MISOfy
{
    /newfontname exch def
    /oldfontname exch def

    oldfontname findfont
    dup length dict begin
        {1 index /FID ne {def} {pop pop} ifelse} forall
        /Encoding ISOLatin1Encoding def
        currentdict
    end

    newfontname exch definefont pop
} def
63.000 16.438 moveto
%%IncludeResource: font Courier
%%IncludeFont: Courier
%%BeginResource: font Courier-MISO
%%BeginFont: Courier-MISO
/Courier /Courier-MISO MISOfy
%%EndFont
%%EndResource
%%IncludeResource: font Courier-MISO
%%IncludeFont: Courier-MISO
/Courier-MISO findfont 14.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
(T) show
71.375 19.562 moveto
%%IncludeResource: font Courier-MISO
%%IncludeFont: Courier-MISO
/Courier-MISO findfont 9.938 scalefont
[1 0 0 -1 0 0 ] makefont setfont
1.000 0.000 0.000 setrgbcolor
(4) show
1.000 setlinewidth
grestore
gsave
.75 .95833 -70.6875 -12.2812 Mabsadd m
1 1 Mabs scale
currentpoint translate
0 24.5625 translate 1 -1 scale
/g { setgray} bind def
/k { setcmykcolor} bind def
/p { gsave} bind def
/r { setrgbcolor} bind def
/w { setlinewidth} bind def
/C { curveto} bind def
/F { fill} bind def
/L { lineto} bind def
/rL { rlineto} bind def
/P { grestore} bind def
/s { stroke} bind def
/S { show} bind def
/N {currentpoint 3 -1 roll show moveto} bind def
/Msf { findfont exch scalefont [1 0 0 -1 0 0 ] makefont setfont} bind def
/m { moveto} bind def
/Mr { rmoveto} bind def
/Mx {currentpoint exch pop moveto} bind def
/My {currentpoint pop exch moveto} bind def
/X {0 rmoveto} bind def
/Y {0 exch rmoveto} bind def
/MISOfy
{
    /newfontname exch def
    /oldfontname exch def

    oldfontname findfont
    dup length dict begin
        {1 index /FID ne {def} {pop pop} ifelse} forall
        /Encoding ISOLatin1Encoding def
        currentdict
    end

    newfontname exch definefont pop
} def
63.000 16.438 moveto
%%IncludeResource: font Courier
%%IncludeFont: Courier
%%BeginResource: font Courier-MISO
%%BeginFont: Courier-MISO
/Courier /Courier-MISO MISOfy
%%EndFont
%%EndResource
%%IncludeResource: font Courier-MISO
%%IncludeFont: Courier-MISO
/Courier-MISO findfont 14.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
(T) show
71.375 19.562 moveto
%%IncludeResource: font Courier-MISO
%%IncludeFont: Courier-MISO
/Courier-MISO findfont 9.938 scalefont
[1 0 0 -1 0 0 ] makefont setfont
1.000 0.000 0.000 setrgbcolor
(2) show
1.000 setlinewidth
grestore
gsave
.25 .04167 -70.6875 -12.2812 Mabsadd m
1 1 Mabs scale
currentpoint translate
0 24.5625 translate 1 -1 scale
/g { setgray} bind def
/k { setcmykcolor} bind def
/p { gsave} bind def
/r { setrgbcolor} bind def
/w { setlinewidth} bind def
/C { curveto} bind def
/F { fill} bind def
/L { lineto} bind def
/rL { rlineto} bind def
/P { grestore} bind def
/s { stroke} bind def
/S { show} bind def
/N {currentpoint 3 -1 roll show moveto} bind def
/Msf { findfont exch scalefont [1 0 0 -1 0 0 ] makefont setfont} bind def
/m { moveto} bind def
/Mr { rmoveto} bind def
/Mx {currentpoint exch pop moveto} bind def
/My {currentpoint pop exch moveto} bind def
/X {0 rmoveto} bind def
/Y {0 exch rmoveto} bind def
/MISOfy
{
    /newfontname exch def
    /oldfontname exch def

    oldfontname findfont
    dup length dict begin
        {1 index /FID ne {def} {pop pop} ifelse} forall
        /Encoding ISOLatin1Encoding def
        currentdict
    end

    newfontname exch definefont pop
} def
63.000 16.312 moveto
%%IncludeResource: font Courier
%%IncludeFont: Courier
%%BeginResource: font Courier-MISO
%%BeginFont: Courier-MISO
/Courier /Courier-MISO MISOfy
%%EndFont
%%EndResource
%%IncludeResource: font Courier-MISO
%%IncludeFont: Courier-MISO
/Courier-MISO findfont 14.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
(T) show
71.375 19.438 moveto
%%IncludeResource: font Courier-MISO
%%IncludeFont: Courier-MISO
/Courier-MISO findfont 9.938 scalefont
[1 0 0 -1 0 0 ] makefont setfont
1.000 0.000 0.000 setrgbcolor
(5) show
1.000 setlinewidth
grestore
gsave
.25 .95833 -70.6875 -12.3438 Mabsadd m
1 1 Mabs scale
currentpoint translate
0 24.6875 translate 1 -1 scale
/g { setgray} bind def
/k { setcmykcolor} bind def
/p { gsave} bind def
/r { setrgbcolor} bind def
/w { setlinewidth} bind def
/C { curveto} bind def
/F { fill} bind def
/L { lineto} bind def
/rL { rlineto} bind def
/P { grestore} bind def
/s { stroke} bind def
/S { show} bind def
/N {currentpoint 3 -1 roll show moveto} bind def
/Msf { findfont exch scalefont [1 0 0 -1 0 0 ] makefont setfont} bind def
/m { moveto} bind def
/Mr { rmoveto} bind def
/Mx {currentpoint exch pop moveto} bind def
/My {currentpoint pop exch moveto} bind def
/X {0 rmoveto} bind def
/Y {0 exch rmoveto} bind def
/MISOfy
{
    /newfontname exch def
    /oldfontname exch def

    oldfontname findfont
    dup length dict begin
        {1 index /FID ne {def} {pop pop} ifelse} forall
        /Encoding ISOLatin1Encoding def
        currentdict
    end

    newfontname exch definefont pop
} def
63.000 16.438 moveto
%%IncludeResource: font Courier
%%IncludeFont: Courier
%%BeginResource: font Courier-MISO
%%BeginFont: Courier-MISO
/Courier /Courier-MISO MISOfy
%%EndFont
%%EndResource
%%IncludeResource: font Courier-MISO
%%IncludeFont: Courier-MISO
/Courier-MISO findfont 14.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
(T) show
71.375 19.562 moveto
%%IncludeResource: font Courier-MISO
%%IncludeFont: Courier-MISO
/Courier-MISO findfont 9.938 scalefont
[1 0 0 -1 0 0 ] makefont setfont
1.000 0.000 0.000 setrgbcolor
(6) show
1.000 setlinewidth
grestore
gsave
.75 .04167 -70.6875 -12.3438 Mabsadd m
1 1 Mabs scale
currentpoint translate
0 24.6875 translate 1 -1 scale
/g { setgray} bind def
/k { setcmykcolor} bind def
/p { gsave} bind def
/r { setrgbcolor} bind def
/w { setlinewidth} bind def
/C { curveto} bind def
/F { fill} bind def
/L { lineto} bind def
/rL { rlineto} bind def
/P { grestore} bind def
/s { stroke} bind def
/S { show} bind def
/N {currentpoint 3 -1 roll show moveto} bind def
/Msf { findfont exch scalefont [1 0 0 -1 0 0 ] makefont setfont} bind def
/m { moveto} bind def
/Mr { rmoveto} bind def
/Mx {currentpoint exch pop moveto} bind def
/My {currentpoint pop exch moveto} bind def
/X {0 rmoveto} bind def
/Y {0 exch rmoveto} bind def
/MISOfy
{
    /newfontname exch def
    /oldfontname exch def

    oldfontname findfont
    dup length dict begin
        {1 index /FID ne {def} {pop pop} ifelse} forall
        /Encoding ISOLatin1Encoding def
        currentdict
    end

    newfontname exch definefont pop
} def
63.000 16.438 moveto
%%IncludeResource: font Courier
%%IncludeFont: Courier
%%BeginResource: font Courier-MISO
%%BeginFont: Courier-MISO
/Courier /Courier-MISO MISOfy
%%EndFont
%%EndResource
%%IncludeResource: font Courier-MISO
%%IncludeFont: Courier-MISO
/Courier-MISO findfont 14.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
(T) show
71.375 19.562 moveto
%%IncludeResource: font Courier-MISO
%%IncludeFont: Courier-MISO
/Courier-MISO findfont 9.938 scalefont
[1 0 0 -1 0 0 ] makefont setfont
1.000 0.000 0.000 setrgbcolor
(3) show
1.000 setlinewidth
grestore
% End of Graphics
MathPictureEnd
\
\>"], "Graphics",
 ImageSize->{288, 288},
 ImageMargins->{{43, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 
  1}},ImageCache->GraphicsData["CompressedBitmap", "\<\
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\
\>"],ImageRangeCache->{{{0, 287}, {287, 0}} -> {-1.67531, -1.62733, 0.01032, \
0.01032}}]
}, Open  ]],

Cell["\[FilledSmallCircle] Otherwise the value of the commutator is zero.", \
"Text"],

Cell["For example", "Text"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"MCommutator", "[", 
   RowBox[{
    RowBox[{"Td", "[", 
     RowBox[{"red", "@", 
      RowBox[{"{", 
       RowBox[{"1", ",", "0"}], "}"}]}], "]"}], ",", 
    RowBox[{"Td", "[", 
     RowBox[{"red", "@", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"1", "/", "2"}], ",", "1"}], "}"}]}], "]"}]}], "]"}], "   ", 
  "\[Equal]", " ", "0"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(", 
   RowBox[{"%", "/.", "RootLabelsRule"}], ")"}], "//.", 
  RowBox[{"TensorValueRules", "[", 
   RowBox[{"h", ",", "T"}], "]"}]}]}], "Input"],

Cell[BoxData[
 FormBox[
  RowBox[{
   InterpretationBox[
    RowBox[{"[", 
     InterpretationBox[
      SubsuperscriptBox["T", 
       FormBox[
        TagBox[
         StyleBox[
          RowBox[{"{", 
           RowBox[{"1", ",", "0"}], "}"}],
          FontColor->RGBColor[1, 0, 0]],
         StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
        TraditionalForm], 
       TagBox[
        StyleBox[
         FormBox[
          TagBox[
           StyleBox[
            RowBox[{"{", 
             RowBox[{"1", ",", "0"}], "}"}],
            FontColor->RGBColor[1, 0, 0]],
           StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
          TraditionalForm],
         ShowContents->False],
        StyleForm[#, ShowContents -> False]& ]],
      Tensor[T, {Void}, {
        red[{1, 0}]}],
      Editable->False], ",", 
     InterpretationBox[
      SubsuperscriptBox["T", 
       FormBox[
        TagBox[
         StyleBox[
          RowBox[{"{", 
           RowBox[{
            FractionBox["1", "2"], ",", "1"}], "}"}],
          FontColor->RGBColor[1, 0, 0]],
         StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
        TraditionalForm], 
       TagBox[
        StyleBox[
         FormBox[
          TagBox[
           StyleBox[
            RowBox[{"{", 
             RowBox[{
              FractionBox["1", "2"], ",", "1"}], "}"}],
            FontColor->RGBColor[1, 0, 0]],
           StyleForm[#, FontColor -> RGBColor[1., 0., 0.]]& ],
          TraditionalForm],
         ShowContents->False],
        StyleForm[#, ShowContents -> False]& ]],
      Tensor[T, {Void}, {
        red[{
          Rational[1, 2], 1}]}],
      Editable->False], "]"}],
    MCommutator[
     Tensor[T, {Void}, {
       red[{1, 0}]}], 
     Tensor[T, {Void}, {
       red[{
         Rational[1, 2], 1}]}]],
    SyntaxForm->"Times"], "\[Equal]", "0"}], TraditionalForm]], "Output"],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{"(", "\[NoBreak]", GridBox[{
      {"0", "0", "0"},
      {"0", "0", "0"},
      {"0", "0", "0"}
     },
     GridBoxAlignment->{
      "Columns" -> {{Decimal}}, "ColumnsIndexed" -> {}, 
       "Rows" -> {{Baseline}}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
   "\[Equal]", "0"}], TraditionalForm]], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "roots", "}"}], ",", 
    RowBox[{
     RowBox[{"roots", "=", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{
            "#1", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], ",", 
            RowBox[{
            "#1", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], ",", 
            RowBox[{
            "#1", "\[LeftDoubleBracket]", "6", "\[RightDoubleBracket]"}], ",", 
            RowBox[{
            "#1", "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}], ",", 
            RowBox[{
            "#1", "\[LeftDoubleBracket]", "5", "\[RightDoubleBracket]"}], ",", 
            RowBox[{
            "#1", "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}]}], 
           "}"}], "&"}], ")"}], "[", 
        RowBox[{
         RowBox[{"EinsteinArray", "[", "RootIndices", "]"}], "[", 
         RowBox[{"\[Alpha]d", "[", 
          RowBox[{"red", "[", "i", "]"}], "]"}], "]"}], "]"}], "/.", 
       "\[InvisibleSpace]", 
       RowBox[{"TensorValueRules", "[", "\[Alpha]", "]"}]}]}], ";", 
     RowBox[{"Draw2D", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"Gray", ",", 
         RowBox[{"AbsoluteThickness", "[", "1", "]"}], ",", 
         RowBox[{"Line", "[", 
          RowBox[{"Join", "[", 
           RowBox[{"roots", ",", 
            RowBox[{"{", 
             RowBox[{"First", "[", "roots", "]"}], "}"}]}], "]"}], "]"}], ",",
          "Blue", ",", 
         RowBox[{"AbsoluteThickness", "[", "1", "]"}], ",", 
         RowBox[{"Arrow", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", "0"}], "}"}], ",", 
           RowBox[{
           "roots", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], 
          "]"}], ",", 
         RowBox[{"Arrow", "[", 
          RowBox[{
           RowBox[{
           "roots", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
           ",", 
           RowBox[{
            RowBox[{
            "roots", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
            "+", 
            RowBox[{
            "roots", "\[LeftDoubleBracket]", "1", 
             "\[RightDoubleBracket]"}]}]}], "]"}], ",", "Gray", ",", 
         RowBox[{"Dashing", "[", 
          RowBox[{"{", 
           RowBox[{"0.015`", ",", "0.02`"}], "}"}], "]"}], ",", 
         RowBox[{"Arrow", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", "0"}], "}"}], ",", 
           RowBox[{
           "roots", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], 
          "]"}], ",", 
         RowBox[{"RGBColor", "[", 
          RowBox[{"0", ",", "0", ",", "0"}], "]"}], ",", 
         RowBox[{"Text", "[", 
          RowBox[{
           RowBox[{"Style", "[", 
            RowBox[{
             RowBox[{"Td", "[", 
              RowBox[{"red", "[", "1", "]"}], "]"}], ",", 
             RowBox[{"FontSize", "\[Rule]", "14"}]}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"1.1`", ",", "0.1`"}], "}"}]}], "]"}], ",", 
         RowBox[{"Text", "[", 
          RowBox[{
           RowBox[{"Style", "[", 
            RowBox[{
             RowBox[{"Td", "[", 
              RowBox[{"red", "[", "4", "]"}], "]"}], ",", 
             RowBox[{"FontSize", "\[Rule]", "14"}]}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "1.1`"}], ",", "0.1`"}], "}"}]}], "]"}], ",", 
         RowBox[{"Text", "[", 
          RowBox[{
           RowBox[{"Style", "[", 
            RowBox[{
             RowBox[{"Td", "[", 
              RowBox[{"red", "[", "2", "]"}], "]"}], ",", 
             RowBox[{"FontSize", "\[Rule]", "14"}]}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"0.6`", ",", "1.1`"}], "}"}]}], "]"}], ",", 
         RowBox[{"Text", "[", 
          RowBox[{
           RowBox[{"Style", "[", 
            RowBox[{
             RowBox[{"Td", "[", 
              RowBox[{"red", "[", "5", "]"}], "]"}], ",", 
             RowBox[{"FontSize", "\[Rule]", "14"}]}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "0.6`"}], ",", 
             RowBox[{"-", "1.1`"}]}], "}"}]}], "]"}], ",", 
         RowBox[{"Text", "[", 
          RowBox[{
           RowBox[{"Style", "[", 
            RowBox[{
             RowBox[{"Td", "[", 
              RowBox[{"red", "[", "6", "]"}], "]"}], ",", 
             RowBox[{"FontSize", "\[Rule]", "14"}]}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "0.6`"}], ",", "1.1`"}], "}"}]}], "]"}], ",", 
         RowBox[{"Text", "[", 
          RowBox[{
           RowBox[{"Style", "[", 
            RowBox[{
             RowBox[{"Td", "[", 
              RowBox[{"red", "[", "3", "]"}], "]"}], ",", 
             RowBox[{"FontSize", "\[Rule]", "14"}]}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"0.6`", ",", 
             RowBox[{"-", "1.1`"}]}], "}"}]}], "]"}], ",", 
         RowBox[{"RGBColor", "[", 
          RowBox[{"0.0313726`", ",", "0.666667`", ",", "0"}], "]"}]}], "}"}], 
       ",", 
       RowBox[{"Frame", "\[Rule]", "True"}], ",", 
       RowBox[{"FrameTicks", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"CustomTicks", "[", 
           RowBox[{"Identity", ",", 
            RowBox[{"databased", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "1"}], ",", 
               RowBox[{"-", 
                FractionBox["1", "2"]}], ",", 
               FractionBox["1", "2"], ",", "1"}], "}"}], "]"}]}], "]"}], ",", 
          
          RowBox[{"CustomTicks", "[", 
           RowBox[{"Identity", ",", 
            RowBox[{"databased", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "1"}], ",", "0", ",", "1"}], "}"}], "]"}]}], 
           "]"}], ",", 
          RowBox[{"CustomTicks", "[", 
           RowBox[{"Identity", ",", 
            RowBox[{"databased", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "1"}], ",", 
               RowBox[{"-", 
                FractionBox["1", "2"]}], ",", 
               FractionBox["1", "2"], ",", "1"}], "}"}], "]"}], ",", 
            RowBox[{"CTNumberFunction", "\[Rule]", 
             RowBox[{"(", 
              RowBox[{"\"\<\>\"", "&"}], ")"}]}]}], "]"}], ",", 
          RowBox[{"CustomTicks", "[", 
           RowBox[{"Identity", ",", 
            RowBox[{"databased", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "1"}], ",", "0", ",", "1"}], "}"}], "]"}], ",", 
            RowBox[{"CTNumberFunction", "\[Rule]", 
             RowBox[{"(", 
              RowBox[{"\"\<\>\"", "&"}], ")"}]}]}], "]"}]}], "}"}]}], ",", 
       RowBox[{"PlotLabel", "\[Rule]", "\"\<SU[3] Roots\>\""}], ",", 
       RowBox[{"AspectRatio", "\[Rule]", "Automatic"}], ",", 
       RowBox[{"PlotRange", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "1.2`"}], ",", "1.6`"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "1.2`"}], ",", "1.2`"}], "}"}]}], "}"}]}], ",", 
       RowBox[{"Axes", "\[Rule]", "True"}], ",", 
       RowBox[{"RotateLabel", "\[Rule]", "False"}], ",", 
       RowBox[{"AxesStyle", "\[Rule]", 
        RowBox[{"GrayLevel", "[", "0.7`", "]"}]}], ",", 
       RowBox[{"FrameLabel", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Style", "[", 
           RowBox[{
            RowBox[{"Td", "[", 
             RowBox[{"red", "[", "7", "]"}], "]"}], ",", 
            RowBox[{"FontSize", "\[Rule]", "16"}]}], "]"}], ",", 
          RowBox[{"Style", "[", 
           RowBox[{
            RowBox[{"Tensor", "[", 
             RowBox[{"T", ",", 
              RowBox[{"{", "Void", "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"red", "[", "8", "]"}], "}"}]}], "]"}], ",", 
            RowBox[{"FontSize", "\[Rule]", "16"}]}], "]"}]}], "}"}]}]}], 
      "]"}]}]}], "]"}], ";"}]], "Input",
 CellOpen->False],

Cell[GraphicsData["PostScript", "\<\
%!
%%Creator: Mathematica
%%AspectRatio: .85714 
MathPictureStart
/Mabs {
Mgmatrix idtransform
Mtmatrix dtransform
} bind def
/Mabsadd { Mabs
3 -1 roll add
3 1 roll add
exch } bind def
%% Graphics
%%IncludeResource: font Courier
%%IncludeFont: Courier
/Courier findfont 10  scalefont  setfont
% Scaling calculations
0.428571 0.357143 0.428571 0.357143 [
[.07143 -0.0125 -6 -9 ]
[.07143 -0.0125 6 0 ]
[.25 -0.0125 -11.4062 -19.9375 ]
[.25 -0.0125 11.4062 0 ]
[.60714 -0.0125 -8.09375 -19.9375 ]
[.60714 -0.0125 8.09375 0 ]
[.78571 -0.0125 -3 -9 ]
[.78571 -0.0125 3 0 ]
[ 0 0 -0.125 0 ]
[.5 -0.0125 -10.7188 -38.5 ]
[.5 -0.0125 10.7188 -19.9375 ]
[-0.0125 .07143 -12 -4.5 ]
[-0.0125 .07143 0 4.5 ]
[-0.0125 .42857 -6 -4.5 ]
[-0.0125 .42857 0 4.5 ]
[-0.0125 .78571 -6 -4.5 ]
[-0.0125 .78571 0 4.5 ]
[ 0 0 -0.125 0 ]
[-0.01875 .42857 -33.4375 -9.4375 ]
[-0.01875 .42857 -12 9.4375 ]
[ 0 .85714 .125 0 ]
[ 1 0 .125 0 ]
[.5 .86964 -35 0 ]
[.5 .86964 35 10.125 ]
[ 0 0 0 0 ]
[ 1 .85714 0 0 ]
] MathScale
% Start of Graphics
1 setlinecap
1 setlinejoin
newpath
0 g
.25 Mabswid
[ ] 0 setdash
.07143 0 m
.07143 .00625 L
s
[(-1)] .07143 -0.0125 0 1 Mshowa
.25 0 m
.25 .00625 L
s
gsave
.25 -0.0125 -72.4062 -23.9375 Mabsadd m
1 1 Mabs scale
currentpoint translate
0 27.9375 translate 1 -1 scale
/g { setgray} bind def
/k { setcmykcolor} bind def
/p { gsave} bind def
/r { setrgbcolor} bind def
/w { setlinewidth} bind def
/C { curveto} bind def
/F { fill} bind def
/L { lineto} bind def
/rL { rlineto} bind def
/P { grestore} bind def
/s { stroke} bind def
/S { show} bind def
/N {currentpoint 3 -1 roll show moveto} bind def
/Msf { findfont exch scalefont [1 0 0 -1 0 0 ] makefont setfont} bind def
/m { moveto} bind def
/Mr { rmoveto} bind def
/Mx {currentpoint exch pop moveto} bind def
/My {currentpoint pop exch moveto} bind def
/X {0 rmoveto} bind def
/Y {0 exch rmoveto} bind def
/MISOfy
{
    /newfontname exch def
    /oldfontname exch def

    oldfontname findfont
    dup length dict begin
        {1 index /FID ne {def} {pop pop} ifelse} forall
        /Encoding ISOLatin1Encoding def
        currentdict
    end

    newfontname exch definefont pop
} def
63.000 16.938 moveto
%%IncludeResource: font Mathematica1Mono
%%IncludeFont: Mathematica1Mono
/Mathematica1Mono findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
(-) show
72.688 11.188 moveto
%%IncludeResource: font Courier
%%IncludeFont: Courier
%%BeginResource: font Courier-MISO
%%BeginFont: Courier-MISO
/Courier /Courier-MISO MISOfy
%%EndFont
%%EndResource
%%IncludeResource: font Courier-MISO
%%IncludeFont: Courier-MISO
/Courier-MISO findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
(1) show
%%IncludeResource: font Mathematica1Mono
%%IncludeFont: Mathematica1Mono
/Mathematica1Mono findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
71.438 16.938 moveto
(\\200) show
73.500 16.938 moveto
(\\200) show
75.562 16.938 moveto
(\\200) show
77.625 16.938 moveto
(\\200) show
78.062 16.938 moveto
(\\200) show
72.688 22.938 moveto
%%IncludeResource: font Courier-MISO
%%IncludeFont: Courier-MISO
/Courier-MISO findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
(2) show
1.000 setlinewidth
grestore
.60714 0 m
.60714 .00625 L
s
gsave
.60714 -0.0125 -69.0938 -23.9375 Mabsadd m
1 1 Mabs scale
currentpoint translate
0 27.9375 translate 1 -1 scale
/g { setgray} bind def
/k { setcmykcolor} bind def
/p { gsave} bind def
/r { setrgbcolor} bind def
/w { setlinewidth} bind def
/C { curveto} bind def
/F { fill} bind def
/L { lineto} bind def
/rL { rlineto} bind def
/P { grestore} bind def
/s { stroke} bind def
/S { show} bind def
/N {currentpoint 3 -1 roll show moveto} bind def
/Msf { findfont exch scalefont [1 0 0 -1 0 0 ] makefont setfont} bind def
/m { moveto} bind def
/Mr { rmoveto} bind def
/Mx {currentpoint exch pop moveto} bind def
/My {currentpoint pop exch moveto} bind def
/X {0 rmoveto} bind def
/Y {0 exch rmoveto} bind def
/MISOfy
{
    /newfontname exch def
    /oldfontname exch def

    oldfontname findfont
    dup length dict begin
        {1 index /FID ne {def} {pop pop} ifelse} forall
        /Encoding ISOLatin1Encoding def
        currentdict
    end

    newfontname exch definefont pop
} def
66.062 11.188 moveto
%%IncludeResource: font Courier
%%IncludeFont: Courier
%%BeginResource: font Courier-MISO
%%BeginFont: Courier-MISO
/Courier /Courier-MISO MISOfy
%%EndFont
%%EndResource
%%IncludeResource: font Courier-MISO
%%IncludeFont: Courier-MISO
/Courier-MISO findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
(1) show
%%IncludeResource: font Mathematica1Mono
%%IncludeFont: Mathematica1Mono
/Mathematica1Mono findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
64.812 16.938 moveto
(\\200) show
66.875 16.938 moveto
(\\200) show
68.938 16.938 moveto
(\\200) show
71.000 16.938 moveto
(\\200) show
71.438 16.938 moveto
(\\200) show
66.062 22.938 moveto
%%IncludeResource: font Courier-MISO
%%IncludeFont: Courier-MISO
/Courier-MISO findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
(2) show
1.000 setlinewidth
grestore
.78571 0 m
.78571 .00625 L
s
[(1)] .78571 -0.0125 0 1 Mshowa
0 0 m
1 0 L
s
gsave
.5 -0.0125 -71.7188 -42.5 Mabsadd m
1 1 Mabs scale
currentpoint translate
0 26.5625 translate 1 -1 scale
/g { setgray} bind def
/k { setcmykcolor} bind def
/p { gsave} bind def
/r { setrgbcolor} bind def
/w { setlinewidth} bind def
/C { curveto} bind def
/F { fill} bind def
/L { lineto} bind def
/rL { rlineto} bind def
/P { grestore} bind def
/s { stroke} bind def
/S { show} bind def
/N {currentpoint 3 -1 roll show moveto} bind def
/Msf { findfont exch scalefont [1 0 0 -1 0 0 ] makefont setfont} bind def
/m { moveto} bind def
/Mr { rmoveto} bind def
/Mx {currentpoint exch pop moveto} bind def
/My {currentpoint pop exch moveto} bind def
/X {0 rmoveto} bind def
/Y {0 exch rmoveto} bind def
/MISOfy
{
    /newfontname exch def
    /oldfontname exch def

    oldfontname findfont
    dup length dict begin
        {1 index /FID ne {def} {pop pop} ifelse} forall
        /Encoding ISOLatin1Encoding def
        currentdict
    end

    newfontname exch definefont pop
} def
63.000 18.000 moveto
%%IncludeResource: font Courier
%%IncludeFont: Courier
%%BeginResource: font Courier-MISO
%%BeginFont: Courier-MISO
/Courier /Courier-MISO MISOfy
%%EndFont
%%EndResource
%%IncludeResource: font Courier-MISO
%%IncludeFont: Courier-MISO
/Courier-MISO findfont 16.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
(T) show
72.562 21.562 moveto
%%IncludeResource: font Courier-MISO
%%IncludeFont: Courier-MISO
/Courier-MISO findfont 11.375 scalefont
[1 0 0 -1 0 0 ] makefont setfont
1.000 0.000 0.000 setrgbcolor
(7) show
1.000 setlinewidth
grestore
0 .07143 m
.00625 .07143 L
s
[(-1)] -0.0125 .07143 1 0 Mshowa
0 .42857 m
.00625 .42857 L
s
[(0)] -0.0125 .42857 1 0 Mshowa
0 .78571 m
.00625 .78571 L
s
[(1)] -0.0125 .78571 1 0 Mshowa
0 0 m
0 .85714 L
s
gsave
-0.01875 .42857 -94.4375 -13.4375 Mabsadd m
1 1 Mabs scale
currentpoint translate
0 26.875 translate 1 -1 scale
/g { setgray} bind def
/k { setcmykcolor} bind def
/p { gsave} bind def
/r { setrgbcolor} bind def
/w { setlinewidth} bind def
/C { curveto} bind def
/F { fill} bind def
/L { lineto} bind def
/rL { rlineto} bind def
/P { grestore} bind def
/s { stroke} bind def
/S { show} bind def
/N {currentpoint 3 -1 roll show moveto} bind def
/Msf { findfont exch scalefont [1 0 0 -1 0 0 ] makefont setfont} bind def
/m { moveto} bind def
/Mr { rmoveto} bind def
/Mx {currentpoint exch pop moveto} bind def
/My {currentpoint pop exch moveto} bind def
/X {0 rmoveto} bind def
/Y {0 exch rmoveto} bind def
/MISOfy
{
    /newfontname exch def
    /oldfontname exch def

    oldfontname findfont
    dup length dict begin
        {1 index /FID ne {def} {pop pop} ifelse} forall
        /Encoding ISOLatin1Encoding def
        currentdict
    end

    newfontname exch definefont pop
} def
63.000 18.188 moveto
%%IncludeResource: font Courier
%%IncludeFont: Courier
%%BeginResource: font Courier-MISO
%%BeginFont: Courier-MISO
/Courier /Courier-MISO MISOfy
%%EndFont
%%EndResource
%%IncludeResource: font Courier-MISO
%%IncludeFont: Courier-MISO
/Courier-MISO findfont 16.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
(T) show
72.562 21.750 moveto
%%IncludeResource: font Courier-MISO
%%IncludeFont: Courier-MISO
/Courier-MISO findfont 11.375 scalefont
[1 0 0 -1 0 0 ] makefont setfont
1.000 0.000 0.000 setrgbcolor
(8) show
1.000 setlinewidth
grestore
.07143 .85089 m
.07143 .85714 L
s
.25 .85089 m
.25 .85714 L
s
.60714 .85089 m
.60714 .85714 L
s
.78571 .85089 m
.78571 .85714 L
s
0 .85714 m
1 .85714 L
s
.99375 .07143 m
1 .07143 L
s
.99375 .42857 m
1 .42857 L
s
.99375 .78571 m
1 .78571 L
s
1 0 m
1 .85714 L
s
.7 g
0 .42857 m
1 .42857 L
s
.42857 0 m
.42857 .85714 L
s
0 g
gsave
.5 .86964 -96 -4 Mabsadd m
1 1 Mabs scale
currentpoint translate
0 18.125 translate 1 -1 scale
/g { setgray} bind def
/k { setcmykcolor} bind def
/p { gsave} bind def
/r { setrgbcolor} bind def
/w { setlinewidth} bind def
/C { curveto} bind def
/F { fill} bind def
/L { lineto} bind def
/rL { rlineto} bind def
/P { grestore} bind def
/s { stroke} bind def
/S { show} bind def
/N {currentpoint 3 -1 roll show moveto} bind def
/Msf { findfont exch scalefont [1 0 0 -1 0 0 ] makefont setfont} bind def
/m { moveto} bind def
/Mr { rmoveto} bind def
/Mx {currentpoint exch pop moveto} bind def
/My {currentpoint pop exch moveto} bind def
/X {0 rmoveto} bind def
/Y {0 exch rmoveto} bind def
63.000 11.250 moveto
%%IncludeResource: font Courier
%%IncludeFont: Courier
/Courier findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
0.000 0.000 rmoveto
63.000 11.250 moveto
%%IncludeResource: font Courier
%%IncludeFont: Courier
/Courier findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
(SU) show
%%IncludeResource: font Mathematica2Mono
%%IncludeFont: Mathematica2Mono
/Mathematica2Mono findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
75.000 11.250 moveto
(@) show
81.000 11.250 moveto
%%IncludeResource: font Courier
%%IncludeFont: Courier
/Courier findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
(3) show
%%IncludeResource: font Mathematica2Mono
%%IncludeFont: Mathematica2Mono
/Mathematica2Mono findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
87.000 11.250 moveto
(D) show
99.000 11.250 moveto
%%IncludeResource: font Courier
%%IncludeFont: Courier
/Courier findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
(Roots) show
129.000 11.250 moveto
%%IncludeResource: font Courier
%%IncludeFont: Courier
/Courier findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
0.000 0.000 rmoveto
1.000 setlinewidth
grestore
0 0 m
1 0 L
1 .85714 L
0 .85714 L
closepath
clip
newpath
% Start of user PostScript
/mathtops {
gsave
MBeginOrig
moveto
MEndOrig
currentpoint
grestore
} bind def
/MAtocoords {
mathtops 4 2 roll mathtops
4 copy pop pop
3 -1 roll sub
/arry exch def
exch sub
/arrx exch def
arrx dup mul
arry dup mul
add sqrt
/arrl exch def
translate
} bind def
/MAarrowhead1 {
gsave
MAtocoords
arrl 0. eq
{ 0 0 Mdot }
{
[ arrx arrl div
arry arrl div
-1 arry mul arrl div
arrx arrl div
0 0 ]
concat
-0.05 0.0125 moveto 0 0 lineto
-0.05 -0.0125 lineto fill
-0.05 0.0125 moveto 0 0 lineto
-0.05 -0.0125 lineto
-0.05 0.0125 lineto stroke
} ifelse
grestore
} def
% End of user PostScript
.753 .753 .753 r
1 Mabswid
.78571 .42857 m
.60714 .78571 L
.25 .78571 L
.07143 .42857 L
.25 .07143 L
.60714 .07143 L
.78571 .42857 L
s
0 0 1 r
.42857 .42857 m
.78571 .42857 L
s
% Start of user PostScript
0 0 1. 0 MAarrowhead1
% End of user PostScript
.78571 .42857 m
.96429 .78571 L
s
% Start of user PostScript
1. 0 1.5 1. MAarrowhead1
% End of user PostScript
.753 .753 .753 r
[ .015 .02 ] 0 setdash
.42857 .42857 m
.60714 .78571 L
s
% Start of user PostScript
0 0 0.5 1. MAarrowhead1
% End of user PostScript
0 0 0 r
gsave
.82143 .46429 -70.6875 -12.2812 Mabsadd m
1 1 Mabs scale
currentpoint translate
0 24.5625 translate 1 -1 scale
/g { setgray} bind def
/k { setcmykcolor} bind def
/p { gsave} bind def
/r { setrgbcolor} bind def
/w { setlinewidth} bind def
/C { curveto} bind def
/F { fill} bind def
/L { lineto} bind def
/rL { rlineto} bind def
/P { grestore} bind def
/s { stroke} bind def
/S { show} bind def
/N {currentpoint 3 -1 roll show moveto} bind def
/Msf { findfont exch scalefont [1 0 0 -1 0 0 ] makefont setfont} bind def
/m { moveto} bind def
/Mr { rmoveto} bind def
/Mx {currentpoint exch pop moveto} bind def
/My {currentpoint pop exch moveto} bind def
/X {0 rmoveto} bind def
/Y {0 exch rmoveto} bind def
/MISOfy
{
    /newfontname exch def
    /oldfontname exch def

    oldfontname findfont
    dup length dict begin
        {1 index /FID ne {def} {pop pop} ifelse} forall
        /Encoding ISOLatin1Encoding def
        currentdict
    end

    newfontname exch definefont pop
} def
63.000 16.438 moveto
%%IncludeResource: font Courier
%%IncludeFont: Courier
%%BeginResource: font Courier-MISO
%%BeginFont: Courier-MISO
/Courier /Courier-MISO MISOfy
%%EndFont
%%EndResource
%%IncludeResource: font Courier-MISO
%%IncludeFont: Courier-MISO
/Courier-MISO findfont 14.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
(T) show
71.375 19.562 moveto
%%IncludeResource: font Courier-MISO
%%IncludeFont: Courier-MISO
/Courier-MISO findfont 9.938 scalefont
[1 0 0 -1 0 0 ] makefont setfont
1.000 0.000 0.000 setrgbcolor
(1) show
1.000 setlinewidth
grestore
gsave
.03571 .46429 -70.6875 -12.2812 Mabsadd m
1 1 Mabs scale
currentpoint translate
0 24.5625 translate 1 -1 scale
/g { setgray} bind def
/k { setcmykcolor} bind def
/p { gsave} bind def
/r { setrgbcolor} bind def
/w { setlinewidth} bind def
/C { curveto} bind def
/F { fill} bind def
/L { lineto} bind def
/rL { rlineto} bind def
/P { grestore} bind def
/s { stroke} bind def
/S { show} bind def
/N {currentpoint 3 -1 roll show moveto} bind def
/Msf { findfont exch scalefont [1 0 0 -1 0 0 ] makefont setfont} bind def
/m { moveto} bind def
/Mr { rmoveto} bind def
/Mx {currentpoint exch pop moveto} bind def
/My {currentpoint pop exch moveto} bind def
/X {0 rmoveto} bind def
/Y {0 exch rmoveto} bind def
/MISOfy
{
    /newfontname exch def
    /oldfontname exch def

    oldfontname findfont
    dup length dict begin
        {1 index /FID ne {def} {pop pop} ifelse} forall
        /Encoding ISOLatin1Encoding def
        currentdict
    end

    newfontname exch definefont pop
} def
63.000 16.438 moveto
%%IncludeResource: font Courier
%%IncludeFont: Courier
%%BeginResource: font Courier-MISO
%%BeginFont: Courier-MISO
/Courier /Courier-MISO MISOfy
%%EndFont
%%EndResource
%%IncludeResource: font Courier-MISO
%%IncludeFont: Courier-MISO
/Courier-MISO findfont 14.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
(T) show
71.375 19.562 moveto
%%IncludeResource: font Courier-MISO
%%IncludeFont: Courier-MISO
/Courier-MISO findfont 9.938 scalefont
[1 0 0 -1 0 0 ] makefont setfont
1.000 0.000 0.000 setrgbcolor
(4) show
1.000 setlinewidth
grestore
gsave
.64286 .82143 -70.6875 -12.2812 Mabsadd m
1 1 Mabs scale
currentpoint translate
0 24.5625 translate 1 -1 scale
/g { setgray} bind def
/k { setcmykcolor} bind def
/p { gsave} bind def
/r { setrgbcolor} bind def
/w { setlinewidth} bind def
/C { curveto} bind def
/F { fill} bind def
/L { lineto} bind def
/rL { rlineto} bind def
/P { grestore} bind def
/s { stroke} bind def
/S { show} bind def
/N {currentpoint 3 -1 roll show moveto} bind def
/Msf { findfont exch scalefont [1 0 0 -1 0 0 ] makefont setfont} bind def
/m { moveto} bind def
/Mr { rmoveto} bind def
/Mx {currentpoint exch pop moveto} bind def
/My {currentpoint pop exch moveto} bind def
/X {0 rmoveto} bind def
/Y {0 exch rmoveto} bind def
/MISOfy
{
    /newfontname exch def
    /oldfontname exch def

    oldfontname findfont
    dup length dict begin
        {1 index /FID ne {def} {pop pop} ifelse} forall
        /Encoding ISOLatin1Encoding def
        currentdict
    end

    newfontname exch definefont pop
} def
63.000 16.438 moveto
%%IncludeResource: font Courier
%%IncludeFont: Courier
%%BeginResource: font Courier-MISO
%%BeginFont: Courier-MISO
/Courier /Courier-MISO MISOfy
%%EndFont
%%EndResource
%%IncludeResource: font Courier-MISO
%%IncludeFont: Courier-MISO
/Courier-MISO findfont 14.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
(T) show
71.375 19.562 moveto
%%IncludeResource: font Courier-MISO
%%IncludeFont: Courier-MISO
/Courier-MISO findfont 9.938 scalefont
[1 0 0 -1 0 0 ] makefont setfont
1.000 0.000 0.000 setrgbcolor
(2) show
1.000 setlinewidth
grestore
gsave
.21429 .03571 -70.6875 -12.2812 Mabsadd m
1 1 Mabs scale
currentpoint translate
0 24.5625 translate 1 -1 scale
/g { setgray} bind def
/k { setcmykcolor} bind def
/p { gsave} bind def
/r { setrgbcolor} bind def
/w { setlinewidth} bind def
/C { curveto} bind def
/F { fill} bind def
/L { lineto} bind def
/rL { rlineto} bind def
/P { grestore} bind def
/s { stroke} bind def
/S { show} bind def
/N {currentpoint 3 -1 roll show moveto} bind def
/Msf { findfont exch scalefont [1 0 0 -1 0 0 ] makefont setfont} bind def
/m { moveto} bind def
/Mr { rmoveto} bind def
/Mx {currentpoint exch pop moveto} bind def
/My {currentpoint pop exch moveto} bind def
/X {0 rmoveto} bind def
/Y {0 exch rmoveto} bind def
/MISOfy
{
    /newfontname exch def
    /oldfontname exch def

    oldfontname findfont
    dup length dict begin
        {1 index /FID ne {def} {pop pop} ifelse} forall
        /Encoding ISOLatin1Encoding def
        currentdict
    end

    newfontname exch definefont pop
} def
63.000 16.312 moveto
%%IncludeResource: font Courier
%%IncludeFont: Courier
%%BeginResource: font Courier-MISO
%%BeginFont: Courier-MISO
/Courier /Courier-MISO MISOfy
%%EndFont
%%EndResource
%%IncludeResource: font Courier-MISO
%%IncludeFont: Courier-MISO
/Courier-MISO findfont 14.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
(T) show
71.375 19.438 moveto
%%IncludeResource: font Courier-MISO
%%IncludeFont: Courier-MISO
/Courier-MISO findfont 9.938 scalefont
[1 0 0 -1 0 0 ] makefont setfont
1.000 0.000 0.000 setrgbcolor
(5) show
1.000 setlinewidth
grestore
gsave
.21429 .82143 -70.6875 -12.3438 Mabsadd m
1 1 Mabs scale
currentpoint translate
0 24.6875 translate 1 -1 scale
/g { setgray} bind def
/k { setcmykcolor} bind def
/p { gsave} bind def
/r { setrgbcolor} bind def
/w { setlinewidth} bind def
/C { curveto} bind def
/F { fill} bind def
/L { lineto} bind def
/rL { rlineto} bind def
/P { grestore} bind def
/s { stroke} bind def
/S { show} bind def
/N {currentpoint 3 -1 roll show moveto} bind def
/Msf { findfont exch scalefont [1 0 0 -1 0 0 ] makefont setfont} bind def
/m { moveto} bind def
/Mr { rmoveto} bind def
/Mx {currentpoint exch pop moveto} bind def
/My {currentpoint pop exch moveto} bind def
/X {0 rmoveto} bind def
/Y {0 exch rmoveto} bind def
/MISOfy
{
    /newfontname exch def
    /oldfontname exch def

    oldfontname findfont
    dup length dict begin
        {1 index /FID ne {def} {pop pop} ifelse} forall
        /Encoding ISOLatin1Encoding def
        currentdict
    end

    newfontname exch definefont pop
} def
63.000 16.438 moveto
%%IncludeResource: font Courier
%%IncludeFont: Courier
%%BeginResource: font Courier-MISO
%%BeginFont: Courier-MISO
/Courier /Courier-MISO MISOfy
%%EndFont
%%EndResource
%%IncludeResource: font Courier-MISO
%%IncludeFont: Courier-MISO
/Courier-MISO findfont 14.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
(T) show
71.375 19.562 moveto
%%IncludeResource: font Courier-MISO
%%IncludeFont: Courier-MISO
/Courier-MISO findfont 9.938 scalefont
[1 0 0 -1 0 0 ] makefont setfont
1.000 0.000 0.000 setrgbcolor
(6) show
1.000 setlinewidth
grestore
gsave
.64286 .03571 -70.6875 -12.3438 Mabsadd m
1 1 Mabs scale
currentpoint translate
0 24.6875 translate 1 -1 scale
/g { setgray} bind def
/k { setcmykcolor} bind def
/p { gsave} bind def
/r { setrgbcolor} bind def
/w { setlinewidth} bind def
/C { curveto} bind def
/F { fill} bind def
/L { lineto} bind def
/rL { rlineto} bind def
/P { grestore} bind def
/s { stroke} bind def
/S { show} bind def
/N {currentpoint 3 -1 roll show moveto} bind def
/Msf { findfont exch scalefont [1 0 0 -1 0 0 ] makefont setfont} bind def
/m { moveto} bind def
/Mr { rmoveto} bind def
/Mx {currentpoint exch pop moveto} bind def
/My {currentpoint pop exch moveto} bind def
/X {0 rmoveto} bind def
/Y {0 exch rmoveto} bind def
/MISOfy
{
    /newfontname exch def
    /oldfontname exch def

    oldfontname findfont
    dup length dict begin
        {1 index /FID ne {def} {pop pop} ifelse} forall
        /Encoding ISOLatin1Encoding def
        currentdict
    end

    newfontname exch definefont pop
} def
63.000 16.438 moveto
%%IncludeResource: font Courier
%%IncludeFont: Courier
%%BeginResource: font Courier-MISO
%%BeginFont: Courier-MISO
/Courier /Courier-MISO MISOfy
%%EndFont
%%EndResource
%%IncludeResource: font Courier-MISO
%%IncludeFont: Courier-MISO
/Courier-MISO findfont 14.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
(T) show
71.375 19.562 moveto
%%IncludeResource: font Courier-MISO
%%IncludeFont: Courier-MISO
/Courier-MISO findfont 9.938 scalefont
[1 0 0 -1 0 0 ] makefont setfont
1.000 0.000 0.000 setrgbcolor
(3) show
1.000 setlinewidth
grestore
% End of Graphics
MathPictureEnd
\
\>"], "Graphics",
 ImageSize->{288, 246.812},
 ImageMargins->{{43, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 
  1}},ImageCache->GraphicsData["CompressedBitmap", "\<\
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
iw==\
\>"],ImageRangeCache->{{{0, 287}, {245.812, 0}} -> {-1.8324, -1.71727, \
0.0125262, 0.0125262}}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["References ", "Section"],

Cell[TextData[{
 "[1] Robert Cahn, ",
 StyleBox["Semisimple Lie Algebras and Their Representation",
  FontSlant->"Italic"],
 "s, Benjamin-Cummings, 1984"
}], "Text"],

Cell[TextData[{
 "[2] Baylis William, ",
 StyleBox["Electrodynamics. A Modern Geometric Approach",
  FontSlant->"Italic"],
 ", Birkhauser, 2002. "
}], "Text"],

Cell["\<\
[3] Robet Gilmore, Lie Groups, Lie Algebras and Some of Their Applications, \
John Wiley & Sons\
\>", "Text"],

Cell["\<\
[4] Harry J. Lipkin, Lie Groups for Pedestrians, Dover Publications, 1966\
\>", "Text"],

Cell[TextData[{
 "[5] Boothby, William M., ",
 StyleBox["An Introduction to Differential Manifolds and Riemannian Geometry",
  
  FontSlant->"Italic"],
 ". Academic Press, New York. 1975"
}], "Text"],

Cell[TextData[{
 "[6] Penrose, Roger, ",
 StyleBox["The Road to Reality",
  FontSlant->"Italic"],
 ". Alfred A, Knopf, New York. 2004. Sections 13.6 & 14.6"
}], "Text"],

Cell[TextData[{
 "[7] Greiner and Muller, ",
 StyleBox["Quantum Mechanics Symmetries",
  FontSlant->"Italic"],
 ", Springer-Verlag, 1994"
}], "Text"]
}, Open  ]]
}, Open  ]]
},
AutoGeneratedPackage->None,
WindowToolbars->{},
WindowSize->{792, 669},
WindowMargins->{{1, Automatic}, {Automatic, 0}},
PrintingCopies->1,
PrintingPageRange->{Automatic, Automatic},
Magnification->1,
FrontEndVersion->"10.0 for Mac OS X x86 (32-bit, 64-bit Kernel) (December 4, \
2014)",
StyleDefinitions->"TensorialStyle.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[567, 22, 137, 5, 57, "Title"],
Cell[707, 29, 102, 5, 87, "Text"],
Cell[812, 36, 211, 7, 31, "Text"],
Cell[CellGroupData[{
Cell[1048, 47, 73, 1, 57, "Section"],
Cell[1124, 50, 37, 0, 30, "Text"],
Cell[1164, 52, 188, 4, 44, "Input",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[1377, 60, 121, 3, 44, "Input",
 InitializationCell->True],
Cell[1501, 65, 476, 10, 24, "Message"],
Cell[1980, 77, 516, 11, 24, "Message"],
Cell[2499, 90, 125, 2, 31, "Output"]
}, Open  ]],
Cell[2639, 95, 93, 2, 44, "Input",
 InitializationCell->True],
Cell[2735, 99, 70, 0, 30, "Text"],
Cell[2808, 101, 797, 25, 113, "Input",
 InitializationCell->True],
Cell[3608, 128, 229, 7, 44, "Input",
 InitializationCell->True],
Cell[3840, 137, 137, 3, 30, "Text"],
Cell[3980, 142, 261, 7, 44, "Input",
 InitializationCell->True],
Cell[4244, 151, 857, 23, 62, "Input",
 InitializationCell->True],
Cell[5104, 176, 199, 4, 62, "Input",
 InitializationCell->True],
Cell[5306, 182, 135, 6, 30, "Text"],
Cell[5444, 190, 377, 11, 44, "Input"],
Cell[5824, 203, 102, 3, 44, "Input"],
Cell[5929, 208, 204, 5, 44, "Input",
 InitializationCell->True],
Cell[6136, 215, 509, 12, 62, "Input",
 InitializationCell->True],
Cell[6648, 229, 161, 4, 44, "Input",
 InitializationCell->True],
Cell[6812, 235, 88, 2, 30, "Text"],
Cell[CellGroupData[{
Cell[6925, 241, 496, 14, 79, "Input",
 InitializationCell->True],
Cell[7424, 257, 610, 17, 41, "Output"],
Cell[8037, 276, 725, 20, 74, "Output"]
}, Open  ]],
Cell[8777, 299, 74, 0, 30, "Text"],
Cell[8854, 301, 30, 0, 30, "Text"],
Cell[8887, 303, 733, 26, 44, "Input",
 InitializationCell->True],
Cell[9623, 331, 34, 0, 30, "Text"],
Cell[9660, 333, 2764, 84, 198, "Input",
 InitializationCell->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[12461, 422, 117, 2, 57, "Section",
 InitializationCell->True],
Cell[12581, 426, 64, 1, 30, "Text",
 InitializationCell->True],
Cell[12648, 429, 887, 25, 130, "Input",
 InitializationCell->True],
Cell[13538, 456, 69, 1, 30, "Text",
 InitializationCell->True],
Cell[13610, 459, 494, 15, 79, "Input",
 InitializationCell->True],
Cell[14107, 476, 3820, 104, 453, "Input",
 InitializationCell->True],
Cell[17930, 582, 152, 7, 30, "Text",
 InitializationCell->True],
Cell[18085, 591, 716, 20, 80, "Input",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[18826, 615, 168, 5, 44, "Input",
 InitializationCell->True],
Cell[18997, 622, 747, 19, 39, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[19781, 646, 339, 13, 44, "Input",
 InitializationCell->True],
Cell[20123, 661, 354, 8, 31, "Output"]
}, Open  ]],
Cell[20492, 672, 154, 7, 30, "Text",
 InitializationCell->True],
Cell[20649, 681, 911, 26, 97, "Input",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[21585, 711, 245, 6, 62, "Input",
 InitializationCell->True],
Cell[21833, 719, 291, 8, 31, "Output"],
Cell[22127, 729, 263, 6, 31, "Output"]
}, Open  ]],
Cell[22405, 738, 900, 30, 79, "Input",
 InitializationCell->True],
Cell[23308, 770, 3435, 82, 404, "Input",
 InitializationCell->True],
Cell[26746, 854, 8743, 221, 701, "Input",
 InitializationCell->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[35526, 1080, 77, 0, 57, "Section"],
Cell[35606, 1082, 782, 27, 52, "Text"],
Cell[CellGroupData[{
Cell[36413, 1113, 449, 14, 62, "Input"],
Cell[36865, 1129, 6211, 161, 192, "Output"]
}, Open  ]],
Cell[43091, 1293, 172, 3, 49, "Text"],
Cell[43266, 1298, 103, 3, 30, "Text"],
Cell[CellGroupData[{
Cell[43394, 1305, 516, 12, 96, "Input"],
Cell[43913, 1319, 1042, 31, 39, "Output"],
Cell[44958, 1352, 1827, 53, 94, "Output"],
Cell[46788, 1407, 2373, 67, 94, "Output"],
Cell[49164, 1476, 1030, 29, 94, "Output"]
}, Open  ]],
Cell[50209, 1508, 55, 0, 30, "Text"],
Cell[CellGroupData[{
Cell[50289, 1512, 363, 11, 62, "Input"],
Cell[50655, 1525, 994, 32, 39, "Output"],
Cell[51652, 1559, 663, 21, 94, "Output"]
}, Open  ]],
Cell[52330, 1583, 85, 2, 30, "Text"],
Cell[CellGroupData[{
Cell[52440, 1589, 536, 17, 62, "Input"],
Cell[52979, 1608, 1287, 45, 41, "Output"],
Cell[54269, 1655, 913, 25, 260, "Output"]
}, Open  ]],
Cell[55197, 1683, 250, 4, 68, "Text"],
Cell[CellGroupData[{
Cell[55472, 1691, 573, 19, 44, "Input"],
Cell[56048, 1712, 3545, 113, 41, "Output"]
}, Open  ]],
Cell[59608, 1828, 138, 3, 49, "Text"],
Cell[59749, 1833, 110, 3, 30, "Text"],
Cell[59862, 1838, 1188, 35, 113, "Input"],
Cell[61053, 1875, 228, 4, 49, "Text"],
Cell[CellGroupData[{
Cell[61306, 1883, 474, 15, 62, "Input"],
Cell[61783, 1900, 53680, 1615, 290, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[115512, 3521, 65, 0, 57, "Section"],
Cell[CellGroupData[{
Cell[115602, 3525, 45, 0, 47, "Subsection"],
Cell[115650, 3527, 337, 6, 68, "Text"],
Cell[CellGroupData[{
Cell[116012, 3537, 589, 18, 62, "Input"],
Cell[116604, 3557, 2372, 81, 41, "Output"],
Cell[118979, 3640, 2767, 95, 42, "Output"]
}, Open  ]],
Cell[121761, 3738, 56, 0, 30, "Text"],
Cell[121820, 3740, 39, 0, 30, "Text"],
Cell[121862, 3742, 613, 17, 79, "Input"],
Cell[122478, 3761, 1116, 39, 35, "Text"],
Cell[CellGroupData[{
Cell[123619, 3804, 435, 11, 79, "Input"],
Cell[124057, 3817, 11597, 279, 888, "Output"]
}, Open  ]],
Cell[135669, 4099, 148, 3, 49, "Text"],
Cell[CellGroupData[{
Cell[135842, 4106, 363, 8, 62, "Input"],
Cell[136208, 4116, 2328, 79, 45, "Output"],
Cell[138539, 4197, 627, 14, 180, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[139203, 4216, 312, 8, 62, "Input"],
Cell[139518, 4226, 1412, 51, 38, "Output"],
Cell[140933, 4279, 317, 9, 74, "Output"]
}, Open  ]],
Cell[141265, 4291, 343, 7, 87, "EmphasisText"],
Cell[141611, 4300, 1440, 49, 35, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[143088, 4354, 72, 0, 47, "Subsection"],
Cell[143163, 4356, 180, 3, 55, "EmphasisText"],
Cell[143346, 4361, 204, 4, 49, "Text"],
Cell[CellGroupData[{
Cell[143575, 4369, 401, 12, 62, "Input"],
Cell[143979, 4383, 1442, 50, 40, "Output"],
Cell[145424, 4435, 2589, 59, 220, "Output"]
}, Open  ]],
Cell[148028, 4497, 609, 24, 35, "Text"],
Cell[CellGroupData[{
Cell[148662, 4525, 326, 9, 44, "Input"],
Cell[148991, 4536, 846, 20, 180, "Output"]
}, Open  ]],
Cell[149852, 4559, 123, 3, 30, "Text"],
Cell[149978, 4564, 53, 0, 30, "Text"],
Cell[CellGroupData[{
Cell[150056, 4568, 344, 11, 44, "Input"],
Cell[150403, 4581, 1245, 41, 264, "Output"]
}, Open  ]],
Cell[151663, 4625, 190, 4, 49, "Text"],
Cell[CellGroupData[{
Cell[151878, 4633, 612, 18, 79, "Input"],
Cell[152493, 4653, 2163, 73, 45, "Output"],
Cell[154659, 4728, 2260, 50, 220, "Output"]
}, Open  ]],
Cell[156934, 4781, 133, 3, 30, "Text"],
Cell[157070, 4786, 194, 4, 55, "EmphasisText"],
Cell[157267, 4792, 75, 0, 30, "Text"],
Cell[CellGroupData[{
Cell[157367, 4796, 331, 8, 62, "Input"],
Cell[157701, 4806, 599, 23, 220, "Output"]
}, Open  ]],
Cell[158315, 4832, 62, 0, 30, "Text"],
Cell[CellGroupData[{
Cell[158402, 4836, 220, 6, 44, "Input"],
Cell[158625, 4844, 565, 21, 178, "Output"]
}, Open  ]],
Cell[159205, 4868, 313, 5, 71, "EmphasisText"],
Cell[159521, 4875, 63, 0, 30, "Text"],
Cell[CellGroupData[{
Cell[159609, 4879, 152, 4, 44, "Input"],
Cell[159764, 4885, 374, 12, 94, "Output"]
}, Open  ]],
Cell[160153, 4900, 258, 4, 55, "EmphasisText"],
Cell[160414, 4906, 188, 6, 32, "Text"],
Cell[CellGroupData[{
Cell[160627, 4916, 157, 4, 44, "Input"],
Cell[160787, 4922, 357, 11, 74, "Output"]
}, Open  ]],
Cell[161159, 4936, 141, 3, 49, "Text"],
Cell[CellGroupData[{
Cell[161325, 4943, 244, 7, 44, "Input"],
Cell[161572, 4952, 113, 3, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[161722, 4960, 233, 7, 44, "Input"],
Cell[161958, 4969, 103, 3, 31, "Output"]
}, Open  ]],
Cell[162076, 4975, 693, 25, 33, "Text"],
Cell[162772, 5002, 378, 11, 62, "Input"],
Cell[163153, 5015, 57, 0, 30, "Text"],
Cell[163213, 5017, 169, 5, 44, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[163419, 5027, 61, 0, 47, "Subsection"],
Cell[163483, 5029, 98, 2, 30, "Text"],
Cell[CellGroupData[{
Cell[163606, 5035, 451, 13, 62, "Input"],
Cell[164060, 5050, 6321, 211, 128, "Output"]
}, Open  ]],
Cell[170396, 5264, 5321, 170, 118, "EmphasisText"],
Cell[175720, 5436, 193, 7, 31, "Text"],
Cell[CellGroupData[{
Cell[175938, 5447, 2471, 70, 269, "Input"],
Cell[178412, 5519, 14038, 437, 92, "Output"],
Cell[192453, 5958, 3897, 135, 42, "Output"],
Cell[196353, 6095, 4001, 135, 38, "Output"]
}, Open  ]],
Cell[200369, 6233, 63, 0, 30, "Text"],
Cell[CellGroupData[{
Cell[200457, 6237, 220, 7, 44, "Input"],
Cell[200680, 6246, 390, 12, 74, "Output"]
}, Open  ]],
Cell[201085, 6261, 240, 8, 40, "Text"],
Cell[CellGroupData[{
Cell[201350, 6273, 2402, 68, 235, "Input"],
Cell[203755, 6343, 12521, 390, 92, "Output"],
Cell[216279, 6735, 3897, 135, 42, "Output"],
Cell[220179, 6872, 4001, 135, 38, "Output"]
}, Open  ]],
Cell[224195, 7010, 63, 0, 30, "Text"],
Cell[CellGroupData[{
Cell[224283, 7014, 250, 9, 44, "Input"],
Cell[224536, 7025, 390, 12, 74, "Output"]
}, Open  ]],
Cell[224941, 7040, 261, 9, 40, "Text"],
Cell[CellGroupData[{
Cell[225227, 7053, 2549, 73, 269, "Input"],
Cell[227779, 7128, 12566, 388, 92, "Output"],
Cell[240348, 7518, 3876, 134, 42, "Output"],
Cell[244227, 7654, 4022, 136, 38, "Output"]
}, Open  ]],
Cell[248264, 7793, 63, 0, 30, "Text"],
Cell[CellGroupData[{
Cell[248352, 7797, 269, 9, 44, "Input"],
Cell[248624, 7808, 390, 12, 74, "Output"]
}, Open  ]],
Cell[249029, 7823, 107, 3, 30, "Text"],
Cell[CellGroupData[{
Cell[249161, 7830, 360, 11, 62, "Input"],
Cell[249524, 7843, 1207, 32, 76, "Output"]
}, Open  ]],
Cell[250746, 7878, 166, 3, 49, "Text"],
Cell[CellGroupData[{
Cell[250937, 7885, 292, 8, 62, "Input"],
Cell[251232, 7895, 1207, 32, 76, "Output"]
}, Open  ]],
Cell[252454, 7930, 732, 26, 33, "Text"],
Cell[253189, 7958, 602, 16, 96, "Input"],
Cell[253794, 7976, 153, 3, 49, "Text"],
Cell[CellGroupData[{
Cell[253972, 7983, 7235, 186, 453, "Input"],
Cell[261210, 8171, 25949, 1022, 296, 21994, 954, "GraphicsData", \
"PostScript", "Graphics"]
}, Open  ]],
Cell[287174, 9196, 312, 5, 68, "Text"],
Cell[CellGroupData[{
Cell[287511, 9205, 404, 13, 62, "Input"],
Cell[287918, 9220, 1668, 52, 39, "Output"],
Cell[289589, 9274, 505, 15, 74, "Output"]
}, Open  ]],
Cell[290109, 9292, 194, 4, 49, "Text"],
Cell[CellGroupData[{
Cell[290328, 9300, 559, 16, 79, "Input"],
Cell[290890, 9318, 757, 19, 200, "Output"]
}, Open  ]],
Cell[291662, 9340, 161, 3, 49, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[291860, 9348, 32, 0, 47, "Subsection"],
Cell[291895, 9350, 274, 5, 68, "Text"],
Cell[CellGroupData[{
Cell[292194, 9359, 385, 12, 44, "Input"],
Cell[292582, 9373, 2420, 85, 41, "Output"]
}, Open  ]],
Cell[295017, 9461, 197, 4, 49, "Text"],
Cell[CellGroupData[{
Cell[295239, 9469, 151, 5, 44, "Input"],
Cell[295393, 9476, 1880, 66, 38, "Output"]
}, Open  ]],
Cell[297288, 9545, 55, 0, 30, "Text"],
Cell[CellGroupData[{
Cell[297368, 9549, 399, 10, 113, "Input"],
Cell[297770, 9561, 15896, 479, 90, "Output"]
}, Open  ]],
Cell[313681, 10043, 252, 4, 68, "Text"],
Cell[CellGroupData[{
Cell[313958, 10051, 1866, 52, 181, "Input"],
Cell[315827, 10105, 10322, 323, 182, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[326186, 10433, 1350, 38, 113, "Input"],
Cell[327539, 10473, 8147, 261, 62, "Output"],
Cell[335689, 10736, 7557, 252, 56, "Output"]
}, Open  ]],
Cell[343261, 10991, 57, 0, 30, "Text"],
Cell[CellGroupData[{
Cell[343343, 10995, 476, 12, 96, "Input"],
Cell[343822, 11009, 6608, 203, 114, "Output"]
}, Open  ]],
Cell[350445, 11215, 729, 26, 33, "Text"],
Cell[351177, 11243, 496, 14, 62, "Input"],
Cell[351676, 11259, 107, 3, 30, "Text"],
Cell[CellGroupData[{
Cell[351808, 11266, 387, 12, 62, "Input"],
Cell[352198, 11280, 4070, 135, 38, "Output"],
Cell[356271, 11417, 113, 3, 31, "Output"]
}, Open  ]],
Cell[356399, 11423, 262, 4, 55, "EmphasisText"]
}, Open  ]],
Cell[CellGroupData[{
Cell[356698, 11432, 35, 0, 47, "Subsection"],
Cell[356736, 11434, 179, 3, 55, "EmphasisText"],
Cell[356918, 11439, 742, 26, 33, "Text"],
Cell[357663, 11467, 1061, 32, 96, "Input"],
Cell[CellGroupData[{
Cell[358749, 11503, 276, 7, 62, "Input"],
Cell[359028, 11512, 1922, 66, 38, "Output"],
Cell[360953, 11580, 375, 12, 94, "Output"]
}, Open  ]],
Cell[361343, 11595, 803, 27, 52, "Text"],
Cell[CellGroupData[{
Cell[362171, 11626, 276, 7, 62, "Input"],
Cell[362450, 11635, 1243, 44, 35, "Output"],
Cell[363696, 11681, 56, 1, 31, "Output"]
}, Open  ]],
Cell[363767, 11685, 76, 0, 30, "Text"],
Cell[CellGroupData[{
Cell[363868, 11689, 437, 13, 44, "Input"],
Cell[364308, 11704, 2604, 89, 76, "Output"]
}, Open  ]],
Cell[366927, 11796, 46, 0, 30, "Text"],
Cell[CellGroupData[{
Cell[366998, 11800, 789, 21, 96, "Input"],
Cell[367790, 11823, 403, 13, 54, "Output"]
}, Open  ]],
Cell[368208, 11839, 326, 10, 49, "Text"],
Cell[368537, 11851, 121, 3, 30, "Text"],
Cell[CellGroupData[{
Cell[368683, 11858, 843, 24, 96, "Input"],
Cell[369529, 11884, 6400, 188, 104, "Output"],
Cell[375932, 12074, 403, 13, 54, "Output"]
}, Open  ]],
Cell[376350, 12090, 48, 0, 30, "Text"],
Cell[CellGroupData[{
Cell[376423, 12094, 77, 1, 44, "Input"],
Cell[376503, 12097, 1296, 60, 66, 690, 48, "GraphicsData", "PostScript", \
"Graphics"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[377848, 12163, 75, 0, 47, "Subsection"],
Cell[377926, 12165, 169, 3, 49, "Text"],
Cell[CellGroupData[{
Cell[378120, 12172, 695, 16, 147, "Input"],
Cell[378818, 12190, 1536, 51, 178, "Output"]
}, Open  ]],
Cell[380369, 12244, 114, 3, 30, "Text"],
Cell[380486, 12249, 127, 3, 30, "Text"],
Cell[380616, 12254, 214, 4, 49, "Text"],
Cell[380833, 12260, 33, 0, 30, "Text"],
Cell[CellGroupData[{
Cell[380891, 12264, 1318, 42, 113, "Input"],
Cell[382212, 12308, 2404, 84, 39, "Output"],
Cell[384619, 12394, 59, 1, 31, "Output"],
Cell[384681, 12397, 2404, 84, 39, "Output"],
Cell[387088, 12483, 59, 1, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[387184, 12489, 1390, 46, 113, "Input"],
Cell[388577, 12537, 2542, 89, 39, "Output"],
Cell[391122, 12628, 59, 1, 31, "Output"],
Cell[391184, 12631, 2404, 84, 39, "Output"],
Cell[393591, 12717, 59, 1, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[393687, 12723, 1473, 51, 113, "Input"],
Cell[395163, 12776, 2624, 92, 59, "Output"],
Cell[397790, 12870, 59, 1, 31, "Output"],
Cell[397852, 12873, 2600, 91, 59, "Output"],
Cell[400455, 12966, 59, 1, 31, "Output"]
}, Open  ]],
Cell[400529, 12970, 160, 3, 49, "Text"],
Cell[400692, 12975, 191, 4, 49, "Text"],
Cell[400886, 12981, 70, 0, 30, "Text"],
Cell[CellGroupData[{
Cell[400981, 12985, 725, 24, 62, "Input"],
Cell[401709, 13011, 2722, 94, 59, "Output"],
Cell[404434, 13107, 59, 1, 31, "Output"]
}, Open  ]],
Cell[404508, 13111, 166, 3, 49, "Text"],
Cell[CellGroupData[{
Cell[404699, 13118, 8515, 220, 19, "Input",
 CellOpen->False],
Cell[413217, 13340, 28781, 1061, 296, 21846, 945, "GraphicsData", \
"PostScript", "Graphics"]
}, Open  ]],
Cell[442013, 14404, 204, 4, 49, "Text"],
Cell[442220, 14410, 27, 0, 30, "Text"],
Cell[CellGroupData[{
Cell[442272, 14414, 788, 27, 62, "Input"],
Cell[443063, 14443, 2893, 100, 59, "Output"],
Cell[445959, 14545, 59, 1, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[446055, 14551, 7636, 197, 19, "Input",
 CellOpen->False],
Cell[453694, 14750, 28640, 1048, 296, 21595, 930, "GraphicsData", \
"PostScript", "Graphics"]
}, Open  ]],
Cell[482349, 15801, 85, 1, 30, "Text"],
Cell[482437, 15804, 27, 0, 30, "Text"],
Cell[CellGroupData[{
Cell[482489, 15808, 572, 18, 62, "Input"],
Cell[483064, 15828, 1883, 64, 59, "Output"],
Cell[484950, 15894, 359, 11, 74, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[485346, 15910, 8171, 211, 19, "Input",
 CellOpen->False],
Cell[493520, 16123, 28301, 1046, 255, 21891, 938, "GraphicsData", \
"PostScript", "Graphics"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[521882, 17176, 30, 0, 57, "Section"],
Cell[521915, 17178, 165, 5, 30, "Text"],
Cell[522083, 17185, 158, 5, 30, "Text"],
Cell[522244, 17192, 119, 3, 30, "Text"],
Cell[522366, 17197, 97, 2, 30, "Text"],
Cell[522466, 17201, 199, 6, 49, "Text"],
Cell[522668, 17209, 168, 5, 30, "Text"],
Cell[522839, 17216, 149, 5, 30, "Text"]
}, Open  ]]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
