(* Content-type: application/mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 7.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       145,          7]
NotebookDataLength[    144578,       3338]
NotebookOptionsPosition[    107128,       2473]
NotebookOutlinePosition[    143746,       3311]
CellTagsIndexPosition[    143703,       3308]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[{
 RowBox[{"Needs", "[", "\"\<TensorCalculus4V6`Tensorial`\>\"", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Needs", "[", "\"\<Quantum`Notation`\>\"", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Needs", "[", "\"\<Combinatorica`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{"<<", 
  "Local`LocalFunctions`"}], "\[IndentingNewLine]", "IntegrateSumFunctions", \
"\[IndentingNewLine]", "DotFunctions", "\[IndentingNewLine]", \
"IntegralFunctions", "\[IndentingNewLine]", 
 RowBox[{"SetQuantumAliases", "[", "]"}]}], "Input",
 InitializationCell->True,
 InitializationGroup->True,
 CellChangeTimes->{{3.443022792545981*^9, 3.443022800373374*^9}, {
  3.443022867899982*^9, 3.443022873974063*^9}, {3.449674157124275*^9, 
  3.449674173210895*^9}, {3.449964752416099*^9, 3.449964756168242*^9}}],

Cell[BoxData["\<\"Welcome to Quantum`Notation`\\nA Mathematica package for \
Quantum calculations in Dirac bra-ket notation\\nby Jos\[EAcute] Luis G\
\[OAcute]mez-Mu\[NTilde]oz\\n\\nThe Mathematica variable $RecursionLimit has \
been set to 25600 so that large Quantum calculations can be \
performed.\\n\\nExecute SetQuantumAliases[] in order to use the keyboard to \
enter quantum objects in Dirac's notation\\nSetQuantumAliases[] must be \
executed again in each new notebook that is created, only one time per \
notebook.\"\>"], "Output",
 CellChangeTimes->{3.473706072085197*^9, 3.473870593901499*^9, 
  3.474948441275352*^9, 3.475680074681898*^9}],

Cell[BoxData["\<\"ALIASES:\\n[ESC]ket[ESC]        ket \
template\\n[ESC]bra[ESC]        bra template\\n[ESC]braket[ESC]     braket \
template\\n[ESC]op[ESC]         operator template\\n[ESC].[ESC]          \
quantum product symbol (operator application, inner product and outer \
product)\\n[ESC]on[ESC]         quantum product symbol (operator application, \
inner product and outer product)\\n[ESC]tp[ESC]         tensor product symbol \
(outer product)\\n[ESC]eval[ESC]       eigenvalue-label \
template\\n[ESC]eket[ESC]       eigenstate template\\n[ESC]eeket[ESC]      \
two-operators-eigenstate template\\n[ESC]eeeket[ESC]     \
three-operators-eigentstate template\\n[ESC]ebra[ESC]       bra of eigenstate \
template\\n[ESC]eebra[ESC]      bra of two-operators-eigenstate \
template\\n[ESC]eeebra[ESC]     bra of three-operators-eigentstate \
template\\n[ESC]ebraket[ESC]    braket of eigenstates \
template\\n[ESC]eebraket[ESC]   braket of two-operators-eigenstates \
template\\n[ESC]eeebraket[ESC]  braket of three-operators-eigentstate \
template\\n[ESC]ketbra[ESC]     operator (matrix) element \
template\\n[ESC]eketbra[ESC]    operator (matrix) element \
template\\n[ESC]eeketbra[ESC]   operator (matrix) element \
template\\n[ESC]eeeketbra[ESC]  operator (matrix) element \
template\\n[ESC]her[ESC]        hermitian conjugate template\\n[ESC]con[ESC]  \
      complex conjugate template\\n[ESC]norm[ESC]       quantum norm template\
\\n[ESC]tr[ESC]         partial trace template\\n\\nSetQuantumAliases[] must \
be executed again in each new notebook that is created, only one time per \
notebook.\"\>"], "Output",
 CellChangeTimes->{3.473706072085197*^9, 3.473870593901499*^9, 
  3.474948441275352*^9, 3.47568007487339*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"tmp", "=", 
  RowBox[{
   RowBox[{"f", "  ", 
    RowBox[{"Dot", "[", 
     RowBox[{
      RowBox[{"f", "[", "a", "]"}], ",", "b", ",", 
      RowBox[{"g", " ", 
       RowBox[{"Dot", "[", 
        RowBox[{"c", ",", 
         RowBox[{"h", " ", 
          RowBox[{"Muu", "[", 
           RowBox[{"i", ",", "j"}], "]"}]}]}], "]"}]}], ",", "NN"}], "]"}]}], 
   "\[Equal]", "0"}]}], "\[IndentingNewLine]", 
 RowBox[{"dotRetain", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"c", ",", 
     RowBox[{"f", "[", "_", "]"}], ",", 
     RowBox[{"Tensor", "[", 
      RowBox[{"M", ",", "___"}], "]"}], ",", "NN"}], "}"}], ",", "tmp"}], 
  "]"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.4414798316159267`*^9, 3.4414799119030123`*^9}, {
   3.441480059284851*^9, 3.441480078581457*^9}, {3.4414801524892473`*^9, 
   3.44148016507143*^9}, {3.441480238151682*^9, 3.441480239589179*^9}, {
   3.4414804077873096`*^9, 3.441480409093494*^9}, {3.441480529400538*^9, 
   3.441480561616487*^9}, 3.441495303323456*^9, {3.44215554387464*^9, 
   3.4421555573107758`*^9}, 3.442155647829315*^9, {3.442157915909608*^9, 
   3.442157926185009*^9}, {3.442157962810833*^9, 3.442158050191307*^9}, {
   3.442325429483375*^9, 3.4423254303193817`*^9}, {3.4423267099465237`*^9, 
   3.442326822380217*^9}, {3.442326867401567*^9, 3.4423268690703*^9}, {
   3.4423269482390327`*^9, 3.442326988314486*^9}, {3.442327076272561*^9, 
   3.442327114968834*^9}, {3.442327177132053*^9, 3.442327377055697*^9}, {
   3.442327535773744*^9, 3.442327595783338*^9}, 3.442327840318947*^9, {
   3.44232788615593*^9, 3.442328143485075*^9}, {3.442328177844695*^9, 
   3.4423282625754757`*^9}, {3.442328324295557*^9, 3.442328415828949*^9}, {
   3.442328448450449*^9, 3.4423284538781023`*^9}, {3.4423285518181353`*^9, 
   3.4423286267165003`*^9}, {3.442328711206098*^9, 3.4423287546627693`*^9}, {
   3.442328790112673*^9, 3.442328809768566*^9}, {3.4423288584995613`*^9, 
   3.442328927475321*^9}, {3.442328962661833*^9, 3.442329057014509*^9}, {
   3.442329094615479*^9, 3.442329158360649*^9}, {3.4423292036734333`*^9, 
   3.442329206378044*^9}, {3.4423294955144367`*^9, 3.442329503520817*^9}, {
   3.442329561980441*^9, 3.442329713486931*^9}, {3.442329816766375*^9, 
   3.442329856438596*^9}, {3.4423301023656387`*^9, 3.442330155991027*^9}, {
   3.4423302412475758`*^9, 3.442330243640114*^9}, {3.442330284383284*^9, 
   3.4423303988118153`*^9}, {3.442330441948924*^9, 3.442330524382574*^9}, {
   3.442330559716427*^9, 3.442330562772423*^9}, {3.442330594785062*^9, 
   3.442330626891837*^9}, {3.44233067761763*^9, 3.4423306930056753`*^9}, {
   3.442330742672317*^9, 3.4423307489869432`*^9}, {3.442330788446477*^9, 
   3.442330790651145*^9}, {3.442331939167644*^9, 3.442332123881488*^9}, {
   3.4423321766211767`*^9, 3.442332226415184*^9}, {3.442332272311534*^9, 
   3.44233227633672*^9}, {3.442332311314994*^9, 3.442332442786646*^9}, {
   3.442332473499352*^9, 3.4423325346794863`*^9}, {3.4423325907472067`*^9, 
   3.442332592535604*^9}, {3.442332637312127*^9, 3.442332736910507*^9}, {
   3.442332768181959*^9, 3.442332834224168*^9}, {3.442332878435655*^9, 
   3.442333180965851*^9}, {3.442333395890624*^9, 3.4423334401845293`*^9}, 
   3.442333734178647*^9, 3.442333854388027*^9, {3.44233415713632*^9, 
   3.442334169353437*^9}, {3.4423343537258587`*^9, 3.442334385595347*^9}, {
   3.442334721100235*^9, 3.442334728598175*^9}, {3.442334761525817*^9, 
   3.442334833884837*^9}, {3.442335046522387*^9, 3.442335107324807*^9}, {
   3.442335390066658*^9, 3.442335417014793*^9}, {3.442335515410983*^9, 
   3.442335518140835*^9}, {3.442335628985551*^9, 3.442335648518759*^9}, 
   3.442335685058312*^9, {3.442335772145591*^9, 3.44233585093614*^9}, {
   3.442335906894555*^9, 3.4423359104953547`*^9}, 3.442335989729257*^9, {
   3.44233602444876*^9, 3.442336047929668*^9}, 3.442336078918407*^9, {
   3.4423361200224257`*^9, 3.442336135437738*^9}, {3.4423361667699127`*^9, 
   3.442336196403296*^9}, {3.442336243468473*^9, 3.442336275809093*^9}, {
   3.442336325879366*^9, 3.442336361048769*^9}, {3.442336392448255*^9, 
   3.442336405492494*^9}, 3.442336742135026*^9, 3.4423368038984537`*^9, {
   3.4423368620951347`*^9, 3.4423368864477253`*^9}, 3.442336956572343*^9, {
   3.442337050700603*^9, 3.442337063416991*^9}, {3.442337095253454*^9, 
   3.4423371227269*^9}, {3.442337153525774*^9, 3.442337189396414*^9}, {
   3.442337308323732*^9, 3.44233731190243*^9}, {3.442337398361594*^9, 
   3.4423374045718203`*^9}, {3.442337454464739*^9, 3.442337498571745*^9}, {
   3.44233757014986*^9, 3.442337581084426*^9}, {3.442337726131319*^9, 
   3.4423377429672194`*^9}, {3.442337888011318*^9, 3.442338037471109*^9}, {
   3.442338114578554*^9, 3.4423382220645943`*^9}, {3.442338373460085*^9, 
   3.442338419939048*^9}, {3.442338455419594*^9, 3.4423384748821373`*^9}, {
   3.442338526012887*^9, 3.442338550410981*^9}, {3.442338601813077*^9, 
   3.4423386490559807`*^9}, {3.442338691841138*^9, 3.442338693624989*^9}, {
   3.442374856389854*^9, 3.442374930395978*^9}, {3.442374994875949*^9, 
   3.442375008698938*^9}, {3.442375067478459*^9, 3.44237509178255*^9}, {
   3.44237513835144*^9, 3.442375146829373*^9}, {3.442375179657394*^9, 
   3.442375360870329*^9}, {3.4423771901899776`*^9, 3.442377206151188*^9}, {
   3.4423772740828323`*^9, 3.442377275365541*^9}, {3.442377494804845*^9, 
   3.4423774960596247`*^9}, {3.442377614305337*^9, 3.442377625916527*^9}, {
   3.442377786130981*^9, 3.4423779952498913`*^9}, {3.442378042016726*^9, 
   3.442378042590835*^9}, {3.442378121408977*^9, 3.442378124016981*^9}, 
   3.4423782054009647`*^9, {3.4424081775585546`*^9, 3.442408282362433*^9}, {
   3.4424083206958437`*^9, 3.44240843786021*^9}, {3.442408493657445*^9, 
   3.4424085086047783`*^9}, {3.442408539552579*^9, 3.442408540654942*^9}, {
   3.442408571309167*^9, 3.4424085718018637`*^9}, 3.4424086675268087`*^9, {
   3.442408718335307*^9, 3.4424087642215357`*^9}, {3.442408795036869*^9, 
   3.4424088071221848`*^9}, {3.442408854570743*^9, 3.442408857120162*^9}, 
   3.442408902862526*^9, {3.442408960659008*^9, 3.442408964687566*^9}, {
   3.442409070669318*^9, 3.442409165217971*^9}, {3.442409238179606*^9, 
   3.442409290057591*^9}, {3.4424093231432323`*^9, 3.442409325663995*^9}, {
   3.442409446065982*^9, 3.442409573012968*^9}, {3.442409657154038*^9, 
   3.442409669150581*^9}, {3.442409733882348*^9, 3.4424098015559587`*^9}, {
   3.4424098451536083`*^9, 3.442409880899982*^9}, {3.442409924341864*^9, 
   3.442410065362424*^9}, {3.442410115934947*^9, 3.442410163591386*^9}, {
   3.4424102310411253`*^9, 3.442410373748753*^9}, {3.44241041019004*^9, 
   3.4424104697563457`*^9}, {3.446143250703212*^9, 3.4461432859288054`*^9}, {
   3.4464670752564697`*^9, 3.446467089929531*^9}, {3.446467479725491*^9, 
   3.4464674995057383`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"f", " ", 
   RowBox[{
    RowBox[{"f", "[", "a", "]"}], ".", "b", ".", 
    RowBox[{"(", 
     RowBox[{"g", " ", 
      RowBox[{"c", ".", 
       RowBox[{"(", 
        RowBox[{"h", " ", 
         InterpretationBox[
          SubsuperscriptBox["M", 
           StyleBox[
            RowBox[{"i", "j"}],
            StripOnInput->False,
            ShowContents->False], 
           RowBox[{"i", "j"}]],
          TensorCalculus4V6`Tensorial`Tensor[
          Combinatorica`M, {$CellContext`i, $CellContext`j}, {
           TensorCalculus4V6`Tensorial`Void, 
            TensorCalculus4V6`Tensorial`Void}],
          BaseStyle->{AutoMultiplicationSymbol -> False},
          Editable->False]}], ")"}]}]}], ")"}], ".", "NN"}]}], "\[Equal]", 
  "0"}]], "Output",
 CellChangeTimes->{3.4737060723243437`*^9, 3.47387059473978*^9, 
  3.474948441514957*^9, 3.4756800754541492`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"b", " ", "f", " ", "g", " ", "h", " ", 
   RowBox[{
    RowBox[{"f", "[", "a", "]"}], ".", "c", ".", 
    InterpretationBox[
     SubsuperscriptBox["M", 
      StyleBox[
       RowBox[{"i", "j"}],
       StripOnInput->False,
       ShowContents->False], 
      RowBox[{"i", "j"}]],
     TensorCalculus4V6`Tensorial`Tensor[
     Combinatorica`M, {$CellContext`i, $CellContext`j}, {
      TensorCalculus4V6`Tensorial`Void, TensorCalculus4V6`Tensorial`Void}],
     BaseStyle->{AutoMultiplicationSymbol -> False},
     Editable->False], ".", "NN"}]}], "\[Equal]", "0"}]], "Output",
 CellChangeTimes->{3.4737060723243437`*^9, 3.47387059473978*^9, 
  3.474948441514957*^9, 3.47568007547412*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Indices4D", "=", 
   RowBox[{"{", 
    RowBox[{"0", ",", "1", ",", "2", ",", "3"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"DeclareIndexFlavor", "[", 
  RowBox[{"{", 
   RowBox[{"field", ",", "Green"}], "}"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"DeclareIndexFlavor", "[", 
  RowBox[{"{", 
   RowBox[{"space", ",", "Red"}], "}"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"DeclareBaseIndices", "[", 
  RowBox[{"Indices4D", ",", 
   RowBox[{"{", 
    RowBox[{"field", ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "2"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"space", ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "2", ",", "3"}], "}"}]}], "}"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"DefineTensorShortcuts", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\[CurlyPhi]", ",", "\[Psi]", ",", "m", ",", "k"}], "}"}], ",", 
     "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "x", ",", "y", ",", "dx", ",", "\[Xi]", ",", "b", ",", "r", ",", "zero",
        ",", "\[CurlyPhi]", ",", "\[Psi]", ",", "\[Psi]c", ",", "J", ",", "K",
        ",", "P", ",", "a", ",", "k", ",", "e", ",", "p", ",", "q", ",", "dp",
        ",", "dq", ",", "j", ",", "A"}], "}"}], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "x", ",", "k", ",", "g", ",", "\[Delta]", " ", ",", "\[Sigma]", ",", 
       "zero", ",", "\[Omega]", ",", "\[Omega]1", ",", "\[Omega]2", ",", 
       "\[Omega]s", ",", "\[Omega]a", ",", "\[Eta]", ",", "\[CapitalLambda]", 
       ",", "A", ",", "B", ",", "M", ",", "\[Delta]\[Omega]", ",", 
       "\[Delta]\[Alpha]", ",", "q", ",", "p", ",", "R", ",", "T", ",", 
       "\[Theta]", ",", "S", ",", "F"}], "}"}], ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\[CapitalGamma]", ",", "\[Epsilon]"}], "}"}], ",", "3"}], 
    "}"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"labels", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{"x", ",", "\[Delta]", ",", "g", ",", " ", "\[CapitalGamma]"}], 
    "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"DeclareZeroTensor", "[", "zero", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"TensorLabelFormat", "[", 
   RowBox[{"zero", ",", "0"}], "]"}], "\[IndentingNewLine]"}], "\n", 
 RowBox[{"SetTensorValues", "[", 
  RowBox[{
   RowBox[{"\[Delta]ud", "[", 
    RowBox[{"i", ",", "j"}], "]"}], ",", 
   RowBox[{"IdentityMatrix", "[", "4", "]"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Delta]ud", "[", 
   RowBox[{"i", ",", "j"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"%", "//", 
    RowBox[{"EinsteinArray", "[", "]"}]}], "//", "MatrixForm"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"SetTensorValues", "[", 
  RowBox[{
   RowBox[{"\[Eta]ud", "[", 
    RowBox[{"i", ",", "j"}], "]"}], ",", 
   RowBox[{"DiagonalMatrix", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "1"}], ",", "1", ",", "1", ",", "1"}], "}"}], "]"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"SetTensorValues", "[", 
  RowBox[{
   RowBox[{"\[Eta]uu", "[", 
    RowBox[{"i", ",", "j"}], "]"}], ",", 
   RowBox[{"DiagonalMatrix", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "1"}], ",", "1", ",", "1", ",", "1"}], "}"}], "]"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"SetTensorValues", "[", 
  RowBox[{
   RowBox[{"\[Eta]dd", "[", 
    RowBox[{"i", ",", "j"}], "]"}], ",", 
   RowBox[{"DiagonalMatrix", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "1"}], ",", "1", ",", "1", ",", "1"}], "}"}], "]"}]}], 
  "]"}], "\[IndentingNewLine]", "CompleteBaseIndices"}], "Input",
 InitializationGroup->True,
 CellChangeTimes->{{3.436020368347515*^9, 3.436020390441309*^9}, {
   3.4360204238898*^9, 3.436020577439741*^9}, {3.4360206179318542`*^9, 
   3.43602079480962*^9}, {3.436020889297741*^9, 3.436020904966052*^9}, {
   3.436022121010192*^9, 3.436022121269697*^9}, {3.4360230651849737`*^9, 
   3.436023070752324*^9}, {3.436024447428266*^9, 3.436024450393787*^9}, {
   3.4367051083250647`*^9, 3.43670512312353*^9}, {3.43670528138971*^9, 
   3.436705285267045*^9}, {3.436712746279704*^9, 3.43671274691794*^9}, {
   3.436931546287114*^9, 3.436931560754286*^9}, {3.437261352045418*^9, 
   3.437261378438944*^9}, {3.437261442613639*^9, 3.4372614494796047`*^9}, {
   3.4372702660783157`*^9, 3.4372702667405987`*^9}, 3.4377501504745283`*^9, 
   3.439275680561186*^9, {3.440446612392281*^9, 3.44044661902267*^9}, {
   3.440448963214164*^9, 3.440448964000544*^9}, 3.440506341166115*^9, {
   3.440506842102569*^9, 3.440506918013275*^9}, {3.440507096389791*^9, 
   3.440507109884927*^9}, {3.4405101097174263`*^9, 3.440510131064917*^9}, {
   3.44051535056356*^9, 3.4405153586980762`*^9}, {3.440685844986697*^9, 
   3.440685847121255*^9}, {3.440686151199918*^9, 3.4406861592561693`*^9}, {
   3.440870976789603*^9, 3.440870981403695*^9}, {3.440871112271434*^9, 
   3.440871115003346*^9}, {3.4410320143176928`*^9, 3.44103202624022*^9}, {
   3.4415526217460833`*^9, 3.441552622045885*^9}, {3.4420676678735533`*^9, 
   3.442067669663418*^9}, 3.442067713278734*^9, {3.442085352730816*^9, 
   3.442085353012658*^9}, {3.442085452624962*^9, 3.442085460079864*^9}, {
   3.44215276705504*^9, 3.4421527759436417`*^9}, {3.44228799233042*^9, 
   3.442287993044688*^9}, {3.442499405081414*^9, 3.442499435788619*^9}, {
   3.442499624819393*^9, 3.442499653647401*^9}, {3.442499689466976*^9, 
   3.4424997146922407`*^9}, {3.442500754817728*^9, 3.442500827472344*^9}, {
   3.4425881160737677`*^9, 3.442588122101013*^9}, {3.4425881597067842`*^9, 
   3.442588160720245*^9}, {3.442591297101801*^9, 3.442591297667486*^9}, {
   3.4425945117271023`*^9, 3.442594512693989*^9}, {3.44276051513384*^9, 
   3.4427605152944508`*^9}, 3.442936813449663*^9, {3.442937796716764*^9, 
   3.4429377969585333`*^9}, {3.443373054555537*^9, 3.443373111988998*^9}, {
   3.443373444370564*^9, 3.443373445191268*^9}, {3.443536381013917*^9, 
   3.4435363863560457`*^9}, {3.445693718345175*^9, 3.445693719249711*^9}, {
   3.4457030489284487`*^9, 3.445703066896632*^9}, {3.445788555899086*^9, 
   3.445788556376027*^9}, {3.445859898414544*^9, 3.445859899365704*^9}, {
   3.445859949645441*^9, 3.445859960292021*^9}, {3.445860022950509*^9, 
   3.445860023777638*^9}, {3.4458600577095623`*^9, 3.445860091409301*^9}, {
   3.445875209896043*^9, 3.445875211151321*^9}, {3.445876400145979*^9, 
   3.4458764077203693`*^9}, {3.456164589787706*^9, 3.456164590882141*^9}, {
   3.46289568036205*^9, 3.462895689598878*^9}, {3.466952687920639*^9, 
   3.466952694307152*^9}, {3.467378641772016*^9, 3.46737864245228*^9}, {
   3.467553167593788*^9, 3.4675531682201223`*^9}, {3.468361117611134*^9, 
   3.4683611232921047`*^9}, {3.469376041207367*^9, 3.4693760426667624`*^9}, {
   3.473706065606925*^9, 3.47370606634293*^9}, {3.4737063605107317`*^9, 
   3.4737063637515583`*^9}, {3.473728854215054*^9, 3.473728862886978*^9}, {
   3.473876255753834*^9, 3.473876259509295*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0", ",", "1", ",", "2", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"field", ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "2"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"space", ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "2", ",", "3"}], "}"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.473706072583222*^9, 3.473706073126697*^9}, 
   3.473706367358286*^9, 3.473728866529778*^9, 3.473869948990314*^9, {
   3.4738705949038258`*^9, 3.473870595434404*^9}, 3.4738762619598207`*^9, 
   3.474948441763872*^9, 3.475680075647875*^9}]
}, Open  ]],

Cell[TextData[StyleBox["Some matrix definitions from Tensorial", "Text"]], \
"EmphasisText",
 CellChangeTimes->{{3.437829367864957*^9, 3.437829389341446*^9}, {
  3.440059815200076*^9, 3.440059818550119*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"MCommutator", "::", "usage"}], " ", "=", " ", 
   "\"\<MCommutator[A,B] calculates the commutator of matrices A and B\>\""}],
   ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"MCommutator", "[", 
     RowBox[{"A_", ",", "B_"}], "]"}], ":=", 
    RowBox[{
     RowBox[{"A", ".", "B"}], "-", 
     RowBox[{"B", ".", "A"}]}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"subInt", "=", 
    RowBox[{
     RowBox[{
      RowBox[{"IntegralOp", "[", 
       RowBox[{"a_List", ",", "intgA_"}], "]"}], ".", 
      RowBox[{"(", 
       RowBox[{"IntegralOp", "[", 
        RowBox[{"b_List", ",", "intgB_"}], "]"}], ")"}]}], "->", 
     RowBox[{"IntegralOp", "[", 
      RowBox[{
       RowBox[{"xFlatten", "[", 
        RowBox[{"{", 
         RowBox[{"a", ",", "b"}], "}"}], "]"}], ",", 
       RowBox[{"intgA", ".", "intgB"}]}], "]"}]}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"MakeBoxes", "[", 
   RowBox[{
    RowBox[{"MatrixExp", "[", "x_", "]"}], ",", 
    RowBox[{"form", ":", 
     RowBox[{"StandardForm", "|", "TraditionalForm"}]}]}], "]"}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{"InterpretationBox", "[", 
     RowBox[{"#1", ",", "#2", ",", "\[IndentingNewLine]", 
      RowBox[{"SyntaxForm", "\[Rule]", "Automatic"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"Editable", "\[Rule]", "False"}]}], "]"}], "&"}], " ", "@@", 
   "\n", "    ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"SuperscriptBox", "[", 
      RowBox[{"\"\<\[ExponentialE]\>\"", ",", 
       RowBox[{"MakeBoxes", "[", 
        RowBox[{"x", ",", "form"}], "]"}]}], "]"}], ",", " ", 
     RowBox[{"MatrixExp", "[", "x", "]"}]}], "}"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"MakeBoxes", "[", 
    RowBox[{
     RowBox[{"DiracConjugate", "[", "a_", "]"}], ",", 
     RowBox[{"form", ":", 
      RowBox[{"StandardForm", "|", "TraditionalForm"}]}]}], "]"}], ":=", 
   RowBox[{
    RowBox[{
     RowBox[{"InterpretationBox", "[", 
      RowBox[{"#1", ",", "#2", ",", "\[IndentingNewLine]", 
       RowBox[{"SyntaxForm", "\[Rule]", "Automatic"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"Editable", "\[Rule]", "False"}]}], "]"}], "&"}], " ", "@@", 
    "\n", "    ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"ToBoxes", "[", 
       RowBox[{"OverBar", "[", "a", "]"}], "]"}], ",", " ", 
      RowBox[{"DiracConjugate", "[", "a", "]"}]}], "}"}]}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"MakeBoxes", "[", 
    RowBox[{
     RowBox[{"ConjugateTranspose", "[", "a_", "]"}], ",", 
     RowBox[{"form", ":", 
      RowBox[{"StandardForm", "|", "TraditionalForm"}]}]}], "]"}], ":=", 
   RowBox[{
    RowBox[{
     RowBox[{"InterpretationBox", "[", 
      RowBox[{"#1", ",", "#2", ",", "\[IndentingNewLine]", 
       RowBox[{"SyntaxForm", "\[Rule]", "Automatic"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"Editable", "\[Rule]", "False"}]}], "]"}], "&"}], " ", "@@", 
    "\n", "    ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"SuperscriptBox", "[", 
       RowBox[{
        RowBox[{"MakeBoxes", "[", 
         RowBox[{"a", ",", "form"}], "]"}], ",", "\"\<\[Dagger]\>\""}], "]"}],
       ",", " ", 
      RowBox[{"ConjugateTranspose", "[", "a", "]"}]}], "}"}]}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"MakeBoxes", "[", 
    RowBox[{
     RowBox[{"Transpose", "[", "a_", "]"}], ",", 
     RowBox[{"form", ":", 
      RowBox[{"StandardForm", "|", "TraditionalForm"}]}]}], "]"}], ":=", 
   RowBox[{
    RowBox[{
     RowBox[{"InterpretationBox", "[", 
      RowBox[{"#1", ",", "#2", ",", "\[IndentingNewLine]", 
       RowBox[{"SyntaxForm", "\[Rule]", "Automatic"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"Editable", "\[Rule]", "False"}]}], "]"}], "&"}], " ", "@@", 
    "\n", "    ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"SuperscriptBox", "[", 
       RowBox[{
        RowBox[{"MakeBoxes", "[", 
         RowBox[{"a", ",", "form"}], "]"}], ",", "\"\<T\>\""}], "]"}], ",", 
      " ", 
      RowBox[{"Transpose", "[", "a", "]"}]}], "}"}]}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Unprotect", "[", "Transpose", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Transpose", "[", 
   RowBox[{"Dot", "[", 
    RowBox[{"a_", ",", "b_"}], "]"}], "]"}], ":=", 
  RowBox[{"Dot", "[", 
   RowBox[{
    RowBox[{"Transpose", "[", "b", "]"}], ",", 
    RowBox[{"Transpose", "[", "a", "]"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Transpose", "[", 
   RowBox[{"Times", "[", 
    RowBox[{"c_", ",", 
     RowBox[{"Dot", "[", 
      RowBox[{"a_", ",", "b_"}], "]"}]}], "]"}], "]"}], ":=", 
  RowBox[{"c", " ", 
   RowBox[{"Dot", "[", 
    RowBox[{
     RowBox[{"Transpose", "[", "b", "]"}], ",", 
     RowBox[{"Transpose", "[", "a", "]"}]}], "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Transpose", "[", 
   RowBox[{"Transpose", "[", "a_", "]"}], "]"}], ":=", 
  "a"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Transpose", "[", 
   RowBox[{"a_", "+", "b_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"Transpose", "[", "a", "]"}], "+", 
   RowBox[{"Transpose", "[", "b", "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Protect", "[", "Transpose", "]"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Unprotect", "[", "ConjugateTranspose", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ConjugateTranspose", "[", 
   RowBox[{"Dot", "[", 
    RowBox[{"a_", ",", "b_"}], "]"}], "]"}], ":=", 
  RowBox[{"Dot", "[", 
   RowBox[{
    RowBox[{"ConjugateTranspose", "[", "b", "]"}], ",", 
    RowBox[{"ConjugateTranspose", "[", "a", "]"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ConjugateTranspose", "[", 
   RowBox[{"Times", "[", 
    RowBox[{"c_", ",", 
     RowBox[{"Dot", "[", 
      RowBox[{"a_", ",", "b_"}], "]"}]}], "]"}], "]"}], ":=", 
  RowBox[{"c", " ", 
   RowBox[{"Dot", "[", 
    RowBox[{
     RowBox[{"ConjugateTranspose", "[", "b", "]"}], ",", 
     RowBox[{"ConjugateTranspose", "[", "a", "]"}]}], 
    "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ConjugateTranspose", "[", 
   RowBox[{"ConjugateTranspose", "[", "a_", "]"}], "]"}], ":=", 
  "a"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ConjugateTranspose", "[", 
   RowBox[{"a_", "+", "b_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"ConjugateTranspose", "[", "a", "]"}], "+", 
   RowBox[{"ConjugateTranspose", "[", "b", "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ConjugateTranspose", "[", 
   RowBox[{"Exp", "[", "a_", "]"}], "]"}], ":=", 
  RowBox[{"Exp", "[", 
   RowBox[{"ConjugateTranspose", "[", "a", "]"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ConjugateTranspose", "[", 
   RowBox[{"Times", "[", 
    RowBox[{"a_", ",", "b_"}], "]"}], "]"}], ":=", 
  RowBox[{"Times", "[", 
   RowBox[{
    RowBox[{"ConjugateTranspose", "[", "b", "]"}], ",", 
    RowBox[{"ConjugateTranspose", "[", "a", "]"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ConjugateTranspose", "[", 
   RowBox[{"Rule", "[", 
    RowBox[{"a_", ",", "b_"}], "]"}], "]"}], ":=", 
  RowBox[{"Rule", "[", 
   RowBox[{
    RowBox[{"ConjugateTranspose", "[", "a", "]"}], ",", 
    RowBox[{"ConjugateTranspose", "[", "b", "]"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ConjugateTranspose", "[", "I", "]"}], ":=", 
  RowBox[{"-", "I"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ConjugateTranspose", "[", 
   RowBox[{"-", "I"}], "]"}], ":=", "I"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ConjugateTranspose", "[", "1", "]"}], ":=", 
  "1"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Protect", "[", "ConjugateTranspose", "]"}], ";"}]}], "Input",
 InitializationCell->True,
 InitializationGroup->True,
 CellChangeTimes->{{3.437745831654683*^9, 3.4377458379052563`*^9}, {
   3.43774605931605*^9, 3.437746060395503*^9}, {3.437747344160523*^9, 
   3.437747344677271*^9}, 3.437747410998065*^9, {3.4378296898794403`*^9, 
   3.437829853287517*^9}, {3.437829897004636*^9, 3.437829947423896*^9}, {
   3.437830015976746*^9, 3.4378300497535563`*^9}, {3.4429395725910397`*^9, 
   3.442939576462111*^9}, {3.4429400399918747`*^9, 3.4429400421836767`*^9}, {
   3.442943240381544*^9, 3.442943260219295*^9}, {3.4429433042496443`*^9, 
   3.442943309042818*^9}, {3.4430165137549257`*^9, 3.4430165148133574`*^9}, 
   3.4537531706429358`*^9, 3.453753241148031*^9, {3.4537532867989473`*^9, 
   3.453753300193882*^9}, {3.453753442289719*^9, 3.453753442991172*^9}, 
   3.453753511497633*^9, {3.453753796392581*^9, 3.4537538007264633`*^9}, {
   3.453753838040832*^9, 3.453753849266327*^9}, {3.453753890779572*^9, 
   3.453753906789912*^9}, {3.45375403883702*^9, 3.453754076288579*^9}, 
   3.4537541625000677`*^9, {3.453754272485811*^9, 3.453754277014329*^9}, {
   3.453754544789794*^9, 3.453754553812482*^9}, {3.453754719991167*^9, 
   3.453754769760741*^9}, {3.453754842802493*^9, 3.453754847413274*^9}, {
   3.45375490751326*^9, 3.4537549799370203`*^9}, {3.45383461361025*^9, 
   3.453834647838879*^9}, {3.453834742235395*^9, 3.453834779637401*^9}, {
   3.454329530074235*^9, 3.454329538161316*^9}}],

Cell["Other definitions", "Text",
 CellChangeTimes->{{3.450181555541119*^9, 3.4501815767215137`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "n", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"x", "[", 
     RowBox[{"n_", ",", "i_"}], "]"}], ":=", 
    RowBox[{"xuu", "[", 
     RowBox[{
      RowBox[{"field", "@", "n"}], ",", "i"}], "]"}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{"to", " ", "eliminate", " ", "typing"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"k", "[", 
    RowBox[{"n_", ",", "i_"}], "]"}], ":=", 
   RowBox[{"kud", "[", 
    RowBox[{
     RowBox[{"field", "@", "n"}], ",", "i"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"q", "[", 
    RowBox[{"n_", ",", "i_"}], "]"}], ":=", 
   RowBox[{"qud", "[", 
    RowBox[{
     RowBox[{"field", "@", "n"}], ",", "i"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"p", "[", 
    RowBox[{"n_", ",", "i_"}], "]"}], ":=", 
   RowBox[{"pud", "[", 
    RowBox[{
     RowBox[{"field", "@", "n"}], ",", "i"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"x", "[", "n_", "]"}], ":=", 
    RowBox[{"xu", "[", 
     RowBox[{"field", "@", "n"}], "]"}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{"to", " ", "eliminate", " ", "typing"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"k", "[", "n_", "]"}], ":=", 
   RowBox[{"ku", "[", 
    RowBox[{"field", "@", "n"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"q", "[", "n_", "]"}], ":=", 
   RowBox[{"qu", "[", 
    RowBox[{"field", "@", "n"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"y", "[", "n_", "]"}], ":=", 
   RowBox[{"yu", "[", 
    RowBox[{"field", "@", "n"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sepTX", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"k", "[", 
      RowBox[{"m_", ",", "i_"}], "]"}], 
     RowBox[{"x", "[", 
      RowBox[{"n_", ",", "i_"}], "]"}]}], ":>", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"AtomQ", "[", "i", "]"}], "&&", 
       RowBox[{"!", 
        RowBox[{"IntegerQ", "[", "i", "]"}]}]}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{"k", "[", 
         RowBox[{"m", ",", 
          RowBox[{"space", "@", "i"}]}], "]"}], 
        RowBox[{"x", "[", 
         RowBox[{"n", ",", 
          RowBox[{"space", "@", "i"}]}], "]"}]}], "-", 
       RowBox[{
        RowBox[{"k", "[", 
         RowBox[{"m", ",", "0"}], "]"}], 
        RowBox[{"x", "[", 
         RowBox[{"n", ",", "0"}], "]"}]}]}], ",", 
      RowBox[{
       RowBox[{"k", "[", 
        RowBox[{"m", ",", "i"}], "]"}], 
       RowBox[{"x", "[", 
        RowBox[{"n", ",", "i"}], "]"}]}]}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Imply", "=", "\"\<\\n\[DoubleRightArrow] \>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"imply", "=", "\"\< \[DoubleRightArrow] \>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Yield", "=", "\"\<\\n\[RightArrow] \>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"yield", "=", "\"\< \[LongRightArrow] \>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"back", "=", "\"\< \[LongLeftArrow]\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"and", "=", "\"\< and \>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"New", "=", "\"\<\\n\[FilledCircle] \>\""}], ";"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
   "Function", " ", "to", " ", "generate", " ", "IntegralOp", " ", 
    "variables", " ", "for", " ", 
    RowBox[{"F", "[", "n_", "]"}], " ", "in", " ", 
    RowBox[{"e1410", "."}]}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"xF", "[", "n_", "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"out", ",", "i"}], "}"}], ",", 
     RowBox[{
      RowBox[{"For", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"out", "=", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"x", "[", "1", "]"}], ",", "0", ",", "1"}], "}"}], 
           "}"}]}], ";", 
         RowBox[{"i", "=", "2"}]}], ",", 
        RowBox[{"i", "<=", "n"}], ",", 
        RowBox[{"i", "++"}], ",", 
        RowBox[{"AppendTo", "[", 
         RowBox[{"out", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"x", "[", "i", "]"}], ",", "0", ",", "1"}], "}"}]}], 
         "]"}]}], "]"}], ";", "\[IndentingNewLine]", "out"}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Fn", "[", "n_", "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"out", ",", "i", ",", "j"}], "}"}], ",", 
     RowBox[{
      RowBox[{"For", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"out", "=", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"x", "[", "1", "]"}], ",", "0", ",", "1"}], "}"}], 
           "}"}]}], ";", 
         RowBox[{"i", "=", "2"}]}], ",", 
        RowBox[{"i", "<=", "n"}], ",", 
        RowBox[{"i", "++"}], ",", 
        RowBox[{"AppendTo", "[", 
         RowBox[{"out", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"x", "[", "i", "]"}], ",", "0", ",", 
            RowBox[{"1", "-", 
             RowBox[{"Sum", "[", 
              RowBox[{
               RowBox[{"x", "[", 
                RowBox[{"j", "-", "1"}], "]"}], ",", 
               RowBox[{"{", 
                RowBox[{"j", ",", "2", ",", "i"}], "}"}]}], "]"}]}]}], 
           "}"}]}], "]"}]}], "]"}], ";", "\[IndentingNewLine]", "out"}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"DefPrint", "[", 
  RowBox[{"\"\<e1410\>\"", ",", 
   RowBox[{
    RowBox[{"IntegralOp", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"{", 
        RowBox[{"F", "[", "n_", "]"}], "}"}], "}"}], ",", "a__"}], "]"}], ":>", 
    RowBox[{"IntegralOp", "[", 
     RowBox[{
      RowBox[{"xF", "[", "n", "]"}], ",", 
      RowBox[{"a", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"n", "-", "1"}], ")"}], "!"}], " ", 
       RowBox[{"DiracDelta", "[", 
        RowBox[{
         RowBox[{"Sum", "[", 
          RowBox[{
           RowBox[{"x", "[", "i", "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "1", ",", "n"}], "}"}]}], "]"}], "-", "1"}], 
        "]"}]}]}], "]"}]}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"DefPrint", "[", 
  RowBox[{"\"\<e1427\>\"", ",", 
   RowBox[{
    RowBox[{"IntegralOp", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"{", "q", "}"}], "}"}], ",", 
      RowBox[{
       FractionBox["1", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"2", " ", "\[Pi]"}], ")"}], "d"]], 
       FractionBox[
        SuperscriptBox[
         RowBox[{"(", 
          SuperscriptBox["q", "2"], ")"}], "a"], 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox["q", "2"], "+", "D"}], ")"}], "b"]]}]}], "]"}], "->", 
    RowBox[{
     FractionBox[
      RowBox[{
       RowBox[{"Gamma", "[", 
        RowBox[{"b", "-", "a", "-", 
         RowBox[{"d", "/", "2"}]}], "]"}], 
       RowBox[{"Gamma", "[", 
        RowBox[{"a", "+", 
         RowBox[{"d", "/", "2"}]}], "]"}]}], 
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"4", " ", "\[Pi]"}], ")"}], 
        RowBox[{"d", "/", "2"}]], 
       RowBox[{"Gamma", "[", "b", "]"}], 
       RowBox[{"Gamma", "[", 
        RowBox[{"d", "/", "2"}], "]"}]}]], 
     SuperscriptBox["D", 
      RowBox[{"-", 
       RowBox[{"(", 
        RowBox[{"b", "-", "a", "-", 
         RowBox[{"d", "/", "2"}]}], ")"}]}]]}]}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"DefPrint", "[", 
  RowBox[{"\"\<e1427s\>\"", ",", 
   RowBox[{
    RowBox[{"IntegralOp", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"{", "q", "}"}], "}"}], ",", 
      FractionBox[
       SuperscriptBox[
        RowBox[{"(", 
         SuperscriptBox["q", "2"], ")"}], "a"], 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["q", "2"], "+", "D"}], ")"}], "b"]]}], "]"}], "->", 
    RowBox[{
     FractionBox[
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"2", " ", "\[Pi]"}], ")"}], "d"], 
       RowBox[{"Gamma", "[", 
        RowBox[{"b", "-", "a", "-", 
         RowBox[{"d", "/", "2"}]}], "]"}], 
       RowBox[{"Gamma", "[", 
        RowBox[{"a", "+", 
         RowBox[{"d", "/", "2"}]}], "]"}]}], 
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"4", " ", "\[Pi]"}], ")"}], 
        RowBox[{"d", "/", "2"}]], 
       RowBox[{"Gamma", "[", "b", "]"}], 
       RowBox[{"Gamma", "[", 
        RowBox[{"d", "/", "2"}], "]"}]}]], 
     SuperscriptBox["D", 
      RowBox[{"-", 
       RowBox[{"(", 
        RowBox[{"b", "-", "a", "-", 
         RowBox[{"d", "/", "2"}]}], ")"}]}]]}]}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"DefPrint", "[", 
   RowBox[{"\"\<e1426\>\"", ",", 
    RowBox[{
     RowBox[{"Gamma", "[", 
      RowBox[{
       RowBox[{"-", "n"}], "+", "\[CurlyEpsilon]"}], "]"}], ":>", 
     RowBox[{
      FractionBox[
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"-", "1"}], ")"}], "n"], 
       RowBox[{
        RowBox[{"(", "n", ")"}], "!"}]], 
      RowBox[{"(", 
       RowBox[{
        FractionBox["1", "\[CurlyEpsilon]"], "-", "\[Gamma]", "+", 
        RowBox[{"Sum", "[", 
         RowBox[{
          SuperscriptBox["k", 
           RowBox[{"-", "1"}]], ",", 
          RowBox[{"{", 
           RowBox[{"k", ",", "1", ",", "n"}], "}"}]}], "]"}]}], ")"}]}]}]}], 
   "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Same", "[", "exp_", "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "same", "}"}], ",", 
     RowBox[{
      RowBox[{"same", "=", 
       RowBox[{"SameQ", "[", 
        RowBox[{"exp", ",", "lastexp"}], "]"}]}], ";", 
      RowBox[{"lastexp", "=", "exp"}], ";", 
      RowBox[{"If", "[", 
       RowBox[{"same", ",", "\"\< <-Same\>\"", ",", "\"\< <-Different\>\""}], 
       "]"}]}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Same", "[", 
   RowBox[{"exp_", ",", "exp2_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "same", "}"}], ",", 
    RowBox[{
     RowBox[{"same", "=", 
      RowBox[{"SameQ", "[", 
       RowBox[{"exp", ",", "exp2"}], "]"}]}], ";", 
     RowBox[{"If", "[", 
      RowBox[{"same", ",", "\"\< <-Same\>\"", ",", "\"\< <-Different\>\""}], 
      "]"}]}]}], "]"}]}]}], "Input",
 InitializationCell->True,
 InitializationGroup->True,
 CellChangeTimes->{
  3.4520891119144506`*^9, {3.4541754217894783`*^9, 3.454175422807261*^9}, {
   3.454208743602154*^9, 3.454208763712376*^9}, {3.4563996054744987`*^9, 
   3.456399625358528*^9}, {3.4564000181435003`*^9, 3.456400054718358*^9}, {
   3.45640046871349*^9, 3.456400477653216*^9}, {3.456407192274132*^9, 
   3.456407209710795*^9}, {3.462895593021106*^9, 3.462895620834592*^9}, {
   3.466173483753552*^9, 3.46617362174076*^9}, {3.4661736787987547`*^9, 
   3.466173679643045*^9}, {3.467030982923038*^9, 3.467030994237833*^9}, {
   3.4677283853595743`*^9, 3.46772839501336*^9}, {3.468164648150546*^9, 
   3.468164670508459*^9}, {3.470069639942477*^9, 3.470069640977969*^9}, {
   3.47014361216177*^9, 3.47014361329108*^9}, {3.471116315525572*^9, 
   3.471116316342759*^9}, {3.471219248263928*^9, 3.471219250410758*^9}, {
   3.471288957579417*^9, 3.471288958504196*^9}, {3.4712890185015383`*^9, 
   3.47128903081495*^9}, {3.4712893966434937`*^9, 3.471289398685286*^9}, {
   3.4727329107727413`*^9, 3.472732918507249*^9}, {3.47273333770615*^9, 
   3.47273334552423*^9}, {3.472733474618957*^9, 3.472733477128887*^9}, {
   3.4727335775754423`*^9, 3.472733619675406*^9}, {3.472733696475116*^9, 
   3.472733707093194*^9}, {3.472733934915915*^9, 3.472733969331539*^9}, 
   3.472734040779107*^9, {3.472828849017872*^9, 3.472828862884631*^9}, {
   3.4728297833244753`*^9, 3.472829836764098*^9}, {3.473165155744347*^9, 
   3.4731651684077377`*^9}, {3.473165235944025*^9, 3.4731652477119703`*^9}, {
   3.4737060906670637`*^9, 3.473706100083468*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Op\[Delta]Integrand", "[", "exp_", "]"}], ":=", 
    RowBox[{"(*", 
     RowBox[{
     "computes", " ", "variations", " ", "of", " ", "integrand", " ", "wrt", 
      " ", "variations", " ", "in", " ", 
      RowBox[{"J", "'"}], 
      RowBox[{"s", "."}]}], "  ", "*)"}], 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"out", "=", "exp"}], ",", "opPos", ",", "op", ",", "ops", ",",
         "oparg", ",", "i", ",", "j", ",", "tmp0", ",", "tmp1", ",", "jPos", 
        ",", "xdebug", ",", "js", ",", "jarg", ",", "repl", ",", "jaccum", 
        ",", "dop", ",", "args", ",", "integrand", ",", "intI", ",", "ints", 
        ",", "intPos", ",", 
        RowBox[{"intRepl", "=", 
         RowBox[{"{", "}"}]}], ",", 
        RowBox[{"DEBUG", "=", "0"}]}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"intPos", "=", 
        RowBox[{"Position", "[", 
         RowBox[{"exp", ",", 
          RowBox[{"IntegralOp", "[", 
           RowBox[{"_", ",", "_"}], "]"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"ints", "=", 
        RowBox[{"Extract", "[", 
         RowBox[{"exp", ",", "intPos"}], "]"}]}], ";", "\[IndentingNewLine]", 
       
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"DEBUG", ">", "1"}], ",", 
         RowBox[{"Print", "[", "ints", "]"}]}], "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"intI", "=", "1"}], ",", 
         RowBox[{"intI", "<=", 
          RowBox[{"Length", "[", "ints", "]"}]}], ",", 
         RowBox[{"intI", "++"}], ",", 
         RowBox[{
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"DEBUG", ">", "0"}], ",", 
            RowBox[{"Print", "[", "intI", "]"}]}], "]"}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"args", ",", "integrand"}], "}"}], "=", 
           RowBox[{"Apply", "[", 
            RowBox[{"List", ",", 
             RowBox[{"ints", "[", 
              RowBox[{"[", "intI", "]"}], "]"}]}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"opPos", "=", 
           RowBox[{"Position", "[", 
            RowBox[{"integrand", ",", 
             RowBox[{"\[Delta]Op", "[", "_", "]"}]}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"ops", "=", 
           RowBox[{"Extract", "[", 
            RowBox[{"integrand", ",", "opPos"}], "]"}]}], ";", 
          RowBox[{"(*", 
           RowBox[{"list", " ", "of", " ", "\[Delta]Op"}], "*)"}], 
          "\[IndentingNewLine]", 
          RowBox[{"tmp0", "=", 
           RowBox[{"integrand", "/.", 
            RowBox[{
             RowBox[{"\[Delta]Op", "[", "_", "]"}], "->", "1"}]}]}], ";", 
          RowBox[{"(*", 
           RowBox[{
           "tmp0", " ", "integrand", " ", "without", " ", "\[Delta]Op"}], 
           "*)"}], "\[IndentingNewLine]", 
          RowBox[{"jPos", "=", 
           RowBox[{"Position", "[", 
            RowBox[{"tmp0", ",", 
             RowBox[{
              RowBox[{"J", "[", "_", "]"}], "|", 
              RowBox[{
               SuperscriptBox["J", "\[Dagger]"], "[", "_", "]"}]}]}], "]"}]}],
           ";", "\[IndentingNewLine]", 
          RowBox[{"js", "=", 
           RowBox[{"Extract", "[", 
            RowBox[{"tmp0", ",", "jPos"}], "]"}]}], ";", 
          RowBox[{"(*", 
           RowBox[{"list", " ", "of", " ", 
            RowBox[{"J", "'"}], "s"}], "*)"}], "\[IndentingNewLine]", 
          RowBox[{"repl", "=", 
           RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"For", "[", 
           RowBox[{
            RowBox[{"j", "=", "1"}], ",", 
            RowBox[{"j", "<=", 
             RowBox[{"Length", "[", "js", "]"}]}], ",", 
            RowBox[{"j", "++"}], ",", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"jarg", "=", 
              RowBox[{
               RowBox[{"js", "[", 
                RowBox[{"[", "j", "]"}], "]"}], "[", 
               RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
             RowBox[{"AppendTo", "[", 
              RowBox[{"repl", ",", 
               RowBox[{
                RowBox[{"jPos", "[", 
                 RowBox[{"[", "j", "]"}], "]"}], "->", 
                RowBox[{
                 RowBox[{"js", "[", 
                  RowBox[{"[", "j", "]"}], "]"}], ".", " ", 
                 RowBox[{"DiracDelta", "[", "jarg", "]"}]}]}]}], "]"}], 
             ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"tmp0", "=", 
           RowBox[{"ReplacePart", "[", 
            RowBox[{"tmp0", ",", "repl"}], "]"}]}], ";", 
          "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"For", "[", 
           RowBox[{
            RowBox[{"i", "=", "1"}], ",", 
            RowBox[{"i", "<=", 
             RowBox[{"Length", "[", "ops", "]"}]}], ",", 
            RowBox[{"i", "++"}], ",", 
            RowBox[{
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"DEBUG", ">", "1"}], ",", 
               RowBox[{"Print", "[", 
                RowBox[{"intI", ",", "\"\<:\>\"", ",", "i"}], "]"}]}], "]"}], 
             ";", "\[IndentingNewLine]", 
             RowBox[{"op", "=", 
              RowBox[{"ops", "[", 
               RowBox[{"[", "i", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
             RowBox[{"oparg", "=", 
              RowBox[{"op", "[", 
               RowBox[{"[", 
                RowBox[{"1", ",", "1"}], "]"}], "]"}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"jaccum", "=", "0"}], ";", "\[IndentingNewLine]", 
             RowBox[{"For", "[", 
              RowBox[{
               RowBox[{"j", "=", "1"}], ",", 
               RowBox[{"j", "<=", 
                RowBox[{"Length", "[", "js", "]"}]}], ",", 
               RowBox[{"j", "++"}], ",", 
               RowBox[{
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{"DEBUG", ">", "2"}], ",", 
                  RowBox[{"Print", "[", 
                   RowBox[{
                   "intI", ",", "\"\<:\>\"", ",", "i", ",", "\"\<:\>\"", ",", 
                    "j"}], "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
                RowBox[{"jarg", "=", 
                 RowBox[{
                  RowBox[{"js", "[", 
                   RowBox[{"[", "j", "]"}], "]"}], "[", 
                  RowBox[{"[", "1", "]"}], "]"}]}], ";", 
                "\[IndentingNewLine]", 
                RowBox[{"dop", "=", 
                 RowBox[{"op", "[", 
                  RowBox[{"[", "1", "]"}], "]"}]}], ";", 
                "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"dop", "[", 
                  RowBox[{"[", "1", "]"}], "]"}], "=", "jarg"}], ";", 
                "\[IndentingNewLine]", 
                RowBox[{"tmp1", "=", 
                 RowBox[{"D", "[", 
                  RowBox[{"tmp0", ",", "dop"}], "]"}]}], ";", 
                "\[IndentingNewLine]", 
                RowBox[{"jaccum", "+=", 
                 RowBox[{"tmp1", "/.", 
                  RowBox[{
                   RowBox[{"DiracDelta", "[", "jarg", "]"}], "->", 
                   RowBox[{"DiracDelta", "[", 
                    RowBox[{"jarg", "-", "oparg"}], "]"}]}]}]}], ";", 
                "\[IndentingNewLine]", 
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{"DEBUG", ">", "3"}], ",", 
                  RowBox[{"Print", "[", 
                   RowBox[{
                   "intI", ",", "\"\<:\>\"", ",", "i", ",", "\"\<:\>\"", ",", 
                    "j", ",", "\"\<:\>\"", ",", "tmp0", ",", "\"\<:\>\"", ",",
                     "dop"}], "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{"DEBUG", ">", "3"}], ",", 
                  RowBox[{"Print", "[", 
                   RowBox[{
                   "intI", ",", "\"\<:\>\"", ",", "i", ",", "\"\<:\>\"", ",", 
                    "j", ",", "\"\<:\>\"", ",", "jaccum"}], "]"}]}], "]"}], 
                ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"tmp0", "=", "jaccum"}], ";"}]}], "\[IndentingNewLine]", 
           "]"}], ";", "\[IndentingNewLine]", 
          RowBox[{"For", "[", 
           RowBox[{
            RowBox[{"j", "=", "1"}], ",", 
            RowBox[{"j", "<=", 
             RowBox[{"Length", "[", "js", "]"}]}], ",", 
            RowBox[{"j", "++"}], ",", 
            RowBox[{"(*", 
             RowBox[{
             "eliminate", " ", "DiracDelta", " ", "attached", " ", "to", " ", 
              
              RowBox[{"J", "'"}], "s", " ", "not", " ", "in", " ", 
              "variation"}], "*)"}], "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"jarg", "=", 
              RowBox[{
               RowBox[{"js", "[", 
                RowBox[{"[", "j", "]"}], "]"}], "[", 
               RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
             RowBox[{"tmp0", "=", 
              RowBox[{"tmp0", "//.", 
               RowBox[{
                RowBox[{"DiracDelta", "[", "jarg", "]"}], "\[Rule]", 
                "1"}]}]}]}]}], "\[IndentingNewLine]", "]"}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"AppendTo", "[", 
           RowBox[{"intRepl", ",", 
            RowBox[{
             RowBox[{"intPos", "[", 
              RowBox[{"[", "intI", "]"}], "]"}], "->", 
             RowBox[{"IntegralOp", "[", 
              RowBox[{"args", ",", "tmp0"}], "]"}]}]}], "]"}], ";"}]}], 
        "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"ReplacePart", "[", 
        RowBox[{"out", ",", "intRepl"}], "]"}]}]}], "\[IndentingNewLine]", 
     "]"}]}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Op\[Delta]Integrand2", "[", "exp_", "]"}], ":=", 
    RowBox[{"(*", 
     RowBox[{
     "computes", " ", "variations", " ", "of", " ", "integrand", " ", "wrt", 
      " ", "variations", " ", "in", " ", 
      RowBox[{"J", "'"}], 
      RowBox[{"s", "."}]}], "  ", "*)"}], 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"out", "=", "exp"}], ",", "opPos", ",", "op", ",", "ops", ",",
         "oparg", ",", "i", ",", "j", ",", "tmp0", ",", "tmp1", ",", "jPos", 
        ",", "xdebug", ",", "js", ",", "jarg", ",", "repl", ",", "jaccum", 
        ",", "dop", ",", "args", ",", "integrand", ",", "intI", ",", "ints", 
        ",", "intPos", ",", 
        RowBox[{"intRepl", "=", 
         RowBox[{"{", "}"}]}], ",", 
        RowBox[{"DEBUG", "=", "1"}]}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"intPos", "=", 
        RowBox[{"Position", "[", 
         RowBox[{"exp", ",", 
          RowBox[{"IntegralOp", "[", 
           RowBox[{"_", ",", "_"}], "]"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"ints", "=", 
        RowBox[{"Extract", "[", 
         RowBox[{"exp", ",", "intPos"}], "]"}]}], ";", "\[IndentingNewLine]", 
       
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"DEBUG", ">", "1"}], ",", 
         RowBox[{"Print", "[", "ints", "]"}]}], "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"intI", "=", "1"}], ",", 
         RowBox[{"intI", "<=", 
          RowBox[{"Length", "[", "ints", "]"}]}], ",", 
         RowBox[{"intI", "++"}], ",", 
         RowBox[{
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"DEBUG", ">", "0"}], ",", 
            RowBox[{"Print", "[", "intI", "]"}]}], "]"}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"args", ",", "integrand"}], "}"}], "=", 
           RowBox[{"Apply", "[", 
            RowBox[{"List", ",", 
             RowBox[{"ints", "[", 
              RowBox[{"[", "intI", "]"}], "]"}]}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"opPos", "=", 
           RowBox[{"Position", "[", 
            RowBox[{"integrand", ",", 
             RowBox[{"\[Delta]Op", "[", "_", "]"}]}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"ops", "=", 
           RowBox[{"Extract", "[", 
            RowBox[{"integrand", ",", "opPos"}], "]"}]}], ";", 
          RowBox[{"(*", 
           RowBox[{"list", " ", "of", " ", "\[Delta]Op"}], "*)"}], 
          "\[IndentingNewLine]", 
          RowBox[{"tmp0", "=", "integrand"}], ";", "\[IndentingNewLine]", 
          RowBox[{"(*", " ", 
           RowBox[{
           "Would", " ", "be", " ", "easier", " ", "if", " ", "we", " ", 
            "had", " ", "form", " ", 
            RowBox[{
             RowBox[{"G", "[", 
              RowBox[{"\[Delta]Op", "[", 
               RowBox[{"J", "[", "_", "]"}], "]"}], "]"}], "[", 
             RowBox[{"F", "[", 
              RowBox[{"J", "[", "_", "]"}], "]"}], "]"}]}], " ", "*)"}], 
          "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"jPos", "=", 
           RowBox[{"Position", "[", 
            RowBox[{"tmp0", ",", 
             RowBox[{
              RowBox[{"J", "[", "_", "]"}], "|", 
              RowBox[{
               SuperscriptBox["J", "\[Dagger]"], "[", "_", "]"}]}]}], "]"}]}],
           ";", "\[IndentingNewLine]", 
          RowBox[{"js", "=", 
           RowBox[{"Extract", "[", 
            RowBox[{"tmp0", ",", "jPos"}], "]"}]}], ";", 
          RowBox[{"(*", 
           RowBox[{"list", " ", "of", " ", 
            RowBox[{"J", "'"}], "s"}], "*)"}], "\[IndentingNewLine]", 
          RowBox[{"repl", "=", 
           RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"For", "[", 
           RowBox[{
            RowBox[{"j", "=", "1"}], ",", 
            RowBox[{"j", "<=", 
             RowBox[{"Length", "[", "js", "]"}]}], ",", 
            RowBox[{"j", "++"}], ",", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"jarg", "=", 
              RowBox[{
               RowBox[{"js", "[", 
                RowBox[{"[", "j", "]"}], "]"}], "[", 
               RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
             RowBox[{"AppendTo", "[", 
              RowBox[{"repl", ",", 
               RowBox[{
                RowBox[{"jPos", "[", 
                 RowBox[{"[", "j", "]"}], "]"}], "->", 
                RowBox[{
                 RowBox[{"js", "[", 
                  RowBox[{"[", "j", "]"}], "]"}], ".", " ", 
                 RowBox[{"DiracDelta", "[", "jarg", "]"}]}]}]}], "]"}], 
             ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"tmp0", "=", 
           RowBox[{"ReplacePart", "[", 
            RowBox[{"tmp0", ",", "repl"}], "]"}]}], ";", 
          "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"For", "[", 
           RowBox[{
            RowBox[{"i", "=", "1"}], ",", 
            RowBox[{"i", "<=", 
             RowBox[{"Length", "[", "ops", "]"}]}], ",", 
            RowBox[{"i", "++"}], ",", 
            RowBox[{
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"DEBUG", ">", "1"}], ",", 
               RowBox[{"Print", "[", 
                RowBox[{"intI", ",", "\"\<:\>\"", ",", "i"}], "]"}]}], "]"}], 
             ";", "\[IndentingNewLine]", 
             RowBox[{"op", "=", 
              RowBox[{"ops", "[", 
               RowBox[{"[", "i", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
             RowBox[{"oparg", "=", 
              RowBox[{"op", "[", 
               RowBox[{"[", 
                RowBox[{"1", ",", "1"}], "]"}], "]"}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"jaccum", "=", "0"}], ";", "\[IndentingNewLine]", 
             RowBox[{"For", "[", 
              RowBox[{
               RowBox[{"j", "=", "1"}], ",", 
               RowBox[{"j", "<=", 
                RowBox[{"Length", "[", "js", "]"}]}], ",", 
               RowBox[{"j", "++"}], ",", 
               RowBox[{
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{"DEBUG", ">", "2"}], ",", 
                  RowBox[{"Print", "[", 
                   RowBox[{
                   "intI", ",", "\"\<:\>\"", ",", "i", ",", "\"\<:\>\"", ",", 
                    "j"}], "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
                RowBox[{"jarg", "=", 
                 RowBox[{
                  RowBox[{"js", "[", 
                   RowBox[{"[", "j", "]"}], "]"}], "[", 
                  RowBox[{"[", "1", "]"}], "]"}]}], ";", 
                "\[IndentingNewLine]", 
                RowBox[{"dop", "=", 
                 RowBox[{"op", "[", 
                  RowBox[{"[", "1", "]"}], "]"}]}], ";", 
                "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"dop", "[", 
                  RowBox[{"[", "1", "]"}], "]"}], "=", "jarg"}], ";", 
                "\[IndentingNewLine]", 
                RowBox[{"tmp1", "=", 
                 RowBox[{"D", "[", 
                  RowBox[{"tmp0", ",", "dop"}], "]"}]}], ";", 
                "\[IndentingNewLine]", 
                RowBox[{"jaccum", "+=", 
                 RowBox[{"tmp1", "/.", 
                  RowBox[{
                   RowBox[{"DiracDelta", "[", "jarg", "]"}], "->", 
                   RowBox[{"DiracDelta", "[", 
                    RowBox[{"jarg", "-", "oparg"}], "]"}]}]}]}], ";", 
                "\[IndentingNewLine]", 
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{"DEBUG", ">", "3"}], ",", 
                  RowBox[{"Print", "[", 
                   RowBox[{
                   "intI", ",", "\"\<:\>\"", ",", "i", ",", "\"\<:\>\"", ",", 
                    "j", ",", "\"\<:\>\"", ",", "tmp0", ",", "\"\<:\>\"", ",",
                     "dop"}], "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{"DEBUG", ">", "3"}], ",", 
                  RowBox[{"Print", "[", 
                   RowBox[{
                   "intI", ",", "\"\<:\>\"", ",", "i", ",", "\"\<:\>\"", ",", 
                    "j", ",", "\"\<:\>\"", ",", "jaccum"}], "]"}]}], "]"}], 
                ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"tmp0", "=", "jaccum"}], ";"}]}], "\[IndentingNewLine]", 
           "]"}], ";", "\[IndentingNewLine]", 
          RowBox[{"For", "[", 
           RowBox[{
            RowBox[{"j", "=", "1"}], ",", 
            RowBox[{"j", "<=", 
             RowBox[{"Length", "[", "js", "]"}]}], ",", 
            RowBox[{"j", "++"}], ",", 
            RowBox[{"(*", 
             RowBox[{
             "eliminate", " ", "DiracDelta", " ", "attached", " ", "to", " ", 
              
              RowBox[{"J", "'"}], "s", " ", "not", " ", "in", " ", 
              "variation"}], "*)"}], "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"jarg", "=", 
              RowBox[{
               RowBox[{"js", "[", 
                RowBox[{"[", "j", "]"}], "]"}], "[", 
               RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
             RowBox[{"tmp0", "=", 
              RowBox[{"tmp0", "//.", 
               RowBox[{
                RowBox[{"DiracDelta", "[", "jarg", "]"}], "\[Rule]", 
                "1"}]}]}]}]}], "\[IndentingNewLine]", "]"}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"AppendTo", "[", 
           RowBox[{"intRepl", ",", 
            RowBox[{
             RowBox[{"intPos", "[", 
              RowBox[{"[", "intI", "]"}], "]"}], "->", 
             RowBox[{"IntegralOp", "[", 
              RowBox[{"args", ",", "tmp0"}], "]"}]}]}], "]"}], ";"}]}], 
        "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"ReplacePart", "[", 
        RowBox[{"out", ",", "intRepl"}], "]"}]}]}], "\[IndentingNewLine]", 
     "]"}]}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"RearrangeIntJArg", "[", "exp_", "]"}], ":=", 
    RowBox[{"(*", 
     RowBox[{
     "Rearrange", " ", "J\[CapitalDelta]", " ", "arguements", " ", "so", " ", 
      "that", " ", 
      RowBox[{"J", "'"}], "s", " ", "are", " ", "sequenced", " ", "first", 
      " ", "and", " ", 
      RowBox[{"\[CapitalDelta]", "'"}], "s", " ", "later"}], "*)"}], 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"out", "=", "exp"}], ",", "args", ",", "integrand", ",", "i", 
        ",", "j", ",", "iv", ",", "term", ",", "js", ",", "jps", ",", "repl", 
        ",", 
        RowBox[{"repls", "=", 
         RowBox[{"{", "}"}]}], ",", "sub", ",", 
        RowBox[{"rlist", "=", 
         RowBox[{"{", "}"}]}], ",", "ints", ",", "intPos", ",", "intI", ",", 
        RowBox[{"intOut", "=", 
         RowBox[{"{", "}"}]}], ",", 
        RowBox[{"DEBUG", "=", "0"}]}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"intPos", "=", 
        RowBox[{"Position", "[", 
         RowBox[{"exp", ",", 
          RowBox[{"IntegralOp", "[", 
           RowBox[{"_", ",", "_"}], "]"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"ints", "=", 
        RowBox[{"Extract", "[", 
         RowBox[{"exp", ",", "intPos"}], "]"}]}], ";", "\[IndentingNewLine]", 
       
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"intI", "=", "1"}], ",", 
         RowBox[{"intI", "<=", 
          RowBox[{"Length", "[", "ints", "]"}]}], ",", 
         RowBox[{"intI", "++"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{"args", ",", "integrand"}], "}"}], "=", 
           RowBox[{"Apply", "[", 
            RowBox[{"List", ",", 
             RowBox[{"ints", "[", 
              RowBox[{"[", "intI", "]"}], "]"}]}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"DEBUG", ">", "0"}], ",", "\[IndentingNewLine]", 
            RowBox[{"Print", "[", 
             RowBox[{
             "\"\<IntegralOp:\>\"", ",", "intI", ",", "\"\<:\>\"", ",", 
              "integrand"}], "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
          RowBox[{"integrand", "=", 
           RowBox[{"Expand", "[", "integrand", "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"rlist", "=", 
           RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Head", "[", "integrand", "]"}], "===", "Plus"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"For", "[", 
              RowBox[{
               RowBox[{"i", "=", "1"}], ",", 
               RowBox[{"i", "<=", 
                RowBox[{"Length", "[", "integrand", "]"}]}], ",", 
               RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"term", "=", 
                 RowBox[{"integrand", "[", 
                  RowBox[{"[", "i", "]"}], "]"}]}], ";", 
                "\[IndentingNewLine]", 
                RowBox[{"iv", "=", "1"}], ";", "\[IndentingNewLine]", 
                RowBox[{"repls", "=", 
                 RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
                RowBox[{"(*", 
                 RowBox[{
                 "Replace", " ", "all", " ", "args", " ", "with", " ", 
                  "dummy"}], "*)"}], "\[IndentingNewLine]", 
                RowBox[{"For", "[", 
                 RowBox[{
                  RowBox[{"j", "=", "1"}], ",", 
                  RowBox[{"j", "<=", 
                   RowBox[{"Length", "[", "args", "]"}]}], ",", 
                  RowBox[{"j", "++"}], ",", 
                  RowBox[{"term", "=", 
                   RowBox[{"term", "/.", 
                    RowBox[{
                    RowBox[{"args", "[", 
                    RowBox[{"[", 
                    RowBox[{"j", ",", "1"}], "]"}], "]"}], "->", 
                    RowBox[{"repl", "[", "j", "]"}]}]}]}]}], "]"}], ";", 
                "\[IndentingNewLine]", 
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{"i", "==", "2"}], ",", 
                  RowBox[{"List", "[", 
                   RowBox[{"i", ",", "\"\<>> \>\"", ",", "term"}], "]"}]}], 
                 "]"}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
                RowBox[{"(*", 
                 RowBox[{
                 "First", " ", "reassign", " ", "J", " ", "arguements"}], 
                 "*)"}], "\[IndentingNewLine]", 
                RowBox[{"jPos", "=", 
                 RowBox[{"Position", "[", 
                  RowBox[{"term", ",", 
                   RowBox[{
                    RowBox[{"J", "[", "_", "]"}], "|", 
                    RowBox[{
                    SuperscriptBox["J", "\[Dagger]"], "[", "_", "]"}]}]}], 
                  "]"}]}], ";", "\[IndentingNewLine]", 
                RowBox[{"js", "=", 
                 RowBox[{"Extract", "[", 
                  RowBox[{"term", ",", "jPos"}], "]"}]}], ";", 
                "\[IndentingNewLine]", 
                RowBox[{"For", "[", 
                 RowBox[{
                  RowBox[{"j", "=", "1"}], ",", 
                  RowBox[{"j", "<=", 
                   RowBox[{"Length", "[", "js", "]"}]}], ",", 
                  RowBox[{"j", "++"}], ",", 
                  RowBox[{
                   RowBox[{"sub", "=", 
                    RowBox[{
                    RowBox[{"js", "[", 
                    RowBox[{"[", 
                    RowBox[{"j", ",", "1"}], "]"}], "]"}], "->", 
                    RowBox[{"args", "[", 
                    RowBox[{"[", 
                    RowBox[{
                    RowBox[{"iv", "++"}], ",", "1"}], "]"}], "]"}]}]}], ";", 
                   "\[IndentingNewLine]", 
                   RowBox[{"term", "=", 
                    RowBox[{"term", "//.", "sub"}]}], ";", 
                   "\[IndentingNewLine]", 
                   RowBox[{"AppendTo", "[", 
                    RowBox[{"repls", ",", 
                    RowBox[{"js", "[", 
                    RowBox[{"[", 
                    RowBox[{"j", ",", "1"}], "]"}], "]"}]}], "]"}], ";", 
                   "\[IndentingNewLine]", 
                   RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"i", "==", "2"}], ",", 
                    RowBox[{"List", "[", 
                    RowBox[{
                    "i", ",", "\"\<>>> \>\"", ",", "sub", ",", "\"\< \>\"", 
                    ",", "term"}], "]"}]}], "]"}], ";"}]}], 
                 "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{"i", "==", "2"}], ",", 
                  RowBox[{"List", "[", 
                   RowBox[{
                   "i", ",", "\"\<>repl>> \>\"", ",", "repls", ",", 
                    "\"\< \>\"", ",", "term"}], "]"}]}], "]"}], ";", 
                "\[IndentingNewLine]", "\[IndentingNewLine]", 
                RowBox[{"(*", 
                 RowBox[{
                 "Then", " ", "replace", " ", "remaining", " ", "args"}], 
                 "*)"}], "\[IndentingNewLine]", 
                RowBox[{"For", "[", 
                 RowBox[{
                  RowBox[{"j", "=", "1"}], ",", 
                  RowBox[{"j", "<=", 
                   RowBox[{"Length", "[", "args", "]"}]}], ",", 
                  RowBox[{"j", "++"}], ",", "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"MemberQ", "[", 
                    RowBox[{"repls", ",", 
                    RowBox[{"repl", "[", "j", "]"}]}], "]"}], ",", "Null", 
                    ",", 
                    RowBox[{
                    RowBox[{"sub", "=", 
                    RowBox[{
                    RowBox[{"repl", "[", "j", "]"}], "->", 
                    RowBox[{"args", "[", 
                    RowBox[{"[", 
                    RowBox[{
                    RowBox[{"iv", "++"}], ",", "1"}], "]"}], "]"}]}]}], ";", 
                    RowBox[{"term", "=", 
                    RowBox[{"term", "//.", "sub"}]}], ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{"AppendTo", "[", 
                    RowBox[{"repls", ",", 
                    RowBox[{"repl", "[", "j", "]"}]}], "]"}], ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"i", "==", "2"}], ",", 
                    RowBox[{"List", "[", 
                    RowBox[{
                    "sub", ",", "\"\< VV \>\"", ",", "repls", ",", 
                    "\"\<<==> \>\"", ",", "term"}], "]"}]}], "]"}], ";"}]}], 
                    "\[IndentingNewLine]", "]"}], ";"}]}], 
                 "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{"i", "==", "2"}], ",", 
                  RowBox[{"List", "[", 
                   RowBox[{"\"\<M> \>\"", ",", "term"}], "]"}]}], "]"}], ";", 
                "\[IndentingNewLine]", 
                RowBox[{"AppendTo", "[", 
                 RowBox[{"rlist", ",", 
                  RowBox[{"i", "->", "term"}]}], "]"}], ";"}]}], 
              "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
             RowBox[{"integrand", "=", 
              RowBox[{"ReplacePart", "[", 
               RowBox[{"integrand", ",", "rlist"}], "]"}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"DEBUG", ">", "0"}], ",", "\[IndentingNewLine]", 
               RowBox[{"Print", "[", 
                RowBox[{"\"\<>\>\"", ",", "integrand"}], "]"}]}], "]"}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"AppendTo", "[", 
              RowBox[{"intOut", ",", 
               RowBox[{
                RowBox[{"intPos", "[", 
                 RowBox[{"[", "intI", "]"}], "]"}], "->", 
                RowBox[{"IntegralOp", "[", 
                 RowBox[{"args", ",", "integrand"}], "]"}]}]}], "]"}], 
             ";"}]}], "\[IndentingNewLine]", "]"}], ";"}]}], 
        "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"DEBUG", ">", "0"}], ",", "\[IndentingNewLine]", 
         RowBox[{"Print", "[", 
          RowBox[{"\"\<>>\>\"", ",", "intOut"}], "]"}]}], "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"out", "=", 
        RowBox[{"ReplacePart", "[", 
         RowBox[{"exp", ",", "intOut"}], "]"}]}]}]}], "\[IndentingNewLine]", 
     "]"}]}], ";"}], "\[IndentingNewLine]"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"GroupJ\[CapitalDelta]", "[", "exp_", "]"}], ":=", 
    RowBox[{"(*", 
     RowBox[{"Extracts", " ", 
      RowBox[{"graphs", ":", " ", 
       RowBox[{"subterms", " ", "by", " ", "coordiate", " ", "groups"}]}]}], 
     "*)"}], 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"out", "=", "exp"}], ",", "args", ",", "integrand", ",", "i", 
        ",", "j", ",", "iv", ",", "intPos", ",", "ints", ",", "intI", ",", 
        "term", ",", "lastterm", ",", "js", ",", "jps", ",", "xs", ",", 
        "lastxs", ",", "xPos", ",", "xt", ",", "ix", ",", "tmp", ",", 
        RowBox[{"output", "=", 
         RowBox[{"{", "}"}]}], ",", "sub", ",", "group", ",", 
        RowBox[{"groups", "=", 
         RowBox[{"{", "}"}]}], ",", 
        RowBox[{"outputLength", "=", "33333"}], ",", 
        RowBox[{"DEBUG", "=", "1"}]}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"intPos", "=", 
        RowBox[{"Position", "[", 
         RowBox[{"exp", ",", 
          RowBox[{"IntegralOp", "[", 
           RowBox[{"_", ",", "_"}], "]"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"ints", "=", 
        RowBox[{"Extract", "[", 
         RowBox[{"exp", ",", "intPos"}], "]"}]}], ";", "\[IndentingNewLine]", 
       
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"intI", "=", "1"}], ",", 
         RowBox[{"intI", "<=", 
          RowBox[{"Length", "[", "ints", "]"}]}], ",", 
         RowBox[{"intI", "++"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{"args", ",", "integrand"}], "}"}], "=", 
           RowBox[{"Apply", "[", 
            RowBox[{"List", ",", 
             RowBox[{"ints", "[", 
              RowBox[{"[", "intI", "]"}], "]"}]}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"DEBUG", ">", "0"}], ",", "\[IndentingNewLine]", 
            RowBox[{"Print", "[", 
             RowBox[{
             "\"\<IntegralOp:\>\"", ",", "intI", ",", "\"\<:\>\"", ",", 
              "integrand"}], "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
          RowBox[{"For", "[", 
           RowBox[{
            RowBox[{"i", "=", "1"}], ",", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"i", "<=", 
                RowBox[{"Length", "[", "integrand", "]"}]}], "&&", 
               RowBox[{
                RowBox[{"Head", "[", "integrand", "]"}], "===", "Plus"}]}], 
              ")"}], "||", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"i", "==", "1"}], ")"}], "&&", 
              RowBox[{"i", "<", "outputLength"}]}]}], ",", 
            RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"Head", "[", "integrand", "]"}], "===", "Plus"}], ",",
                "\[IndentingNewLine]", 
               RowBox[{"term", "=", 
                RowBox[{"integrand", "[", 
                 RowBox[{"[", "i", "]"}], "]"}]}], ",", "\[IndentingNewLine]", 
               RowBox[{"term", "=", "integrand"}]}], "]"}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"xs", "=", 
              RowBox[{
               RowBox[{"Cases", "[", 
                RowBox[{"term", ",", 
                 RowBox[{"x", "[", 
                  RowBox[{"_", ",", "_"}], "]"}], ",", "\[Infinity]"}], "]"}],
                "//", "DeleteDuplicates"}]}], ";", "\[IndentingNewLine]", 
             RowBox[{"lastxs", "=", 
              RowBox[{"{", "}"}]}], ";", 
             RowBox[{"lastterm", "=", 
              RowBox[{"{", "}"}]}], ";", 
             RowBox[{"groups", "=", 
              RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
             RowBox[{"While", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"term", "=!=", "lastterm"}], "&&", 
                RowBox[{
                 RowBox[{"Length", "[", "xs", "]"}], ">", "0"}]}], ",", 
               "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"lastterm", "=", "term"}], ";", "\[IndentingNewLine]", 
                RowBox[{"xt", "=", 
                 RowBox[{"{", 
                  RowBox[{"First", "[", "xs", "]"}], "}"}]}], ";", " ", 
                RowBox[{"xs", "=", 
                 RowBox[{"Rest", "[", "xs", "]"}]}], ";", 
                "\[IndentingNewLine]", 
                RowBox[{"group", "=", 
                 RowBox[{"{", "}"}]}], ";", 
                RowBox[{"lastxs", "=", 
                 RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
                RowBox[{"While", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"Sort", "[", "xs", "]"}], "=!=", 
                   RowBox[{"Sort", "[", "lastxs", "]"}]}], ",", 
                  "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{"lastxs", "=", "xs"}], ";", "\[IndentingNewLine]", 
                   
                   RowBox[{"For", "[", 
                    RowBox[{
                    RowBox[{"ix", "=", "1"}], ",", 
                    RowBox[{"ix", "<=", 
                    RowBox[{"Length", "[", "xt", "]"}]}], ",", 
                    RowBox[{"ix", "++"}], ",", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"AppendTo", "[", 
                    RowBox[{"group", ",", 
                    RowBox[{"Cases", "[", 
                    RowBox[{"term", ",", 
                    RowBox[{
                    SuperscriptBox[
                    RowBox[{"\[CapitalDelta]", "[", 
                    RowBox[{"_", "+", 
                    RowBox[{"xt", "[", 
                    RowBox[{"[", "ix", "]"}], "]"}]}], "]"}], "_"], "|", 
                    SuperscriptBox[
                    RowBox[{"\[CapitalDelta]", "[", 
                    RowBox[{"_", "-", 
                    RowBox[{"xt", "[", 
                    RowBox[{"[", "ix", "]"}], "]"}]}], "]"}], "_"]}], ",", 
                    "\[Infinity]"}], "]"}]}], "]"}], 
                    RowBox[{"(*", 
                    RowBox[{
                    "get", " ", "powers", " ", "of", " ", "\[CapitalDelta]"}],
                     "*)"}], ";", "\[IndentingNewLine]", 
                    RowBox[{"term", "=", 
                    RowBox[{"DeleteCases", "[", 
                    RowBox[{"term", ",", 
                    RowBox[{
                    SuperscriptBox[
                    RowBox[{"\[CapitalDelta]", "[", 
                    RowBox[{"_", "+", 
                    RowBox[{"xt", "[", 
                    RowBox[{"[", "ix", "]"}], "]"}]}], "]"}], "_"], "|", 
                    SuperscriptBox[
                    RowBox[{"\[CapitalDelta]", "[", 
                    RowBox[{"_", "-", 
                    RowBox[{"xt", "[", 
                    RowBox[{"[", "ix", "]"}], "]"}]}], "]"}], "_"]}], ",", 
                    "\[Infinity]"}], "]"}]}], ";", "\[IndentingNewLine]", 
                    RowBox[{"AppendTo", "[", 
                    RowBox[{"group", ",", 
                    RowBox[{"Cases", "[", 
                    RowBox[{"term", ",", 
                    RowBox[{
                    RowBox[{"_", "[", 
                    RowBox[{"xt", "[", 
                    RowBox[{"[", "ix", "]"}], "]"}], "]"}], "|", 
                    RowBox[{"\[CapitalDelta]", "[", 
                    RowBox[{"_", "+", 
                    RowBox[{"xt", "[", 
                    RowBox[{"[", "ix", "]"}], "]"}]}], "]"}], "|", 
                    RowBox[{"\[CapitalDelta]", "[", 
                    RowBox[{"_", "-", 
                    RowBox[{"xt", "[", 
                    RowBox[{"[", "ix", "]"}], "]"}]}], "]"}]}], ",", 
                    "\[Infinity]"}], "]"}]}], "]"}], ";"}]}], 
                    "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
                   
                   RowBox[{"group", "=", 
                    RowBox[{"Flatten", "[", "group", "]"}]}], ";", 
                   "\[IndentingNewLine]", 
                   RowBox[{"sub", "=", 
                    RowBox[{"Map", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"#", "->", "1"}], "&"}], ",", "group"}], "]"}]}], 
                   ";", "\[IndentingNewLine]", 
                   RowBox[{"term", "=", 
                    RowBox[{"term", "/.", "sub"}]}], ";", 
                   "\[IndentingNewLine]", 
                   RowBox[{"xt", "=", 
                    RowBox[{
                    RowBox[{"Cases", "[", 
                    RowBox[{"group", ",", 
                    RowBox[{"x", "[", 
                    RowBox[{"_", ",", "_"}], "]"}], ",", "\[Infinity]"}], 
                    "]"}], "//", "DeleteDuplicates"}]}], ";", 
                   "\[IndentingNewLine]", 
                   RowBox[{"xs", "=", 
                    RowBox[{"DeleteCases", "[", 
                    RowBox[{"xs", ",", 
                    RowBox[{"a_", "/;", 
                    RowBox[{"MemberQ", "[", 
                    RowBox[{"xt", ",", "a"}], "]"}]}], ",", "\[Infinity]"}], 
                    "]"}]}], ";", "\[IndentingNewLine]", 
                   RowBox[{"List", "[", 
                    RowBox[{
                    "\"\<xt:\>\"", ",", "xt", ",", "\"\<:\>\"", ",", "group", 
                    ",", "\"\<<\>\"", ",", "xs", ",", "\"\<:\>\"", ",", 
                    "lastxs"}], "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], 
                ";", "\[IndentingNewLine]", 
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"Length", "[", "group", "]"}], ">", "0"}], ",", 
                  "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{"AppendTo", "[", 
                    RowBox[{"groups", ",", 
                    RowBox[{"Sort", "[", "group", "]"}]}], "]"}], ";"}]}], 
                 "\[IndentingNewLine]", "]"}], ";"}]}], "\[IndentingNewLine]",
               "]"}], ";", "\[IndentingNewLine]", 
             RowBox[{"AppendTo", "[", 
              RowBox[{"groups", ",", "term"}], "]"}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"Length", "[", "groups", "]"}], "<=", 
                "outputLength"}], ",", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{"DEBUG", ">", "0"}], ",", "\[IndentingNewLine]", 
                  RowBox[{"Print", "[", 
                   RowBox[{
                   "\"\<term:\>\"", ",", "i", ",", "\"\< groups:\>\"", ",", 
                    RowBox[{"Column", "[", "groups", "]"}]}], "]"}]}], "]"}], 
                ";", "\[IndentingNewLine]", 
                RowBox[{"AppendTo", "[", 
                 RowBox[{"output", ",", "groups"}], "]"}], ";"}]}], 
              "\[IndentingNewLine]", "]"}], ";"}]}], "\[IndentingNewLine]", 
           "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"output", "/.", 
        RowBox[{"Null", "->", "1"}]}]}]}], "\[IndentingNewLine]", "]"}]}], 
   ";"}], "\n"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Plot\[CapitalDelta]", "[", 
    RowBox[{"in_", ",", "nterm_", ",", "minProp_"}], "]"}], ":=", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
      RowBox[{
      "plots", " ", "groups", " ", "formed", " ", "with", " ", "routine", " ", 
       RowBox[{"above", ".", "  ", "in_"}]}], "=", 
      RowBox[{"output", " ", "from", " ", "GroupJ\[CapitalDelta]"}]}], ",", 
     " ", 
     RowBox[{"nterm_", "=", 
      RowBox[{
      "upper", " ", "limit", " ", "on", " ", "number", " ", "of", " ", 
       "subgroups", " ", "included", " ", "in", " ", "plot", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"nterm", "=", 
          RowBox[{
          "2", " ", "limits", " ", "output", " ", "to", " ", "connected", " ",
            "graphs"}]}], ",", " ", 
         RowBox[{"minProp_", "=", 
          RowBox[{
          "minimum", " ", "number", " ", "of", " ", "propagators", " ", 
           "needed", " ", "to", " ", 
           RowBox[{"plot", ".", "  ", "Some"}], " ", "interpretation", " ", 
           "of", " ", "these", " ", "plots", " ", "is", " ", 
           RowBox[{"require", ":", " ", 
            RowBox[{
            "Note", " ", "the", " ", "coefficient", " ", "factor", " ", 
             "indicates", " ", "the", " ", "number", " ", "of", " ", 
             "vertices", " ", "in", " ", "the", " ", "diagram"}]}]}]}], ",", 
         " ", 
         RowBox[{
         "so", " ", "there", " ", "are", " ", "diagrams", " ", "where", " ", 
          "there", " ", "are", " ", "no", " ", "loops"}], ",", 
         RowBox[{"i", ".", "e"}], ",", " ", 
         RowBox[{"\[CapitalDelta]", "[", "0", "]"}], ",", " ", 
         RowBox[{
         "but", " ", "odd", " ", "number", " ", "of", " ", "branches", " ", 
          "from", " ", "a", " ", 
          RowBox[{"vertex", ".", "  ", "In"}], " ", "this", " ", "case", " ", 
          "the", " ", "interpretation", " ", "is", " ", "that", " ", "a", " ",
           "single", " ", "line", " ", "is", " ", "hiding", " ", "multiple", 
          " ", "lines", " ", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
            "I", " ", "think", " ", "due", " ", "to", " ", 
             "DeleteDuplicates"}], ")"}], "."}]}]}], " "}]}]}]}], "*)"}], 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"list", "=", "in"}], ",", "term", ",", "iterm", ",", "iplt", 
       ",", "tmp", ",", "js", ",", "\[CapitalDelta]s", ",", 
       RowBox[{"\[CapitalDelta]xs", "=", 
        RowBox[{"{", "}"}]}], ",", "iline", ",", "line", ",", "xarg"}], "}"}],
      ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"For", "[", 
       RowBox[{
        RowBox[{"iterm", "=", "1"}], ",", 
        RowBox[{"iterm", "<=", 
         RowBox[{"Length", "[", "list", "]"}]}], ",", 
        RowBox[{"iterm", "++"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"term", "=", 
          RowBox[{"list", "[", 
           RowBox[{"[", "iterm", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Length", "[", "term", "]"}], "<=", "nterm"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"Print", "[", 
             RowBox[{"\"\<------\>\"", ",", "iterm", ",", "\"\<:\>\"", ",", 
              RowBox[{"Length", "[", "term", "]"}], " ", ",", 
              "\"\<-----Coefficient:\>\"", ",", 
              RowBox[{"term", "[", 
               RowBox[{"[", 
                RowBox[{"-", "1"}], "]"}], "]"}]}], "]"}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"For", "[", 
             RowBox[{
              RowBox[{"iplt", "=", "1"}], ",", 
              RowBox[{"iplt", "<=", 
               RowBox[{"Length", "[", "term", "]"}]}], ",", 
              RowBox[{"iplt", "++"}], ",", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"List", "[", 
                RowBox[{"tmp", "=", 
                 RowBox[{"term", "[", 
                  RowBox[{"[", "iplt", "]"}], "]"}]}], "]"}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{"js", "=", 
                RowBox[{"Cases", "[", 
                 RowBox[{"tmp", ",", 
                  RowBox[{
                   RowBox[{"J", "[", 
                    RowBox[{"x", "[", 
                    RowBox[{"_", ",", "_"}], "]"}], "]"}], "|", 
                   RowBox[{
                    SuperscriptBox["J", "\[Dagger]"], "[", 
                    RowBox[{"x", "[", 
                    RowBox[{"_", ",", "_"}], "]"}], "]"}]}]}], "]"}]}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{"tmp", "=", 
                RowBox[{"tmp", "/.", 
                 RowBox[{
                  SuperscriptBox[
                   RowBox[{"\[CapitalDelta]", "[", "a_", "]"}], "n_"], ":>", 
                  RowBox[{"Apply", "[", 
                   RowBox[{"Sequence", ",", 
                    RowBox[{
                    RowBox[{"Tuples", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"\[CapitalDelta]", "[", "a", "]"}], "}"}], ",", 
                    "n"}], "]"}], "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], "]"}]}]}]}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{"\[CapitalDelta]s", "=", 
                RowBox[{"Cases", "[", 
                 RowBox[{"tmp", ",", 
                  RowBox[{"\[CapitalDelta]", "[", "_", "]"}]}], "]"}]}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{"\[CapitalDelta]xs", "=", 
                RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
               RowBox[{"For", "[", 
                RowBox[{
                 RowBox[{"iline", "=", "1"}], ",", 
                 RowBox[{"iline", "<=", 
                  RowBox[{"Length", "[", "\[CapitalDelta]s", "]"}]}], ",", 
                 RowBox[{"iline", "++"}], ",", "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{"xarg", "=", 
                   RowBox[{
                    RowBox[{"\[CapitalDelta]s", "[", 
                    RowBox[{"[", "iline", "]"}], "]"}], "/.", 
                    RowBox[{
                    RowBox[{"\[CapitalDelta]", "[", "a_", "]"}], "->", 
                    "a"}]}]}], ";", "\[IndentingNewLine]", 
                  RowBox[{"xarg", "=", 
                   RowBox[{
                    RowBox[{"xarg", "/.", 
                    RowBox[{
                    RowBox[{"Plus", "[", 
                    RowBox[{"a_", ",", "b_"}], "]"}], ":>", 
                    RowBox[{
                    RowBox[{"Abs", "[", "a", "]"}], "->", 
                    RowBox[{"Abs", "[", "b", "]"}]}]}]}], "/.", 
                    RowBox[{
                    RowBox[{"Abs", "[", "a_", "]"}], "->", "a"}]}]}], ";", 
                  "\[IndentingNewLine]", 
                  RowBox[{"AppendTo", "[", 
                   RowBox[{"\[CapitalDelta]xs", ",", "xarg"}], "]"}], ";", 
                  "\[IndentingNewLine]", 
                  RowBox[{"\[CapitalDelta]xs", "=", 
                   RowBox[{"\[CapitalDelta]xs", "/.", 
                    RowBox[{
                    RowBox[{"x", "[", 
                    RowBox[{"a_", ",", "_"}], "]"}], "->", "a"}]}]}], ";"}]}],
                 "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{
                   RowBox[{"Length", "[", "\[CapitalDelta]xs", "]"}], ">", 
                   "minProp"}], "&&", 
                  RowBox[{"\[CapitalDelta]xs", "=!=", 
                   RowBox[{"{", "0", "}"}]}]}], ",", "\[IndentingNewLine]", 
                 RowBox[{"Print", "[", 
                  RowBox[{
                  "js", ",", "\"\<:\>\"", ",", "\[CapitalDelta]xs", ",", 
                   "\"\<:\>\"", ",", "\"\<\n\>\"", ",", 
                   RowBox[{"GraphPlot", "[", 
                    RowBox[{"\[CapitalDelta]xs", ",", 
                    RowBox[{"VertexLabeling", "\[Rule]", "True"}], ",", 
                    RowBox[{"ImageSize", "\[Rule]", "200"}]}], "]"}]}], 
                  "]"}]}], "\[IndentingNewLine]", "]"}], ";"}]}], 
             "\[IndentingNewLine]", "]"}], ";"}]}], "\[IndentingNewLine]", 
          "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], ";"}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{
  3.452253270311461*^9, {3.452253327720174*^9, 3.45225336937803*^9}, {
   3.452253404600477*^9, 3.4522534382347097`*^9}, {3.452253483571463*^9, 
   3.452253485335959*^9}, {3.452253516319624*^9, 3.45225369369497*^9}, {
   3.45225375938717*^9, 3.452253807508703*^9}, {3.452254305288587*^9, 
   3.452254347065385*^9}, {3.452346500116395*^9, 3.452346501142424*^9}, {
   3.452355372990844*^9, 3.452355384027069*^9}, {3.452355428751499*^9, 
   3.452355448253878*^9}, {3.452355710937932*^9, 3.4523557369581423`*^9}, 
   3.4523557697466803`*^9, {3.452356779255292*^9, 3.452356780375475*^9}, {
   3.45235683910571*^9, 3.452356841930522*^9}, {3.4523578524947844`*^9, 
   3.452357853939015*^9}, {3.452368313963928*^9, 3.452368405317244*^9}, {
   3.4524194598247137`*^9, 3.4524195598345947`*^9}, {3.4525198460208282`*^9, 
   3.452519846323305*^9}, {3.453023932628209*^9, 3.453023952254202*^9}, {
   3.453024004712966*^9, 3.4530240177589693`*^9}, {3.453024072399255*^9, 
   3.45302407302796*^9}, {3.453039864266981*^9, 3.453039929479261*^9}, {
   3.4530399706178007`*^9, 3.4530399989897633`*^9}, {3.4530400367757187`*^9, 
   3.453040055553728*^9}, {3.453040086932846*^9, 3.453040134902486*^9}, {
   3.4530401977957478`*^9, 3.453040213486682*^9}, {3.453044533768464*^9, 
   3.453044549734333*^9}, {3.4530446257233562`*^9, 3.4530446273388023`*^9}, {
   3.453059498014298*^9, 3.453059499182671*^9}, {3.453070541997471*^9, 
   3.45307054325226*^9}, {3.453116907172339*^9, 3.4531169411344833`*^9}, {
   3.453116978111484*^9, 3.4531171505481663`*^9}, {3.453117182963366*^9, 
   3.453117319377043*^9}, {3.453117411950292*^9, 3.453117600604917*^9}, {
   3.4531176382403193`*^9, 3.453117742692501*^9}, {3.453118206296646*^9, 
   3.453118255780369*^9}, {3.4531193077384453`*^9, 3.453119375667603*^9}, {
   3.45311947840341*^9, 3.453119531706945*^9}, {3.453119714583173*^9, 
   3.453119763449003*^9}, {3.453121867098176*^9, 3.4531218776143303`*^9}, {
   3.4531219249398212`*^9, 3.4531219918278627`*^9}, {3.453122025267899*^9, 
   3.4531220646285257`*^9}, {3.453122533246961*^9, 3.453122587169029*^9}, {
   3.453122662960835*^9, 3.453122711332674*^9}, {3.45312287654847*^9, 
   3.4531228786340857`*^9}, {3.453122961916359*^9, 3.45312297562202*^9}, {
   3.453123099784881*^9, 3.453123110753196*^9}, {3.453124909002449*^9, 
   3.453124934431418*^9}, 3.453124966954686*^9, {3.453125111201963*^9, 
   3.4531251257706833`*^9}, {3.4558908872476377`*^9, 
   3.4558909087807903`*^9}, {3.455890951644978*^9, 3.455890965093449*^9}, {
   3.455891020289256*^9, 3.455891021429109*^9}, {3.45589113543596*^9, 
   3.455891167261839*^9}, {3.455891302938047*^9, 3.455891360174123*^9}, {
   3.455891644604031*^9, 3.455891659717338*^9}, {3.4558917902711983`*^9, 
   3.455891798226933*^9}, {3.455891905798903*^9, 3.455891998295538*^9}, {
   3.455979796015867*^9, 3.455979796732521*^9}, {3.455999913017681*^9, 
   3.4559999169778147`*^9}, {3.471920706540627*^9, 3.471920707907342*^9}, {
   3.4719632713080177`*^9, 3.471963271991109*^9}, {3.471963349162591*^9, 
   3.471963350235017*^9}, {3.4719634194204483`*^9, 3.471963419666753*^9}, {
   3.471963474840403*^9, 3.471963495811716*^9}, {3.4719636311383667`*^9, 
   3.471963681150271*^9}, {3.471963735212634*^9, 3.471963757307941*^9}, {
   3.471963851618558*^9, 3.471963939619575*^9}, {3.471964138431595*^9, 
   3.471964138725319*^9}, {3.471965089926626*^9, 3.4719650916850357`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"CompleteSquare", "[", 
    RowBox[{"quadratic_", ",", "var_"}], "]"}], ":=", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
     "Finds", " ", "square", " ", "of", " ", "quadradic", " ", "polynomial"}],
      ",", " ", "quadratic", ",", " ", 
     RowBox[{"with", " ", "var", " ", "as", " ", 
      RowBox[{"variable", ".", "  ", "Assumes"}], " ", 
      RowBox[{"q", "[", "]"}]}], ",", " ", "k", ",", " ", 
     RowBox[{"and", " ", "h", " ", "as", " ", 
      RowBox[{"vectors", ".", "  ", "Returns"}], " ", 
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox["h", "2"], "+", "D"}], ")"}], " ", "and", " ", 
      "substitutions", " ", "to", " ", "create", " ", "quadradic", " ", "in", 
      " ", 
      RowBox[{"h", "."}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"subsimple", "=", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Dot", "[", 
           RowBox[{"a_", ",", "a_"}], "]"}], "->", 
          SuperscriptBox["a", "2"]}], "}"}]}], ",", "tmpId", ",", "tmp", ",", 
       "tmps", ",", "tmpr", ",", "tmpD", ",", "tmpc", ",", "tmpq2fac", ",", 
       "sub", ",", "subD", ",", "dvar", ",", "subvar", ",", "subh", ",", 
       RowBox[{"retainList", "=", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"q", "[", "_", "]"}], ",", "k", ",", 
          RowBox[{"k", "[", "_", "]"}], ",", "h"}], "}"}]}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"tmpId", "=", 
       RowBox[{"quadratic", "/.", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", "a_", ")"}], "2"], "->", 
         RowBox[{"Dot", "[", 
          RowBox[{"a", ",", "a"}], "]"}]}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"manipulate", " ", "k"}], ",", 
        RowBox[{"q", " ", "as", " ", "vectors"}]}], "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"dotRetain", "[", 
       RowBox[{"retainList", ",", "tmpId"}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"tmpId", "=", 
       RowBox[{
        RowBox[{
         RowBox[{"tmpId", "//.", "simpleDot"}], "/.", "subsimple"}], "//", 
        "Expand"}]}], ";", "\[IndentingNewLine]", 
      "\"\<Factor of power function. Find squre expression of var.\>\"", ";", 
      "\[IndentingNewLine]", 
      RowBox[{"tmpId", "=", 
       RowBox[{"Collect", "[", 
        RowBox[{"tmpId", ",", 
         RowBox[{"{", "var", "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"tmpId", "=", 
       RowBox[{"groupDot", "[", 
        RowBox[{"var", ",", "tmpId"}], "]"}]}], ";", "\[IndentingNewLine]", 
      "\"\<The square of quadratic in var.\>\"", ";", "\[IndentingNewLine]", 
      RowBox[{"tmpc", "=", 
       RowBox[{"CoefficientList", "[", 
        RowBox[{"tmpId", ",", 
         RowBox[{"{", "var", "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"tmpq2fac", "=", 
       RowBox[{"tmpc", "//", "Last"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"tmp", "=", 
       RowBox[{"(", 
        RowBox[{"tmpId", "//", "Last"}], ")"}]}], ";", 
      RowBox[{"(*", 
       RowBox[{"first", " ", "order", " ", "in", " ", "var"}], "*)"}], 
      "\[IndentingNewLine]", "\"\<Coefficient of linear term.\>\"", ";", 
      "\[IndentingNewLine]", 
      RowBox[{"tmp", "=", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"tmp", "/.", 
           RowBox[{"var", "->", 
            RowBox[{"1", "/", "2"}]}]}], "/.", 
          RowBox[{"xDot", "->", "Times"}]}], ")"}], "//", "Expand"}]}], ";", 
      "\[IndentingNewLine]", 
      "\"\<The transform of var that generates \!\(\*SuperscriptBox[\(D\), \
\(2\)]\)->\!\(\*SuperscriptBox[\(var\), \(2\)]\) tmpq1fac\>\"", ";", 
      "\[IndentingNewLine]", 
      RowBox[{"tmpD", "=", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"var", "+", 
           RowBox[{"tmp", "/", "tmpq2fac"}]}], ")"}], 
         SqrtBox["tmpq2fac"]}], "//", "Simplify"}]}], ";", 
      "\[IndentingNewLine]", "\"\<Find remainder:\>\"", ";", 
      "\[IndentingNewLine]", 
      RowBox[{"tmps", "=", 
       RowBox[{
        RowBox[{"dotRetain", "[", 
         RowBox[{"retainList", ",", 
          RowBox[{"tmpD", ".", "tmpD"}]}], "]"}], "/.", "subsimple"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"tmpr", "=", 
       RowBox[{
        RowBox[{
         RowBox[{"tmpId", "-", "tmps"}], "/.", 
         RowBox[{"xDot", "->", "Dot"}]}], "//", "Expand"}]}], ";", 
      "\[IndentingNewLine]", "\"\<Should not have any var.\>\"", ";", 
      "\[IndentingNewLine]", 
      RowBox[{"tmpr", "=", " ", 
       RowBox[{
        RowBox[{"dotRetain", "[", 
         RowBox[{"retainList", ",", "tmpr"}], "]"}], "//", "Simplify"}]}], 
      ";", "\[IndentingNewLine]", 
      "\"\<Find linear transform h[var] to yield form \
(\!\(\*SuperscriptBox[\(h\), \(2\)]\)+D) in denominator where h is new \
integration variable.\>\"", ";", "\[IndentingNewLine]", 
      RowBox[{"sub", "=", 
       RowBox[{"h", "==", "tmpD"}]}], " ", ";", "\[IndentingNewLine]", 
      RowBox[{"subvar", "=", 
       RowBox[{
        RowBox[{"Solve", "[", 
         RowBox[{"sub", ",", "var"}], "]"}], "[", 
        RowBox[{"[", 
         RowBox[{"1", ",", "1"}], "]"}], "]"}]}], ";", "\"\< and \>\"", ";", 
      "\[IndentingNewLine]", 
      RowBox[{"subh", "=", 
       RowBox[{
        RowBox[{"Solve", "[", 
         RowBox[{"sub", ",", "h"}], "]"}], "[", 
        RowBox[{"[", 
         RowBox[{"1", ",", "1"}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      
      RowBox[{"(*", 
       RowBox[{
       "reinsert", " ", "Dot", " ", "for", " ", "squared", " ", "terms"}], 
       " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"tmps", "=", 
       RowBox[{
        RowBox[{"tmps", " ", "/.", "subvar"}], "/.", 
        RowBox[{
         SuperscriptBox["a_", "2"], "\[Rule]", 
         RowBox[{"a", ".", "a"}]}]}]}], ";", "Yield", ";", 
      "\[IndentingNewLine]", 
      RowBox[{"tmps", "=", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"dotRetain", "[", 
            RowBox[{"retainList", ",", "tmps"}], "]"}], "/.", "subsimple"}], "//.",
           "simpleDot"}], "/.", "commuteDot"}], "//", "Simplify"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"tmpr", "=", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"dotRetain", "[", 
            RowBox[{"retainList", ",", "tmpr"}], "]"}], "/.", "subsimple"}], "//.",
           "simpleDot"}], "/.", "commuteDot"}], "//", "Simplify"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"tmp", "=", 
       RowBox[{"tmps", "+", "D"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"subD", "=", 
       RowBox[{"D", "->", "tmpr"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"dvar", "=", 
       RowBox[{
        RowBox[{"d", "[", "var", "]"}], "\[Rule]", 
        RowBox[{
         RowBox[{"d", "[", "h", "]"}], 
         RowBox[{"D", "[", 
          RowBox[{
           RowBox[{"subvar", "[", 
            RowBox[{"[", "2", "]"}], "]"}], ",", "h"}], "]"}]}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"tmp", ",", "subD", ",", "dvar", ",", "subh", ",", "subvar"}], 
       "}"}]}]}], "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}]}], 
  "\[IndentingNewLine]"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.47230909072314*^9, 3.472309092946138*^9}, {
   3.4723095693567667`*^9, 3.4723095774376373`*^9}, {3.472309618033702*^9, 
   3.4723098206138973`*^9}, {3.472310216199024*^9, 3.472310248745492*^9}, {
   3.472310289817644*^9, 3.4723102971803293`*^9}, {3.472310352962556*^9, 
   3.472310410721032*^9}, {3.4723105379410057`*^9, 3.472310588774393*^9}, {
   3.472310623269526*^9, 3.4723106479034653`*^9}, {3.4723106996432133`*^9, 
   3.4723107039457827`*^9}, {3.4723107456783743`*^9, 3.472310772070819*^9}, {
   3.472310822930298*^9, 3.472310825409032*^9}, {3.472310865608922*^9, 
   3.4723109051932173`*^9}, {3.472310944392338*^9, 3.472311012296529*^9}, {
   3.472311222475559*^9, 3.472311240110578*^9}, {3.472311271428865*^9, 
   3.472311356012374*^9}, {3.472311453450109*^9, 3.47231145408899*^9}, 
   3.472311526498698*^9, {3.472311568729794*^9, 3.472311680552987*^9}, {
   3.47231172240936*^9, 3.472311748144167*^9}, {3.4723117856516438`*^9, 
   3.472311832446262*^9}, {3.472311889943754*^9, 3.472311917623337*^9}, {
   3.472311965272068*^9, 3.472312014872343*^9}, {3.4723120477331448`*^9, 
   3.472312098603717*^9}, {3.472312140410849*^9, 3.472312142361628*^9}, {
   3.4723122026426477`*^9, 3.472312267862661*^9}, {3.4723123359411297`*^9, 
   3.472312397248356*^9}, 3.472312584441556*^9, {3.472312709022979*^9, 
   3.4723128181375427`*^9}, {3.472312869662681*^9, 3.472312892062088*^9}, {
   3.4723129237384043`*^9, 3.472312924161347*^9}, {3.472313068897991*^9, 
   3.472313082031315*^9}, {3.472313254297049*^9, 3.4723132913558397`*^9}, {
   3.4723133481396217`*^9, 3.472313348644167*^9}, {3.472313425737389*^9, 
   3.472313469200234*^9}, {3.472313512603074*^9, 3.47231351308245*^9}, {
   3.472313549509507*^9, 3.472313626601734*^9}, {3.472313803824744*^9, 
   3.472313839561607*^9}, {3.472313878890984*^9, 3.472313904310665*^9}, {
   3.472313942131893*^9, 3.472313980710587*^9}, {3.472314057768674*^9, 
   3.472314060047044*^9}, {3.472314113193363*^9, 3.472314114041045*^9}, {
   3.4723141670303297`*^9, 3.472314205548416*^9}, {3.4723142525210943`*^9, 
   3.472314260086515*^9}, {3.4723142919305573`*^9, 3.472314315862831*^9}, {
   3.472323103883106*^9, 3.472323229928718*^9}, {3.472323268269483*^9, 
   3.4723232947936697`*^9}, {3.4723233285515347`*^9, 3.472323339829924*^9}, 
   3.472323469014372*^9, {3.4723235122866497`*^9, 3.472323521862122*^9}, {
   3.4723236527131357`*^9, 3.472323672709128*^9}, {3.472323716941966*^9, 
   3.472323717109775*^9}, {3.4723237567702427`*^9, 3.472323757392289*^9}, {
   3.472323787773069*^9, 3.47232382808499*^9}, {3.472323864080779*^9, 
   3.472323897295329*^9}, {3.472324061239787*^9, 3.472324180130039*^9}, {
   3.472324230290553*^9, 3.47232461401721*^9}, {3.47232465360982*^9, 
   3.4723246899217052`*^9}, {3.4723247749540863`*^9, 3.472324987718821*^9}, {
   3.472325024907262*^9, 3.472325025758129*^9}, {3.4723250574133053`*^9, 
   3.472325233125492*^9}, {3.472325263433511*^9, 3.472325427901514*^9}, {
   3.472325463610503*^9, 3.472325497484981*^9}, {3.472325561742908*^9, 
   3.4723255806662903`*^9}, {3.472388573769992*^9, 3.472388686859139*^9}, 
   3.472390638569371*^9, 3.4723908254392977`*^9, {3.4727840743095922`*^9, 
   3.472784077555717*^9}, {3.472785802653492*^9, 3.472785812624651*^9}, {
   3.472786560403493*^9, 3.472786614705434*^9}}]
},
AutoGeneratedPackage->Automatic,
WindowSize->{640, 656},
WindowMargins->{{140, Automatic}, {Automatic, 0}},
ShowSelection->True,
InputAliases->{"addia" -> RowBox[{"AddInputAlias", "[", 
     RowBox[{"\"\[SelectionPlaceholder]\"", "\[Rule]", 
       TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], "]"}], "bra" -> 
  TagBox[
    RowBox[{"\[LeftAngleBracket]", 
      AdjustmentBox[
       TagBox[
       "\[SelectionPlaceholder]", QuantumAlgebra`QuantumAlgebra`BraArgs, 
        BaseStyle -> "BraKetArg"], BoxBaselineShift -> 0], 
      AdjustmentBox[
      "\[VerticalSeparator]", BoxMargins -> {{0, -0.2}, {0, 0}}]}], 
    QuantumAlgebra`QuantumAlgebra`Bra, BaseStyle -> "BraWrapper"], "bra" -> 
  TagBox[
    RowBox[{"\[LeftAngleBracket]", 
      TagBox[
      "\[Placeholder]", Quantum`Notation`zz080BraArgs, Editable -> True, 
       Selectable -> True], "\[VerticalSeparator]"}], 
    Quantum`Notation`zz080Bra, Editable -> False, Selectable -> False], 
  "braket" -> TagBox[
    RowBox[{"\[LeftAngleBracket]", 
      AdjustmentBox[
       RowBox[{
         TagBox[
         "\[SelectionPlaceholder]", QuantumAlgebra`QuantumAlgebra`BraKetArgs, 
          BaseStyle -> "BraKetArg"], "\[VerticalSeparator]", 
         TagBox[
         "\[SelectionPlaceholder]", QuantumAlgebra`QuantumAlgebra`BraKetArgs, 
          BaseStyle -> "BraKetArg"]}], BoxBaselineShift -> 0], 
      "\[RightAngleBracket]"}], QuantumAlgebra`QuantumAlgebra`Braket, 
    BaseStyle -> "BraKetWrapper"], "braket" -> TagBox[
    RowBox[{"\[LeftAngleBracket]", 
      TagBox[
      "\[Placeholder]", Quantum`Notation`zz080BraArgs, Editable -> True, 
       Selectable -> True], "\[VerticalSeparator]", 
      TagBox[
      "\[Placeholder]", Quantum`Notation`zz080KetArgs, Editable -> True, 
       Selectable -> True], "\[RightAngleBracket]"}], 
    Quantum`Notation`zz080BraKet, Editable -> False, Selectable -> False], 
  "braketdu" -> TagBox[
    SubsuperscriptBox[
     RowBox[{"\[LeftAngleBracket]", 
       AdjustmentBox[
        RowBox[{
          TagBox[
          "\[SelectionPlaceholder]", QuantumAlgebra`QuantumAlgebra`BraKetArgs,
            BaseStyle -> "BraKetArg"], "\[VerticalSeparator]", 
          TagBox[
          "\[SelectionPlaceholder]", QuantumAlgebra`QuantumAlgebra`BraKetArgs,
            BaseStyle -> "BraKetArg"]}], BoxBaselineShift -> 0], 
       "\[RightAngleBracket]"}], 
     TagBox[
      AdjustmentBox[
       TagBox[
       "\[SelectionPlaceholder]", QuantumAlgebra`QuantumAlgebra`KetArgs, 
        BaseStyle -> "BraKetArg"], BoxBaselineShift -> 0], 
      QuantumAlgebra`QuantumAlgebra`UDScript, BaseStyle -> "RIndex"], 
     TagBox[
      AdjustmentBox[
       TagBox[
       "\[SelectionPlaceholder]", QuantumAlgebra`QuantumAlgebra`KetArgs, 
        BaseStyle -> "BraKetArg"], BoxBaselineShift -> 0], 
      QuantumAlgebra`QuantumAlgebra`UDScript, BaseStyle -> "RIndex"]], 
    QuantumAlgebra`QuantumAlgebra`Braket, BaseStyle -> "BraKetWrapper"], 
  "braketu" -> TagBox[
    SuperscriptBox[
     RowBox[{"\[LeftAngleBracket]", 
       AdjustmentBox[
        RowBox[{
          TagBox[
          "\[SelectionPlaceholder]", QuantumAlgebra`QuantumAlgebra`BraKetArgs,
            BaseStyle -> "BraKetArg"], "\[VerticalSeparator]", 
          TagBox[
          "\[SelectionPlaceholder]", QuantumAlgebra`QuantumAlgebra`BraKetArgs,
            BaseStyle -> "BraKetArg"]}], BoxBaselineShift -> 0], 
       "\[RightAngleBracket]"}], 
     TagBox[
      AdjustmentBox[
       TagBox[
       "\[SelectionPlaceholder]", QuantumAlgebra`QuantumAlgebra`KetArgs, 
        BaseStyle -> "BraKetArg"], BoxBaselineShift -> 0], 
      QuantumAlgebra`QuantumAlgebra`UDScript, BaseStyle -> "RIndex"]], 
    QuantumAlgebra`QuantumAlgebra`Braket, BaseStyle -> "BraKetWrapper"], 
  "com" -> SubscriptBox[
    RowBox[{"[", "\[SelectionPlaceholder]", "]"}], "-"], "con" -> 
  SuperscriptBox[
    RowBox[{"(", "\[Placeholder]", ")"}], "*"], "dbra" -> TagBox[
    RowBox[{
      SubscriptBox["\[InvisiblePrefixScriptBase]", 
       TagBox[
        AdjustmentBox[
         TagBox[
         "\[SelectionPlaceholder]", QuantumAlgebra`QuantumAlgebra`BraArgs, 
          BaseStyle -> "BraKetArg"], BoxBaselineShift -> 0], 
        QuantumAlgebra`QuantumAlgebra`UDScript, BaseStyle -> "LIndex"]], 
      RowBox[{"\[LeftAngleBracket]", 
        AdjustmentBox[
         TagBox[
         "\[SelectionPlaceholder]", QuantumAlgebra`QuantumAlgebra`BraArgs, 
          BaseStyle -> "BraKetArg"], BoxBaselineShift -> 0], 
        AdjustmentBox[
        "\[VerticalSeparator]", BoxMargins -> {{0, -0.2}, {0, 0}}]}]}], 
    QuantumAlgebra`QuantumAlgebra`Bra, BaseStyle -> "BraWrapper"], "dbraket" -> 
  TagBox[
    RowBox[{
      SubscriptBox["\[InvisiblePrefixScriptBase]", 
       TagBox[
        AdjustmentBox[
         TagBox[
         "\[SelectionPlaceholder]", QuantumAlgebra`QuantumAlgebra`BraArgs, 
          BaseStyle -> "BraKetArg"], BoxBaselineShift -> 0], 
        QuantumAlgebra`QuantumAlgebra`UDScript, BaseStyle -> "LIndex"]], 
      RowBox[{"\[LeftAngleBracket]", 
        AdjustmentBox[
         RowBox[{
           TagBox[
           "\[SelectionPlaceholder]", 
            QuantumAlgebra`QuantumAlgebra`BraKetArgs, BaseStyle -> 
            "BraKetArg"], "\[VerticalSeparator]", 
           TagBox[
           "\[SelectionPlaceholder]", 
            QuantumAlgebra`QuantumAlgebra`BraKetArgs, BaseStyle -> 
            "BraKetArg"]}], BoxBaselineShift -> 0], 
        "\[RightAngleBracket]"}]}], QuantumAlgebra`QuantumAlgebra`Braket, 
    BaseStyle -> "BraKetWrapper"], "dbraketd" -> TagBox[
    RowBox[{
      SubscriptBox["\[InvisiblePrefixScriptBase]", 
       TagBox[
        AdjustmentBox[
         TagBox[
         "\[SelectionPlaceholder]", QuantumAlgebra`QuantumAlgebra`BraArgs, 
          BaseStyle -> "BraKetArg"], BoxBaselineShift -> 0], 
        QuantumAlgebra`QuantumAlgebra`UDScript, BaseStyle -> "LIndex"]], 
      SubscriptBox[
       RowBox[{"\[LeftAngleBracket]", 
         AdjustmentBox[
          RowBox[{
            TagBox[
            "\[SelectionPlaceholder]", 
             QuantumAlgebra`QuantumAlgebra`BraKetArgs, BaseStyle -> 
             "BraKetArg"], "\[VerticalSeparator]", 
            TagBox[
            "\[SelectionPlaceholder]", 
             QuantumAlgebra`QuantumAlgebra`BraKetArgs, BaseStyle -> 
             "BraKetArg"]}], BoxBaselineShift -> 0], "\[RightAngleBracket]"}], 
       TagBox[
        AdjustmentBox[
         TagBox[
         "\[SelectionPlaceholder]", QuantumAlgebra`QuantumAlgebra`BraArgs, 
          BaseStyle -> "BraKetArg"], BoxBaselineShift -> 0], 
        QuantumAlgebra`QuantumAlgebra`UDScript, BaseStyle -> "RIndex"]]}], 
    QuantumAlgebra`QuantumAlgebra`Braket, BaseStyle -> "BraKetWrapper"], 
  "dbraketdu" -> TagBox[
    RowBox[{
      SubscriptBox["\[InvisiblePrefixScriptBase]", 
       TagBox[
        AdjustmentBox[
         TagBox[
         "\[SelectionPlaceholder]", QuantumAlgebra`QuantumAlgebra`BraArgs, 
          BaseStyle -> "BraKetArg"], BoxBaselineShift -> 0], 
        QuantumAlgebra`QuantumAlgebra`UDScript, BaseStyle -> "LIndex"]], 
      SubsuperscriptBox[
       RowBox[{"\[LeftAngleBracket]", 
         AdjustmentBox[
          RowBox[{
            TagBox[
            "\[SelectionPlaceholder]", 
             QuantumAlgebra`QuantumAlgebra`BraKetArgs, BaseStyle -> 
             "BraKetArg"], "\[VerticalSeparator]", 
            TagBox[
            "\[SelectionPlaceholder]", 
             QuantumAlgebra`QuantumAlgebra`BraKetArgs, BaseStyle -> 
             "BraKetArg"]}], BoxBaselineShift -> 0], "\[RightAngleBracket]"}], 
       TagBox[
        AdjustmentBox[
         TagBox[
         "\[SelectionPlaceholder]", QuantumAlgebra`QuantumAlgebra`BraArgs, 
          BaseStyle -> "BraKetArg"], BoxBaselineShift -> 0], 
        QuantumAlgebra`QuantumAlgebra`UDScript, BaseStyle -> "RIndex"], 
       TagBox[
        AdjustmentBox[
         TagBox[
         "\[SelectionPlaceholder]", QuantumAlgebra`QuantumAlgebra`BraArgs, 
          BaseStyle -> "BraKetArg"], BoxBaselineShift -> 0], 
        QuantumAlgebra`QuantumAlgebra`UDScript, BaseStyle -> "RIndex"]]}], 
    QuantumAlgebra`QuantumAlgebra`Braket, BaseStyle -> "BraKetWrapper"], 
  "dbraketu" -> TagBox[
    RowBox[{
      SubscriptBox["\[InvisiblePrefixScriptBase]", 
       TagBox[
        AdjustmentBox[
         TagBox[
         "\[SelectionPlaceholder]", QuantumAlgebra`QuantumAlgebra`BraArgs, 
          BaseStyle -> "BraKetArg"], BoxBaselineShift -> 0], 
        QuantumAlgebra`QuantumAlgebra`UDScript, BaseStyle -> "LIndex"]], 
      SuperscriptBox[
       RowBox[{"\[LeftAngleBracket]", 
         AdjustmentBox[
          RowBox[{
            TagBox[
            "\[SelectionPlaceholder]", 
             QuantumAlgebra`QuantumAlgebra`BraKetArgs, BaseStyle -> 
             "BraKetArg"], "\[VerticalSeparator]", 
            TagBox[
            "\[SelectionPlaceholder]", 
             QuantumAlgebra`QuantumAlgebra`BraKetArgs, BaseStyle -> 
             "BraKetArg"]}], BoxBaselineShift -> 0], "\[RightAngleBracket]"}], 
       TagBox[
        AdjustmentBox[
         TagBox[
         "\[SelectionPlaceholder]", QuantumAlgebra`QuantumAlgebra`BraArgs, 
          BaseStyle -> "BraKetArg"], BoxBaselineShift -> 0], 
        QuantumAlgebra`QuantumAlgebra`UDScript, BaseStyle -> "RIndex"]]}], 
    QuantumAlgebra`QuantumAlgebra`Braket, BaseStyle -> "BraKetWrapper"], 
  "dintt" -> RowBox[{
     SubsuperscriptBox[
     "\[Integral]", "\[SelectionPlaceholder]", "\[Placeholder]"], 
     RowBox[{"\[Placeholder]", 
       RowBox[{"\[DifferentialD]", "\[Placeholder]"}]}]}], "dt" -> RowBox[{
     SubscriptBox["\[PartialD]", "\[Placeholder]"], " ", 
     "\[SelectionPlaceholder]"}], "dubra" -> TagBox[
    RowBox[{
      SubsuperscriptBox["\[InvisiblePrefixScriptBase]", 
       TagBox[
        AdjustmentBox[
         TagBox[
         "\[SelectionPlaceholder]", QuantumAlgebra`QuantumAlgebra`BraArgs, 
          BaseStyle -> "BraKetArg"], BoxBaselineShift -> 0], 
        QuantumAlgebra`QuantumAlgebra`UDScript, BaseStyle -> "LIndex"], 
       TagBox[
        AdjustmentBox[
         TagBox[
         "\[SelectionPlaceholder]", QuantumAlgebra`QuantumAlgebra`BraArgs, 
          BaseStyle -> "BraKetArg"], BoxBaselineShift -> 0], 
        QuantumAlgebra`QuantumAlgebra`UDScript, BaseStyle -> "LIndex"]], 
      RowBox[{"\[LeftAngleBracket]", 
        AdjustmentBox[
         TagBox[
         "\[SelectionPlaceholder]", QuantumAlgebra`QuantumAlgebra`BraArgs, 
          BaseStyle -> "BraKetArg"], BoxBaselineShift -> 0], 
        AdjustmentBox[
        "\[VerticalSeparator]", BoxMargins -> {{0, -0.2}, {0, 0}}]}]}], 
    QuantumAlgebra`QuantumAlgebra`Bra, BaseStyle -> "BraWrapper"], "dubraket" -> 
  TagBox[
    RowBox[{
      SubsuperscriptBox["\[InvisiblePrefixScriptBase]", 
       TagBox[
        AdjustmentBox[
         TagBox[
         "\[SelectionPlaceholder]", QuantumAlgebra`QuantumAlgebra`BraArgs, 
          BaseStyle -> "BraKetArg"], BoxBaselineShift -> 0], 
        QuantumAlgebra`QuantumAlgebra`UDScript, BaseStyle -> "LIndex"], 
       TagBox[
        AdjustmentBox[
         TagBox[
         "\[SelectionPlaceholder]", QuantumAlgebra`QuantumAlgebra`BraArgs, 
          BaseStyle -> "BraKetArg"], BoxBaselineShift -> 0], 
        QuantumAlgebra`QuantumAlgebra`UDScript, BaseStyle -> "LIndex"]], 
      RowBox[{"\[LeftAngleBracket]", 
        AdjustmentBox[
         RowBox[{
           TagBox[
           "\[SelectionPlaceholder]", 
            QuantumAlgebra`QuantumAlgebra`BraKetArgs, BaseStyle -> 
            "BraKetArg"], "\[VerticalSeparator]", 
           TagBox[
           "\[SelectionPlaceholder]", 
            QuantumAlgebra`QuantumAlgebra`BraKetArgs, BaseStyle -> 
            "BraKetArg"]}], BoxBaselineShift -> 0], 
        "\[RightAngleBracket]"}]}], QuantumAlgebra`QuantumAlgebra`Braket, 
    BaseStyle -> "BraKetWrapper"], "dubraketd" -> TagBox[
    RowBox[{
      SubsuperscriptBox["\[InvisiblePrefixScriptBase]", 
       TagBox[
        AdjustmentBox[
         TagBox[
         "\[SelectionPlaceholder]", QuantumAlgebra`QuantumAlgebra`BraArgs, 
          BaseStyle -> "BraKetArg"], BoxBaselineShift -> 0], 
        QuantumAlgebra`QuantumAlgebra`UDScript, BaseStyle -> "LIndex"], 
       TagBox[
        AdjustmentBox[
         TagBox[
         "\[SelectionPlaceholder]", QuantumAlgebra`QuantumAlgebra`BraArgs, 
          BaseStyle -> "BraKetArg"], BoxBaselineShift -> 0], 
        QuantumAlgebra`QuantumAlgebra`UDScript, BaseStyle -> "LIndex"]], 
      SubscriptBox[
       RowBox[{"\[LeftAngleBracket]", 
         AdjustmentBox[
          RowBox[{
            TagBox[
            "\[SelectionPlaceholder]", 
             QuantumAlgebra`QuantumAlgebra`BraKetArgs, BaseStyle -> 
             "BraKetArg"], "\[VerticalSeparator]", 
            TagBox[
            "\[SelectionPlaceholder]", 
             QuantumAlgebra`QuantumAlgebra`BraKetArgs, BaseStyle -> 
             "BraKetArg"]}], BoxBaselineShift -> 0], "\[RightAngleBracket]"}], 
       TagBox[
        AdjustmentBox[
         TagBox[
         "\[SelectionPlaceholder]", QuantumAlgebra`QuantumAlgebra`BraArgs, 
          BaseStyle -> "BraKetArg"], BoxBaselineShift -> 0], 
        QuantumAlgebra`QuantumAlgebra`UDScript, BaseStyle -> "RIndex"]]}], 
    QuantumAlgebra`QuantumAlgebra`Braket, BaseStyle -> "BraKetWrapper"], 
  "dubraketdu" -> TagBox[
    RowBox[{
      SubsuperscriptBox["\[InvisiblePrefixScriptBase]", 
       TagBox[
        AdjustmentBox[
         TagBox[
         "\[SelectionPlaceholder]", QuantumAlgebra`QuantumAlgebra`BraArgs, 
          BaseStyle -> "BraKetArg"], BoxBaselineShift -> 0], 
        QuantumAlgebra`QuantumAlgebra`UDScript, BaseStyle -> "LIndex"], 
       TagBox[
        AdjustmentBox[
         TagBox[
         "\[SelectionPlaceholder]", QuantumAlgebra`QuantumAlgebra`BraArgs, 
          BaseStyle -> "BraKetArg"], BoxBaselineShift -> 0], 
        QuantumAlgebra`QuantumAlgebra`UDScript, BaseStyle -> "LIndex"]], 
      SubsuperscriptBox[
       RowBox[{"\[LeftAngleBracket]", 
         AdjustmentBox[
          RowBox[{
            TagBox[
            "\[SelectionPlaceholder]", 
             QuantumAlgebra`QuantumAlgebra`BraKetArgs, BaseStyle -> 
             "BraKetArg"], "\[VerticalSeparator]", 
            TagBox[
            "\[SelectionPlaceholder]", 
             QuantumAlgebra`QuantumAlgebra`BraKetArgs, BaseStyle -> 
             "BraKetArg"]}], BoxBaselineShift -> 0], "\[RightAngleBracket]"}], 
       TagBox[
        AdjustmentBox[
         TagBox[
         "\[SelectionPlaceholder]", QuantumAlgebra`QuantumAlgebra`BraArgs, 
          BaseStyle -> "BraKetArg"], BoxBaselineShift -> 0], 
        QuantumAlgebra`QuantumAlgebra`UDScript, BaseStyle -> "RIndex"], 
       TagBox[
        AdjustmentBox[
         TagBox[
         "\[SelectionPlaceholder]", QuantumAlgebra`QuantumAlgebra`BraArgs, 
          BaseStyle -> "BraKetArg"], BoxBaselineShift -> 0], 
        QuantumAlgebra`QuantumAlgebra`UDScript, BaseStyle -> "RIndex"]]}], 
    QuantumAlgebra`QuantumAlgebra`Braket, BaseStyle -> "BraKetWrapper"], 
  "dubraketu" -> TagBox[
    RowBox[{
      SubsuperscriptBox["\[InvisiblePrefixScriptBase]", 
       TagBox[
        AdjustmentBox[
         TagBox[
         "\[SelectionPlaceholder]", QuantumAlgebra`QuantumAlgebra`BraArgs, 
          BaseStyle -> "BraKetArg"], BoxBaselineShift -> 0], 
        QuantumAlgebra`QuantumAlgebra`UDScript, BaseStyle -> "LIndex"], 
       TagBox[
        AdjustmentBox[
         TagBox[
         "\[SelectionPlaceholder]", QuantumAlgebra`QuantumAlgebra`BraArgs, 
          BaseStyle -> "BraKetArg"], BoxBaselineShift -> 0], 
        QuantumAlgebra`QuantumAlgebra`UDScript, BaseStyle -> "LIndex"]], 
      SuperscriptBox[
       RowBox[{"\[LeftAngleBracket]", 
         AdjustmentBox[
          RowBox[{
            TagBox[
            "\[SelectionPlaceholder]", 
             QuantumAlgebra`QuantumAlgebra`BraKetArgs, BaseStyle -> 
             "BraKetArg"], "\[VerticalSeparator]", 
            TagBox[
            "\[SelectionPlaceholder]", 
             QuantumAlgebra`QuantumAlgebra`BraKetArgs, BaseStyle -> 
             "BraKetArg"]}], BoxBaselineShift -> 0], "\[RightAngleBracket]"}], 
       TagBox[
        AdjustmentBox[
         TagBox[
         "\[SelectionPlaceholder]", QuantumAlgebra`QuantumAlgebra`BraArgs, 
          BaseStyle -> "BraKetArg"], BoxBaselineShift -> 0], 
        QuantumAlgebra`QuantumAlgebra`UDScript, BaseStyle -> "RIndex"]]}], 
    QuantumAlgebra`QuantumAlgebra`Braket, BaseStyle -> "BraKetWrapper"], 
  "ebra" -> TagBox[
    RowBox[{"\[LeftAngleBracket]", 
      TagBox[
       RowBox[{
         SubscriptBox["\[Placeholder]", 
          OverscriptBox["\[Placeholder]", "^"]]}], 
       Quantum`Notation`zz080BraArgs, Editable -> True, Selectable -> True], 
      "\[VerticalSeparator]"}], Quantum`Notation`zz080Bra, Editable -> False, 
    Selectable -> False], "ebraket" -> TagBox[
    RowBox[{"\[LeftAngleBracket]", 
      TagBox[
       RowBox[{
         SubscriptBox["\[Placeholder]", 
          OverscriptBox["\[Placeholder]", "^"]]}], 
       Quantum`Notation`zz080BraArgs, Editable -> True, Selectable -> True], 
      "\[VerticalSeparator]", 
      TagBox[
       RowBox[{
         SubscriptBox["\[Placeholder]", 
          OverscriptBox["\[Placeholder]", "^"]]}], 
       Quantum`Notation`zz080KetArgs, Editable -> True, Selectable -> True], 
      "\[RightAngleBracket]"}], Quantum`Notation`zz080BraKet, Editable -> 
    False, Selectable -> False], "eebra" -> TagBox[
    RowBox[{"\[LeftAngleBracket]", 
      TagBox[
       RowBox[{
         SubscriptBox["\[Placeholder]", 
          OverscriptBox["\[Placeholder]", "^"]], ",", 
         SubscriptBox["\[Placeholder]", 
          OverscriptBox["\[Placeholder]", "^"]]}], 
       Quantum`Notation`zz080BraArgs, Editable -> True, Selectable -> True], 
      "\[VerticalSeparator]"}], Quantum`Notation`zz080Bra, Editable -> False, 
    Selectable -> False], "eebraket" -> TagBox[
    RowBox[{"\[LeftAngleBracket]", 
      TagBox[
       RowBox[{
         SubscriptBox["\[Placeholder]", 
          OverscriptBox["\[Placeholder]", "^"]], ",", 
         SubscriptBox["\[Placeholder]", 
          OverscriptBox["\[Placeholder]", "^"]]}], 
       Quantum`Notation`zz080BraArgs, Editable -> True, Selectable -> True], 
      "\[VerticalSeparator]", 
      TagBox[
       RowBox[{
         SubscriptBox["\[Placeholder]", 
          OverscriptBox["\[Placeholder]", "^"]], ",", 
         SubscriptBox["\[Placeholder]", 
          OverscriptBox["\[Placeholder]", "^"]]}], 
       Quantum`Notation`zz080KetArgs, Editable -> True, Selectable -> True], 
      "\[RightAngleBracket]"}], Quantum`Notation`zz080BraKet, Editable -> 
    False, Selectable -> False], "eeebra" -> TagBox[
    RowBox[{"\[LeftAngleBracket]", 
      TagBox[
       RowBox[{
         SubscriptBox["\[Placeholder]", 
          OverscriptBox["\[Placeholder]", "^"]], ",", 
         SubscriptBox["\[Placeholder]", 
          OverscriptBox["\[Placeholder]", "^"]], ",", 
         SubscriptBox["\[Placeholder]", 
          OverscriptBox["\[Placeholder]", "^"]]}], 
       Quantum`Notation`zz080BraArgs, Editable -> True, Selectable -> True], 
      "\[VerticalSeparator]"}], Quantum`Notation`zz080Bra, Editable -> False, 
    Selectable -> False], "eeebraket" -> TagBox[
    RowBox[{"\[LeftAngleBracket]", 
      TagBox[
       RowBox[{
         SubscriptBox["\[Placeholder]", 
          OverscriptBox["\[Placeholder]", "^"]], ",", 
         SubscriptBox["\[Placeholder]", 
          OverscriptBox["\[Placeholder]", "^"]], ",", 
         SubscriptBox["\[Placeholder]", 
          OverscriptBox["\[Placeholder]", "^"]]}], 
       Quantum`Notation`zz080BraArgs, Editable -> True, Selectable -> True], 
      "\[VerticalSeparator]", 
      TagBox[
       RowBox[{
         SubscriptBox["\[Placeholder]", 
          OverscriptBox["\[Placeholder]", "^"]], ",", 
         SubscriptBox["\[Placeholder]", 
          OverscriptBox["\[Placeholder]", "^"]], ",", 
         SubscriptBox["\[Placeholder]", 
          OverscriptBox["\[Placeholder]", "^"]]}], 
       Quantum`Notation`zz080KetArgs, Editable -> True, Selectable -> True], 
      "\[RightAngleBracket]"}], Quantum`Notation`zz080BraKet, Editable -> 
    False, Selectable -> False], "eeeket" -> TagBox[
    RowBox[{"\[VerticalSeparator]", 
      TagBox[
       RowBox[{
         SubscriptBox["\[Placeholder]", 
          OverscriptBox["\[Placeholder]", "^"]], ",", 
         SubscriptBox["\[Placeholder]", 
          OverscriptBox["\[Placeholder]", "^"]], ",", 
         SubscriptBox["\[Placeholder]", 
          OverscriptBox["\[Placeholder]", "^"]]}], 
       Quantum`Notation`zz080KetArgs, Editable -> True, Selectable -> True], 
      "\[RightAngleBracket]"}], Quantum`Notation`zz080Ket, Editable -> False, 
    Selectable -> False], "eeeketbra" -> RowBox[{
     TagBox[
      RowBox[{"\[VerticalSeparator]", 
        TagBox[
         RowBox[{
           SubscriptBox["\[Placeholder]", 
            OverscriptBox["\[Placeholder]", "^"]], ",", 
           SubscriptBox["\[Placeholder]", 
            OverscriptBox["\[Placeholder]", "^"]], ",", 
           SubscriptBox["\[Placeholder]", 
            OverscriptBox["\[Placeholder]", "^"]]}], 
         Quantum`Notation`zz080KetArgs, Editable -> True, Selectable -> True],
         "\[RightAngleBracket]"}], Quantum`Notation`zz080Ket, Editable -> 
      False, Selectable -> False], "\[CenterDot]", 
     TagBox[
      RowBox[{"\[LeftAngleBracket]", 
        TagBox[
         RowBox[{
           SubscriptBox["\[Placeholder]", 
            OverscriptBox["\[Placeholder]", "^"]], ",", 
           SubscriptBox["\[Placeholder]", 
            OverscriptBox["\[Placeholder]", "^"]], ",", 
           SubscriptBox["\[Placeholder]", 
            OverscriptBox["\[Placeholder]", "^"]]}], 
         Quantum`Notation`zz080BraArgs, Editable -> True, Selectable -> True],
         "\[VerticalSeparator]"}], Quantum`Notation`zz080Bra, Editable -> 
      False, Selectable -> False]}], "eeket" -> TagBox[
    RowBox[{"\[VerticalSeparator]", 
      TagBox[
       RowBox[{
         SubscriptBox["\[Placeholder]", 
          OverscriptBox["\[Placeholder]", "^"]], ",", 
         SubscriptBox["\[Placeholder]", 
          OverscriptBox["\[Placeholder]", "^"]]}], 
       Quantum`Notation`zz080KetArgs, Editable -> True, Selectable -> True], 
      "\[RightAngleBracket]"}], Quantum`Notation`zz080Ket, Editable -> False, 
    Selectable -> False], "eeketbra" -> RowBox[{
     TagBox[
      RowBox[{"\[VerticalSeparator]", 
        TagBox[
         RowBox[{
           SubscriptBox["\[Placeholder]", 
            OverscriptBox["\[Placeholder]", "^"]], ",", 
           SubscriptBox["\[Placeholder]", 
            OverscriptBox["\[Placeholder]", "^"]]}], 
         Quantum`Notation`zz080KetArgs, Editable -> True, Selectable -> True],
         "\[RightAngleBracket]"}], Quantum`Notation`zz080Ket, Editable -> 
      False, Selectable -> False], "\[CenterDot]", 
     TagBox[
      RowBox[{"\[LeftAngleBracket]", 
        TagBox[
         RowBox[{
           SubscriptBox["\[Placeholder]", 
            OverscriptBox["\[Placeholder]", "^"]], ",", 
           SubscriptBox["\[Placeholder]", 
            OverscriptBox["\[Placeholder]", "^"]]}], 
         Quantum`Notation`zz080BraArgs, Editable -> True, Selectable -> True],
         "\[VerticalSeparator]"}], Quantum`Notation`zz080Bra, Editable -> 
      False, Selectable -> False]}], "eket" -> TagBox[
    RowBox[{"\[VerticalSeparator]", 
      TagBox[
       RowBox[{
         SubscriptBox["\[Placeholder]", 
          OverscriptBox["\[Placeholder]", "^"]]}], 
       Quantum`Notation`zz080KetArgs, Editable -> True, Selectable -> True], 
      "\[RightAngleBracket]"}], Quantum`Notation`zz080Ket, Editable -> False, 
    Selectable -> False], "eketbra" -> RowBox[{
     TagBox[
      RowBox[{"\[VerticalSeparator]", 
        TagBox[
         SubscriptBox["\[Placeholder]", 
          OverscriptBox["\[Placeholder]", "^"]], 
         Quantum`Notation`zz080KetArgs, Editable -> True, Selectable -> True],
         "\[RightAngleBracket]"}], Quantum`Notation`zz080Ket, Editable -> 
      False, Selectable -> False], "\[CenterDot]", 
     TagBox[
      RowBox[{"\[LeftAngleBracket]", 
        TagBox[
         SubscriptBox["\[Placeholder]", 
          OverscriptBox["\[Placeholder]", "^"]], 
         Quantum`Notation`zz080BraArgs, Editable -> True, Selectable -> True],
         "\[VerticalSeparator]"}], Quantum`Notation`zz080Bra, Editable -> 
      False, Selectable -> False]}], "eval" -> 
  SubscriptBox["\[Placeholder]", 
    OverscriptBox["\[Placeholder]", "^"]], "her" -> SuperscriptBox[
    RowBox[{"(", "\[Placeholder]", ")"}], "\[Dagger]"], "hop" -> 
  SuperscriptBox[
    OverscriptBox["\[SelectionPlaceholder]", "^"], "\[Dagger]"], 
  "infixnotation" -> RowBox[{"InfixNotation", "[", 
     RowBox[{
       TemplateBox[{"\[SelectionPlaceholder]"}, "NotationTemplateTag"], ",", 
       "\[Placeholder]"}], "]"}], "intt" -> RowBox[{"\[Integral]", 
     RowBox[{"\[SelectionPlaceholder]", 
       RowBox[{"\[DifferentialD]", "\[Placeholder]"}]}]}], "ket" -> TagBox[
    RowBox[{
      AdjustmentBox[
      "\[VerticalSeparator]", BoxMargins -> {{-0.4, 0}, {0, 0}}], 
      AdjustmentBox[
       TagBox[
       "\[SelectionPlaceholder]", QuantumAlgebra`QuantumAlgebra`KetArgs, 
        BaseStyle -> "BraKetArg"], BoxBaselineShift -> 0], 
      "\[RightAngleBracket]"}], QuantumAlgebra`QuantumAlgebra`Ket, BaseStyle -> 
    "KetWrapper"], "ket" -> TagBox[
    RowBox[{"\[VerticalSeparator]", 
      TagBox[
      "\[Placeholder]", Quantum`Notation`zz080KetArgs, Editable -> True, 
       Selectable -> True], "\[RightAngleBracket]"}], 
    Quantum`Notation`zz080Ket, Editable -> False, Selectable -> False], 
  "ketbra" -> RowBox[{
     TagBox[
      RowBox[{"\[VerticalSeparator]", 
        TagBox[
        "\[Placeholder]", Quantum`Notation`zz080KetArgs, Editable -> True, 
         Selectable -> True], "\[RightAngleBracket]"}], 
      Quantum`Notation`zz080Ket, Editable -> False, Selectable -> False], 
     "\[CenterDot]", 
     TagBox[
      RowBox[{"\[LeftAngleBracket]", 
        TagBox[
        "\[Placeholder]", Quantum`Notation`zz080BraArgs, Editable -> True, 
         Selectable -> True], "\[VerticalSeparator]"}], 
      Quantum`Notation`zz080Bra, Editable -> False, Selectable -> False]}], 
  "ketd" -> TagBox[
    SubscriptBox[
     RowBox[{
       AdjustmentBox[
       "\[VerticalSeparator]", BoxMargins -> {{-0.4, 0}, {0, 0}}], 
       AdjustmentBox[
        TagBox[
        "\[SelectionPlaceholder]", QuantumAlgebra`QuantumAlgebra`KetArgs, 
         BaseStyle -> "BraKetArg"], BoxBaselineShift -> 0], 
       "\[RightAngleBracket]"}], 
     TagBox[
      AdjustmentBox[
       TagBox[
       "\[SelectionPlaceholder]", QuantumAlgebra`QuantumAlgebra`KetArgs, 
        BaseStyle -> "BraKetArg"], BoxBaselineShift -> 0], 
      QuantumAlgebra`QuantumAlgebra`UDScript, BaseStyle -> "RIndex"]], 
    QuantumAlgebra`QuantumAlgebra`Ket, BaseStyle -> "KetWrapper"], "ketdef" -> 
  RowBox[{"\[Placeholder]", "/:", 
     TagBox[
      RowBox[{"\[VerticalSeparator]", 
        TagBox[
        "\[Placeholder]", Quantum`Notation`zz080KetArgs, Editable -> True, 
         Selectable -> True], "\[RightAngleBracket]"}], 
      Quantum`Notation`zz080Ket, Editable -> False, Selectable -> False], "=",
      "\[Placeholder]"}], "ketdu" -> TagBox[
    SubsuperscriptBox[
     RowBox[{
       AdjustmentBox[
       "\[VerticalSeparator]", BoxMargins -> {{-0.4, 0}, {0, 0}}], 
       AdjustmentBox[
        TagBox[
        "\[SelectionPlaceholder]", QuantumAlgebra`QuantumAlgebra`KetArgs, 
         BaseStyle -> "BraKetArg"], BoxBaselineShift -> 0], 
       "\[RightAngleBracket]"}], 
     TagBox[
      AdjustmentBox[
       TagBox[
       "\[SelectionPlaceholder]", QuantumAlgebra`QuantumAlgebra`KetArgs, 
        BaseStyle -> "BraKetArg"], BoxBaselineShift -> 0], 
      QuantumAlgebra`QuantumAlgebra`UDScript, BaseStyle -> "RIndex"], 
     TagBox[
      AdjustmentBox[
       TagBox[
       "\[SelectionPlaceholder]", QuantumAlgebra`QuantumAlgebra`KetArgs, 
        BaseStyle -> "BraKetArg"], BoxBaselineShift -> 0], 
      QuantumAlgebra`QuantumAlgebra`UDScript, BaseStyle -> "RIndex"]], 
    QuantumAlgebra`QuantumAlgebra`Ket, BaseStyle -> "KetWrapper"], "ketu" -> 
  TagBox[
    SuperscriptBox[
     RowBox[{
       AdjustmentBox[
       "\[VerticalSeparator]", BoxMargins -> {{-0.4, 0}, {0, 0}}], 
       AdjustmentBox[
        TagBox[
        "\[SelectionPlaceholder]", QuantumAlgebra`QuantumAlgebra`KetArgs, 
         BaseStyle -> "BraKetArg"], BoxBaselineShift -> 0], 
       "\[RightAngleBracket]"}], 
     TagBox[
      AdjustmentBox[
       TagBox[
       "\[SelectionPlaceholder]", QuantumAlgebra`QuantumAlgebra`KetArgs, 
        BaseStyle -> "BraKetArg"], BoxBaselineShift -> 0], 
      QuantumAlgebra`QuantumAlgebra`UDScript, BaseStyle -> "RIndex"]], 
    QuantumAlgebra`QuantumAlgebra`Ket, BaseStyle -> "KetWrapper"], 
  "madeboxeswraper" -> 
  TemplateBox[{"\[SelectionPlaceholder]"}, "NotationMadeBoxesTag"], "norm" -> 
  RowBox[{"\[LeftDoubleBracketingBar]", "\[Placeholder]", 
     "\[RightDoubleBracketingBar]"}], "notation" -> RowBox[{"Notation", "[", 
     RowBox[{
       TemplateBox[{"\[SelectionPlaceholder]"}, "NotationTemplateTag"], " ", 
       "\[DoubleLongLeftRightArrow]", " ", 
       TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], "]"}], 
  "notation<" -> RowBox[{"Notation", "[", 
     RowBox[{
       TemplateBox[{"\[SelectionPlaceholder]"}, "NotationTemplateTag"], " ", 
       "\[DoubleLongLeftArrow]", " ", 
       TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], "]"}], 
  "notation>" -> RowBox[{"Notation", "[", 
     RowBox[{
       TemplateBox[{"\[SelectionPlaceholder]"}, "NotationTemplateTag"], " ", 
       "\[DoubleLongRightArrow]", " ", 
       TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], "]"}], "on" -> 
  "\[CenterDot]", "op" -> OverscriptBox["\[Placeholder]", "^"], "op" -> 
  OverscriptBox["\[SelectionPlaceholder]", "^"], "pattwraper" -> 
  TemplateBox[{"\[SelectionPlaceholder]"}, "NotationPatternTag"], "prodt" -> 
  RowBox[{
     UnderoverscriptBox["\[Product]", 
      RowBox[{"\[SelectionPlaceholder]", "=", "\[Placeholder]"}], 
      "\[Placeholder]"], "\[Placeholder]"}], "sumt" -> RowBox[{
     UnderoverscriptBox["\[Sum]", 
      RowBox[{"\[SelectionPlaceholder]", "=", "\[Placeholder]"}], 
      "\[Placeholder]"], "\[Placeholder]"}], "symb" -> 
  RowBox[{"Symbolize", "[", 
     TemplateBox[{"\[SelectionPlaceholder]"}, "NotationTemplateTag"], "]"}], 
  "tp" -> "\[CircleTimes]", "tr" -> RowBox[{
     SubscriptBox["Tr", 
      TagBox[
       OverscriptBox["\[Placeholder]", "^"], Quantum`Notation`zz080TrArgs]], 
     "[", "\[Placeholder]", "]"}], "ubra" -> TagBox[
    RowBox[{
      SuperscriptBox["\[InvisiblePrefixScriptBase]", 
       TagBox[
        AdjustmentBox[
         TagBox[
         "\[SelectionPlaceholder]", QuantumAlgebra`QuantumAlgebra`BraArgs, 
          BaseStyle -> "BraKetArg"], BoxBaselineShift -> 0], 
        QuantumAlgebra`QuantumAlgebra`UDScript, BaseStyle -> "LIndex"]], 
      RowBox[{"\[LeftAngleBracket]", 
        AdjustmentBox[
         TagBox[
         "\[SelectionPlaceholder]", QuantumAlgebra`QuantumAlgebra`BraArgs, 
          BaseStyle -> "BraKetArg"], BoxBaselineShift -> 0], 
        AdjustmentBox[
        "\[VerticalSeparator]", BoxMargins -> {{0, -0.2}, {0, 0}}]}]}], 
    QuantumAlgebra`QuantumAlgebra`Bra, BaseStyle -> "BraWrapper"], "ubraket" -> 
  TagBox[
    RowBox[{
      SuperscriptBox["\[InvisiblePrefixScriptBase]", 
       TagBox[
        AdjustmentBox[
         TagBox[
         "\[SelectionPlaceholder]", QuantumAlgebra`QuantumAlgebra`BraArgs, 
          BaseStyle -> "BraKetArg"], BoxBaselineShift -> 0], 
        QuantumAlgebra`QuantumAlgebra`UDScript, BaseStyle -> "LIndex"]], 
      RowBox[{"\[LeftAngleBracket]", 
        AdjustmentBox[
         RowBox[{
           TagBox[
           "\[SelectionPlaceholder]", 
            QuantumAlgebra`QuantumAlgebra`BraKetArgs, BaseStyle -> 
            "BraKetArg"], "\[VerticalSeparator]", 
           TagBox[
           "\[SelectionPlaceholder]", 
            QuantumAlgebra`QuantumAlgebra`BraKetArgs, BaseStyle -> 
            "BraKetArg"]}], BoxBaselineShift -> 0], 
        "\[RightAngleBracket]"}]}], QuantumAlgebra`QuantumAlgebra`Braket, 
    BaseStyle -> "BraKetWrapper"], "ubraketd" -> TagBox[
    RowBox[{
      SuperscriptBox["\[InvisiblePrefixScriptBase]", 
       TagBox[
        AdjustmentBox[
         TagBox[
         "\[SelectionPlaceholder]", QuantumAlgebra`QuantumAlgebra`BraArgs, 
          BaseStyle -> "BraKetArg"], BoxBaselineShift -> 0], 
        QuantumAlgebra`QuantumAlgebra`UDScript, BaseStyle -> "LIndex"]], 
      SubscriptBox[
       RowBox[{"\[LeftAngleBracket]", 
         AdjustmentBox[
          RowBox[{
            TagBox[
            "\[SelectionPlaceholder]", 
             QuantumAlgebra`QuantumAlgebra`BraKetArgs, BaseStyle -> 
             "BraKetArg"], "\[VerticalSeparator]", 
            TagBox[
            "\[SelectionPlaceholder]", 
             QuantumAlgebra`QuantumAlgebra`BraKetArgs, BaseStyle -> 
             "BraKetArg"]}], BoxBaselineShift -> 0], "\[RightAngleBracket]"}], 
       TagBox[
        AdjustmentBox[
         TagBox[
         "\[SelectionPlaceholder]", QuantumAlgebra`QuantumAlgebra`BraArgs, 
          BaseStyle -> "BraKetArg"], BoxBaselineShift -> 0], 
        QuantumAlgebra`QuantumAlgebra`UDScript, BaseStyle -> "RIndex"]]}], 
    QuantumAlgebra`QuantumAlgebra`Braket, BaseStyle -> "BraKetWrapper"], 
  "ubraketdu" -> TagBox[
    RowBox[{
      SuperscriptBox["\[InvisiblePrefixScriptBase]", 
       TagBox[
        AdjustmentBox[
         TagBox[
         "\[SelectionPlaceholder]", QuantumAlgebra`QuantumAlgebra`BraArgs, 
          BaseStyle -> "BraKetArg"], BoxBaselineShift -> 0], 
        QuantumAlgebra`QuantumAlgebra`UDScript, BaseStyle -> "LIndex"]], 
      SubsuperscriptBox[
       RowBox[{"\[LeftAngleBracket]", 
         AdjustmentBox[
          RowBox[{
            TagBox[
            "\[SelectionPlaceholder]", 
             QuantumAlgebra`QuantumAlgebra`BraKetArgs, BaseStyle -> 
             "BraKetArg"], "\[VerticalSeparator]", 
            TagBox[
            "\[SelectionPlaceholder]", 
             QuantumAlgebra`QuantumAlgebra`BraKetArgs, BaseStyle -> 
             "BraKetArg"]}], BoxBaselineShift -> 0], "\[RightAngleBracket]"}], 
       TagBox[
        AdjustmentBox[
         TagBox[
         "\[SelectionPlaceholder]", QuantumAlgebra`QuantumAlgebra`BraArgs, 
          BaseStyle -> "BraKetArg"], BoxBaselineShift -> 0], 
        QuantumAlgebra`QuantumAlgebra`UDScript, BaseStyle -> "RIndex"], 
       TagBox[
        AdjustmentBox[
         TagBox[
         "\[SelectionPlaceholder]", QuantumAlgebra`QuantumAlgebra`BraArgs, 
          BaseStyle -> "BraKetArg"], BoxBaselineShift -> 0], 
        QuantumAlgebra`QuantumAlgebra`UDScript, BaseStyle -> "RIndex"]]}], 
    QuantumAlgebra`QuantumAlgebra`Braket, BaseStyle -> "BraKetWrapper"], 
  "ubraketu" -> TagBox[
    RowBox[{
      SuperscriptBox["\[InvisiblePrefixScriptBase]", 
       TagBox[
        AdjustmentBox[
         TagBox[
         "\[SelectionPlaceholder]", QuantumAlgebra`QuantumAlgebra`BraArgs, 
          BaseStyle -> "BraKetArg"], BoxBaselineShift -> 0], 
        QuantumAlgebra`QuantumAlgebra`UDScript, BaseStyle -> "LIndex"]], 
      SuperscriptBox[
       RowBox[{"\[LeftAngleBracket]", 
         AdjustmentBox[
          RowBox[{
            TagBox[
            "\[SelectionPlaceholder]", 
             QuantumAlgebra`QuantumAlgebra`BraKetArgs, BaseStyle -> 
             "BraKetArg"], "\[VerticalSeparator]", 
            TagBox[
            "\[SelectionPlaceholder]", 
             QuantumAlgebra`QuantumAlgebra`BraKetArgs, BaseStyle -> 
             "BraKetArg"]}], BoxBaselineShift -> 0], "\[RightAngleBracket]"}], 
       TagBox[
        AdjustmentBox[
         TagBox[
         "\[SelectionPlaceholder]", QuantumAlgebra`QuantumAlgebra`BraArgs, 
          BaseStyle -> "BraKetArg"], BoxBaselineShift -> 0], 
        QuantumAlgebra`QuantumAlgebra`UDScript, BaseStyle -> "RIndex"]]}], 
    QuantumAlgebra`QuantumAlgebra`Braket, BaseStyle -> "BraKetWrapper"]},
FrontEndVersion->"7.0 for Mac OS X x86 (32-bit) (February 18, 2009)",
StyleDefinitions->"TensorialStyleSave.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[567, 22, 799, 15, 146, "Input",
 InitializationCell->True,
 InitializationGroup->True],
Cell[1369, 39, 653, 9, 175, "Output"],
Cell[2025, 50, 1737, 25, 475, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3799, 80, 6786, 105, 56, "Input",
 InitializationCell->True],
Cell[10588, 187, 907, 25, 35, "Output"],
Cell[11498, 214, 723, 18, 33, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[12258, 237, 7054, 148, 311, "Input",
 InitializationGroup->True],
Cell[19315, 387, 634, 16, 24, "Output"]
}, Open  ]],
Cell[19964, 406, 207, 3, 43, "EmphasisText"],
Cell[20174, 411, 9353, 247, 844, "Input",
 InitializationCell->True,
 InitializationGroup->True],
Cell[29530, 660, 101, 1, 29, "Text"],
Cell[29634, 663, 12277, 364, 794, "Input",
 InitializationCell->True,
 InitializationGroup->True],
Cell[41914, 1029, 54423, 1207, 3822, "Input",
 InitializationCell->True],
Cell[96340, 2238, 10784, 233, 776, "Input",
 InitializationCell->True]
}
]
*)

(* End of internal cache information *)
