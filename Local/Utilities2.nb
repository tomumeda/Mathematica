(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 9.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       157,          7]
NotebookDataLength[    280554,       6726]
NotebookOptionsPosition[    279195,       6697]
NotebookOutlinePosition[    279567,       6713]
CellTagsIndexPosition[    279524,       6710]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell["Graphics Definitions", "Text",
 CellChangeTimes->{{3.50006751109837*^9, 3.500067517499951*^9}, {
   3.500067637535242*^9, 3.5000676425462093`*^9}, {3.666498149443076*^9, 
   3.666498159000711*^9}, 3.666498306574155*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "Example", " ", "of", " ", "simple", " ", "graphic", " ", "aids", " ", 
     "to", " ", "draw", " ", "figures", " ", "on", " ", "a", " ", 
     RowBox[{"rectangle", ".", "  ", "Define"}], " ", "vertices", " ", "and", 
     " ", "lines"}], ";", "\[IndentingNewLine]", 
    RowBox[{"vx", "=", 
     RowBox[{"Tuples", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", "1", ",", "2", ",", "3", ",", "4"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "0", ",", 
          RowBox[{"-", "1"}]}], "}"}]}], "}"}], "]"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"Graphics", "[", 
     RowBox[{"MapIndexed", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Text", "[", 
         RowBox[{"#2", ",", "#1"}], "]"}], "&"}], ",", "vx"}], "]"}], "]"}], 
    ";", "\[IndentingNewLine]", 
    RowBox[{"line", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"vx", "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", 
         RowBox[{"vx", "[", 
          RowBox[{"[", "4", "]"}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"vx", "[", 
          RowBox[{"[", "4", "]"}], "]"}], ",", 
         RowBox[{"vx", "[", 
          RowBox[{"[", "6", "]"}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"vx", "[", 
          RowBox[{"\[PartialD]", 
           RowBox[{"[", "6", "]"}]}], "]"}], ",", 
         RowBox[{"vx", "[", 
          RowBox[{"[", "3", "]"}], "]"}]}], "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"vx", "[", 
          RowBox[{"[", "4", "]"}], "]"}], ",", 
         RowBox[{"vx", "[", 
          RowBox[{"[", "7", "]"}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"vx", "[", 
          RowBox[{"[", "6", "]"}], "]"}], ",", 
         RowBox[{"vx", "[", 
          RowBox[{"[", "9", "]"}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"vx", "[", 
          RowBox[{"[", "7", "]"}], "]"}], ",", 
         RowBox[{"vx", "[", 
          RowBox[{"[", "9", "]"}], "]"}]}], "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"vx", "[", 
          RowBox[{"[", "9", "]"}], "]"}], ",", 
         RowBox[{"vx", "[", 
          RowBox[{"[", "12", "]"}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"vx", "[", 
          RowBox[{"[", "7", "]"}], "]"}], ",", 
         RowBox[{"vx", "[", 
          RowBox[{"[", "10", "]"}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"vx", "[", 
          RowBox[{"[", "12", "]"}], "]"}], ",", 
         RowBox[{"vx", "[", 
          RowBox[{"[", "10", "]"}], "]"}]}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"vx", "[", 
          RowBox[{"[", "13", "]"}], "]"}], ",", 
         RowBox[{"vx", "[", 
          RowBox[{"[", "10", "]"}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"vx", "[", 
          RowBox[{"[", "12", "]"}], "]"}], ",", 
         RowBox[{"vx", "[", 
          RowBox[{"[", "15", "]"}], "]"}]}], "}"}]}], "\[IndentingNewLine]", 
      "}"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"Graphics", "[", 
     RowBox[{"{", 
      RowBox[{"Thin", ",", "Black", ",", 
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Line", "[", "#", "]"}], "&"}], ",", "line"}], "]"}], ",", 
       RowBox[{"MapIndexed", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Text", "[", 
           RowBox[{"#2", ",", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"#1", "[", 
                RowBox[{"[", "1", "]"}], "]"}], "+", 
               RowBox[{"#1", "[", 
                RowBox[{"[", "2", "]"}], "]"}]}], ")"}], "/", "2"}]}], "]"}], 
          "&"}], ",", "line"}], "]"}]}], "}"}], "]"}]}], 
   "\[IndentingNewLine]", "*)"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", 
  RowBox[{"(*", "  ", 
   RowBox[{
    RowBox[{"MidArrow", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"x1", ",", "y1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"x2", ",", "y2"}], "}"}]}], "}"}], "]"}], " ", "draws", " ", 
    "arrow", " ", "with", " ", "symbol", " ", "in", " ", "middle"}], "  ", 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"MidArrow", "[", "xy_List", "]"}], ":=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Arrowheads", "[", "Medium", "]"}], ",", 
      RowBox[{"Arrow", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"xy", "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"xy", "[", 
             RowBox[{"[", "1", "]"}], "]"}], "+", 
            RowBox[{"xy", "[", 
             RowBox[{"[", "2", "]"}], "]"}]}], ")"}], "/", "2"}]}], "}"}], 
       "]"}], ",", 
      RowBox[{"Line", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"xy", "[", 
             RowBox[{"[", "1", "]"}], "]"}], "+", 
            RowBox[{"xy", "[", 
             RowBox[{"[", "2", "]"}], "]"}]}], ")"}], "/", "2"}], ",", 
         RowBox[{"xy", "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], "}"}], "]"}]}], "}"}]}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"Draws", " ", "text", " ", "at", " ", "mid", " ", 
     RowBox[{"line", "."}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"MidLineText", "[", 
     RowBox[{"text_", ",", "line_List", ",", "style_List"}], "]"}], ":=", 
    RowBox[{"{", 
     RowBox[{"Text", "[", 
      RowBox[{
       RowBox[{"Style", "[", 
        RowBox[{"text", ",", "style"}], "]"}], ",", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"line", "[", 
           RowBox[{"[", "1", "]"}], "]"}], "+", 
          RowBox[{"line", "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], ")"}], "/", "2"}]}], "]"}], 
     "}"}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"MidLineTextOffset", "[", 
     RowBox[{
     "text_", ",", "line_List", ",", "style_List", ",", "Offset_List"}], 
     "]"}], ":=", 
    RowBox[{"{", 
     RowBox[{"Text", "[", 
      RowBox[{
       RowBox[{"Style", "[", 
        RowBox[{"text", ",", "style"}], "]"}], ",", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"line", "[", 
             RowBox[{"[", "1", "]"}], "]"}], "+", "Offset"}], ")"}], "+", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"line", "[", 
             RowBox[{"[", "2", "]"}], "]"}], "+", "Offset"}], ")"}]}], ")"}], 
        "/", "2"}]}], "]"}], "}"}]}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"TextOver", "[", 
      RowBox[{"text_", ",", "xy_List"}], "]"}], ":=", 
     RowBox[{"{", 
      RowBox[{"White", ",", 
       RowBox[{"Disk", "[", 
        RowBox[{"xy", ",", "0.2"}], "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"Text", "[", 
        RowBox[{
         RowBox[{"Style", "[", 
          RowBox[{"text", ",", 
           RowBox[{"FontSize", "\[Rule]", "16"}], ",", "Red"}], "]"}], ",", 
         "xy"}], "]"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"TextOver", "[", 
     RowBox[{"text_", ",", "xy_List", ",", "font_"}], "]"}], ":=", 
    RowBox[{"{", 
     RowBox[{"White", ",", 
      RowBox[{"Disk", "[", 
       RowBox[{"xy", ",", "0.2"}], "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"Text", "[", 
       RowBox[{
        RowBox[{"Style", "[", 
         RowBox[{"text", ",", 
          RowBox[{"FontSize", "\[Rule]", "font"}], ",", "Red"}], "]"}], ",", 
        "xy"}], "]"}]}], "}"}]}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "Contruct", " ", "array", " ", "of", " ", "points", " ", "and", " ", 
     "lines", " ", "to", " ", "be", " ", "reference", " ", "by", " ", "array",
      " ", 
     RowBox[{"indices", "."}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"GraphicPointLines", "[", "\[IndentingNewLine]", 
      RowBox[{"nx_", 
       RowBox[{"(*", 
        RowBox[{"Number", " ", "of", " ", "points", " ", "X"}], "*)"}], ",", 
       "\[IndentingNewLine]", "ny_", 
       RowBox[{"(*", 
        RowBox[{"Number", " ", "of", " ", "points", " ", "Y"}], "*)"}], ",", 
       "\[IndentingNewLine]", "linepoints_List", 
       RowBox[{"(*", 
        RowBox[{"indices", " ", "that", " ", "define", " ", "lines"}], "*)"}],
        ",", "\[IndentingNewLine]", 
       RowBox[{"displayTemplate_:", "True"}]}], "]"}], ":=", 
     "\[IndentingNewLine]", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"vx", ",", "line", ",", "vxline"}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"vx", "=", 
         RowBox[{"Tuples", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"Range", "[", "nx", "]"}], "-", "1"}], ",", 
            RowBox[{
             RowBox[{"Range", "[", "ny", "]"}], "-", "1"}]}], "}"}], "]"}]}], 
        ";", "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Depth", "[", "linepoints", "]"}], "\[Equal]", "4"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"line", "=", "linepoints"}], ",", 
          RowBox[{"(*", 
           RowBox[{
            RowBox[{"endpoints", " ", "specified", " ", "by", " ", "x"}], ",", 
            RowBox[{"y", " ", "offset", " ", "from", " ", "LowerLeft"}]}], 
           "*)"}], "\[IndentingNewLine]", 
          RowBox[{"(*", 
           RowBox[{"else", " ", "by", " ", "vx", " ", "index"}], "*)"}], 
          "\[IndentingNewLine]", 
          RowBox[{"line", "=", 
           RowBox[{"Map", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"vx", "[", 
                 RowBox[{"[", 
                  RowBox[{"#", "[", 
                   RowBox[{"[", "1", "]"}], "]"}], "]"}], "]"}], ",", 
                RowBox[{"vx", "[", 
                 RowBox[{"[", 
                  RowBox[{"#", "[", 
                   RowBox[{"[", "2", "]"}], "]"}], "]"}], "]"}]}], "}"}], 
              "&"}], ",", "linepoints"}], "]"}]}]}], "]"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{"displayTemplate", ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
           "Print", "[", 
            "\"\<General graphic definitions for array points and lines.\>\"",
             "]"}], ";", "\[IndentingNewLine]", 
           RowBox[{"Print", "[", "\[IndentingNewLine]", 
            RowBox[{"Graphics", "[", 
             RowBox[{"{", 
              RowBox[{"Thick", ",", 
               RowBox[{"RGBColor", "[", 
                RowBox[{"1", ",", "0", ",", "1", ",", ".7"}], "]"}], ",", 
               RowBox[{"Map", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"Line", "[", "#", "]"}], "&"}], ",", "line"}], 
                "]"}], ",", 
               RowBox[{"MapIndexed", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"Text", "[", 
                   RowBox[{
                    RowBox[{"Style", "[", 
                    RowBox[{
                    RowBox[{"#2", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ",", 
                    RowBox[{"FontSize", "\[Rule]", "30"}]}], "]"}], ",", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"#1", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "+", 
                    RowBox[{"#1", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], ")"}], "/", "2"}]}], 
                   "]"}], "&"}], ",", "line"}], "]"}], ",", 
               "\[IndentingNewLine]", 
               RowBox[{"RGBColor", "[", 
                RowBox[{".66", ",", "0", ",", "0", ",", ".5"}], "]"}], ",", 
               RowBox[{"MapIndexed", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"Text", "[", 
                   RowBox[{
                    RowBox[{"Style", "[", 
                    RowBox[{
                    RowBox[{"#2", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ",", 
                    RowBox[{"FontSize", "->", "16"}]}], " ", "]"}], ",", 
                    "#1"}], "]"}], "&"}], ",", "vx"}], "]"}]}], "}"}], "]"}], 
            "]"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{"vx", ",", "line"}], "}"}]}]}], 
      RowBox[{"(*", 
       RowBox[{
       "returns", " ", "point_List", " ", "and", " ", "line_List", " ", 
        "corresponding", " ", "to", " ", "graph", " ", "numbers"}], "*)"}], 
      "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", "*)"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"Examples", " ", "of", " ", "H", " ", "and", " ", "X", " ", 
     RowBox[{"plot", "."}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"Graphics2H2", "[", 
      RowBox[{"c1_", ",", "c2_", ",", "x_", ",", "c3_", ",", "c4_"}], "]"}], ":=", 
     RowBox[{"Graphics", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"Thick", ",", "Black", ",", "\[IndentingNewLine]", 
         RowBox[{"MidArrow", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"0", ",", 
              RowBox[{"-", "1"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"1", ",", "0"}], "}"}]}], "}"}], "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"MidArrow", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"1", ",", "0"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"0", ",", "1"}], "}"}]}], "}"}], "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"MidArrow", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"3", ",", 
              RowBox[{"-", "1"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"2", " ", ",", "0"}], "}"}]}], "}"}], "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"MidArrow", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"2", " ", ",", "0"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"3", " ", ",", "1"}], "}"}]}], "}"}], "]"}], ",", 
         "\[IndentingNewLine]", "Dotted", ",", 
         RowBox[{"Line", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"1", ",", "0"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"2", " ", ",", "0"}], "}"}]}], "}"}], "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"TextOver", "[", 
          RowBox[{"x", ",", 
           RowBox[{"{", 
            RowBox[{"1.5", ",", "0"}], " ", "}"}]}], "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"TextOver", "[", 
          RowBox[{"c1", ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", 
             RowBox[{"-", "1"}]}], "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
         RowBox[{"TextOver", "[", 
          RowBox[{"c2", ",", 
           RowBox[{"{", 
            RowBox[{"3", " ", ",", 
             RowBox[{"-", "1"}]}], "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
         RowBox[{"TextOver", "[", 
          RowBox[{"c3", ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "1"}], "}"}]}], "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"TextOver", "[", 
          RowBox[{"c4", ",", 
           RowBox[{"{", 
            RowBox[{"3", " ", ",", "1"}], "}"}]}], "]"}]}], 
        "\[IndentingNewLine]", "}"}], ",", 
       RowBox[{"ImageSize", "->", "Small"}]}], "\[IndentingNewLine]", "]"}]}],
     ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"Graphics2X2", "[", 
      RowBox[{"c1_", ",", "c2_", ",", "x_", ",", "c3_", ",", "c4_"}], "]"}], ":=", 
     RowBox[{"Graphics", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"Thick", ",", "Black", ",", "\[IndentingNewLine]", 
         RowBox[{"MidArrow", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "1"}], ",", 
              RowBox[{"-", "1"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"0", ",", "0"}], "}"}]}], "}"}], "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"MidArrow", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"1", ",", 
              RowBox[{"-", "1"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"0", ",", "0"}], "}"}]}], "}"}], "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"MidArrow", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"0", ",", "2"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "1"}], " ", ",", "3"}], "}"}]}], "}"}], "]"}], ",",
          "\[IndentingNewLine]", 
         RowBox[{"MidArrow", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"0", ",", "2"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"1", " ", ",", "3"}], "}"}]}], "}"}], "]"}], ",", 
         "\[IndentingNewLine]", "Dotted", ",", 
         RowBox[{"Line", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"0", ",", "0"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"0", " ", ",", "2"}], "}"}]}], "}"}], "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"TextOver", "[", 
          RowBox[{"x", ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "1"}], " ", "}"}]}], "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"TextOver", "[", 
          RowBox[{"c1", ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "1"}], ",", 
             RowBox[{"-", "1"}]}], "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
         RowBox[{"TextOver", "[", 
          RowBox[{"c2", ",", 
           RowBox[{"{", 
            RowBox[{"1", " ", ",", 
             RowBox[{"-", "1"}]}], "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
         RowBox[{"TextOver", "[", 
          RowBox[{"c3", ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "1"}], ",", "3"}], "}"}]}], "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"TextOver", "[", 
          RowBox[{"c4", ",", 
           RowBox[{"{", " ", 
            RowBox[{"1", ",", "3"}], "}"}]}], "]"}]}], "\[IndentingNewLine]", 
        "}"}], ",", 
       RowBox[{"ImageSize", "->", "Small"}]}], "\[IndentingNewLine]", "]"}]}],
     ";"}]}]}]], "Input",
 InitializationCell->True,
 InitializationGroup->True,
 CellChangeTimes->{{3.500067576689633*^9, 3.500067577123166*^9}, {
   3.50315534891154*^9, 3.503155375273777*^9}, {3.503155449939041*^9, 
   3.503155488016099*^9}, {3.503155523971875*^9, 3.503155554359187*^9}, {
   3.503155843974831*^9, 3.503155879835513*^9}, {3.5031678894774523`*^9, 
   3.5031678967669077`*^9}, {3.503168039120762*^9, 3.503168040380157*^9}, {
   3.5031697228481627`*^9, 3.503169759746653*^9}, {3.503172038424787*^9, 
   3.5031721005241423`*^9}, {3.524844831221139*^9, 3.5248448460177107`*^9}, {
   3.5264055101438293`*^9, 3.5264055141433153`*^9}, {3.526407551999062*^9, 
   3.526407647244039*^9}, {3.5264077151403418`*^9, 3.526407876635027*^9}, {
   3.526732257027318*^9, 3.526732302971693*^9}, {3.526733697141556*^9, 
   3.52673369956733*^9}, {3.5267511912391453`*^9, 3.526751258125946*^9}, {
   3.528574374959052*^9, 3.528574383057479*^9}, {3.528575531577264*^9, 
   3.5285755351842623`*^9}, 3.56147729567309*^9, 3.626702570102413*^9, 
   3.626705177295808*^9, 3.640816383796831*^9, 3.662691182864779*^9, 
   3.66282180736788*^9, 
   3.722341849075309*^9},ExpressionUUID->"9e410cf9-deaf-44e3-91db-\
720c418b28cb"],

Cell["Palette for repetitive inputs", "Text",
 CellChangeTimes->{{3.693925820001356*^9, 3.693925879545558*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"CreatePalette", "[", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"PasteButton", "[", 
        RowBox[{"\"\<CG[\\\"\[FilledSmallSquare]\\\"]\>\"", ",", 
         RowBox[{"Defer", "[", 
          RowBox[{"CG", "[", "\"\<\[SelectionPlaceholder]\>\"", "]"}], 
          "]"}]}], "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"PasteButton", "[", 
        RowBox[{"\"\<CG[\[FilledSmallSquare]]\>\"", ",", 
         RowBox[{"Defer", "[", 
          RowBox[{"CG", "[", "\[SelectionPlaceholder]", "]"}], "]"}]}], "]"}],
        ",", "\[IndentingNewLine]", 
       RowBox[{"PasteButton", "[", 
        RowBox[{"\"\<\[FilledSmallSquare][CG]\>\"", ",", 
         RowBox[{"\[SelectionPlaceholder]", "[", 
          RowBox[{"Defer", "[", 
           RowBox[{"CG", "[", "\"\<\[Placeholder]\>\"", "]"}], "]"}], "]"}]}],
         "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"PasteButton", "[", 
        RowBox[{"\"\<ColForm\>\"", ",", 
         RowBox[{"Defer", "[", 
          RowBox[{
           RowBox[{"ColumnForms", "[", 
            RowBox[{"#", ",", "2"}], "]"}], "&"}], "]"}]}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"PasteButton", "[", 
        RowBox[{"\"\<T\>\"", ",", 
         RowBox[{"Defer", "[", 
          RowBox[{"T", "[", 
           RowBox[{
           "\[SelectionPlaceholder]", ",", "\"\<\[Placeholder]\>\"", ",", 
            RowBox[{"{", "\[Placeholder]", "}"}]}], "]"}], "]"}]}], "]"}]}], 
      "\[IndentingNewLine]", "}"}], "\[IndentingNewLine]", "]"}], ";"}], 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"CreatePalette", "[", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"PasteButton", "[", 
        RowBox[{"\"\<CG[\\\"\[FilledSmallSquare]\\\"]\>\"", ",", 
         RowBox[{"Defer", "[", 
          RowBox[{"CG", "[", "\"\<\[SelectionPlaceholder]\>\"", "]"}], 
          "]"}]}], "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"PasteButton", "[", 
        RowBox[{"\"\<CG[\[FilledSmallSquare]]\>\"", ",", 
         RowBox[{"Defer", "[", 
          RowBox[{"CG", "[", "\[SelectionPlaceholder]", "]"}], "]"}]}], "]"}],
        ",", "\[IndentingNewLine]", 
       RowBox[{"PasteButton", "[", 
        RowBox[{"\"\<\[FilledSmallSquare][CG]\>\"", ",", 
         RowBox[{"\[SelectionPlaceholder]", "[", 
          RowBox[{"Defer", "[", 
           RowBox[{"CG", "[", "\"\<\[Placeholder]\>\"", "]"}], "]"}], "]"}]}],
         "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"PasteButton", "[", 
        RowBox[{"\"\<{\[FilledSmallSquare]}[CG]\>\"", ",", 
         RowBox[{
          RowBox[{"{", "\[SelectionPlaceholder]", "}"}], "[", 
          RowBox[{"Defer", "[", 
           RowBox[{"CG", "[", "\"\<\[Placeholder]\>\"", "]"}], "]"}], "]"}]}],
         "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"PasteButton", "[", 
        RowBox[{"\"\<ColForm\>\"", ",", 
         RowBox[{"Defer", "[", 
          RowBox[{
           RowBox[{"ColumnForms", "[", 
            RowBox[{"#", ",", "2"}], "]"}], "&"}], "]"}]}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"PasteButton", "[", 
        RowBox[{"\"\<$ColForm\>\"", ",", 
         RowBox[{"Defer", "[", 
          RowBox[{"$", "//", 
           RowBox[{
            RowBox[{"ColumnForms", "[", 
             RowBox[{"#", ",", "2"}], "]"}], "&"}]}], "]"}]}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"PasteButton", "[", 
        RowBox[{"\"\<$={};$ColForm\>\"", ",", 
         RowBox[{"Defer", "[", 
          RowBox[{
           RowBox[{"$", "=", 
            RowBox[{"{", "\[SelectionPlaceholder]", "}"}]}], ";", 
           RowBox[{"$", "//", 
            RowBox[{
             RowBox[{"ColumnForms", "[", 
              RowBox[{"#", ",", "2"}], "]"}], "&"}]}]}], "]"}]}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"PasteButton", "[", 
        RowBox[{"\"\<T\>\"", ",", 
         RowBox[{"Defer", "[", 
          RowBox[{"T", "[", 
           RowBox[{
           "\[SelectionPlaceholder]", ",", "\"\<\[Placeholder]\>\"", ",", 
            RowBox[{"{", "\[Placeholder]", "}"}]}], "]"}], "]"}]}], "]"}]}], 
      "\[IndentingNewLine]", "}"}], "\[IndentingNewLine]", "]"}], ";"}], 
   "*)"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.693926377148682*^9, 3.693926403009356*^9}, {
   3.6943580478539953`*^9, 3.69435805039898*^9}, 3.6949564340212507`*^9, {
   3.7008529051586437`*^9, 3.700852905683034*^9}, {3.700853722117167*^9, 
   3.700853732274907*^9}, {3.7023026542122917`*^9, 3.702302655570443*^9}, {
   3.713964744142865*^9, 
   3.713964748059943*^9}},ExpressionUUID->"536f60f1-4001-4b6f-b2ef-\
dd1083f1ecc1"],

Cell["\<\
Standard way of specifying SaveFile.  Code to be included in Notebook.\
\>", "Text",
 CellChangeTimes->{{3.527879901906035*^9, 3.527879920295072*^9}, {
  3.580211582780904*^9, 3.5802116572787323`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
    "Creates", " ", "file", " ", "with", " ", "filename", " ", "in", " ", 
     "SaveFile", " ", "for", " ", "saving", " ", "variable", " ", 
     "expressions", "\[IndentingNewLine]", "SaveFile"}], "=", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"\"\<$HomeDirectory<>\>\"", "/", "Mathematica"}], "/", 
       "PeskinSchroeder"}], "/", 
      RowBox[{
       RowBox[{"NBname", "[", "\"\<stub\>\"", "]"}], ".", "out"}]}], 
     "\"\<]\[IndentingNewLine]\>"}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"tuSaveFile", ":=", 
     RowBox[{"Put", "[", 
      RowBox[{"SaveFile", "=", 
       RowBox[{
        RowBox[{"NBname", "[", "\"\<stub\>\"", "]"}], "<>", 
        "\"\<.out\>\""}]}], "]"}]}], " ", ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "Returns", " ", "all", " ", "or", " ", "parts", " ", "of", " ", 
     "NotebookFileName", " ", "based", " ", "upon", " ", 
     RowBox[{"type_String", "."}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"NBname", "[", "type_String", "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"name", "=", 
          RowBox[{"NotebookFileName", "[", "]"}]}], ",", 
         RowBox[{"dir", "=", 
          RowBox[{"FileNameDrop", "[", 
           RowBox[{
            RowBox[{"NotebookFileName", "[", "]"}], ",", 
            RowBox[{"-", "1"}]}], "]"}]}], ",", 
         RowBox[{"base", "=", 
          RowBox[{"FileBaseName", "[", 
           RowBox[{"NotebookFileName", "[", "]"}], "]"}]}]}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"Switch", "[", 
        RowBox[{
        "type", ",", "\[IndentingNewLine]", "\"\<name\>\"", ",", "name", ",", 
         "\[IndentingNewLine]", "\"\<dir\>\"", ",", "dir", ",", 
         "\[IndentingNewLine]", "\"\<base\>\"", ",", "base", ",", 
         "\[IndentingNewLine]", "\"\<stub\>\"", ",", 
         RowBox[{"FileNameJoin", "[", 
          RowBox[{"{", 
           RowBox[{"dir", ",", "base"}], "}"}], "]"}]}], 
        "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", "]"}]}], ";"}],
    "\[IndentingNewLine]", 
   RowBox[{"(*", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"To", " ", "save", " ", 
      RowBox[{"variables", ":", "\[IndentingNewLine]", 
       RowBox[{"Put", "[", 
        RowBox[{"variable_List", ",", "SaveFile"}], "]"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"or", " ", 
      RowBox[{"Save", "[", 
       RowBox[{"SaveFile", ",", "variable_List"}], "]"}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{
     "To", " ", "retrieve", " ", "output", " ", "definitions", " ", "from", 
      " ", "file", " ", "in", " ", "current", " ", 
      RowBox[{"directory", ".", "\[IndentingNewLine]", "\t", 
       RowBox[{"Get", "[", 
        RowBox[{
         RowBox[{"NotebookDirectory", "[", "]"}], "<>", 
         "\"\<LectureB2011.10.10.out\>\""}], "]"}]}], "\[IndentingNewLine]", 
      "or", "   ", 
      RowBox[{"Get", "[", 
       RowBox[{
       "$HomeDirectory", "<>", 
        "\"\</Mathematica/PeskinSchroeder/FinalProject1.out\>\""}], "]"}]}]}],
     "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"tuSaveAllVariables", "::", "usage"}], "=", 
     "\"\<tuSaveAllVariables[file_:toSaveFile] saves all Context[Global'] \
variables to file_ \>\""}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"tuSaveAllVariables", "[", 
      RowBox[{"file_:", "SaveFile"}], "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", "$", "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"$", "=", 
         RowBox[{"Names", "[", "\"\<$*\>\"", "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"$", "=", 
         RowBox[{"Select", "[", 
          RowBox[{"$", ",", 
           RowBox[{
            RowBox[{
             RowBox[{"Context", "[", "#", "]"}], "\[Equal]", 
             "\"\<Global`\>\""}], "&"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"Inactive", "[", "Save", "]"}], "[", 
          RowBox[{"file", ",", "$"}], " ", "]"}], "//", "Activate"}]}]}], 
      "\[IndentingNewLine]", "]"}]}], ";"}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.527879933930221*^9, 3.527880068966152*^9}, 
   3.555432637545333*^9, 3.5554327862608147`*^9, {3.555778199064436*^9, 
   3.555778200178644*^9}, {3.5557782330147963`*^9, 3.5557782677040253`*^9}, {
   3.56440458999321*^9, 3.564404592220203*^9}, 3.5644052361899147`*^9, {
   3.564405290952738*^9, 3.564405301267617*^9}, {3.564405368812229*^9, 
   3.5644054364898977`*^9}, {3.5644056110684757`*^9, 3.564405738816188*^9}, {
   3.5644063471465263`*^9, 3.564406375009626*^9}, 3.564413775437436*^9, {
   3.564841215338243*^9, 3.564841267301989*^9}, {3.5648412981148167`*^9, 
   3.564841302408098*^9}, {3.564841438400856*^9, 3.564841454162277*^9}, {
   3.5648426536876574`*^9, 3.56484266204705*^9}, 3.564844474848049*^9, {
   3.566825760129705*^9, 3.566825774453374*^9}, {3.5701054282640123`*^9, 
   3.570105511224777*^9}, {3.570202732481195*^9, 3.570202743935644*^9}, {
   3.5702029982641487`*^9, 3.5702030026177*^9}, {3.570204924170664*^9, 
   3.5702049338485527`*^9}, {3.5708421697737226`*^9, 3.570842185370248*^9}, {
   3.5708422324014683`*^9, 3.5708422443157473`*^9}, {3.570842287793892*^9, 
   3.570842350294593*^9}, {3.5708423959710903`*^9, 3.5708424294855747`*^9}, {
   3.570842479854141*^9, 3.570842487957382*^9}, {3.570842537170766*^9, 
   3.570842558091651*^9}, {3.5708425881073627`*^9, 3.5708426875465117`*^9}, {
   3.570842743911915*^9, 3.570842760098878*^9}, {3.5708428150620337`*^9, 
   3.57084283337428*^9}, {3.571232025341181*^9, 3.5712320602579823`*^9}, {
   3.571232217102319*^9, 3.571232287814302*^9}, {3.571423438946911*^9, 
   3.571423447071764*^9}, {3.571423784852826*^9, 3.57142390202459*^9}, {
   3.580211541277926*^9, 3.580211548090016*^9}, {3.5802116650011272`*^9, 
   3.580211670178278*^9}, {3.632830969929894*^9, 3.6328310352889357`*^9}, {
   3.632831069707035*^9, 3.632831165018404*^9}, {3.632831246403606*^9, 
   3.6328313040556297`*^9}, {3.633453343661016*^9, 3.633453398767769*^9}, {
   3.633453568329966*^9, 3.633453626364867*^9}, {3.634480487797556*^9, 
   3.634480515621223*^9}, {3.6464927785080338`*^9, 3.646492780074233*^9}, {
   3.6464941829672213`*^9, 3.6464943509243917`*^9}, {3.6464946503643503`*^9, 
   3.646494701592366*^9}, {3.646494764219145*^9, 3.646494764376679*^9}, {
   3.646833938720132*^9, 3.646833939570916*^9}, {3.666531984285194*^9, 
   3.666531990196035*^9}, 
   3.684671814970416*^9},ExpressionUUID->"f09b1a8a-d58e-4dfe-94dc-\
50442c68141e"],

Cell["Rule rewriting routines", "Text",
 CellChangeTimes->{{3.5802116802194357`*^9, 3.5802116886681547`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "variables", " ", "inbedded", " ", "in", " ", "any", " ", "one", " ", "of",
     " ", "tuRuleIndependentVarPattern", " ", "are", " ", "considered", " ", 
    "independent", " ", "from", " ", "the", " ", "variable", " ", "for", " ", 
    "the", " ", "purpose", " ", "of", " ", 
    RowBox[{"tuRule", "[", "]"}], 
    RowBox[{"s", "."}]}], "*)"}], 
  RowBox[{
   RowBox[{
    RowBox[{"tuRuleIndependentVarPattern", ":=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"SubPlus", "[", "_", "]"}], ",", 
       RowBox[{"SubMinus", "[", "_", "]"}], ",", 
       RowBox[{"SuperPlus", "[", "_", "]"}], ",", 
       RowBox[{"SuperMinus", "[", "_", "]"}], ",", 
       RowBox[{"Subscript", "[", 
        RowBox[{"_", ",", "_"}], "]"}], ",", 
       RowBox[{"Superscript", "[", 
        RowBox[{"_", ",", "_"}], "]"}], ",", 
       RowBox[{"OverBar", "[", "_", "]"}], ",", 
       RowBox[{"UnderBar", "[", "_", "]"}], ",", 
       RowBox[{"OverTilde", "[", "_", "]"}], ",", 
       RowBox[{"OverHat", "[", "_", "]"}], ",", 
       RowBox[{"SubStar", "[", "_", "]"}], ",", 
       RowBox[{"SuperStar", "[", "_", "]"}], ",", 
       RowBox[{"OverVector", "[", "_", "]"}], ",", 
       RowBox[{"OverDot", "[", "_", "]"}], ",", 
       RowBox[{"OverDot", "[", 
        RowBox[{"_", ",", "1"}], "]"}], ",", 
       RowBox[{"OverDot", "[", 
        RowBox[{"_", ",", "2"}], "]"}], ",", 
       RowBox[{
        RowBox[{"Derivative", "[", "1", "]"}], "[", "_", "]"}], ",", 
       RowBox[{
        RowBox[{"Derivative", "[", "2", "]"}], "[", "_", "]"}], ",", 
       RowBox[{"Tensor", "[", 
        RowBox[{"_", ",", "_", ",", "_"}], "]"}], ",", 
       RowBox[{"Sign", "[", "_", "]"}], ",", 
       RowBox[{"Style", "[", "__", "]"}]}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"tuRule", "::", "usage"}], "=", 
     "\"\<tuRule[rules_,negativePower_:False,simplerArg_:True] produces a \
List of valid Rule[]s from rules_ and forms a Flatten[]d list of Rules. \
Deletes imbedded comments in the form of head_[CG[__]] and other non-Rule \
forms. If  If negativePower_\[Rule]True then negative Power of Rule[]s are \
generated.  If simplerArg_\[Rule]True then Rules are transformed from -a\
\[Rule]b \[Rule] a\[Rule]-b and \!\(\*SuperscriptBox[\(a\), \(2\)]\)->b \
\[Implies] a\[Rule]Sqrt[b] . *7Aug2015*1Feb2018*\>\""}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"tuRule", "[", 
      RowBox[{"rules_", ",", 
       RowBox[{"negativePower_:", "False"}], ",", 
       RowBox[{"simplerArg_:", "True"}]}], "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"$", "=", "rules"}], ",", "rr$"}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"$", "=", 
         RowBox[{"$", "//", "Flatten"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"$", "=", 
         RowBox[{"$", "//.", 
          RowBox[{
           RowBox[{"head_", "[", 
            RowBox[{
             RowBox[{"CR", "[", "__", "]"}], "|", 
             RowBox[{"CG", "[", "__", "]"}], "|", 
             RowBox[{"CO", "[", "__", "]"}], "|", 
             RowBox[{"CP", "[", "__", "]"}], "|", 
             RowBox[{"CB", "[", "__", "]"}]}], "]"}], "\[Rule]", "head"}]}]}],
         ";", 
        RowBox[{"(*", 
         RowBox[{"eliminate", " ", "comments"}], "*)"}], 
        "\[IndentingNewLine]", 
        RowBox[{"$", "=", 
         RowBox[{"$", "//", 
          RowBox[{"tuExtractPattern", "[", 
           RowBox[{
            RowBox[{"Rule", "[", "__", "]"}], "|", 
            RowBox[{"RuleDelayed", "[", "__", "]"}]}], "]"}]}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{"simplerArg", ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"$", "=", 
            RowBox[{"$", "/.", 
             RowBox[{
              RowBox[{
               RowBox[{"(", 
                RowBox[{"rr", ":", 
                 RowBox[{"Rule", "|", "RuleDelayed"}]}], ")"}], "[", 
               RowBox[{
                RowBox[{"-", "a_"}], ",", "b_"}], "]"}], "\[Rule]", 
              RowBox[{"rr", "[", 
               RowBox[{"a", ",", 
                RowBox[{"-", "b"}]}], "]"}]}]}]}], ";"}]}], 
         "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{"negativePower", ",", "\[IndentingNewLine]", 
          RowBox[{"$", "=", 
           RowBox[{"{", 
            RowBox[{"$", ",", 
             RowBox[{"$", "//", "tuRulePositiveNegativePower"}], ",", 
             RowBox[{"$", "/.", 
              RowBox[{
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"rr", ":", 
                  RowBox[{"Rule", "|", "RuleDelayed"}]}], ")"}], "[", 
                RowBox[{"a_", ",", "b_"}], "]"}], "\[Rule]", 
               RowBox[{"rr", "[", 
                RowBox[{
                 RowBox[{"1", "/", "a"}], ",", 
                 RowBox[{"1", "/", "b"}]}], "]"}]}]}]}], " ", "}"}]}]}], 
         "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"$", "=", 
         RowBox[{
          RowBox[{"$", "//", 
           RowBox[{"DeleteCases", "[", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"Rule", "|", "RuleDelayed"}], ")"}], "[", 
             RowBox[{"a_", ",", "a_"}], "]"}], "]"}]}], "//", "Flatten"}]}], 
        ";", "\[IndentingNewLine]", 
        RowBox[{"$", "//", "DeleteDuplicates"}]}]}], "\[IndentingNewLine]", 
      "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"tuRuleNoPower", "::", "usage"}], "=", 
     "\"\<tuRuleNoPower[rules_] eliminates Power of first arguement of \
Rule[], e.g. \!\(\*SuperscriptBox[\(a\), \(2\)]\)\[Rule]b \[Implies] \
a\[Rule]Sqrt[b].  *1Feb2018*\>\""}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"tuRuleNoPower", "[", "rules_", "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"$", "=", "rules"}], ",", "rr$"}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"$", "=", 
        RowBox[{"$", "/.", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"rr", ":", 
             RowBox[{"Rule", "|", "RuleDelayed"}]}], ")"}], "[", 
           RowBox[{
            RowBox[{"Power", "[", 
             RowBox[{"a_", ",", "b_"}], "]"}], ",", "c_"}], "]"}], 
          "\[RuleDelayed]", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"rr$", "[", 
             RowBox[{"a", ",", 
              RowBox[{"Power", "[", 
               RowBox[{"c", ",", 
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"Head", "[", "b", "]"}], "===", "Rational"}], ",", 
                  
                  RowBox[{"Rationalize", "[", 
                   RowBox[{"1", "/", "b"}], "]"}], ",", 
                  RowBox[{"1", "/", "b"}]}], "]"}]}], "]"}]}], "]"}], "/.", 
            RowBox[{"rr$", "\[Rule]", "rr"}]}], ")"}]}]}]}]}], 
      "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"tuRulePositiveNegativePower", "::", "usage"}], "=", 
     "\"\<tuRulePositiveNegativePower[rules_] produces inverse Power in \
Rule[]s that include Power[] in first arguement.  Mathematica does not \
recognize inversed Power terms in pattern matching.  *2Feb2018*\>\""}], ";"}],
    "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"tuRulePositiveNegativePower", "[", "rules_", "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"$", "=", "rules"}], ",", "rr$"}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"$", "=", 
        RowBox[{"$", "/.", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"rr", ":", 
             RowBox[{"Rule", "|", "RuleDelayed"}]}], ")"}], "[", 
           RowBox[{
            RowBox[{"Power", "[", 
             RowBox[{"a_", ",", "b_"}], "]"}], ",", "c_"}], "]"}], 
          "\[RuleDelayed]", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"rr$", "[", 
             RowBox[{
              RowBox[{"Power", "[", 
               RowBox[{"a", ",", 
                RowBox[{"-", "b"}]}], "]"}], ",", 
              RowBox[{"Power", "[", 
               RowBox[{"c", ",", 
                RowBox[{"-", "1"}]}], "]"}]}], "]"}], "/.", 
            RowBox[{"rr$", "\[Rule]", "rr"}]}], ")"}]}]}]}]}], 
      "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"tuRuleAll", "::", "usage"}], "=", 
     "\"\<tuRuleAll[rules_,simplerArg_:False] extracts all possible rules \
from tuRule[rules_] by extracting nested Rule[]s and combining with \
Reverse[Rules[]]. If simplerArg_\[Rule]True then Rules are reformed so -a\
\[Rule]b -> a\[Rule]-b and \!\(\*SuperscriptBox[\(a\), \(2\)]\)->b \[Implies] \
a\[Rule]Sqrt[b]. *22Jul2017*1Feb2018*\>\""}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"tuRuleAll", "[", 
      RowBox[{"rules_", ",", 
       RowBox[{"simplerArg_:", "True"}]}], "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"$", "=", "rules"}], "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"$", "=", 
         RowBox[{"tuRule", "[", "$", "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"$", "=", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"tuRuleSeparate", "[", 
             RowBox[{"#", ",", "simplerArg"}], "]"}], "&"}], "/@", "$"}], "//",
           "Flatten"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"$", "//", "DeleteDuplicates"}]}]}], "\[IndentingNewLine]", 
      "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"tuRuleUnique", "::", "usage"}], "=", 
     "\"\<tuRuleUnique[hasRules_] extracts Rules from hasRules_ and produces \
an unique List[] of Rule[]s *12Aug2017*\>\""}], ";"}], "\[IndentingNewLine]", 
   
   RowBox[{
    RowBox[{
     RowBox[{"tuRuleUnique", "[", "hasRules_", "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"xRule", ",", 
         RowBox[{"$", "=", "hasRules"}]}], "}"}], ",", "\[IndentingNewLine]", 
       
       RowBox[{
        RowBox[{"$", "=", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"tuRuleAll", "[", "$", "]"}], "/.", 
             RowBox[{"Rule", "\[Rule]", "xRule"}]}], "/.", 
            RowBox[{
             RowBox[{"xRule", "[", 
              RowBox[{"a_", ",", "b_"}], "]"}], "\[RuleDelayed]", 
             RowBox[{
              RowBox[{"xRule", "[", 
               RowBox[{"b", ",", "a"}], "]"}], "/;", 
              RowBox[{"OrderedQ", "[", 
               RowBox[{"{", 
                RowBox[{"b", ",", "a"}], "}"}], "]"}]}]}]}], "//", 
           "DeleteDuplicates"}], "//", "Sort"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"$", "=", 
         RowBox[{"$", "/.", 
          RowBox[{"xRule", "\[Rule]", "Rule"}]}]}]}]}], "\[IndentingNewLine]",
       "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", "*)"}], "\[IndentingNewLine]", 
   RowBox[{"Clear", "[", "tuRuleSeparate", "]"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"tuRuleSeparate", "::", "usage"}], "=", 
     "\"\<tuRuleSeparate[exp_Rule,simplerArg_:False,threadOverList_:False] \
separate string of Rule[]s, e.g., a\[Rule]b\[Rule]c, into a List[] of \
separate Permuted Rule[]s, e.g., {a\[Rule]b,b\[Rule]c,b->a,c->b,c->a}. If \
simplerArg_\[Rule]True then Rules are reformed so -a\[Rule]b -> a\[Rule]-b \
and \!\(\*SuperscriptBox[\(a\), \(2\)]\)->b \[Implies] a\[Rule]Sqrt[b]. If \
threadOverList_\[Rule]True then exp_ like a\[Rule]{b,c} are treated as a\
\[Rule]b\[Rule]c. *30Aug2017*1Feb2018*22Feb2018*\>\""}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"tuRuleSeparate", "[", 
      RowBox[{"exp_Rule", ",", 
       RowBox[{"simplerArg_:", "False"}], ",", 
       RowBox[{"threadOverList_:", "False"}]}], "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"$", "=", "exp"}], ",", "xList"}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"$", "=", 
         RowBox[{"If", "[", 
          RowBox[{"threadOverList", ",", 
           RowBox[{"Thread", "[", "$", "]"}], ",", 
           RowBox[{"$", "/.", 
            RowBox[{"List", "\[Rule]", "xList"}]}]}], "]"}]}], ";", 
        RowBox[{"xPrint", "[", "$", "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{"a", "\[Rule]", 
          RowBox[{"b", "->", 
           RowBox[{"c", " ", "Condition"}]}]}], "*)"}], "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"tuHasNoneQ", "[", 
           RowBox[{"$", ",", "xList"}], "]"}], ",", 
          RowBox[{"$", "=", 
           RowBox[{"$", "/.", 
            RowBox[{
             RowBox[{"Rule", "|", "RuleDelayed"}], "\[Rule]", "List"}]}]}]}], 
         "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"$", "=", 
         RowBox[{
          RowBox[{"$", "//", "Flatten"}], "//", "DeleteDuplicates"}]}], ";", 
        RowBox[{"xPrint", "[", "$", "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"$", "=", 
         RowBox[{"$", "/.", 
          RowBox[{"xList", "\[Rule]", "List"}]}]}], ";", 
        RowBox[{"xPrint", "[", "$", "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"$", "=", 
         RowBox[{
          RowBox[{
           RowBox[{"Rule", "@@", "#"}], "&"}], "/@", 
          RowBox[{"Permutations", "[", 
           RowBox[{"$", ",", 
            RowBox[{"{", "2", "}"}]}], "]"}]}]}], ";", "\[IndentingNewLine]", 
        
        RowBox[{"If", "[", 
         RowBox[{"simplerArg", ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"$", "=", 
            RowBox[{"$", "/.", " ", 
             RowBox[{
              RowBox[{"Rule", "[", 
               RowBox[{
                RowBox[{"-", "a_"}], ",", "b_"}], "]"}], "\[Rule]", 
              RowBox[{"Rule", "[", 
               RowBox[{"a", ",", 
                RowBox[{"-", "b"}]}], "]"}]}]}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"$", "=", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"$", ",", 
               RowBox[{"$", "//", "tuRuleNoPower"}]}], "}"}], "//", 
             "Flatten"}]}]}]}], "\[IndentingNewLine]", "]"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"$", "=", 
         RowBox[{
          RowBox[{"DeleteCases", "[", 
           RowBox[{"$", ",", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"Rule", "|", "RuleDelayed"}], ")"}], "[", 
             RowBox[{"a_", ",", "a_"}], "]"}]}], "]"}], "//", 
          "DeleteDuplicates"}]}]}]}], "\[IndentingNewLine]", "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Clear", "[", "tuRuleSelect", "]"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"tuRuleSelect", "::", "usage"}], "=", 
     "\"\<tuRuleSelect[key_,with_:{},without_:Null][rules_] selects all \
Rule[]s from rules_ with the LHS equal to key_.  key_ may be a List of key_s. \
Rules can be further selected by with_ patterns and without_ patterns.  \
*5Sep2015*22Jul2017*\>\""}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"tuRuleSelect", "[", 
       RowBox[{"key_", ",", 
        RowBox[{"with_:", 
         RowBox[{"{", "}"}]}], ",", 
        RowBox[{"without_:", "Null"}]}], "]"}], "[", "rules_", "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"$keys", ",", "$rules"}], "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"$rules", "=", 
         RowBox[{
          RowBox[{"tuExtractPattern", "[", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"Rule", "|", "RuleDelayed"}], ")"}], "[", "__", "]"}], 
           "]"}], "[", 
          RowBox[{"tuRuleAll", "[", 
           RowBox[{"{", "rules", "}"}], "]"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"$keys", "=", 
         RowBox[{
          RowBox[{"Flatten", "[", 
           RowBox[{
            RowBox[{"{", "key", "}"}], "/.", 
            RowBox[{
             RowBox[{"{", "}"}], "\[Rule]", "\[EmptySet]"}]}], "]"}], "/.", 
          RowBox[{"\[EmptySet]", "\[Rule]", 
           RowBox[{"{", "}"}]}]}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"$rules", "=", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"Cases", "[", 
             RowBox[{"$rules", ",", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"Rule", "|", "RuleDelayed"}], ")"}], "[", 
               RowBox[{"#", ",", "_"}], "]"}]}], "]"}], "&"}], "/@", 
           "$keys"}], "//", "Flatten"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"$rules", "=", 
         RowBox[{"Select", "[", 
          RowBox[{"$rules", ",", 
           RowBox[{
            RowBox[{"tuHasAllQ", "[", 
             RowBox[{"#", ",", 
              RowBox[{"Flatten", "[", 
               RowBox[{"{", "with", "}"}], "]"}]}], "]"}], "&"}]}], "]"}]}], 
        ";", "\[IndentingNewLine]", 
        RowBox[{"$rules", "=", 
         RowBox[{"Select", "[", 
          RowBox[{"$rules", ",", 
           RowBox[{
            RowBox[{"tuHasNoneQ", "[", 
             RowBox[{"#", ",", 
              RowBox[{"Flatten", "[", 
               RowBox[{"{", "without", "}"}], "]"}]}], "]"}], "&"}]}], 
          "]"}]}]}]}], "\[IndentingNewLine]", "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"tuRuleSelectReverse", "[", "rules_List", "]"}], "[", "key_", 
      "]"}], ":=", 
     RowBox[{
      RowBox[{"tuRuleSelect", "[", "key", "]"}], "[", "rules", "]"}]}], ";"}], 
   RowBox[{"(*", "compatible", "*)"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"tuRuleApply", "::", "usage"}], "=", 
     "\"\<tuRuleApply[rules_,nosubFn_List:{}][exp_] applies rules_ on exp_.  \
The optional nosubFn_List is a List of variables/Patterns protected from \
subcomponent replacements. i.e, \!\(\*SubscriptBox[\(A\), \(0\)]\)/.A->aa is \
not replaced if Subscript[_,_] is a member of nosubFn_List Default \
nosubFn_List:tuRuleIndependentVarPattern *21Jan2016*\>\""}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"tuRuleApply", "[", 
       RowBox[{"rules_", ",", 
        RowBox[{"nosubFn_List:", "tuRuleIndependentVarPattern"}]}], "]"}], 
      "[", "exp_", "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"$", "=", "exp"}], ",", "$p", ",", "$pvar", ",", "$rhead", 
         ",", "$pvar1", ",", "$rule"}], "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"$rule", "=", 
         RowBox[{"tuRule", "[", 
          RowBox[{"Flatten", "[", 
           RowBox[{"{", "rules", "}"}], "]"}], "]"}]}], ";", 
        RowBox[{"xPrint", "[", "$rule", "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{"possible", " ", "protected", " ", "variables"}], "*)"}], 
        "\[IndentingNewLine]", 
        RowBox[{"$p", "=", 
         RowBox[{"$", "//", 
          RowBox[{"tuExtractPositionPattern", "[", "nosubFn", "]"}]}]}], ";", 
        
        RowBox[{"xPrint", "[", "$p", "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{"protected", " ", "variables", " ", "in", " ", "rule_List"}],
          "*)"}], "\[IndentingNewLine]", 
        RowBox[{"$rhead", "=", 
         RowBox[{
          RowBox[{
           RowBox[{"#", "[", 
            RowBox[{"[", "1", "]"}], "]"}], "&"}], "/@", "$rule"}]}], ";", 
        RowBox[{"xPrint", "[", "$rhead", "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"$pvar", "=", 
         RowBox[{
          RowBox[{
           RowBox[{"#", "[", 
            RowBox[{"[", "2", "]"}], "]"}], "&"}], "/@", "$p"}]}], ";", 
        RowBox[{"xPrint", "[", "$pvar", "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"$pvar", "=", 
         RowBox[{"Select", "[", 
          RowBox[{"$pvar", ",", 
           RowBox[{
            RowBox[{"!", 
             RowBox[{"tuMemberQ", "[", 
              RowBox[{"#", ",", "$rhead"}], "]"}]}], "&"}]}], "]"}]}], ";", 
        RowBox[{"xPrint", "[", "$pvar", "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{
         "replace", " ", "protected", " ", "variables", " ", "in", " ", 
          "exp_"}], "*)"}], "\[IndentingNewLine]", 
        RowBox[{"$pvar1", "=", 
         RowBox[{"MapIndexed", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"#1", "\[Rule]", 
             RowBox[{"ToString", "[", 
              RowBox[{"pvar", "[", 
               RowBox[{"#2", "[", 
                RowBox[{"[", "1", "]"}], "]"}], "]"}], "]"}]}], "&"}], ",", 
           "$pvar"}], "]"}]}], ";", 
        RowBox[{"xPrint", "[", 
         RowBox[{"{", "$pvar1", "}"}], "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"$p", "=", 
         RowBox[{"$p", "/.", "$pvar1"}]}], ";", 
        RowBox[{"xPrint", "[", "$p", "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"$rule", "=", 
         RowBox[{"$rule", "/.", "$pvar1"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"$", "=", 
         RowBox[{"tuReplacePart", "[", 
          RowBox[{"$", ",", "$p"}], "]"}]}], ";", 
        RowBox[{"xPrint", "[", 
         RowBox[{"$", ",", "\"\<<<\>\"", ",", "$rule"}], "]"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"$", "=", 
         RowBox[{"$", "/.", "$rule"}]}], ";", 
        RowBox[{"xPrint", "[", "$", "]"}], ";", 
        RowBox[{"(*", 
         RowBox[{"Repeat", "??"}], "*)"}], "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{"replacement", " ", "Rule", " ", "for", " ", "pvar"}], 
         "*)"}], "\[IndentingNewLine]", 
        RowBox[{"$pvar1", "=", 
         RowBox[{
          RowBox[{
           RowBox[{"Reverse", "[", "#", "]"}], "&"}], "/@", 
          RowBox[{"(", "$pvar1", ")"}]}]}], ";", 
        RowBox[{"xPrint", "[", "$pvar1", "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"$", "/.", "$pvar1"}]}]}], "\[IndentingNewLine]", "]"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"tuRuleVariable", "::", "usage"}], "=", 
     "\"\<tuRuleVariable[rules_,variable_List:{},nosubFn_List:\
tuRuleIndependentVarPattern][exp_] applies rules_ to exp_ where variable_List \
names in rules_ are replaced with Unique[] name Pattern[]s before \
application.  Optional nosubFn_List specifies Pattern[]s that are to be \
treated as whole variables. *3Oct2016*\>\""}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"tuRuleVariable", "[", 
       RowBox[{"rules_", ",", 
        RowBox[{"variable_List:", 
         RowBox[{"{", "}"}]}], ",", 
        RowBox[{"nosubFn_List:", "tuRuleIndependentVarPattern"}]}], "]"}], 
      "[", "exp_", "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"$", "=", "exp"}], ",", "$p", ",", "$pvar", ",", "$rhead", 
         ",", "$pvar1", ",", "$rule", ",", 
         RowBox[{"$subs", "=", "variable"}], ",", 
         RowBox[{"$subRules", "=", 
          RowBox[{"{", "}"}]}], ",", "$i", ",", "$test", ",", "$patterns"}], 
        "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"$rule", "=", 
         RowBox[{"tuRule", "[", 
          RowBox[{"Flatten", "[", 
           RowBox[{"{", "rules", "}"}], "]"}], "]"}]}], ";", 
        RowBox[{"xPrint", "[", 
         RowBox[{"\"\<$rule: \>\"", ",", "$rule"}], "]"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"$subs", "=", 
         RowBox[{"Flatten", "[", "$subs", "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"(*", " ", 
         RowBox[{
         "Substitute", " ", "variable_List", " ", "into", " ", "rules_", " ", 
          "with", " ", 
          RowBox[{"Unique", "[", "]"}], " ", "names"}], "*)"}], 
        "\[IndentingNewLine]", 
        RowBox[{"For", "[", 
         RowBox[{
          RowBox[{"$i", "=", "1"}], ",", 
          RowBox[{"$i", "<=", 
           RowBox[{"Length", "[", "$subs", "]"}]}], ",", 
          RowBox[{"$i", "++"}], ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"$test", "=", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"$subs", "[", 
               RowBox[{"[", "$i", "]"}], "]"}], "->", 
              RowBox[{"Unique", "[", "sub", "]"}]}], "}"}]}], ";", 
           RowBox[{"xPrint", "[", 
            RowBox[{"$i", ",", "\"\< \>\"", ",", "$test"}], "]"}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"AppendTo", "[", 
            RowBox[{"$subRules", ",", "$test"}], "]"}], ";"}]}], 
         "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"$subRules", "=", 
         RowBox[{"Flatten", "[", "$subRules", "]"}]}], ";", 
        RowBox[{"xPrint", "[", 
         RowBox[{"\"\<subRules: \>\"", ",", "$subRules"}], "]"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"$patterns", "=", 
         RowBox[{
          RowBox[{
           RowBox[{"#", "[", 
            RowBox[{"[", "2", "]"}], "]"}], "&"}], "/@", "$subRules"}]}], ";",
         " ", 
        RowBox[{"xPrint", "[", "$patterns", "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"$rule", "=", 
         RowBox[{
          RowBox[{"$rule", "//", 
           RowBox[{"tuRuleApply", "[", 
            RowBox[{"$subRules", ",", "nosubFn"}], "]"}]}], "//", 
          RowBox[{"tuAddPatternVariable", "[", "$patterns", "]"}]}]}], ";", 
        RowBox[{"xPrint", "[", "$rule", "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"$test", "=", 
         RowBox[{"exp", "//", 
          RowBox[{"tuRuleApply", "[", 
           RowBox[{"$rule", ",", "nosubFn"}], "]"}]}]}]}]}], 
      "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"C", "[", "Rule", "]"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
   "\"\<tuRuleSolveF[vars_,domain_:Complexes,maxExtraCondition_:0,\
independentVars_List:tuRuleIndependentVarPattern][rules_] operator form of \
tuRuleSolve[]\>\"", ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"tuRuleSolveF", "[", 
       RowBox[{"vars_", ",", 
        RowBox[{"domain_:", "Complexes"}], ",", 
        RowBox[{"maxExtraCondition_:", "0"}], ",", 
        RowBox[{"independentVars_List:", "tuRuleIndependentVarPattern"}]}], 
       "]"}], "[", "rules_", "]"}], ":=", 
     RowBox[{"tuRuleSolve", "[", 
      RowBox[{
      "rules", ",", "vars", ",", "domain", ",", "maxExtraCondition", ",", 
       "independentVars"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"tuRuleSolve", "::", "usage"}], "=", 
     "\"\<tuRuleSolve[rules_,vars_,domain_:Complexes,maxExtraCondition_:0,\
independentVars_List:tuRuleIndependentVarPattern] Solve[]s rules_ (singley or \
List[]) for vars_ (Singlely or List[] of Pattern[]s) and returns Rules for \
vars_.  independentVars_List can be set to indicate independent variables \
that are Mathematica functions such as OverBar[a]. NOTE: parameter list \
changed to include more Solve parameters *23Mar2016*\>\""}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"tuRuleSolve", "[", 
      RowBox[{"rules_", ",", "vars_", ",", 
       RowBox[{"domain_:", "Complexes"}], ",", 
       RowBox[{"maxExtraCondition_:", "0"}], ",", 
       RowBox[{"independentVars_List:", "tuRuleIndependentVarPattern"}]}], 
      "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "tmp", ",", "XXXX", ",", "varlist", ",", "Xs", ",", "subX", ",", 
         "varPat", ",", "xrules", ",", 
         RowBox[{"xvars", "=", 
          RowBox[{"DeleteDuplicates", "[", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", "vars", "}"}], "]"}], "]"}]}], " ", ",", 
         "independentPos", ",", "independents", ",", "independentLab", ",", 
         "Is", ",", "IIII", ",", "subIIII", ",", "SolveArgs"}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{"**", "**"}], "*****)"}], "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{"varlist", ",", "xrules"}], "}"}], "=", 
         RowBox[{
          RowBox[{"ExtractPatternXpat", "[", "xvars", "]"}], "[", 
          RowBox[{"tuRule", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"rules", "/.", 
              RowBox[{"Equal", "\[Rule]", "Rule"}]}], "}"}], ",", "False"}], 
           "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"varlist", "=", 
         RowBox[{"DeleteDuplicates", "[", "varlist", "]"}]}], ";", 
        RowBox[{"(*", 
         RowBox[{"OK", "?"}], "*)"}], "\[IndentingNewLine]", 
        RowBox[{"subX", "=", 
         RowBox[{"Thread", "[", 
          RowBox[{"Rule", "[", 
           RowBox[{"varlist", ",", 
            RowBox[{"(", 
             RowBox[{"Xs", "=", 
              RowBox[{"Array", "[", 
               RowBox[{"XXXX", ",", 
                RowBox[{"Length", "[", "varlist", "]"}]}], "]"}]}], ")"}]}], 
           "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{
         "Substitute", " ", "vars_", " ", "for", " ", "Solve", " ", 
          "variables"}], "*)"}], "\[IndentingNewLine]", 
        RowBox[{"tmp", "=", 
         RowBox[{"xrules", "//.", "subX"}]}], ";", 
        RowBox[{"xPrint", "[", 
         RowBox[{"\"\<>\>\"", ",", "tmp"}], "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"tmp", "=", 
         RowBox[{"Select", "[", 
          RowBox[{"tmp", ",", 
           RowBox[{
            RowBox[{"!", 
             RowBox[{"tuFreeQ", "[", 
              RowBox[{"#", ",", "Xs"}], "]"}]}], "&"}]}], "]"}]}], ";", 
        RowBox[{"(*", 
         RowBox[{"Remove", " ", "irrelevant", " ", "Rules"}], "*)"}], 
        "\[IndentingNewLine]", 
        RowBox[{"SolveArgs", "=", 
         RowBox[{"{", 
          RowBox[{"tmp", ",", "Xs"}], "}"}]}], ";", 
        RowBox[{"xPrint", "[", 
         RowBox[{
         "\"\<>\>\"", ",", "SolveArgs", ",", "\"\<:\>\"", ",", "tmp", ",", 
          "\"\<:\>\"", ",", "Xs"}], "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{
         "independentVars", " ", "need", " ", "dummy", " ", "labels", " ", 
          "incase", " ", "unclothed", " ", "independentVars", " ", "is", " ", 
          "in", " ", "vars_"}], " ", "*)"}], "\[IndentingNewLine]", 
        RowBox[{"independentPos", "=", 
         RowBox[{"ExtractPositionPattern", "[", 
          RowBox[{"SolveArgs", ",", "independentVars"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"independents", "=", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"#", "[", 
             RowBox[{"[", "2", "]"}], "]"}], "&"}], "/@", "independentPos"}], 
          "//", "DeleteDuplicates"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"independentLab", "=", 
         RowBox[{"MapIndexed", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"#1", "->", 
             RowBox[{"IIII", "[", 
              RowBox[{"First", "[", "#2", "]"}], "]"}]}], "&"}], ",", 
           "independents"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"subIIII", "=", 
         RowBox[{"independentPos", "//.", "independentLab"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"SolveArgs", "=", 
         RowBox[{"ReplacePart", "[", 
          RowBox[{"SolveArgs", ",", "subIIII"}], "]"}]}], ";", 
        RowBox[{"xPrint", "[", 
         RowBox[{"SolveArgs", ",", "\"\<:\>\"", ",", "subIIII"}], "]"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"SolveArgs", "=", 
         RowBox[{"SolveArgs", "/.", 
          RowBox[{"Rule", "->", "Equal"}]}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"tmp", "=", 
         RowBox[{"Solve", "[", 
          RowBox[{
           RowBox[{"Apply", "[", 
            RowBox[{"Sequence", ",", "SolveArgs"}], "]"}], ",", "domain", ",", 
           RowBox[{"MaxExtraConditions", "\[Rule]", "maxExtraCondition"}]}], 
          "]"}]}], ";", 
        RowBox[{"(*", "TEST", "*)"}], "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{"tmp", "=", 
           RowBox[{"Solve", "[", 
            RowBox[{
             RowBox[{"SolveArgs", "[", 
              RowBox[{"[", "1", "]"}], "]"}], ",", 
             RowBox[{"SolveArgs", "[", 
              RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], ";"}], "*)"}], 
        "\[IndentingNewLine]", 
        RowBox[{"xPrint", "[", 
         RowBox[{"SolveArgs", ",", "\"\<:\>\"", ",", "tmp"}], "]"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{"Replace", " ", "independentLab"}], " ", "*)"}], 
        "\[IndentingNewLine]", 
        RowBox[{"tmp", "=", 
         RowBox[{"tmp", "//", "RemovePatterns"}]}], ";", 
        RowBox[{"xPrint", "[", "tmp", "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"tmp", "=", 
         RowBox[{"tmp", "//.", 
          RowBox[{"Reverse", "/@", "independentLab"}]}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"tmp", "=", 
         RowBox[{
          RowBox[{"tmp", "//.", 
           RowBox[{"Reverse", "/@", "subX"}]}], "//.", 
          RowBox[{
           RowBox[{"Xpat", "[", "a_", "]"}], "\[Rule]", "a"}]}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"tmp", "//", "Flatten"}]}]}], "\[IndentingNewLine]", "]"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"tuRuleDSolve", "::", "usage"}], "=", 
     "\"\<tuRuleDSolve[var_List,indvar_List][eqn_] applies DSolve to eqn_ \
(maybe a List of Rules) where var_List is a list of variables that are \
functions of indvar_List. Does simple substitutions to transform eqn_ into \
form that DSolve recognizes.  PROTOTYPE. *11Jan2018*\>\""}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"tuRuleDSolve", "[", 
       RowBox[{"var_List", ",", "indvar_List"}], "]"}], "[", "eqn_", "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"$0", "=", "eqn"}], ",", "$", ",", "$s", ",", "$s1"}], "}"}],
        ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"$s", "=", 
         RowBox[{"Map", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"#", "\[Rule]", 
             RowBox[{"#", "[", 
              RowBox[{"Apply", "[", 
               RowBox[{"Sequence", ",", "indvar"}], "]"}], "]"}]}], "&"}], 
           ",", "var"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"$", "=", 
         RowBox[{
          RowBox[{
           RowBox[{"$0", "/.", "$s"}], "/.", 
           RowBox[{"Rule", "\[Rule]", "Equal"}]}], "//", "tuDerivOps2D"}]}], 
        ";", "\[IndentingNewLine]", 
        RowBox[{"$s1", "=", 
         RowBox[{
          RowBox[{
           RowBox[{"#", "[", 
            RowBox[{"[", "2", "]"}], "]"}], "&"}], "/@", "$s"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"$", "=", 
         RowBox[{"DSolve", "[", 
          RowBox[{"$", ",", 
           RowBox[{"$s1", "//", "First"}], ",", "indvar"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"$", "=", 
         RowBox[{"$", "/.", 
          RowBox[{"Map", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Reverse", "[", "#", "]"}], "&"}], ",", "$s"}], 
           "]"}]}]}]}]}], "\[IndentingNewLine]", "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"tuRuleDenominator0", "::", "usage"}], "=", 
     "\"\<tuDenominator0[exp_] removes Denominator from Rule[]s, \
DelayedRule[]s, Equal[] expressions, e.g., a/b\[Rule]0 \
\[DoubleLongRightArrow] a\[Rule]0 *15Nov2017*\>\""}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"tuRuleDenominator0", "[", "exp_", "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"$", "=", "exp"}], "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"$", "=", 
         RowBox[{"$", "/.", " ", 
          RowBox[{
           RowBox[{"a_", "\[Equal]", "0"}], "\[RuleDelayed]", 
           RowBox[{
            RowBox[{
             RowBox[{"Numerator", "[", "a", "]"}], "\[Equal]", "0"}], "/;", 
            RowBox[{
             RowBox[{
              RowBox[{"Numerator", "[", "a", "]"}], "/", 
              RowBox[{"Denominator", "[", "a", "]"}]}], "===", "a"}]}]}]}]}], 
        ";", "\[IndentingNewLine]", 
        RowBox[{"$", "=", 
         RowBox[{"$", "/.", 
          RowBox[{
           RowBox[{"(", " ", 
            RowBox[{"a_", "->", "0"}], ")"}], "\[RuleDelayed]", 
           RowBox[{
            RowBox[{"Numerator", "[", "a", "]"}], "->", 
            RowBox[{"0", "/;", 
             RowBox[{
              RowBox[{
               RowBox[{"Numerator", "[", "a", "]"}], "/", 
               RowBox[{"Denominator", "[", "a", "]"}]}], "===", 
              "a"}]}]}]}]}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"$", "=", 
         RowBox[{"$", "/.", 
          RowBox[{
           RowBox[{"(", " ", 
            RowBox[{"a_", ":>", "0"}], ")"}], "\[RuleDelayed]", 
           RowBox[{
            RowBox[{"Numerator", "[", "a", "]"}], ":>", 
            RowBox[{"0", "/;", 
             RowBox[{
              RowBox[{
               RowBox[{"Numerator", "[", "a", "]"}], "/", 
               RowBox[{"Denominator", "[", "a", "]"}]}], "===", 
              "a"}]}]}]}]}]}]}]}], "\[IndentingNewLine]", "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"tuOpIndependentVarActivate", "::", "usage"}], "=", 
     "\"\<tuOpIndependentVarActivate[independentVars_List:\
tuRuleIndependentVarPattern][exp_] evaluates exp_ containing Inactive[] \
operations after independentVars_List variables are replaced by dummy \
variables so as not to confuse Mathematica operators (e.g., DSolve) with \
duplicate symbol in exp_ (e.g., subscript as in DSolve[\!\(\*SubscriptBox[\(a\
\), \(\[CurlyPhi]\)]\)\[CurlyPhi][t]+b==0,\[CurlyPhi][t],t]). \
independentVars_List contains Pattern[]s whose internal symbols are \
considered independent of the calculation (e.g. subscripts).  \
*16Nov2017*\>\""}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"tuOpIndependentVarActivate", "[", 
       RowBox[{"independentVars_List:", "tuRuleIndependentVarPattern"}], 
       "]"}], "[", "exp_", "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"$", "=", "exp"}], ",", "$h", " ", ",", 
         RowBox[{"$hcnt", "=", "1"}], ",", "$seq", ",", "independentPos", ",",
          "independents", ",", "independentLab", ",", "Is", ",", "IIII", ",", 
         "subIIII"}], "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"tuOpIndependentVarActivate", "::", "independents"}], "=", 
          "\"\<Independents: `1` \>\""}], ";", "\[IndentingNewLine]", 
         RowBox[{"(*", 
          RowBox[{
          "independentVars", " ", "need", " ", "dummy", " ", "labels"}], 
          "*)"}], "\[IndentingNewLine]", 
         RowBox[{"independentPos", "=", 
          RowBox[{"$", "//", 
           RowBox[{
           "tuExtractPositionPattern", "[", "independentVars", "]"}]}]}], ";",
          "\[IndentingNewLine]", 
         RowBox[{"independents", "=", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"#", "[", 
              RowBox[{"[", "2", "]"}], "]"}], "&"}], "/@", "independentPos"}],
            "//", "DeleteDuplicates"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"independentLab", "=", 
          RowBox[{"MapIndexed", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"#1", "->", 
              RowBox[{"IIII", "[", 
               RowBox[{"First", "[", "#2", "]"}], "]"}]}], "&"}], ",", 
            "independents"}], "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"Message", "[", 
          RowBox[{
           RowBox[{"tuOpIndependentVarActivate", "::", "independents"}], ",", 
           "independents"}], "]"}], ";", "\[IndentingNewLine]", 
         RowBox[{"subIIII", "=", 
          RowBox[{"independentPos", "//.", "independentLab"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"$", "=", 
          RowBox[{"ReplacePart", "[", 
           RowBox[{"$", ",", "subIIII"}], "]"}]}], ";"}], 
        RowBox[{"(*", 
         RowBox[{"Print", "[", 
          RowBox[{
          "$", ",", "\"\<::\>\"", ",", "subIIII", ",", "\"\<::\>\"", ",", 
           RowBox[{"$", "[", 
            RowBox[{"[", "0", "]"}], "]"}]}], "]"}], "*)"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"$h", "=", 
         RowBox[{"Head", "[", "$", "]"}]}], ";", 
        RowBox[{"While", "[", 
         RowBox[{
          RowBox[{"!", 
           RowBox[{"MatchQ", "[", 
            RowBox[{"$h", ",", 
             RowBox[{"Inactive", "[", "f_", "]"}]}], "]"}]}], ",", 
          RowBox[{
           RowBox[{"$h", "=", 
            RowBox[{"Head", "[", "$h", "]"}]}], ";", 
           RowBox[{"$hcnt", "++"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"$seq", "=", 
         RowBox[{"Apply", "[", 
          RowBox[{"Sequence", ",", 
           RowBox[{"Table", "[", 
            RowBox[{"0", ",", "$hcnt"}], "]"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"$", "[", 
          RowBox[{"[", "$seq", "]"}], "]"}], "=", 
         RowBox[{"Activate", "[", 
          RowBox[{"$", "[", 
           RowBox[{"[", "$seq", "]"}], "]"}], "]"}]}], ";", 
        RowBox[{"(*", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"Print", "[", 
           RowBox[{
           "$", ",", "\"\<::\>\"", ",", "$hcnt", ",", "\"\<::\>\"", ",", 
            RowBox[{"$h", "\[Rule]", 
             RowBox[{"Activate", "[", "$h", "]"}]}]}], "]"}], ";"}], "*)"}], 
        "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{"Replace", " ", "independentLabs"}], " ", "*)"}], 
        "\[IndentingNewLine]", 
        RowBox[{"$", "=", 
         RowBox[{"$", "//.", 
          RowBox[{"Reverse", "/@", "independentLab"}]}]}]}]}], 
      "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"Ex", ":", " ", "\[IndentingNewLine]", "$"}], "=", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"Inactive", "[", "DSolve", "]"}], "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{
            SubscriptBox["a", "\[CurlyPhi]"], 
            RowBox[{"\[CurlyPhi]", "[", "x", "]"}]}], "+", 
           SuperscriptBox["b", "\[CurlyPhi]"]}], "\[Equal]", "0"}], ",", 
         RowBox[{"\[CurlyPhi]", "[", "x", "]"}], ",", "x"}], "]"}], 
       "\[IndentingNewLine]", "$"}], "//", 
      RowBox[{"tuOpIndependentVarActivate", "[", 
       RowBox[{"{", 
        RowBox[{
         SubscriptBox["_", "_"], ",", 
         SuperscriptBox["_", "_"]}], "}"}], "]"}]}]}], "\[IndentingNewLine]", 
    "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"tuOpIndependentVar", "::", "usage"}], "=", 
     "\"\<tuOpIndependentVar[opname_?(Head[#]=!=List&),op_?(tuHasAnyQ[Head[#],\
op$]&),independentVars_List:tuRuleIndependentVarPattern] applies \
tuOpIndependentVarActivate[independentVars_List:tuRuleIndependentVarPattern][\
exp_] given opname_ and op_(must be the statement opname[] in the form op$[]) \
where op$ will be replace by Inactive[opname] for evaluataion.  This is a \
more convenient interface to \
tuOpIndependentVarActivate[independentVars_List:tuRuleIndependentVarPattern][\
exp_] *13Dec2017*\>\""}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"tuOpIndependentVar", "[", 
      RowBox[{
       RowBox[{"opname_", "?", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"Head", "[", "#", "]"}], "=!=", "List"}], "&"}], ")"}]}], 
       ",", 
       RowBox[{"op_", "?", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"tuHasAnyQ", "[", 
           RowBox[{
            RowBox[{"Head", "[", "#", "]"}], ",", "op$"}], "]"}], "&"}], 
         ")"}]}], ",", 
       RowBox[{"independentVars_List:", "tuRuleIndependentVarPattern"}]}], 
      "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"op", "/.", 
         RowBox[{"op$", "->", 
          RowBox[{"Inactive", "[", "opname", "]"}]}]}], "//", 
        RowBox[{
        "tuOpIndependentVarActivate", "[", "independentVars", "]"}]}]}], 
      "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"xRuleX", "[", 
      RowBox[{"rules_", ",", "vars_", ",", 
       RowBox[{"independentVars_List:", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Subscript", "[", 
           RowBox[{"_", ",", "_"}], "]"}], ",", 
          RowBox[{"Superscript", "[", 
           RowBox[{"_", ",", "_"}], "]"}], ",", 
          RowBox[{"OverBar", "[", "_", "]"}], ",", 
          RowBox[{"OverTilde", "[", "_", "]"}], ",", 
          RowBox[{"OverHat", "[", "_", "]"}], ",", 
          SuperscriptBox["_", "*"]}], "}"}]}]}], "]"}], ":=", 
     RowBox[{"tuRuleSolve", "[", 
      RowBox[{"rules", ",", "vars", ",", "independentVars"}], "]"}]}], ";"}], 
   
   RowBox[{"(*", "Compatibility", "*)"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"InvertRules", "[", 
      RowBox[{"rules_List", ",", "vars_List"}], "]"}], ":=", 
     RowBox[{"tuRuleSolve", "[", 
      RowBox[{"rules", ",", "vars"}], "]"}]}], ";"}], 
   RowBox[{"(*", "Compatibility", "*)"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Clear", "[", "tuRuleEliminate", "]"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"tuRuleEliminate", "::", "usage"}], ":=", 
     "\"\<tuRuleEliminate[pattern_List][rules_List] composes rules from \
rules_List of form Map[Rule[tuRuleSolve[{rule_[#]},#],pattern_]. Works for \
Dot[] patterns.  WARNING: The order of rules_List determines the order in \
which patterns are substituted back into rules_.  Try tuEliminate if this \
Module does not work. *18Jun2015*\>\""}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"tuRuleEliminate", "[", "pattern_", "]"}], "[", "rules_", "]"}],
      ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"$r", "=", 
          RowBox[{"tuRule", "[", 
           RowBox[{"{", "rules", "}"}], "]"}]}], ",", 
         RowBox[{"$rp", "=", 
          RowBox[{"{", "}"}]}], ",", 
         RowBox[{"$p", "=", 
          RowBox[{"Flatten", "[", 
           RowBox[{"{", "pattern", "}"}], "]"}]}]}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{"Apply", " ", "simple", " ", "pattern_", " ", "rules", " ", 
         RowBox[{"first", "."}]}], "*)"}], "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"xPrint", "[", 
         RowBox[{"\"\<$r>\>\"", ",", "$r", ",", "\"\<>\>\"", ",", "$p"}], 
         "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"$rp", "=", 
         RowBox[{"Map", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"tuExtractPositionPattern", "[", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"#", "\[Rule]", "_"}], ",", 
                RowBox[{"_", "\[Rule]", "#"}]}], "}"}], "]"}], "[", "$r", 
             "]"}], "&"}], ",", "$p"}], "]"}]}], ";", 
        RowBox[{"xPrint", "[", 
         RowBox[{"\"\<$rp>\>\"", ",", "$rp"}], "]"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"$rp", "!=", 
            RowBox[{"{", 
             RowBox[{"{", "}"}], "}"}]}], "&&", 
           RowBox[{"$rp", "!=", 
            RowBox[{"{", "}"}]}]}], ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"$rp", "=", 
            RowBox[{
             RowBox[{"Map", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"#", "[", 
                 RowBox[{"[", 
                  RowBox[{"1", ",", "1"}], "]"}], "]"}], "&"}], ",", "$rp"}], 
              "]"}], "//", "DeleteDuplicates"}]}], ";", 
           RowBox[{"xPrint", "[", 
            RowBox[{
            "\"\<>\>\"", ",", "$p", ",", "\"\< \>\"", ",", "$rp", ",", 
             "\"\< \>\"", ",", "$r", ",", "\"\<<\>\""}], "]"}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"$rp", "=", 
            RowBox[{"Map", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"tuRuleSolve", "[", 
                RowBox[{
                 RowBox[{"$r", "[", 
                  RowBox[{"[", "#", "]"}], "]"}], ",", "$p"}], "]"}], "&"}], 
              ",", "$rp"}], "]"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"$rp", "=", 
            RowBox[{
             RowBox[{"DeleteCases", "[", 
              RowBox[{"$rp", ",", 
               RowBox[{"HoldPattern", "[", 
                RowBox[{"Solve", "[", 
                 RowBox[{"_", ",", "_"}], "]"}], "]"}]}], "]"}], "//", 
             "Flatten"}]}], ";", 
           RowBox[{"(*", " ", "??", " ", "*)"}], "\[IndentingNewLine]", 
           "\[IndentingNewLine]", 
           RowBox[{"$rp", "=", 
            RowBox[{"Select", "[", 
             RowBox[{"$rp", ",", 
              RowBox[{
               RowBox[{"tuHasNoneQ", "[", 
                RowBox[{
                 RowBox[{"#", "[", 
                  RowBox[{"[", "2", "]"}], "]"}], ",", "$p"}], "]"}], "&"}]}],
              "]"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"$rp", "=", 
            RowBox[{"$rp", "//", "tuRule"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Length", "[", "$r", "]"}], ">", "1"}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{"$r", "=", 
              RowBox[{"$r", "//.", "$rp"}]}], ",", "\[IndentingNewLine]", 
             RowBox[{"$r", "=", "$rp"}]}], "]"}], ";"}]}], 
         "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{
         "Inspect", " ", "each", " ", "rule", " ", "for", " ", "possible", 
          " ", "pattern", " ", 
          RowBox[{"rule", "."}]}], "*)"}], "\[IndentingNewLine]", 
        RowBox[{"$rp", "=", 
         RowBox[{
          RowBox[{"tuExtractPositionPattern", "[", "$p", "]"}], "[", "$r", 
          "]"}]}], ";", 
        RowBox[{"xPrint", "[", 
         RowBox[{
         "\"\<$p>\>\"", ",", "$p", ",", "\"\< $rp>\>\"", ",", "$rp", ",", 
          "\"\< $r>\>\"", ",", "$r", ",", "\"\<<\>\""}], "]"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"$rp", "=", 
         RowBox[{
          RowBox[{"Map", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"#", "[", 
              RowBox[{"[", 
               RowBox[{"1", ",", "1"}], "]"}], "]"}], "&"}], ",", "$rp"}], 
           "]"}], "//", "DeleteDuplicates"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"xPrint", "[", 
         RowBox[{"\"\<$rp>\>\"", ",", "$rp"}], "]"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"$rp", "=", 
         RowBox[{"Map", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"tuRuleSolve", "[", 
             RowBox[{
              RowBox[{"$r", "[", 
               RowBox[{"[", "#", "]"}], "]"}], ",", "$p"}], "]"}], "&"}], ",",
            "$rp"}], "]"}]}], ";", 
        RowBox[{"xPrint", "[", 
         RowBox[{
         "\"\<$p> \>\"", ",", "$p", ",", "\"\< $rp>\>\"", ",", "$rp"}], "]"}],
         ";", "\[IndentingNewLine]", 
        RowBox[{"$rp", "=", 
         RowBox[{
          RowBox[{"DeleteCases", "[", 
           RowBox[{"$rp", ",", 
            RowBox[{"HoldPattern", "[", 
             RowBox[{"Solve", "[", 
              RowBox[{"_", ",", "_"}], "]"}], "]"}]}], "]"}], "//", 
          "Flatten"}]}], ";", 
        RowBox[{"(*", " ", "??", " ", "*)"}], "\[IndentingNewLine]", 
        RowBox[{"xPrint", "[", 
         RowBox[{
         "\"\<$r> \>\"", ",", "$r", ",", "\"\< $rp>\>\"", ",", "$rp"}], "]"}],
         ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"$rp", "=", 
         RowBox[{"Select", "[", 
          RowBox[{"$rp", ",", 
           RowBox[{
            RowBox[{"tuHasNoneQ", "[", 
             RowBox[{
              RowBox[{"#", "[", 
               RowBox[{"[", "2", "]"}], "]"}], ",", "$p"}], "]"}], "&"}]}], 
          "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"$rp", "=", 
         RowBox[{"$rp", "//", "tuRule"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"xPrint", "[", 
         RowBox[{
         "\"\<$p> \>\"", ",", "$p", ",", "\"\< $rp>\>\"", ",", "$rp"}], "]"}],
         ";", "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Length", "[", "$r", "]"}], ">", "1"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"$r", "=", 
           RowBox[{"$r", "//.", "$rp"}]}], ",", "\[IndentingNewLine]", 
          RowBox[{"$r", "=", "$rp"}]}], "\[IndentingNewLine]", "]"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"$r", "=", 
         RowBox[{
          RowBox[{"DeleteCases", "[", 
           RowBox[{"$r", ",", 
            RowBox[{"a_", "\[Rule]", "a_"}]}], "]"}], "//", "tuRule"}]}]}]}], 
      "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"tuEliminate", "::", "usage"}], "=", 
     "\"\<tuEliminate[rules_,vars_,independentVars_List:\
tuRuleIndependentVarPattern] applies Eliminate[] to a list of rules_ \
eliminating vars_. Recognizes negative powers of vars_.  Variables Matching \
independentVars_ are treated independent variables. Try tuRuleEliminate if \
this Module does not work. *23May2014\>\""}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"tuEliminate", "[", 
      RowBox[{"rules_", ",", "vars_", ",", 
       RowBox[{"independentVars_List:", "tuRuleIndependentVarPattern"}]}], 
      "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "tmp", ",", "XXXX", ",", "varlist", ",", "Xs", ",", "subX", ",", 
         "varPat", ",", "xrules", ",", 
         RowBox[{"xvars", "=", 
          RowBox[{"DeleteDuplicates", "[", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", "vars", "}"}], "]"}], "]"}]}], " ", ",", 
         "independentPos", ",", "independents", ",", "independentLab", ",", 
         "Is", ",", "IIII", ",", "subIIII", ",", "SolveArgs", ",", "ivars", 
         ",", "xpower"}], "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"xpower", "[", "rule_Rule", "]"}], ":=", 
         RowBox[{"Module", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"pow", ",", 
             RowBox[{"tmp", "=", "rule"}]}], "}"}], ",", 
           RowBox[{"(*", 
            RowBox[{
            "eliminate", " ", "negative", " ", "powers", " ", "in", " ", 
             "rule"}], "*)"}], "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"tmp", "=", 
             RowBox[{"tmp", "/.", 
              RowBox[{
               RowBox[{"Power", "[", 
                RowBox[{"a", ",", "n_"}], "]"}], "\[RuleDelayed]", 
               RowBox[{
                RowBox[{"power", "[", 
                 RowBox[{"a", ",", "n"}], "]"}], "/;", 
                RowBox[{"n", "<", "0"}]}]}]}]}], ";", "\[IndentingNewLine]", 
            RowBox[{"pow", "=", 
             RowBox[{"tmp", "//", 
              RowBox[{"tuExtractPattern", "[", 
               RowBox[{"power", "[", 
                RowBox[{"a", ",", "_"}], "]"}], "]"}]}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"tmp", "=", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"pow", "=!=", 
                RowBox[{"{", "}"}]}], ",", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{
                 RowBox[{"pow", "[", 
                  RowBox[{"[", 
                   RowBox[{"1", ",", "2"}], "]"}], "]"}], "=", 
                 RowBox[{"-", 
                  RowBox[{"pow", "[", 
                   RowBox[{"[", 
                    RowBox[{"1", ",", "2"}], "]"}], "]"}]}]}], ";", 
                RowBox[{"pow", "=", " ", 
                 RowBox[{
                  RowBox[{
                   RowBox[{
                    RowBox[{"pow", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "#"}], "&"}], "/@", 
                  "tmp"}]}], ";", 
                RowBox[{"pow", "/.", 
                 RowBox[{"power", "\[Rule]", "Power"}]}]}], ",", 
               "\[IndentingNewLine]", "tmp"}], "]"}]}], ";", 
            "\[IndentingNewLine]", "tmp"}]}], "\[IndentingNewLine]", "]"}]}], 
        ";", "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{"**", "**"}], "*****)"}], "\[IndentingNewLine]", 
        RowBox[{"xrules", "=", 
         RowBox[{"tuRule", "[", 
          RowBox[{
           RowBox[{"{", "rules", "}"}], "/.", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Equal", "\[Rule]", "Rule"}], ",", 
             RowBox[{"And", "\[Rule]", "List"}]}], "}"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{"Eliminate", " ", 
          RowBox[{"1", "/", 
           RowBox[{
            RowBox[{"(", "vars_", ")"}], "^", "n"}]}], " ", "from", " ", 
          "denominator", " ", "in", " ", "rules_"}], " ", "*)"}], 
        "\[IndentingNewLine]", 
        RowBox[{"ivars", "=", 
         RowBox[{
          RowBox[{
           RowBox[{"1", "/", "#"}], "&"}], "/@", "xvars"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"xrules", "=", 
         RowBox[{"xpower", "/@", "xrules"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"(*", "*)"}], "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"varlist", ",", "xrules"}], "}"}], "=", 
         RowBox[{
          RowBox[{"ExtractPatternXpat", "[", "xvars", "]"}], "[", "xrules", 
          "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"xPrint", "[", 
         RowBox[{"\"\<VV\>\"", ",", 
          RowBox[{"{", 
           RowBox[{"varlist", ",", "xrules"}], "}"}]}], "]"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"varlist", "=", 
         RowBox[{"DeleteDuplicates", "[", "varlist", "]"}]}], ";", 
        RowBox[{"(*", 
         RowBox[{"OK", "?"}], "*)"}], "\[IndentingNewLine]", 
        RowBox[{"subX", "=", 
         RowBox[{"Thread", "[", 
          RowBox[{"Rule", "[", 
           RowBox[{"varlist", ",", 
            RowBox[{"(", 
             RowBox[{"Xs", "=", 
              RowBox[{"Array", "[", 
               RowBox[{"XXXX", ",", 
                RowBox[{"Length", "[", "varlist", "]"}]}], "]"}]}], ")"}]}], 
           "]"}], "]"}]}], ";", 
        RowBox[{"xPrint", "[", "subX", "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{
         "Substitute", " ", "vars_", " ", "for", " ", "Solve", " ", 
          "variables"}], "*)"}], "\[IndentingNewLine]", 
        RowBox[{"tmp", "=", 
         RowBox[{"xrules", "//.", "subX"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"SolveArgs", "=", 
         RowBox[{"{", 
          RowBox[{"tmp", ",", "Xs"}], "}"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{
         "independentVars", " ", "need", " ", "dummy", " ", "labels", " ", 
          "incase", " ", "unclothed", " ", "independentVars", " ", "is", " ", 
          "in", " ", "vars_"}], " ", "*)"}], "\[IndentingNewLine]", 
        RowBox[{"independentPos", "=", 
         RowBox[{"ExtractPositionPattern", "[", 
          RowBox[{"SolveArgs", ",", "independentVars"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"independents", "=", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"#", "[", 
             RowBox[{"[", "2", "]"}], "]"}], "&"}], "/@", "independentPos"}], 
          "//", "DeleteDuplicates"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"independentLab", "=", 
         RowBox[{"MapIndexed", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"#1", "->", 
             RowBox[{"IIII", "[", 
              RowBox[{"First", "[", "#2", "]"}], "]"}]}], "&"}], ",", 
           "independents"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"subIIII", "=", 
         RowBox[{"independentPos", "//.", "independentLab"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"SolveArgs", "=", 
         RowBox[{"ReplacePart", "[", 
          RowBox[{"SolveArgs", ",", "subIIII"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"SolveArgs", "=", 
         RowBox[{"SolveArgs", "/.", 
          RowBox[{"Rule", "->", "Equal"}]}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"tmp", "=", 
         RowBox[{"Eliminate", "[", 
          RowBox[{"Apply", "[", 
           RowBox[{"Sequence", ",", "SolveArgs"}], "]"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{"Replace", " ", "independentLab"}], " ", "*)"}], 
        "\[IndentingNewLine]", 
        RowBox[{"tmp", "=", 
         RowBox[{"tmp", "//", "RemovePatterns"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"tmp", "=", 
         RowBox[{"tmp", "//.", 
          RowBox[{"Reverse", "/@", "independentLab"}]}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"tmp", "=", 
         RowBox[{
          RowBox[{"tmp", "//.", 
           RowBox[{"Reverse", "/@", "subX"}]}], "//.", 
          RowBox[{
           RowBox[{"Xpat", "[", "a_", "]"}], "\[Rule]", "a"}]}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"tmp", "//", "Flatten"}]}]}], "\[IndentingNewLine]", "]"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"xEliminate", "[", 
      RowBox[{"rules_", ",", "vars_", ",", 
       RowBox[{"independentVars_List:", "tuRuleIndependentVarPattern"}]}], 
      "]"}], ":=", "\[IndentingNewLine]", 
     RowBox[{"tuEliminate", "[", 
      RowBox[{"rules", ",", "vars", ",", "independentVars"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"Rewrites", " ", 
      RowBox[{"(", "simple", ")"}], " ", "rule_", " ", "in", " ", "form", "  ",
       "var_"}], "\[Rule]", " ", 
     RowBox[{
      RowBox[{"..", "  ", ".", "  ", "var_"}], " ", "may", " ", "be", " ", 
      "a", " ", "pattern", " ", "but", " ", "must", " ", "only", " ", "match",
       " ", "one", " ", "item", " ", "in", " ", 
      RowBox[{"rule", ".", "  ", "var_"}], " ", "needs", " ", "to", " ", "be",
       " ", "a", " ", "variable", " ", "that", " ", "can", " ", "be", " ", 
      "Solved", " ", "for", " ", "in", " ", "rule_.", "  ", 
      "\[IndentingNewLine]", "This", " ", "Module", " ", "does", " ", "not", 
      " ", "work", " ", "with", " ", "Power", " ", "or", " ", 
      RowBox[{
       SqrtBox[" "], " ", ".", "  ", "Only"}], " ", "uses", " ", "first", " ",
       "solution", " ", "of", " ", "Solve", "  ", "*", "13", "Dec2012"}]}], 
    "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"RuleX", "[", 
      RowBox[{"rule_Rule", ",", "var_"}], "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"tmp", "=", 
          RowBox[{"Apply", "[", 
           RowBox[{"Equal", ",", "rule"}], "]"}]}], ",", "XXXXX", ",", 
         "list"}], "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"list", "=", 
         RowBox[{"DeleteDuplicates", "[", 
          RowBox[{"First", "[", 
           RowBox[{
            RowBox[{"ExtractPatternXpat", "[", "var", "]"}], "[", "rule", 
            "]"}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"list", "=!=", 
           RowBox[{"{", "}"}]}], ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"tmp", "=", 
            RowBox[{"tmp", "//.", 
             RowBox[{"var", "\[Rule]", "XXXXX"}]}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"tmp", "=", 
            RowBox[{
             RowBox[{"Solve", "[", 
              RowBox[{"tmp", ",", "XXXXX"}], "]"}], "//", "First"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Length", "[", "list", "]"}], "\[Equal]", "1"}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{"tmp", "=", 
              RowBox[{"tmp", "//.", 
               RowBox[{"XXXXX", "\[Rule]", 
                RowBox[{"list", "[", 
                 RowBox[{"[", "1", "]"}], "]"}]}]}]}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{"tmp", "=", 
              RowBox[{"tmp", "//.", 
               RowBox[{"XXXXX", "\[Rule]", "var"}]}]}]}], 
            "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"tmp", "[", 
             RowBox[{"[", 
              RowBox[{"1", ",", "2"}], "]"}], "]"}], "=", 
            RowBox[{
             RowBox[{
              RowBox[{"tmp", "[", 
               RowBox[{"[", 
                RowBox[{"1", ",", "2"}], "]"}], "]"}], "/.", 
              RowBox[{"Pattern", "->", "xPattern"}]}], "/.", 
             RowBox[{
              RowBox[{"xPattern", "[", 
               RowBox[{"x_", ",", "b_"}], "]"}], "->", "x"}]}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"tmp", "/.", 
            RowBox[{
             RowBox[{"Xpat", "[", "a_", "]"}], "->", "a"}]}]}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"{", "}"}]}], 
         RowBox[{"(*", 
          RowBox[{
           RowBox[{"Return", " ", 
            RowBox[{"{", "}"}], " ", "if", " ", "var_"}], " ", "\[Element]", 
           " ", "rule_Rule"}], " ", "*)"}], "\[IndentingNewLine]", "]"}]}]}], 
      "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", "\[IndentingNewLine]", 
    RowBox[{
    "As", " ", "RuleX", " ", "but", " ", "returns", " ", "all", " ", 
     "solutions", " ", "of", " ", 
     RowBox[{"Solve", "."}], " ", "*", "10", "Jan2013"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"RuleXall", "[", 
      RowBox[{"rule_Rule", ",", "var_"}], "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"tmp", "=", 
          RowBox[{"Apply", "[", 
           RowBox[{"Equal", ",", "rule"}], "]"}]}], ",", "XXXXX", ",", 
         "list"}], "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"list", "=", 
         RowBox[{"DeleteDuplicates", "[", 
          RowBox[{"ExtractPattern", "[", 
           RowBox[{"rule", ",", "var"}], "]"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"tmp", "=", 
         RowBox[{"tmp", "//.", 
          RowBox[{"var", "\[Rule]", "XXXXX"}]}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"tmp", "=", 
         RowBox[{"Solve", "[", 
          RowBox[{"tmp", ",", "XXXXX"}], "]"}]}], ";", "\[IndentingNewLine]", 
        
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Length", "[", "list", "]"}], "\[Equal]", "1"}], ",", 
          RowBox[{"(*", 
           RowBox[{
           "In", " ", "general", " ", "only", " ", "one", " ", "var_"}], 
           "*)"}], "\[IndentingNewLine]", 
          RowBox[{"tmp", "=", 
           RowBox[{"tmp", "//.", 
            RowBox[{"XXXXX", "\[Rule]", 
             RowBox[{"list", "[", 
              RowBox[{"[", "1", "]"}], "]"}]}]}]}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"tmp", "=", 
           RowBox[{"tmp", "//.", 
            RowBox[{"XXXXX", "\[Rule]", "var"}]}]}]}], 
         RowBox[{"(*", 
          RowBox[{
          "For", " ", "cases", " ", "where", " ", "there", " ", "may", " ", 
           "be", " ", "a", " ", 
           RowBox[{"choice", "."}]}], "*)"}], "\[IndentingNewLine]", "]"}], 
        ";", "\[IndentingNewLine]", 
        RowBox[{"tmp", "//", "RemovePatterns"}]}]}], "\[IndentingNewLine]", 
      "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"Applies", " ", 
     RowBox[{"RuleX", "[", 
      RowBox[{"rule_", ",", "var_"}], "]"}], " ", "to", " ", "a", " ", "list",
      " ", "of", " ", "Rules", " ", "*", "13", "Dec2013"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"RuleX", "[", 
      RowBox[{"rules_List", ",", "var_List"}], "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"pos", ",", "sub", ",", 
         RowBox[{"tmp", "=", 
          RowBox[{"rules", " ", "//", "Flatten"}]}]}], " ", "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"tmp", "=", 
         RowBox[{"tmp", "/.", 
          RowBox[{"Rule", "->", "Equal"}]}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"tmp", "=", 
         RowBox[{
          RowBox[{"Solve", "[", 
           RowBox[{"tmp", ",", "var"}], "]"}], "//", "Flatten"}]}]}]}], 
      "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"Applies", " ", 
     RowBox[{"RuleX", "[", 
      RowBox[{"rule_", ",", "var_"}], "]"}], " ", "to", " ", "a", " ", "list",
      " ", "of", " ", "Rules", " ", "*", "13", "Dec2013"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"RuleX", "[", 
      RowBox[{"rules_List", ",", "var_"}], "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"pos", ",", "sub", ",", 
         RowBox[{"tmp", "=", 
          RowBox[{
           RowBox[{"{", "rules", "}"}], " ", "//", "Flatten"}]}]}], " ", 
        "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{"tmp", "=", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"RuleX", "[", 
            RowBox[{"#", ",", "var"}], "]"}], "&"}], "/@", "tmp"}], "//", 
         "Flatten"}]}]}], "\[IndentingNewLine]", "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"RuleX2", "[", 
      RowBox[{"rules_List", ",", "var_"}], "]"}], ":=", 
     RowBox[{"RuleX", "[", 
      RowBox[{"rules", ",", "var"}], "]"}]}], ";", 
    RowBox[{"(*", 
     RowBox[{"Backward", " ", "compatibility"}], "*)"}], 
    "\[IndentingNewLine]", 
    RowBox[{"(*", 
     RowBox[{
      RowBox[{"Rewrites", " ", 
       RowBox[{"(", "simple", ")"}], " ", "rule_", " ", "in", " ", "form", "  ",
        "var_"}], "\[Rule]", " ", 
      RowBox[{
      "..", "   ", "var_", " ", "may", " ", "be", " ", "a", " ", "pattern", 
       " ", "but", " ", "must", " ", "only", " ", "match", " ", "one", " ", 
       "item", " ", "in", " ", 
       RowBox[{"rule", ".", "  ", "Returns"}], " ", "all", " ", "possible", 
       " ", 
       RowBox[{"Solutions", "."}]}]}], " ", "*)"}], 
    RowBox[{
     RowBox[{"RuleX1", "[", 
      RowBox[{"rule_Rule", ",", "var_"}], "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"tmp", "=", 
          RowBox[{"Apply", "[", 
           RowBox[{"Equal", ",", "rule"}], "]"}]}], ",", "XXXXX", ",", "list",
          ",", "tmpx"}], "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"list", "=", 
         RowBox[{"DeleteDuplicates", "[", 
          RowBox[{"ExtractPattern", "[", 
           RowBox[{"rule", ",", "var"}], "]"}], "]"}]}], ";", 
        RowBox[{"(*", 
         RowBox[{"list", " ", "of", " ", "var"}], "*)"}], 
        "\[IndentingNewLine]", 
        RowBox[{"tmpx", "=", 
         RowBox[{"tmp", "//.", 
          RowBox[{"var", "\[Rule]", "XXXXX"}]}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"tmpx", "=", 
         RowBox[{"Solve", "[", 
          RowBox[{"tmpx", ",", "XXXXX"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"Length", "[", "list", "]"}], "\[Equal]", "1"}], 
           RowBox[{"(*", 
            RowBox[{"one", " ", "var"}], "*)"}], "&&", 
           RowBox[{
            RowBox[{"Length", "[", "tmpx", "]"}], ">", "0"}]}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"(*", 
           RowBox[{
            RowBox[{"\[Exists]", " ", 
             RowBox[{"some", " ", "solution"}]}], ",", " ", "replace"}], 
           "*)"}], "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"tmpx", "=", 
            RowBox[{"tmpx", "/.", 
             RowBox[{"XXXXX", "\[Rule]", 
              RowBox[{"list", "[", 
               RowBox[{"[", "1", "]"}], "]"}]}]}]}], ";"}], 
          "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"tmpx", "=", 
            RowBox[{"{", 
             RowBox[{"Apply", "[", 
              RowBox[{"Rule", ",", "tmp"}], "]"}], "}"}]}], 
           RowBox[{"(*", 
            RowBox[{"no", " ", "solution"}], "*)"}], ";"}]}], 
         "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"tmp", "=", 
         RowBox[{
          RowBox[{"tmpx", "/.", 
           RowBox[{"Pattern", "->", "xPattern"}]}], "/.", 
          RowBox[{
           RowBox[{"xPattern", "[", 
            RowBox[{"x_", ",", "b_"}], "]"}], "->", "x"}]}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"tmp", "//", "Flatten"}]}]}], "\[IndentingNewLine]", "]"}]}], 
    ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", "\[IndentingNewLine]", 
    RowBox[{
    "Applies", " ", "RuleX", " ", "converting", " ", "patternvar_", " ", "on",
      " ", "LHS", " ", "to", " ", 
     RowBox[{"Pattern", "."}], " ", "*", "13", "Dec2012"}], "*)"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"RuleX", "[", 
      RowBox[{"rules_", ",", " ", "var_", ",", "patternvar_"}], "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"RuleX2PatternVar", "[", "   ", 
         RowBox[{
          RowBox[{"RuleX", "[", 
           RowBox[{
            RowBox[{"{", "rules", "}"}], ",", "var"}], "]"}], ",", "  ", 
          "patternvar"}], "  ", "]"}], "//", "Flatten"}]}], 
      "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"RuleX1", "[", 
      RowBox[{"rules_", ",", " ", "var_", ",", "patternvar_"}], "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"RuleX2PatternVar", "[", "   ", 
         RowBox[{
          RowBox[{"RuleX", "[", 
           RowBox[{
            RowBox[{"{", "rules", "}"}], ",", "var"}], "]"}], ",", "  ", 
          "patternvar"}], "  ", "]"}], "//", "Flatten"}]}], 
      "\[IndentingNewLine]", "]"}]}], ";"}], "\n", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{
     "Changes", " ", "straight", " ", "variables", " ", "in", " ", "left"}], 
     "-", 
     RowBox[{
     "hand", " ", "part", " ", "of", " ", "rules_", " ", "to", " ", "Pattern",
       " ", "as", " ", "specified", " ", "by", " ", "patternvars_"}]}], "  ", 
    "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"tuAddPatternVariable", "::", "usage"}], "=", 
     "\"\<tuAddPatternVariable[variables_,Btype_:Blank][rules_] Converts \
variables_ on LHS of rules_ into Patterns (Btype_ option is available.). \
Syntax option: tuAddPatternVariable[rules_,variables_].  Rules/Variables may \
be a Lists. (*24Dec2014*)\>\""}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"tuAddPatternVariable", "[", " ", 
       RowBox[{"variables_", " ", ",", " ", 
        RowBox[{"Btype_", " ", ":", " ", "Blank"}]}], "  ", "]"}], " ", "[", 
      "rules_", "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"tmp", "=", "rules"}], ",", "pvar", ",", "sub", ",", 
         "xRule"}], "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"pvar", "=", 
         RowBox[{"Flatten", "[", 
          RowBox[{"{", "variables", "}"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"sub", "=", 
         RowBox[{"Map", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"#", "\[Rule]", 
             RowBox[{"Pattern", "[", 
              RowBox[{"#", ",", 
               RowBox[{"Btype", "[", "]"}]}], "]"}]}], " ", "&"}], ",", 
           "pvar"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"tmp", "=", 
         RowBox[{"tmp", "/.", 
          RowBox[{
           RowBox[{"Rule", "[", 
            RowBox[{"a_", ",", "b_"}], "]"}], "\[RuleDelayed]", 
           RowBox[{"xRule", "[", 
            RowBox[{
             RowBox[{"a", "/.", "sub"}], ",", "b"}], "]"}]}]}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"tmp", "=", 
         RowBox[{"tmp", "//.", 
          RowBox[{"xRule", "->", "Rule"}]}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"tmp", "=", 
         RowBox[{"tmp", "/.", 
          RowBox[{
           RowBox[{"RuleDelayed", "[", 
            RowBox[{"a_", ",", "b_"}], "]"}], "\[RuleDelayed]", 
           RowBox[{"xRule", "[", 
            RowBox[{
             RowBox[{"a", "/.", "sub"}], ",", "b"}], "]"}]}]}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"tmp", "=", 
         RowBox[{"tmp", "//.", 
          RowBox[{"xRule", "->", "RuleDelayed"}]}]}]}]}], 
      "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"RuleX2PatternVar", "[", 
      RowBox[{"rules_", ",", "variables_"}], "]"}], ":=", 
     RowBox[{
      RowBox[{"tuAddPatternVariable", "[", "variables", "]"}], "[", "rules", 
      "]"}]}], ";", 
    RowBox[{"(*", "Compatibility", "*)"}], "\[IndentingNewLine]", 
    RowBox[{"(*", "*)"}], "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"tuRuleFromTable", "::", "usage"}], "=", 
     "\"\<tuRuleFromTable[table_][var_] makes Rule[]s from a 2-D table where \
the first row defines column parameter labels and the first column defines \
variables referenced by var_.  The result is a set of Rule[]s for each column \
parameter of the var_ specified. e.g. \
table={{_,A,B},{var1,a1,b1},{var2,a2,b2}} \
tuRuleFromTable[table][var2]\[Rule]{A->a2,B->b2} *9Mar2016*\>\""}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"tuRuleFromTable", "[", "table_", "]"}], "[", "var_", "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"head", "=", 
          RowBox[{"table", "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], ",", 
         RowBox[{"tmp", "=", "table"}], ",", "pattern", ",", "row"}], "}"}], 
       ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"pattern", "=", 
         RowBox[{"Table", "[", 
          RowBox[{"_", ",", 
           RowBox[{"{", 
            RowBox[{"Length", "[", "head", "]"}], "}"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"pattern", "[", 
          RowBox[{"[", "1", "]"}], "]"}], "=", "var"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"tmp", "=", 
         RowBox[{"Drop", "[", 
          RowBox[{"tmp", ",", "1"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"row", "=", 
         RowBox[{
          RowBox[{"Cases", "[", 
           RowBox[{"tmp", ",", "pattern"}], "]"}], "//", "First"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"Drop", "[", 
         RowBox[{
          RowBox[{"Thread", "[", 
           RowBox[{"Rule", "[", 
            RowBox[{"head", ",", "row"}], "]"}], "]"}], ",", "1"}], "]"}]}]}],
       "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"TableRules", "[", "table_", "]"}], "[", "var_", "]"}], ":=", 
     RowBox[{
      RowBox[{"tuRuleFromTable", "[", "table", "]"}], "[", "var", "]"}]}], 
    ";", 
    RowBox[{"(*", "Compatibility", "*)"}], "\n", 
    RowBox[{"(*", "*)"}], "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"tuRuleOp", "::", "usage"}], "=", 
     "\"\<tuRuleOp[operator_][rules_] acts with operator_ on rules_List and \
outputs a Rule which is a operator_ combination of right-hand terms to a \
operator_ combination of left-hand terms. e.g. tuRuleOp[fn][{a->b,c->d}]\
\[LongRightArrow]{fn[a,c]\[Rule]fn[b,d]]} *12Mar2014*12Jan2018*\>\""}], ";"}],
    "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"tuRuleOp", "[", "operator_", "]"}], "[", "rules_List", "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"$", "=", "rules"}], ",", "$s", ",", "head"}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"head", "=", 
         RowBox[{"Head", "[", 
          RowBox[{"$", "[", 
           RowBox[{"[", "1", "]"}], "]"}], "]"}]}], ";", 
        RowBox[{"(*", 
         RowBox[{"default", " ", "Rule", " ", "for", " ", "output"}], "*)"}], 
        "\[IndentingNewLine]", 
        RowBox[{"$", "=", 
         RowBox[{"$", "/.", 
          RowBox[{
           RowBox[{"rr", ":", 
            RowBox[{"Rule", "|", "RuleDelayed"}]}], "\[Rule]", "List"}]}]}], 
        ";", "\[IndentingNewLine]", 
        RowBox[{"$", "=", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Map", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"#", "[", 
               RowBox[{"[", "1", "]"}], "]"}], "&"}], ",", "$"}], "]"}], ",", 
           
           RowBox[{"Map", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"#", "[", 
               RowBox[{"[", "2", "]"}], "]"}], "&"}], ",", "$"}], "]"}]}], 
          "}"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"$", "=", 
         RowBox[{"$", "/.", " ", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"a__", ",", "b__"}], "}"}], "\[RuleDelayed]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Apply", "[", 
              RowBox[{"operator", ",", "a"}], "]"}], ",", 
             RowBox[{"Apply", "[", 
              RowBox[{"operator", ",", "b"}], "]"}]}], "}"}]}]}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"$", "=", 
         RowBox[{"Apply", "[", 
          RowBox[{"head", ",", "$"}], "]"}]}]}]}], "\[IndentingNewLine]", 
      "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"OpRules", "[", 
      RowBox[{"operator_", ",", "rules_List"}], "]"}], ":=", 
     RowBox[{
      RowBox[{"tuRuleOp", "[", "operator", "]"}], "[", "rules", "]"}]}], ";", 
    
    RowBox[{"(*", "Compatibility", "*)"}], "\[IndentingNewLine]", 
    RowBox[{"(*", "*)"}], "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"tuRuleOpApply", "::", "usage"}], "=", 
     "\"\<tuRuleOpApply[operator_][rules_] applies operator_ over both \
arguements of Rule[] in rules_. 12Jan2108*\>\""}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"tuRuleOpApply", "[", "operator_", "]"}], "[", "rules_List", 
      "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{"rules", "/.", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"rr", ":", 
            RowBox[{"Rule", "|", "RuleDelayed"}]}], ")"}], "[", 
          RowBox[{"a_", ",", "b_"}], "]"}], "\[Rule]", 
         RowBox[{"rr", "[", 
          RowBox[{
           RowBox[{"operator", "[", "a", "]"}], ",", 
           RowBox[{"operator", "[", "b", "]"}]}], "]"}]}]}]}], 
      "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"tuRuleSubtract", "::", "usage"}], "=", 
     "\"\<tuRuleSubtract[rules_List] list of Rules and output a Rule which \
the first Rule minus the subsequent Rules for the right and left Rule terms. \
*21Jun2015*\>\""}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"tuRuleSubtract", "[", "rules_List", "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"tmp", ",", "head", ",", "first", ",", "rest"}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"head", "=", 
         RowBox[{"Head", "[", 
          RowBox[{"first", "=", 
           RowBox[{"First", "[", "rules", "]"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"rest", "=", 
         RowBox[{"Rest", "[", "rules", "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"first", "=", 
         RowBox[{"Apply", "[", 
          RowBox[{"List", ",", "first"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"rest", "=", 
         RowBox[{"-", 
          RowBox[{"Map", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Apply", "[", 
              RowBox[{"List", ",", "#"}], "]"}], "&"}], ",", "rest"}], 
           "]"}]}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"tmp", "=", 
         RowBox[{"Flatten", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", "first", "}"}], ",", "rest"}], "}"}], ",", "1"}], 
          "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"tmp", "=", 
         RowBox[{"MapThread", "[", 
          RowBox[{"Plus", ",", "tmp"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"Apply", "[", 
         RowBox[{"head", ",", "tmp"}], "]"}]}]}], "\[IndentingNewLine]", 
      "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"SubtractRules", "[", "rules_List", "]"}], ":=", 
     RowBox[{"tuRuleSubtract", "[", "rules", "]"}]}], ";", 
    RowBox[{"(*", "Compatibility", "*)"}], "\[IndentingNewLine]", 
    RowBox[{"(*", "*)"}], "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"tuRuleAdd", "::", "usage"}], "=", 
     "\"\<tuRuleAdd[rules_List] returns a sum of Left Hand Side \[Rule] sum \
of Right Hand Side of rules_List *13Jul2016*\>\""}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"tuRuleAdd", "[", "rules_List", "]"}], ":=", 
     RowBox[{
      RowBox[{"tuRuleOp", "[", "Plus", "]"}], "[", "rules", "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"AddRules", "[", "rules_List", "]"}], ":=", 
     RowBox[{"tuRuleAdd", "[", "rules", "]"}]}], ";", " ", 
    RowBox[{"(*", "Compatibility", "*)"}], "\[IndentingNewLine]", 
    RowBox[{"(*", "*)"}], "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"tuRuleTimes", "::", "usage"}], "=", 
     "\"\<tuRuleTimes[rules_List]  return a Rule that is a product of \
right-hand terms to a product of left-hand terms. *13Jul2016*\>\""}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"tuRuleTimes", "[", "rules_List", "]"}], ":=", 
     RowBox[{
      RowBox[{"tuRuleOp", "[", "Times", "]"}], "[", "rules", "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"TimesRules", "[", "rules_List", "]"}], ":=", 
    RowBox[{"tuRuleTimes", "[", "rules", "]"}]}], 
   RowBox[{"(*", "Compatibility", "*)"}], "\[IndentingNewLine]", 
   RowBox[{"(*", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"tuRuleDivide", "::", "usage"}], "=", 
     "\"\<tuRuleDivide[rules_List] returns ratio of first two Rules in \
rules_List. \>\""}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"tuRuleDivide", "[", "rules_List", "]"}], ":=", 
     RowBox[{
      RowBox[{"tuRuleOp", "[", 
       RowBox[{
        RowBox[{"#1", "/", "#2"}], "&"}], "]"}], "[", "rules", "]"}]}], ";"}],
    "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"DivideRules", "[", "rules_List", "]"}], ":=", 
     RowBox[{"tuRuleDivide", "[", "rules", " ", "]"}]}], ";", 
    RowBox[{"(*", "Compatibility", "*)"}], "\[IndentingNewLine]", 
    RowBox[{"(*", "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{"(*", 
     RowBox[{
     "Solves", " ", "vars_", " ", "for", " ", "a", " ", "set", " ", "of", " ",
       "rules_"}], " ", "*)"}], "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"SolveRules", "[", 
      RowBox[{"rules_", ",", "vars_"}], "]"}], ":=", 
     RowBox[{"Solve", "[", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"rules", "//.", 
         RowBox[{"Rule", "->", "Equal"}]}], ")"}], ",", "vars"}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"tuPatternRemove", "::", "usage"}], "=", 
     "\"\<tuPatternRemove[exp_] removes \
Pattern[a_,Blank[]|BlankSequence[]]:>a in all of exp_ *24Nov2013*)\>\""}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"tuPatternRemove", "[", "exp_", "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"tmp", "=", "exp"}], ",", "xPattern"}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"tmp", "=", 
         RowBox[{
          RowBox[{
           RowBox[{"tmp", "//.", 
            RowBox[{"Pattern", "\[Rule]", "xPattern"}]}], "//.", 
           RowBox[{"Blank", "\[Rule]", "xBlank"}]}], "//.", 
          RowBox[{"BlankSequence", "\[Rule]", "xBlankSequence"}]}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"tmp", "=", 
         RowBox[{"tmp", "//.", 
          RowBox[{
           RowBox[{"xPattern", "[", 
            RowBox[{"a_", ",", 
             RowBox[{
              RowBox[{"xBlank", "[", "]"}], "|", 
              RowBox[{"xBlankSequence", "[", "]"}]}]}], "]"}], "->", 
           "a"}]}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"tmp", "=", 
         RowBox[{"tmp", "/.", 
          RowBox[{"xPattern", "->", "Pattern"}]}]}]}]}], 
      "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"RemovePatterns", "[", "exp_", "]"}], ":=", 
     RowBox[{"tuPatternRemove", "[", "exp", "]"}]}], ";", 
    RowBox[{"(*", "Compatibility", "*)"}], "\[IndentingNewLine]", 
    "\[IndentingNewLine]", 
    RowBox[{"(*", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"RuleVarPattern", "[", "var_List", "]"}], "[", "rule_Rule", 
       "]"}], " ", "converts", " ", "var", " ", "in", " ", "Rule", " ", "to", 
      " ", 
      RowBox[{"Pattern", "[", 
       RowBox[{"var", ",", 
        RowBox[{"Blank", "[", "]"}]}], "]"}]}], "*)"}], "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"RuleVarPattern", "[", "var_List", "]"}], "[", 
      RowBox[{"rule_Rule", "|", "rule_RuleDelayed"}], "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"tmp", "=", 
         RowBox[{"rule", "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"tmp", "=", 
         RowBox[{"tmp", "/.", 
          RowBox[{"Map", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"#", "->", 
              RowBox[{"Pattern", "[", 
               RowBox[{"#", ",", 
                RowBox[{"Blank", "[", "]"}]}], "]"}]}], "&"}], ",", "var"}], 
           "]"}]}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"tmp", "=", 
         RowBox[{"tmp", "->", 
          RowBox[{"rule", "[", 
           RowBox[{"[", "2", "]"}], "]"}]}]}]}]}], "\[IndentingNewLine]", 
      "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"RulesVarPatterns", "[", "var_List", "]"}], "[", "exp_", "]"}], 
     " ", "converts", " ", "var_List", " ", "in", " ", "exp_", " ", 
     "containing", " ", "Rule", " ", "to", " ", 
     RowBox[{"Pattern", "[", 
      RowBox[{"var", ",", 
       RowBox[{"Blank", "[", "]"}]}], "]"}], " ", "DOES", " ", "NOT", " ", 
     "RECOGNIZE", " ", "ALTERNATIVE", " ", "exp", " ", "ARGUEMENTS", " ", "*",
      "7", "Dec2014"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"RulesVarPattern", "[", "var_List", "]"}], "[", 
      RowBox[{"exp_List", "|", "exp_Rule", "|", "exp_RuleDelayed"}], "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"rulepos", ",", 
         RowBox[{"tmp", "=", "exp"}]}], "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Head", "[", "exp", "]"}], "===", "List"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"rulepos", "=", 
            RowBox[{"ExtractPositionPattern", "[", 
             RowBox[{
              RowBox[{"{", "tmp", "}"}], ",", 
              RowBox[{"Rule", "[", 
               RowBox[{"a_", ",", "b_"}], "]"}]}], "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"rulepos", "=", 
            RowBox[{"Map", "[", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"#", "[", 
                 RowBox[{"[", "1", "]"}], "]"}], "->", 
                RowBox[{
                 RowBox[{"RuleVarPattern", "[", "var", "]"}], "[", 
                 RowBox[{"#", "[", 
                  RowBox[{"[", "2", "]"}], "]"}], "]"}]}], "&"}], ",", 
              "rulepos"}], "]"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"tmp", "=", 
            RowBox[{
             RowBox[{"ReplacePart", "[", 
              RowBox[{
               RowBox[{"{", "tmp", "}"}], ",", "rulepos"}], "]"}], "[", 
             RowBox[{"[", "1", "]"}], "]"}]}]}], "\[IndentingNewLine]", ",", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"tmp", "=", 
            RowBox[{"exp", "[", 
             RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"tmp", "=", 
            RowBox[{"tmp", "/.", 
             RowBox[{"Map", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"#", "->", 
                 RowBox[{"Pattern", "[", 
                  RowBox[{"#", ",", 
                   RowBox[{"Blank", "[", "]"}]}], "]"}]}], "&"}], ",", 
               "var"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"tmp", "=", 
            RowBox[{"tmp", "->", 
             RowBox[{"exp", "[", 
              RowBox[{"[", "2", "]"}], "]"}]}]}]}]}], "\[IndentingNewLine]", 
         "]"}], ";", "\[IndentingNewLine]", "tmp"}]}], "\[IndentingNewLine]", 
      "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"RulePatternCondition", "[", 
      RowBox[{
       RowBox[{"rule_Rule", "|", "rule_RuleDelayed"}], ",", "pvars_List", ",",
        "condition_Hold"}], "]"}], " ", "converts", " ", "Rule", " ", "into", 
     " ", "RuleDelayed", " ", "with", " ", "condition_Hold", " ", "*", "24", 
     "Nov2014"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"RulePatternCondition", "[", 
      RowBox[{
       RowBox[{"rule_Rule", "|", "rule_RuleDelayed"}], ",", "pvars_List", ",",
        "condition_Hold"}], "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"tmp", "=", "rule"}], "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"tmp", "=", 
         RowBox[{"tmp", "//", 
          RowBox[{"RuleX2PatternVar", "[", "pvars", "]"}]}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"tmp", "[", 
          RowBox[{"[", "2", "]"}], "]"}], "=", 
         RowBox[{
          RowBox[{"tmp", "[", 
           RowBox[{"[", "2", "]"}], "]"}], "/;", "condition"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"tmp", "/.", 
          RowBox[{"Rule", "\[Rule]", "RuleDelayed"}]}], "//", 
         "ReleaseHold"}]}]}], "\[IndentingNewLine]", "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"RuleAddCondtion", "[", "condition_", "]"}], "[", "rule_", 
      "]"}], " ", "adds", " ", "condition_", " ", "to", " ", "rule_.", "  ", 
     "*", "13", "Dec2013"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"RuleAddCondtion", "[", "cond_", "]"}], "[", "rule_", "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"tmp", "=", "rule"}], "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"tmp", "=", 
         RowBox[{"tmp", "/.", 
          RowBox[{
           RowBox[{"Rule", "[", 
            RowBox[{"a_", ",", "b_"}], "]"}], "->", 
           RowBox[{"xRule", "[", 
            RowBox[{"a", ",", 
             RowBox[{"xCondition", "[", 
              RowBox[{"b", ",", "cond"}], "]"}]}], "]"}]}]}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"tmp", "/.", 
           RowBox[{"xCondition", "->", "Condition"}]}], "/.", 
          RowBox[{"xRule", "->", "RuleDelayed"}]}], "//", "ReleaseHold"}]}]}],
       "]"}]}], ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"tuRuleSimplify", "::", "usage"}], "=", 
     "\"\<tuRuleSimplify[exp_] Simplify[]s Rules in exp_.  NOTE: Simplify[] \
sometimes produces 0\[Rule]something. *11Jan2015*8Arp2018*\>\""}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"tuRuleSimplify", "[", "exp_", "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"$", "=", "exp"}], "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"$", "=", 
         RowBox[{
          RowBox[{"$", "/.", 
           RowBox[{"Rule", "\[Rule]", "Equal"}]}], "//", "Simplify"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"$", "=", 
         RowBox[{"$", "/.", 
          RowBox[{"Equal", "\[Rule]", "Rule"}]}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"$", "=", 
         RowBox[{
          RowBox[{"$", "//", "tuRuleRHS0"}], "//", "Simplify"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"$", "=", 
         RowBox[{
          RowBox[{"$", "/.", " ", 
           RowBox[{"Rule", "\[Rule]", "xRule"}]}], "/.", 
          RowBox[{
           RowBox[{"xRule", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"a_", "?", "NumericQ"}], " ", "b_"}], ",", "0"}], "]"}],
            "\[Rule]", 
           RowBox[{"Rule", "[", 
            RowBox[{"b", ",", "0"}], "]"}]}]}]}], ";", "\[IndentingNewLine]", 
        
        RowBox[{"$", "=", 
         RowBox[{"$", "/.", 
          RowBox[{"xRule", "\[Rule]", "Rule"}]}]}]}]}], "\[IndentingNewLine]",
       "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"tuSimplifyRules", "[", "exp_", "]"}], ":=", 
    RowBox[{"tuSimplifyRules", "[", "exp", "]"}]}], 
   RowBox[{"(*", "Compatibility", "*)"}], "\[IndentingNewLine]", 
   RowBox[{"(*", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Clear", "[", "tuSolve", "]"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"tuSolve", "::", "usage"}], "=", 
     "\"\<tuSolve[exp_] Solve[]s exp_ (Rule|Equal) assuming all variables are \
non-zero. It returns (all solutions from Solve[]) \[Implies] (solutions when \
all variable are non-zero).  Intended to Solve[] exp_ where a term can be \
factored out,\n\ti.e., a (b-c)\[Rule]0  will produce b\[Rule]c. *26Mar2016*\>\
\""}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"tuSolve", "[", "exp_", "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"$s", ",", "$", ",", "$0", ",", "$var"}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{"get", " ", "all", " ", "variables"}], "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"$s", "=", 
         RowBox[{
          RowBox[{"exp", "/.", 
           RowBox[{
            RowBox[{"Times", "|", "Plus", "|", "Equal", "|", "Rule"}], 
            "\[Rule]", "List"}]}], "//", "Flatten"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"$s", "=", 
         RowBox[{
          RowBox[{
           RowBox[{"$s", "/.", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"1", "/", "v_"}], ")"}], "\[Rule]", "v"}]}], "//", 
           "DeleteDuplicates"}], "//", 
          RowBox[{
           RowBox[{"Select", "[", 
            RowBox[{"#", ",", 
             RowBox[{
              RowBox[{"!", 
               RowBox[{"NumericQ", "[", "#", "]"}]}], "&"}]}], "]"}], 
           "&"}]}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"$var", "=", "$s"}], ";", 
        RowBox[{"xPrint", "[", "$s", "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"$s", "=", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"#", "\[NotEqual]", "0"}], "&"}], "/@", "$s"}], "/.", 
          RowBox[{"List", "\[Rule]", "And"}]}]}], ";", 
        RowBox[{"xPrint", "[", "$s", "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"$", "=", 
         RowBox[{
          RowBox[{"exp", "/.", 
           RowBox[{"Rule", "\[Rule]", "Equal"}]}], "//", "Simplify"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"$0", "=", 
         RowBox[{"$", "=", 
          RowBox[{"Solve", "[", 
           RowBox[{"$", ",", "$var", ",", "Complexes"}], "]"}]}]}], ";", 
        RowBox[{"xPrint", "[", "$", "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"$", "=", 
         RowBox[{"$", "/.", 
          RowBox[{"Rule", "\[Rule]", "Equal"}]}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"$", "=", 
         RowBox[{"Refine", "[", 
          RowBox[{"$", ",", 
           RowBox[{"Assumptions", "\[Rule]", "$s"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"$", "=", 
         RowBox[{
          RowBox[{"Select", "[", 
           RowBox[{"$", ",", 
            RowBox[{
             RowBox[{"FreeQ", "[", 
              RowBox[{"#", ",", "False"}], "]"}], "&"}]}], "]"}], "//", 
          "Flatten"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"$0", "\[Implies]", "$"}]}]}], "\[IndentingNewLine]", "]"}]}],
     ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"tuRuleFirstLast", "::", "usage"}], "=", 
     "\"\<tuRuleFirstLast[exp_Rule] returns a Rule with only the First and \
Last elements of a nested Rule. e.g. tuRuleFirstLast[a\[Rule]b\[Rule]c] \
\[DoubleLongRightArrow] a\[Rule]c *6Sep2016*\>\""}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"tuRuleFirstLast", "[", "exp_Rule", "]"}], ":=", 
     RowBox[{
      RowBox[{
       RowBox[{"Flatten", "[", 
        RowBox[{"exp", "/.", 
         RowBox[{"Rule", "\[Rule]", "List"}]}], "]"}], "//", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"#", "[", 
           RowBox[{"[", "1", "]"}], "]"}], ",", 
          RowBox[{"#", "[", 
           RowBox[{"[", 
            RowBox[{"-", "1"}], "]"}], "]"}]}], "}"}], "&"}]}], "//", 
      RowBox[{
       RowBox[{"Apply", "[", 
        RowBox[{"Rule", ",", "#"}], "]"}], "&"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", "*)"}], 
   RowBox[{
    RowBox[{
     RowBox[{"tuRuleRHS0", "::", "usage"}], "=", 
     "\"\<tuRuleRHS0[rules_] rearranges simple Rule[] or Equal[]s so that the \
RHS is 0 as  Rule[,0]s. *12Aug2017*\>\""}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"tuRuleRHS0", "[", "rules_", "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"$r", "=", 
         RowBox[{"Flatten", "[", 
          RowBox[{"{", "rules", "}"}], "]"}]}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"Map", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"tuHasAnyQ", "[", 
              RowBox[{
               RowBox[{"Head", "[", "#", "]"}], ",", 
               RowBox[{"{", 
                RowBox[{"Rule", ",", "Equal"}], "}"}]}], "]"}], "&&", 
             RowBox[{"tuHasNoneQ", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"#", "[", 
                  RowBox[{"[", "1", "]"}], "]"}], ",", 
                 RowBox[{"#", "[", 
                  RowBox[{"[", "2", "]"}], "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"Rule", ",", "Equal"}], "}"}]}], "]"}]}], ",", 
            RowBox[{
             RowBox[{
              RowBox[{"First", "[", "#", "]"}], "-", 
              RowBox[{"Last", "[", "#", "]"}]}], "\[Rule]", "0"}], ",", "#"}],
            "]"}], "&"}], ",", "$r"}], "]"}]}], "\[IndentingNewLine]", 
      "]"}]}], ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "routines", " ", "to", " ", "accumulate", " ", "and", " ", "select", " ", 
     "Rules", " ", "used", " ", 
     RowBox[{"in", " ", ".", "nb"}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"accum", "[", "label_", "]"}], "[", "item_", "]"}], ":=", 
     RowBox[{"Block", "[", 
      RowBox[{
       RowBox[{"{", "}"}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{"$def", "[", "label", "]"}], "=", 
         RowBox[{
          RowBox[{"tuAppendUniq", "[", "item", "]"}], "[", 
          RowBox[{"$def", "[", "label", "]"}], "]"}]}], ";", "\"\<\>\""}]}], 
      "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"select", "::", "usage"}], "=", 
     "\"\<select[label_][heads_,with_:{},without_:Null] selects Rule[] from \
Rule[]s accumulated $def[] (user defined, e.g., $def['Label']). The Rule[] \
selection is modified by with_ and without_ specifications.  If without_ \
\[Rule] all then all Rule[]s are output. *6Jul2017*\>\""}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"select", "[", "label_", "]"}], "[", 
      RowBox[{"heads_", ",", 
       RowBox[{"with_:", 
        RowBox[{"{", "}"}]}], ",", 
       RowBox[{"without_:", "Null"}]}], "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", "$", "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"$", "=", 
         RowBox[{
          RowBox[{"tuRuleSelect", "[", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"Map", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"#", ",", 
                  RowBox[{"#", "[", "_", "]"}], ",", 
                  RowBox[{
                   RowBox[{"#", "[", "_", "]"}], "[", "_", "]"}]}], "}"}], 
                "&"}], ",", 
               RowBox[{"Flatten", "[", 
                RowBox[{"{", "heads", "}"}], "]"}]}], "]"}], "}"}], "]"}], 
           "]"}], "[", 
          RowBox[{"$def", "[", "label", "]"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"$", "=", 
         RowBox[{"$", "//", 
          RowBox[{
           RowBox[{"Select", "[", 
            RowBox[{"#", ",", 
             RowBox[{
              RowBox[{"tuHasAllQ", "[", 
               RowBox[{"#", ",", 
                RowBox[{"Flatten", "[", 
                 RowBox[{"{", "with", "}"}], "]"}]}], "]"}], "&"}]}], "]"}], 
           "&"}]}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"$", "=", 
         RowBox[{"$", "//", 
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"without", "===", "Null"}], ",", 
             RowBox[{"Last", "[", "#", "]"}], ",", 
             RowBox[{"Select", "[", 
              RowBox[{"#", ",", 
               RowBox[{
                RowBox[{"tuHasNoneQ", "[", 
                 RowBox[{"#", ",", 
                  RowBox[{"Flatten", "[", 
                   RowBox[{"{", "without", "}"}], "]"}]}], "]"}], "&"}]}], 
              "]"}]}], "]"}], "&"}]}]}]}]}], "\[IndentingNewLine]", "]"}]}], 
    ";"}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.527879933930221*^9, 3.527880068966152*^9}, 
   3.555432637545333*^9, 3.5554327862608147`*^9, {3.555778199064436*^9, 
   3.555778200178644*^9}, {3.5557782330147963`*^9, 3.5557782677040253`*^9}, {
   3.56440458999321*^9, 3.564404592220203*^9}, 3.5644052361899147`*^9, {
   3.564405290952738*^9, 3.564405301267617*^9}, {3.564405368812229*^9, 
   3.5644054364898977`*^9}, {3.5644056110684757`*^9, 3.564405738816188*^9}, {
   3.5644063471465263`*^9, 3.564406375009626*^9}, 3.564413775437436*^9, {
   3.564841215338243*^9, 3.564841267301989*^9}, {3.5648412981148167`*^9, 
   3.564841302408098*^9}, {3.564841438400856*^9, 3.564841454162277*^9}, {
   3.5648426536876574`*^9, 3.56484266204705*^9}, 3.564844474848049*^9, {
   3.566825760129705*^9, 3.566825774453374*^9}, {3.5701054282640123`*^9, 
   3.570105511224777*^9}, {3.570202732481195*^9, 3.570202743935644*^9}, {
   3.5702029982641487`*^9, 3.5702030026177*^9}, {3.570204924170664*^9, 
   3.5702049338485527`*^9}, {3.5708421697737226`*^9, 3.570842185370248*^9}, {
   3.5708422324014683`*^9, 3.5708422443157473`*^9}, {3.570842287793892*^9, 
   3.570842350294593*^9}, {3.5708423959710903`*^9, 3.5708424294855747`*^9}, {
   3.570842479854141*^9, 3.570842487957382*^9}, {3.570842537170766*^9, 
   3.570842558091651*^9}, {3.5708425881073627`*^9, 3.5708426875465117`*^9}, {
   3.570842743911915*^9, 3.570842760098878*^9}, {3.5708428150620337`*^9, 
   3.57084283337428*^9}, {3.571232025341181*^9, 3.5712320602579823`*^9}, {
   3.571232217102319*^9, 3.571232287814302*^9}, {3.571423438946911*^9, 
   3.571423447071764*^9}, {3.571423784852826*^9, 3.57142390202459*^9}, {
   3.580211541277926*^9, 3.580211548090016*^9}, {3.5802116650011272`*^9, 
   3.580211670178278*^9}, {3.580211715859536*^9, 3.580211717215892*^9}, {
   3.5802117834097967`*^9, 3.580211806362259*^9}, {3.58023014966059*^9, 
   3.580230242722711*^9}, {3.580230279767311*^9, 3.5802302906262407`*^9}, 
   3.580489258740979*^9, {3.5831145695360317`*^9, 3.583114813263413*^9}, {
   3.583152072355712*^9, 3.5831520884873*^9}, {3.58315212236434*^9, 
   3.583152126915297*^9}, 3.583152424640051*^9, 3.583854612191463*^9, {
   3.592057160441949*^9, 3.592057166671455*^9}, {3.592057210532275*^9, 
   3.592057218699329*^9}, {3.594307608847767*^9, 3.594307609455961*^9}, {
   3.594307655760858*^9, 3.594307788273045*^9}, {3.59430796498489*^9, 
   3.594308031038992*^9}, {3.5959517838399563`*^9, 3.5959519029729156`*^9}, {
   3.60338077944809*^9, 3.603380786755522*^9}, 3.603380826859798*^9, {
   3.6037625115643177`*^9, 3.603762570379992*^9}, 3.608645703121544*^9, 
   3.609765214736075*^9, 3.609765257815874*^9, {3.609813150119255*^9, 
   3.6098133081418257`*^9}, {3.6098474856986427`*^9, 3.609847489350973*^9}, {
   3.609847526433362*^9, 3.609847527584755*^9}, {3.609847561554915*^9, 
   3.609847569404668*^9}, 3.609850113620091*^9, {3.610018212855097*^9, 
   3.610018300463969*^9}, {3.6103272205124693`*^9, 3.6103272227669563`*^9}, {
   3.610801959985691*^9, 3.610801960565111*^9}, {3.610802585607461*^9, 
   3.6108026184172707`*^9}, {3.6108068721751738`*^9, 3.610806892504768*^9}, {
   3.611152628398123*^9, 3.6111526645812693`*^9}, {3.611152948282855*^9, 
   3.61115300403491*^9}, {3.6111530660029087`*^9, 3.611153082828594*^9}, {
   3.6211710489239597`*^9, 3.621171049990947*^9}, {3.621736323339964*^9, 
   3.62173632358702*^9}, {3.626798854724638*^9, 3.626798878690297*^9}, {
   3.626801230545158*^9, 3.626801257934883*^9}, {3.6268016579635363`*^9, 
   3.626801702722218*^9}, {3.628352178305107*^9, 3.628352298333612*^9}, {
   3.628352416764776*^9, 3.628352482756061*^9}, {3.628397295958426*^9, 
   3.628397312011092*^9}, {3.628438066975956*^9, 3.628438083116839*^9}, {
   3.6284381219087963`*^9, 3.628438160442315*^9}, {3.628438196099902*^9, 
   3.628438297793833*^9}, {3.628439558472233*^9, 3.6284395669371843`*^9}, {
   3.62843960627396*^9, 3.628439676639399*^9}, {3.628452709939974*^9, 
   3.628452824541327*^9}, 3.628452983708537*^9, {3.629903207605719*^9, 
   3.629903218482456*^9}, {3.629991832240962*^9, 3.6299918396623583`*^9}, {
   3.629992111644442*^9, 3.62999211179793*^9}, {3.630168266077641*^9, 
   3.63016848161866*^9}, {3.631452790648995*^9, 3.631452792810313*^9}, {
   3.632228667552055*^9, 3.6322286888058453`*^9}, 3.632229547203679*^9, 
   3.632230013218554*^9, {3.6322384697535143`*^9, 3.632238624123191*^9}, {
   3.640973353701745*^9, 3.6409734196213818`*^9}, 3.641044981508288*^9, {
   3.641049558337405*^9, 3.641049573279399*^9}, 3.641051017992815*^9, 
   3.6410531013259497`*^9, 3.641087847667879*^9, {3.643894497304768*^9, 
   3.643894544125115*^9}, {3.643894591174335*^9, 3.643894594116109*^9}, {
   3.643894696810533*^9, 3.643894698669454*^9}, {3.6438951966837063`*^9, 
   3.643895323073731*^9}, {3.644326017883458*^9, 3.644326097383793*^9}, {
   3.644326190381095*^9, 3.644326238821536*^9}, {3.644326732061511*^9, 
   3.644326750809289*^9}, 3.6449351877283993`*^9, {3.6454069814807177`*^9, 
   3.645406981989203*^9}, {3.645407075680522*^9, 3.64540708226475*^9}, 
   3.6454531690675*^9, {3.6454676478869467`*^9, 3.645467653113846*^9}, {
   3.645529883818831*^9, 3.64552989794005*^9}, {3.647948278793269*^9, 
   3.647948337234552*^9}, {3.64794865785443*^9, 3.6479488409026012`*^9}, {
   3.6479488712021627`*^9, 3.6479489811118603`*^9}, {3.647949078496838*^9, 
   3.647949079939344*^9}, {3.647949184418244*^9, 3.6479491866204147`*^9}, {
   3.64794923210362*^9, 3.647949237272542*^9}, {3.6479493108245783`*^9, 
   3.647949314593438*^9}, {3.647949439274605*^9, 3.647949456674122*^9}, {
   3.647950324649419*^9, 3.647950357402953*^9}, {3.647950403748186*^9, 
   3.647950405664795*^9}, {3.647950437497005*^9, 3.647950440311348*^9}, {
   3.647965889334614*^9, 3.647965894794099*^9}, {3.650457249996821*^9, 
   3.650457274702984*^9}, {3.6504573189726543`*^9, 3.650457391945971*^9}, 
   3.650631399375846*^9, {3.6506314419870977`*^9, 3.650631568062934*^9}, {
   3.650631612899755*^9, 3.6506316150426893`*^9}, {3.650633378269815*^9, 
   3.65063344350736*^9}, {3.6512452574297333`*^9, 3.651245271607172*^9}, {
   3.651245616428947*^9, 3.6512456538555593`*^9}, {3.6521191699540358`*^9, 
   3.6521191884067802`*^9}, {3.654952600818811*^9, 3.65495264312214*^9}, {
   3.6549527281053057`*^9, 3.654952816281432*^9}, {3.654952859604619*^9, 
   3.654952937402054*^9}, {3.655041845031551*^9, 3.655041861760152*^9}, {
   3.655041900376232*^9, 3.655041901440926*^9}, {3.65504205215097*^9, 
   3.65504209921743*^9}, {3.655042149521209*^9, 3.6550422009057302`*^9}, {
   3.655042237957081*^9, 3.655042267352784*^9}, {3.655042357827038*^9, 
   3.655042378379797*^9}, {3.656078097665401*^9, 3.656078120379258*^9}, {
   3.656078184447843*^9, 3.656078206689126*^9}, {3.657842773950674*^9, 
   3.657842776845438*^9}, 3.6578438862979527`*^9, 3.6603253803409843`*^9, {
   3.662734302234577*^9, 3.662734333522685*^9}, {3.6627343859993353`*^9, 
   3.6627345369030724`*^9}, 3.6627366935985823`*^9, {3.662772235730317*^9, 
   3.662772252507856*^9}, {3.6627723480443583`*^9, 3.662772356125592*^9}, 
   3.662822089956305*^9, 3.66282425221843*^9, {3.662824294792284*^9, 
   3.662824301920125*^9}, {3.6628245659689407`*^9, 3.66282456668716*^9}, {
   3.662824652628875*^9, 3.662824700029813*^9}, {3.662824740597875*^9, 
   3.662824890075129*^9}, 3.662825321056199*^9, {3.6628253558755083`*^9, 
   3.662825421048181*^9}, {3.6665329792084913`*^9, 3.666533108581521*^9}, {
   3.6665331436485043`*^9, 3.666533217046363*^9}, {3.666533250206274*^9, 
   3.666533347059163*^9}, {3.666533384685753*^9, 3.666533388813583*^9}, {
   3.666533511647533*^9, 3.666533528138062*^9}, {3.666533706293118*^9, 
   3.666533755309099*^9}, {3.666533793411684*^9, 3.66653385090107*^9}, {
   3.666534167568922*^9, 3.6665342182964783`*^9}, {3.666534344106612*^9, 
   3.666534354411305*^9}, {3.66653440936766*^9, 3.666534411676114*^9}, {
   3.666534907024498*^9, 3.666534916994069*^9}, {3.666535187919907*^9, 
   3.666535194421886*^9}, {3.666535229441461*^9, 3.666535297622674*^9}, {
   3.66801142947217*^9, 3.668011458334577*^9}, {3.668011501033121*^9, 
   3.668011503211233*^9}, {3.668012114716264*^9, 3.668012144693454*^9}, {
   3.668012233690885*^9, 3.668012249534584*^9}, {3.668012289760825*^9, 
   3.668012337807939*^9}, {3.668135871421241*^9, 3.668135871578349*^9}, {
   3.6681360012889643`*^9, 3.668136019426784*^9}, {3.668167596962204*^9, 
   3.668167606016529*^9}, {3.6681676569444237`*^9, 3.668167661323598*^9}, 
   3.66817423179825*^9, {3.669127789520835*^9, 3.66912783055265*^9}, 
   3.671641503375106*^9, {3.6774062734055367`*^9, 3.677406322363833*^9}, 
   3.6774064835313463`*^9, {3.677406730404295*^9, 3.677406797367085*^9}, {
   3.677406925857341*^9, 3.677406931458631*^9}, {3.6774070007314053`*^9, 
   3.677407001631896*^9}, {3.6774071367178497`*^9, 3.6774071818440647`*^9}, {
   3.6774072451242733`*^9, 3.677407355484356*^9}, {3.6774073969787703`*^9, 
   3.677407482121965*^9}, {3.677407643075642*^9, 3.67740773474782*^9}, {
   3.682170665099456*^9, 3.682170671342369*^9}, 3.682360718307714*^9, {
   3.683900815265562*^9, 3.68390084339706*^9}, {3.683902640372531*^9, 
   3.683902649797694*^9}, {3.683902685414661*^9, 3.683902694913681*^9}, 
   3.683903940357251*^9, 3.6839048932310257`*^9, {3.68450159608002*^9, 
   3.684501621388035*^9}, {3.6846718149911127`*^9, 3.684671815130927*^9}, {
   3.691762111881383*^9, 3.691762129403387*^9}, {3.692812408806408*^9, 
   3.6928124118150883`*^9}, {3.6931932721714363`*^9, 3.693193272583563*^9}, {
   3.6967737378774147`*^9, 3.6967737411107492`*^9}, {3.6975518643713007`*^9, 
   3.697551866514983*^9}, {3.6981531115015707`*^9, 3.698153121427243*^9}, {
   3.69815362323059*^9, 3.6981536503441763`*^9}, 3.699366222294964*^9, {
   3.699877940985724*^9, 3.69987803851292*^9}, {3.708351353678481*^9, 
   3.708351795679491*^9}, {3.708432824365904*^9, 3.708432877785138*^9}, {
   3.709819537754414*^9, 3.7098195849554234`*^9}, {3.709821336062627*^9, 
   3.709821377934039*^9}, 3.7099054751367817`*^9, 3.709905593017624*^9, {
   3.7100770456146383`*^9, 3.710077047626874*^9}, {3.7100771059376593`*^9, 
   3.710077106115806*^9}, {3.710772233516005*^9, 3.710772255129897*^9}, {
   3.7108543401286697`*^9, 3.710854378201974*^9}, {3.7108547994829073`*^9, 
   3.710854824192362*^9}, {3.711549444290695*^9, 3.711549558898129*^9}, 
   3.711624896661433*^9, {3.7118021568314734`*^9, 3.711802249389037*^9}, {
   3.713179061998814*^9, 3.7131790678133507`*^9}, {3.713888808470642*^9, 
   3.713888830422329*^9}, {3.713888870552865*^9, 3.713888897027069*^9}, 
   3.713888928857522*^9, {3.718386493086411*^9, 3.718386498016387*^9}, {
   3.719756578797173*^9, 3.719756584687427*^9}, {3.719844671284603*^9, 
   3.719844675210644*^9}, 3.7201894430661*^9, {3.720630133645287*^9, 
   3.7206301433766127`*^9}, {3.720697058802093*^9, 3.7206970765346327`*^9}, {
   3.720697199683778*^9, 3.720697229414106*^9}, {3.7209658342122383`*^9, 
   3.7209658385928097`*^9}, {3.720967056248402*^9, 3.72096708004862*^9}, {
   3.7213193599749603`*^9, 3.721319368045145*^9}, {3.721319707603305*^9, 
   3.721319728123767*^9}, {3.7213197625513678`*^9, 3.7213197634163227`*^9}, {
   3.721394002971534*^9, 3.721394006050352*^9}, 3.7223479506778803`*^9, 
   3.722348286318802*^9, {3.7223483191302977`*^9, 3.722348349643343*^9}, 
   3.723300151468865*^9, {3.7235505090034723`*^9, 3.723550605515712*^9}, {
   3.7235506400438957`*^9, 3.723550654504651*^9}, {3.724769257494298*^9, 
   3.724769494145516*^9}, 3.724769662882056*^9, {3.724864160259214*^9, 
   3.724864165837248*^9}, {3.724865771540275*^9, 3.724865772056747*^9}, {
   3.724865857455168*^9, 3.7248659069018908`*^9}, {3.724866252012892*^9, 
   3.724866415032748*^9}, 3.724868888814027*^9, {3.724868948264258*^9, 
   3.72486897103459*^9}, 3.72513642685382*^9, {3.726490984936294*^9, 
   3.7264909955816793`*^9}, {3.726493369017087*^9, 3.726493382317452*^9}, {
   3.726493459367709*^9, 3.726493532485889*^9}, {3.726493565084406*^9, 
   3.726493640191353*^9}, {3.726495537644672*^9, 3.726495542216313*^9}, {
   3.72649566222009*^9, 3.7264958702124166`*^9}, {3.7264991437700567`*^9, 
   3.72649914680022*^9}, {3.726499326047532*^9, 3.726499363118703*^9}, {
   3.7264996482018003`*^9, 3.726499707049465*^9}, {3.726499761443101*^9, 
   3.7264997641853113`*^9}, {3.726499800243902*^9, 3.7264998189434147`*^9}, {
   3.726500507615417*^9, 3.726500536010991*^9}, {3.726500622929387*^9, 
   3.72650064452632*^9}, {3.726500702056551*^9, 3.726500737109562*^9}, {
   3.726500801144824*^9, 3.726500815225214*^9}, {3.7265012104948874`*^9, 
   3.726501269754931*^9}, {3.726589482029026*^9, 3.726589482977779*^9}, {
   3.726589563643455*^9, 3.726589595070231*^9}, {3.726589630018981*^9, 
   3.726589631879189*^9}, 3.7265901962698183`*^9, {3.72805597023706*^9, 
   3.728056049147318*^9}, {3.728056084131095*^9, 3.728056251393641*^9}, 
   3.728057209001463*^9, 3.728057398455817*^9, {3.7280580270132723`*^9, 
   3.728058029533922*^9}, 3.728311556826116*^9, {3.728487445605769*^9, 
   3.7284874506722717`*^9}, {3.728488277403063*^9, 3.7284882815536957`*^9}, {
   3.7300288992857533`*^9, 3.73002893456629*^9}, {3.73002904483818*^9, 
   3.730029050177802*^9}, {3.730032137125717*^9, 3.7300322354262857`*^9}, {
   3.7319589999249563`*^9, 3.731959017229824*^9}, {3.73213203269732*^9, 
   3.7321320701047773`*^9}, {3.732132438043747*^9, 3.732132464228385*^9}, {
   3.732132556618273*^9, 3.732132572544497*^9}, {3.732132628510428*^9, 
   3.732132637437351*^9}},ExpressionUUID->"9a48861d-1083-4676-92dc-\
a74078babfb0"],

Cell["Miscellaneous routines", "Text",
 CellChangeTimes->{{3.5802118634092283`*^9, 3.5802118743990707`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"moveOut", "[", "term_", "]"}], " ", "and", " ", 
    RowBox[{"moveIn", "[", "term_", "]"}], " ", "are", " ", "examples", " ", 
    "of", " ", "moving", " ", "term_", " ", "outside", " ", "and", " ", 
    "inside", " ", 
    RowBox[{"op", "[", 
     RowBox[{
      RowBox[{"_", " ", "term_"}], ",", "_"}], "]"}], " ", 
    RowBox[{"DOESN", "'"}], "T", " ", "match", " ", 
    RowBox[{
     RowBox[{"NumberQ", "[", "_", "]"}], "."}], "  ", "*", "14", "Mar2014"}], 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"moveOut", "[", "term_", "]"}], ":=", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"op", ":", 
         RowBox[{"xProduct", "|", "xSum"}]}], ")"}], "[", 
       RowBox[{
        RowBox[{"a_", "  ", "b_"}], ",", "i_"}], "]"}], ":>", 
      RowBox[{
       RowBox[{"a", " ", 
        RowBox[{"op", "[", 
         RowBox[{"b", ",", "i"}], "]"}]}], "/;", 
       RowBox[{"ListMemberQ", "[", 
        RowBox[{"a", ",", 
         RowBox[{"Flatten", "[", 
          RowBox[{"{", 
           RowBox[{"term", ",", 
            RowBox[{
             RowBox[{
              RowBox[{"1", "/", "#"}], "&"}], "/@", 
             RowBox[{"{", "term", "}"}]}]}], "}"}], "]"}]}], "]"}]}]}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"moveIn", "[", "term_", "]"}], ":=", 
     RowBox[{
      RowBox[{"a_", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"op", ":", 
          RowBox[{"xProduct", "|", "xSum"}]}], ")"}], "[", 
        RowBox[{"b_", ",", "i_"}], "]"}]}], ":>", 
      RowBox[{
       RowBox[{"op", "[", 
        RowBox[{
         RowBox[{"a", " ", "b"}], ",", "i"}], "]"}], "/;", 
       RowBox[{"ListMemberQ", "[", 
        RowBox[{"a", ",", 
         RowBox[{"Flatten", "[", 
          RowBox[{"{", 
           RowBox[{"term", ",", 
            RowBox[{
             RowBox[{
              RowBox[{"1", "/", "#"}], "&"}], "/@", 
             RowBox[{"{", "term", "}"}]}]}], "}"}], "]"}]}], "]"}]}]}]}], 
    ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"independentOf", "[", "pattern_List", "]"}], "[", "exp_", "]"}],
      " ", "Removes", " ", "elements", " ", "dependent", " ", "of", " ", 
     "pattern_List", " ", "in", " ", "the", " ", "FreeQ", " ", 
     RowBox[{"sense", "."}], "*", "3", "Mar2013"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"independentOf", "::", "usage"}], "=", "\[IndentingNewLine]", 
     "\"\<independentOf[pattern_List][exp_] removes elements dependent on \
pattern_List in the FreeQ sense. *3Mar2013*\>\""}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"independentOf", "[", "pattern_List", "]"}], "[", "exp_", "]"}],
      ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"head", ",", "tmp", ",", "TF"}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"head", "=", 
         RowBox[{"Head", "[", "exp", "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"head", " ", "=!=", " ", "Symbol"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"tmp", "=", 
            RowBox[{"Apply", "[", 
             RowBox[{"List", ",", "exp"}], "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"TF", "=", 
            RowBox[{"Map", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"ListFreeQ", "[", 
                RowBox[{"#", ",", "pattern"}], "]"}], "&"}], ",", "tmp"}], 
             "]"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"TF", "=", 
            RowBox[{"Map", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{"!", 
                  RowBox[{"TF", "[", 
                   RowBox[{"[", "#", "]"}], "]"}]}], ",", 
                 RowBox[{"{", "#", "}"}]}], "]"}], "&"}], ",", 
              RowBox[{"Range", "[", 
               RowBox[{"Length", "[", "TF", "]"}], "]"}]}], "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"TF", "=", 
            RowBox[{"DeleteCases", "[", 
             RowBox[{"TF", ",", "Null"}], "]"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"TF", "=", 
            RowBox[{"Delete", "[", 
             RowBox[{"tmp", ",", "TF"}], "]"}]}], ";", "\[IndentingNewLine]", 
           
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Length", "[", "TF", "]"}], ">", "0"}], ",", 
             RowBox[{"Apply", "[", 
              RowBox[{"head", ",", "TF"}], "]"}], ",", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"head", " ", "===", "Plus"}], ",", "0", ",", "1"}], 
              "]"}]}], "]"}]}], ",", "\[IndentingNewLine]", 
          RowBox[{"(*", "else", "*)"}], "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"ListFreeQ", "[", 
             RowBox[{"exp", ",", "pattern"}], "]"}], ",", "exp", ",", "1"}], 
           "]"}]}], "\[IndentingNewLine]", "]"}]}]}], "\[IndentingNewLine]", 
      "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"dependentOn", "[", "pattern_List", "]"}], "[", "exp_", "]"}], 
     " ", "Removes", " ", "Level", " ", "0", " ", "terms", " ", "that", " ", 
     "are", " ", "independent", " ", 
     RowBox[{"(", 
      RowBox[{"in", " ", "the", " ", "FreeQ", " ", "sense"}], ")"}], " ", 
     "of", " ", "elements", " ", "in", " ", 
     RowBox[{"pattern_List", "."}], " ", "*", "3", "Mar2013"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"dependentOn", "::", "usage"}], "=", "\[IndentingNewLine]", 
     "\"\<dependentOn[pattern_List][exp_] removes elements independent of \
pattern_List in the FreeQ sense. *3Mar2013*\>\""}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"dependentOn", "[", "pattern_List", "]"}], "[", "exp_", "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"head", ",", "tmp", ",", "TF"}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"head", "=", 
         RowBox[{"Head", "[", "exp", "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"head", " ", "=!=", " ", "Symbol"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"tmp", "=", 
            RowBox[{"Apply", "[", 
             RowBox[{"List", ",", "exp"}], "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"TF", "=", 
            RowBox[{"Map", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"ListFreeQ", "[", 
                RowBox[{"#", ",", "pattern"}], "]"}], "&"}], ",", "tmp"}], 
             "]"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"TF", "=", 
            RowBox[{"Map", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{"TF", "[", 
                  RowBox[{"[", "#", "]"}], "]"}], ",", 
                 RowBox[{"{", "#", "}"}]}], "]"}], "&"}], ",", 
              RowBox[{"Range", "[", 
               RowBox[{"Length", "[", "TF", "]"}], "]"}]}], "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"TF", "=", 
            RowBox[{"DeleteCases", "[", 
             RowBox[{"TF", ",", "Null"}], "]"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"TF", "=", 
            RowBox[{"Delete", "[", 
             RowBox[{"tmp", ",", "TF"}], "]"}]}], ";", "\[IndentingNewLine]", 
           
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Length", "[", "TF", "]"}], ">", "0"}], ",", 
             RowBox[{"Apply", "[", 
              RowBox[{"head", ",", "TF"}], "]"}], ",", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"head", " ", "===", "Plus"}], ",", "0", ",", "1"}], 
              "]"}]}], "]"}]}], ",", "\[IndentingNewLine]", 
          RowBox[{"(*", "else", "*)"}], "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"ListFreeQ", "[", 
             RowBox[{"exp", ",", "pattern"}], "]"}], ",", "1", ",", "exp"}], 
           "]"}]}], "\[IndentingNewLine]", "]"}]}]}], "\[IndentingNewLine]", 
      "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"tuSumSimplify", "::", "usage"}], "=", 
     "\"\<tuSumSimplify[independent_List][exp_] converts Sum[]\[Rule]xSum[], \
move terms within xSum[] of exp_. Moves patterns in independent_List to \
outside xSum[], and return a xSum[] expressions.  \
*20Oct2013**15Oct2017*\>\""}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"tuSumSimplify", "[", 
       RowBox[{"independent_List:", 
        RowBox[{"{", "}"}]}], "]"}], "[", "exp_", "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"tmp", "=", "exp"}], ",", "tmp1"}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"tmp", "=", 
         RowBox[{"tmp", "/.", 
          RowBox[{"Sum", "\[Rule]", "xSum"}]}]}], ";", "\[IndentingNewLine]", 
        
        RowBox[{"While", "[", 
         RowBox[{
          RowBox[{"tmp", " ", "=!=", "tmp1"}], ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"tmp1", "=", "tmp"}], ";", "\[IndentingNewLine]", 
           RowBox[{"tmp", "=", 
            RowBox[{"tmp", "//.", 
             RowBox[{"tuOpDistribute", "[", "xSum", "]"}]}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"tmp", "=", 
            RowBox[{"tmp", "//", 
             RowBox[{"tuOpSimplifyFirst", "[", 
              RowBox[{"xSum", ",", "independent"}], "]"}]}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"tmp", "=", 
            RowBox[{"tmp", "//.", 
             RowBox[{
              RowBox[{"xSum", "[", 
               RowBox[{"a_", " ", ",", "b__"}], "]"}], "\[RuleDelayed]", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"a", "  ", 
                 RowBox[{"xSum", "[", 
                  RowBox[{"1", ",", "b"}], "]"}]}], "/;", 
                RowBox[{"NumericQ", "[", "a", "]"}]}], ")"}]}]}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"tmp", "=", 
            RowBox[{"tmp", "/.", 
             RowBox[{
              RowBox[{"xSum", "[", 
               RowBox[{"0", ",", "b__"}], "]"}], "->", "0"}]}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"tmp", "=", 
            RowBox[{"tmp", "/.", 
             RowBox[{
              RowBox[{"xSum", "[", 
               RowBox[{"a_", ",", "b__"}], "]"}], "\[RuleDelayed]", 
              RowBox[{
               RowBox[{
                RowBox[{"dependentOn", "[", "independent", "]"}], "[", "a", 
                "]"}], 
               RowBox[{"xSum", "[", " ", 
                RowBox[{
                 RowBox[{
                  RowBox[{"independentOf", "[", "independent", "]"}], "[", 
                  "a", "]"}], ",", "b"}], "]"}]}]}]}]}], ";"}]}], 
         "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", "tmp"}]}], 
      "\[IndentingNewLine]", "]"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"simpleSum", "[", "independent_List", "]"}], ":=", 
     RowBox[{"tuSumSimplify", "[", "independent", "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"tuSum2Parts", "::", "usage"}], "=", 
     "\"\<tuSum2Parts[limits_List][exp_] replaces Sum[]s in exp_ with a sum \
of Sum[]s where each limit is replaced each one of limits_List. Return xSum[] \
expressions. *6Dec2017*\>\""}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"tuSum2Parts", "[", "limits_List", "]"}], "[", "exp_", "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"$", "=", "exp"}], ",", "$parts", ",", "a"}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"$parts", "=", 
         RowBox[{
          RowBox[{
           RowBox[{"xSum", "[", 
            RowBox[{"a", ",", "#"}], "]"}], "&"}], "/@", "limits"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"$parts", "=", 
         RowBox[{
          RowBox[{
           RowBox[{"xSum", "[", 
            RowBox[{"a", ",", "_"}], "]"}], "->", 
           RowBox[{"Apply", "[", 
            RowBox[{"Plus", ",", "$parts"}], "]"}]}], "//", 
          RowBox[{"tuAddPatternVariable", "[", "a", "]"}]}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"$", "=", 
         RowBox[{
          RowBox[{"$", "/.", 
           RowBox[{"Sum", "\[Rule]", "xSum"}]}], "/.", "$parts"}]}]}]}], 
      "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", "*)"}], "\[IndentingNewLine]", 
   RowBox[{"Clear", "[", "tuSumKroneckerDelta", "]"}], "\[IndentingNewLine]", 
   
   RowBox[{
    RowBox[{
     RowBox[{"tuSumKroneckerDelta", "::", "usage"}], "=", 
     "\"\<tuSumKroneckerDelta[refine_:{},sym_:\[Delta]][exp_] applies (1) \
tuSumSimplify[] to exp_, (2) replaces Tensor[sym_,_,_] \[Rule] \
KroneckerDelta[_,_], (3) replaces xSum\[Rule]Sum so Mathematica can do the \
work, (4) applies Refine[_,refine_] *13Oct2017*\>\""}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"tuSumKroneckerDelta", "[", 
       RowBox[{
        RowBox[{"refine_:", 
         RowBox[{"{", "}"}]}], ",", 
        RowBox[{"sym_:", "\[Delta]"}]}], "]"}], "[", "exp_", "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"$", "=", "exp"}], "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"$", "=", 
         RowBox[{"$", "//", 
          RowBox[{"tuSumSimplify", "[", "]"}]}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"$", "=", 
         RowBox[{"$", "/.", 
          RowBox[{
           RowBox[{"Tensor", "[", 
            RowBox[{"sym", ",", "up_", ",", "dn_"}], "]"}], "\[RuleDelayed]", 
           
           RowBox[{"KroneckerDelta", "[", 
            RowBox[{"Apply", "[", 
             RowBox[{"Sequence", ",", 
              RowBox[{"DeleteCases", "[", 
               RowBox[{
                RowBox[{"Flatten", "[", 
                 RowBox[{"{", 
                  RowBox[{"up", ",", "dn"}], "}"}], "]"}], ",", "Void"}], 
               "]"}]}], "]"}], "]"}]}]}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"$", "=", 
         RowBox[{"$", "/.", 
          RowBox[{"xSum", "\[Rule]", "Sum"}]}]}], ";", "\[IndentingNewLine]", 
        
        RowBox[{"$", "=", 
         RowBox[{"Refine", "[", 
          RowBox[{"$", ",", "refine"}], "]"}]}], ";", "\[IndentingNewLine]", 
        "$"}]}], "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]",
    "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"Distribute", " ", "xSum", " ", "over", " ", 
     RowBox[{"ExpandAll", "[", "sumand", "]"}], " ", "of", " ", 
     RowBox[{
      RowBox[{"Sum", "[", "]"}], ".", "  ", "Returns"}], " ", 
     RowBox[{
      RowBox[{"xSum", "[", "]"}], ".", " ", "\[IndentingNewLine]", "3.1"}], 
     ".2010"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"DistributeSum", "[", "exp_", "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"tmp", ",", 
         RowBox[{"tmp1", "=", "NULL"}], ",", 
         RowBox[{"DEBUG", "=", "0"}]}], "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"tmp", "=", 
         RowBox[{"exp", "/.", 
          RowBox[{"Sum", "->", "xSum"}]}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"While", "[", 
         RowBox[{
          RowBox[{"tmp", "=!=", "tmp1"}], ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"DEBUG", ">", "0"}], ",", 
             RowBox[{"Print", "[", 
              RowBox[{"\"\<DistributeSum: \>\"", ",", "tmp"}], "]"}]}], "]"}],
            ";", "\[IndentingNewLine]", 
           RowBox[{"tmp1", "=", "tmp"}], ";", "\[IndentingNewLine]", 
           RowBox[{"tmp", "=", 
            RowBox[{"tmp", "/.", 
             RowBox[{
              RowBox[{"xSum", "[", 
               RowBox[{"a_", ",", "c__"}], "]"}], ":>", 
              RowBox[{"xSum", "[", 
               RowBox[{
                RowBox[{"ExpandAll", "[", "a", "]"}], ",", "c"}], "]"}]}]}]}],
            ";", "\[IndentingNewLine]", 
           RowBox[{"tmp", "=", 
            RowBox[{"tmp", "/.", 
             RowBox[{
              RowBox[{"xSum", "[", 
               RowBox[{"a_", ",", "b__"}], "]"}], ":>", 
              RowBox[{
               RowBox[{"Map", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"xSum", "[", 
                   RowBox[{"#", ",", "b"}], "]"}], "&"}], ",", "a"}], "]"}], "/;", 
               RowBox[{
                RowBox[{"Head", "[", "a", "]"}], "===", "Plus"}]}]}]}]}], 
           ";"}]}], "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
        "tmp"}]}], "\[IndentingNewLine]", "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"tuDistributeOp", "::", "usage"}], "=", 
     "\"\<tuDistributeOp[Op_,func_:Plus][exp_] applies \
Distribute[Op_[],func_] on every Pattern matched by Op_[__]. \
EG:DistributeOp[IntegralOp[_,_]][IntegralOp[{{x}},a+b]]->IntegralOp[{{x}},a]+\
IntegralOp[{{x}},b] *29Jan2014*\>\""}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"tuDistributeOp", "[", 
       RowBox[{"Op_", ",", 
        RowBox[{"func_:", "Plus"}]}], "]"}], "[", "exp_", "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"tmp", "=", "exp"}], ",", "pos", ",", "i"}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"pos", "=", 
         RowBox[{"ExtractPositionPattern", "[", 
          RowBox[{"tmp", ",", "Op"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"For", "[", 
         RowBox[{
          RowBox[{"i", "=", "1"}], ",", 
          RowBox[{"i", "<=", 
           RowBox[{"Length", "[", "pos", "]"}]}], ",", 
          RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"pos", "[", 
            RowBox[{"[", 
             RowBox[{"i", ",", "2"}], "]"}], "]"}], "=", 
           RowBox[{"Distribute", "[", 
            RowBox[{
             RowBox[{"pos", "[", 
              RowBox[{"[", 
               RowBox[{"i", ",", "2"}], "]"}], "]"}], ",", "func"}], 
            "]"}]}]}], "\[IndentingNewLine]", "]"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"ReplacePartTU", "[", 
         RowBox[{"tmp", ",", "pos"}], "]"}]}]}], "\[IndentingNewLine]", 
      "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"DistributeOp", "[", "Op_", "]"}], "[", "exp_", "]"}], ":=", 
     RowBox[{
      RowBox[{"tuDistributeOp", "[", "Op", "]"}], "[", "exp", "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"ThreadOp", "[", "Op_", "]"}], "[", "exp_", "]"}], " ", 
     "applies", " ", "Thread", " ", "on", " ", "pattern", " ", 
     RowBox[{"Op_", "[", "_", "]"}], " ", "in", " ", "exp_.", "  ", 
     "Accomodates", " ", "variation", " ", "for", " ", 
     RowBox[{"IntegralOp", ".", " ", "Must"}], " ", "indicate", " ", 
     "arguements", " ", "as", " ", 
     RowBox[{
      RowBox[{"Op_", "[", 
       RowBox[{"_", ",", "_"}], "]"}], "."}], " ", "*", "5", "Sep2014"}], 
    "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"ThreadOp", "[", "Op_", "]"}], "[", "exp_", "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"tmp", "=", 
          RowBox[{"{", "exp", "}"}]}], ",", "pos", ",", "i", ",", "xInt", ",",
          "xOp"}], "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"pos", "=", 
         RowBox[{"ExtractPositionPattern", "[", 
          RowBox[{"tmp", ",", "Op"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"xOp", "=", "Op"}], ";", "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Head", "[", "Op", "]"}], "===", "IntegralOp"}], ",", 
          RowBox[{
           RowBox[{"pos", "=", 
            RowBox[{"pos", "/.", 
             RowBox[{
              RowBox[{"IntegralOp", "[", 
               RowBox[{"a_", ",", "b_"}], "]"}], "\[Rule]", 
              RowBox[{
               RowBox[{"xInt", "[", "a", "]"}], "[", "b", "]"}]}]}]}], ";", 
           RowBox[{"xOp", "=", 
            RowBox[{
             RowBox[{"xInt", "[", "_", "]"}], "[", "_", "]"}]}]}]}], "]"}], 
        ";", "\[IndentingNewLine]", 
        RowBox[{"For", "[", 
         RowBox[{
          RowBox[{"i", "=", "1"}], ",", 
          RowBox[{"i", "<=", 
           RowBox[{"Length", "[", "pos", "]"}]}], ",", 
          RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
            RowBox[{"pos", "[", 
             RowBox[{"[", 
              RowBox[{"i", ",", "2"}], "]"}], "]"}], "=", 
            RowBox[{
             RowBox[{"pos", "[", 
              RowBox[{"[", 
               RowBox[{"i", ",", "2"}], "]"}], "]"}], "//.", 
             RowBox[{
              RowBox[{"ii", ":", "xOp"}], "\[RuleDelayed]", 
              RowBox[{"Thread", "[", "ii", "]"}]}]}]}], ";"}]}], 
         "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Head", "[", "Op", "]"}], "===", "IntegralOp"}], ",", 
          RowBox[{"pos", "=", 
           RowBox[{"pos", "/.", 
            RowBox[{
             RowBox[{
              RowBox[{"xInt", "[", "a_", "]"}], "[", "b_", "]"}], "->", 
             RowBox[{"IntegralOp", "[", 
              RowBox[{"a", ",", "b"}], "]"}]}]}]}]}], "]"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"ReplacePartTU", "[", 
          RowBox[{"tmp", ",", "pos"}], "]"}], "//", "First"}]}]}], 
      "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"tuArgSimplify", "::", "usage"}], "=", 
     "\"\<tuArgSimplify[OP_,constants_List][exp_] simplifies arg_ in \
OP_[arg_] functional expressions in exp_ by first DistributeOp[OP_][exp_] and \
removing constants_List and NumericQ[] elements in arg_ outside of OP_.  OP_ \
must be specified as fn[_].\[IndentingNewLine]Usage:  xOp[f+g,c+d \
e]//simpleOp[xOp[__],{d}] \[Rule]\[IndentingNewLine]{xOp[f,c]+d \
xOp[f,e]+xOp[g,c]+d xOp[g,e]}   *2Jul2014*\>\""}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"tuArgSimplify", "[", 
       RowBox[{"OP_", ",", 
        RowBox[{"constants_List:", 
         RowBox[{"{", "}"}]}]}], "]"}], "[", "exp_", "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"tmp", "=", "exp"}], ",", 
         RowBox[{"headOp", "=", "OP"}], ",", "xop", ",", "sub", ",", "one"}], 
        "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"tmp", "=", 
         RowBox[{"tmp", "//.", 
          RowBox[{"tuOpDistribute", "[", "OP", "]"}]}]}], ";", 
        RowBox[{"xPrint", "[", 
         RowBox[{"tmp", ",", "\"\<:\>\"", ",", "headOp"}], "]"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"tmp", "=", 
         RowBox[{"tmp", "/.", 
          RowBox[{"headOp", "->", "xop"}]}]}], ";", 
        RowBox[{"xPrint", "[", 
         RowBox[{"xop", ",", "\"\< : \>\"", ",", "tmp"}], "]"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{"Op", " ", "with", " ", "multiple", " ", "arguements"}], 
         "*)"}], "\[IndentingNewLine]", 
        RowBox[{"sub", "=", 
         RowBox[{
          RowBox[{"xop", "[", 
           RowBox[{"b1___", ",", 
            RowBox[{
             SuperscriptBox["c_", 
              RowBox[{"n_:", "1"}]], "  ", "a_"}], ",", "b___"}], "]"}], ":>", 
          RowBox[{
           RowBox[{
            SuperscriptBox["c", "n"], " ", 
            RowBox[{"xop", "[", 
             RowBox[{"b1", ",", "a", ",", "b"}], "]"}]}], "/;", 
           RowBox[{
            RowBox[{"ListMemberQ", "[", 
             RowBox[{"c", ",", "constants"}], "]"}], "||", 
            RowBox[{"ListMemberQ", "[", 
             RowBox[{"c", ",", "constants"}], "]"}], "||", 
            RowBox[{"NumericQ", "[", "c", "]"}]}]}]}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"tmp", "=", 
         RowBox[{"tmp", "//.", "sub"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{
         "Op", " ", "with", " ", "multiple", " ", "arguements", " ", "but", 
          " ", "single", " ", "arguement", " ", "as", " ", "constant"}], 
         "*)"}], "\[IndentingNewLine]", 
        RowBox[{"sub", "=", 
         RowBox[{
          RowBox[{"xop", "[", 
           RowBox[{"b1___", ",", 
            SuperscriptBox["c_", 
             RowBox[{"n_:", "1"}]], " ", ",", "b___"}], "]"}], ":>", 
          RowBox[{
           RowBox[{
            SuperscriptBox["c", "n"], " ", 
            RowBox[{"xop", "[", 
             RowBox[{"b1", ",", "1", ",", "b"}], "]"}]}], "/;", 
           RowBox[{
            RowBox[{"ListMemberQ", "[", 
             RowBox[{"c", ",", "constants"}], "]"}], "||", 
            RowBox[{"ListMemberQ", "[", 
             RowBox[{"c", ",", "constants"}], "]"}], "||", 
            RowBox[{"NumericQ", "[", "c", "]"}]}]}]}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"tmp", "=", 
         RowBox[{"tmp", "//.", "sub"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{"Op", " ", "with", " ", "single", " ", "arguement"}], "*)"}],
         "\[IndentingNewLine]", 
        RowBox[{"sub", "=", 
         RowBox[{
          RowBox[{"xop", "[", 
           SuperscriptBox["c_", 
            RowBox[{"n_:", "1"}]], "]"}], "\[RuleDelayed]", 
          RowBox[{
           SuperscriptBox["c", "n"], "/;", 
           RowBox[{
            RowBox[{"ListMemberQ", "[", 
             RowBox[{"c", ",", "constants"}], "]"}], "||", 
            RowBox[{"ListMemberQ", "[", 
             RowBox[{"c", ",", "constants"}], "]"}], "||", 
            RowBox[{"NumericQ", "[", "c", "]"}]}]}]}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"tmp", "=", 
         RowBox[{"tmp", "//.", "sub"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"tmp", "=", 
         RowBox[{"tmp", "/.", 
          RowBox[{"xop", "->", "headOp"}]}]}], ";", 
        RowBox[{"xPrint", "[", "tmp", "]"}], ";", "\[IndentingNewLine]", 
        "tmp"}]}], "\[IndentingNewLine]", "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"simpleOp", "[", 
       RowBox[{"OP_", ",", 
        RowBox[{"constants_List:", 
         RowBox[{"{", "}"}]}]}], "]"}], "[", "exp_", "]"}], ":=", 
     RowBox[{
      RowBox[{"tuArgSimplify", "[", 
       RowBox[{"OP", ",", "constants"}], "]"}], "[", "exp", "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"tuSimpleOp", "[", 
       RowBox[{"OP_", ",", 
        RowBox[{"constants_List:", 
         RowBox[{"{", "}"}]}]}], "]"}], "[", "exp_", "]"}], ":=", 
     RowBox[{
      RowBox[{"tuArgSimplify", "[", 
       RowBox[{"OP", ",", "constants"}], "]"}], "[", "exp", "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"tuArgAdd", "::", "usage"}], "=", 
     "\"\<tuArgAdd[op_,arg_][exp_] adds arguments specified by arg_ to op_[]s \
found in exp_.  op_ may be Pattern[]s or Alternative Pattern[]s. E.G., \
\!\(\*SubscriptBox[\(op\), \(A\)]\)+\!\(\*SuperscriptBox[\(op\), \
\(B\)]\)//tuArgAdd[\!\(\*SubscriptBox[\(a_\), \
\(_\)]\)|\!\(\*SuperscriptBox[\(a_\), \
\(_\)]\),{r,t}]\[LongRightArrow]\!\(\*SubscriptBox[\(op\), \(A\)]\)[r,t]+\!\(\
\*SuperscriptBox[\(op\), \(B\)]\)[r,t]  *19Jan2018*\>\""}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"tuArgAdd", "[", 
       RowBox[{"op_", ",", "arg_"}], "]"}], "[", "exp_", "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", "$arg", "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"$arg", "=", 
         RowBox[{"Apply", "[", 
          RowBox[{"Sequence", ",", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", "arg", "}"}], "]"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"exp", "/.", 
         RowBox[{
          RowBox[{"oo", ":", "op"}], "\[Rule]", 
          RowBox[{"oo", "[", "$arg", "]"}]}]}]}]}], "\[IndentingNewLine]", 
      "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"tuArgRemove", "::", "usage"}], "=", 
     "\"\<tuArgRemove[op_,arg_:__][exp_] removes arguments specified by arg_ \
from op_[]s found in exp_.  op_ may be Pattern[]s or Alternative Pattern[]s. \
E.G., \!\(\*SubscriptBox[\(op\), \(A\)]\)[t,r]+\!\(\*SuperscriptBox[\(op\), \
\(B\)]\)[t,r]//tuArgRemove[\!\(\*SubscriptBox[\(a_\), \
\(_\)]\)|\!\(\*SuperscriptBox[\(a_\), \
\(_\)]\),{__}]\[LongRightArrow]\!\(\*SubscriptBox[\(op\), \
\(A\)]\)+\!\(\*SuperscriptBox[\(op\), \(B\)]\)  *19Jan2018*\>\""}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"tuArgRemove", "[", 
      RowBox[{"op_", ",", 
       RowBox[{"arg_:", "__"}]}], "]"}], "[", "exp_", "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", "$arg", "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"$arg", "=", 
        RowBox[{"Apply", "[", 
         RowBox[{"Sequence", ",", 
          RowBox[{"Flatten", "[", 
           RowBox[{"{", "arg", "}"}], "]"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"exp", "/.", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"oo", ":", "op"}], ")"}], "[", "$arg", "]"}], "\[Rule]", 
         "oo"}]}]}]}], "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", 
   
   RowBox[{"(*", "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "Adds", " ", "columns", " ", "of", " ", "tablex_", " ", "to", " ", "the", 
     " ", "right", " ", "of", " ", 
     RowBox[{"table", "."}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"TableAddColumn", "[", "table_", "]"}], "[", "tablex_", "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"head", "=", 
          RowBox[{"table", "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], ",", 
         RowBox[{"tmp", "=", "table"}], ",", "pattern", ",", "row", ",", 
         RowBox[{"mname", "=", "\"\<TableAddColumn\>\""}], ",", 
         RowBox[{"DEBUG", "=", "1"}]}], "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"tmp", "=", 
         RowBox[{"MapThread", "[", 
          RowBox[{"Join", ",", 
           RowBox[{"{", 
            RowBox[{"tmp", ",", "tablex"}], "}"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", "tmp"}]}], "\[IndentingNewLine]", "]"}]}], 
    ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"tuExtractPositionPattern", "::", "usage"}], "=", 
     "\"\<tuExtractPositionPattern[pattern_,maxlevel_:Infinity][exp_] \
extracts a List of {Positions,items} that match pattern_ in exp_ up to Level \
maxlevel_.  Returns a List[ pos1->match1,pos2->match2,... ]. pattern_ may be \
a List or Alternatives. *3Nov2016*)\>\""}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"tuExtractPositionPattern", "[", 
       RowBox[{"pattern_", ",", 
        RowBox[{"maxlevel_:", "Infinity"}]}], "]"}], "[", "exp_", "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"xpattern", "=", "pattern"}], ",", "pos", ",", "list", ",", 
         "tmp", ",", "xList"}], "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Head", "[", "xpattern", "]"}], "==", "List"}], ",", 
          RowBox[{"(*", 
           RowBox[{
           "always", " ", "change", " ", "List", " ", "of", " ", "patterns", 
            " ", "to", " ", "Alternatives"}], "*)"}], "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"xpattern", "=", 
            RowBox[{"Apply", "[", 
             RowBox[{"Alternatives", ",", "xpattern"}], "]"}]}], ";", 
           RowBox[{"xPrint", "[", 
            RowBox[{"xHead", "[", "xpattern", "]"}], "]"}]}]}], 
         "\[IndentingNewLine]", "]"}], ";", 
        RowBox[{"(*", "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Head", "[", "xpattern", "]"}], "=!=", "List"}], ",", 
           RowBox[{
            RowBox[{"xPrint", "[", 
             RowBox[{"Head", "[", "xpattern", "]"}], "]"}], ";"}]}]}], "*)"}],
         "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{"not", " ", "List", " ", "of", " ", "patterns"}], "*)"}], 
        "\[IndentingNewLine]", 
        RowBox[{"pos", "=", 
         RowBox[{"Position", "[", 
          RowBox[{"exp", ",", "xpattern", ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "maxlevel"}], "}"}], ",", 
           RowBox[{"Heads", "\[Rule]", "True"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"list", "=", 
         RowBox[{"Extract", "[", 
          RowBox[{"exp", ",", "pos"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"tmp", "=", 
         RowBox[{"Thread", "[", 
          RowBox[{"Rule", "[", 
           RowBox[{"pos", ",", "list"}], "]"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"xPrint", "[", 
         RowBox[{
         "\"\<X \>\"", ",", "tmp", ",", "\"\<, \>\"", ",", "xpattern", ",", 
          "\"\<, \>\"", ",", "list", ",", "\"\<, \>\"", ",", "pos"}], "]"}], 
        ";", "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{
         "List", " ", "of", " ", "patterns", " ", "DOES", " ", "NOT", " ", 
          "DO", " ", "ANYTHING", " ", "with", " ", "pattern"}], "*)"}], 
        "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{
           RowBox[{",", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"tmp", "=", 
              RowBox[{"exp", "/.", 
               RowBox[{"List", "\[Rule]", "xList"}]}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"pos", "=", 
              RowBox[{"Position", "[", 
               RowBox[{"exp", ",", "xList", ",", 
                RowBox[{"{", 
                 RowBox[{"0", ",", "maxlevel"}], "}"}], ",", 
                RowBox[{"Heads", "\[Rule]", "True"}]}], "]"}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"list", "=", 
              RowBox[{"Extract", "[", 
               RowBox[{"exp", ",", "pos"}], "]"}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"tmp", "=", 
              RowBox[{"Thread", "[", 
               RowBox[{"Rule", "[", 
                RowBox[{"pos", ",", "list"}], "]"}], "]"}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"tmp", "=", 
              RowBox[{"tmp", "/.", 
               RowBox[{"xList", "\[Rule]", "List"}]}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"Print", "[", 
              RowBox[{"exp", ",", "xpattern", ",", "tmp"}], "]"}], ";"}]}], 
           "\[IndentingNewLine]", "]"}], ";"}], "*)"}], "\[IndentingNewLine]",
         "tmp"}]}], "\[IndentingNewLine]", "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"ExtractPositionPattern", "[", 
      RowBox[{"exp_", ",", "pattern_", ",", 
       RowBox[{"maxlevel_:", "Infinity"}]}], "]"}], ":=", 
     RowBox[{
      RowBox[{"tuExtractPositionPattern", "[", 
       RowBox[{"pattern", ",", "maxlevel"}], "]"}], "[", "exp", "]"}]}], 
    ";"}], 
   RowBox[{"(*", "Compatibility", "*)"}], "\[IndentingNewLine]", 
   RowBox[{"(*", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"tuReplacePart", "::", "usage"}], "=", 
     "\"\<tuReplacePart[exp_,pos_List] like ReplacePart[] except replaces \
whole exp_ when pos contains {{}->replacement} in which case ReplacePart does \
nothing. *5Sep2015*\>\""}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"tuReplacePart", "[", 
      RowBox[{"exp_", ",", "pos_List"}], "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", "$", "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Length", "[", 
           RowBox[{"(", 
            RowBox[{"$", "=", 
             RowBox[{"Cases", "[", 
              RowBox[{"pos", ",", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"{", "}"}], "\[Rule]", "_"}], ")"}], "|", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"{", "}"}], "\[RuleDelayed]", "_"}], ")"}]}]}], 
              "]"}]}], ")"}], "]"}], ">", "0"}], ",", 
         RowBox[{"$", "[", 
          RowBox[{"[", 
           RowBox[{"1", ",", "2"}], "]"}], "]"}], 
         RowBox[{"(*", 
          RowBox[{"replace", " ", "entire", " ", "expression"}], "*)"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"ReplacePart", "[", 
          RowBox[{"exp", ",", "pos"}], "]"}]}], "]"}]}], 
      "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"ReplacePartTU", "[", 
      RowBox[{"exp_", ",", "pos_List"}], "]"}], ":=", 
     RowBox[{"tuReplacePart", "[", 
      RowBox[{"exp", ",", "pos"}], "]"}]}], ";"}], 
   RowBox[{"(*", "Compatibility", "*)"}], "\[IndentingNewLine]", 
   RowBox[{"(*", "*)"}], 
   RowBox[{
    RowBox[{
     RowBox[{"tuFreeQ", "::", "usage"}], "=", 
     "\"\<tuFreeQ[exp_,items_] tests exp_ as FreeQ of all items in \
items_List. Equivalent form: tuFreeQ[items_][exp_]  *18Jun2015*\>\""}], ";"}],
    "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"tuFreeQ", "[", 
      RowBox[{"exp_", ",", "items_"}], "]"}], ":=", 
     RowBox[{"Apply", "[", 
      RowBox[{"And", ",", 
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"FreeQ", "[", 
           RowBox[{"exp", ",", "#"}], "]"}], "&"}], ",", 
         RowBox[{"Flatten", "[", 
          RowBox[{"{", "items", "}"}], "]"}]}], "]"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"tuFreeQ", "[", "items_", "]"}], "[", "exp_", "]"}], ":=", 
     RowBox[{"tuFreeQ", "[", 
      RowBox[{"exp", ",", "items"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"ListFreeQ", "[", 
      RowBox[{"exp_", ",", "items_List"}], "]"}], ":=", 
     RowBox[{"tuFreeQ", "[", 
      RowBox[{"exp", ",", "items"}], "]"}]}], ";"}], 
   RowBox[{"(*", "Compatibility", "*)"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", "*)"}], 
   RowBox[{
    RowBox[{
     RowBox[{"tuHasAnyQ", "::", "usage"}], "=", 
     "\"\<tuHasAnyQ[exp_,items_List] returns True if exp_ has any item(FreeQ) \
in items_List. *18Jul2015*\>\""}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"tuHasAnyQ", "[", 
      RowBox[{"exp_", ",", "items_"}], "]"}], ":=", 
     RowBox[{"Apply", "[", 
      RowBox[{"Or", ",", 
       RowBox[{
        RowBox[{
         RowBox[{"!", 
          RowBox[{"FreeQ", "[", 
           RowBox[{"exp", ",", "#"}], "]"}]}], "&"}], "/@", 
        RowBox[{"Flatten", "[", 
         RowBox[{"{", "items", "}"}], "]"}]}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", "*)"}], 
   RowBox[{
    RowBox[{
     RowBox[{"tuHasAllQ", "::", "usage"}], "=", 
     "\"\<tuHasAllQ[exp_,items_List] returns True if exp_ has (!FreeQ) all \
items in items_List. *18Jul2015*\>\""}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"tuHasAllQ", "[", 
      RowBox[{"exp_", ",", "items_"}], "]"}], ":=", 
     RowBox[{"Apply", "[", 
      RowBox[{"And", ",", 
       RowBox[{
        RowBox[{
         RowBox[{"!", 
          RowBox[{"FreeQ", "[", 
           RowBox[{"exp", ",", "#"}], "]"}]}], "&"}], "/@", 
        RowBox[{"Flatten", "[", 
         RowBox[{"{", "items", "}"}], "]"}]}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", "*)"}], 
   RowBox[{
    RowBox[{
     RowBox[{"tuHasNoneQ", "::", "usage"}], "=", 
     "\"\<tuHasNoneQ[exp_,items_List] returns True if exp_ has none(FreeQ) of \
the items in items_List. *18Jul2015*\>\""}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"tuHasNoneQ", "[", 
      RowBox[{"exp_", ",", "items_"}], "]"}], ":=", 
     RowBox[{"Not", "[", 
      RowBox[{"tuHasAnyQ", "[", 
       RowBox[{"exp", ",", "items"}], "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", "*)"}], 
   RowBox[{
    RowBox[{
     RowBox[{"tuProductQ", "::", "usage"}], "=", 
     "\"\<tuProductQ[exp_] returns True if exp_ is a product(Times,xTimes) of \
simple variables. *8Aug2015*\>\""}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"tuProductQ", "[", "exp_", "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", "tmp", "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"tmp", "=", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"tuHasNoneQ", "[", 
            RowBox[{"exp", ",", 
             RowBox[{"{", "Plus", "}"}]}], "]"}], ",", 
           RowBox[{"tuHasAnyQ", "[", 
            RowBox[{
             RowBox[{"Head", "[", "exp", "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"Times", ",", "xTimes"}], "}"}]}], "]"}]}], "}"}]}], 
        ";", "\[IndentingNewLine]", 
        RowBox[{"Apply", "[", 
         RowBox[{"And", ",", "tmp"}], "]"}]}]}], "\[IndentingNewLine]", 
      "]"}]}], ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", "*)"}], 
   RowBox[{
    RowBox[{
     RowBox[{"tuMemberQ", "::", "usage"}], "=", 
     "\"\<tuMemberQ[variable_,patterns_] True if any variable_ (may be \
List[]) matches any in patterns_ (may be List). Equivalent form: \
tuMemberQ[patterns_][variable_] *16May2015*\>\""}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"tuMemberQ", "[", 
      RowBox[{"variable_", ",", "patterns_"}], "]"}], ":=", 
     "\[IndentingNewLine]", 
     RowBox[{"Apply", "[", 
      RowBox[{"Or", ",", 
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"MemberQ", "[", 
           RowBox[{
            RowBox[{"Flatten", "[", 
             RowBox[{"{", "variable", "}"}], "]"}], ",", "#"}], "]"}], "&"}], 
         ",", 
         RowBox[{"Flatten", "[", 
          RowBox[{"{", "patterns", "}"}], "]"}]}], "]"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"tuMemberQ", "[", "patterns_", "]"}], "[", "variable_", "]"}], ":=", 
     RowBox[{"tuMemberQ", "[", 
      RowBox[{"variable", ",", "patterns"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"ListMemberQ", "[", 
      RowBox[{"variable_", ",", "patterns_List"}], "]"}], ":=", 
     RowBox[{"tuMemberQ", "[", 
      RowBox[{"variable", ",", "patterns"}], "]"}]}], ";"}], 
   RowBox[{"(*", "Compatibility", "*)"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"disjointQ", "::", "usage"}], "=", 
     "\"\<disjointQ[b_,c_,free_List:{u,d,e,\[Nu],L,R}] return True if both \
b_, c_ do not have in common items of free_List. *27Apr2016*\>\""}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"disjointQ", "[", 
     RowBox[{"b_", ",", "c_", ",", 
      RowBox[{"free_List:", 
       RowBox[{"{", 
        RowBox[{"u", ",", "d", ",", "e", ",", "\[Nu]", ",", "L", ",", "R"}], 
        "}"}]}]}], "]"}], ":=", 
    RowBox[{"Apply", "[", 
     RowBox[{"Or", ",", 
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"FreeQ", "[", 
           RowBox[{"b", ",", "#"}], "]"}], "&&", 
          RowBox[{"!", 
           RowBox[{"FreeQ", "[", 
            RowBox[{"c", ",", "#"}], "]"}]}]}], "&"}], ",", "free"}], "]"}]}],
      "]"}]}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"allMemberQ", "[", 
      RowBox[{"variables_", ",", "patterns_List"}], "]"}], " ", "True", " ", 
     "if", " ", "all", " ", "variables_", " ", "match", " ", "any", " ", "in",
      " ", 
     RowBox[{"patterns_List", "."}], "  ", "*", "16", "Aug2013"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"allMemberQ", "[", 
      RowBox[{"variables_", ",", "patterns_List"}], "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", "tmp", "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"tmp", "=", 
         RowBox[{"Map", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"ListMemberQ", "[", 
             RowBox[{"#", ",", 
              RowBox[{"Flatten", "[", "patterns", "]"}]}], "]"}], "&"}], ",", 
           
           RowBox[{"Flatten", "[", 
            RowBox[{"{", "variables", "}"}], "]"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"Apply", "[", 
         RowBox[{"And", ",", "tmp"}], "]"}]}]}], "\[IndentingNewLine]", 
      "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"allMemberQ", "::", "usage"}], "=", 
     "\"\<allMemberQ[variables_,patterns_List] True if all variables_  match \
any in patterns_List.\>\""}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"combineElements", "[", 
       RowBox[{"elements_List", ",", "to_"}], "]"}], "[", "exp_List", "]"}], 
     " ", "replaces", " ", "elements_List", " ", "items", " ", "of", " ", 
     "exp_List", " ", "and", " ", 
     RowBox[{"Append", "[", "]"}], "s", " ", "to_.", "  ", "*", "22", 
     "Nov2014"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"combineElements", "[", 
       RowBox[{"elements_List", ",", "to_"}], "]"}], "[", "exp_List", "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"tmp", "=", "exp"}], "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"tmp", "=", 
         RowBox[{"Select", "[", 
          RowBox[{"tmp", ",", 
           RowBox[{
            RowBox[{"!", 
             RowBox[{"MemberQ", "[", 
              RowBox[{"elements", ",", "#"}], "]"}]}], "&"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"tmp", "=", 
         RowBox[{"Append", "[", 
          RowBox[{"tmp", ",", "to"}], "]"}]}]}]}], "\[IndentingNewLine]", 
      "]"}]}], ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"tuOpGather", "::", "usage"}], "=", 
     "\"\<tuOpGather[op_][exp_] gathers combination of operators op_ in exp_ \
,Log: a Log[b]+c Log[d]\[Rule]Log[\!\(\*SuperscriptBox[\(b\), \
\(a\)]\)\!\(\*SuperscriptBox[\(d\), \(b\)]\)], Sqrt: \
\!\(\*SqrtBox[\(a_\)]\)\!\(\*SqrtBox[\(b_\)]\)->\!\(\*SqrtBox[\(a\\\ b\)]\)\
\[IndentingNewLine]*18Jul2016*\>\""}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"tuOpGather", "[", "op_", "]"}], "[", "exp_", "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"tmp", "=", "exp"}], "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"op", "===", "Log"}], ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"tmp", "=", 
            RowBox[{"tmp", "//.", 
             RowBox[{
              RowBox[{"a_", " ", 
               RowBox[{"Log", "[", "b_", "]"}]}], "->", 
              RowBox[{"Log", "[", 
               SuperscriptBox["b", "a"], "]"}]}]}]}], ";", 
           RowBox[{"xPrint", "[", "tmp", "]"}], ";", "\[IndentingNewLine]", 
           RowBox[{"tmp", "=", 
            RowBox[{"tmp", "//.", 
             RowBox[{
              RowBox[{
               RowBox[{"Log", "[", "a_", "]"}], "+", 
               RowBox[{"Log", "[", "b_", "]"}]}], "->", 
              RowBox[{"Log", "[", 
               RowBox[{"a", " ", "b"}], "]"}]}]}]}], ";", 
           RowBox[{"xPrint", "[", "tmp", "]"}]}], ",", "\[IndentingNewLine]", 
          
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"op", "===", "Sqrt"}], ",", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"tmp", "=", 
               RowBox[{"tmp", "//.", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"c___", " ", 
                    SqrtBox["a_"], 
                    SqrtBox["b_"]}], "\[Rule]", 
                   RowBox[{"c", 
                    SqrtBox[
                    RowBox[{"a", " ", "b"}]]}]}], ",", 
                  RowBox[{
                   RowBox[{"c___", " ", 
                    RowBox[{
                    SqrtBox["a_"], "/", 
                    SqrtBox["b_"]}]}], "\[Rule]", 
                   RowBox[{"c", 
                    SqrtBox[
                    RowBox[{"a", " ", "/", "b"}]]}]}]}], "}"}]}]}], ";"}]}], 
            "\[IndentingNewLine]", "]"}], ";"}]}], "\[IndentingNewLine]", 
         "]"}], ";", "\[IndentingNewLine]", "tmp"}]}], "\[IndentingNewLine]", 
      "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"gatherLog", "[", "exp_", "]"}], ":=", 
     RowBox[{
      RowBox[{"tuOpGather", "[", "Log", "]"}], "[", "exp", "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"gatherSqrt", "[", "exp_", "]"}], ":=", 
     RowBox[{
      RowBox[{"tuOpGather", "[", "Sqrt", "]"}], "[", "exp", "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"tuVarGather", "::", "usage"}], "=", 
     "\"\<tuVarGather[var_,op_:dotOps] Rules[] for gathering var_ at end of \
op_ terms distributed over Plus expressions. *9Feb2016*\>\""}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"tuVarGather", "[", 
      RowBox[{"var_", ",", 
       RowBox[{"op_:", "dotOps"}]}], "]"}], ":=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"oo", ":", "op"}], ")"}], "[", 
          RowBox[{"b_", ",", "var"}], "]"}], "+", " ", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"sign_:", "1"}], ")"}], 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"oo", ":", "op"}], ")"}], "[", 
           RowBox[{"c_", ",", "var"}], "]"}]}]}], "\[Rule]", 
        RowBox[{"oo", "[", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"b", "+", 
            RowBox[{"sign", " ", "c"}]}], ")"}], ",", "var"}], "]"}]}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"oo", ":", "op"}], ")"}], "[", 
          RowBox[{"var", ",", "b_"}], "]"}], "+", " ", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"sign_:", "1"}], ")"}], 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"oo", ":", "op"}], ")"}], "[", 
           RowBox[{"var", ",", "  ", "c_"}], "]"}]}]}], "\[Rule]", 
        RowBox[{"oo", "[", 
         RowBox[{"var", ",", 
          RowBox[{"(", 
           RowBox[{"b", "+", 
            RowBox[{"sign", " ", "c"}]}], ")"}]}], "]"}]}]}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"tuSeries", "::", "usage"}], "=", 
     "\"\<tuSeries[f_,var_List] generates symbolic Series expansion of f_ \
given var_ parameters of Series[] function *1Nov2015*\>\""}], ";", 
    RowBox[{
     RowBox[{"tuSeries", "[", 
      RowBox[{"f_", ",", "var_List"}], "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"tmp", ",", "dif"}], "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"tmp", "=", 
         RowBox[{"f", "/.", 
          RowBox[{
           RowBox[{"var", "[", 
            RowBox[{"[", "1", "]"}], "]"}], "->", 
           RowBox[{"var", "[", 
            RowBox[{"[", "2", "]"}], "]"}]}]}]}], ";", "\[IndentingNewLine]", 
        
        RowBox[{"dif", "=", 
         RowBox[{"tuDPartial", "[", 
          RowBox[{"tmp", ",", 
           RowBox[{"var", "[", 
            RowBox[{"[", "1", "]"}], "]"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"Do", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"tmp", "=", 
            RowBox[{"tmp", "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"dif", "/.", 
                RowBox[{
                 RowBox[{"var", "[", 
                  RowBox[{"[", "1", "]"}], "]"}], "->", 
                 RowBox[{"var", "[", 
                  RowBox[{"[", "2", "]"}], "]"}]}]}], ")"}], 
              RowBox[{
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"var", "[", 
                   RowBox[{"[", "1", "]"}], "]"}], "-", 
                  RowBox[{"var", "[", 
                   RowBox[{"[", "2", "]"}], "]"}]}], ")"}], "^", 
                RowBox[{"(", "i$", ")"}]}], "/", 
               RowBox[{"i$", "!"}]}]}]}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"dif", "=", 
            RowBox[{"tuDPartial", "[", 
             RowBox[{"dif", ",", 
              RowBox[{"var", "[", 
               RowBox[{"[", "1", "]"}], "]"}]}], "]"}]}]}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{"i$", ",", "1", ",", 
            RowBox[{"var", "[", 
             RowBox[{"[", "3", "]"}], "]"}]}], "}"}]}], "\[IndentingNewLine]",
          "]"}], ";", "\[IndentingNewLine]", "tmp"}]}], "\[IndentingNewLine]",
       "]"}]}], ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"xSeries", "[", 
       RowBox[{"f_", ",", "var_List"}], "]"}], " ", "produces", " ", "a", " ",
       "symbolic", " ", "Series", " ", "expansion", " ", "of", " ", "f_.", "  ",
       "var_List", " ", "is", " ", "the", " ", "variable", " ", "arguement", 
      " ", "as", " ", "in", " ", 
      RowBox[{"Series", ".", "\[IndentingNewLine]", 
       RowBox[{"EG", ":", " ", 
        RowBox[{"xSeries", "[", 
         RowBox[{
          RowBox[{"f", "[", "x", "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"x", ",", "1", ",", "2"}], "}"}]}], "]"}]}]}]}], " ", "->",
      " ", 
     RowBox[{
      RowBox[{"xLimit", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"f", "[", "x", "]"}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "x"}], ")"}], " ", 
          InterpretationBox[
           RowBox[{
            SubscriptBox[
             UnderscriptBox["\"\<\[PartialD]\>\"", "_"], "x"], "[", 
            RowBox[{"f", "[", "x", "]"}], "]"}],
           $CellContext`xPartialD[
            $CellContext`f[$CellContext`x], $CellContext`x],
           Editable->False,
           SyntaxForm->Automatic]}], "+", 
         RowBox[{
          FractionBox["1", "2"], " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "x"}], ")"}], "2"], " ", 
          InterpretationBox[
           RowBox[{
            SubscriptBox[
             UnderscriptBox["\"\<\[PartialD]\>\"", "_"], "x"], "[", 
            InterpretationBox[
             RowBox[{
              SubscriptBox[
               UnderscriptBox["\"\<\[PartialD]\>\"", "_"], "x"], "[", 
              RowBox[{"f", "[", "x", "]"}], "]"}],
             $CellContext`xPartialD[
              $CellContext`f[$CellContext`x], $CellContext`x],
             Editable->False,
             SyntaxForm->Automatic], "]"}],
           $CellContext`xPartialD[
            $CellContext`xPartialD[
             $CellContext`f[$CellContext`x], $CellContext`x], $CellContext`x],
           
           Editable->False,
           SyntaxForm->Automatic]}]}], ",", 
        RowBox[{"x", "\[Rule]", "1"}]}], "]"}], "\[IndentingNewLine]", "*", 
      "28", "Jul2014"}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
      RowBox[{"xSeries", "[", 
       RowBox[{"f_", ",", "var_List"}], "]"}], ":=", 
      RowBox[{"Module", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"tmp", ",", "dif"}], "}"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"tmp", "=", "f"}], ";", "\[IndentingNewLine]", 
         RowBox[{"dif", "=", 
          RowBox[{"xPartialD", "[", 
           RowBox[{"tmp", ",", 
            RowBox[{"var", "[", 
             RowBox[{"[", "1", "]"}], "]"}]}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"Do", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"tmp", "=", 
             RowBox[{"tmp", "+", 
              RowBox[{"dif", 
               RowBox[{
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"var", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "-", 
                   RowBox[{"var", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], ")"}], "^", 
                 RowBox[{"(", "i$", ")"}]}], "/", 
                RowBox[{"i$", "!"}]}]}]}]}], ";", "\[IndentingNewLine]", 
            RowBox[{"dif", "=", 
             RowBox[{"xPartialD", "[", 
              RowBox[{"dif", ",", 
               RowBox[{"var", "[", 
                RowBox[{"[", "1", "]"}], "]"}]}], "]"}]}]}], ",", 
           RowBox[{"{", 
            RowBox[{"i$", ",", "1", ",", 
             RowBox[{"var", "[", 
              RowBox[{"[", "3", "]"}], "]"}]}], "}"}]}], 
          "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
         RowBox[{"xLimit", "[", 
          RowBox[{"tmp", ",", 
           RowBox[{
            RowBox[{"var", "[", 
             RowBox[{"[", "1", "]"}], "]"}], "->", 
            RowBox[{"var", "[", 
             RowBox[{"[", "2", "]"}], "]"}]}]}], "]"}]}]}], 
       "\[IndentingNewLine]", "]"}]}], ";"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{"(*", "\[IndentingNewLine]", 
    RowBox[{
    "Generates", " ", "a", " ", "Series", " ", "to", " ", "order_", " ", "in",
      " ", "pattern_", " ", "from", " ", "exp_.", " ", "NOT", " ", 
     RowBox[{"USED", "?"}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
      RowBox[{"SeriesByPattern", "[", 
       RowBox[{"exp_", ",", "pattern_", ",", "order_"}], "]"}], ":=", 
      RowBox[{"Module", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"pos", ",", "tmp", ",", "xpos", ",", "XXXX", ",", 
          RowBox[{"DEBUG", "=", "0"}], ",", 
          RowBox[{"mname", "=", "\"\<SeriesPattern\>\""}]}], "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"pos", "=", 
          RowBox[{"ExtractPositionPattern", "[", 
           RowBox[{"exp", ",", "pattern"}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"IfDEBUG", "[", 
          RowBox[{"mname", ",", 
           RowBox[{"DEBUG", ">", "0"}], ",", 
           RowBox[{"{", 
            RowBox[{"exp", ",", "pattern", ",", "pos"}], "}"}], ",", 
           "\"\<{exp,pattern,pos}\>\""}], "]"}], ";", "\[IndentingNewLine]", 
         RowBox[{"xpos", "=", 
          RowBox[{"pos", "/.", 
           RowBox[{"pattern", "\[Rule]", "XXXX"}]}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"tmp", "=", 
          RowBox[{"ReplacePart", "[", 
           RowBox[{"exp", ",", "xpos"}], "]"}]}], ";", "\[IndentingNewLine]", 
         
         RowBox[{"IfDEBUG", "[", 
          RowBox[{"mname", ",", 
           RowBox[{"DEBUG", ">", "0"}], ",", 
           RowBox[{"{", 
            RowBox[{"xpos", ",", "tmp"}], "}"}], ",", "\"\<{xpos,tmp}\>\""}], 
          "]"}], ";", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"tmp", "[", 
           RowBox[{"[", "2", "]"}], "]"}], "=", 
          RowBox[{
           RowBox[{"Series", "[", 
            RowBox[{
             RowBox[{"tmp", "[", 
              RowBox[{"[", "2", "]"}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"XXXX", ",", "0", ",", "order"}], "}"}]}], "]"}], "//", 
           "Normal"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"IfDEBUG", "[", 
          RowBox[{"mname", ",", 
           RowBox[{"DEBUG", ">", "0"}], ",", 
           RowBox[{"{", "tmp", "}"}], ",", "\"\<{tmp}\>\""}], "]"}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"tmp", "=", 
          RowBox[{"tmp", "/.", 
           RowBox[{"XXXX", "\[Rule]", 
            RowBox[{"pos", "[", 
             RowBox[{"[", 
              RowBox[{"1", ",", "2"}], "]"}], "]"}]}]}]}], ";", 
         "\[IndentingNewLine]", "tmp"}]}], "\[IndentingNewLine]", "]"}]}], 
     ";"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{"(*", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"tuSeriesApproximation", "[", 
      RowBox[{"exp_", ",", "varOrder_List", ",", "pattern_List"}], "]"}], " ",
      "generates", " ", "a", " ", "Rule", " ", "that", " ", "is", " ", "a", 
     " ", 
     RowBox[{"Series", "[", "]"}], " ", "approximation", " ", "to", " ", 
     "exp_.", "  ", "varOrder_List", " ", "is", " ", "the", " ", "same", " ", 
     "as", " ", 
     RowBox[{"Series", "[", "]"}], " ", "variable", " ", "arguement", " ", 
     "and", " ", "pattern_List", " ", "specifies", " ", "labels", " ", "to", 
     " ", "turn", " ", "into", " ", "Patterns", " ", "on", " ", "the", " ", 
     RowBox[{"LHS", "."}], " ", "*", "19", "Dec2014"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"tuSeriesApproximation", "[", 
     RowBox[{"exp_", ",", "varOrder_List", ",", "pattern_List"}], "]"}], ":=", 
    RowBox[{
     RowBox[{
      RowBox[{"exp", "->", 
       RowBox[{"Series", "[", 
        RowBox[{"exp", ",", "varOrder"}], "]"}]}], "//", "Normal"}], "//", 
     RowBox[{"RulesVarPattern", "[", "pattern", "]"}]}]}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", "*)"}], "\[IndentingNewLine]", 
   RowBox[{"Clear", "[", "tuRepeat", "]"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"tuRepeat", "::", "usage"}], "=", 
     "\"\<tuRepeat[rules_List:{},operations_:{},nInterate_:100][exp_] applies \
rules_List and operations_ (may be List) repeatedly until exp_ does not \
change. nInterate_ sets MaxInterations in ReplaceRepeated and While[] loop. \
*22Feb2016*\>\""}], " ", ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"tuRepeat", "[", 
       RowBox[{
        RowBox[{"rules_List:", 
         RowBox[{"{", "}"}]}], ",", 
        RowBox[{"operations_:", 
         RowBox[{"{", "}"}]}], ",", 
        RowBox[{"nInterate_:", "100"}]}], "]"}], "[", "exp_", "]"}], ":=", 
     " ", 
     RowBox[{"Module", " ", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"$IterationLimit", "=", "20"}], ",", "xrule", ",", "xop", 
         ",", 
         RowBox[{"tmp", "=", "exp"}], ",", "tmp0", ",", 
         RowBox[{"icnt", "=", "0"}]}], "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"xrule", "=", 
         RowBox[{"Flatten", "[", 
          RowBox[{"{", "rules", "}"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"xop", "=", 
         RowBox[{"Flatten", "[", 
          RowBox[{"{", "operations", "}"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"xPrint", "[", 
         RowBox[{"xrule", ",", "xop", ",", "$IterationLimit"}], "]"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"While", "[", 
         RowBox[{
          RowBox[{"tmp0", "=!=", "tmp"}], ",", 
          RowBox[{
           RowBox[{"tmp0", "=", "tmp"}], ";", 
           RowBox[{"xPrint", "[", 
            RowBox[{"icnt", ",", "tmp"}], "]"}], ";", 
           RowBox[{"icnt", "++"}], ";", "\[IndentingNewLine]", 
           RowBox[{"xPrint", "[", "xop", "]"}], ";", "\[IndentingNewLine]", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"xop", "=!=", 
              RowBox[{"{", "}"}]}], ",", 
             RowBox[{"tmp", "=", 
              RowBox[{
               RowBox[{"Composition", "[", 
                RowBox[{"Apply", "[", 
                 RowBox[{"Sequence", ",", "xop"}], "]"}], "]"}], "[", "tmp", 
               "]"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"xrule", "=!=", 
              RowBox[{"{", "}"}]}], ",", 
             RowBox[{"tmp", "=", 
              RowBox[{"Fold", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"ReplaceRepeated", "[", 
                  RowBox[{"#1", ",", "#2", ",", 
                   RowBox[{"MaxIterations", "\[Rule]", "nInterate"}]}], "]"}],
                  "&"}], ",", "tmp", ",", "xrule"}], "]"}]}]}], "]"}], ";", 
           RowBox[{"(*", 
            RowBox[{
            "Position", " ", "of", " ", "this", " ", "statement", " ", 
             "affects", " ", 
             RowBox[{"result", "."}]}], "*)"}], "\[IndentingNewLine]", 
           RowBox[{"xPrint", "[", 
            RowBox[{"operation", "=!=", "Null"}], "]"}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"icnt", ">=", "nInterate"}], ",", 
             RowBox[{"Return", "[", "tmp", "]"}]}], "]"}], ";", 
           RowBox[{"xPrint", "[", "$IterationLimit", "]"}], ";"}]}], 
         "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", "tmp"}]}], 
      "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"TEST", "\[IndentingNewLine]", 
      RowBox[{"(", 
       RowBox[{"a", "+", "b"}], ")"}]}], "//", 
     RowBox[{"tuRepeat", "[", 
      RowBox[{
       RowBox[{"{", "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"#", "/.", 
           RowBox[{"a", "\[Rule]", "c"}]}], "&"}], ",", 
         RowBox[{
          RowBox[{"#", "/.", 
           RowBox[{"b", "\[Rule]", "d"}]}], "&"}]}], "}"}]}], "]"}]}], 
    "\[IndentingNewLine]", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Clear", "[", "tuAppendUniq", "]"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"tuAppendUniq", "::", "usage"}], "=", 
     "\"\<tuAppendUniq[item_][list_] combines item_ and list_, Flatten, and \
DeleteDuplicates\>\""}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"tuAppendUniq", "[", "item_", "]"}], "[", "list_", "]"}], ":=", 
     
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", "$", "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{"$", "=", 
        RowBox[{
         RowBox[{
          RowBox[{"Append", "[", 
           RowBox[{
            RowBox[{"{", "list", "}"}], ",", 
            RowBox[{"{", "item", "}"}]}], "]"}], "//", "Flatten"}], "//", 
         "DeleteDuplicates"}]}]}], "\[IndentingNewLine]", "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", "*)"}], "\[IndentingNewLine]", 
   RowBox[{"Clear", "[", "tuProductExpand", "]"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"tuProductExpand", "::", "usage"}], "=", 
     "\"\<tuProductExpand[op_:Times][exp_] expands Product|xProduct \
operations in exp_ with op_ as product operator. This routine needs Numerical \
range of productOp[_,{i,9}]. *30Oct2015*\>\""}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"tuProductExpand", "[", 
       RowBox[{"op_:", "Times"}], "]"}], "[", "exp_", "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"$", "=", "exp"}], ",", 
         RowBox[{"productOp", "=", 
          RowBox[{"Product", "|", "xProduct"}]}]}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"$", "=", 
        RowBox[{"$", "/.", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"pp", ":", "productOp"}], ")"}], "[", 
           RowBox[{"a_", ",", "b__"}], "]"}], "\[RuleDelayed]", 
          RowBox[{"op", "@@", 
           RowBox[{"Table", "[", 
            RowBox[{"a", ",", "b"}], "]"}]}]}]}]}]}], "\[IndentingNewLine]", 
      "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"tuTermSelect", "::", "usage"}], "=", 
     "\"\<tuTermSelect[patterns_:{},nopattern_:{},withPositions_:False][exp_]\
\.08\.08\.08\.08 extracts terms which match all patterns_(List) and no \
nopattern_ in a Plus expression.  withPositions_\[Rule]True returns List of \
terms with their positions. *7Mar2016*\>\""}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"tuTermSelect", "[", 
       RowBox[{
        RowBox[{"patterns_:", 
         RowBox[{"{", "}"}]}], ",", 
        RowBox[{"nopattern_:", 
         RowBox[{"{", "}"}]}], ",", 
        RowBox[{"withPositions_:", "False"}]}], "]"}], "[", "exp_", "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"$", ",", "$s"}], "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"$", "=", 
         RowBox[{"exp", "/.", 
          RowBox[{"Plus", "\[Rule]", 
           RowBox[{"Inactive", "[", "Plus", "]"}]}]}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"$", "=", 
         RowBox[{"$", "//", 
          RowBox[{"tuExtractPositionPattern", "[", 
           RowBox[{
            RowBox[{"Inactive", "[", "Plus", "]"}], "[", "__", "]"}], 
           "]"}]}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"$", "=", 
         RowBox[{"$", "//", "tuPositionNestDelete"}]}], ";", 
        RowBox[{"(*", 
         RowBox[{"top", " ", "most", " ", "Plus"}], "*)"}], 
        "\[IndentingNewLine]", 
        RowBox[{"$", "=", 
         RowBox[{"Map", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"MapAt", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"Apply", "[", 
                RowBox[{"List", ",", "#"}], "]"}], "&"}], ",", "#", ",", 
              "2"}], "]"}], "&"}], ",", "$"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"$", "=", 
         RowBox[{"Select", "[", 
          RowBox[{
           RowBox[{"Flatten", "[", 
            RowBox[{"$", "[", 
             RowBox[{"[", 
              RowBox[{"1", ",", "2"}], "]"}], "]"}], "]"}], ",", 
           RowBox[{
            RowBox[{"tuHasAllQ", "[", 
             RowBox[{"#", ",", 
              RowBox[{"Flatten", "[", 
               RowBox[{"{", "patterns", "}"}], "]"}]}], "]"}], "&"}]}], 
          "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"$", "=", 
         RowBox[{"Select", "[", 
          RowBox[{"$", ",", 
           RowBox[{
            RowBox[{"tuHasNoneQ", "[", 
             RowBox[{"#", ",", 
              RowBox[{"Flatten", "[", 
               RowBox[{"{", "nopattern", "}"}], "]"}]}], "]"}], "&"}]}], 
          "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"$", "=", 
         RowBox[{"$", "//", "Activate"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{"withPositions", ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"$", "=", 
            RowBox[{"exp", "//", 
             RowBox[{"tuExtractPositionPattern", "[", "$", "]"}]}]}], ";"}]}],
          "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", "$"}]}], 
      "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Clear", "[", "tuTermExtract", "]"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"tuTermExtract", "::", "usage"}], "=", 
     "\"\<tuTermExtract[pattern_,nopattern_List:{}][exp_] Apply[]s Plus to \
tuTermSelect[] items *5May2015*\>\""}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"tuTermExtract", "[", 
       RowBox[{"pattern_", ",", 
        RowBox[{"nopattern_List:", 
         RowBox[{"{", "}"}]}]}], "]"}], "[", "exp_", "]"}], ":=", 
     RowBox[{"Apply", "[", 
      RowBox[{"Plus", ",", 
       RowBox[{
        RowBox[{"tuTermSelect", "[", 
         RowBox[{
          RowBox[{"Flatten", "[", 
           RowBox[{"{", "pattern", "}"}], "]"}], ",", 
          RowBox[{"Flatten", "[", 
           RowBox[{"{", "nopattern", "}"}], "]"}]}], "]"}], "[", "exp", 
        "]"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Clear", "[", "tuTermApply", "]"}], ";"}], "\[IndentingNewLine]", 
   
   RowBox[{
    RowBox[{
     RowBox[{"tuTermApply", "::", "usage"}], "=", 
     "\"\<tuTermApply[selectPattern_List:{},noselectPattern_List:{},rules_\
List:{},operations_List:{},showRule_:Null,nIterations_:10][exp_] selects \
terms in expression exp_ based upon selectPattern_List and \
noselectPattern_List, and applies rules_List,operations_List to the SUM of \
selected terms using tuRepeat[]. nInterate_ determines the the number of \
iterations used in tuRepeat[].  It returns altered exp_ or if \
showRule_=!=Null returns {Rule,result}. *18May2016*\>\""}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"tuTermApply", "[", 
       RowBox[{
        RowBox[{"selectPattern_List:", 
         RowBox[{"{", "}"}]}], ",", 
        RowBox[{"noselectPattern_List:", 
         RowBox[{"{", "}"}]}], ",", 
        RowBox[{"rules_List:", 
         RowBox[{"{", "}"}]}], ",", 
        RowBox[{"operations_List:", 
         RowBox[{"{", "}"}]}], ",", 
        RowBox[{"showRule_:", "Null"}], ",", 
        RowBox[{"nIterations_:", "10"}]}], "]"}], "[", "exp_", "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"$0", ",", "$", ",", "$s"}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"$", "=", 
         RowBox[{"exp", "//", "ExpandAll"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"$s0", "=", 
         RowBox[{"$s", "=", 
          RowBox[{"$", "//", 
           RowBox[{"tuTermExtract", "[", 
            RowBox[{"selectPattern", ",", "noselectPattern"}], "]"}]}]}]}], 
        ";", 
        RowBox[{"(*", 
         RowBox[{"return", " ", 
          RowBox[{"Plus", "[", "terms", "]"}]}], "*)"}], 
        "\[IndentingNewLine]", 
        RowBox[{"$s", "=", 
         RowBox[{"$s", "//", 
          RowBox[{"tuRepeat", "[", 
           RowBox[{
            RowBox[{"tuRule", "[", "rules", "]"}], ",", "operations", ",", 
            "nIterations"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"$s", "=", 
         RowBox[{"(", 
          RowBox[{"$s0", "\[Rule]", "$s"}], ")"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"showRule", "=!=", "Null"}], ",", 
          RowBox[{"{", 
           RowBox[{"$s", ",", 
            RowBox[{"$", "/.", "$s"}]}], "}"}], ",", 
          RowBox[{"$", "/.", "$s"}]}], "]"}]}]}], "\[IndentingNewLine]", 
      "]"}]}], ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Clear", "[", "tuTermApplyEach", "]"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"tuTermApplyEach", "::", "usage"}], "=", 
     "\"\<tuTermApplyEach[selectPattern_List:{},noselectPattern_List:{},rules_\
List:{},operations_List:{},nIterations_:10][exp_] selects Level[1] Plus[] \
terms in expression exp_ and based upon selectPattern_List and \
noselectPattern_List applies rules_List, operations_List to the EACH selected \
terms using tuRepeat[]. It returns altered exp_.  \
*18May2016**1Mar2018*\>\""}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"tuTermApplyEach", "[", 
       RowBox[{
        RowBox[{"selectPattern_List:", 
         RowBox[{"{", "}"}]}], ",", 
        RowBox[{"noselectPattern_List:", 
         RowBox[{"{", "}"}]}], ",", 
        RowBox[{"rules_List:", 
         RowBox[{"{", "}"}]}], ",", 
        RowBox[{"operations_List:", 
         RowBox[{"{", "}"}]}], ",", 
        RowBox[{"nIterations_:", "10"}]}], "]"}], "[", "exp_", "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"$", ",", "xfnc"}], "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"xfnc", "[", "$_", "]"}], ":=", 
         RowBox[{"Module", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"$s0", ",", "$s"}], "}"}], ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"$s0", "=", 
             RowBox[{"$s", "=", 
              RowBox[{"$", "//", 
               RowBox[{"tuTermSelect", "[", 
                RowBox[{"selectPattern", ",", "noselectPattern"}], 
                "]"}]}]}]}], ";", "\[IndentingNewLine]", 
            RowBox[{"$s", "=", 
             RowBox[{
              RowBox[{"tuRepeat", "[", 
               RowBox[{
                RowBox[{"tuRule", "[", "rules", "]"}], ",", "operations", ",",
                 "nIterations"}], "]"}], "/@", "$s0"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"$s", "=", 
             RowBox[{"Apply", "[", 
              RowBox[{"Plus", ",", "$s"}], "]"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"$s0", "=", 
             RowBox[{"Apply", "[", 
              RowBox[{"Plus", ",", "$s0"}], "]"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"$", "+", "$s", "-", "$s0"}]}]}], "\[IndentingNewLine]", 
          "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"$", "=", 
         RowBox[{"exp", "//", "ExpandAll"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"$", "/.", 
          RowBox[{"Plus", "\[Rule]", "xPlus"}]}], "/.", 
         RowBox[{
          RowBox[{"xPlus", "[", "a__", "]"}], "\[RuleDelayed]", 
          RowBox[{"xfnc", "[", 
           RowBox[{"Plus", "[", "a", "]"}], "]"}]}]}]}]}], 
      "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"tuRelatedElements", "::", "usage"}], "=", 
     "\"\<tuRelatedElements[termlist_List,operations_:{Conjugate},reals_] is \
prototype routine to determine if elements of termlist_List are related to \
one another.  Simple tests are performed: {Ratio, Conjugate Ratio}. A list of \
index pairs are returned indicating what was discovered about the pairs.  If \
no relationship was found then the If[] statement contains the Equality test \
statement. *3Apr2016* \>\""}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"tuRelatedElements", "[", 
      RowBox[{"termlist_List", ",", 
       RowBox[{"operations_:", 
        RowBox[{"{", "Conjugate", "}"}]}], ",", "reals_"}], "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"table", ",", "tlist", ",", "$", ",", 
         RowBox[{"listN", "=", 
          RowBox[{"Length", "[", "termlist", "]"}]}], ",", "list", ",", "i", 
         ",", "ii", ",", "a$", ",", "Ntlist"}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{"Make", " ", "table"}], "*)"}], "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"tlist", "=", 
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"i", ",", "j"}], "}"}], ",", 
              RowBox[{"termlist", "[", 
               RowBox[{"[", "i", "]"}], "]"}], ",", 
              RowBox[{"termlist", "[", 
               RowBox[{"[", "j", "]"}], "]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "listN"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"j", ",", 
              RowBox[{"i", "+", "1"}], ",", "listN"}], "}"}]}], "]"}], "//", 
          RowBox[{
           RowBox[{"Flatten", "[", 
            RowBox[{"#", ",", "1"}], "]"}], "&"}]}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"Ntlist", "=", 
         RowBox[{"Length", "[", "tlist", "]"}]}], ";", "\[IndentingNewLine]", 
        
        RowBox[{"xPrint", "[", 
         RowBox[{"tlist", ",", "\"\<<<<\>\"", ",", "Ntlist"}], "]"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{"Equal", " ", "test"}], "*)"}], "\[IndentingNewLine]", 
        RowBox[{"CellPrint", "[", "\"\<Equal test \>\"", "]"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"tlist", "=", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"tlist", "\[LeftDoubleBracket]", 
              RowBox[{"ii", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"tlist", "\[LeftDoubleBracket]", 
                 RowBox[{"ii", ",", "2"}], "\[RightDoubleBracket]"}], "==", 
                RowBox[{"tlist", "\[LeftDoubleBracket]", 
                 RowBox[{"ii", ",", "3"}], "\[RightDoubleBracket]"}]}], ",", 
               "\"\<DirectlyEqual\>\""}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"ii", ",", "Ntlist"}], "}"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"xPrint", "[", 
         RowBox[{
          RowBox[{"ColumnBar", "[", "tlist", "]"}], ",", "\"\<<<<<\>\""}], 
         "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{"operation", " ", "tests"}], "*)"}], "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{"ratio", " ", "test"}], " ", "*)"}], "\[IndentingNewLine]", 
        RowBox[{"CellPrint", "[", "\"\<Numeric factor test \>\"", "]"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"For", "[", 
         RowBox[{
          RowBox[{"ii", "=", "1"}], ",", 
          RowBox[{"ii", "\[LessEqual]", "Ntlist"}], ",", 
          RowBox[{"ii", "++"}], ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"tuHasAnyQ", "[", 
              RowBox[{
               RowBox[{
               "tlist", "\[LeftDoubleBracket]", "ii", 
                "\[RightDoubleBracket]"}], ",", "If"}], "]"}], ",", 
             RowBox[{
              RowBox[{"xPrint", "[", 
               RowBox[{"\"\<>>\>\"", ",", 
                RowBox[{
                "tlist", "\[LeftDoubleBracket]", "ii", 
                 "\[RightDoubleBracket]"}]}], " ", "]"}], ";", 
              RowBox[{"(*", 
               RowBox[{"equality", " ", "not", " ", "found"}], "*)"}], 
              "\[IndentingNewLine]", 
              RowBox[{"$", "=", 
               RowBox[{
                RowBox[{"tuExtractPattern", "[", 
                 RowBox[{"If", "[", "__", "]"}], "]"}], "[", 
                RowBox[{
                "tlist", "\[LeftDoubleBracket]", "ii", 
                 "\[RightDoubleBracket]"}], "]"}]}], ";", 
              RowBox[{"xPrint", "[", 
               RowBox[{"\"\<>>If>>\>\"", ",", 
                RowBox[{"$", "[", 
                 RowBox[{"[", 
                  RowBox[{"1", ",", "1"}], "]"}], "]"}]}], " ", "]"}], ";", 
              "\[IndentingNewLine]", 
              RowBox[{"$", "=", 
               RowBox[{
                RowBox[{
                 RowBox[{
                  RowBox[{"$", "[", 
                   RowBox[{"[", 
                    RowBox[{"1", ",", "1", ",", "1"}], "]"}], "]"}], 
                  "\[Equal]", 
                  RowBox[{"a$", " ", 
                   RowBox[{"$", "[", 
                    RowBox[{"[", 
                    RowBox[{"1", ",", "1", ",", "2"}], "]"}], "]"}]}]}], "//", 
                 RowBox[{
                  RowBox[{"Solve", "[", 
                   RowBox[{"#", ",", "a$"}], "]"}], "&"}]}], "//", 
                "Simplify"}]}], ";", 
              RowBox[{"xPrint", "[", 
               RowBox[{"\"\<>>>> \>\"", ",", "$", " ", ",", 
                RowBox[{"$", "[", 
                 RowBox[{"[", 
                  RowBox[{"1", ",", "1", ",", "2"}], "]"}], "]"}]}], "]"}], 
              ";", "\[IndentingNewLine]", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{"NumericQ", "[", 
                 RowBox[{"$", "[", 
                  RowBox[{"[", 
                   RowBox[{"1", ",", "1", ",", "2"}], "]"}], "]"}], "]"}], 
                ",", 
                RowBox[{
                 RowBox[{
                 "tlist", "\[LeftDoubleBracket]", "ii", 
                  "\[RightDoubleBracket]"}], "=", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"tlist", "\[LeftDoubleBracket]", 
                    RowBox[{"ii", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
                   "\"\<FactorEqual\>\"", ",", 
                   RowBox[{"$", "[", 
                    RowBox[{"[", 
                    RowBox[{"1", ",", "1", ",", "2"}], "]"}], "]"}]}], 
                  "}"}]}]}], "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], 
           ";"}]}], "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
        
        RowBox[{"CellPrint", "[", "\"\<Conjugate factor test \>\"", "]"}], 
        ";", "\[IndentingNewLine]", 
        RowBox[{"For", "[", 
         RowBox[{
          RowBox[{"ii", "=", "1"}], ",", 
          RowBox[{"ii", "\[LessEqual]", "Ntlist"}], ",", 
          RowBox[{"ii", "++"}], ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"tuHasAnyQ", "[", 
              RowBox[{
               RowBox[{
               "tlist", "\[LeftDoubleBracket]", "ii", 
                "\[RightDoubleBracket]"}], ",", "If"}], "]"}], ",", 
             RowBox[{
              RowBox[{"xPrint", "[", 
               RowBox[{"\"\<>>\>\"", ",", 
                RowBox[{
                "tlist", "\[LeftDoubleBracket]", "ii", 
                 "\[RightDoubleBracket]"}]}], " ", "]"}], ";", 
              RowBox[{"(*", 
               RowBox[{"equality", " ", "not", " ", "found"}], "*)"}], 
              "\[IndentingNewLine]", 
              RowBox[{"$", "=", 
               RowBox[{
                RowBox[{"tuExtractPattern", "[", 
                 RowBox[{"If", "[", "__", "]"}], "]"}], "[", 
                RowBox[{
                "tlist", "\[LeftDoubleBracket]", "ii", 
                 "\[RightDoubleBracket]"}], "]"}]}], ";", 
              RowBox[{"xPrint", "[", 
               RowBox[{"\"\<>CF>If>>\>\"", ",", 
                RowBox[{"$", "[", 
                 RowBox[{"[", 
                  RowBox[{"1", ",", "1"}], "]"}], "]"}]}], " ", "]"}], ";", 
              "\[IndentingNewLine]", 
              RowBox[{"$", "=", 
               RowBox[{
                RowBox[{
                 RowBox[{
                  RowBox[{
                   RowBox[{"$", "[", 
                    RowBox[{"[", 
                    RowBox[{"1", ",", "1", ",", "1"}], "]"}], "]"}], 
                   "\[Equal]", 
                   RowBox[{"a$", " ", 
                    RowBox[{"Conjugate", "[", 
                    RowBox[{"$", "[", 
                    RowBox[{"[", 
                    RowBox[{"1", ",", "1", ",", "2"}], "]"}], "]"}], 
                    "]"}]}]}], "//", 
                  RowBox[{"tuConjugateSimplify", "[", "reals", "]"}]}], "//", 
                 
                 RowBox[{
                  RowBox[{"Solve", "[", 
                   RowBox[{"#", ",", "a$"}], "]"}], "&"}]}], "//", 
                "Simplify"}]}], ";", 
              RowBox[{"xPrint", "[", 
               RowBox[{"\"\<>>CF>> \>\"", ",", "$", " ", ",", 
                RowBox[{"$", "[", 
                 RowBox[{"[", 
                  RowBox[{"1", ",", "1", ",", "2"}], "]"}], "]"}]}], "]"}], 
              ";", "\[IndentingNewLine]", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{"NumericQ", "[", 
                 RowBox[{"$", "[", 
                  RowBox[{"[", 
                   RowBox[{"1", ",", "1", ",", "2"}], "]"}], "]"}], "]"}], 
                ",", 
                RowBox[{
                 RowBox[{
                 "tlist", "\[LeftDoubleBracket]", "ii", 
                  "\[RightDoubleBracket]"}], "=", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"tlist", "\[LeftDoubleBracket]", 
                    RowBox[{"ii", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
                   "\"\<ConjugateFactorEqual\>\"", ",", 
                   RowBox[{"$", "[", 
                    RowBox[{"[", 
                    RowBox[{"1", ",", "1", ",", "2"}], "]"}], "]"}]}], 
                  "}"}]}]}], "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], 
           ";"}]}], "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
        "tlist"}]}], "\[IndentingNewLine]", "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"tuConnectedPairs", "::", "usage"}], "=", 
     "\"\<tuConnectedPairs[list_List] returns a list of lists that have \
associate common elements, i.e. {1,2},{2,3},{3,4} are all related. list_List \
is a list of pairs to be grouped. *6Apr2016*\>\""}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"tuConnectedPairs", "[", "list_List", "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"$", ",", 
         RowBox[{"$0", "=", "list"}], ",", "nlist", ",", "point", ",", "grp", 
         ",", "xgrp", ",", 
         RowBox[{"groups", "=", 
          RowBox[{"{", "}"}]}], ",", "test", ",", "xpoint"}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"nlist", "=", 
         RowBox[{"Length", "[", "$0", "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"point", "=", 
         RowBox[{
          RowBox[{"$0", "//", "Flatten"}], "//", "DeleteDuplicates"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"While", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Length", "[", "point", "]"}], "\[GreaterEqual]", "1"}], 
          ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"grp", "=", 
            RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"test", "=", 
            RowBox[{"point", "//", "First"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"point", "=", 
            RowBox[{"point", "//", "Rest"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"While", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Length", "[", 
               RowBox[{"xgrp", "=", 
                RowBox[{"Select", "[", 
                 RowBox[{"$0", ",", 
                  RowBox[{
                   RowBox[{"tuHasAnyQ", "[", 
                    RowBox[{"#", ",", 
                    RowBox[{"xpoint", "=", 
                    RowBox[{"Flatten", "[", 
                    RowBox[{"{", 
                    RowBox[{"test", ",", "grp"}], "}"}], "]"}]}]}], "]"}], 
                   "&"}]}], "]"}]}], "]"}], ">", "0"}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"$0", "=", 
               RowBox[{"Select", "[", 
                RowBox[{"$0", ",", 
                 RowBox[{
                  RowBox[{"tuHasNoneQ", "[", 
                   RowBox[{"#", ",", "xpoint"}], "]"}], "&"}]}], "]"}]}], ";",
               "\[IndentingNewLine]", 
              RowBox[{"grp", "=", 
               RowBox[{"Join", "[", 
                RowBox[{"grp", ",", "xgrp"}], "]"}]}], ";", 
              "\[IndentingNewLine]", 
              RowBox[{"point", "=", 
               RowBox[{"Select", "[", 
                RowBox[{"point", ",", 
                 RowBox[{
                  RowBox[{"tuHasNoneQ", "[", 
                   RowBox[{"#", ",", "xpoint"}], "]"}], "&"}]}], "]"}]}], 
              ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"grp", "\[NotEqual]", 
              RowBox[{"{", "}"}]}], ",", "\[IndentingNewLine]", 
             RowBox[{"groups", "=", 
              RowBox[{"Append", "[", 
               RowBox[{"groups", ",", "grp"}], "]"}]}]}], "]"}], ";"}]}], 
         "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
        "groups"}]}], "\[IndentingNewLine]", "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"tuPositionNestDelete", "::", "usage"}], "=", 
     "\"\<tuPositionNestDelete[position_List] reduces the result of Position\
\[Rule] position_List so that there is only top level positions. E.G. {{1,2}\
\[Rule]a,{1}\[Rule]r[a]}\[Rule]{{1}->r[a]}. If pointer to whole expression {} \
exists then that alone is returned.  *11Feb2017*\>\""}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"tuPositionNestDelete", "[", "position_List", "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"$", "=", "position"}], ",", "$p", ",", "dup", ",", "$n", 
         ",", "$t", ",", "i"}], "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"$p", "=", 
         RowBox[{"$", "=", 
          RowBox[{"Map", "[", 
           RowBox[{
            RowBox[{"#", "&"}], ",", 
            RowBox[{"Sort", "[", "$", "]"}]}], "]"}]}]}], ";", 
        RowBox[{"xPrint", "[", "$p", "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"$p", "[", 
            RowBox[{"[", 
             RowBox[{"1", ",", "1"}], "]"}], "]"}], "\[Equal]", 
           RowBox[{"{", "}"}]}], ",", 
          RowBox[{"Return", "[", 
           RowBox[{"{", 
            RowBox[{"$p", "[", 
             RowBox[{"[", "1", "]"}], "]"}], "}"}], "]"}]}], "]"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{"If", " ", 
          RowBox[{"{", "}"}], " ", "return", " ", "whole", " ", 
          RowBox[{"expression", "."}]}], "*)"}], "\[IndentingNewLine]", 
        RowBox[{"Do", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"$t", "=", 
            RowBox[{"$p", "[", 
             RowBox[{"[", 
              RowBox[{"i", ",", "1"}], "]"}], "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"$n", "=", 
            RowBox[{
             RowBox[{"FirstPosition", "[", 
              RowBox[{"$t", " ", ",", "0"}], "]"}], "[", 
             RowBox[{"[", "1", "]"}], "]"}]}], ";", 
           RowBox[{"(*", 
            RowBox[{"Head", " ", "index"}], "*)"}], "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"$p", "[", 
             RowBox[{"[", 
              RowBox[{"i", ",", "1"}], "]"}], "]"}], "=", 
            RowBox[{"$t", "[", 
             RowBox[{"[", 
              RowBox[{"1", ";;", 
               RowBox[{"(", 
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{"NumericQ", "[", "$n", " ", "]"}], ",", 
                  RowBox[{"$n", "-", "1"}], ",", 
                  RowBox[{"-", "1"}]}], "]"}], ")"}]}], "]"}], "]"}]}]}], ",",
           "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{"i", ",", 
            RowBox[{"Length", "[", "$p", "]"}]}], "}"}]}], 
         "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{"delete", " ", "subindices"}], "*)"}], "\[IndentingNewLine]",
         
        RowBox[{"Do", "[", 
         RowBox[{
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"MemberQ", "[", 
             RowBox[{
              RowBox[{"SequencePosition", "[", 
               RowBox[{
                RowBox[{"$p", "[", 
                 RowBox[{"[", 
                  RowBox[{"$j", ",", "1"}], "]"}], "]"}], ",", 
                RowBox[{"$p", "[", 
                 RowBox[{"[", 
                  RowBox[{"$i", ",", "1"}], "]"}], "]"}]}], "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"1", ",", "___"}], "}"}]}], "]"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"$", "[", 
              RowBox[{"[", "$j", "]"}], "]"}], "=", 
             RowBox[{"dup", "[", 
              RowBox[{"$i", ",", 
               RowBox[{"$", "[", 
                RowBox[{"[", "$j", "]"}], "]"}]}], "]"}]}]}], "]"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{"$i", ",", 
            RowBox[{
             RowBox[{"Length", "[", "$", "]"}], "-", "1"}]}], "}"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{"$j", ",", 
            RowBox[{"$i", "+", "1"}], ",", 
            RowBox[{"Length", "[", "$", "]"}]}], "}"}]}], "]"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"DeleteCases", "[", 
         RowBox[{"$", ",", 
          RowBox[{"dup", "[", "__", "]"}]}], "]"}]}]}], "\[IndentingNewLine]",
       "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"tuPositionHighestLevel", "::", "usage"}], "=", 
     "\"\<tuPositionHighesttLevel[position_List] returns only the outer-most \
leaves of position_List. *23Jun2017*\>\""}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"tuPositionHighesttLevel", "[", "position_List", "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"$", "=", "position"}], ",", "$p", ",", "dup", ",", "$n", 
         ",", "$t", ",", "i", ",", "NO"}], "}"}], ",", "\[IndentingNewLine]", 
       
       RowBox[{
        RowBox[{"$p", "=", 
         RowBox[{"$", "=", 
          RowBox[{"Map", "[", 
           RowBox[{
            RowBox[{"#", "&"}], ",", 
            RowBox[{"Sort", "[", "$", "]"}]}], "]"}]}]}], ";", 
        RowBox[{"xPrint", "[", "$p", "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"$p", "=", 
         RowBox[{"DeleteCases", "[", 
          RowBox[{"$p", ",", 
           RowBox[{
            RowBox[{"{", "}"}], "\[Rule]", "_"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"Do", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"$p", "[", 
               RowBox[{"[", 
                RowBox[{
                 RowBox[{"i", "+", "1"}], ",", "1"}], "]"}], "]"}], "[", 
              RowBox[{"[", 
               RowBox[{"1", ";;", 
                RowBox[{"Length", "[", 
                 RowBox[{"$p", "[", 
                  RowBox[{"[", 
                   RowBox[{"i", ",", "1"}], "]"}], "]"}], "]"}]}], "]"}], 
              "]"}], "==", 
             RowBox[{"$p", "[", 
              RowBox[{"[", 
               RowBox[{"i", ",", "1"}], "]"}], "]"}]}], ",", 
            RowBox[{
             RowBox[{
              RowBox[{"$p", "[", 
               RowBox[{"[", 
                RowBox[{"i", ",", "1"}], "]"}], "]"}], "=", "NO"}], ";", 
             RowBox[{"$i", "++"}]}]}], "]"}], ",", "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{"i", ",", 
            RowBox[{
             RowBox[{"Length", "[", "$p", "]"}], "-", "1"}]}], "}"}]}], 
         "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"xPrint", "[", "$p", "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"$p", "=", 
         RowBox[{"DeleteCases", "[", 
          RowBox[{"$p", ",", 
           RowBox[{"NO", "\[Rule]", "_"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", "$p"}]}], "\[IndentingNewLine]", "]"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", "TEST", "*)"}], "\[IndentingNewLine]", 
   RowBox[{"(*", "\[IndentingNewLine]", 
    RowBox[{"$", "=", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{"1", ",", "2", ",", "3"}], "}"}], "\[Rule]", "a"}], ",", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"1", ",", "2"}], "}"}], "\[Rule]", "b"}], ",", 
         RowBox[{
          RowBox[{"{", "}"}], "\[Rule]", "all"}]}], "}"}], 
       "\[IndentingNewLine]", "$"}], "//", "tuPositionLowestLevel"}]}], 
    "\[IndentingNewLine]", "*)"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"tuIndependentVar", "::", "usage"}], "=", 
     "\"\<tuIndependentVar[independentVars_][exp_ ] evaluates exp_ hiding \
independentVars_ in the evaluation as in the case where there may be \
subscripted and non-subscripted variables with identical symbols in exp_, but \
they would be considered different variables.  tuIndependentVar returns \
List[] \[Rule] {exp_ with independentVars_ substituted, Rules to return \
substituted exp_ into original variables}. E.g., \
\[IndentingNewLine]$=Inactive[D][\!\(\*SuperscriptBox[SubscriptBox[\(\[Sigma]\
\), \(i\)], \(2\)]\)+\!\(\*SuperscriptBox[\(\[Sigma]\), \
\(2\)]\),\[Sigma]]//tuIndependentVar[{tuDPartial[_,_],\!\(\*SubscriptBox[\(_\)\
, \(_\)]\)}]//Activate//(#[[1]]//.#[[2]]&),\n    \
$=Hold[\!\(\*SubscriptBox[\(r\), \(i\)]\) \
r/.r\[Rule]s]//tuVar2String[{tuDPartial[_,_],\!\(\*SubscriptBox[\(_\), \(_\)]\
\)}]//(ReleaseHold[#[[1]]]//.#[[2]]&).\n\tEvaluation of exp_ must be \
suspended by Inactive or Hold (depending on what works for exp_) and \
reactivated after tuIndependentVar.  independentVars_ can be a List of \
patterns. *22Feb2017*\>\""}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"tuIndependentVar", "[", "independentVars_", "]"}], "[", "exp_",
       " ", "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"$", "=", "exp"}], ",", "$p", " ", ",", "independentPos", 
         ",", "independents", ",", "independentLab", ",", "Is", ",", "IIII", 
         ",", "subIIII", ",", "SolveArgs", ",", "ivars", ",", "xpower"}], 
        "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
        "independentVars", " ", "need", " ", "dummy", " ", "labels", " ", 
         "incase", " ", "unclothed", " ", "independentVars", " ", "is", " ", 
         "in", " ", "vars_"}], " ", "*)"}], "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"independentPos", "=", 
         RowBox[{"ExtractPositionPattern", "[", 
          RowBox[{"$", ",", "independentVars"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"independents", "=", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"#", "[", 
             RowBox[{"[", "2", "]"}], "]"}], "&"}], "/@", "independentPos"}], 
          "//", "DeleteDuplicates"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"independentLab", "=", 
         RowBox[{"MapIndexed", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"#1", "->", 
             RowBox[{"IIII", "[", 
              RowBox[{"First", "[", "#2", "]"}], "]"}]}], "&"}], ",", 
           "independents"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"subIIII", "=", 
         RowBox[{"independentPos", "//.", "independentLab"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"$p", "=", 
         RowBox[{"ReplacePart", "[", 
          RowBox[{"$", ",", "subIIII"}], "]"}]}], ";", 
        RowBox[{"xPrint", "[", 
         RowBox[{"SolveArgs", ",", "\"\<:\>\"", ",", "subIIII"}], "]"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{"$p", ",", 
          RowBox[{"Reverse", "/@", "independentLab"}]}], "}"}]}]}], 
      "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", "*)"}], 
   RowBox[{
    RowBox[{
     RowBox[{"tuArraySimplify", "::", "usage"}], "=", 
     "\"\<tuArraySimplify[exp_] extracts common multiplicative factors from \
List, Matrices, CircleTimes, etc. and outputs the \
factor\[CenterDot]reduced_exp_. *25Mar2017*\>\""}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"tuArraySimplify", "[", "exp_", "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"$0", "=", "exp"}], ",", "$", ",", "$common"}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"$", "=", 
         RowBox[{"Flatten", "[", 
          RowBox[{"Apply", "[", 
           RowBox[{"List", ",", "$0"}], "]"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"$", "=", 
         RowBox[{"$", "//.", 
          RowBox[{"productOps", "\[Rule]", "Times"}]}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"$common", "=", 
         RowBox[{"Apply", "[", 
          RowBox[{"Intersection", ",", "$"}], "]"}]}], ";", 
        RowBox[{"xPrint", "[", 
         RowBox[{"$", ",", "\"\< \>\"", ",", "$common"}], "]"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"$common", "=", 
         RowBox[{"Apply", "[", 
          RowBox[{"Times", ",", "$common"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"$", "=", 
         RowBox[{"Map", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"#", "/", "$common"}], "&"}], ",", "$0"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"$", "=", " ", 
         RowBox[{"$common", " ", "\[CenterDot]", " ", "$"}]}]}]}], 
      "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", "*)"}], "\[IndentingNewLine]", 
   RowBox[{"Clear", "[", "tuConstantsNone", "]"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"tuConstantsNone", "::", "usage"}], "=", 
     "\"\<tuConstantsNone[constants_:{}][EXP_?(tuMemberQ[Head[#],productOps]||\
tuHasNoneQ[Head[#],{Plus}]&)] returns the non-constant or non-NumericQ[] \
parts of EXP_ where EXP_ needs to be a productOps or a non-Plus[] expression. \
The number 1 is returned if only constants_ are found, so tuConstantsNone[] \
may be used easily in product expressions. *21Mar2017*\>\""}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"tuConstantsNone", "[", 
       RowBox[{"constants_:", 
        RowBox[{"{", "}"}]}], "]"}], "[", 
      RowBox[{"EXP_", "?", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"tuMemberQ", "[", 
           RowBox[{
            RowBox[{"Head", "[", "#", "]"}], ",", "productOps"}], "]"}], "||", 
          RowBox[{"tuHasNoneQ", "[", 
           RowBox[{
            RowBox[{"Head", "[", "#", "]"}], ",", 
            RowBox[{"{", "Plus", "}"}]}], "]"}]}], "&"}], ")"}]}], "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"$", "=", "EXP"}], ",", 
         RowBox[{"$const", "=", 
          RowBox[{"Flatten", "[", 
           RowBox[{"{", "constants", "}"}], "]"}]}]}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"Length", "[", "$", "]"}], ">", "1"}], "&&", 
           RowBox[{"tuMemberQ", "[", 
            RowBox[{
             RowBox[{"Head", "[", "$", "]"}], ",", "productOps"}], "]"}]}], 
          ",", "\[IndentingNewLine]", 
          RowBox[{"$", "=", 
           RowBox[{"Select", "[", 
            RowBox[{"$", ",", 
             RowBox[{
              RowBox[{
               RowBox[{"tuHasNoneQ", "[", 
                RowBox[{"#", ",", "$const"}], "]"}], "&&", 
               RowBox[{"!", 
                RowBox[{"NumericQ", "[", "#", "]"}]}]}], "&"}]}], "]"}]}], 
          ",", "\[IndentingNewLine]", 
          RowBox[{"$", "=", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"tuHasNoneQ", "[", 
               RowBox[{"$", ",", "$const"}], "]"}], "&&", 
              RowBox[{"!", 
               RowBox[{"NumericQ", "[", "$", "]"}]}]}], ",", "$", ",", "1"}], 
            "]"}]}]}], "\[IndentingNewLine]", "]"}], ";", 
        "\[IndentingNewLine]", "$"}]}], "\[IndentingNewLine]", "]"}]}], ";"}],
    "\[IndentingNewLine]", 
   RowBox[{"(*", "*)"}], "\[IndentingNewLine]", 
   RowBox[{"Clear", "[", "tuConstants", "]"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"tuConstants", "::", "usage"}], "=", 
     "\"\<tuConstants[constants_:{}][EXP_?(tuMemberQ[Head[#],productOps]||\
tuHasNoneQ[Head[#],{Plus}]&)] returns the constant and NumericQ[] parts of \
EXP_ where EXP_ needs to be a productOps or a non-Plus[] expression. The \
number 1 is returned if no constants_ are found so tuConstants[] may be used \
easily in product expressions. *21Mar2017*\>\""}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"tuConstants", "[", 
       RowBox[{"constants_:", 
        RowBox[{"{", "}"}]}], "]"}], "[", 
      RowBox[{"EXP_", "?", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"tuMemberQ", "[", 
           RowBox[{
            RowBox[{"Head", "[", "#", "]"}], ",", "productOps"}], "]"}], "||", 
          RowBox[{"tuHasNoneQ", "[", 
           RowBox[{
            RowBox[{"Head", "[", "#", "]"}], ",", 
            RowBox[{"{", "Plus", "}"}]}], "]"}]}], "&"}], ")"}]}], "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"$", "=", "EXP"}], ",", 
         RowBox[{"$const", "=", 
          RowBox[{"Flatten", "[", 
           RowBox[{"{", "constants", "}"}], "]"}]}]}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"Length", "[", "$", "]"}], ">", "1"}], "&&", 
           RowBox[{"tuMemberQ", "[", 
            RowBox[{
             RowBox[{"Head", "[", "$", "]"}], ",", "productOps"}], "]"}]}], 
          ",", "\[IndentingNewLine]", 
          RowBox[{"$", "=", 
           RowBox[{"Select", "[", 
            RowBox[{"$", ",", 
             RowBox[{
              RowBox[{
               RowBox[{"tuHasAnyQ", "[", 
                RowBox[{"#", ",", "$const"}], "]"}], "||", 
               RowBox[{"NumericQ", "[", "#", "]"}]}], "&"}]}], "]"}]}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"$", "=", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"tuHasAnyQ", "[", 
               RowBox[{"$", ",", "$const"}], "]"}], "||", 
              RowBox[{"NumericQ", "[", "$", "]"}]}], ",", "$", ",", "1"}], 
            "]"}]}]}], "\[IndentingNewLine]", "]"}], ";", 
        "\[IndentingNewLine]", "$"}]}], "\[IndentingNewLine]", "]"}]}], 
    ";"}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.527879933930221*^9, 3.527880068966152*^9}, 
   3.555432637545333*^9, 3.5554327862608147`*^9, {3.555778199064436*^9, 
   3.555778200178644*^9}, {3.5557782330147963`*^9, 3.5557782677040253`*^9}, {
   3.56440458999321*^9, 3.564404592220203*^9}, 3.5644052361899147`*^9, {
   3.564405290952738*^9, 3.564405301267617*^9}, {3.564405368812229*^9, 
   3.5644054364898977`*^9}, {3.5644056110684757`*^9, 3.564405738816188*^9}, {
   3.5644063471465263`*^9, 3.564406375009626*^9}, 3.564413775437436*^9, {
   3.564841215338243*^9, 3.564841267301989*^9}, {3.5648412981148167`*^9, 
   3.564841302408098*^9}, {3.564841438400856*^9, 3.564841454162277*^9}, {
   3.5648426536876574`*^9, 3.56484266204705*^9}, 3.564844474848049*^9, {
   3.566825760129705*^9, 3.566825774453374*^9}, {3.5701054282640123`*^9, 
   3.570105511224777*^9}, {3.570202732481195*^9, 3.570202743935644*^9}, {
   3.5702029982641487`*^9, 3.5702030026177*^9}, {3.570204924170664*^9, 
   3.5702049338485527`*^9}, {3.5708421697737226`*^9, 3.570842185370248*^9}, {
   3.5708422324014683`*^9, 3.5708422443157473`*^9}, {3.570842287793892*^9, 
   3.570842350294593*^9}, {3.5708423959710903`*^9, 3.5708424294855747`*^9}, {
   3.570842479854141*^9, 3.570842487957382*^9}, {3.570842537170766*^9, 
   3.570842558091651*^9}, {3.5708425881073627`*^9, 3.5708426875465117`*^9}, {
   3.570842743911915*^9, 3.570842760098878*^9}, {3.5708428150620337`*^9, 
   3.57084283337428*^9}, {3.571232025341181*^9, 3.5712320602579823`*^9}, {
   3.571232217102319*^9, 3.571232287814302*^9}, {3.571423438946911*^9, 
   3.571423447071764*^9}, {3.571423784852826*^9, 3.57142390202459*^9}, {
   3.580211541277926*^9, 3.580211548090016*^9}, {3.5802116650011272`*^9, 
   3.580211670178278*^9}, {3.580211715859536*^9, 3.580211717215892*^9}, {
   3.5802117834097967`*^9, 3.580211806362259*^9}, {3.5802118558881693`*^9, 
   3.58021189967804*^9}, {3.580211930414728*^9, 3.580212284412571*^9}, {
   3.5802135309174223`*^9, 3.580213534365768*^9}, {3.5802335866383533`*^9, 
   3.580233628489005*^9}, {3.5829807049019537`*^9, 3.5829807121385202`*^9}, {
   3.582981898748951*^9, 3.5829820384996347`*^9}, {3.58298206872677*^9, 
   3.582982185360135*^9}, {3.58565821277713*^9, 3.585658212977916*^9}, {
   3.585658251871573*^9, 3.585658279453375*^9}, {3.58565834533449*^9, 
   3.585658374721217*^9}, {3.58566055667787*^9, 3.585660653692313*^9}, {
   3.585661887045719*^9, 3.5856619525743723`*^9}, {3.585662044225088*^9, 
   3.585662102933323*^9}, {3.59120299997685*^9, 3.591203115708847*^9}, {
   3.591278590819491*^9, 3.591278670599165*^9}, {3.591279697703107*^9, 
   3.591279800984848*^9}, {3.591279858024741*^9, 3.591279878082447*^9}, {
   3.5912799489576063`*^9, 3.591280044124282*^9}, {3.593010582310853*^9, 
   3.593010601044311*^9}, 3.5931414043509817`*^9, {3.5950446038296843`*^9, 
   3.5950448226006308`*^9}, {3.600094550801159*^9, 3.6000946256273623`*^9}, {
   3.600096438474016*^9, 3.600096482229713*^9}, {3.602345199449703*^9, 
   3.602345223163172*^9}, {3.603817807285123*^9, 3.603817807480733*^9}, {
   3.603886403321327*^9, 3.603886417416297*^9}, {3.603886474800292*^9, 
   3.603886532434333*^9}, {3.60388764981877*^9, 3.6038876673243847`*^9}, {
   3.6096837393445873`*^9, 3.609683752030311*^9}, {3.609683804660714*^9, 
   3.609683947540859*^9}, 3.613307769332349*^9, {3.613307809994637*^9, 
   3.613307935261343*^9}, {3.613307967537713*^9, 3.6133080252685013`*^9}, {
   3.6155581341655893`*^9, 3.615558158073098*^9}, {3.615558211235733*^9, 
   3.615558257720517*^9}, {3.6155744368064623`*^9, 3.6155744380350313`*^9}, {
   3.615576258793644*^9, 3.615576270279748*^9}, {3.616085517140748*^9, 
   3.616085519322427*^9}, {3.6191438139875393`*^9, 3.6191438840274878`*^9}, {
   3.619144223085476*^9, 3.619144260133009*^9}, {3.6191448270362597`*^9, 
   3.619144827246003*^9}, {3.6191448609556923`*^9, 3.619144870237507*^9}, {
   3.619144935681817*^9, 3.619144937645482*^9}, {3.6255780507671347`*^9, 
   3.6255781840965843`*^9}, 3.625852095963048*^9, {3.6279123976449747`*^9, 
   3.6279123982317467`*^9}, {3.627912944255756*^9, 3.62791305394283*^9}, {
   3.6279998756746683`*^9, 3.628000043311988*^9}, {3.62800017526722*^9, 
   3.628000366776074*^9}, {3.629559915487645*^9, 3.62955992870536*^9}, {
   3.63110842818465*^9, 3.631108439295265*^9}, {3.632925121221159*^9, 
   3.632925141638592*^9}, 3.633439384850794*^9, {3.6334394235094767`*^9, 
   3.633439432415629*^9}, {3.633439466571362*^9, 3.633439639541924*^9}, {
   3.6372410381004963`*^9, 3.6372410733739843`*^9}, {3.637243799760573*^9, 
   3.637243802733708*^9}, {3.637436481512479*^9, 3.6374365258854427`*^9}, {
   3.637436632310753*^9, 3.637436657157812*^9}, {3.637436708296692*^9, 
   3.637436767613948*^9}, {3.638890791375991*^9, 3.638890844928903*^9}, {
   3.638890875831894*^9, 3.6388909261255713`*^9}, {3.640347630192172*^9, 
   3.640347634487526*^9}, {3.640430916892605*^9, 3.640431013792721*^9}, {
   3.640431676436893*^9, 3.6404317798077106`*^9}, {3.6407839041163673`*^9, 
   3.640784003028741*^9}, {3.6407840777988873`*^9, 3.640784081199806*^9}, {
   3.6407841561959667`*^9, 3.6407842104238787`*^9}, {3.640832429317177*^9, 
   3.640832438808951*^9}, {3.64087788976925*^9, 3.640878130564004*^9}, 
   3.640974800067192*^9, {3.641044091746071*^9, 3.641044092806292*^9}, {
   3.641044641990127*^9, 3.641044698644519*^9}, {3.6413000251113777`*^9, 
   3.641300026757949*^9}, 3.642603003372573*^9, 3.6435492945295267`*^9, {
   3.646570389878573*^9, 3.646570401744298*^9}, {3.647884023665497*^9, 
   3.647884084781734*^9}, {3.647958580574394*^9, 3.64795874119011*^9}, {
   3.6480484310278788`*^9, 3.648048459839655*^9}, {3.648048616960507*^9, 
   3.648048653843501*^9}, {3.648053943332271*^9, 3.648053987216301*^9}, {
   3.650457879880172*^9, 3.650457947168193*^9}, {3.6553409944586287`*^9, 
   3.6553409953786373`*^9}, {3.655389962037937*^9, 3.6553899647741213`*^9}, {
   3.659458618485629*^9, 3.659458621808147*^9}, 3.659458746526112*^9, 
   3.6635085773926897`*^9, 3.663509142925583*^9, {3.663509333721336*^9, 
   3.663509334661234*^9}, {3.664030808968391*^9, 3.66403084389316*^9}, {
   3.665245567398177*^9, 3.665245649430632*^9}, {3.665245700152726*^9, 
   3.665245727143971*^9}, {3.6652458741893787`*^9, 3.6652459763381977`*^9}, 
   3.665246136050848*^9, {3.66524619212749*^9, 3.665246217451016*^9}, {
   3.6652469863993397`*^9, 3.665246993372182*^9}, {3.6661012635492268`*^9, 
   3.666101268258107*^9}, {3.666101690258791*^9, 3.6661016907429667`*^9}, {
   3.666404719047171*^9, 3.666404753268009*^9}, 3.666533884863304*^9, {
   3.6665345660568743`*^9, 3.666534582979808*^9}, 3.666534783006576*^9, 
   3.6666207145640163`*^9, 3.6666355479707203`*^9, 3.666728134208506*^9, {
   3.666887144957552*^9, 3.6668871504346323`*^9}, {3.6683934388611803`*^9, 
   3.668393493964238*^9}, {3.668886055333686*^9, 3.668886066697001*^9}, {
   3.668886878690351*^9, 3.6688868928498783`*^9}, {3.668953145818622*^9, 
   3.6689531672029963`*^9}, {3.669037148946229*^9, 3.669037166533573*^9}, {
   3.669037364252919*^9, 3.669037373025899*^9}, {3.669387225309514*^9, 
   3.66938724796115*^9}, 3.669387289948925*^9, {3.6707628113996487`*^9, 
   3.670762965429976*^9}, {3.670762998147291*^9, 3.670763002603284*^9}, 
   3.6709465625533123`*^9, {3.6709465951582947`*^9, 3.6709466020233717`*^9}, 
   3.671461421828271*^9, {3.6714615132740917`*^9, 3.671461524434608*^9}, {
   3.6715546862729483`*^9, 3.671554760334331*^9}, {3.672327629260634*^9, 
   3.672327673439*^9}, {3.672620220447619*^9, 3.672620220629058*^9}, 
   3.672620423883473*^9, {3.6726625235896397`*^9, 3.672662599363966*^9}, {
   3.6726638588761377`*^9, 3.672663858882813*^9}, {3.672663917880889*^9, 
   3.6726639185445557`*^9}, {3.672664353838846*^9, 3.6726643612720747`*^9}, {
   3.672760316981183*^9, 3.6727603214695807`*^9}, 3.672760999074965*^9, 
   3.67276143798554*^9, 3.673103452073195*^9, 3.677407955549108*^9, {
   3.677852628731164*^9, 3.677852653513513*^9}, {3.6778553304115677`*^9, 
   3.67785534115556*^9}, 3.6778561675970707`*^9, 3.677856210196925*^9, {
   3.6799397419263887`*^9, 3.679939782844473*^9}, {3.684671815240239*^9, 
   3.684671815411675*^9}, {3.684675557827271*^9, 3.684675565791954*^9}, 
   3.684677174443815*^9, {3.685970899470232*^9, 3.685970925399304*^9}, {
   3.68597098826394*^9, 3.685971022220972*^9}, 3.685986471256865*^9, {
   3.6872785163128223`*^9, 3.687278518404685*^9}, {3.687280424441641*^9, 
   3.6872804779324303`*^9}, 3.695869120043818*^9, {3.6958693875184517`*^9, 
   3.695869472392044*^9}, {3.6967738391275463`*^9, 3.6967739747309847`*^9}, {
   3.697825191459641*^9, 3.697825196502797*^9}, 3.699816486692204*^9, {
   3.702929643529183*^9, 3.702929695821127*^9}, {3.705409183108066*^9, 
   3.705409232391344*^9}, {3.705409374855249*^9, 3.7054093878493433`*^9}, {
   3.705409421566957*^9, 3.705409446497446*^9}, {3.705409483890367*^9, 
   3.7054095458673077`*^9}, {3.705409613071179*^9, 3.705409635128563*^9}, {
   3.707573161220907*^9, 3.707573168162237*^9}, {3.708619992465742*^9, 
   3.7086200442990637`*^9}, {3.708625438315794*^9, 3.708625483902048*^9}, {
   3.708625569172657*^9, 3.708625570166546*^9}, {3.708625618134412*^9, 
   3.708625649123712*^9}, 3.7098656149936733`*^9, 3.710076979660631*^9, {
   3.711894690334268*^9, 3.7118947088384647`*^9}, {3.711895153017662*^9, 
   3.711895221802168*^9}, {3.71189540289145*^9, 3.711895475421856*^9}, {
   3.7119213304933987`*^9, 3.711921368081921*^9}, 3.7157844878666973`*^9, {
   3.7157846245119534`*^9, 3.7157846320008698`*^9}, {3.716835190480143*^9, 
   3.716835222476885*^9}, {3.7168367339243097`*^9, 3.7168367982250147`*^9}, {
   3.716837010372147*^9, 3.716837031020466*^9}, {3.7168983292442923`*^9, 
   3.716898329893364*^9}, {3.716904301851932*^9, 3.71690436841267*^9}, 
   3.719150441748156*^9, {3.721484519186957*^9, 3.721484520283806*^9}, {
   3.721506300089526*^9, 3.721506367993586*^9}, {3.721506399972456*^9, 
   3.721506412703103*^9}, {3.7215068799686937`*^9, 3.7215068810087843`*^9}, {
   3.723475135505786*^9, 3.723475179604021*^9}, {3.725377375960259*^9, 
   3.725377380197405*^9}, {3.725377426953823*^9, 3.725377479328814*^9}, {
   3.72891029611659*^9, 3.728910313643671*^9}, 3.728910392352558*^9, 
   3.728912135779977*^9, 3.728923722119142*^9, {3.728923763303011*^9, 
   3.728923834676876*^9}, {3.728923865360051*^9, 3.7289238865165873`*^9}, {
   3.729524079321711*^9, 3.729524096806354*^9}, 
   3.730685838306841*^9},ExpressionUUID->"bbef5bda-8b7b-4d97-8d39-\
07e3bac152ca"]
},
WindowSize->{808, 655},
WindowMargins->{{-496, Automatic}, {Automatic, -975}},
FrontEndVersion->"11.2 for Mac OS X x86 (32-bit, 64-bit Kernel) (September \
10, 2017)",
StyleDefinitions->"tuTensorialStyle.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[557, 20, 225, 3, 29, "Text",ExpressionUUID->"6f479096-d741-481d-9143-b4a17f0a1676"],
Cell[785, 25, 20448, 538, 1194, "Input",ExpressionUUID->"9e410cf9-deaf-44e3-91db-720c418b28cb",
 InitializationCell->True,
 InitializationGroup->True],
Cell[21236, 565, 111, 1, 29, "Text",ExpressionUUID->"ef69b821-1b23-4820-9816-386c88022ce7"],
Cell[21350, 568, 4739, 109, 330, "Input",ExpressionUUID->"536f60f1-4001-4b6f-b2ef-dd1083f1ecc1",
 InitializationCell->True],
Cell[26092, 679, 211, 4, 29, "Text",ExpressionUUID->"906fc8eb-b0e3-4f02-a2f1-7c0304a2201a"],
Cell[26306, 685, 6840, 146, 520, "Input",ExpressionUUID->"f09b1a8a-d58e-4dfe-94dc-50442c68141e",
 InitializationCell->True],
Cell[33149, 833, 109, 1, 29, "Text",ExpressionUUID->"bf9a8856-5d81-42aa-9cf6-ff282f30c862"],
Cell[33261, 836, 123048, 2905, 9857, "Input",ExpressionUUID->"9a48861d-1083-4676-92dc-a74078babfb0",
 InitializationCell->True],
Cell[156312, 3743, 108, 1, 29, "Text",ExpressionUUID->"f801da7f-ecd6-41f2-b7d0-0f52d7e1ab9c"],
Cell[156423, 3746, 122768, 2949, 10268, "Input",ExpressionUUID->"bbef5bda-8b7b-4d97-8d39-07e3bac152ca",
 InitializationCell->True]
}
]
*)

