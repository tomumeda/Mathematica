$ = {"$", "$0", "$1", "$1c", "$1t", "$2", "$2c", "$2m", "$2t", "$2td", "$31", 
     "$a", "$A", "$aa", "$aa$", "$arg", "$Arg", "$argn", "$a$", "$b", "$bb", 
     "$bb$", "$b$", "$c", "$cc", "$cc$", "$combineProduct", "$const", "$d", 
     "$d0", "$d1", "$D1", "$d1$", "$d2", "$d2$", "$defall", "$deltas", 
     "$dif", "$dummy", "$dummy$", "$d$", "$e", "$e35", "$e$", "$f", "$F", 
     "$generalForm", "$h", "$h1", "$head", "$h$", "$i", "$ii", "$ii$", "$in", 
     "$ind", "$index", "$ind$", "$in$", "$i$", "$j", "$keys", "$L", "$low", 
     "$L$", "$match", "$matches", "$n", "$npat", "$npat$", "$ns", "$n$", 
     "$O", "$p", "$p30", "$pass", "$pass1", "$pass4", "$pat", "$Pattern", 
     "$Pattern$", "$pat$", "$placeholder", "$placeholder$", "$pn", "$pos", 
     "$previous", "$ps", "$pvar", "$pvar1", "$p$", "$r", "$range", "$rhead", 
     "$right", "$rp", "$rule", "$rules", "$s", "$s0", "$s1", "$s34", "$scc", 
     "$sDA", "$sF1", "$sg", "$sgeneral", "$sNO", "$SpinorsPath", "$ss", 
     "$swap", "$symmetries", "$s$", "$t", "$t1", "$targetForm", 
     "$tensorsymbol", "$tensorsymbol$", "$test", "$tmp", "$t$", "$u", "$u0", 
     "$u1", "$u1$", "$u2", "$u2$", "$u$", "$var", "$var$", "$with", 
     "$without", "$x", "$X", "$XX", "$X$", "$y", "$\[Alpha]", "$\[Beta]", 
     "$\[Sigma]", "$$", "$$a", "$$b", "$$c", "$$d", "$$i", "$$m", "$$n", 
     "$$t", "$$ten", "$$t$", "$$XX", "$$XXX"}
 
$0 = $pass
 
$31 = {Subscript[\[ScriptCapitalD], \[ScriptCapitalA]] . 
       Subscript[\[ScriptCapitalD], \[ScriptCapitalA]] -> 
      -Q + \[CapitalDelta]^"E", 
     Q -> -(s \[CircleTimes] Subscript[1, Subscript[\[ScriptCapitalH], F]])/
        4 - I*Tensor[\[Gamma], {\[Mu]}, {Void}] . Tensor[\[Gamma], {Void}, 
           {5}] \[CircleTimes] Tensor[\[ScriptCapitalD], {Void}, {\[Mu]}] . 
          \[CapitalPhi] + (I/2)*Tensor[\[Gamma], {\[Mu]}, {Void}] . 
          Tensor[\[Gamma], {\[Nu]}, {Void}] \[CircleTimes] 
         Tensor[F, {Void, Void}, {\[Mu], \[Nu]}] - 
       Subscript[1, N] \[CircleTimes] \[CapitalPhi] . \[CapitalPhi]}
 
Attributes[Subscript] = {NHoldRest}
 
Subscript[B, x_] := T[B, "d", {x}]
 
Subscript["\[Del]"^S, n_] := T["\[Del]"^S, "d", {n}]
 
T[A_, uds_String][index0__] := Module[{tmp, ud = Characters[uds], 
      index = {index0}}, If[Cases[ud, Except["u" | "d"]] === {} && 
       (tmp = Which[Head[index] === List && Length[ud] == Length[index], 
          Tensor[A, MapThread[If[#1 === "u", #2, Void] & , {ud, index}], 
           MapThread[If[#1 === "d", #2, Void] & , {ud, index}]], 
          ud === {"u"}, Tensor[A, {index}, {Void}], ud === {"d"}, 
          Tensor[A, {Void}, {index}], True, -1]) =!= -1, tmp, 
      Style[Tensor[A, uds, index], FontColor -> Red]]]
 
T[A_, up_List, down_List] := Module[{tmp, u = up /. Null -> Void, 
      d = down /. Null -> Void, return}, 
     If[up == {} && down == {}, Return[Tensor[A, up, down]]]; 
      If[up == {}, u = Table[Void, {Length[d]}]]; 
      If[down == {}, d = Table[Void, {Length[u]}]]; 
      If[Length[d] == Length[u] &&  !Inner[(#1 =!= Void && #2 =!= Void) || 
            (#1 === Void && #2 === Void) & , u, d, Or], Tensor[A, u, d], 
       Style[Tensor[A, up, down], FontColor -> Red]]]
 
T[A_, uds_String, index_List] := Module[{tmp, ud = Characters[uds]}, 
     If[Cases[ud, Except["u" | "d"]] === {} && 
       (tmp = Which[Head[index] === List && Length[ud] == Length[index], 
          Tensor[A, MapThread[If[#1 === "u", #2, Void] & , {ud, index}], 
           MapThread[If[#1 === "d", #2, Void] & , {ud, index}]], 
          ud === {"u"}, Tensor[A, {index}, {Void}], ud === {"d"}, 
          Tensor[A, {Void}, {index}], True, -1]) =!= -1, tmp, 
      Style[Tensor[A, uds, index], FontColor -> Red]]]
 
T /: T::usage = "T[A_,uds_String][index0__] produces any Tensor where \
uds_String specifies up/down position of index_, \
e.g.,T[Symbol,\"udd\"][i,j,k]->((\!\(\*SuperscriptBox[\(Symbol\), \
\(i\)]\)\!\(\*SubscriptBox[\()\), \(jk\)]\))"
 
Attributes[$aa$] = {Temporary}
 
Attributes[$a$] = {Temporary}
 
Attributes[$bb$] = {Temporary}
 
Attributes[$b$] = {Temporary}
 
Attributes[$cc$] = {Temporary}
 
$combineProduct = {((a_) \[CircleTimes] (b_)) . ((c_) \[CircleTimes] (d_)) :> 
      a . c \[CircleTimes] b . d + c \[CircleTimes] 
        tuCircleTimesInnerTerm[T["\[Del]"^S, "d", {_}]][a[d]], 
     (a_) . Subscript[1, n_] -> a, Subscript[1, n_] . (a_) -> a, 
     Tensor["\[Del]"^S, {Void}, {n_}][a_] -> tuDDown["\[PartialD]"][a, n], 
     tuDDown["\[PartialD]"][Subscript[1, n_], a_] -> 0, 
     (a_) \[CircleTimes] (tt:Tensor[\[Gamma], _, _]) . (b_) -> 
      a . tt \[CircleTimes] b}
 
tuCircleTimesInnerTerm[difOp_][exp_] := Block[{$h, $h1, $dif, $ = exp}, 
     $h = Head[exp]; xPrint[$h]; If[FreeQ[$h, difOp], $ = 0; , 
       If[ !FreeQ[$h, dotOps], xPrint["$XX ", $h]; 
          $dif = tuExtractPattern[difOp][$h][[1]]; xPrint[exp]; 
          $ = $dif[exp[[1]]]; xPrint[$h, Length[$h]]; $h1 = Head[$h]; 
          If[tuMemberQ[$h1, dotOps], $h = $h1 @@ DeleteCases[List @@ $h, 
               difOp]; $ = $h1 @@ {$h, $}]; ]; ]; $]
 
tuCircleTimesInnerTerm /: tuCircleTimesInnerTerm::usage = "tuCircleTimesInner\
Term[difOp_][exp_] computes the inner terms produced when merging CircleTimes \
operator expressions, esp_, e.g., \
(a\[CircleTimes]b).(c\[CircleTimes]d)\[Rule](a.c)\[CircleTimes](b.d)+(a.tuCir\
cleTimesInnerTerm[c[b],\[Del]])\[CircleTimes](d).  Assumes dotOps variable \
separators.  *2Mar2016*"
 
dotOps := Dot | xDot | CenterDot | Inactive[Dot]
 
Attributes[xDot] = {Flat, OneIdentity}
 
Attributes[CenterDot] = {Flat, OneIdentity}
 
tuExtractPattern[pattern_, maxlevel_:Infinity][exp_] := 
    Module[{pos}, pos = Position[exp, pattern, {0, maxlevel}]; 
      Extract[exp, pos]]
 
tuExtractPattern /: tuExtractPattern::usage = "tuExtractPattern[pattern_,maxl\
evel_:Infinity][exp_] extracts a List of items in exp_ that match pattern_ to \
maxlevel_. *3Feb2014* "
 
tuMemberQ[variable_, patterns_] := 
    Or @@ (MemberQ[Flatten[{variable}], #1] & ) /@ Flatten[{patterns}]
 
tuMemberQ /: tuMemberQ::usage = "tuMemberQ[variable_,patterns_List] True if \
variable_ matches any in patterns_List. *16May2015*"
 
$d = {Tensor[\[ScriptCapitalD], {Void}, {\[Mu]}][a_] -> 
      ad[Tensor["\[Del]"^"E", {Void}, {\[Mu]}]][a], 
     ad[aa_][bb_] -> aa . bb - bb . aa}
 
$D1 = Tensor[\[ScriptCapitalD], {Void}, {\[Mu]}][\[CapitalPhi]] -> 
     (-I)*Subscript[1, N] \[CircleTimes] CommutatorM[\[CapitalPhi], 
         Tensor[B, {Void}, {\[Mu]}]] + Subscript[1, N] \[CircleTimes] 
       Tensor["\[Del]"^S, {Void}, {\[Mu]}][\[CapitalPhi]]
 
Attributes[$d1$] = {Temporary}
 
Attributes[$d2$] = {Temporary}
 
$defall = {$defall, Tensor[\[ScriptCapitalD], {Void}, {\[Mu]}][a_] -> 
      ad[Tensor["\[Del]"^"E", {Void}, {\[Mu]}]][a], 
     ad[aa_][bb_] -> aa . bb - bb . aa}
 
Attributes[$dummy$] = {Temporary}
 
Attributes[$d$] = {Temporary}
 
$e35 = \[CapitalDelta]^"E" -> \[CapitalDelta]^S \[CircleTimes] 
       Subscript[1, Subscript[\[ScriptCapitalH], F]] + 
      Tensor[g, {\[Mu], \[Nu]}, {Void, Void}] . 
       (Subscript[1, N] \[CircleTimes] Tensor[B, {Void}, {\[Mu]}] . 
         Tensor[B, {Void}, {\[Nu]}]) - 
      I*Tensor[g, {\[Mu], \[Nu]}, {Void, Void}] . 
        (Subscript[1, N] \[CircleTimes] tuDDown["\[PartialD]"][
          Tensor[B, {Void}, {\[Nu]}], \[Mu]]) - 
      (2*I)*Tensor[g, {\[Mu], \[Nu]}, {Void, Void}] . 
        (Tensor["\[Del]"^S, {Void}, {\[Mu]}] \[CircleTimes] 
         Tensor[B, {Void}, {\[Nu]}]) + 
      I*Tensor[g, {\[Mu], \[Nu]}, {Void, Void}] . Tensor[\[CapitalGamma], 
         {\[Rho], Void, Void}, {Void, \[Mu], \[Nu]}] . 
        (Subscript[1, N] \[CircleTimes] Tensor[B, {Void}, {\[Rho]}])
 
Attributes[$e$] = {Temporary}
 
$F = Tensor[F, {Void, Void}, {\[Mu], \[Nu]}] -> 
     I*CommutatorM[Tensor[B, {Void}, {\[Mu]}], Tensor[B, {Void}, {\[Nu]}]] - 
      tuDDown["\[PartialD]"][Tensor[B, {Void}, {\[Mu]}], \[Nu]] + 
      tuDDown["\[PartialD]"][Tensor[B, {Void}, {\[Nu]}], \[Mu]]
 
Attributes[$h$] = {Temporary}
 
Attributes[$ii$] = {Temporary}
 
Attributes[$ind$] = {Temporary}
 
Attributes[$in$] = {Temporary}
 
Attributes[$i$] = {Temporary}
 
$L = {slash[\[ScriptCapitalD]] . slash[\[ScriptCapitalD]] -> 
      s/4 + \[CapitalDelta]^S, (\[CapitalDelta]^S)[Style["Laplacian of spin \
connection \!\(\*SuperscriptBox[\(\[Del]\), \(S\)]\)", RGBColor[0, 2/3, 0], 
       Larger], s[Style["scalar curvature of M", RGBColor[0, 2/3, 0], 
        Larger]]]}
 
Attributes[$L$] = {Temporary}
 
$n = {3, 7, 10}
 
Attributes[$npat$] = {Temporary}
 
$ns = {}
 
Attributes[$n$] = {Temporary}
 
$O = {(\[CapitalOmega]^"E")[X, Y] -> Tensor["\[Del]"^"E", {Void}, {X}] . 
        Tensor["\[Del]"^"E", {Void}, {Y}] - Tensor["\[Del]"^"E", {Void}, 
         {Y}] . Tensor["\[Del]"^"E", {Void}, {X}] - Tensor["\[Del]"^"E", 
        {Void}, {CommutatorM[X, Y]}], {X, Y} -> "vector fields"}
 
$p[1] = (s/4 + \[CapitalDelta]^S) \[CircleTimes] 
     Subscript[1, Subscript[\[ScriptCapitalH], F]]
 
Attributes[$Pattern$] = {Temporary}
 
Attributes[$pat$] = {Temporary}
 
Attributes[$placeholder$] = {Temporary}
 
$pn = 1
 
$pvar1 = {pvar[1] -> OverTilde[A]}
 
Attributes[$p$] = {Temporary}
 
$s = First[]
 
$s0 = 0
 
$s1 = {(a_) \[CircleTimes] (tt:Tensor[F, {Void, Void}, {\[Mu]_, \[Nu]_}]) :> 
      a \[CircleTimes] tuIndexAntiSymmetrize[{\[Mu], \[Nu]}][tt], 
     tt:Tensor[g, {\[Mu]_, \[Nu]_}, {Void, Void}] \[CircleTimes] 
        Tensor[F, \[Mu]_, \[Nu]_] :> tuIndexSwap[{\[Mu], \[Nu]}][tt] /; 
       OrderedQ[{\[Nu], \[Mu]}], Tensor[F, {Void, Void}, {\[Mu]_, \[Nu]_}] :> 
      -T[F, "dd", {\[Nu], \[Mu]}] /; OrderedQ[{\[Nu], \[Mu]}]}
 
tuIndexAntiSymmetrize[indexPair_List][exp_] := Module[{tmp1, tmp2}, 
     (exp - tuIndexSwap[indexPair][exp])/2]
 
tuIndexAntiSymmetrize /: tuIndexAntiSymmetrize::usage = "tuIndexAntiSymmetriz\
e[indexPair_List][exp_] antisymmetrizes exp_ over indexPair_. eg: \
tuIndexAntiSymmetrize[{i,j}][\!\(\*SubscriptBox[\(A\), \
\(ij\)]\)]->(\!\(\*SubscriptBox[\(A\), \(ij\)]\)-\!\(\*SubscriptBox[\(A\), \
\(ji\)]\))/2 . *7Aug2012*"
 
tuIndexSwap[indexPair_List][exp_] := Block[{tmp = exp, index1, index2, $ii, 
      heads = DerivOps, subi, nestop, CX}, {index1, index2} = indexPair; 
      subi[i_] := If[AtomQ[i], i /. index1 -> $ii /. index2 -> CX[index1] /. 
         $ii -> CX[index2], (If[AtomQ[#1], #1 /. index1 -> $ii /. 
             index2 -> CX[index1] /. $ii -> CX[index2], #1] & ) /@ i]; 
      nestop[term_] := term /. (h:heads)[A_, i_] :> h[nestop[A], subi[i]]; 
      tmp = tmp /. Tensor[A_, u_, d_] :> Tensor[A, subi[u], subi[d]]; 
      tmp = nestop[tmp]; tmp //. CX[a_] -> a]
 
tuIndexSwap /: tuIndexSwap::usage = "tuIndexSwap[indexPair_List][exp_] swap \
indexPair in exp_. EG: IndexSwap[{i,j}][\!\(\*SubscriptBox[\(A\), \
\(ikj\)]\)]->\!\(\*SubscriptBox[\(A\), \(jki\)]\)   *4Nov2014*"
 
DerivOps := Flatten[DerivOpsD | DerivOpsU | tuDerivOps]
 
DerivOpsD := Join[xPartialD | xCovariantD | xD[_], tuDerivOpsD]
 
xPartialD[field_, var_] := tuPartialD[field, var]
 
tuPartialD := tuDPartial
 
tuPartialD /: tuPartialD::usage = "tuPartialD[field_,var_] displays the \
PartialD[field,var] \[Rule] \!\(\*SubscriptBox[\(\[PartialD]\), \
\(var\)]\)field. "
 
tuDPartial[a_, b_] := tuDDown["\[PartialD]"][a, b]
 
tuDerivOpsD := tuDPartial | tuDCovariant | tuDs[_] | tuDDown[_]
 
tuDCovariant[a_, b_] := tuDDown["\[Del]"][a, b]
 
tuDs[s_][a_, b_] := tuDDown[s][a, b]
 
DerivOpsU := Join[xPartialDu | xCovariantDu | xDu[_], tuDerivOpsU]
 
xPartialDu[field_, var_] := tuPartialDu[field, var]
 
tuPartialDu := tuDPartialu
 
tuPartialDu /: tuPartialDu::usage = "tuPartialDu[field_,var_] displays the \
PartialDu[field,var] \[Rule] \!\(\*SuperscriptBox[\(\[PartialD]\), \
\(var\)]\)field. "
 
tuDPartialu[a_, b_] := tuDUp["\[PartialD]"][a, b]
 
tuDerivOpsU := tuDPartialu | tuDCovariantu | tuDsu[_] | tuDUp[_]
 
tuDCovariantu[a_, b_] := tuDUp["\[Del]"][a, b]
 
tuDsu[s_][a_, b_] := tuDUp[s][a, b]
 
tuDerivOps := Flatten[tuDerivOpsD | tuDerivOpsU | tuDLie]
 
tuDLie[a_, b_] := tuDDown["\[ScriptCapitalL]"][a, b]
 
$s34 = (\[CapitalOmega]^"E")[\[Mu], \[Nu]] -> 
     Subscript[1, N] \[CircleTimes] (I*Tensor[F, {Void, Void}, 
         {\[Mu], \[Nu]}]) + (\[CapitalOmega]^S)[\[Mu], \[Nu]] \[CircleTimes] 
       Subscript[1, Subscript[\[ScriptCapitalH], F]]
 
$scc = {((a_) \[CircleTimes] (b_)) . ((c_) \[CircleTimes] (d_)) :> 
      a . c \[CircleTimes] b . d + If[ !FreeQ[a, "\[Del]"] && 
          !FreeQ[d, B | \[CapitalPhi]], c \[CircleTimes] a[d], 0] + 
       If[ !FreeQ[b, "\[Del]"] &&  !FreeQ[d, B | \[CapitalPhi]], 
        a \[CircleTimes] b[d], 0], Subscript[1, N_] . (a_) -> a, 
     (a_) . Subscript[1, N_] -> a, 
     (a_) \[CircleTimes] Subscript[1, Subscript[\[ScriptCapitalH], F]] - 
       (b_) \[CircleTimes] Subscript[1, Subscript[\[ScriptCapitalH], F]] -> 
      (a - b) \[CircleTimes] Subscript[1, Subscript[\[ScriptCapitalH], F]], 
     Subscript[1, N_] \[CircleTimes] (a_) - Subscript[1, N_] \[CircleTimes] 
        (b_) -> Subscript[1, N] \[CircleTimes] (a - b)}
 
$sDA = {Subscript[\[ScriptCapitalD], \[ScriptCapitalA]] -> 
      Tensor[\[Gamma], {Void}, {5}] \[CircleTimes] \[CapitalPhi] - 
       I*Tensor[\[Gamma], {\[Mu]}, {Void}] . Tensor["\[Del]"^"E", {Void}, 
          {\[Mu]}], Tensor["\[Del]"^"E", {Void}, {\[Mu]_}] -> 
      I*Subscript[1, N] \[CircleTimes] Tensor[B, {Void}, {\[Mu]}] + 
       Tensor["\[Del]"^S, {Void}, {\[Mu]}] \[CircleTimes] 
        Subscript[1, Subscript[\[ScriptCapitalH], F]], 
     Tensor["\[Del]"^"E", {Void}, {\[Mu]}][S \[CircleTimes] "E"], 
     Element[\[CapitalPhi], \[CapitalGamma][Endo["E"]][
       Style["Higg's field", RGBColor[0, 2/3, 0], Larger]]]}
 
$sgeneral := {T[\[Gamma], "d", {5}] -> Product[T[\[Gamma], "u", {\[Mu]}], 
       {\[Mu], 4}], T[\[Gamma], "d", {5}] . T[\[Gamma], "d", {5}] -> 1, 
     ConjugateTranspose[T[\[Gamma], "d", {5}]] -> T[\[Gamma], "d", {5}], 
     T["\[Del]", "d", {_}][Subscript[1, n_]] -> 0, (a_) . Subscript[1, n_] -> 
      a, Subscript[1, n_] . (a_) -> a}
 
$SpinorsPath = "/Users/Tom/Library/Mathematica/Applications"
 
$symmetries := {tt:T[g, "uu", {\[Mu]_, \[Nu]_}] :> 
      tuIndexSwap[{\[Mu], \[Nu]}][tt] /; OrderedQ[{\[Nu], \[Mu]}], 
     tt:T[F, "uu", {\[Mu]_, \[Nu]_}] :> -tuIndexSwap[{\[Mu], \[Nu]}][tt] /; 
       OrderedQ[{\[Nu], \[Mu]}], CommutatorM[a_, b_] :> 
      -CommutatorM[b, a] /; OrderedQ[{b, a}], CommutatorP[a_, b_] :> 
      CommutatorP[b, a] /; OrderedQ[{b, a}], 
     tt:T[\[Gamma], "u", {\[Mu]}] . T[\[Gamma], "d", {5}] -> Reverse[tt]}
 
Attributes[$s$] = {Temporary}
 
Attributes[$tensorsymbol$] = {Temporary}
 
Attributes[$t$] = {Temporary}
 
Attributes[$u1$] = {Temporary}
 
Attributes[$u2$] = {Temporary}
 
Attributes[$u$] = {Temporary}
 
Attributes[$var$] = {Temporary}
 
Attributes[$X$] = {Temporary}
 
Attributes[$$] = {Temporary}
 
Attributes[$$t$] = {Temporary}
