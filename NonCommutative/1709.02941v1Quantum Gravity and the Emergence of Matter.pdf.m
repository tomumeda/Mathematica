(* ::Package:: *)

(************************************************************************)
(* This file was generated automatically by the Mathematica front end.  *)
(* It contains Initialization cells from a Notebook file, which         *)
(* typically will have the same name as this file except ending in      *)
(* ".nb" instead of ".m".                                               *)
(*                                                                      *)
(* This file is intended to be loaded into the Mathematica kernel using *)
(* the package loading commands Get or Needs.  Doing so is equivalent   *)
(* to using the Evaluate Initialization Cells menu command in the front *)
(* end.                                                                 *)
(*                                                                      *)
(* DO NOT EDIT THIS FILE.  This entire file is regenerated              *)
(* automatically each time the parent Notebook file is saved in the     *)
(* Mathematica front end.  Any changes you make to this file will be    *)
(* overwritten.                                                         *)
(************************************************************************)



(* ::Input::Initialization:: *)
<<Local`QFTToolKit2`


(* ::Input::Initialization:: *)
accumLabel="1709.02941v1";
$def[accumLabel]={};
accumQG=accum[accumLabel];
selectQG=select[accumLabel];
defQG:=$def[accumLabel]


(* ::Input::Initialization:: *)
expandDC[sub_:{},scalar_:{},func_:{}]:=tuRepeat[{sub,tuOpDistribute[dotOps],tuOpSimplify[dotOps,scalar],tuOpSimplify[CircleTimes,scalar],tuOpDistribute[CircleTimes]},{tuCircleTimesSimplify,func}]
Clear[expandCom];
expandCom[subs_:{}][exp_]:=Block[{tmp=exp},
tmp=tmp//.tuCommutatorExpand//expandDC[];
tmp=tmp/.toxDot//.Flatten[{subs}];
tmp=tmp//tuMatrixOrderedMultiply//(#/.toDot&)//expandDC[];
tmp
];
(**)
$sgeneral:={
T[\[Gamma],"d",{5}]->Product[T[\[Gamma],"u",{\[Mu]}],{\[Mu],4}],
T[\[Gamma],"d",{5}].T[\[Gamma],"d",{5}]->1,ConjugateTranspose[T[\[Gamma],"d",{5}]]->T[\[Gamma],"d",{5}],CommutatorP[T[\[Gamma],"d",{5}],T[\[Gamma],"u",{\[Mu]}]]->0,T["\[Del]","d",{_}][Subscript[1, n_]]->0,a_ . Subscript[1, n_]->a,Subscript[1, n_] . a_->a}
$sgeneral//ColumnBar;

Clear[$symmetries]
$symmetries:={tt:T[g,"uu",{\[Mu]_,\[Nu]_}]:>tuIndexSwap[{\[Mu],\[Nu]}][tt]/;OrderedQ[{\[Nu],\[Mu]}],
tt:T[F,"uu",{\[Mu]_,\[Nu]_}]:>-tuIndexSwap[{\[Mu],\[Nu]}][tt]/;OrderedQ[{\[Nu],\[Mu]}],
tt:T[F,"dd",{\[Mu]_,\[Nu]_}]:>-tuIndexSwap[{\[Mu],\[Nu]}][tt]/;OrderedQ[{\[Nu],\[Mu]}],
CommutatorM[a_,b_]:>-CommutatorM[b,a]/;OrderedQ[{b,a}],
CommutatorP[a_,b_]:>CommutatorP[b,a]/;OrderedQ[{b,a}],
tt:T[\[Gamma],"u",{\[Mu]}] . T[\[Gamma],"d",{5}] :>Reverse[tt]
};
$symmetries//ColumnBar;


(* ::Input::Initialization:: *)
PR["Consider ",
$={{\[ScriptCapitalB][CG["\!\(\*SuperscriptBox[\(C\), \(*\)]\)-algebra"]],iD[CG["Dirac operator"]],H[CG["Hilbert space"]]}[CG["general spectral triple"]],
{A->Sum[Subscript[a, i]\[CenterDot]CommutatorM[iD,Subscript[b, i]],i],
{Subscript[a, i],Subscript[b, i]}\[Element]\[ScriptCapitalB]}[CG["1-form in NCG"]],
{\!\(\*OverscriptBox[\(iD\), \(~\)]\)->iD+A}[CG["fluctuated Dirac operator"]],
{Subscript[\!\(\*OverscriptBox[\(iD\), \(~\)]\), \[ScriptCapitalA]]->Subscript[iD, \[ScriptCapitalA]]+\[CapitalOmega],
\[CapitalOmega]->Sum[Subscript[h, i]\[CenterDot]CommutatorM[Subscript[iD, \[ScriptCapitalA]],Subscript[h, j]],i,j],
Subscript[h, i]\[Element]HD[M],
\[CapitalOmega]->Sum[Subscript["\[Del]", Subscript[X, i]][CommutatorM[Subscript[iD, \[ScriptCapitalA]],Subscript["\[Del]", Subscript[Y, i]]]],i],
{Subscript[X, i],Subscript[Y, i]}[CG["vector fields on M"]],
{Subscript[X, \[Mu]]->Subscript[Y, \[Mu]]->tuDPartial[_,\[Mu]],
$s=\[CapitalOmega]->T[g,"uu",{\[Mu],\[Nu]}]Subscript["\[Del]", tuDPartial[_,\[Mu]]][CommutatorM[Subscript[iD, \[ScriptCapitalA]],Subscript["\[Del]", tuDPartial[_,\[Nu]]]]]}[CG["if M\[Rule]{\!\(\*SubscriptBox[\(x\), \(1\)]\),\!\(\*SubscriptBox[\(x\), \(2\)]\),\!\(\*SubscriptBox[\(x\), \(3\)]\)}"]],
$pass=$=Subscript[\!\(\*OverscriptBox[\(iD\), \(~\)]\), \[ScriptCapitalA]]->Subscript[iD, \[ScriptCapitalA]]+\[CapitalOmega]/.$s/.selectQG[Subscript[iD, _]];
$=$//tuOpSwitch[CommutatorM,xSum]//tuOpSwitch[ Subscript["\[Del]", tuDPartial[_,\[Mu]]],xSum];
{e[35]=$=$/.(gg:T[g,"uu",{\[Mu],\[Nu]}])xSum[a_,b_]->xSum[gg a,b]/.tuOpCollect[xSum]//.tuOpSimplify[dotOps,{Subscript[\[Tau], 2]}]//.tuOpSimplify[CommutatorM,{Subscript[\[Tau], 2]}]//tuOpSimplifyFirst[Subscript["\[Del]", tuDPartial[_,\[Mu]]],{Subscript[\[Tau], 2]}],
$=$/.CommutatorM[T[\!\(\*OverscriptBox[\(\[Xi]\), \(~\)]\),"d",{i_}]\[CenterDot]a_,b_]->T[\!\(\*OverscriptBox[\(\[Xi]\), \(~\)]\),"d",{i}]\[CenterDot]CommutatorM[a,b],

{CG["An alternative using CovariantDerivative notation and ",$ss={Subscript["\[Del]", tuDPartial[_,\[Mu]_]]->tuDCovariant[_,\[Mu]],(gg:T[g,"uu",{\[Mu],\[Nu]}])xSum[a_,b_]->xSum[gg a,b],
tuDCovariant[_,\[Mu]_][a_]->tuDCovariant[a,\[Mu]]+a tuDCovariant[_,\[Mu]]}],
$=$pass/.$ss;
$=$//tuOpSwitch[CommutatorM,xSum]//tuOpSwitch[ tuDCovariant[_,\[Mu]],xSum];
$=$/.$ss/.tuOpCollect[xSum]/.$ss;
$=$//tuRepeat[{tuOpSimplify[dotOps]},{tuCommutatorSimplify[{T[\!\(\*OverscriptBox[\(\[Xi]\), \(~\)]\),"d",{i_}],Subscript[\[Tau], 2]}],tuDerivativeExpand[{T[\!\(\*OverscriptBox[\(\[Xi]\), \(~\)]\),"d",{i_}],Subscript[\[Tau], 2]}]}];
e[35.1]=$//.tuOpCollect[]//Simplify
},
{$pass[[1]]->Subscript[iD, \[ScriptCapitalA]][CG["acts on \[ScriptCapitalA]"]]+Subscript[iD, M][CG["acts on M"]]}[CG["overall structure"]]
}[CR["??(35)"]]

}[CG["inner fluctuation of Dirac operator"]]
};(ColumnForms[#1,5]&)[$],accumQG[$]
]
PR["expand e[35.1]: ",
$0=$=e[35.1]/.Times->CenterDot,
$=$//.tuOpCollect[]//tuTermSelect[{g},{},True];
$=$/.CommutatorM->tuCommutator[CenterDot];
$=$//expandDC[{CommutatorM->tuCommutator[CenterDot]},{Subscript[\[Tau], 2]},{Expand}];
$=$/.Blank->xBlank;
$=$/.   tuDCovariant[xBlank[],\[Mu]_]\[CenterDot] a_:>tuDCovariant[a,\[Mu]]+a\[CenterDot]tuDCovariant[xBlank[],\[Mu]]//tuDerivativeExpand[];
$=$/.dd:tuDCovariant[xBlank[],\[Mu]]\[CenterDot]tuDCovariant[xBlank[],\[Nu]]:>Reverse[dd]//expandDC[{xBlank->Blank}];
Yield,$=tuReplacePart[$0,$]//expandDC[]
]



