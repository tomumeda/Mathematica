(************** Content-type: application/mathematica **************

                    Mathematica-Compatible Notebook

This notebook can be used with any Mathematica-compatible
application, such as Mathematica, MathReader or Publicon. The data
for the notebook starts with the line containing stars above.

To get the notebook into a Mathematica-compatible application, do
one of the following:

* Save the data starting with the line of stars above into a file
  with a name ending in .nb, then open the file inside the
  application;

* Copy the data starting with the line of stars above to the
  clipboard, then use the Paste menu command inside the application.

Data for notebooks contains only printable 7-bit ASCII and can be
sent directly in email or through ftp in text mode.  Newlines can be
CR, LF or CRLF (Unix, Macintosh or MS-DOS style).

NOTE: If you modify the data for this notebook not in a Mathematica-
compatible application, you must delete the line below containing
the word CacheID, otherwise Mathematica-compatible applications may
try to use invalid cache data.

For more information on notebooks and Mathematica-compatible 
applications, contact Wolfram Research:
  web: http://www.wolfram.com
  email: info@wolfram.com
  phone: +1-217-398-0700 (U.S.)

Notebook reader applications are available free of charge from 
Wolfram Research.
*******************************************************************)

(*CacheID: 232*)


(*NotebookFileLineBreakTest
NotebookFileLineBreakTest*)
(*NotebookOptionsPosition[     27371,        840]*)
(*NotebookOutlinePosition[     28129,        866]*)
(*  CellTagsIndexPosition[     28085,        862]*)
(*WindowFrame->Normal*)



Notebook[{

Cell[CellGroupData[{
Cell["Polarization", "Title"],

Cell[TextData[{
  StyleBox["By Renan Cabrera\n",
    FontSize->18],
  StyleBox["Graduate student\nPhysics Dept., University of Windsor\nWindsor, \
ON, Canada N9B 3P4\nrencabla@ceibo.entelnet.bo\ncabrer7@uwindsor.ca\n\
December/2003",
    FontSize->14]
}], "Subtitle"],

Cell[BoxData[
    \(Needs["\<TCliffordAlgebra1`TClifford`\>"]\)], "Input"],

Cell[BoxData[
    \(DeclareBaseIndices[{0, 1, 2, 3}]\)], "Input"],

Cell["Initial Setting", "Text"],

Cell[BoxData[{
    \(SetCliffordBasisValueRules[\[DoubleStruckE], 
      3]\), "\[IndentingNewLine]", 
    \(SetParavectorBasisValues[\[DoubleStruckE], 
      Length@BaseIndices]\), "\[IndentingNewLine]", 
    \(\(labs = {x, \[Delta], 
          g, \[CapitalGamma]};\)\), "\[IndentingNewLine]", 
    \(DefineTensorShortcuts[{{x, B}, 1}, {F, 2}]\), "\[IndentingNewLine]", 
    \(SetAttributes[c, Constant]\)}], "Input"],

Cell[BoxData[{
    \(\(Format[ap] = Subscript[a, "\<+\>"];\)\), "\[IndentingNewLine]", 
    \(\(Format[am] = Subscript[a, "\<-\>"];\)\)}], "Input"],

Cell[CellGroupData[{

Cell["Introduction", "Section"],

Cell["\<\
The electromagnetic field can be \[Omega]riten as:\
\>", "Text"],

Cell[BoxData[
    \(F = 
      c*PVector[k, {0, 1}] ** PVector[\[Xi], 1]*
        Exp[\(-I\)*\[Delta]]*\((ap*Exp[\(-I\)*s] + am*Exp[I*s])\)\)], "Input"],

Cell[TextData[{
  "where ",
  Cell[BoxData[
      FormBox[
        TagBox[
          StyleBox[
            FormBox[
              FormBox[
                TagBox[
                  StyleBox[
                    InterpretationBox["k",
                      SequenceForm[ k],
                      Editable->False],
                    FontColor->RGBColor[0.589853, 0, 0.292973],
                    Magnification->1],
                  (
                  StyleForm[ #, FontColor -> 
                    RGBColor[ .58985299999999996, 0, .29297299999999998], 
                    Magnification -> 1.0]&)],
                "TraditionalForm"],
              "TraditionalForm"],
            FontFamily->"Courier",
            FontSize->16],
          (StyleForm[ #, FontSize -> 16, FontFamily -> "Courier"]&)], 
        TraditionalForm]]],
  " is the null propagation pseudovector and  ",
  Cell[BoxData[
      FormBox[
        TagBox[
          StyleBox[
            FormBox[
              FormBox[
                TagBox[
                  StyleBox[
                    InterpretationBox["\[Xi]",
                      SequenceForm[ \[Xi]],
                      Editable->False],
                    FontColor->RGBColor[0, 0, 0.996109],
                    Magnification->1],
                  (
                  StyleForm[ #, FontColor -> RGBColor[ 
                    0, 0, .99610900000000002], Magnification -> 1.0]&)],
                "TraditionalForm"],
              "TraditionalForm"],
            FontFamily->"Courier",
            FontSize->16],
          (StyleForm[ #, FontSize -> 16, FontFamily -> "Courier"]&)], 
        TraditionalForm]]],
  " is a fixed perpendicular vector to the propagation direction."
}], "Text"],

Cell["\<\
Defining the complex polarization vector \[Epsilon] \
\>", "Text"],

Cell[BoxData[
    \(ComplexPolarizationVector = {\[IndentingNewLine]PVector[k, {0, 1}] ** 
            PVector[\[Xi], 1] \[Rule] \ \((\[Omega]/c)\) PVector[\[Epsilon]]*
            Sqrt[2], \[IndentingNewLine]PVector[\[Xi], 1] ** 
            PVector[k, {0, 1}] \[Rule] \ \((\[Omega]/c)\) 
            SuperDagger[PVector[\[Epsilon]]]*Sqrt[2]}\)], "Input"],

Cell[TextData[{
  "which is compatible with the transformation:\n\t\t\t\t",
  Cell[BoxData[
      FormBox[
        TagBox[
          RowBox[{
            RowBox[{
              StyleBox[
                FormBox[
                  TagBox[
                    StyleBox[
                      InterpretationBox["\[Xi]",
                        SequenceForm[ \[Xi]],
                        Editable->False],
                      FontColor->RGBColor[0, 0, 0.996109],
                      Magnification->1],
                    (
                    StyleForm[ #, FontColor -> RGBColor[ 
                      0, 0, .99610900000000002], Magnification -> 1.0]&)],
                  "TraditionalForm"],
                FontFamily->"Courier",
                FontSize->16], 
              StyleBox["\[Rule]",
                FontFamily->"Courier",
                FontSize->16], 
              RowBox[{
                StyleBox[\(1\/\@2\),
                  FontFamily->"Courier",
                  FontSize->16], 
                RowBox[{
                  StyleBox["(",
                    FontFamily->"Courier",
                    FontSize->16], 
                  RowBox[{
                    TagBox[
                      StyleBox[
                        InterpretationBox["\[Epsilon]",
                          SequenceForm[ \[Epsilon]],
                          Editable->False],
                        FontColor->RGBColor[0, 0, 0.996109]],
                      (
                      StyleForm[ #, FontColor -> RGBColor[ 
                        0, 0, .99610900000000002]]&)], 
                    StyleBox["+",
                      FontFamily->"Courier",
                      FontSize->16], 
                    RowBox[{
                      StyleBox["\[ImaginaryI]",
                        FontFamily->"Courier",
                        FontSize->16], 
                      SuperscriptBox[
                        FormBox[
                          TagBox[
                            StyleBox[
                              InterpretationBox["\[Epsilon]",
                                SequenceForm[ \[Epsilon]],
                                Editable->False],
                              FontColor->RGBColor[0, 0, 0.996109]],
                            (
                            StyleForm[ #, FontColor -> RGBColor[ 
                              0, 0, .99610900000000002]]&)],
                          "TraditionalForm"], "\[Dagger]"]}]}], ")"}]}]}], 
            StyleBox["\[IndentingNewLine]",
              FontFamily->"Courier",
              FontSize->16], 
            RowBox[{
              StyleBox[
                FormBox[
                  TagBox[
                    StyleBox[
                      InterpretationBox["\[Eta]",
                        SequenceForm[ \[Eta]],
                        Editable->False],
                      FontColor->RGBColor[0, 0, 0.996109],
                      Magnification->1],
                    (
                    StyleForm[ #, FontColor -> RGBColor[ 
                      0, 0, .99610900000000002], Magnification -> 1.0]&)],
                  "TraditionalForm"],
                FontFamily->"Courier",
                FontSize->16], 
              StyleBox["\[Rule]",
                FontFamily->"Courier",
                FontSize->16], 
              RowBox[{
                StyleBox[\(1\/\@2\),
                  FontFamily->"Courier",
                  FontSize->16], 
                RowBox[{
                  StyleBox["(",
                    FontFamily->"Courier",
                    FontSize->16], 
                  RowBox[{
                    TagBox[
                      StyleBox[
                        InterpretationBox["\[Epsilon]",
                          SequenceForm[ \[Epsilon]],
                          Editable->False],
                        FontColor->RGBColor[0, 0, 0.996109]],
                      (
                      StyleForm[ #, FontColor -> RGBColor[ 
                        0, 0, .99610900000000002]]&)], "-", 
                    RowBox[{
                      StyleBox["\[ImaginaryI]",
                        FontFamily->"Courier",
                        FontSize->16], 
                      SuperscriptBox[
                        FormBox[
                          TagBox[
                            StyleBox[
                              InterpretationBox["\[Epsilon]",
                                SequenceForm[ \[Epsilon]],
                                Editable->False],
                              FontColor->RGBColor[0, 0, 0.996109]],
                            (
                            StyleForm[ #, FontColor -> RGBColor[ 
                              0, 0, .99610900000000002]]&)],
                          "TraditionalForm"], "\[Dagger]"]}]}], ")"}]}]}]}],
          (StyleForm[ #, FontSize -> 16, FontFamily -> "Courier"]&)], 
        TraditionalForm]],
    TextAlignment->Center,
    TextJustification->0]
}], "Text",
  TextAlignment->Left,
  TextJustification->0],

Cell[TextData[{
  "where ",
  Cell[BoxData[
      FormBox[
        StyleBox[
          FormBox[
            TagBox[
              StyleBox[
                InterpretationBox["\[Eta]",
                  SequenceForm[ \[Eta]],
                  Editable->False],
                FontColor->RGBColor[0, 0, 0.996109],
                Magnification->1],
              (
              StyleForm[ #, FontColor -> RGBColor[ 0, 0, .99610900000000002], 
                Magnification -> 1.0]&)],
            "TraditionalForm"],
          FontFamily->"Courier",
          FontSize->16], TraditionalForm]],
    TextAlignment->Center,
    TextJustification->0],
  " is a unit vector perpendicular  to ",
  Cell[BoxData[
      FormBox[
        StyleBox[
          FormBox[
            TagBox[
              StyleBox[
                InterpretationBox["\[Xi]",
                  SequenceForm[ \[Xi]],
                  Editable->False],
                FontColor->RGBColor[0, 0, 0.996109],
                Magnification->1],
              (
              StyleForm[ #, FontColor -> RGBColor[ 0, 0, .99610900000000002], 
                Magnification -> 1.0]&)],
            "TraditionalForm"],
          FontFamily->"Courier",
          FontSize->16], TraditionalForm]],
    TextAlignment->Center,
    TextJustification->0],
  " as well as  the direction of propagation."
}], "Text"],

Cell["The Electric Field is calculated:", "Text"],

Cell[BoxData[{
    \(RealPart[F] // ExpandRealPart\), "\[IndentingNewLine]", 
    \(% /. ComplexPolarizationVector\), "\[IndentingNewLine]", 
    \("\<E\>" == 
      Collect[%, {PVector[\[Epsilon]], SuperDagger[PVector[\[Epsilon]]], 
          Exp[I*\[Delta]]}]\)}], "Input"],

Cell["The electric field can be written in complex form also as:", "Text"],

Cell[BoxData[
    \(ComplexE = 
      c*PVector[k, {0, 1}] ** PVector[\[Xi], 1]*Exp[\(-I\)*\[Delta]]*ap*
            Exp[\(-I\)*s] + 
          c*PVector[\[Xi], 1] ** PVector[k, {0, 1}]*Exp[I*\[Delta]]*am*
            Exp[\(-I\)*s] /. ComplexPolarizationVector\)], "Input"],

Cell["\<\
which is better in order to express the cicular polarization.\
\>", "Text"],

Cell["\<\
Using this complex form we get the same final expression for the real \
electric field:\
\>", "Text"],

Cell[BoxData[{
    \(RealPart[ComplexE] // ExpandRealPart\), "\[IndentingNewLine]", 
    \("\<E\>" == 
      Collect[%, {PVector[\[Epsilon]], SuperDagger[PVector[\[Epsilon]]], 
          Exp[I*\[Delta]]}]\)}], "Input"]
}, Closed]],

Cell[CellGroupData[{

Cell["Poincare Spinor", "Section"],

Cell[TextData[{
  "From the complex form of  the electric field it is convenient to define \
the Poincare spinor ",
  StyleBox["\[Phi]",
    FontWeight->"Bold"],
  " in the circular basis (",
  Cell[BoxData[
      FormBox[
        RowBox[{
          FormBox[
            TagBox[
              StyleBox[
                InterpretationBox["\[Epsilon]",
                  SequenceForm[ \[Epsilon]],
                  Editable->False],
                FontColor->RGBColor[0, 0, 0.996109]],
              (
              StyleForm[ #, FontColor -> RGBColor[ 
                0, 0, .99610900000000002]]&)],
            "TraditionalForm"], ",", 
          SuperscriptBox[
            FormBox[
              TagBox[
                StyleBox[
                  InterpretationBox["\[Epsilon]",
                    SequenceForm[ \[Epsilon]],
                    Editable->False],
                  FontColor->RGBColor[0, 0, 0.996109]],
                (
                StyleForm[ #, FontColor -> RGBColor[ 
                  0, 0, .99610900000000002]]&)],
              "TraditionalForm"], "\[Dagger]"]}], TraditionalForm]]],
  ") to describe circular polarization."
}], "Text"],

Cell[BoxData[
    \(PoincareSpinorRule = \[Phi] \[Rule] 
        Sqrt[2]*\[Omega] {ap*Exp[\(-I\)*\[Delta]], 
            am*Exp[I*\[Delta]]}\)], "Input"],

Cell["\<\
We can recover the complex electric field from the Poincare spinor:\
\>", "Text"],

Cell[BoxData[{
    \({PVector[\[Epsilon]], 
        SuperDagger[PVector[\[Epsilon]]]} . \[Phi]\), "\[IndentingNewLine]", 
    \(% /. PoincareSpinorRule\), "\[IndentingNewLine]", 
    \("\<Complex E\>" == 
      Collect[%, {PVector[\[Epsilon]], SuperDagger[PVector[\[Epsilon]]], 
          Exp[I*\[Delta]]}]\)}], "Input"],

Cell["The real electric field can be calculated again.", "Text"],

Cell[BoxData[{
    \(RealPart[{PVector[\[Epsilon]], 
            SuperDagger[PVector[\[Epsilon]]]} . \[Phi]*
        Exp[\(-I\)*s]]\), "\[IndentingNewLine]", 
    \(% /. PoincareSpinorRule // ExpandRealPart\), "\[IndentingNewLine]", 
    \("\<E\>" == 
      Collect[%, {PVector[\[Epsilon]], SuperDagger[PVector[\[Epsilon]]], 
          Exp[I*\[Delta]]}]\)}], "Input"],

Cell["\<\
where we recover the same form of the electric field as before from the \
direct calculation of the electromagnetic field.\
\>", "Text"]
}, Closed]],

Cell[CellGroupData[{

Cell["Jones Vector", "Section"],

Cell[TextData[{
  "Alternatively we can define the Jones Vector ",
  Cell[BoxData[
      \(TraditionalForm\`\[Phi]\_J\)]],
  "working in the cartesian basis (",
  Cell[BoxData[
      FormBox[
        TagBox[
          StyleBox[
            InterpretationBox["\[Xi]",
              SequenceForm[ \[Xi]],
              Editable->False],
            FontColor->RGBColor[0, 0, 0.996109],
            Magnification->1],
          (
          StyleForm[ #, FontColor -> RGBColor[ 0, 0, .99610900000000002], 
            Magnification -> 1.0]&)], TraditionalForm]]],
  ",",
  Cell[BoxData[
      FormBox[
        TagBox[
          StyleBox[
            InterpretationBox["\[Eta]",
              SequenceForm[ \[Eta]],
              Editable->False],
            FontColor->RGBColor[0, 0, 0.996109],
            Magnification->1],
          (
          StyleForm[ #, FontColor -> RGBColor[ 0, 0, .99610900000000002], 
            Magnification -> 1.0]&)], TraditionalForm]]],
  ") used to describe linear polarization. "
}], "Text"],

Cell[TextData[{
  "The unitary ",
  Cell[BoxData[
      \(TraditionalForm\`U\_J\)]],
  " transformation between basis such that ",
  Cell[BoxData[
      \(TraditionalForm\`\[Phi]\_J\)]],
  "= ",
  Cell[BoxData[
      \(TraditionalForm\`U\_J\)]],
  " ",
  Cell[BoxData[
      \(TraditionalForm\`\(\(\[Phi]\)\(\ \)\)\)]],
  " is:"
}], "Text"],

Cell[BoxData[{
    \(\(Format[UJ] = Subscript[U, J];\)\), "\[IndentingNewLine]", 
    \(\(Format[\[Phi]J] = Subscript[\[Phi], J];\)\), "\[IndentingNewLine]", 
    \(UCircularToCartesiansRule\  = \ 
      UJ -> {{1, 1}, {I, \(-I\)}}/Sqrt[2]\)}], "Input"],

Cell[TextData[{
  "The relation between linear (",
  Cell[BoxData[
      FormBox[
        TagBox[
          StyleBox[
            InterpretationBox["\[Xi]",
              SequenceForm[ \[Xi]],
              Editable->False],
            FontColor->RGBColor[0, 0, 0.996109],
            Magnification->1],
          (
          StyleForm[ #, FontColor -> RGBColor[ 0, 0, .99610900000000002], 
            Magnification -> 1.0]&)], TraditionalForm]]],
  ",",
  Cell[BoxData[
      FormBox[
        TagBox[
          StyleBox[
            InterpretationBox["\[Eta]",
              SequenceForm[ \[Eta]],
              Editable->False],
            FontColor->RGBColor[0, 0, 0.996109],
            Magnification->1],
          (
          StyleForm[ #, FontColor -> RGBColor[ 0, 0, .99610900000000002], 
            Magnification -> 1.0]&)], TraditionalForm]]],
  ") and circular (",
  Cell[BoxData[
      FormBox[
        RowBox[{
          FormBox[
            TagBox[
              StyleBox[
                InterpretationBox["\[Epsilon]",
                  SequenceForm[ \[Epsilon]],
                  Editable->False],
                FontColor->RGBColor[0, 0, 0.996109]],
              (
              StyleForm[ #, FontColor -> RGBColor[ 
                0, 0, .99610900000000002]]&)],
            "TraditionalForm"], ",", 
          SuperscriptBox[
            FormBox[
              TagBox[
                StyleBox[
                  InterpretationBox["\[Epsilon]",
                    SequenceForm[ \[Epsilon]],
                    Editable->False],
                  FontColor->RGBColor[0, 0, 0.996109]],
                (
                StyleForm[ #, FontColor -> RGBColor[ 
                  0, 0, .99610900000000002]]&)],
              "TraditionalForm"], "\[Dagger]"]}], TraditionalForm]]],
  ") basis is then:"
}], "Text"],

Cell[BoxData[
    \(CartesianToCircularBasisRule = 
      MapThread[
        Rule, \[IndentingNewLine]{{PVector[\[Xi], 1], 
            PVector[\[Eta], 
              1]}, \[IndentingNewLine]{PVector[\[Epsilon]], 
                SuperDagger[PVector[\[Epsilon]]]} . 
              Transpose[
                UJ /. Complex[x_, y_] \[RuleDelayed] \ Complex[x, \(-y\)]] /. 
            UCircularToCartesiansRule}]\)], "Input"],

Cell["And the inverse transformation:", "Text"],

Cell[BoxData[
    \(CircularToCartesiansBasisRule = 
      MapThread[
        Rule, \[IndentingNewLine]{{PVector[\[Epsilon]], 
            SuperDagger[
              PVector[\[Epsilon]]]}, \[IndentingNewLine]{PVector[\[Xi], 1], 
                PVector[\[Eta], 1]} . UJ /. 
            UCircularToCartesiansRule}]\)], "Input"],

Cell["And the Jones vector is:", "Text"],

Cell[BoxData[{
    \(\[Phi]J \[Rule] UJ . \[Phi]\), "\[IndentingNewLine]", 
    \(JonesVectorRule = \(% /. PoincareSpinorRule\) /. 
        UCircularToCartesiansRule\)}], "Input"],

Cell["\<\
The complex electric field in the cartesian basis is calculated as:\
\>", "Text"],

Cell[BoxData[{
    \({PVector[\[Xi], 1], 
        PVector[\[Eta], 1]} . \[Phi]J\), "\[IndentingNewLine]", 
    \(\(% /. JonesVectorRule // ExpandAll\) // 
      ExpandRealPart\), "\[IndentingNewLine]", 
    \(Collect[%, {PVector[\[Xi], 1], PVector[\[Eta], 1]}]\)}], "Input"],

Cell["From that the real electric field is:", "Text"],

Cell[BoxData[{
    \(RealPart[{PVector[\[Xi], 1], PVector[\[Eta], 1]} . \[Phi]J*
        Exp[\(-I\)*s]]\), "\n", 
    \(\(\(% /. JonesVectorRule // ExpandAll\) // ExpandRealPart\) // 
      ComplexExpand\), "\n", 
    \(Collect[%, {PVector[\[Xi], 1], PVector[\[Eta], 1]}]\)}], "Input"]
}, Closed]],

Cell[CellGroupData[{

Cell["Stokes Parameters", "Section"],

Cell["In first place let's define the Pauli matrices:", "Text"],

Cell[BoxData[{
    \(\(\[Sigma]0 = {{1, 0}, {0, 1}};\)\), "\[IndentingNewLine]", 
    \(\(\[Sigma]1 = {{0, 1}, {1, 0}};\)\), "\[IndentingNewLine]", 
    \(\(\[Sigma]2 = {{0, \(-I\)}, {I, 0}};\)\), "\[IndentingNewLine]", 
    \(\(\[Sigma]3 = {{1, 0}, {0, \(-1\)}};\)\)}], "Input"],

Cell["\<\
The following routines decomposes a 2x2 matrix  into components of the Pauli \
matrices.\
\>", "Text"],

Cell[BoxData[
    \(PauliDecomposition[M_List] := 
      Module[{equs}, \[IndentingNewLine]s0 = {{1, 0}, {0, 
              1}}; \[IndentingNewLine]s1 = {{0, 1}, {1, 
              0}}; \[IndentingNewLine]s2 = {{0, \(-I\)}, {I, 
              0}}; \[IndentingNewLine]s3 = {{1, 
              0}, {0, \(-1\)}}; \[IndentingNewLine]equs = 
          Map[# \[Equal] 0 &, 
            Flatten[t*s0 + x*s1 + y*s2 + z*s3 - M]]; \[IndentingNewLine]\({t, 
                x, y, z} /. \(Solve[equs, {t, x, y, z}]\)[\([1]\)] // 
            ExpandAll\) // ExpToTrig\[IndentingNewLine]]\)], "Input"],

Cell[TextData[{
  "The coherent density is definided in terms of the Poincare spinor as the \
product",
  Cell[BoxData[
      FormBox[
        RowBox[{" ", 
          RowBox[{
            TagBox[
              StyleBox["\[Phi]",
                FontFamily->"Courier",
                FontSize->16],
              (StyleForm[ #, FontSize -> 16, FontFamily -> "Courier"]&)], 
            TagBox[
              StyleBox[\(\[Phi]\^\[Dagger]\),
                FontFamily->"Courier",
                FontSize->16],
              (StyleForm[ #, FontSize -> 16, FontFamily -> "Courier"]&)]}]}], 
        TraditionalForm]]]
}], "Text"],

Cell[BoxData[
    \(CoherentDensity[\[Phi]_] := {{\[Phi][\([1]\)]}, {\[Phi][\([2]\)]}} . {\
\[Phi] /. Complex[x_, y_] \[RuleDelayed] \ Complex[x, \(-y\)]}\)], "Input"],

Cell["For our case of monocromatic waves we have:", "Text"],

Cell[BoxData[
    \(CoherentDensity[\[Phi] /. PoincareSpinorRule]\)], "Input"],

Cell["Now taking the Pauli decomposition we get:", "Text"],

Cell[BoxData[
    \(pd = 
      PauliDecomposition[
        CoherentDensity[\[Phi] /. PoincareSpinorRule]]\)], "Input"],

Cell["The square magnitude of the time component is:", "Text"],

Cell[BoxData[
    \(\((pd . {1, 0, 0, 0})\) // Simplify\)], "Input"],

Cell["\<\
The length square magnitude of the vector components is the same\
\>", "Text"],

Cell[BoxData[
    \(\(\(Sqrt[\((pd . {0, 1, 0, 0})\)^2 + \((pd . {0, 0, 1, 
                      0})\)^2 + \((pd . {0, 0, 0, 1})\)^2] // ExpandAll\) // 
        Simplify\) // PowerExpand\)], "Input"],

Cell[TextData[{
  "From the Pauli decomposition we can make a change of variable to express \
",
  Cell[BoxData[
      \(TraditionalForm\`a\_"+"\)]],
  "and ",
  Cell[BoxData[
      \(TraditionalForm\`a\_"-"\)]],
  " as the z components of the Stokes' spinor space:\n\t\t",
  Cell[BoxData[{
      FormBox[
        RowBox[{
          FormBox[\(a\_"+"\),
            "TraditionalForm"], "=", \(a\ \(cos \((\[Theta]/2)\)\)\)}], 
        TraditionalForm], "\[IndentingNewLine]", 
      FormBox[
        RowBox[{
          FormBox[\(a\_"-"\),
            "TraditionalForm"], "=", \(a\ \(sin \((\[Theta]/2)\)\)\)}], 
        TraditionalForm]}]],
  "\nWe can also refine \[Delta] in terms of the azimuthal \[Phi] angle in  \
the stokes space.\n\t\t",
  Cell[BoxData[
      \(TraditionalForm\`\[Delta] = \ \[Phi]/2\)]]
}], "EmphasisText"],

Cell[BoxData[{
    \(pd /. {ap \[Rule] a*Cos[\[Theta]/2], 
        am \[Rule] 
          a*Sin[\[Theta]/2], \[Delta] \[Rule] \ \[Phi]/
            2}\), "\[IndentingNewLine]", 
    \(%/\((a^2*\[Omega]^2)\) // Simplify\)}], "Input"],

Cell["\<\
The spacial components of this vector define a sphere of radius 1 for \
monocromatic waves. If the vector lies in  the x-y plane the polarization is \
linear. If the vector lies along the z component the polarization is either \
positive circular or negative circular. \
\>", "Text"],

Cell["\<\
The variation of the angles in the Stokes space are twice the variation of \
the angles in our regular space.\
\>", "EmphasisText"]
}, Closed]],

Cell["Polarizer and Phase Shifters", "Section"],

Cell[CellGroupData[{

Cell["Selected Problems", "Section"],

Cell[CellGroupData[{

Cell["2 Three Polarizers in Series.", "Subsection"],

Cell[TextData[{
  "Let's define the initial Poincare spinor with  ",
  Cell[BoxData[
      \(TraditionalForm\`\(a\_+\)\)]],
  "=  ",
  Cell[BoxData[
      \(TraditionalForm\`a\_"-"\)]],
  " to simplify the calculus."
}], "Text"],

Cell[BoxData[
    \(\[Phi]0 = \(\[Phi] /. PoincareSpinorRule\) /. am \[Rule] ap\)], "Input"],

Cell[TextData[{
  "The projectors along the ",
  Cell[BoxData[
      \(\[Sigma]\_1\)]],
  " and its perpendicular polarization direction (which corresponds to ",
  Cell[BoxData[
      \(\(-\[Sigma]\_1\)\)]],
  "in the stokes space) are:"
}], "Text"],

Cell[BoxData[{
    \(P1 = 1/2 \((IdentityMatrix[2] + \[Sigma]1)\)\), "\[IndentingNewLine]", 
    \(P3 = 1/2 \((IdentityMatrix[2] - \[Sigma]1)\)\)}], "Input"],

Cell["The Poincare spinor after the firts polarizer is:", "Text"],

Cell[BoxData[
    \(P1 . \[Phi]0 // Expand\)], "Input"],

Cell["\<\
Now making it pass directly through the third  perpendicular polarizer we \
have zero.\
\>", "Text"],

Cell[BoxData[
    \(P3 . P1 . \[Phi]0 // ComplexExpand\)], "Input"],

Cell[TextData[{
  "Now defining another projector between them (45 degrees correcponding to \
the ",
  Cell[BoxData[
      \(\[Sigma]\_2\)]],
  "direction in the Stokes space):"
}], "Text"],

Cell[BoxData[
    \(P2 = 1/2 \((IdentityMatrix[2] + \[Sigma]2)\)\)], "Input"],

Cell["The Poincare spinor after the second polarizer is:", "Text"],

Cell[BoxData[
    \(P2 . P1 . \[Phi]0 // ComplexExpand\)], "Input"],

Cell["\<\
The Poincare spinor after the second and then after the third polarizer is:\
\>", "Text"],

Cell[BoxData[
    \(\[Phi]f = P3 . P2 . P1 . \[Phi]0 // ComplexExpand\)], "Input"],

Cell["which is not zero!.", "Text"],

Cell["\<\
Now obtaining the real electric field we see that is is linearly polarized.\
\>", "Text"],

Cell[BoxData[{
    \(RealPart[{PVector[\[Epsilon]], 
            SuperDagger[PVector[\[Epsilon]]]} . \[Phi]f*
        Exp[\(-I\)*s]]\), "\[IndentingNewLine]", 
    \(\(\(\(ExpandRealPart[%] // ExpToTrig\) // ComplexExpand\) // 
        ExpandAll\) // Factor\), "\[IndentingNewLine]", 
    \(% /. CircularToCartesiansBasisRule\)}], "Input"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Reference", "Section"],

Cell[TextData[{
  StyleBox["William Baylis, ",
    FontSize->16],
  StyleBox["Electrodynamics. A Modern Geometric Approach",
    FontSize->16,
    FontSlant->"Italic"],
  StyleBox[", Birkhauser,2002.",
    FontSize->16]
}], "Text"]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "Subsubtitle"],

Cell["", "Subsubtitle"]
}, Open  ]]
}, Open  ]]
},
FrontEndVersion->"4.1 for Microsoft Windows",
ScreenRectangle->{{0, 800}, {0, 527}},
AutoGeneratedPackage->None,
WindowToolbars->{},
WindowSize->{734, 500},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
CellLabelAutoDelete->True,
StyleDefinitions -> "TensorialStyle.nb"
]

(*******************************************************************
Cached data follows.  If you edit this Notebook file directly, not
using Mathematica, you must remove the line containing CacheID at
the top of  the file.  The cache data will then be recreated when
you save this file from within Mathematica.
*******************************************************************)

(*CellTagsOutline
CellTagsIndex->{}
*)

(*CellTagsIndex
CellTagsIndex->{}
*)

(*NotebookFileOutline
Notebook[{

Cell[CellGroupData[{
Cell[1727, 52, 29, 0, 76, "Title"],
Cell[1759, 54, 267, 7, 147, "Subtitle"],
Cell[2029, 63, 74, 1, 46, "Input"],
Cell[2106, 66, 65, 1, 46, "Input"],
Cell[2174, 69, 31, 0, 34, "Text"],
Cell[2208, 71, 418, 8, 126, "Input"],
Cell[2629, 81, 147, 2, 66, "Input"],

Cell[CellGroupData[{
Cell[2801, 87, 31, 0, 61, "Section"],
Cell[2835, 89, 74, 2, 34, "Text"],
Cell[2912, 93, 152, 3, 66, "Input"],
Cell[3067, 98, 1732, 49, 34, "Text"],
Cell[4802, 149, 76, 2, 34, "Text"],
Cell[4881, 153, 356, 5, 86, "Input"],
Cell[5240, 160, 5035, 124, 91, "Text"],
Cell[10278, 286, 1368, 42, 34, "Text"],
Cell[11649, 330, 49, 0, 34, "Text"],
Cell[11701, 332, 275, 5, 86, "Input"],
Cell[11979, 339, 74, 0, 34, "Text"],
Cell[12056, 341, 273, 5, 106, "Input"],
Cell[12332, 348, 85, 2, 34, "Text"],
Cell[12420, 352, 111, 3, 34, "Text"],
Cell[12534, 357, 218, 4, 66, "Input"]
}, Closed]],

Cell[CellGroupData[{
Cell[12789, 366, 34, 0, 41, "Section"],
Cell[12826, 368, 1168, 33, 55, "Text"],
Cell[13997, 403, 153, 3, 46, "Input"],
Cell[14153, 408, 91, 2, 34, "Text"],
Cell[14247, 412, 320, 6, 86, "Input"],
Cell[14570, 420, 64, 0, 34, "Text"],
Cell[14637, 422, 367, 7, 86, "Input"],
Cell[15007, 431, 146, 3, 34, "Text"]
}, Closed]],

Cell[CellGroupData[{
Cell[15190, 439, 31, 0, 41, "Section"],
Cell[15224, 441, 1024, 31, 54, "Text"],
Cell[16251, 474, 340, 14, 34, "Text"],
Cell[16594, 490, 253, 4, 86, "Input"],
Cell[16850, 496, 1836, 55, 34, "Text"],
Cell[18689, 553, 423, 9, 126, "Input"],
Cell[19115, 564, 47, 0, 34, "Text"],
Cell[19165, 566, 326, 7, 86, "Input"],
Cell[19494, 575, 40, 0, 34, "Text"],
Cell[19537, 577, 179, 3, 66, "Input"],
Cell[19719, 582, 91, 2, 34, "Text"],
Cell[19813, 586, 274, 5, 86, "Input"],
Cell[20090, 593, 53, 0, 34, "Text"],
Cell[20146, 595, 285, 5, 86, "Input"]
}, Closed]],

Cell[CellGroupData[{
Cell[20468, 605, 36, 0, 41, "Section"],
Cell[20507, 607, 63, 0, 34, "Text"],
Cell[20573, 609, 279, 4, 106, "Input"],
Cell[20855, 615, 112, 3, 34, "Text"],
Cell[20970, 620, 587, 10, 186, "Input"],
Cell[21560, 632, 627, 18, 34, "Text"],
Cell[22190, 652, 167, 2, 46, "Input"],
Cell[22360, 656, 59, 0, 34, "Text"],
Cell[22422, 658, 78, 1, 46, "Input"],
Cell[22503, 661, 58, 0, 34, "Text"],
Cell[22564, 663, 119, 3, 46, "Input"],
Cell[22686, 668, 62, 0, 34, "Text"],
Cell[22751, 670, 68, 1, 46, "Input"],
Cell[22822, 673, 88, 2, 34, "Text"],
Cell[22913, 677, 200, 3, 66, "Input"],
Cell[23116, 682, 830, 24, 146, "EmphasisText"],
Cell[23949, 708, 231, 5, 66, "Input"],
Cell[24183, 715, 293, 5, 74, "Text"],
Cell[24479, 722, 141, 3, 68, "EmphasisText"]
}, Closed]],
Cell[24635, 728, 47, 0, 41, "Section"],

Cell[CellGroupData[{
Cell[24707, 732, 36, 0, 61, "Section"],

Cell[CellGroupData[{
Cell[24768, 736, 51, 0, 49, "Subsection"],
Cell[24822, 738, 228, 8, 34, "Text"],
Cell[25053, 748, 92, 1, 46, "Input"],
Cell[25148, 751, 249, 8, 54, "Text"],
Cell[25400, 761, 157, 2, 66, "Input"],
Cell[25560, 765, 65, 0, 34, "Text"],
Cell[25628, 767, 55, 1, 46, "Input"],
Cell[25686, 770, 110, 3, 34, "Text"],
Cell[25799, 775, 67, 1, 46, "Input"],
Cell[25869, 778, 189, 6, 34, "Text"],
Cell[26061, 786, 77, 1, 46, "Input"],
Cell[26141, 789, 66, 0, 34, "Text"],
Cell[26210, 791, 67, 1, 46, "Input"],
Cell[26280, 794, 99, 2, 34, "Text"],
Cell[26382, 798, 82, 1, 46, "Input"],
Cell[26467, 801, 35, 0, 34, "Text"],
Cell[26505, 803, 99, 2, 34, "Text"],
Cell[26607, 807, 339, 6, 86, "Input"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{
Cell[26995, 819, 28, 0, 41, "Section"],
Cell[27026, 821, 231, 8, 37, "Text"]
}, Open  ]],

Cell[CellGroupData[{
Cell[27294, 834, 23, 0, 43, "Subsubtitle"],
Cell[27320, 836, 23, 0, 43, "Subsubtitle"]
}, Open  ]]
}, Open  ]]
}
]
*)



(*******************************************************************
End of Mathematica Notebook file.
*******************************************************************)

