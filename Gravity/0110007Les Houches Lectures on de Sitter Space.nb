(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.2' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    624290,      12735]
NotebookOptionsPosition[    619502,      12644]
NotebookOutlinePosition[    619870,      12660]
CellTagsIndexPosition[    619827,      12657]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[{
 RowBox[{"<<", 
  "Local`QFTToolKit2`"}], "\[IndentingNewLine]", "tuItalics", "\
\[IndentingNewLine]", 
 RowBox[{"tuArXiv", "[", "\"\<hep-th/0110007\>\"", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"tuLoad", "[", "\"\<Gravity/gravityDefinitions.out\>\"", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"$metricSchwarzschildDeSitter", ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.56864327369387*^9, 3.5686433185337973`*^9}, {
   3.636124223447123*^9, 3.6361242241696672`*^9}, {3.640430449322165*^9, 
   3.640430454418408*^9}, {3.6464973100744457`*^9, 3.646497314447693*^9}, {
   3.6694279608619347`*^9, 3.6694280040414133`*^9}, 3.670117817981682*^9, {
   3.671366579055991*^9, 3.6713666038803663`*^9}, {3.689772928097857*^9, 
   3.689772930433343*^9}, {3.732388727865262*^9, 3.732388755781152*^9}, {
   3.777221915099526*^9, 3.777221934544393*^9}, {3.791814820726375*^9, 
   3.791814847130887*^9}, {3.7995910396051483`*^9, 3.7995910526802473`*^9}, 
   3.7995910935122137`*^9, {3.799938563723081*^9, 3.7999385804396553`*^9}, {
   3.8053061019789743`*^9, 3.805306107680591*^9}, {3.8059888871267138`*^9, 
   3.805988895857871*^9}, {3.805989173548664*^9, 3.805989185960752*^9}, {
   3.805989506451962*^9, 3.805989516479254*^9}, {3.80684137993312*^9, 
   3.806841388847777*^9}},ExpressionUUID->"882ea1d0-4886-4f7a-9b0a-\
20e0867f772c"],

Cell[BoxData["\<\"Thu 3 Sep 2020 08:58:33\"\>"], "Output",
 CellChangeTimes->{{3.805989188054802*^9, 3.805989189028328*^9}, 
   3.8059895191391573`*^9, 3.806326372984807*^9, {3.80667612201088*^9, 
   3.806676122813621*^9}, {3.80805291855443*^9, 3.8080529227179117`*^9}, 
   3.808136504428102*^9, 
   3.8081375131132793`*^9},ExpressionUUID->"f8c593b0-a6b0-4c4a-8baf-\
1fa7f72b112f"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{"\"https://arxiv.org/abs/hep-th/0110007\""},
   "URLArgument"], "]"}]], "Output",
 CellChangeTimes->{{3.805989188054802*^9, 3.805989189028328*^9}, 
   3.8059895191391573`*^9, 3.806326372984807*^9, {3.80667612201088*^9, 
   3.806676122813621*^9}, {3.80805291855443*^9, 3.8080529227179117`*^9}, 
   3.808136504428102*^9, 
   3.808137513229969*^9},ExpressionUUID->"0c3be116-536b-4df0-b16f-\
5885e818c93e"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"u", "\[Rule]", 
    RowBox[{
     RowBox[{"-", "r"}], "+", "t"}]}], ",", 
   RowBox[{"v", "\[Rule]", 
    RowBox[{"r", "+", "t"}]}]}], "}"}]], "Output",
 CellChangeTimes->{{3.805989188054802*^9, 3.805989189028328*^9}, 
   3.8059895191391573`*^9, 3.806326372984807*^9, {3.80667612201088*^9, 
   3.806676122813621*^9}, {3.80805291855443*^9, 3.8080529227179117`*^9}, 
   3.808136504428102*^9, 
   3.808137513515417*^9},ExpressionUUID->"6fae3a78-7691-4b43-bc61-\
be9851915246"]
}, Open  ]],

Cell[CellGroupData[{

Cell["2 Classical Geometry of De Sittter Space", "Subsection",
 CellChangeTimes->{{3.8068410285638027`*^9, 
  3.806841043536345*^9}},ExpressionUUID->"03545561-06e1-4082-ae30-\
7ce779402bbe"],

Cell[CellGroupData[{

Cell["2.3 Geodesics", "Subsubsection",
 CellChangeTimes->{{3.806841090879998*^9, 
  3.8068410958235693`*^9}},ExpressionUUID->"482a70d5-a698-4342-a7da-\
3e635b61612a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"PR", "[", 
   RowBox[{
   "\"\<On a sphere of radius R\>\"", "\[IndentingNewLine]", ",", "NL", ",", 
    RowBox[{
     RowBox[{"$0", "=", 
      RowBox[{"$", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          SuperscriptBox["S", "n"], "[", 
          RowBox[{"CG", "[", "\"\<sphere of radius R\>\"", "]"}], "]"}], 
         "\[IndentingNewLine]", ",", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"d", "[", "s", "]"}], "[", 
            RowBox[{"X1", ",", "X2"}], "]"}], "}"}], "[", 
          RowBox[{"CG", "[", 
           RowBox[{"\"\<SO[n+1] invariant distance \>\"", ",", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"X1", ",", "X2"}], "}"}], "\[Element]", 
             SuperscriptBox["S", "n"]}]}], "]"}], "]"}], 
         "\[IndentingNewLine]", ",", 
         RowBox[{
          RowBox[{"d", "[", "s", "]"}], "\[Rule]", 
          RowBox[{"iD", " ", "\[Rule]", 
           RowBox[{"R", " ", 
            RowBox[{"\[Theta]", "[", 
             RowBox[{"CG", "[", "\"\<angle between points\>\"", "]"}], 
             "]"}]}]}]}], "\[IndentingNewLine]", ",", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"T", "[", 
               RowBox[{"\[Delta]", ",", "\"\<dd\>\"", ",", 
                RowBox[{"{", 
                 RowBox[{"i", ",", "j"}], "}"}]}], "]"}], 
              RowBox[{"T", "[", 
               RowBox[{"X", ",", "\"\<u\>\"", ",", 
                RowBox[{"{", "i", "}"}]}], "]"}], 
              RowBox[{"T", "[", 
               RowBox[{"X", ",", "\"\<u\>\"", ",", 
                RowBox[{"{", "j", "}"}]}], "]"}]}], "\[Rule]", 
             SuperscriptBox["R", "2"]}], "\[IndentingNewLine]", ",", 
            RowBox[{"$", "=", 
             RowBox[{
              RowBox[{
               SuperscriptBox["R", "2"], " ", 
               RowBox[{"P", "[", 
                RowBox[{"X1", ",", "X2"}], "]"}]}], "\[Rule]", " ", 
              RowBox[{
               RowBox[{"T", "[", 
                RowBox[{"\[Delta]", ",", "\"\<dd\>\"", ",", 
                 RowBox[{"{", 
                  RowBox[{"i", ",", "j"}], "}"}]}], "]"}], 
               RowBox[{"T", "[", 
                RowBox[{"X1", ",", "\"\<u\>\"", ",", 
                 RowBox[{"{", "i", "}"}]}], "]"}], 
               RowBox[{"T", "[", 
                RowBox[{"X2", ",", "\"\<u\>\"", ",", 
                 RowBox[{"{", "j", "}"}]}], "]"}]}]}]}], 
            "\[IndentingNewLine]", ",", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"$", "//", 
                RowBox[{"tuRuleSolveF", "[", 
                 RowBox[{"P", "[", 
                  RowBox[{"_", ",", "_"}], "]"}], "]"}]}], "//", 
               RowBox[{
                RowBox[{"Part", "[", 
                 RowBox[{"#", ",", "1"}], "]"}], "&"}]}], "}"}], "[", 
             RowBox[{"CG", "[", "\"\<define P\>\"", "]"}], "]"}]}], 
           "\[IndentingNewLine]", "}"}], "[", 
          RowBox[{
          "CG", "[", 
           "\"\<embed in \!\(\*SuperscriptBox[\(\[DoubleStruckCapitalR]\), \
\(n + 1\)]\)\>\"", "]"}], "]"}]}], "\[IndentingNewLine]", "}"}]}]}], ";", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"ColumnForms", "[", 
         RowBox[{"#1", ",", "3"}], "]"}], "&"}], ")"}], "[", "$", "]"}]}]}], 
   "\[IndentingNewLine]", "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.806841097737639*^9, 3.8068410997713547`*^9}, 
   3.806841401749539*^9, {3.806841447818437*^9, 3.806841586780781*^9}, {
   3.8068416188822947`*^9, 3.806841626840735*^9}, {3.806841667567109*^9, 
   3.806841786907033*^9}, {3.8068418212036133`*^9, 3.806842140002015*^9}, {
   3.806842186982499*^9, 3.8068423257971287`*^9}, {3.8068423634755783`*^9, 
   3.806842398746814*^9}, {3.806842432989388*^9, 3.806842469531949*^9}, {
   3.8068425073088493`*^9, 3.806842617864357*^9}, {3.8068427003857203`*^9, 
   3.806842713675025*^9}, {3.8068427956466293`*^9, 3.8068428796940727`*^9}, {
   3.8068430065596247`*^9, 3.806843049645084*^9}, {3.806843083892418*^9, 
   3.8068431022451897`*^9}, {3.806843325394943*^9, 3.8068433260296707`*^9}, {
   3.806843455707006*^9, 3.806843696729293*^9}, {3.8068441219460697`*^9, 
   3.806844140676095*^9}, {3.8068441941968822`*^9, 3.80684422292789*^9}, {
   3.80684433972542*^9, 3.806844357468337*^9}, {3.8068443907201233`*^9, 
   3.806844417571268*^9}, {3.806844466440908*^9, 3.806844596666587*^9}, {
   3.80684476706588*^9, 3.806844777408371*^9}, {3.806844811237834*^9, 
   3.806844816700884*^9}, {3.8068452039120083`*^9, 3.8068452267831993`*^9}, {
   3.806845643802902*^9, 3.806845678005044*^9}, {3.806845926491735*^9, 
   3.806845937289695*^9}, 3.806847128855727*^9, {3.806847161993753*^9, 
   3.8068471626161947`*^9}, {3.8068472205571203`*^9, 
   3.8068472317995243`*^9}, {3.806848291616865*^9, 
   3.806848294670596*^9}},ExpressionUUID->"8cd6d54b-b601-4dce-a85a-\
f9468b66fd96"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   StyleBox["\<\"On a sphere of radius R\"\>",
    StripOnInput->False,
    LineColor->RGBColor[0.7, 0, 1],
    LineOpacity->1,
    FrontFaceColor->RGBColor[0.7, 0, 1],
    BackFaceColor->RGBColor[0.7, 0, 1],
    FrontFaceOpacity->1,
    BackFaceOpacity->1,
    GraphicsColor->RGBColor[0.7, 0, 1],
    Opacity->1,
    FontSize->Larger,
    FontColor->RGBColor[0.7, 0, 1],
    FontOpacity->1], "\[InvisibleSpace]", 
   StyleBox["\<\"\\n\"\>",
    StripOnInput->False,
    LineColor->RGBColor[0.7, 0, 1],
    LineOpacity->1,
    FrontFaceColor->RGBColor[0.7, 0, 1],
    BackFaceColor->RGBColor[0.7, 0, 1],
    FrontFaceOpacity->1,
    BackFaceOpacity->1,
    GraphicsColor->RGBColor[0.7, 0, 1],
    Opacity->1,
    FontSize->Larger,
    FontColor->RGBColor[0.7, 0, 1],
    FontOpacity->1], "\[InvisibleSpace]", 
   TagBox[GridBox[{
      {
       RowBox[{
        SuperscriptBox["S", "n"], "[", 
        StyleBox["\<\"sphere of radius R\"\>",
         StripOnInput->False,
         LineColor->RGBColor[0, 
           Rational[2, 3], 0],
         FrontFaceColor->RGBColor[0, 
           Rational[2, 3], 0],
         BackFaceColor->RGBColor[0, 
           Rational[2, 3], 0],
         GraphicsColor->RGBColor[0, 
           Rational[2, 3], 0],
         FontFamily->"Helvetica",
         FontColor->RGBColor[0, 
           Rational[2, 3], 0]], "]"}]},
      {
       RowBox[{
        TagBox[GridBox[{
           {
            RowBox[{
             RowBox[{"d", "[", "s", "]"}], "[", 
             RowBox[{"X1", ",", "X2"}], "]"}]}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            RGBColor[0.7, 0, 1, 1], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {{Left}}},
          GridBoxDividers->{"Columns" -> {True}, "Rows" -> {False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"], "[", 
        RowBox[{
         StyleBox["\<\"SO[n+1] invariant distance \"\>",
          StripOnInput->False,
          LineColor->RGBColor[0, 
            Rational[2, 3], 0],
          FrontFaceColor->RGBColor[0, 
            Rational[2, 3], 0],
          BackFaceColor->RGBColor[0, 
            Rational[2, 3], 0],
          GraphicsColor->RGBColor[0, 
            Rational[2, 3], 0],
          FontFamily->"Helvetica",
          FontColor->RGBColor[0, 
            Rational[2, 3], 0]], ",", 
         StyleBox[
          RowBox[{
           RowBox[{"{", 
            RowBox[{"X1", ",", "X2"}], "}"}], "\[Element]", 
           SuperscriptBox["S", "n"]}],
          StripOnInput->False,
          LineColor->RGBColor[0, 
            Rational[2, 3], 0],
          FrontFaceColor->RGBColor[0, 
            Rational[2, 3], 0],
          BackFaceColor->RGBColor[0, 
            Rational[2, 3], 0],
          GraphicsColor->RGBColor[0, 
            Rational[2, 3], 0],
          FontFamily->"Helvetica",
          FontColor->RGBColor[0, 
            Rational[2, 3], 0]]}], "]"}]},
      {
       RowBox[{
        RowBox[{"d", "[", "s", "]"}], "\[Rule]", 
        RowBox[{
         StyleBox["\<\"D\"\>",
          StripOnInput->False,
          FontSlant->Italic], "\[Rule]", 
         RowBox[{"R", " ", 
          RowBox[{"\[Theta]", "[", 
           StyleBox["\<\"angle between points\"\>",
            StripOnInput->False,
            LineColor->RGBColor[0, 
              Rational[2, 3], 0],
            FrontFaceColor->RGBColor[0, 
              Rational[2, 3], 0],
            BackFaceColor->RGBColor[0, 
              Rational[2, 3], 0],
            GraphicsColor->RGBColor[0, 
              Rational[2, 3], 0],
            FontFamily->"Helvetica",
            FontColor->RGBColor[0, 
              Rational[2, 3], 0]], "]"}]}]}]}]},
      {
       RowBox[{
        TagBox[GridBox[{
           {
            RowBox[{
             RowBox[{
              InterpretationBox[
               SubsuperscriptBox["X", 
                StyleBox["i",
                 StripOnInput->False,
                 ShowContents->False], "i"],
               $CellContext`Tensor[$CellContext`X, {$CellContext`i}, \
{$CellContext`Void}],
               BaseStyle->{AutoMultiplicationSymbol -> False},
               Editable->False], " ", 
              InterpretationBox[
               SubsuperscriptBox["X", 
                StyleBox["j",
                 StripOnInput->False,
                 ShowContents->False], "j"],
               $CellContext`Tensor[$CellContext`X, {$CellContext`j}, \
{$CellContext`Void}],
               BaseStyle->{AutoMultiplicationSymbol -> False},
               Editable->False], " ", 
              InterpretationBox[
               SubsuperscriptBox["\[Delta]", 
                RowBox[{"i", "j"}], 
                StyleBox[
                 RowBox[{"i", "j"}],
                 StripOnInput->False,
                 ShowContents->False]],
               $CellContext`Tensor[$CellContext`\[Delta], {$CellContext`Void, \
$CellContext`Void}, {$CellContext`i, $CellContext`j}],
               BaseStyle->{AutoMultiplicationSymbol -> False},
               Editable->False]}], "\[Rule]", 
             SuperscriptBox["R", "2"]}]},
           {
            RowBox[{
             RowBox[{
              SuperscriptBox["R", "2"], " ", 
              RowBox[{"P", "[", 
               RowBox[{"X1", ",", "X2"}], "]"}]}], "\[Rule]", 
             RowBox[{
              InterpretationBox[
               SubsuperscriptBox["X1", 
                StyleBox["i",
                 StripOnInput->False,
                 ShowContents->False], "i"],
               $CellContext`Tensor[$CellContext`X1, {$CellContext`i}, \
{$CellContext`Void}],
               BaseStyle->{AutoMultiplicationSymbol -> False},
               Editable->False], " ", 
              InterpretationBox[
               SubsuperscriptBox["X2", 
                StyleBox["j",
                 StripOnInput->False,
                 ShowContents->False], "j"],
               $CellContext`Tensor[$CellContext`X2, {$CellContext`j}, \
{$CellContext`Void}],
               BaseStyle->{AutoMultiplicationSymbol -> False},
               Editable->False], " ", 
              InterpretationBox[
               SubsuperscriptBox["\[Delta]", 
                RowBox[{"i", "j"}], 
                StyleBox[
                 RowBox[{"i", "j"}],
                 StripOnInput->False,
                 ShowContents->False]],
               $CellContext`Tensor[$CellContext`\[Delta], {$CellContext`Void, \
$CellContext`Void}, {$CellContext`i, $CellContext`j}],
               BaseStyle->{AutoMultiplicationSymbol -> False},
               Editable->False]}]}]},
           {
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"P", "[", 
                RowBox[{"X1", ",", "X2"}], "]"}], "\[Rule]", 
               FractionBox[
                RowBox[{
                 InterpretationBox[
                  SubsuperscriptBox["X1", 
                   StyleBox["i",
                    StripOnInput->False,
                    ShowContents->False], "i"],
                  $CellContext`Tensor[$CellContext`X1, {$CellContext`i}, \
{$CellContext`Void}],
                  BaseStyle->{AutoMultiplicationSymbol -> False},
                  Editable->False], " ", 
                 InterpretationBox[
                  SubsuperscriptBox["X2", 
                   StyleBox["j",
                    StripOnInput->False,
                    ShowContents->False], "j"],
                  $CellContext`Tensor[$CellContext`X2, {$CellContext`j}, \
{$CellContext`Void}],
                  BaseStyle->{AutoMultiplicationSymbol -> False},
                  Editable->False], " ", 
                 InterpretationBox[
                  SubsuperscriptBox["\[Delta]", 
                   RowBox[{"i", "j"}], 
                   StyleBox[
                    RowBox[{"i", "j"}],
                    StripOnInput->False,
                    ShowContents->False]],
                  $CellContext`Tensor[$CellContext`\[Delta], \
{$CellContext`Void, $CellContext`Void}, {$CellContext`i, $CellContext`j}],
                  BaseStyle->{AutoMultiplicationSymbol -> False},
                  Editable->False]}], 
                SuperscriptBox["R", "2"]]}], "}"}], "[", 
             StyleBox["\<\"define P\"\>",
              StripOnInput->False,
              LineColor->RGBColor[0, 
                Rational[2, 3], 0],
              FrontFaceColor->RGBColor[0, 
                Rational[2, 3], 0],
              BackFaceColor->RGBColor[0, 
                Rational[2, 3], 0],
              GraphicsColor->RGBColor[0, 
                Rational[2, 3], 0],
              FontFamily->"Helvetica",
              FontColor->RGBColor[0, 
                Rational[2, 3], 0]], "]"}]}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            RGBColor[0.7, 0, 1, 1], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {{Left}}},
          GridBoxDividers->{"Columns" -> {True}, "Rows" -> {False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"], "[", 
        StyleBox["\<\"embed in \\!\\(\\*SuperscriptBox[\\(\
\[DoubleStruckCapitalR]\\), \\(n + 1\\)]\\)\"\>",
         StripOnInput->False,
         LineColor->RGBColor[0, 
           Rational[2, 3], 0],
         FrontFaceColor->RGBColor[0, 
           Rational[2, 3], 0],
         BackFaceColor->RGBColor[0, 
           Rational[2, 3], 0],
         GraphicsColor->RGBColor[0, 
           Rational[2, 3], 0],
         FontFamily->"Helvetica",
         FontColor->RGBColor[0, 
           Rational[2, 3], 0]], "]"}]}
     },
     AutoDelete->False,
     FrameStyle->Directive[
       RGBColor[0.7, 0, 1, 1], 
       Thickness[Tiny]],
     GridBoxAlignment->{"Columns" -> {{Left}}},
     GridBoxDividers->{"Columns" -> {True}, "Rows" -> {False}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
    "Grid"]}],
  SequenceForm[
   Style["On a sphere of radius R", 
    RGBColor[0.7, 0, 1, 1], Larger], 
   Style["\n", 
    RGBColor[0.7, 0, 1, 1], Larger], 
   Grid[{{
      ($CellContext`S^$CellContext`n)[
       Style["sphere of radius R", 
        RGBColor[0, 
         Rational[2, 3], 0], FontFamily -> "Helvetica"]]}, {
      Grid[{{
         $CellContext`d[$CellContext`s][$CellContext`X1, $CellContext`X2]}}, 
       Dividers -> {{True}, {False}}, FrameStyle -> Directive[
         RGBColor[0.7, 0, 1, 1], 
         Thickness[Tiny]], Alignment -> Left][
       Style["SO[n+1] invariant distance ", 
        RGBColor[0, 
         Rational[2, 3], 0], FontFamily -> "Helvetica"], 
       Style[
        Element[{$CellContext`X1, $CellContext`X2}, \
$CellContext`S^$CellContext`n], 
        RGBColor[0, 
         Rational[2, 3], 0], FontFamily -> 
        "Helvetica"]]}, {$CellContext`d[$CellContext`s] -> (
       Style["D", Italic] -> $CellContext`R $CellContext`\[Theta][
          Style["angle between points", 
           RGBColor[0, 
            Rational[2, 3], 0], FontFamily -> "Helvetica"]])}, {
      Grid[{{$CellContext`Tensor[$CellContext`X, {$CellContext`i}, \
{$CellContext`Void}] $CellContext`Tensor[$CellContext`X, {$CellContext`j}, \
{$CellContext`Void}] $CellContext`Tensor[$CellContext`\[Delta], \
{$CellContext`Void, $CellContext`Void}, {$CellContext`i, $CellContext`j}] -> \
$CellContext`R^2}, {$CellContext`R^2 $CellContext`P[$CellContext`X1, \
$CellContext`X2] -> $CellContext`Tensor[$CellContext`X1, {$CellContext`i}, \
{$CellContext`Void}] $CellContext`Tensor[$CellContext`X2, {$CellContext`j}, \
{$CellContext`Void}] $CellContext`Tensor[$CellContext`\[Delta], \
{$CellContext`Void, $CellContext`Void}, {$CellContext`i, $CellContext`j}]}, {
         {$CellContext`P[$CellContext`X1, $CellContext`X2] -> \
$CellContext`R^(-2) $CellContext`Tensor[$CellContext`X1, {$CellContext`i}, \
{$CellContext`Void}] $CellContext`Tensor[$CellContext`X2, {$CellContext`j}, \
{$CellContext`Void}] $CellContext`Tensor[$CellContext`\[Delta], \
{$CellContext`Void, $CellContext`Void}, {$CellContext`i, $CellContext`j}]}[
          Style["define P", 
           RGBColor[0, 
            Rational[2, 3], 0], FontFamily -> "Helvetica"]]}}, 
       Dividers -> {{True}, {False}}, FrameStyle -> Directive[
         RGBColor[0.7, 0, 1, 1], 
         Thickness[Tiny]], Alignment -> Left][
       Style[
       "embed in \!\(\*SuperscriptBox[\(\[DoubleStruckCapitalR]\), \(n + 1\)]\
\)", 
        RGBColor[0, 
         Rational[2, 3], 0], FontFamily -> "Helvetica"]]}}, 
    Dividers -> {{True}, {False}}, FrameStyle -> Directive[
      RGBColor[0.7, 0, 1, 1], 
      Thickness[Tiny]], Alignment -> Left]],
  Editable->False]], "Print",
 CellChangeTimes->{3.806848296806954*^9, 
  3.808052924500008*^9},ExpressionUUID->"69fc38e8-d6f6-43d4-a57c-\
2b7d4f15eb50"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"PR", "[", 
   RowBox[{"\"\<On DeSitter space\>\"", "\[IndentingNewLine]", ",", "NL", ",", 
    RowBox[{
     RowBox[{"$", "=", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{"$sP", "=", 
           RowBox[{
            RowBox[{"P", "[", 
             RowBox[{"X1", ",", "X2"}], "]"}], "\[Rule]", " ", 
            RowBox[{
             RowBox[{
              RowBox[{"T", "[", 
               RowBox[{"\[Eta]", ",", "\"\<dd\>\"", ",", 
                RowBox[{"{", 
                 RowBox[{"i", ",", "j"}], "}"}]}], "]"}], "[", 
              RowBox[{"CG", "[", "\"\<Minkowski\>\"", "]"}], "]"}], 
             RowBox[{"T", "[", 
              RowBox[{"X1", ",", "\"\<u\>\"", ",", 
               RowBox[{"{", "i", "}"}]}], "]"}], 
             RowBox[{"T", "[", 
              RowBox[{"X2", ",", "\"\<u\>\"", ",", 
               RowBox[{"{", "j", "}"}]}], "]"}]}]}]}], "}"}], "[", 
         RowBox[{"CG", "[", 
          RowBox[{"\"\<embed in DeSitter space\>\"", ",", 
           SubscriptBox["dS", "d"], ",", 
           RowBox[{"\[ScriptL]", "\[Rule]", 
            RowBox[{"(", 
             RowBox[{"R", "\[Rule]", "1"}], ")"}]}]}], "]"}], "]"}], 
        "\[IndentingNewLine]", ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"P", "\[Rule]", 
           RowBox[{"Cos", "[", 
            RowBox[{"iD", "[", 
             RowBox[{"CG", "[", "\"\<geodesic distance\>\"", "]"}], "]"}], 
            "]"}]}], "\[IndentingNewLine]", "}"}], "[", 
         RowBox[{"CG", "[", "\"\<define\>\"", "]"}], "]"}], 
        "\[IndentingNewLine]", ",", 
        RowBox[{"$sX", "=", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"T", "[", 
              RowBox[{"X", ",", "\"\<u\>\"", ",", 
               RowBox[{"{", "0", "}"}]}], "]"}], "\[Rule]", 
             RowBox[{
              RowBox[{"Sinh", "[", "t", "]"}], "-", 
              RowBox[{
               RowBox[{"1", "/", "2"}], "  ", 
               RowBox[{"T", "[", 
                RowBox[{"x", ",", "\"\<d\>\"", ",", 
                 RowBox[{"{", "i", "}"}]}], "]"}], " ", 
               RowBox[{"T", "[", 
                RowBox[{"x", ",", "\"\<u\>\"", ",", 
                 RowBox[{"{", "i", "}"}]}], "]"}], 
               RowBox[{"Exp", "[", 
                RowBox[{"-", "t"}], "]"}]}]}]}], "\[IndentingNewLine]", ",", 
            RowBox[{
             RowBox[{"T", "[", 
              RowBox[{"X", ",", "\"\<u\>\"", ",", 
               RowBox[{"{", "i", "}"}]}], "]"}], "->", 
             RowBox[{
              RowBox[{"T", "[", 
               RowBox[{"x", ",", "\"\<u\>\"", ",", 
                RowBox[{"{", "i", "}"}]}], "]"}], 
              RowBox[{"Exp", "[", 
               RowBox[{"-", "t"}], "]"}]}]}], "\[IndentingNewLine]", ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "1", ",", 
              RowBox[{"d", "-", "1"}]}], "}"}], "\[IndentingNewLine]", ",", 
            RowBox[{
             RowBox[{"T", "[", 
              RowBox[{"X", ",", "\"\<u\>\"", ",", 
               RowBox[{"{", "d", "}"}]}], "]"}], "\[Rule]", 
             RowBox[{
              RowBox[{"Cosh", "[", "t", "]"}], "-", 
              RowBox[{
               RowBox[{"1", "/", "2"}], "  ", 
               RowBox[{"T", "[", 
                RowBox[{"x", ",", "\"\<d\>\"", ",", 
                 RowBox[{"{", "i", "}"}]}], "]"}], " ", 
               RowBox[{"T", "[", 
                RowBox[{"x", ",", "\"\<u\>\"", ",", 
                 RowBox[{"{", "i", "}"}]}], "]"}], 
               RowBox[{"Exp", "[", 
                RowBox[{"-", "t"}], "]"}]}]}]}]}], "\[IndentingNewLine]", 
           "}"}], "[", 
          RowBox[{"CG", "[", "\"\<Planar coordinates\>\"", "]"}], "]"}]}], 
        "\[IndentingNewLine]", ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"$s", "=", 
            RowBox[{
             RowBox[{"$sX", "/.", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"xx", ":", 
                 RowBox[{"t", "|", "x"}]}], "\[Rule]", 
                RowBox[{"xx", "[", "X", "]"}]}], "}"}]}], "//", 
             RowBox[{"tuAddPatternVariable", "[", "X", "]"}]}]}], 
           "\[IndentingNewLine]", ",", 
           RowBox[{"$", "=", 
            RowBox[{
             RowBox[{"$sP", "[", 
              RowBox[{"[", "1", "]"}], "]"}], "\[Rule]", 
             RowBox[{"(", 
              RowBox[{"Sum", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"$sP", "//", "tuNoComments"}], "//", 
                 RowBox[{"part", "[", "2", "]"}]}], ",", 
                RowBox[{"{", 
                 RowBox[{"i", ",", 
                  RowBox[{"{", 
                   RowBox[{"0", ",", "kk", ",", "d"}], "}"}]}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"j", ",", 
                  RowBox[{"{", 
                   RowBox[{"0", ",", "jj", ",", "d"}], "}"}]}], "}"}]}], 
               "]"}], ")"}]}]}], "\[IndentingNewLine]", "\[IndentingNewLine]",
            ",", 
           RowBox[{"$", "=", 
            RowBox[{"$", "/.", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"T", "[", 
                RowBox[{"\[Eta]", ",", "\"\<dd\>\"", ",", 
                 RowBox[{"{", 
                  RowBox[{"i_", ",", "j_"}], "}"}]}], "]"}], "\[RuleDelayed]",
                " ", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"i", " ", "===", "0"}], " ", "&&", 
                  RowBox[{"j", " ", "===", "0"}]}], ",", 
                 RowBox[{"-", "1"}], ",", 
                 RowBox[{"If", "[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"i", " ", "===", "d"}], " ", "&&", 
                    RowBox[{"j", "===", "d"}]}], ",", "1", ",", "0"}], 
                  "]"}]}], "]"}]}], ")"}]}]}], "\[IndentingNewLine]", ",", 
           RowBox[{
            RowBox[{
             RowBox[{"e", "[", "33", "]"}], "=", "\[IndentingNewLine]", 
             RowBox[{"$", "=", 
              RowBox[{
               RowBox[{
                RowBox[{"$", "/.", 
                 RowBox[{"tuRule", "[", "$s", "]"}]}], "//", "Expand"}], "//",
                "Simplify"}]}]}], "\[IndentingNewLine]", ";", 
            RowBox[{
             RowBox[{"$", "//", "ColumnSumExp"}], "//", "Framed"}]}]}], 
          "\[IndentingNewLine]", "}"}], "[", 
         RowBox[{"CG", "[", "\"\<compute e[33]\>\"", "]"}], "]"}]}], 
       "\[IndentingNewLine]", "}"}]}], ";", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"ColumnForms", "[", 
         RowBox[{"#1", ",", "4"}], "]"}], "&"}], ")"}], "[", "$", "]"}]}]}], 
   "\[IndentingNewLine]", "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.806841097737639*^9, 3.8068410997713547`*^9}, 
   3.806841401749539*^9, {3.806841447818437*^9, 3.806841586780781*^9}, {
   3.8068416188822947`*^9, 3.806841626840735*^9}, {3.806841667567109*^9, 
   3.806841786907033*^9}, {3.8068418212036133`*^9, 3.806842140002015*^9}, {
   3.806842186982499*^9, 3.8068423257971287`*^9}, {3.8068423634755783`*^9, 
   3.806842398746814*^9}, {3.806842432989388*^9, 3.806842469531949*^9}, {
   3.8068425073088493`*^9, 3.806842617864357*^9}, {3.8068427003857203`*^9, 
   3.806842713675025*^9}, {3.8068427956466293`*^9, 3.8068428796940727`*^9}, {
   3.8068430065596247`*^9, 3.806843049645084*^9}, {3.806843083892418*^9, 
   3.8068431022451897`*^9}, {3.806843325394943*^9, 3.8068433260296707`*^9}, {
   3.806843455707006*^9, 3.806843696729293*^9}, {3.8068441219460697`*^9, 
   3.806844140676095*^9}, {3.8068441941968822`*^9, 3.80684422292789*^9}, {
   3.80684433972542*^9, 3.806844357468337*^9}, {3.8068443907201233`*^9, 
   3.806844417571268*^9}, {3.806844466440908*^9, 3.806844596666587*^9}, {
   3.80684476706588*^9, 3.806844777408371*^9}, {3.806844811237834*^9, 
   3.806844816700884*^9}, {3.8068452039120083`*^9, 3.8068452267831993`*^9}, {
   3.806845643802902*^9, 3.806845678005044*^9}, {3.806845926491735*^9, 
   3.806845937289695*^9}, 3.806847128855727*^9, {3.806847161993753*^9, 
   3.8068471626161947`*^9}, {3.8068472205571203`*^9, 
   3.8068472317995243`*^9}, {3.806848291616865*^9, 3.806848294670596*^9}, {
   3.806848330279327*^9, 3.806848333245775*^9}, {3.806848367709572*^9, 
   3.8068483834121*^9}, {3.8068484183649406`*^9, 3.806848435442049*^9}, {
   3.8068484734031887`*^9, 3.806848527659432*^9}, {3.806848560744816*^9, 
   3.806848561237174*^9}, {3.806848596943615*^9, 3.8068486015166197`*^9}, {
   3.806848735914248*^9, 3.806848743536747*^9}, {3.806849595725642*^9, 
   3.8068495978313303`*^9}, {3.8068515945301523`*^9, 3.80685161406411*^9}, {
   3.806852830106676*^9, 3.806852903543622*^9}, {3.806853374715622*^9, 
   3.80685340609455*^9}, {3.806854123840007*^9, 
   3.806854226916275*^9}},ExpressionUUID->"53761e2e-74ba-433c-826a-\
85328fee57aa"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   StyleBox["\<\"On DeSitter space\"\>",
    StripOnInput->False,
    LineColor->RGBColor[0.7, 0, 1],
    LineOpacity->1,
    FrontFaceColor->RGBColor[0.7, 0, 1],
    BackFaceColor->RGBColor[0.7, 0, 1],
    FrontFaceOpacity->1,
    BackFaceOpacity->1,
    GraphicsColor->RGBColor[0.7, 0, 1],
    Opacity->1,
    FontSize->Larger,
    FontColor->RGBColor[0.7, 0, 1],
    FontOpacity->1], "\[InvisibleSpace]", 
   StyleBox["\<\"\\n\"\>",
    StripOnInput->False,
    LineColor->RGBColor[0.7, 0, 1],
    LineOpacity->1,
    FrontFaceColor->RGBColor[0.7, 0, 1],
    BackFaceColor->RGBColor[0.7, 0, 1],
    FrontFaceOpacity->1,
    BackFaceOpacity->1,
    GraphicsColor->RGBColor[0.7, 0, 1],
    Opacity->1,
    FontSize->Larger,
    FontColor->RGBColor[0.7, 0, 1],
    FontOpacity->1], "\[InvisibleSpace]", 
   TagBox[GridBox[{
      {
       RowBox[{
        TagBox[GridBox[{
           {
            RowBox[{
             RowBox[{"P", "[", 
              RowBox[{"X1", ",", "X2"}], "]"}], "\[Rule]", 
             RowBox[{
              InterpretationBox[
               SubsuperscriptBox["X1", 
                StyleBox["i",
                 StripOnInput->False,
                 ShowContents->False], "i"],
               $CellContext`Tensor[$CellContext`X1, {$CellContext`i}, \
{$CellContext`Void}],
               BaseStyle->{AutoMultiplicationSymbol -> False},
               Editable->False], " ", 
              InterpretationBox[
               SubsuperscriptBox["X2", 
                StyleBox["j",
                 StripOnInput->False,
                 ShowContents->False], "j"],
               $CellContext`Tensor[$CellContext`X2, {$CellContext`j}, \
{$CellContext`Void}],
               BaseStyle->{AutoMultiplicationSymbol -> False},
               Editable->False], " ", 
              RowBox[{
               InterpretationBox[
                SubsuperscriptBox["\[Eta]", 
                 RowBox[{"i", "j"}], 
                 StyleBox[
                  RowBox[{"i", "j"}],
                  StripOnInput->False,
                  ShowContents->False]],
                $CellContext`Tensor[$CellContext`\[Eta], {$CellContext`Void, \
$CellContext`Void}, {$CellContext`i, $CellContext`j}],
                BaseStyle->{AutoMultiplicationSymbol -> False},
                Editable->False], "[", 
               StyleBox["\<\"Minkowski\"\>",
                StripOnInput->False,
                LineColor->RGBColor[0, 
                  Rational[2, 3], 0],
                FrontFaceColor->RGBColor[0, 
                  Rational[2, 3], 0],
                BackFaceColor->RGBColor[0, 
                  Rational[2, 3], 0],
                GraphicsColor->RGBColor[0, 
                  Rational[2, 3], 0],
                FontFamily->"Helvetica",
                FontColor->RGBColor[0, 
                  Rational[2, 3], 0]], "]"}]}]}]}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            RGBColor[0.7, 0, 1, 1], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {{Left}}},
          GridBoxDividers->{"Columns" -> {True}, "Rows" -> {False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"], "[", 
        RowBox[{
         StyleBox["\<\"embed in DeSitter space\"\>",
          StripOnInput->False,
          LineColor->RGBColor[0, 
            Rational[2, 3], 0],
          FrontFaceColor->RGBColor[0, 
            Rational[2, 3], 0],
          BackFaceColor->RGBColor[0, 
            Rational[2, 3], 0],
          GraphicsColor->RGBColor[0, 
            Rational[2, 3], 0],
          FontFamily->"Helvetica",
          FontColor->RGBColor[0, 
            Rational[2, 3], 0]], ",", 
         StyleBox[
          SubscriptBox["dS", "d"],
          StripOnInput->False,
          LineColor->RGBColor[0, 
            Rational[2, 3], 0],
          FrontFaceColor->RGBColor[0, 
            Rational[2, 3], 0],
          BackFaceColor->RGBColor[0, 
            Rational[2, 3], 0],
          GraphicsColor->RGBColor[0, 
            Rational[2, 3], 0],
          FontFamily->"Helvetica",
          FontColor->RGBColor[0, 
            Rational[2, 3], 0]], ",", 
         StyleBox[
          RowBox[{"\[ScriptL]", "\[Rule]", 
           RowBox[{"R", "\[Rule]", "1"}]}],
          StripOnInput->False,
          LineColor->RGBColor[0, 
            Rational[2, 3], 0],
          FrontFaceColor->RGBColor[0, 
            Rational[2, 3], 0],
          BackFaceColor->RGBColor[0, 
            Rational[2, 3], 0],
          GraphicsColor->RGBColor[0, 
            Rational[2, 3], 0],
          FontFamily->"Helvetica",
          FontColor->RGBColor[0, 
            Rational[2, 3], 0]]}], "]"}]},
      {
       RowBox[{
        TagBox[GridBox[{
           {
            RowBox[{"P", "\[Rule]", 
             RowBox[{"Cos", "[", 
              RowBox[{
               StyleBox["\<\"D\"\>",
                StripOnInput->False,
                FontSlant->Italic], "[", 
               StyleBox["\<\"geodesic distance\"\>",
                StripOnInput->False,
                LineColor->RGBColor[0, 
                  Rational[2, 3], 0],
                FrontFaceColor->RGBColor[0, 
                  Rational[2, 3], 0],
                BackFaceColor->RGBColor[0, 
                  Rational[2, 3], 0],
                GraphicsColor->RGBColor[0, 
                  Rational[2, 3], 0],
                FontFamily->"Helvetica",
                FontColor->RGBColor[0, 
                  Rational[2, 3], 0]], "]"}], "]"}]}]}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            RGBColor[0.7, 0, 1, 1], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {{Left}}},
          GridBoxDividers->{"Columns" -> {True}, "Rows" -> {False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"], "[", 
        StyleBox["\<\"define\"\>",
         StripOnInput->False,
         LineColor->RGBColor[0, 
           Rational[2, 3], 0],
         FrontFaceColor->RGBColor[0, 
           Rational[2, 3], 0],
         BackFaceColor->RGBColor[0, 
           Rational[2, 3], 0],
         GraphicsColor->RGBColor[0, 
           Rational[2, 3], 0],
         FontFamily->"Helvetica",
         FontColor->RGBColor[0, 
           Rational[2, 3], 0]], "]"}]},
      {
       RowBox[{
        TagBox[GridBox[{
           {
            RowBox[{
             InterpretationBox[
              SubsuperscriptBox["X", 
               StyleBox["0",
                StripOnInput->False,
                ShowContents->False], "0"],
              $CellContext`Tensor[$CellContext`X, {0}, {$CellContext`Void}],
              BaseStyle->{AutoMultiplicationSymbol -> False},
              Editable->False], "\[Rule]", 
             RowBox[{
              RowBox[{"Sinh", "[", "t", "]"}], "-", 
              RowBox[{
               FractionBox["1", "2"], " ", 
               SuperscriptBox["\[ExponentialE]", 
                RowBox[{"-", "t"}]], " ", 
               InterpretationBox[
                SubsuperscriptBox["x", 
                 StyleBox["i",
                  StripOnInput->False,
                  ShowContents->False], "i"],
                $CellContext`Tensor[$CellContext`x, {$CellContext`i}, \
{$CellContext`Void}],
                BaseStyle->{AutoMultiplicationSymbol -> False},
                Editable->False], " ", 
               InterpretationBox[
                SubsuperscriptBox["x", "i", 
                 StyleBox["i",
                  StripOnInput->False,
                  ShowContents->False]],
                $CellContext`Tensor[$CellContext`x, {$CellContext`Void}, \
{$CellContext`i}],
                BaseStyle->{AutoMultiplicationSymbol -> False},
                Editable->False]}]}]}]},
           {
            RowBox[{
             InterpretationBox[
              SubsuperscriptBox["X", 
               StyleBox["i",
                StripOnInput->False,
                ShowContents->False], "i"],
              $CellContext`Tensor[$CellContext`X, {$CellContext`i}, \
{$CellContext`Void}],
              BaseStyle->{AutoMultiplicationSymbol -> False},
              Editable->False], "\[Rule]", 
             RowBox[{
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{"-", "t"}]], " ", 
              InterpretationBox[
               SubsuperscriptBox["x", 
                StyleBox["i",
                 StripOnInput->False,
                 ShowContents->False], "i"],
               $CellContext`Tensor[$CellContext`x, {$CellContext`i}, \
{$CellContext`Void}],
               BaseStyle->{AutoMultiplicationSymbol -> False},
               Editable->False]}]}]},
           {
            TagBox[GridBox[{
               {"i"},
               {"1"},
               {
                RowBox[{
                 RowBox[{"-", "1"}], "+", "d"}]}
              },
              AutoDelete->False,
              FrameStyle->Directive[
                RGBColor[0.7, 0, 1, 1], 
                Thickness[Tiny]],
              GridBoxAlignment->{"Columns" -> {{Left}}},
              GridBoxDividers->{"Columns" -> {True}, "Rows" -> {False}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
             "Grid"]},
           {
            RowBox[{
             InterpretationBox[
              SubsuperscriptBox["X", 
               StyleBox["d",
                StripOnInput->False,
                ShowContents->False], "d"],
              $CellContext`Tensor[$CellContext`X, {$CellContext`d}, \
{$CellContext`Void}],
              BaseStyle->{AutoMultiplicationSymbol -> False},
              Editable->False], "\[Rule]", 
             RowBox[{
              RowBox[{"Cosh", "[", "t", "]"}], "-", 
              RowBox[{
               FractionBox["1", "2"], " ", 
               SuperscriptBox["\[ExponentialE]", 
                RowBox[{"-", "t"}]], " ", 
               InterpretationBox[
                SubsuperscriptBox["x", 
                 StyleBox["i",
                  StripOnInput->False,
                  ShowContents->False], "i"],
                $CellContext`Tensor[$CellContext`x, {$CellContext`i}, \
{$CellContext`Void}],
                BaseStyle->{AutoMultiplicationSymbol -> False},
                Editable->False], " ", 
               InterpretationBox[
                SubsuperscriptBox["x", "i", 
                 StyleBox["i",
                  StripOnInput->False,
                  ShowContents->False]],
                $CellContext`Tensor[$CellContext`x, {$CellContext`Void}, \
{$CellContext`i}],
                BaseStyle->{AutoMultiplicationSymbol -> False},
                Editable->False]}]}]}]}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            RGBColor[0.7, 0, 1, 1], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {{Left}}},
          GridBoxDividers->{"Columns" -> {True}, "Rows" -> {False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"], "[", 
        StyleBox["\<\"Planar coordinates\"\>",
         StripOnInput->False,
         LineColor->RGBColor[0, 
           Rational[2, 3], 0],
         FrontFaceColor->RGBColor[0, 
           Rational[2, 3], 0],
         BackFaceColor->RGBColor[0, 
           Rational[2, 3], 0],
         GraphicsColor->RGBColor[0, 
           Rational[2, 3], 0],
         FontFamily->"Helvetica",
         FontColor->RGBColor[0, 
           Rational[2, 3], 0]], "]"}]},
      {
       RowBox[{
        TagBox[GridBox[{
           {
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{
                InterpretationBox[
                 SubsuperscriptBox["X_", 
                  StyleBox["0",
                   StripOnInput->False,
                   ShowContents->False], "0"],
                 $CellContext`Tensor[
                  Pattern[$CellContext`X, 
                   Blank[]], {0}, {$CellContext`Void}],
                 BaseStyle->{AutoMultiplicationSymbol -> False},
                 Editable->False], "\[Rule]", 
                RowBox[{
                 RowBox[{"Sinh", "[", 
                  RowBox[{"t", "[", "X", "]"}], "]"}], "-", 
                 RowBox[{
                  FractionBox["1", "2"], " ", 
                  SuperscriptBox["\[ExponentialE]", 
                   RowBox[{"-", 
                    RowBox[{"t", "[", "X", "]"}]}]], " ", 
                  InterpretationBox[
                   SubsuperscriptBox[
                    RowBox[{"x", "[", "X", "]"}], 
                    StyleBox["i",
                    StripOnInput->False,
                    ShowContents->False], "i"],
                   $CellContext`Tensor[
                    $CellContext`x[$CellContext`X], {$CellContext`i}, \
{$CellContext`Void}],
                   BaseStyle->{AutoMultiplicationSymbol -> False},
                   Editable->False], " ", 
                  InterpretationBox[
                   SubsuperscriptBox[
                    RowBox[{"x", "[", "X", "]"}], "i", 
                    StyleBox["i",
                    StripOnInput->False,
                    ShowContents->False]],
                   $CellContext`Tensor[
                    $CellContext`x[$CellContext`X], {$CellContext`Void}, \
{$CellContext`i}],
                   BaseStyle->{AutoMultiplicationSymbol -> False},
                   Editable->False]}]}]}], ",", 
               RowBox[{
                InterpretationBox[
                 SubsuperscriptBox["X_", 
                  StyleBox["i",
                   StripOnInput->False,
                   ShowContents->False], "i"],
                 $CellContext`Tensor[
                  Pattern[$CellContext`X, 
                   Blank[]], {$CellContext`i}, {$CellContext`Void}],
                 BaseStyle->{AutoMultiplicationSymbol -> False},
                 Editable->False], "\[Rule]", 
                RowBox[{
                 SuperscriptBox["\[ExponentialE]", 
                  RowBox[{"-", 
                   RowBox[{"t", "[", "X", "]"}]}]], " ", 
                 InterpretationBox[
                  SubsuperscriptBox[
                   RowBox[{"x", "[", "X", "]"}], 
                   StyleBox["i",
                    StripOnInput->False,
                    ShowContents->False], "i"],
                  $CellContext`Tensor[
                   $CellContext`x[$CellContext`X], {$CellContext`i}, \
{$CellContext`Void}],
                  BaseStyle->{AutoMultiplicationSymbol -> False},
                  Editable->False]}]}], ",", 
               RowBox[{"{", 
                RowBox[{"i", ",", "1", ",", 
                 RowBox[{
                  RowBox[{"-", "1"}], "+", "d"}]}], "}"}], ",", 
               RowBox[{
                InterpretationBox[
                 SubsuperscriptBox["X_", 
                  StyleBox["d",
                   StripOnInput->False,
                   ShowContents->False], "d"],
                 $CellContext`Tensor[
                  Pattern[$CellContext`X, 
                   Blank[]], {$CellContext`d}, {$CellContext`Void}],
                 BaseStyle->{AutoMultiplicationSymbol -> False},
                 Editable->False], "\[Rule]", 
                RowBox[{
                 RowBox[{"Cosh", "[", 
                  RowBox[{"t", "[", "X", "]"}], "]"}], "-", 
                 RowBox[{
                  FractionBox["1", "2"], " ", 
                  SuperscriptBox["\[ExponentialE]", 
                   RowBox[{"-", 
                    RowBox[{"t", "[", "X", "]"}]}]], " ", 
                  InterpretationBox[
                   SubsuperscriptBox[
                    RowBox[{"x", "[", "X", "]"}], 
                    StyleBox["i",
                    StripOnInput->False,
                    ShowContents->False], "i"],
                   $CellContext`Tensor[
                    $CellContext`x[$CellContext`X], {$CellContext`i}, \
{$CellContext`Void}],
                   BaseStyle->{AutoMultiplicationSymbol -> False},
                   Editable->False], " ", 
                  InterpretationBox[
                   SubsuperscriptBox[
                    RowBox[{"x", "[", "X", "]"}], "i", 
                    StyleBox["i",
                    StripOnInput->False,
                    ShowContents->False]],
                   $CellContext`Tensor[
                    $CellContext`x[$CellContext`X], {$CellContext`Void}, \
{$CellContext`i}],
                   BaseStyle->{AutoMultiplicationSymbol -> False},
                   Editable->False]}]}]}]}], "}"}], "[", 
             StyleBox["\<\"Planar coordinates\"\>",
              StripOnInput->False,
              LineColor->RGBColor[0, 
                Rational[2, 3], 0],
              FrontFaceColor->RGBColor[0, 
                Rational[2, 3], 0],
              BackFaceColor->RGBColor[0, 
                Rational[2, 3], 0],
              GraphicsColor->RGBColor[0, 
                Rational[2, 3], 0],
              FontFamily->"Helvetica",
              FontColor->RGBColor[0, 
                Rational[2, 3], 0]], "]"}]},
           {
            RowBox[{
             RowBox[{"P", "[", 
              RowBox[{"X1", ",", "X2"}], "]"}], "\[Rule]", 
             RowBox[{
              RowBox[{
               InterpretationBox[
                SubsuperscriptBox["X1", 
                 StyleBox["0",
                  StripOnInput->False,
                  ShowContents->False], "0"],
                $CellContext`Tensor[$CellContext`X1, {0}, {$CellContext`Void}],
                BaseStyle->{AutoMultiplicationSymbol -> False},
                Editable->False], " ", 
               InterpretationBox[
                SubsuperscriptBox["X2", 
                 StyleBox["0",
                  StripOnInput->False,
                  ShowContents->False], "0"],
                $CellContext`Tensor[$CellContext`X2, {0}, {$CellContext`Void}],
                BaseStyle->{AutoMultiplicationSymbol -> False},
                Editable->False], " ", 
               InterpretationBox[
                SubsuperscriptBox["\[Eta]", 
                 RowBox[{"0", "0"}], 
                 StyleBox[
                  RowBox[{"0", "0"}],
                  StripOnInput->False,
                  ShowContents->False]],
                $CellContext`Tensor[$CellContext`\[Eta], {$CellContext`Void, \
$CellContext`Void}, {0, 0}],
                BaseStyle->{AutoMultiplicationSymbol -> False},
                Editable->False]}], "+", 
              RowBox[{
               InterpretationBox[
                SubsuperscriptBox["X1", 
                 StyleBox["0",
                  StripOnInput->False,
                  ShowContents->False], "0"],
                $CellContext`Tensor[$CellContext`X1, {0}, {$CellContext`Void}],
                BaseStyle->{AutoMultiplicationSymbol -> False},
                Editable->False], " ", 
               InterpretationBox[
                SubsuperscriptBox["X2", 
                 StyleBox["d",
                  StripOnInput->False,
                  ShowContents->False], "d"],
                $CellContext`Tensor[$CellContext`X2, {$CellContext`d}, \
{$CellContext`Void}],
                BaseStyle->{AutoMultiplicationSymbol -> False},
                Editable->False], " ", 
               InterpretationBox[
                SubsuperscriptBox["\[Eta]", 
                 RowBox[{"0", "d"}], 
                 StyleBox[
                  RowBox[{"0", "d"}],
                  StripOnInput->False,
                  ShowContents->False]],
                $CellContext`Tensor[$CellContext`\[Eta], {$CellContext`Void, \
$CellContext`Void}, {0, $CellContext`d}],
                BaseStyle->{AutoMultiplicationSymbol -> False},
                Editable->False]}], "+", 
              RowBox[{
               InterpretationBox[
                SubsuperscriptBox["X1", 
                 StyleBox["0",
                  StripOnInput->False,
                  ShowContents->False], "0"],
                $CellContext`Tensor[$CellContext`X1, {0}, {$CellContext`Void}],
                BaseStyle->{AutoMultiplicationSymbol -> False},
                Editable->False], " ", 
               InterpretationBox[
                SubsuperscriptBox["X2", 
                 StyleBox["jj",
                  StripOnInput->False,
                  ShowContents->False], "jj"],
                $CellContext`Tensor[$CellContext`X2, {$CellContext`jj}, \
{$CellContext`Void}],
                BaseStyle->{AutoMultiplicationSymbol -> False},
                Editable->False], " ", 
               InterpretationBox[
                SubsuperscriptBox["\[Eta]", 
                 RowBox[{"0", "jj"}], 
                 StyleBox[
                  RowBox[{"0", "jj"}],
                  StripOnInput->False,
                  ShowContents->False]],
                $CellContext`Tensor[$CellContext`\[Eta], {$CellContext`Void, \
$CellContext`Void}, {0, $CellContext`jj}],
                BaseStyle->{AutoMultiplicationSymbol -> False},
                Editable->False]}], "+", 
              RowBox[{
               InterpretationBox[
                SubsuperscriptBox["X1", 
                 StyleBox["d",
                  StripOnInput->False,
                  ShowContents->False], "d"],
                $CellContext`Tensor[$CellContext`X1, {$CellContext`d}, \
{$CellContext`Void}],
                BaseStyle->{AutoMultiplicationSymbol -> False},
                Editable->False], " ", 
               InterpretationBox[
                SubsuperscriptBox["X2", 
                 StyleBox["0",
                  StripOnInput->False,
                  ShowContents->False], "0"],
                $CellContext`Tensor[$CellContext`X2, {0}, {$CellContext`Void}],
                BaseStyle->{AutoMultiplicationSymbol -> False},
                Editable->False], " ", 
               InterpretationBox[
                SubsuperscriptBox["\[Eta]", 
                 RowBox[{"d", "0"}], 
                 StyleBox[
                  RowBox[{"d", "0"}],
                  StripOnInput->False,
                  ShowContents->False]],
                $CellContext`Tensor[$CellContext`\[Eta], {$CellContext`Void, \
$CellContext`Void}, {$CellContext`d, 0}],
                BaseStyle->{AutoMultiplicationSymbol -> False},
                Editable->False]}], "+", 
              RowBox[{
               InterpretationBox[
                SubsuperscriptBox["X1", 
                 StyleBox["d",
                  StripOnInput->False,
                  ShowContents->False], "d"],
                $CellContext`Tensor[$CellContext`X1, {$CellContext`d}, \
{$CellContext`Void}],
                BaseStyle->{AutoMultiplicationSymbol -> False},
                Editable->False], " ", 
               InterpretationBox[
                SubsuperscriptBox["X2", 
                 StyleBox["d",
                  StripOnInput->False,
                  ShowContents->False], "d"],
                $CellContext`Tensor[$CellContext`X2, {$CellContext`d}, \
{$CellContext`Void}],
                BaseStyle->{AutoMultiplicationSymbol -> False},
                Editable->False], " ", 
               InterpretationBox[
                SubsuperscriptBox["\[Eta]", 
                 RowBox[{"d", "d"}], 
                 StyleBox[
                  RowBox[{"d", "d"}],
                  StripOnInput->False,
                  ShowContents->False]],
                $CellContext`Tensor[$CellContext`\[Eta], {$CellContext`Void, \
$CellContext`Void}, {$CellContext`d, $CellContext`d}],
                BaseStyle->{AutoMultiplicationSymbol -> False},
                Editable->False]}], "+", 
              RowBox[{
               InterpretationBox[
                SubsuperscriptBox["X1", 
                 StyleBox["d",
                  StripOnInput->False,
                  ShowContents->False], "d"],
                $CellContext`Tensor[$CellContext`X1, {$CellContext`d}, \
{$CellContext`Void}],
                BaseStyle->{AutoMultiplicationSymbol -> False},
                Editable->False], " ", 
               InterpretationBox[
                SubsuperscriptBox["X2", 
                 StyleBox["jj",
                  StripOnInput->False,
                  ShowContents->False], "jj"],
                $CellContext`Tensor[$CellContext`X2, {$CellContext`jj}, \
{$CellContext`Void}],
                BaseStyle->{AutoMultiplicationSymbol -> False},
                Editable->False], " ", 
               InterpretationBox[
                SubsuperscriptBox["\[Eta]", 
                 RowBox[{"d", "jj"}], 
                 StyleBox[
                  RowBox[{"d", "jj"}],
                  StripOnInput->False,
                  ShowContents->False]],
                $CellContext`Tensor[$CellContext`\[Eta], {$CellContext`Void, \
$CellContext`Void}, {$CellContext`d, $CellContext`jj}],
                BaseStyle->{AutoMultiplicationSymbol -> False},
                Editable->False]}], "+", 
              RowBox[{
               InterpretationBox[
                SubsuperscriptBox["X1", 
                 StyleBox["kk",
                  StripOnInput->False,
                  ShowContents->False], "kk"],
                $CellContext`Tensor[$CellContext`X1, {$CellContext`kk}, \
{$CellContext`Void}],
                BaseStyle->{AutoMultiplicationSymbol -> False},
                Editable->False], " ", 
               InterpretationBox[
                SubsuperscriptBox["X2", 
                 StyleBox["0",
                  StripOnInput->False,
                  ShowContents->False], "0"],
                $CellContext`Tensor[$CellContext`X2, {0}, {$CellContext`Void}],
                BaseStyle->{AutoMultiplicationSymbol -> False},
                Editable->False], " ", 
               InterpretationBox[
                SubsuperscriptBox["\[Eta]", 
                 RowBox[{"kk", "0"}], 
                 StyleBox[
                  RowBox[{"kk", "0"}],
                  StripOnInput->False,
                  ShowContents->False]],
                $CellContext`Tensor[$CellContext`\[Eta], {$CellContext`Void, \
$CellContext`Void}, {$CellContext`kk, 0}],
                BaseStyle->{AutoMultiplicationSymbol -> False},
                Editable->False]}], "+", 
              RowBox[{
               InterpretationBox[
                SubsuperscriptBox["X1", 
                 StyleBox["kk",
                  StripOnInput->False,
                  ShowContents->False], "kk"],
                $CellContext`Tensor[$CellContext`X1, {$CellContext`kk}, \
{$CellContext`Void}],
                BaseStyle->{AutoMultiplicationSymbol -> False},
                Editable->False], " ", 
               InterpretationBox[
                SubsuperscriptBox["X2", 
                 StyleBox["d",
                  StripOnInput->False,
                  ShowContents->False], "d"],
                $CellContext`Tensor[$CellContext`X2, {$CellContext`d}, \
{$CellContext`Void}],
                BaseStyle->{AutoMultiplicationSymbol -> False},
                Editable->False], " ", 
               InterpretationBox[
                SubsuperscriptBox["\[Eta]", 
                 RowBox[{"kk", "d"}], 
                 StyleBox[
                  RowBox[{"kk", "d"}],
                  StripOnInput->False,
                  ShowContents->False]],
                $CellContext`Tensor[$CellContext`\[Eta], {$CellContext`Void, \
$CellContext`Void}, {$CellContext`kk, $CellContext`d}],
                BaseStyle->{AutoMultiplicationSymbol -> False},
                Editable->False]}], "+", 
              RowBox[{
               InterpretationBox[
                SubsuperscriptBox["X1", 
                 StyleBox["kk",
                  StripOnInput->False,
                  ShowContents->False], "kk"],
                $CellContext`Tensor[$CellContext`X1, {$CellContext`kk}, \
{$CellContext`Void}],
                BaseStyle->{AutoMultiplicationSymbol -> False},
                Editable->False], " ", 
               InterpretationBox[
                SubsuperscriptBox["X2", 
                 StyleBox["jj",
                  StripOnInput->False,
                  ShowContents->False], "jj"],
                $CellContext`Tensor[$CellContext`X2, {$CellContext`jj}, \
{$CellContext`Void}],
                BaseStyle->{AutoMultiplicationSymbol -> False},
                Editable->False], " ", 
               InterpretationBox[
                SubsuperscriptBox["\[Eta]", 
                 RowBox[{"kk", "jj"}], 
                 StyleBox[
                  RowBox[{"kk", "jj"}],
                  StripOnInput->False,
                  ShowContents->False]],
                $CellContext`Tensor[$CellContext`\[Eta], {$CellContext`Void, \
$CellContext`Void}, {$CellContext`kk, $CellContext`jj}],
                BaseStyle->{AutoMultiplicationSymbol -> False},
                Editable->False]}]}]}]},
           {
            RowBox[{
             RowBox[{"P", "[", 
              RowBox[{"X1", ",", "X2"}], "]"}], "\[Rule]", 
             RowBox[{
              RowBox[{
               RowBox[{"-", 
                InterpretationBox[
                 SubsuperscriptBox["X1", 
                  StyleBox["0",
                   StripOnInput->False,
                   ShowContents->False], "0"],
                 $CellContext`Tensor[$CellContext`X1, {
                  0}, {$CellContext`Void}],
                 BaseStyle->{AutoMultiplicationSymbol -> False},
                 Editable->False]}], " ", 
               InterpretationBox[
                SubsuperscriptBox["X2", 
                 StyleBox["0",
                  StripOnInput->False,
                  ShowContents->False], "0"],
                $CellContext`Tensor[$CellContext`X2, {0}, {$CellContext`Void}],
                BaseStyle->{AutoMultiplicationSymbol -> False},
                Editable->False]}], "+", 
              RowBox[{
               InterpretationBox[
                SubsuperscriptBox["X1", 
                 StyleBox["d",
                  StripOnInput->False,
                  ShowContents->False], "d"],
                $CellContext`Tensor[$CellContext`X1, {$CellContext`d}, \
{$CellContext`Void}],
                BaseStyle->{AutoMultiplicationSymbol -> False},
                Editable->False], " ", 
               InterpretationBox[
                SubsuperscriptBox["X2", 
                 StyleBox["d",
                  StripOnInput->False,
                  ShowContents->False], "d"],
                $CellContext`Tensor[$CellContext`X2, {$CellContext`d}, \
{$CellContext`Void}],
                BaseStyle->{AutoMultiplicationSymbol -> False},
                Editable->False]}]}]}]},
           {
            FrameBox[
             RowBox[{
              RowBox[{"P", "[", 
               RowBox[{"X1", ",", "X2"}], "]"}], "\[Rule]", 
              RowBox[{
               FractionBox["1", "2"], " ", 
               SuperscriptBox["\[ExponentialE]", 
                RowBox[{
                 StyleBox["\<\"\[Sum]\"\>",
                  StripOnInput->False,
                  LineColor->RGBColor[0.7, 0, 1],
                  LineOpacity->1,
                  FrontFaceColor->RGBColor[0.7, 0, 1],
                  BackFaceColor->RGBColor[0.7, 0, 1],
                  FrontFaceOpacity->1,
                  BackFaceOpacity->1,
                  GraphicsColor->RGBColor[0.7, 0, 1],
                  Opacity->1,
                  FontColor->RGBColor[0.7, 0, 1],
                  FontOpacity->1], "[", 
                 TagBox[GridBox[{
                    {
                    RowBox[{"-", 
                    RowBox[{"t", "[", "X1", "]"}]}]},
                    {
                    RowBox[{"-", 
                    RowBox[{"t", "[", "X2", "]"}]}]}
                   },
                   AutoDelete->False,
                   FrameStyle->Directive[
                    RGBColor[0.7, 0, 1, 1], 
                    Thickness[Tiny]],
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   GridBoxDividers->{"Columns" -> {True}, "Rows" -> {False}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                  "Grid"], "]"}]], " ", 
               RowBox[{
                StyleBox["\<\"\[Sum]\"\>",
                 StripOnInput->False,
                 LineColor->RGBColor[0.7, 0, 1],
                 LineOpacity->1,
                 FrontFaceColor->RGBColor[0.7, 0, 1],
                 BackFaceColor->RGBColor[0.7, 0, 1],
                 FrontFaceOpacity->1,
                 BackFaceOpacity->1,
                 GraphicsColor->RGBColor[0.7, 0, 1],
                 Opacity->1,
                 FontColor->RGBColor[0.7, 0, 1],
                 FontOpacity->1], "[", 
                TagBox[GridBox[{
                   {
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"2", " ", 
                    RowBox[{"t", "[", "X1", "]"}]}]]},
                   {
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"2", " ", 
                    RowBox[{"t", "[", "X2", "]"}]}]]},
                   {
                    RowBox[{
                    RowBox[{"-", 
                    InterpretationBox[
                    SubsuperscriptBox[
                    RowBox[{"x", "[", "X1", "]"}], 
                    StyleBox["i",
                    StripOnInput->False,
                    ShowContents->False], "i"],
                    $CellContext`Tensor[
                    $CellContext`x[$CellContext`X1], {$CellContext`i}, \
{$CellContext`Void}],
                    BaseStyle->{AutoMultiplicationSymbol -> False},
                    Editable->False]}], " ", 
                    InterpretationBox[
                    SubsuperscriptBox[
                    RowBox[{"x", "[", "X1", "]"}], "i", 
                    StyleBox["i",
                    StripOnInput->False,
                    ShowContents->False]],
                    $CellContext`Tensor[
                    $CellContext`x[$CellContext`X1], {$CellContext`Void}, \
{$CellContext`i}],
                    BaseStyle->{AutoMultiplicationSymbol -> False},
                    Editable->False]}]},
                   {
                    RowBox[{
                    RowBox[{"-", 
                    InterpretationBox[
                    SubsuperscriptBox[
                    RowBox[{"x", "[", "X2", "]"}], 
                    StyleBox["i",
                    StripOnInput->False,
                    ShowContents->False], "i"],
                    $CellContext`Tensor[
                    $CellContext`x[$CellContext`X2], {$CellContext`i}, \
{$CellContext`Void}],
                    BaseStyle->{AutoMultiplicationSymbol -> False},
                    Editable->False]}], " ", 
                    InterpretationBox[
                    SubsuperscriptBox[
                    RowBox[{"x", "[", "X2", "]"}], "i", 
                    StyleBox["i",
                    StripOnInput->False,
                    ShowContents->False]],
                    $CellContext`Tensor[
                    $CellContext`x[$CellContext`X2], {$CellContext`Void}, \
{$CellContext`i}],
                    BaseStyle->{AutoMultiplicationSymbol -> False},
                    Editable->False]}]}
                  },
                  AutoDelete->False,
                  FrameStyle->Directive[
                    RGBColor[0.7, 0, 1, 1], 
                    Thickness[Tiny]],
                  GridBoxAlignment->{"Columns" -> {{Left}}},
                  GridBoxDividers->{"Columns" -> {True}, "Rows" -> {False}},
                  GridBoxItemSize->{
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                 "Grid"], "]"}]}]}],
             StripOnInput->False]}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            RGBColor[0.7, 0, 1, 1], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {{Left}}},
          GridBoxDividers->{"Columns" -> {True}, "Rows" -> {False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"], "[", 
        StyleBox["\<\"compute e[33]\"\>",
         StripOnInput->False,
         LineColor->RGBColor[0, 
           Rational[2, 3], 0],
         FrontFaceColor->RGBColor[0, 
           Rational[2, 3], 0],
         BackFaceColor->RGBColor[0, 
           Rational[2, 3], 0],
         GraphicsColor->RGBColor[0, 
           Rational[2, 3], 0],
         FontFamily->"Helvetica",
         FontColor->RGBColor[0, 
           Rational[2, 3], 0]], "]"}]}
     },
     AutoDelete->False,
     FrameStyle->Directive[
       RGBColor[0.7, 0, 1, 1], 
       Thickness[Tiny]],
     GridBoxAlignment->{"Columns" -> {{Left}}},
     GridBoxDividers->{"Columns" -> {True}, "Rows" -> {False}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
    "Grid"]}],
  SequenceForm[
   Style["On DeSitter space", 
    RGBColor[0.7, 0, 1, 1], Larger], 
   Style["\n", 
    RGBColor[0.7, 0, 1, 1], Larger], 
   Grid[{{
      Grid[{{$CellContext`P[$CellContext`X1, $CellContext`X2] -> \
$CellContext`Tensor[$CellContext`X1, {$CellContext`i}, {$CellContext`Void}] \
$CellContext`Tensor[$CellContext`X2, {$CellContext`j}, {$CellContext`Void}] \
$CellContext`Tensor[$CellContext`\[Eta], {$CellContext`Void, \
$CellContext`Void}, {$CellContext`i, $CellContext`j}][
            Style["Minkowski", 
             RGBColor[0, 
              Rational[2, 3], 0], FontFamily -> "Helvetica"]]}}, 
       Dividers -> {{True}, {False}}, FrameStyle -> Directive[
         RGBColor[0.7, 0, 1, 1], 
         Thickness[Tiny]], Alignment -> Left][
       Style["embed in DeSitter space", 
        RGBColor[0, 
         Rational[2, 3], 0], FontFamily -> "Helvetica"], 
       Style[
        Subscript[$CellContext`dS, $CellContext`d], 
        RGBColor[0, 
         Rational[2, 3], 0], FontFamily -> "Helvetica"], 
       Style[$CellContext`\[ScriptL] -> ($CellContext`R -> 1), 
        RGBColor[0, 
         Rational[2, 3], 0], FontFamily -> "Helvetica"]]}, {
      Grid[{{$CellContext`P -> Cos[
           Style["D", Italic][
            Style["geodesic distance", 
             RGBColor[0, 
              Rational[2, 3], 0], FontFamily -> "Helvetica"]]]}}, 
       Dividers -> {{True}, {False}}, FrameStyle -> Directive[
         RGBColor[0.7, 0, 1, 1], 
         Thickness[Tiny]], Alignment -> Left][
       Style["define", 
        RGBColor[0, 
         Rational[2, 3], 0], FontFamily -> "Helvetica"]]}, {
      Grid[{{$CellContext`Tensor[$CellContext`X, {0}, {$CellContext`Void}] -> 
         Sinh[$CellContext`t] + 
          Rational[-1, 2] 
           E^(-$CellContext`t) $CellContext`Tensor[$CellContext`x, \
{$CellContext`i}, {$CellContext`Void}] $CellContext`Tensor[$CellContext`x, \
{$CellContext`Void}, {$CellContext`i}]}, {$CellContext`Tensor[$CellContext`X, \
{$CellContext`i}, {$CellContext`Void}] -> 
         E^(-$CellContext`t) $CellContext`Tensor[$CellContext`x, \
{$CellContext`i}, {$CellContext`Void}]}, {
         Grid[{{$CellContext`i}, {1}, {-1 + $CellContext`d}}, 
          Dividers -> {{True}, {False}}, FrameStyle -> Directive[
            RGBColor[0.7, 0, 1, 1], 
            Thickness[Tiny]], Alignment -> 
          Left]}, {$CellContext`Tensor[$CellContext`X, {$CellContext`d}, \
{$CellContext`Void}] -> 
         Cosh[$CellContext`t] + 
          Rational[-1, 2] 
           E^(-$CellContext`t) $CellContext`Tensor[$CellContext`x, \
{$CellContext`i}, {$CellContext`Void}] $CellContext`Tensor[$CellContext`x, \
{$CellContext`Void}, {$CellContext`i}]}}, Dividers -> {{True}, {False}}, 
       FrameStyle -> Directive[
         RGBColor[0.7, 0, 1, 1], 
         Thickness[Tiny]], Alignment -> Left][
       Style["Planar coordinates", 
        RGBColor[0, 
         Rational[2, 3], 0], FontFamily -> "Helvetica"]]}, {
      Grid[{{
         {$CellContext`Tensor[
            Pattern[$CellContext`X, 
             Blank[]], {0}, {$CellContext`Void}] -> Sinh[
             $CellContext`t[$CellContext`X]] + 
           Rational[-1, 2] 
            E^(-$CellContext`t[$CellContext`X]) $CellContext`Tensor[
              $CellContext`x[$CellContext`X], {$CellContext`i}, \
{$CellContext`Void}] $CellContext`Tensor[
              $CellContext`x[$CellContext`X], {$CellContext`Void}, \
{$CellContext`i}], $CellContext`Tensor[
            Pattern[$CellContext`X, 
             Blank[]], {$CellContext`i}, {$CellContext`Void}] -> 
          E^(-$CellContext`t[$CellContext`X]) $CellContext`Tensor[
             $CellContext`x[$CellContext`X], {$CellContext`i}, \
{$CellContext`Void}], {$CellContext`i, 
           1, -1 + $CellContext`d}, $CellContext`Tensor[
            Pattern[$CellContext`X, 
             Blank[]], {$CellContext`d}, {$CellContext`Void}] -> Cosh[
             $CellContext`t[$CellContext`X]] + 
           Rational[-1, 2] 
            E^(-$CellContext`t[$CellContext`X]) $CellContext`Tensor[
              $CellContext`x[$CellContext`X], {$CellContext`i}, \
{$CellContext`Void}] $CellContext`Tensor[
              $CellContext`x[$CellContext`X], {$CellContext`Void}, \
{$CellContext`i}]}[
          Style["Planar coordinates", 
           RGBColor[0, 
            Rational[2, 3], 0], FontFamily -> 
           "Helvetica"]]}, {$CellContext`P[$CellContext`X1, $CellContext`X2] -> \
$CellContext`Tensor[$CellContext`X1, {
             0}, {$CellContext`Void}] $CellContext`Tensor[$CellContext`X2, {
             0}, {$CellContext`Void}] \
$CellContext`Tensor[$CellContext`\[Eta], {$CellContext`Void, \
$CellContext`Void}, {0, 0}] + $CellContext`Tensor[$CellContext`X1, {
             0}, {$CellContext`Void}] $CellContext`Tensor[$CellContext`X2, \
{$CellContext`d}, {$CellContext`Void}] \
$CellContext`Tensor[$CellContext`\[Eta], {$CellContext`Void, \
$CellContext`Void}, {
             0, $CellContext`d}] + $CellContext`Tensor[$CellContext`X1, {
             0}, {$CellContext`Void}] $CellContext`Tensor[$CellContext`X2, \
{$CellContext`jj}, {$CellContext`Void}] $CellContext`Tensor[$CellContext`\
\[Eta], {$CellContext`Void, $CellContext`Void}, {
             0, $CellContext`jj}] + $CellContext`Tensor[$CellContext`X1, \
{$CellContext`d}, {$CellContext`Void}] $CellContext`Tensor[$CellContext`X2, {
             0}, {$CellContext`Void}] \
$CellContext`Tensor[$CellContext`\[Eta], {$CellContext`Void, \
$CellContext`Void}, {$CellContext`d, 
              0}] + $CellContext`Tensor[$CellContext`X1, {$CellContext`d}, \
{$CellContext`Void}] $CellContext`Tensor[$CellContext`X2, {$CellContext`d}, \
{$CellContext`Void}] $CellContext`Tensor[$CellContext`\[Eta], \
{$CellContext`Void, $CellContext`Void}, {$CellContext`d, $CellContext`d}] + \
$CellContext`Tensor[$CellContext`X1, {$CellContext`d}, {$CellContext`Void}] \
$CellContext`Tensor[$CellContext`X2, {$CellContext`jj}, {$CellContext`Void}] \
$CellContext`Tensor[$CellContext`\[Eta], {$CellContext`Void, \
$CellContext`Void}, {$CellContext`d, $CellContext`jj}] + \
$CellContext`Tensor[$CellContext`X1, {$CellContext`kk}, {$CellContext`Void}] \
$CellContext`Tensor[$CellContext`X2, {
             0}, {$CellContext`Void}] \
$CellContext`Tensor[$CellContext`\[Eta], {$CellContext`Void, \
$CellContext`Void}, {$CellContext`kk, 
              0}] + $CellContext`Tensor[$CellContext`X1, {$CellContext`kk}, \
{$CellContext`Void}] $CellContext`Tensor[$CellContext`X2, {$CellContext`d}, \
{$CellContext`Void}] $CellContext`Tensor[$CellContext`\[Eta], \
{$CellContext`Void, $CellContext`Void}, {$CellContext`kk, $CellContext`d}] + \
$CellContext`Tensor[$CellContext`X1, {$CellContext`kk}, {$CellContext`Void}] \
$CellContext`Tensor[$CellContext`X2, {$CellContext`jj}, {$CellContext`Void}] \
$CellContext`Tensor[$CellContext`\[Eta], {$CellContext`Void, \
$CellContext`Void}, {$CellContext`kk, $CellContext`jj}]}, \
{$CellContext`P[$CellContext`X1, $CellContext`X2] -> \
-$CellContext`Tensor[$CellContext`X1, {
             0}, {$CellContext`Void}] $CellContext`Tensor[$CellContext`X2, {
             0}, {$CellContext`Void}] + $CellContext`Tensor[$CellContext`X1, \
{$CellContext`d}, {$CellContext`Void}] $CellContext`Tensor[$CellContext`X2, \
{$CellContext`d}, {$CellContext`Void}]}, {
         Framed[$CellContext`P[$CellContext`X1, $CellContext`X2] -> 
          Rational[1, 2] E^Style["\[Sum]", 
              RGBColor[0.7, 0, 1, 1]][
              
              Grid[{{-$CellContext`t[$CellContext`X1]}, \
{-$CellContext`t[$CellContext`X2]}}, Dividers -> {{True}, {False}}, 
               FrameStyle -> Directive[
                 RGBColor[0.7, 0, 1, 1], 
                 Thickness[Tiny]], Alignment -> Left]] Style["\[Sum]", 
             RGBColor[0.7, 0, 1, 1]][
             
             Grid[{{E^(2 $CellContext`t[$CellContext`X1])}, {
               E^(2 $CellContext`t[$CellContext`X2])}, {-$CellContext`Tensor[
                  $CellContext`x[$CellContext`X1], {$CellContext`i}, \
{$CellContext`Void}] $CellContext`Tensor[
                  $CellContext`x[$CellContext`X1], {$CellContext`Void}, \
{$CellContext`i}]}, {-$CellContext`Tensor[
                  $CellContext`x[$CellContext`X2], {$CellContext`i}, \
{$CellContext`Void}] $CellContext`Tensor[
                  $CellContext`x[$CellContext`X2], {$CellContext`Void}, \
{$CellContext`i}]}}, Dividers -> {{True}, {False}}, FrameStyle -> Directive[
                RGBColor[0.7, 0, 1, 1], 
                Thickness[Tiny]], Alignment -> Left]]]}}, 
       Dividers -> {{True}, {False}}, FrameStyle -> Directive[
         RGBColor[0.7, 0, 1, 1], 
         Thickness[Tiny]], Alignment -> Left][
       Style["compute e[33]", 
        RGBColor[0, 
         Rational[2, 3], 0], FontFamily -> "Helvetica"]]}}, 
    Dividers -> {{True}, {False}}, FrameStyle -> Directive[
      RGBColor[0.7, 0, 1, 1], 
      Thickness[Tiny]], Alignment -> Left]],
  Editable->False]], "Print",
 CellChangeTimes->{{3.806849573552676*^9, 3.8068495995791693`*^9}, {
   3.806851597370894*^9, 3.806851616908065*^9}, {3.806852832319865*^9, 
   3.806852904450864*^9}, {3.806853394657176*^9, 3.806853406954002*^9}, {
   3.806854140482565*^9, 3.8068542280411367`*^9}, 
   3.808052925696974*^9},ExpressionUUID->"ee2cbc4c-43c4-42bf-91e4-\
9a013aae934b"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["3 Quantum Field Theory on De Sitter Space", "Subsection",
 CellChangeTimes->{{3.805990529314569*^9, 
  3.805990548608715*^9}},ExpressionUUID->"cecf9368-a35c-4c89-8a97-\
b940662907bd"],

Cell[CellGroupData[{

Cell["3.1 Green Functions and Vacua", "Subsubsection",
 CellChangeTimes->{{3.80599056305698*^9, 
  3.8059905696624117`*^9}},ExpressionUUID->"0b3f5c8c-007b-49ae-901e-\
7619e6e94e10"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"PR", "[", 
   RowBox[{
    RowBox[{"$pass", "=", 
     RowBox[{"$", "=", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"e", "[", "34", "]"}], "=", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"S", "\[Rule]", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "1"}], "/", "2"}], " ", 
             RowBox[{"xIntegral", "[", 
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{"Sqrt", "[", 
                  RowBox[{"-", "g"}], "]"}], 
                 SuperscriptBox[
                  RowBox[{"(", 
                   RowBox[{"tuDCovariant", "[", 
                    RowBox[{"\[Phi]", ",", "x"}], "]"}], ")"}], "2"]}], "+", 
                RowBox[{
                 SuperscriptBox["m", "2"], 
                 SuperscriptBox["\[Phi]", "2"]}]}], ",", 
               SuperscriptBox["x", "d"]}], "]"}]}]}], "}"}], "[", 
          RowBox[{
          "CG", "[", 
           "\"\<scalar field action on \!\(\*SubscriptBox[\(dS\), \(d\)]\) \
e[34]\>\"", "]"}], "]"}]}], "\[IndentingNewLine]", ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"e", "[", "35", "]"}], "=", 
            RowBox[{
             RowBox[{"G", "[", 
              RowBox[{"X", ",", "Y"}], "]"}], "\[Rule]", 
             RowBox[{"BraKet", "[", 
              RowBox[{"0", ",", 
               RowBox[{
                RowBox[{"\[Phi]", "[", "X", "]"}], ".", 
                RowBox[{"\[Phi]", "[", "Y", "]"}]}], ",", "0"}], "]"}]}]}], 
           "\[IndentingNewLine]", ",", 
           RowBox[{
            RowBox[{"e", "[", "36", "]"}], "=", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"tuDCovariant", "[", 
                   RowBox[{"_", ",", "x"}], "]"}], ")"}], "2"], "-", 
                SuperscriptBox["m", "2"]}], ")"}], "[", 
              RowBox[{"G", "[", 
               RowBox[{"X", ",", "Y"}], "]"}], "]"}], "\[Rule]", "0"}]}], 
           "\[IndentingNewLine]", ",", 
           RowBox[{
            RowBox[{"{", 
             SuperscriptBox[
              RowBox[{"tuDCovariant", "[", 
               RowBox[{"_", ",", "x"}], "]"}], "2"], "}"}], "[", 
            RowBox[{
            "CG", "[", 
             "\"\<Laplacian on \!\(\*SubscriptBox[\(dS\), \(d\)]\)\>\"", 
             "]"}], "]"}], "\[IndentingNewLine]", ",", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"Ket", "[", "0", "]"}], "}"}], "[", 
            RowBox[{"CG", "[", "\"\<invariant under SO[d,1]\>\"", "]"}], 
            "]"}], "\[IndentingNewLine]", ",", 
           RowBox[{"$s", "=", 
            RowBox[{
             RowBox[{"G", "[", 
              RowBox[{"X", ",", "Y"}], "]"}], "->", 
             RowBox[{"G", "[", 
              RowBox[{
               RowBox[{"P", "[", 
                RowBox[{"X", ",", "Y"}], "]"}], "[", 
               RowBox[{"CG", "[", "\"\<invariant length\>\"", "]"}], "]"}], 
              "]"}]}]}], "\[IndentingNewLine]", ",", 
           RowBox[{
            RowBox[{
             RowBox[{"e", "[", 
              RowBox[{"36", ",", "2"}], "]"}], "=", 
             RowBox[{"$", "=", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"e", "[", 
                  RowBox[{"36", ",", "1"}], "]"}], "=", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"e", "[", "36", "]"}], "/.", "$s"}], "//", 
                  "tuNoComments"}]}], ")"}], "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"1", "-", 
                    SuperscriptBox["P", "2"]}], ")"}], 
                   RowBox[{"tuDPartial", "[", 
                    RowBox[{"G", ",", 
                    RowBox[{"{", 
                    RowBox[{"P", ",", "P"}], "}"}]}], "]"}]}], "-", 
                  RowBox[{"d", " ", "P", " ", 
                   RowBox[{"tuDPartial", "[", 
                    RowBox[{"G", ",", "P"}], "]"}]}], "-", 
                  RowBox[{
                   SuperscriptBox["m", "2"], "G"}]}], "\[Rule]", "0"}], 
                "}"}]}]}]}], "\[IndentingNewLine]", ";", 
            RowBox[{
             RowBox[{"$", "[", 
              RowBox[{"CG", "[", "\"\<e[36,2]\>\"", "]"}], "]"}], "//", 
             "Framed"}]}], "\[IndentingNewLine]", ",", 
           RowBox[{"$sz", "=", 
            RowBox[{"$s", "=", 
             RowBox[{"z", "\[Rule]", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"1", "+", "P"}], ")"}], "/", "2"}]}]}]}], 
           "\[IndentingNewLine]", ",", 
           RowBox[{
            RowBox[{"e", "[", 
             RowBox[{"36", ",", "3"}], "]"}], "=", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{
                  RowBox[{"e", "[", 
                   RowBox[{"36", ",", "2"}], "]"}], "[", 
                  RowBox[{"[", 
                   RowBox[{"2", ",", "1"}], "]"}], "]"}], "/.", 
                 RowBox[{"tuRuleSolve", "[", 
                  RowBox[{"$s", ",", "P"}], "]"}]}], "//", 
                RowBox[{"tuDerivativeExpand", "[", 
                 RowBox[{"{", "}"}], "]"}]}], "//", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"#", "/.", 
                  RowBox[{
                   RowBox[{"tuDPartial", "[", 
                    RowBox[{"_", ",", "a_"}], "]"}], "\[RuleDelayed]", 
                   RowBox[{"0", "/;", 
                    RowBox[{"NumberQ", "[", "a", "]"}]}]}]}], "&"}], ")"}]}], 
              "//", 
              RowBox[{"tuDerivativeExpand", "[", 
               RowBox[{"{", "}"}], "]"}]}], "//", "Simplify"}]}], 
           "\[IndentingNewLine]", ",", 
           RowBox[{
            RowBox[{
             RowBox[{"e", "[", "39", "]"}], "=", 
             RowBox[{"$", "=", 
              RowBox[{
               RowBox[{
                RowBox[{"e", "[", 
                 RowBox[{"36", ",", "3"}], "]"}], "//", 
                RowBox[{"tuRuleDSolve", "[", 
                 RowBox[{"G", ",", 
                  RowBox[{"{", "z", "}"}]}], "]"}]}], "//", "tuRule1"}]}]}], 
            "\[IndentingNewLine]", ";", 
            RowBox[{
             RowBox[{"$", "[", 
              RowBox[{
              "CR", "[", 
               "\"\<e[39] Is there identity between P,Q and HyperGeometric \
functions? \>\"", "]"}], "]"}], "//", "ColumnSumExp"}]}]}], 
          "\[IndentingNewLine]", "}"}], "[", 
         RowBox[{
         "CG", "[", "\"\<e[35] study Wrightman two-point function\>\"", "]"}],
          "]"}]}], "\[IndentingNewLine]", "}"}]}]}], ";", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"ColumnForms", "[", 
        RowBox[{"#1", ",", "4"}], "]"}], "&"}], ")"}], "[", "$", "]"}]}], 
   "\[IndentingNewLine]", "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.8059905514678707`*^9, 3.805990553055434*^9}, {
   3.8059905968795233`*^9, 3.805990979063032*^9}, {3.805991057020994*^9, 
   3.8059911526442413`*^9}, {3.805995190391007*^9, 3.805995400169859*^9}, {
   3.805995437648637*^9, 3.805995487561376*^9}, {3.805995613972621*^9, 
   3.8059957266560087`*^9}, {3.805995759578229*^9, 3.805995775889529*^9}, {
   3.8059958114642687`*^9, 3.8059958765090933`*^9}, {3.806064442865678*^9, 
   3.806064446599967*^9}, {3.806064543450912*^9, 3.80606456783641*^9}, {
   3.8060646364370527`*^9, 3.806064638930616*^9}, {3.806064920114018*^9, 
   3.806064923947218*^9}, {3.8060656892907457`*^9, 3.806065700118807*^9}, {
   3.8060706276300697`*^9, 3.806070630492697*^9}, {3.80607189685181*^9, 
   3.806071903543795*^9}, 3.806073397102931*^9, {3.806073473656412*^9, 
   3.806073495080927*^9}, {3.806074066716572*^9, 3.806074357506947*^9}, {
   3.806074423888926*^9, 3.8060744675800962`*^9}, {3.806078611100576*^9, 
   3.8060786125024757`*^9}, {3.8062389948778887`*^9, 3.806239035186583*^9}, {
   3.806239074151173*^9, 3.806239153157608*^9}, {3.8062392552149057`*^9, 
   3.806239262626759*^9}, {3.8062394452051973`*^9, 3.806239445990047*^9}, {
   3.806239482076635*^9, 3.806239482240443*^9}, {3.8062395466706448`*^9, 
   3.8062396295479383`*^9}, {3.806239691781345*^9, 3.80623986267807*^9}, {
   3.80624048558182*^9, 3.8062404900981827`*^9}, {3.806677057176589*^9, 
   3.806677068074066*^9}, {3.8067521357046633`*^9, 3.8067521374638987`*^9}, {
   3.806752315842992*^9, 
   3.806752432706108*^9}},ExpressionUUID->"b993975b-980c-467c-9bf6-\
f910246009d2"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     RowBox[{
      TagBox[GridBox[{
         {
          RowBox[{"S", "\[Rule]", 
           RowBox[{
            RowBox[{"-", 
             FractionBox["1", "2"]}], " ", 
            TemplateBox[{RowBox[{"(", 
                RowBox[{
                  RowBox[{
                    SuperscriptBox["m", "2"], " ", 
                    SuperscriptBox["\[Phi]", "2"]}], "+", 
                  RowBox[{
                    SqrtBox[
                    RowBox[{"-", "g"}]], " ", 
                    SuperscriptBox[
                    InterpretationBox[
                    RowBox[{
                    SubscriptBox[
                    UnderscriptBox["\"\[Del]\"", "_"], "x"], "[", "\[Phi]", 
                    "]"}], 
                    $CellContext`tuDDown[
                    "\[Del]"][$CellContext`\[Phi], $CellContext`x], 
                    SyntaxForm -> Automatic, Editable -> False], "2"]}]}], 
                ")"}],SuperscriptBox["x", "d"]},
             "InactiveIntegrate",
             DisplayFunction->(RowBox[{
                StyleBox["\[Integral]", "Inactive"], 
                RowBox[{#, 
                  RowBox[{
                    StyleBox["\[DifferentialD]", "Inactive"], #2}]}]}]& ),
             InterpretationFunction->(RowBox[{
                RowBox[{"Inactive", "[", "Integrate", "]"}], "[", 
                RowBox[{#, ",", #2}], "]"}]& )]}]}]}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          RGBColor[0.7, 0, 1, 1], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {{Left}}},
        GridBoxDividers->{"Columns" -> {True}, "Rows" -> {False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], "[", 
      StyleBox["\<\"scalar field action on \\!\\(\\*SubscriptBox[\\(dS\\), \
\\(d\\)]\\) e[34]\"\>",
       StripOnInput->False,
       LineColor->RGBColor[0, 
         Rational[2, 3], 0],
       FrontFaceColor->RGBColor[0, 
         Rational[2, 3], 0],
       BackFaceColor->RGBColor[0, 
         Rational[2, 3], 0],
       GraphicsColor->RGBColor[0, 
         Rational[2, 3], 0],
       FontFamily->"Helvetica",
       FontColor->RGBColor[0, 
         Rational[2, 3], 0]], "]"}]},
    {
     RowBox[{
      TagBox[GridBox[{
         {
          RowBox[{
           RowBox[{"G", "[", 
            RowBox[{"X", ",", "Y"}], "]"}], "\[Rule]", 
           InterpretationBox[
            RowBox[{
             StyleBox["\[LeftAngleBracket]",
              FontWeight->Bold], "0", 
             StyleBox["|",
              FontWeight->Bold], 
             RowBox[{
              RowBox[{"\[Phi]", "[", "X", "]"}], ".", 
              RowBox[{"\[Phi]", "[", "Y", "]"}]}], 
             StyleBox["|",
              FontWeight->Bold], "0", 
             StyleBox["\[RightAngleBracket]",
              FontWeight->Bold]}],
            BraKet[0, 
             Dot[
              $CellContext`\[Phi][$CellContext`X], 
              $CellContext`\[Phi][$CellContext`Y]], 0],
            Editable->False,
            SyntaxForm->Automatic]}]},
         {
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", 
               SuperscriptBox["m", "2"]}], "+", 
              SuperscriptBox[
               InterpretationBox[
                RowBox[{
                 SubscriptBox[
                  UnderscriptBox["\<\"\[Del]\"\>", "_"], "x"], "[", "_", "]"}],
                $CellContext`tuDDown["\[Del]"][
                 Blank[], $CellContext`x],
                Editable->False,
                SyntaxForm->Automatic], "2"]}], ")"}], "[", 
            RowBox[{"G", "[", 
             RowBox[{"X", ",", "Y"}], "]"}], "]"}], "\[Rule]", "0"}]},
         {
          RowBox[{
           RowBox[{"{", 
            SuperscriptBox[
             InterpretationBox[
              RowBox[{
               SubscriptBox[
                UnderscriptBox["\<\"\[Del]\"\>", "_"], "x"], "[", "_", "]"}],
              $CellContext`tuDDown["\[Del]"][
               Blank[], $CellContext`x],
              Editable->False,
              SyntaxForm->Automatic], "2"], "}"}], "[", 
           
           StyleBox["\<\"Laplacian on \\!\\(\\*SubscriptBox[\\(dS\\), \
\\(d\\)]\\)\"\>",
            StripOnInput->False,
            LineColor->RGBColor[0, 
              Rational[2, 3], 0],
            FrontFaceColor->RGBColor[0, 
              Rational[2, 3], 0],
            BackFaceColor->RGBColor[0, 
              Rational[2, 3], 0],
            GraphicsColor->RGBColor[0, 
              Rational[2, 3], 0],
            FontFamily->"Helvetica",
            FontColor->RGBColor[0, 
              Rational[2, 3], 0]], "]"}]},
         {
          RowBox[{
           RowBox[{"{", 
            InterpretationBox[
             RowBox[{
              StyleBox["\[LeftBracketingBar]",
               FontWeight->Bold], "0", 
              StyleBox["\[RightAngleBracket]",
               FontWeight->Bold]}],
             Ket[0],
             Editable->False,
             SyntaxForm->Automatic], "}"}], "[", 
           StyleBox["\<\"invariant under SO[d,1]\"\>",
            StripOnInput->False,
            LineColor->RGBColor[0, 
              Rational[2, 3], 0],
            FrontFaceColor->RGBColor[0, 
              Rational[2, 3], 0],
            BackFaceColor->RGBColor[0, 
              Rational[2, 3], 0],
            GraphicsColor->RGBColor[0, 
              Rational[2, 3], 0],
            FontFamily->"Helvetica",
            FontColor->RGBColor[0, 
              Rational[2, 3], 0]], "]"}]},
         {
          RowBox[{
           RowBox[{"G", "[", 
            RowBox[{"X", ",", "Y"}], "]"}], "\[Rule]", 
           RowBox[{"G", "[", 
            RowBox[{
             RowBox[{"P", "[", 
              RowBox[{"X", ",", "Y"}], "]"}], "[", 
             StyleBox["\<\"invariant length\"\>",
              StripOnInput->False,
              LineColor->RGBColor[0, 
                Rational[2, 3], 0],
              FrontFaceColor->RGBColor[0, 
                Rational[2, 3], 0],
              BackFaceColor->RGBColor[0, 
                Rational[2, 3], 0],
              GraphicsColor->RGBColor[0, 
                Rational[2, 3], 0],
              FontFamily->"Helvetica",
              FontColor->RGBColor[0, 
                Rational[2, 3], 0]], "]"}], "]"}]}]},
         {
          FrameBox[
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"-", 
                    SuperscriptBox["m", "2"]}], "+", 
                   SuperscriptBox[
                    InterpretationBox[
                    RowBox[{
                    SubscriptBox[
                    UnderscriptBox["\<\"\[Del]\"\>", "_"], "x"], "[", "_", 
                    "]"}],
                    $CellContext`tuDDown["\[Del]"][
                    Blank[], $CellContext`x],
                    Editable->False,
                    SyntaxForm->Automatic], "2"]}], ")"}], "[", 
                 RowBox[{"G", "[", 
                  RowBox[{"P", "[", 
                   RowBox[{"X", ",", "Y"}], "]"}], "]"}], "]"}], "\[Rule]", 
                "0"}], ")"}], "\[Rule]", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{
                 RowBox[{
                  RowBox[{"-", "G"}], " ", 
                  SuperscriptBox["m", "2"]}], "-", 
                 RowBox[{"d", " ", "P", " ", 
                  InterpretationBox[
                   RowBox[{
                    SubscriptBox[
                    UnderscriptBox["\<\"\[PartialD]\"\>", "_"], "P"], "[", 
                    "G", "]"}],
                   $CellContext`tuDDown[
                   "\[PartialD]"][$CellContext`G, $CellContext`P],
                   Editable->False,
                   SyntaxForm->Automatic]}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"1", "-", 
                    SuperscriptBox["P", "2"]}], ")"}], " ", 
                  InterpretationBox[
                   RowBox[{
                    SubscriptBox[
                    UnderscriptBox["\<\"\[PartialD]\"\>", "_"], 
                    RowBox[{"{", 
                    RowBox[{"P", ",", "P"}], "}"}]], "[", "G", "]"}],
                   $CellContext`tuDDown[
                   "\[PartialD]"][$CellContext`G, {$CellContext`P, \
$CellContext`P}],
                   Editable->False,
                   SyntaxForm->Automatic]}]}], "\[Rule]", "0"}], "}"}]}], 
             ")"}], "[", 
            StyleBox["\<\"e[36,2]\"\>",
             StripOnInput->False,
             LineColor->RGBColor[0, 
               Rational[2, 3], 0],
             FrontFaceColor->RGBColor[0, 
               Rational[2, 3], 0],
             BackFaceColor->RGBColor[0, 
               Rational[2, 3], 0],
             GraphicsColor->RGBColor[0, 
               Rational[2, 3], 0],
             FontFamily->"Helvetica",
             FontColor->RGBColor[0, 
               Rational[2, 3], 0]], "]"}],
           StripOnInput->False]},
         {
          RowBox[{"z", "\[Rule]", 
           FractionBox[
            RowBox[{"1", "+", "P"}], "2"]}]},
         {
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"-", "G"}], " ", 
             SuperscriptBox["m", "2"]}], "+", 
            RowBox[{
             FractionBox["1", "2"], " ", 
             RowBox[{"(", 
              RowBox[{"d", "-", 
               RowBox[{"2", " ", "d", " ", "z"}]}], ")"}], " ", 
             InterpretationBox[
              RowBox[{
               SubscriptBox[
                UnderscriptBox["\<\"\[PartialD]\"\>", "_"], "z"], "[", "G", 
               "]"}],
              $CellContext`tuDDown[
              "\[PartialD]"][$CellContext`G, $CellContext`z],
              Editable->False,
              SyntaxForm->Automatic]}], "-", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "z"}], ")"}], " ", "z", " ", 
             InterpretationBox[
              RowBox[{
               SubscriptBox[
                UnderscriptBox["\<\"\[PartialD]\"\>", "_"], "z"], "[", 
               InterpretationBox[
                RowBox[{
                 SubscriptBox[
                  UnderscriptBox["\<\"\[PartialD]\"\>", "_"], "z"], "[", "G", 
                 "]"}],
                $CellContext`tuDDown[
                "\[PartialD]"][$CellContext`G, $CellContext`z],
                Editable->False,
                SyntaxForm->Automatic], "]"}],
              $CellContext`tuDDown["\[PartialD]"][
               $CellContext`tuDDown[
               "\[PartialD]"][$CellContext`G, $CellContext`z], $CellContext`z],
              Editable->False,
              SyntaxForm->Automatic]}]}], "\[Rule]", "0"}]},
         {
          RowBox[{
           RowBox[{"(", 
            RowBox[{"G", "\[Rule]", 
             RowBox[{
              StyleBox["\<\"\[Sum]\"\>",
               StripOnInput->False,
               LineColor->RGBColor[0.7, 0, 1],
               LineOpacity->1,
               FrontFaceColor->RGBColor[0.7, 0, 1],
               BackFaceColor->RGBColor[0.7, 0, 1],
               FrontFaceOpacity->1,
               BackFaceOpacity->1,
               GraphicsColor->RGBColor[0.7, 0, 1],
               Opacity->1,
               FontColor->RGBColor[0.7, 0, 1],
               FontOpacity->1], "[", 
              TagBox[GridBox[{
                 {
                  RowBox[{
                   SuperscriptBox["\[ExponentialE]", 
                    RowBox[{
                    RowBox[{"-", 
                    FractionBox["1", "4"]}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "2"}], "+", "d"}], ")"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Log", "[", 
                    RowBox[{"1", "-", "z"}], "]"}], "+", 
                    RowBox[{"Log", "[", "z", "]"}]}], ")"}]}]], " ", 
                   RowBox[{"C", "[", "1", "]"}], " ", 
                   RowBox[{"LegendreP", "[", 
                    RowBox[{
                    RowBox[{
                    FractionBox["1", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", 
                    SqrtBox[
                    RowBox[{"1", "-", 
                    RowBox[{"2", " ", "d"}], "+", 
                    SuperscriptBox["d", "2"], "-", 
                    RowBox[{"4", " ", 
                    SuperscriptBox["m", "2"]}]}]]}], ")"}]}], ",", 
                    RowBox[{
                    FractionBox["1", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "2"}], "+", "d"}], ")"}]}], ",", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", 
                    RowBox[{"2", " ", "z"}]}]}], "]"}]}]},
                 {
                  RowBox[{
                   SuperscriptBox["\[ExponentialE]", 
                    RowBox[{
                    RowBox[{"-", 
                    FractionBox["1", "4"]}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "2"}], "+", "d"}], ")"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Log", "[", 
                    RowBox[{"1", "-", "z"}], "]"}], "+", 
                    RowBox[{"Log", "[", "z", "]"}]}], ")"}]}]], " ", 
                   RowBox[{"C", "[", "2", "]"}], " ", 
                   RowBox[{"LegendreQ", "[", 
                    RowBox[{
                    RowBox[{
                    FractionBox["1", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", 
                    SqrtBox[
                    RowBox[{"1", "-", 
                    RowBox[{"2", " ", "d"}], "+", 
                    SuperscriptBox["d", "2"], "-", 
                    RowBox[{"4", " ", 
                    SuperscriptBox["m", "2"]}]}]]}], ")"}]}], ",", 
                    RowBox[{
                    FractionBox["1", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "2"}], "+", "d"}], ")"}]}], ",", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", 
                    RowBox[{"2", " ", "z"}]}]}], "]"}]}]}
                },
                AutoDelete->False,
                FrameStyle->Directive[
                  RGBColor[0.7, 0, 1, 1], 
                  Thickness[Tiny]],
                GridBoxAlignment->{"Columns" -> {{Left}}},
                GridBoxDividers->{"Columns" -> {True}, "Rows" -> {False}},
                
                GridBoxItemSize->{
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
               "Grid"], "]"}]}], ")"}], "[", 
           
           StyleBox["\<\"e[39] Is there identity between P,Q and \
HyperGeometric functions? \"\>",
            StripOnInput->False,
            LineColor->RGBColor[1, 0, 0],
            FrontFaceColor->RGBColor[1, 0, 0],
            BackFaceColor->RGBColor[1, 0, 0],
            GraphicsColor->RGBColor[1, 0, 0],
            FontFamily->"Helvetica",
            FontColor->RGBColor[1, 0, 0]], "]"}]}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          RGBColor[0.7, 0, 1, 1], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {{Left}}},
        GridBoxDividers->{"Columns" -> {True}, "Rows" -> {False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], "[", 
      StyleBox["\<\"e[35] study Wrightman two-point function\"\>",
       StripOnInput->False,
       LineColor->RGBColor[0, 
         Rational[2, 3], 0],
       FrontFaceColor->RGBColor[0, 
         Rational[2, 3], 0],
       BackFaceColor->RGBColor[0, 
         Rational[2, 3], 0],
       GraphicsColor->RGBColor[0, 
         Rational[2, 3], 0],
       FontFamily->"Helvetica",
       FontColor->RGBColor[0, 
         Rational[2, 3], 0]], "]"}]}
   },
   AutoDelete->False,
   FrameStyle->Directive[
     RGBColor[0.7, 0, 1, 1], 
     Thickness[Tiny]],
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxDividers->{"Columns" -> {True}, "Rows" -> {False}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Print",
 CellChangeTimes->{
  3.806078615387877*^9, 3.80623900129204*^9, 3.8062390519860077`*^9, {
   3.80623914523985*^9, 3.80623915466*^9}, 3.806239273311097*^9, {
   3.80623946139058*^9, 3.806239483138183*^9}, {3.806239584717539*^9, 
   3.806239631434298*^9}, {3.806239706816312*^9, 3.806239732229744*^9}, {
   3.8062397789962187`*^9, 3.8062398274636583`*^9}, 3.806239863617413*^9, 
   3.806240492696978*^9, 3.806328908987275*^9, 3.806676123504519*^9, 
   3.806677070824815*^9, 3.806752139205008*^9, 3.806752434741523*^9, 
   3.808052927310918*^9},ExpressionUUID->"56a8e3fc-788e-4c58-bd91-\
222d9fa4a828"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PR", "[", 
  RowBox[{
   RowBox[{
   "CR", "[", 
    "\"\<Their invariant length P[X,Y] is unclear.  Could it be synomynous \
with proper time s? \>\"", "]"}], "\[IndentingNewLine]", ",", 
   "\"\<The solutions e[39] and e[43] differ by P \[LongRightArrow] -P \
symmetry. What is the meaning of -P?\>\"", "\[IndentingNewLine]", ",", "NL", 
   ",", 
   RowBox[{
    RowBox[{"e", "[", "39", "]"}], "/.", "$sz"}]}], "\[IndentingNewLine]", 
  "]"}]], "Input",
 CellChangeTimes->{{3.806697402806054*^9, 3.806697560626636*^9}, {
   3.8066975928740873`*^9, 3.8066976605280733`*^9}, 3.8067516668453493`*^9, {
   3.8067517093799562`*^9, 3.8067517223668337`*^9}, {3.806751791206023*^9, 
   3.806751850258437*^9}, {3.806752033442618*^9, 3.806752093835349*^9}, {
   3.80675214478475*^9, 3.806752159948241*^9}, 
   3.806752279537353*^9},ExpressionUUID->"da42148b-e5c8-48be-8ad3-\
48507f565c85"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   StyleBox["\<\"Their invariant length P[X,Y] is unclear.  Could it be \
synomynous with proper time s? \"\>",
    StripOnInput->False,
    LineColor->RGBColor[1, 0, 0],
    FrontFaceColor->RGBColor[1, 0, 0],
    BackFaceColor->RGBColor[1, 0, 0],
    GraphicsColor->RGBColor[1, 0, 0],
    FontFamily->"Helvetica",
    FontColor->RGBColor[1, 0, 0]], "\[InvisibleSpace]", 
   StyleBox["\<\"The solutions e[39] and e[43] differ by P \[LongRightArrow] \
-P symmetry. What is the meaning of -P?\"\>",
    StripOnInput->False,
    LineColor->RGBColor[0.7, 0, 1],
    LineOpacity->1,
    FrontFaceColor->RGBColor[0.7, 0, 1],
    BackFaceColor->RGBColor[0.7, 0, 1],
    FrontFaceOpacity->1,
    BackFaceOpacity->1,
    GraphicsColor->RGBColor[0.7, 0, 1],
    Opacity->1,
    FontSize->Larger,
    FontColor->RGBColor[0.7, 0, 1],
    FontOpacity->1], "\[InvisibleSpace]", 
   StyleBox["\<\"\\n\"\>",
    StripOnInput->False,
    LineColor->RGBColor[0.7, 0, 1],
    LineOpacity->1,
    FrontFaceColor->RGBColor[0.7, 0, 1],
    BackFaceColor->RGBColor[0.7, 0, 1],
    FrontFaceOpacity->1,
    BackFaceOpacity->1,
    GraphicsColor->RGBColor[0.7, 0, 1],
    Opacity->1,
    FontSize->Larger,
    FontColor->RGBColor[0.7, 0, 1],
    FontOpacity->1], "\[InvisibleSpace]", 
   RowBox[{"G", "\[Rule]", 
    RowBox[{
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", 
         FractionBox["1", "4"]}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "2"}], "+", "d"}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Log", "[", 
           RowBox[{"1", "+", 
            RowBox[{
             FractionBox["1", "2"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "-", "P"}], ")"}]}]}], "]"}], "+", 
          RowBox[{"Log", "[", 
           FractionBox[
            RowBox[{"1", "+", "P"}], "2"], "]"}]}], ")"}]}]], " ", 
      RowBox[{"C", "[", "1", "]"}], " ", 
      RowBox[{"LegendreP", "[", 
       RowBox[{
        RowBox[{
         FractionBox["1", "2"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", 
           SqrtBox[
            RowBox[{"1", "-", 
             RowBox[{"2", " ", "d"}], "+", 
             SuperscriptBox["d", "2"], "-", 
             RowBox[{"4", " ", 
              SuperscriptBox["m", "2"]}]}]]}], ")"}]}], ",", 
        RowBox[{
         FractionBox["1", "2"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "2"}], "+", "d"}], ")"}]}], ",", "P"}], "]"}]}], "+", 
     
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", 
         FractionBox["1", "4"]}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "2"}], "+", "d"}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Log", "[", 
           RowBox[{"1", "+", 
            RowBox[{
             FractionBox["1", "2"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "-", "P"}], ")"}]}]}], "]"}], "+", 
          RowBox[{"Log", "[", 
           FractionBox[
            RowBox[{"1", "+", "P"}], "2"], "]"}]}], ")"}]}]], " ", 
      RowBox[{"C", "[", "2", "]"}], " ", 
      RowBox[{"LegendreQ", "[", 
       RowBox[{
        RowBox[{
         FractionBox["1", "2"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", 
           SqrtBox[
            RowBox[{"1", "-", 
             RowBox[{"2", " ", "d"}], "+", 
             SuperscriptBox["d", "2"], "-", 
             RowBox[{"4", " ", 
              SuperscriptBox["m", "2"]}]}]]}], ")"}]}], ",", 
        RowBox[{
         FractionBox["1", "2"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "2"}], "+", "d"}], ")"}]}], ",", "P"}], "]"}]}]}]}]}],
  
  SequenceForm[
   Style["Their invariant length P[X,Y] is unclear.  Could it be synomynous \
with proper time s? ", 
    RGBColor[1, 0, 0], FontFamily -> "Helvetica"], 
   Style["The solutions e[39] and e[43] differ by P \[LongRightArrow] -P \
symmetry. What is the meaning of -P?", 
    RGBColor[0.7, 0, 1, 1], Larger], 
   Style["\n", 
    RGBColor[0.7, 0, 1, 1], Larger], $CellContext`G -> 
   E^(Rational[-1, 4] (-2 + $CellContext`d) (
        Log[1 + Rational[1, 2] (-1 - $CellContext`P)] + 
        Log[Rational[1, 2] (1 + $CellContext`P)])) C[1] 
     LegendreP[
      Rational[1, 
         2] (-1 + (1 - 2 $CellContext`d + $CellContext`d^2 - 
          4 $CellContext`m^2)^Rational[1, 2]), 
       Rational[1, 2] (-2 + $CellContext`d), $CellContext`P] + 
    E^(Rational[-1, 4] (-2 + $CellContext`d) (
        Log[1 + Rational[1, 2] (-1 - $CellContext`P)] + 
        Log[Rational[1, 2] (1 + $CellContext`P)])) C[2] 
     LegendreQ[
      Rational[1, 
         2] (-1 + (1 - 2 $CellContext`d + $CellContext`d^2 - 
          4 $CellContext`m^2)^Rational[1, 2]), 
       Rational[1, 2] (-2 + $CellContext`d), $CellContext`P]],
  Editable->False]], "Print",
 CellChangeTimes->{{3.806697501076091*^9, 3.806697507581481*^9}, 
   3.8066976616001*^9, 3.806751667771491*^9, {3.8067518249377604`*^9, 
   3.806751851374219*^9}, {3.806752070105777*^9, 3.806752094407207*^9}, {
   3.806752147790779*^9, 3.8067521620789633`*^9}, 3.806752445590839*^9, 
   3.808052928018343*^9},ExpressionUUID->"1da91ba0-5e07-490b-9cd0-\
937899ba51a6"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"PR", "[", 
   RowBox[{
    RowBox[{
    "CB", "[", 
     "\"\<The d-dim spherically symmetric Laplacian is different from dS \
Laplacian!!\>\"", "]"}], "\[IndentingNewLine]", ",", "NL", ",", 
    "\"\<The \>\"", ",", 
    RowBox[{
     RowBox[{"$pass", "//", 
      RowBox[{"tuExtractPattern", "[", 
       RowBox[{
        RowBox[{"{", 
         SuperscriptBox["_", "2"], "}"}], "[", "_", "]"}], "]"}]}], "//", 
     "First"}], "\[IndentingNewLine]", ",", 
    RowBox[{
    "CO", "[", 
     "\"\<must be different from the standard d-dim spherically symmetric \
Laplacian \>\"", "]"}], "\[IndentingNewLine]", ",", 
    RowBox[{"$s", "=", 
     RowBox[{
      SuperscriptBox[
       RowBox[{"tuDCovariant", "[", 
        RowBox[{"a_", ",", "x"}], "]"}], "2"], "\[Rule]", 
      RowBox[{
       RowBox[{"tuDPartial", "[", 
        RowBox[{"a", ",", 
         RowBox[{"{", 
          RowBox[{"r", ",", "r"}], "}"}]}], "]"}], "+", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"d", "-", "1"}], ")"}], "/", "r"}], " ", 
        RowBox[{"tuDPartial", "[", 
         RowBox[{"a", ",", "r"}], "]"}]}]}]}]}], "\[IndentingNewLine]", ",", 
    "\"\<Since taking the expression \>\"", "\[IndentingNewLine]", ",", 
    RowBox[{"$", "=", 
     RowBox[{"e", "[", 
      RowBox[{"36", ",", "1"}], "]"}]}], "\[IndentingNewLine]", ",", "Yield", 
    ",", 
    RowBox[{"$", "=", 
     RowBox[{
      RowBox[{
       RowBox[{"$", "/.", "$s"}], "//", 
       RowBox[{"tuBlankOpNest", "[", 
        RowBox[{"{", 
         SuperscriptBox["m", "2"], "}"}], "]"}]}], "//", "tuBlankOpFill"}]}], 
    "\[IndentingNewLine]", ",", "NL", ",", 
    "\"\<Putting this expression in terms of \>\"", ",", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"$s", "=", 
       RowBox[{
        RowBox[{"P", "[", 
         RowBox[{"X", ",", "Y"}], "]"}], "\[Rule]", "P"}]}], "}"}], "[", 
     RowBox[{"CR", "[", "\"\<invariant length (spacetime?)\>\"", "]"}], "]"}],
     "\[IndentingNewLine]", ",", "Yield", ",", 
    RowBox[{"$", "=", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"$", "/.", "$s"}], "/.", 
         RowBox[{"r", "\[Rule]", "P"}]}], "//", 
        RowBox[{"tuDerivativeExpand", "[", "]"}]}], "//", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"#", "//.", "toTimes"}], "&"}], ")"}]}], "//", 
      "Simplify"}]}], "\[IndentingNewLine]", ",", 
    RowBox[{
    "CR", "[", 
     "\"\<This is different from e[37] by the (1-\!\(\*SuperscriptBox[\(P\), \
\(2\)]\)) and (d-1) factors\>\"", "]"}], "\[IndentingNewLine]", ",", "NL", 
    ",", "\"\<The transform \>\"", ",", 
    RowBox[{"$s", "=", 
     RowBox[{"z", "\[Rule]", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1", "+", "P"}], ")"}], "/", "2"}]}]}], "\[IndentingNewLine]",
     ",", "Yield", ",", 
    RowBox[{"$", "=", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"$", "/.", 
           RowBox[{"tuRuleSolve", "[", 
            RowBox[{"$s", ",", "P"}], "]"}]}], "//", 
          RowBox[{"tuDerivativeExpand", "[", "]"}]}], "//", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"#", "/.", 
            RowBox[{
             RowBox[{"tuDPartial", "[", 
              RowBox[{"_", ",", "a_"}], "]"}], "\[RuleDelayed]", 
             RowBox[{"0", "/;", 
              RowBox[{"NumberQ", "[", "a", "]"}]}]}]}], "&"}], ")"}]}], "//", 
        
        RowBox[{"tuDerivativeExpand", "[", "]"}]}], "//", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"#", "/.", 
          RowBox[{
           RowBox[{"G", "[", "_", "]"}], "\[Rule]", "G"}]}], "&"}], ")"}]}], "//", 
      RowBox[{
       RowBox[{"Collect", "[", 
        RowBox[{"#", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"tuDPartial", "[", 
            RowBox[{"G", ",", "z"}], "]"}], ",", "G"}], "}"}], ",", 
         "Simplify"}], "]"}], "&"}]}]}], "\[IndentingNewLine]", ",", 
    RowBox[{"CR", "[", "\"\<Not e[38]\>\"", "]"}], "\[IndentingNewLine]", ",",
     "Yield", ",", 
    RowBox[{"$", "=", 
     RowBox[{
      RowBox[{"$", "//", 
       RowBox[{"tuRuleDSolve", "[", 
        RowBox[{"G", ",", 
         RowBox[{"{", "z", "}"}]}], "]"}]}], "//", "ColumnSumExp"}]}]}], 
   "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.8059905514678707`*^9, 3.805990553055434*^9}, {
   3.8059905968795233`*^9, 3.805990979063032*^9}, {3.805991057020994*^9, 
   3.8059911526442413`*^9}, {3.805995190391007*^9, 3.805995400169859*^9}, {
   3.805995437648637*^9, 3.805995487561376*^9}, {3.805995613972621*^9, 
   3.8059957266560087`*^9}, {3.805995759578229*^9, 3.805995775889529*^9}, {
   3.8059958114642687`*^9, 3.8059958765090933`*^9}, {3.806064442865678*^9, 
   3.806064446599967*^9}, {3.806064543450912*^9, 3.80606456783641*^9}, {
   3.8060646364370527`*^9, 3.806064638930616*^9}, {3.806064920114018*^9, 
   3.806064923947218*^9}, {3.8060656892907457`*^9, 3.806065700118807*^9}, {
   3.8060706276300697`*^9, 3.806070630492697*^9}, {3.80607189685181*^9, 
   3.806071903543795*^9}, 3.806073397102931*^9, {3.806073473656412*^9, 
   3.806073495080927*^9}, {3.806074066716572*^9, 3.806074357506947*^9}, {
   3.806074423888926*^9, 3.8060744675800962`*^9}, {3.806078611100576*^9, 
   3.8060786125024757`*^9}, {3.8060786428597717`*^9, 
   3.8060786535491247`*^9}, {3.8060786842197638`*^9, 3.806078700688724*^9}, {
   3.806080791978641*^9, 3.806080802492598*^9}, {3.8061715805813828`*^9, 
   3.806171598483427*^9}, {3.80624061608729*^9, 3.8062406201366158`*^9}, {
   3.8062407939537888`*^9, 3.8062408351119967`*^9}, {3.806240898361431*^9, 
   3.806240928219263*^9}},ExpressionUUID->"af7b00a1-6b04-49c2-ae35-\
e1727aa475a8"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   StyleBox["\<\"The d-dim spherically symmetric Laplacian is different from \
dS Laplacian!!\"\>",
    StripOnInput->False,
    LineColor->RGBColor[0, 0, 1],
    FrontFaceColor->RGBColor[0, 0, 1],
    BackFaceColor->RGBColor[0, 0, 1],
    GraphicsColor->RGBColor[0, 0, 1],
    FontFamily->"Helvetica",
    FontColor->RGBColor[0, 0, 1]], "\[InvisibleSpace]", 
   StyleBox["\<\"\\n\"\>",
    StripOnInput->False,
    LineColor->RGBColor[0.7, 0, 1],
    LineOpacity->1,
    FrontFaceColor->RGBColor[0.7, 0, 1],
    BackFaceColor->RGBColor[0.7, 0, 1],
    FrontFaceOpacity->1,
    BackFaceOpacity->1,
    GraphicsColor->RGBColor[0.7, 0, 1],
    Opacity->1,
    FontSize->Larger,
    FontColor->RGBColor[0.7, 0, 1],
    FontOpacity->1], "\[InvisibleSpace]", 
   StyleBox["\<\"The \"\>",
    StripOnInput->False,
    LineColor->RGBColor[0.7, 0, 1],
    LineOpacity->1,
    FrontFaceColor->RGBColor[0.7, 0, 1],
    BackFaceColor->RGBColor[0.7, 0, 1],
    FrontFaceOpacity->1,
    BackFaceOpacity->1,
    GraphicsColor->RGBColor[0.7, 0, 1],
    Opacity->1,
    FontSize->Larger,
    FontColor->RGBColor[0.7, 0, 1],
    FontOpacity->1], "\[InvisibleSpace]", 
   RowBox[{
    RowBox[{"{", 
     SuperscriptBox[
      InterpretationBox[
       RowBox[{
        SubscriptBox[
         UnderscriptBox["\<\"\[Del]\"\>", "_"], "x"], "[", "_", "]"}],
       $CellContext`tuDDown["\[Del]"][
        Blank[], $CellContext`x],
       Editable->False,
       SyntaxForm->Automatic], "2"], "}"}], "[", 
    StyleBox["\<\"Laplacian on \\!\\(\\*SubscriptBox[\\(dS\\), \
\\(d\\)]\\)\"\>",
     StripOnInput->False,
     LineColor->RGBColor[0, 
       Rational[2, 3], 0],
     FrontFaceColor->RGBColor[0, 
       Rational[2, 3], 0],
     BackFaceColor->RGBColor[0, 
       Rational[2, 3], 0],
     GraphicsColor->RGBColor[0, 
       Rational[2, 3], 0],
     FontFamily->"Helvetica",
     FontColor->RGBColor[0, 
       Rational[2, 3], 0]], "]"}], "\[InvisibleSpace]", 
   StyleBox["\<\"must be different from the standard d-dim spherically \
symmetric Laplacian \"\>",
    StripOnInput->False,
    LineColor->RGBColor[1, 0.5, 0],
    FrontFaceColor->RGBColor[1, 0.5, 0],
    BackFaceColor->RGBColor[1, 0.5, 0],
    GraphicsColor->RGBColor[1, 0.5, 0],
    FontFamily->"Helvetica",
    FontColor->RGBColor[1, 0.5, 0]], "\[InvisibleSpace]", 
   RowBox[{
    SuperscriptBox[
     InterpretationBox[
      RowBox[{
       SubscriptBox[
        UnderscriptBox["\<\"\[Del]\"\>", "_"], "x"], "[", "a_", "]"}],
      $CellContext`tuDDown["\[Del]"][
       Pattern[$CellContext`a, 
        Blank[]], $CellContext`x],
      Editable->False,
      SyntaxForm->Automatic], "2"], "\[Rule]", 
    RowBox[{
     FractionBox[
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "d"}], ")"}], " ", 
       InterpretationBox[
        RowBox[{
         SubscriptBox[
          UnderscriptBox["\<\"\[PartialD]\"\>", "_"], "r"], "[", "a", "]"}],
        $CellContext`tuDDown["\[PartialD]"][$CellContext`a, $CellContext`r],
        Editable->False,
        SyntaxForm->Automatic]}], "r"], "+", 
     InterpretationBox[
      RowBox[{
       SubscriptBox[
        UnderscriptBox["\<\"\[PartialD]\"\>", "_"], 
        RowBox[{"{", 
         RowBox[{"r", ",", "r"}], "}"}]], "[", "a", "]"}],
      $CellContext`tuDDown[
      "\[PartialD]"][$CellContext`a, {$CellContext`r, $CellContext`r}],
      Editable->False,
      SyntaxForm->Automatic]}]}], "\[InvisibleSpace]", 
   StyleBox["\<\"Since taking the expression \"\>",
    StripOnInput->False,
    LineColor->RGBColor[0.7, 0, 1],
    LineOpacity->1,
    FrontFaceColor->RGBColor[0.7, 0, 1],
    BackFaceColor->RGBColor[0.7, 0, 1],
    FrontFaceOpacity->1,
    BackFaceOpacity->1,
    GraphicsColor->RGBColor[0.7, 0, 1],
    Opacity->1,
    FontSize->Larger,
    FontColor->RGBColor[0.7, 0, 1],
    FontOpacity->1], "\[InvisibleSpace]", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", 
        SuperscriptBox["m", "2"]}], "+", 
       SuperscriptBox[
        InterpretationBox[
         RowBox[{
          SubscriptBox[
           UnderscriptBox["\<\"\[Del]\"\>", "_"], "x"], "[", "_", "]"}],
         $CellContext`tuDDown["\[Del]"][
          Blank[], $CellContext`x],
         Editable->False,
         SyntaxForm->Automatic], "2"]}], ")"}], "[", 
     RowBox[{"G", "[", 
      RowBox[{"P", "[", 
       RowBox[{"X", ",", "Y"}], "]"}], "]"}], "]"}], "\[Rule]", "0"}], 
   "\[InvisibleSpace]", 
   StyleBox["\<\"\\n\[RightArrow] \"\>",
    StripOnInput->False,
    LineColor->RGBColor[0.7, 0, 1],
    LineOpacity->1,
    FrontFaceColor->RGBColor[0.7, 0, 1],
    BackFaceColor->RGBColor[0.7, 0, 1],
    FrontFaceOpacity->1,
    BackFaceOpacity->1,
    GraphicsColor->RGBColor[0.7, 0, 1],
    Opacity->1,
    FontSize->Larger,
    FontWeight->Bold,
    FontColor->RGBColor[0.7, 0, 1],
    FontOpacity->1], "\[InvisibleSpace]", 
   RowBox[{
    RowBox[{
     RowBox[{"-", 
      RowBox[{
       SuperscriptBox["m", "2"], ".", 
       RowBox[{"G", "[", 
        RowBox[{"P", "[", 
         RowBox[{"X", ",", "Y"}], "]"}], "]"}]}]}], "-", 
     RowBox[{
      FractionBox["1", "r"], ".", 
      InterpretationBox[
       RowBox[{
        SubscriptBox[
         UnderscriptBox["\<\"\[PartialD]\"\>", "_"], "r"], "[", 
        RowBox[{"G", "[", 
         RowBox[{"P", "[", 
          RowBox[{"X", ",", "Y"}], "]"}], "]"}], "]"}],
       $CellContext`tuDDown["\[PartialD]"][
        $CellContext`G[
         $CellContext`P[$CellContext`X, $CellContext`Y]], $CellContext`r],
       Editable->False,
       SyntaxForm->Automatic]}], "+", 
     RowBox[{"d", ".", 
      FractionBox["1", "r"], ".", 
      InterpretationBox[
       RowBox[{
        SubscriptBox[
         UnderscriptBox["\<\"\[PartialD]\"\>", "_"], "r"], "[", 
        RowBox[{"G", "[", 
         RowBox[{"P", "[", 
          RowBox[{"X", ",", "Y"}], "]"}], "]"}], "]"}],
       $CellContext`tuDDown["\[PartialD]"][
        $CellContext`G[
         $CellContext`P[$CellContext`X, $CellContext`Y]], $CellContext`r],
       Editable->False,
       SyntaxForm->Automatic]}], "+", 
     InterpretationBox[
      RowBox[{
       SubscriptBox[
        UnderscriptBox["\<\"\[PartialD]\"\>", "_"], 
        RowBox[{"{", 
         RowBox[{"r", ",", "r"}], "}"}]], "[", 
       RowBox[{"G", "[", 
        RowBox[{"P", "[", 
         RowBox[{"X", ",", "Y"}], "]"}], "]"}], "]"}],
      $CellContext`tuDDown["\[PartialD]"][
       $CellContext`G[
        $CellContext`P[$CellContext`X, $CellContext`Y]], {$CellContext`r, \
$CellContext`r}],
      Editable->False,
      SyntaxForm->Automatic]}], "\[Rule]", "0"}], "\[InvisibleSpace]", 
   StyleBox["\<\"\\n\"\>",
    StripOnInput->False,
    LineColor->RGBColor[0.7, 0, 1],
    LineOpacity->1,
    FrontFaceColor->RGBColor[0.7, 0, 1],
    BackFaceColor->RGBColor[0.7, 0, 1],
    FrontFaceOpacity->1,
    BackFaceOpacity->1,
    GraphicsColor->RGBColor[0.7, 0, 1],
    Opacity->1,
    FontSize->Larger,
    FontColor->RGBColor[0.7, 0, 1],
    FontOpacity->1], "\[InvisibleSpace]", 
   StyleBox["\<\"Putting this expression in terms of \"\>",
    StripOnInput->False,
    LineColor->RGBColor[0.7, 0, 1],
    LineOpacity->1,
    FrontFaceColor->RGBColor[0.7, 0, 1],
    BackFaceColor->RGBColor[0.7, 0, 1],
    FrontFaceOpacity->1,
    BackFaceOpacity->1,
    GraphicsColor->RGBColor[0.7, 0, 1],
    Opacity->1,
    FontSize->Larger,
    FontColor->RGBColor[0.7, 0, 1],
    FontOpacity->1], "\[InvisibleSpace]", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"P", "[", 
       RowBox[{"X", ",", "Y"}], "]"}], "\[Rule]", "P"}], "}"}], "[", 
    StyleBox["\<\"invariant length (spacetime?)\"\>",
     StripOnInput->False,
     LineColor->RGBColor[1, 0, 0],
     FrontFaceColor->RGBColor[1, 0, 0],
     BackFaceColor->RGBColor[1, 0, 0],
     GraphicsColor->RGBColor[1, 0, 0],
     FontFamily->"Helvetica",
     FontColor->RGBColor[1, 0, 0]], "]"}], "\[InvisibleSpace]", 
   StyleBox["\<\"\\n\[RightArrow] \"\>",
    StripOnInput->False,
    LineColor->RGBColor[0.7, 0, 1],
    LineOpacity->1,
    FrontFaceColor->RGBColor[0.7, 0, 1],
    BackFaceColor->RGBColor[0.7, 0, 1],
    FrontFaceOpacity->1,
    BackFaceOpacity->1,
    GraphicsColor->RGBColor[0.7, 0, 1],
    Opacity->1,
    FontSize->Larger,
    FontWeight->Bold,
    FontColor->RGBColor[0.7, 0, 1],
    FontOpacity->1], "\[InvisibleSpace]", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"-", 
       SuperscriptBox["m", "2"]}], " ", 
      RowBox[{"G", "[", "P", "]"}]}], "+", 
     FractionBox[
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "d"}], ")"}], " ", 
       InterpretationBox[
        RowBox[{
         SubscriptBox[
          UnderscriptBox["\<\"\[PartialD]\"\>", "_"], "P"], "[", 
         RowBox[{"G", "[", "P", "]"}], "]"}],
        $CellContext`tuDDown["\[PartialD]"][
         $CellContext`G[$CellContext`P], $CellContext`P],
        Editable->False,
        SyntaxForm->Automatic]}], "P"], "+", 
     InterpretationBox[
      RowBox[{
       SubscriptBox[
        UnderscriptBox["\<\"\[PartialD]\"\>", "_"], "P"], "[", 
       InterpretationBox[
        RowBox[{
         SubscriptBox[
          UnderscriptBox["\<\"\[PartialD]\"\>", "_"], "P"], "[", 
         RowBox[{"G", "[", "P", "]"}], "]"}],
        $CellContext`tuDDown["\[PartialD]"][
         $CellContext`G[$CellContext`P], $CellContext`P],
        Editable->False,
        SyntaxForm->Automatic], "]"}],
      $CellContext`tuDDown["\[PartialD]"][
       $CellContext`tuDDown["\[PartialD]"][
        $CellContext`G[$CellContext`P], $CellContext`P], $CellContext`P],
      Editable->False,
      SyntaxForm->Automatic]}], "\[Rule]", "0"}], "\[InvisibleSpace]", 
   StyleBox["\<\"This is different from e[37] by the \
(1-\\!\\(\\*SuperscriptBox[\\(P\\), \\(2\\)]\\)) and (d-1) factors\"\>",
    StripOnInput->False,
    LineColor->RGBColor[1, 0, 0],
    FrontFaceColor->RGBColor[1, 0, 0],
    BackFaceColor->RGBColor[1, 0, 0],
    GraphicsColor->RGBColor[1, 0, 0],
    FontFamily->"Helvetica",
    FontColor->RGBColor[1, 0, 0]], "\[InvisibleSpace]", 
   StyleBox["\<\"\\n\"\>",
    StripOnInput->False,
    LineColor->RGBColor[0.7, 0, 1],
    LineOpacity->1,
    FrontFaceColor->RGBColor[0.7, 0, 1],
    BackFaceColor->RGBColor[0.7, 0, 1],
    FrontFaceOpacity->1,
    BackFaceOpacity->1,
    GraphicsColor->RGBColor[0.7, 0, 1],
    Opacity->1,
    FontSize->Larger,
    FontColor->RGBColor[0.7, 0, 1],
    FontOpacity->1], "\[InvisibleSpace]", 
   StyleBox["\<\"The transform \"\>",
    StripOnInput->False,
    LineColor->RGBColor[0.7, 0, 1],
    LineOpacity->1,
    FrontFaceColor->RGBColor[0.7, 0, 1],
    BackFaceColor->RGBColor[0.7, 0, 1],
    FrontFaceOpacity->1,
    BackFaceOpacity->1,
    GraphicsColor->RGBColor[0.7, 0, 1],
    Opacity->1,
    FontSize->Larger,
    FontColor->RGBColor[0.7, 0, 1],
    FontOpacity->1], "\[InvisibleSpace]", 
   RowBox[{"z", "\[Rule]", 
    FractionBox[
     RowBox[{"1", "+", "P"}], "2"]}], "\[InvisibleSpace]", 
   StyleBox["\<\"\\n\[RightArrow] \"\>",
    StripOnInput->False,
    LineColor->RGBColor[0.7, 0, 1],
    LineOpacity->1,
    FrontFaceColor->RGBColor[0.7, 0, 1],
    BackFaceColor->RGBColor[0.7, 0, 1],
    FrontFaceOpacity->1,
    BackFaceOpacity->1,
    GraphicsColor->RGBColor[0.7, 0, 1],
    Opacity->1,
    FontSize->Larger,
    FontWeight->Bold,
    FontColor->RGBColor[0.7, 0, 1],
    FontOpacity->1], "\[InvisibleSpace]", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"-", "G"}], " ", 
      SuperscriptBox["m", "2"]}], "+", 
     FractionBox[
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "d"}], ")"}], " ", 
       InterpretationBox[
        RowBox[{
         SubscriptBox[
          UnderscriptBox["\<\"\[PartialD]\"\>", "_"], "z"], "[", "G", "]"}],
        $CellContext`tuDDown["\[PartialD]"][$CellContext`G, $CellContext`z],
        Editable->False,
        SyntaxForm->Automatic]}], 
      RowBox[{
       RowBox[{"-", "2"}], "+", 
       RowBox[{"4", " ", "z"}]}]], "+", 
     RowBox[{
      FractionBox["1", "4"], " ", 
      InterpretationBox[
       RowBox[{
        SubscriptBox[
         UnderscriptBox["\<\"\[PartialD]\"\>", "_"], "z"], "[", 
        InterpretationBox[
         RowBox[{
          SubscriptBox[
           UnderscriptBox["\<\"\[PartialD]\"\>", "_"], "z"], "[", "G", "]"}],
         $CellContext`tuDDown["\[PartialD]"][$CellContext`G, $CellContext`z],
         Editable->False,
         SyntaxForm->Automatic], "]"}],
       $CellContext`tuDDown["\[PartialD]"][
        $CellContext`tuDDown[
        "\[PartialD]"][$CellContext`G, $CellContext`z], $CellContext`z],
       Editable->False,
       SyntaxForm->Automatic]}]}], "\[Rule]", "0"}], "\[InvisibleSpace]", 
   StyleBox["\<\"Not e[38]\"\>",
    StripOnInput->False,
    LineColor->RGBColor[1, 0, 0],
    FrontFaceColor->RGBColor[1, 0, 0],
    BackFaceColor->RGBColor[1, 0, 0],
    GraphicsColor->RGBColor[1, 0, 0],
    FontFamily->"Helvetica",
    FontColor->RGBColor[1, 0, 0]], "\[InvisibleSpace]", 
   StyleBox["\<\"\\n\[RightArrow] \"\>",
    StripOnInput->False,
    LineColor->RGBColor[0.7, 0, 1],
    LineOpacity->1,
    FrontFaceColor->RGBColor[0.7, 0, 1],
    BackFaceColor->RGBColor[0.7, 0, 1],
    FrontFaceOpacity->1,
    BackFaceOpacity->1,
    GraphicsColor->RGBColor[0.7, 0, 1],
    Opacity->1,
    FontSize->Larger,
    FontWeight->Bold,
    FontColor->RGBColor[0.7, 0, 1],
    FontOpacity->1], "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{"G", "\[Rule]", 
      RowBox[{
       StyleBox["\<\"\[Sum]\"\>",
        StripOnInput->False,
        LineColor->RGBColor[0.7, 0, 1],
        LineOpacity->1,
        FrontFaceColor->RGBColor[0.7, 0, 1],
        BackFaceColor->RGBColor[0.7, 0, 1],
        FrontFaceOpacity->1,
        BackFaceOpacity->1,
        GraphicsColor->RGBColor[0.7, 0, 1],
        Opacity->1,
        FontColor->RGBColor[0.7, 0, 1],
        FontOpacity->1], "[", 
       TagBox[GridBox[{
          {
           RowBox[{
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", 
               RowBox[{"2", " ", "z"}]}], ")"}], 
             FractionBox[
              RowBox[{"2", "-", "d"}], "2"]], " ", 
            RowBox[{"BesselJ", "[", 
             RowBox[{
              RowBox[{
               FractionBox["1", "2"], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "2"}], "+", "d"}], ")"}]}], ",", 
              RowBox[{
               RowBox[{"\[ImaginaryI]", " ", "m"}], "-", 
               RowBox[{"2", " ", "\[ImaginaryI]", " ", "m", " ", "z"}]}]}], 
             "]"}], " ", 
            RowBox[{"C", "[", "1", "]"}]}]},
          {
           RowBox[{
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", 
               RowBox[{"2", " ", "z"}]}], ")"}], 
             FractionBox[
              RowBox[{"2", "-", "d"}], "2"]], " ", 
            RowBox[{"BesselY", "[", 
             RowBox[{
              RowBox[{
               FractionBox["1", "2"], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "2"}], "+", "d"}], ")"}]}], ",", 
              RowBox[{
               RowBox[{"\[ImaginaryI]", " ", "m"}], "-", 
               RowBox[{"2", " ", "\[ImaginaryI]", " ", "m", " ", "z"}]}]}], 
             "]"}], " ", 
            RowBox[{"C", "[", "2", "]"}]}]}
         },
         AutoDelete->False,
         FrameStyle->Directive[
           RGBColor[0.7, 0, 1, 1], 
           Thickness[Tiny]],
         GridBoxAlignment->{"Columns" -> {{Left}}},
         GridBoxDividers->{"Columns" -> {True}, "Rows" -> {False}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
        "Grid"], "]"}]}], "}"}], "}"}]}],
  SequenceForm[
   Style["The d-dim spherically symmetric Laplacian is different from dS \
Laplacian!!", 
    RGBColor[0, 0, 1], FontFamily -> "Helvetica"], 
   Style["\n", 
    RGBColor[0.7, 0, 1, 1], Larger], 
   Style["The ", 
    RGBColor[0.7, 0, 1, 1], Larger], 
   {$CellContext`tuDDown["\[Del]"][
      Blank[], $CellContext`x]^2}[
    Style["Laplacian on \!\(\*SubscriptBox[\(dS\), \(d\)]\)", 
     RGBColor[0, 
      Rational[2, 3], 0], FontFamily -> "Helvetica"]], 
   Style["must be different from the standard d-dim spherically symmetric \
Laplacian ", 
    RGBColor[1, 0.5, 0], FontFamily -> 
    "Helvetica"], $CellContext`tuDDown["\[Del]"][
      Pattern[$CellContext`a, 
       Blank[]], $CellContext`x]^2 -> (-1 + $CellContext`d) \
$CellContext`r^(-1) $CellContext`tuDDown[
      "\[PartialD]"][$CellContext`a, $CellContext`r] + $CellContext`tuDDown[
     "\[PartialD]"][$CellContext`a, {$CellContext`r, $CellContext`r}], 
   Style["Since taking the expression ", 
    RGBColor[0.7, 0, 1, 1], 
    Larger], (-$CellContext`m^2 + $CellContext`tuDDown["\[Del]"][
       Blank[], $CellContext`x]^2)[
     $CellContext`G[
      $CellContext`P[$CellContext`X, $CellContext`Y]]] -> 0, 
   Style["\n\[RightArrow] ", Bold, Larger, 
    RGBColor[0.7, 0, 1, 1]], -Dot[$CellContext`m^2, 
       $CellContext`G[
        $CellContext`P[$CellContext`X, $CellContext`Y]]] - 
    Dot[$CellContext`r^(-1), 
     $CellContext`tuDDown["\[PartialD]"][
      $CellContext`G[
       $CellContext`P[$CellContext`X, $CellContext`Y]], $CellContext`r]] + 
    Dot[$CellContext`d, $CellContext`r^(-1), 
      $CellContext`tuDDown["\[PartialD]"][
       $CellContext`G[
        $CellContext`P[$CellContext`X, $CellContext`Y]], $CellContext`r]] + \
$CellContext`tuDDown["\[PartialD]"][
      $CellContext`G[
       $CellContext`P[$CellContext`X, $CellContext`Y]], {$CellContext`r, \
$CellContext`r}] -> 0, 
   Style["\n", 
    RGBColor[0.7, 0, 1, 1], Larger], 
   Style["Putting this expression in terms of ", 
    RGBColor[0.7, 0, 1, 1], Larger], 
   {$CellContext`P[$CellContext`X, $CellContext`Y] -> $CellContext`P}[
    Style["invariant length (spacetime?)", 
     RGBColor[1, 0, 0], FontFamily -> "Helvetica"]], 
   Style["\n\[RightArrow] ", Bold, Larger, 
    RGBColor[
    0.7, 0, 1, 
     1]], -$CellContext`m^2 $CellContext`G[$CellContext`P] + (-1 + \
$CellContext`d) $CellContext`P^(-1) $CellContext`tuDDown["\[PartialD]"][
       $CellContext`G[$CellContext`P], $CellContext`P] + $CellContext`tuDDown[
     "\[PartialD]"][
      $CellContext`tuDDown["\[PartialD]"][
       $CellContext`G[$CellContext`P], $CellContext`P], $CellContext`P] -> 0, 
   
   Style["This is different from e[37] by the (1-\!\(\*SuperscriptBox[\(P\), \
\(2\)]\)) and (d-1) factors", 
    RGBColor[1, 0, 0], FontFamily -> "Helvetica"], 
   Style["\n", 
    RGBColor[0.7, 0, 1, 1], Larger], 
   Style["The transform ", 
    RGBColor[0.7, 0, 1, 1], Larger], $CellContext`z -> 
   Rational[1, 2] (1 + $CellContext`P), 
   Style["\n\[RightArrow] ", Bold, Larger, 
    RGBColor[
    0.7, 0, 1, 
     1]], -$CellContext`G $CellContext`m^2 + (-1 + $CellContext`d) (-2 + 
       4 $CellContext`z)^(-1) $CellContext`tuDDown[
      "\[PartialD]"][$CellContext`G, $CellContext`z] + 
    Rational[1, 4] $CellContext`tuDDown["\[PartialD]"][
       $CellContext`tuDDown[
       "\[PartialD]"][$CellContext`G, $CellContext`z], $CellContext`z] -> 0, 
   Style["Not e[38]", 
    RGBColor[1, 0, 0], FontFamily -> "Helvetica"], 
   Style["\n\[RightArrow] ", Bold, Larger, 
    RGBColor[0.7, 0, 1, 1]], {{$CellContext`G -> Style["\[Sum]", 
       RGBColor[0.7, 0, 1, 1]][
       Grid[{{(-1 + 2 $CellContext`z)^(Rational[1, 2] (2 - $CellContext`d)) 
          BesselJ[Rational[1, 2] (-2 + $CellContext`d), 
            Complex[0, 1] $CellContext`m + 
            Complex[0, -2] $CellContext`m $CellContext`z] 
          C[1]}, {(-1 + 2 $CellContext`z)^(
            Rational[1, 2] (2 - $CellContext`d)) 
          BesselY[Rational[1, 2] (-2 + $CellContext`d), 
            Complex[0, 1] $CellContext`m + 
            Complex[0, -2] $CellContext`m $CellContext`z] C[2]}}, 
        Dividers -> {{True}, {False}}, FrameStyle -> Directive[
          RGBColor[0.7, 0, 1, 1], 
          Thickness[Tiny]], Alignment -> Left]]}}],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.806070663132703*^9, {3.806070763271552*^9, 3.806070815922988*^9}, 
   3.8060708716483183`*^9, {3.806070928529155*^9, 3.806070948712666*^9}, 
   3.806071027804482*^9, {3.806071426273087*^9, 3.806071458696617*^9}, 
   3.806071508176539*^9, 3.806071634048229*^9, 3.8060719160892076`*^9, {
   3.8060720407808857`*^9, 3.806072058394981*^9}, {3.80607211951855*^9, 
   3.8060721515820427`*^9}, 3.806072212148193*^9, {3.806073105785531*^9, 
   3.806073115134078*^9}, {3.806073369944137*^9, 3.8060734001738987`*^9}, 
   3.8060734959123373`*^9, {3.806074116240388*^9, 3.806074198850806*^9}, {
   3.806074236341317*^9, 3.806074358280061*^9}, {3.806074441768367*^9, 
   3.8060744692904997`*^9}, 3.806078618202384*^9, {3.8060786616957493`*^9, 
   3.806078701397211*^9}, 3.806080803853904*^9, 3.806171599596167*^9, 
   3.806240514277742*^9, 3.806240621084147*^9, {3.8062409117879467`*^9, 
   3.8062409289962263`*^9}, 3.806676123754881*^9, 
   3.808052928478058*^9},ExpressionUUID->"0d01f5d6-f2c5-4834-ae79-\
f33f19f39d2c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PR", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
   "CB", "[", "\"\<Even Wiki's arbitrary n-dim curvilinear coordinate \>\"", 
    "]"}], "\[IndentingNewLine]", ",", 
   RowBox[{"$c", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"T", "[", 
       RowBox[{"\[Xi]", ",", "\"\<u\>\"", ",", 
        RowBox[{"{", "i", "}"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "\[Ellipsis]", ",", "n"}], "}"}]}], "}"}]}], 
     "]"}]}], "\[IndentingNewLine]", ",", "Yield", ",", 
   RowBox[{"$0", "=", 
    RowBox[{"\[CapitalDelta]", "\[Rule]", 
     RowBox[{
      RowBox[{"1", "/", 
       RowBox[{"Sqrt", "[", 
        RowBox[{"-", "detg"}], "]"}]}], " ", 
      RowBox[{"tuDPartial", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Sqrt", "[", 
          RowBox[{"-", "detg"}], "]"}], 
         RowBox[{"T", "[", 
          RowBox[{"g", ",", "\"\<uu\>\"", ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "j"}], "}"}]}], "]"}], 
         RowBox[{"tuDPartial", "[", 
          RowBox[{"_", ",", 
           RowBox[{"T", "[", 
            RowBox[{"\[Xi]", ",", "\"\<d\>\"", ",", 
             RowBox[{"{", "j", "}"}]}], "]"}]}], "]"}]}], ",", 
        RowBox[{"T", "[", 
         RowBox[{"\[Xi]", ",", "\"\<d\>\"", ",", 
          RowBox[{"{", "i", "}"}]}], "]"}]}], "]"}]}]}]}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", ",", "NL", ",", 
   "\"\<Using the proper time equation from the radial \
$metricSchwarzschildDeSitter \>\"", "\[IndentingNewLine]", ",", 
   RowBox[{
    RowBox[{"$m", "=", 
     RowBox[{
      RowBox[{"$metricSchwarzschildDeSitter", "//", 
       RowBox[{"tuRuleSelect", "[", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"d", "[", "s", "]"}], "2"], ",", 
         RowBox[{"{", "G", "}"}]}], "]"}]}], "//", "tuRule1"}]}], 
    "\[IndentingNewLine]", "\[IndentingNewLine]", ";", 
    RowBox[{"$m", "=", 
     RowBox[{"$m", "/.", 
      RowBox[{
       RowBox[{"xd", "[", "\[CapitalOmega]", "]"}], "\[Rule]", "0"}]}]}]}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", ",", "Imply", ",", 
   RowBox[{
    RowBox[{"$g", "=", 
     RowBox[{"tuMetricProperTime", "[", "$m", "]"}]}], "\[IndentingNewLine]", 
    ";", "Imply"}], ",", 
   RowBox[{"$", "=", 
    RowBox[{
     RowBox[{
      RowBox[{"$0", "[", 
       RowBox[{"[", "2", "]"}], "]"}], "//", 
      RowBox[{"tuIndexSumTerm", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"i", ",", "j"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"r", ",", "t"}], "}"}]}], "]"}]}], "//", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"#", "/.", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"T", "[", 
           RowBox[{"\[Xi]", ",", "\"\<d\>\"", ",", 
            RowBox[{"{", "a_", "}"}]}], "]"}], "\[Rule]", "a"}], "}"}]}], 
       "&"}], ")"}]}]}], "\[IndentingNewLine]", ",", "Yield", ",", 
   RowBox[{
    RowBox[{"$", "=", 
     RowBox[{"$", "/.", "$g"}]}], "\[IndentingNewLine]", ";", "Yield"}], ",", 
   
   RowBox[{
    RowBox[{"$", "=", 
     RowBox[{
      RowBox[{"$0", "[", 
       RowBox[{"[", "1", "]"}], "]"}], "\[Rule]", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"$", "//", 
         RowBox[{"tuDerivativeExpand", "[", 
          RowBox[{"{", 
           RowBox[{"G", ",", "M", ",", "\[CapitalLambda]"}], "}"}], "]"}]}], "//", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"#", "/.", 
            RowBox[{"M", "\[Rule]", "0"}]}], "/.", 
           RowBox[{
            RowBox[{"tuDPartial", "[", 
             RowBox[{"r", ",", "t"}], "]"}], "\[Rule]", "0"}]}], "&"}], 
         ")"}]}], ")"}]}]}], "\[IndentingNewLine]", ";", "Yield"}], ",", 
   RowBox[{"$", "=", 
    RowBox[{"$", "//", 
     RowBox[{
      RowBox[{"Collect", "[", 
       RowBox[{"#", ",", 
        RowBox[{"tuDPartial", "[", 
         RowBox[{"_", ",", "_"}], "]"}], ",", "Simplify"}], "]"}], "&"}]}]}], 
   "\[IndentingNewLine]", ",", "NL", ",", 
   RowBox[{"CR", "[", "\"\<This is not e[39] with m\[Rule]0\>\"", "]"}], 
   "\[IndentingNewLine]", ",", "NL", ",", "\"\<Let \>\"", ",", 
   RowBox[{"$s", "=", 
    RowBox[{"\[CapitalLambda]", "\[Rule]", "0"}]}], "\[IndentingNewLine]", 
   ",", "Yield", ",", 
   RowBox[{"$", "=", 
    RowBox[{"$", "/.", "$s"}]}]}], "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.806150450856288*^9, 3.8061507748746347`*^9}, {
   3.806151951509611*^9, 3.806151999975265*^9}, {3.806152031998705*^9, 
   3.8061520450330467`*^9}, {3.806152092160591*^9, 3.806152366570415*^9}, {
   3.8061524066421213`*^9, 3.806152571316472*^9}, {3.80615267594454*^9, 
   3.806152713755188*^9}, {3.806152744883284*^9, 3.806152749746236*^9}, {
   3.806152784554854*^9, 3.806152829429082*^9}, {3.806152872727297*^9, 
   3.80615292762796*^9}, {3.806152959776849*^9, 3.8061529781463137`*^9}, {
   3.806153047393137*^9, 3.806153052405218*^9}, {3.806153109086541*^9, 
   3.806153199644175*^9}, {3.806153310977498*^9, 3.806153315099148*^9}, {
   3.806153362552361*^9, 3.80615337378097*^9}, {3.806153799490589*^9, 
   3.8061538505802193`*^9}, {3.806153890104287*^9, 3.806153958741234*^9}, {
   3.806154006278311*^9, 3.806154089788117*^9}, {3.8061541299867773`*^9, 
   3.806154137110716*^9}, {3.806154173994116*^9, 3.80615421020571*^9}, {
   3.806154295800639*^9, 3.806154325477181*^9}, {3.806154433986416*^9, 
   3.806154434510108*^9}, {3.8061549778481827`*^9, 3.806154993303574*^9}, {
   3.806157710080246*^9, 3.8061577302561607`*^9}, {3.8062409989744177`*^9, 
   3.806241033670589*^9}, {3.80624108355138*^9, 3.8062410885367727`*^9}, 
   3.806241132577896*^9, {3.806327616884489*^9, 3.806327624609136*^9}, {
   3.806327674372902*^9, 3.806327675285532*^9}, {3.80632786627201*^9, 
   3.806327868308649*^9}, {3.8063279611124077`*^9, 3.806327961927433*^9}, {
   3.80632802517196*^9, 3.8063280349729843`*^9}, {3.806328685009644*^9, 
   3.806328685557756*^9}, {3.806328722826145*^9, 3.806328763849119*^9}, {
   3.8063321849889936`*^9, 3.806332217322665*^9}, {3.8063322651437483`*^9, 
   3.806332298867139*^9}},ExpressionUUID->"c8a72f8a-51df-4fb8-9df4-\
eec071247409"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   StyleBox["\<\"Even Wiki's arbitrary n-dim curvilinear coordinate \"\>",
    StripOnInput->False,
    LineColor->RGBColor[0, 0, 1],
    FrontFaceColor->RGBColor[0, 0, 1],
    BackFaceColor->RGBColor[0, 0, 1],
    GraphicsColor->RGBColor[0, 0, 1],
    FontFamily->"Helvetica",
    FontColor->RGBColor[0, 0, 1]], "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
     InterpretationBox[
      SubsuperscriptBox["\[Xi]", 
       StyleBox["1",
        StripOnInput->False,
        ShowContents->False], "1"],
      $CellContext`Tensor[$CellContext`\[Xi], {1}, {$CellContext`Void}],
      BaseStyle->{AutoMultiplicationSymbol -> False},
      Editable->False], ",", 
     InterpretationBox[
      SubsuperscriptBox["\[Xi]", 
       StyleBox["\[Ellipsis]",
        StripOnInput->False,
        ShowContents->False], "\[Ellipsis]"],
      $CellContext`Tensor[$CellContext`\[Xi], {$CellContext`\[Ellipsis]}, \
{$CellContext`Void}],
      BaseStyle->{AutoMultiplicationSymbol -> False},
      Editable->False], ",", 
     InterpretationBox[
      SubsuperscriptBox["\[Xi]", 
       StyleBox["n",
        StripOnInput->False,
        ShowContents->False], "n"],
      $CellContext`Tensor[$CellContext`\[Xi], {$CellContext`n}, \
{$CellContext`Void}],
      BaseStyle->{AutoMultiplicationSymbol -> False},
      Editable->False]}], "}"}], "\[InvisibleSpace]", 
   StyleBox["\<\"\\n\[RightArrow] \"\>",
    StripOnInput->False,
    LineColor->RGBColor[0.7, 0, 1],
    LineOpacity->1,
    FrontFaceColor->RGBColor[0.7, 0, 1],
    BackFaceColor->RGBColor[0.7, 0, 1],
    FrontFaceOpacity->1,
    BackFaceOpacity->1,
    GraphicsColor->RGBColor[0.7, 0, 1],
    Opacity->1,
    FontSize->Larger,
    FontWeight->Bold,
    FontColor->RGBColor[0.7, 0, 1],
    FontOpacity->1], "\[InvisibleSpace]", 
   RowBox[{"\[CapitalDelta]", "\[Rule]", 
    FractionBox[
     InterpretationBox[
      RowBox[{
       SubscriptBox[
        UnderscriptBox["\<\"\[PartialD]\"\>", "_"], 
        InterpretationBox[
         SubsuperscriptBox["\[Xi]", "i", 
          StyleBox["i",
           StripOnInput->False,
           ShowContents->False]],
         $CellContext`Tensor[$CellContext`\[Xi], {$CellContext`Void}, \
{$CellContext`i}],
         BaseStyle->{AutoMultiplicationSymbol -> False},
         Editable->False]], "[", 
       RowBox[{
        SqrtBox[
         RowBox[{"-", "detg"}]], " ", 
        InterpretationBox[
         SubsuperscriptBox["g", 
          StyleBox[
           RowBox[{"i", "j"}],
           StripOnInput->False,
           ShowContents->False], 
          RowBox[{"i", "j"}]],
         $CellContext`Tensor[$CellContext`g, {$CellContext`i, \
$CellContext`j}, {$CellContext`Void, $CellContext`Void}],
         BaseStyle->{AutoMultiplicationSymbol -> False},
         Editable->False], " ", 
        InterpretationBox[
         RowBox[{
          SubscriptBox[
           UnderscriptBox["\<\"\[PartialD]\"\>", "_"], 
           InterpretationBox[
            SubsuperscriptBox["\[Xi]", "j", 
             StyleBox["j",
              StripOnInput->False,
              ShowContents->False]],
            $CellContext`Tensor[$CellContext`\[Xi], {$CellContext`Void}, \
{$CellContext`j}],
            BaseStyle->{AutoMultiplicationSymbol -> False},
            Editable->False]], "[", "_", "]"}],
         $CellContext`tuDDown["\[PartialD]"][
          Blank[], 
          $CellContext`Tensor[$CellContext`\[Xi], {$CellContext`Void}, \
{$CellContext`j}]],
         Editable->False,
         SyntaxForm->Automatic]}], "]"}],
      $CellContext`tuDDown[
      "\[PartialD]"][(-$CellContext`detg)^
        Rational[
         1, 2] $CellContext`Tensor[$CellContext`g, {$CellContext`i, \
$CellContext`j}, {$CellContext`Void, $CellContext`Void}] $CellContext`tuDDown[
        "\[PartialD]"][
         Blank[], 
         $CellContext`Tensor[$CellContext`\[Xi], {$CellContext`Void}, \
{$CellContext`j}]], 
       $CellContext`Tensor[$CellContext`\[Xi], {$CellContext`Void}, \
{$CellContext`i}]],
      Editable->False,
      SyntaxForm->Automatic], 
     SqrtBox[
      RowBox[{"-", "detg"}]]]}], "\[InvisibleSpace]", 
   StyleBox["\<\"\\n\"\>",
    StripOnInput->False,
    LineColor->RGBColor[0.7, 0, 1],
    LineOpacity->1,
    FrontFaceColor->RGBColor[0.7, 0, 1],
    BackFaceColor->RGBColor[0.7, 0, 1],
    FrontFaceOpacity->1,
    BackFaceOpacity->1,
    GraphicsColor->RGBColor[0.7, 0, 1],
    Opacity->1,
    FontSize->Larger,
    FontColor->RGBColor[0.7, 0, 1],
    FontOpacity->1], "\[InvisibleSpace]", 
   StyleBox["\<\"Using the proper time equation from the radial \
$metricSchwarzschildDeSitter \"\>",
    StripOnInput->False,
    LineColor->RGBColor[0.7, 0, 1],
    LineOpacity->1,
    FrontFaceColor->RGBColor[0.7, 0, 1],
    BackFaceColor->RGBColor[0.7, 0, 1],
    FrontFaceOpacity->1,
    BackFaceOpacity->1,
    GraphicsColor->RGBColor[0.7, 0, 1],
    Opacity->1,
    FontSize->Larger,
    FontColor->RGBColor[0.7, 0, 1],
    FontOpacity->1], "\[InvisibleSpace]", 
   RowBox[{
    SuperscriptBox[
     RowBox[{"d", "[", "s", "]"}], "2"], "\[Rule]", 
    RowBox[{
     FractionBox[
      SuperscriptBox[
       RowBox[{"d", "[", "r", "]"}], "2"], 
      RowBox[{"1", "-", 
       FractionBox[
        RowBox[{"2", " ", "G", " ", "M"}], "r"], "-", 
       FractionBox[
        RowBox[{
         SuperscriptBox["r", "2"], " ", "\[CapitalLambda]"}], "3"]}]], "+", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        FractionBox[
         RowBox[{"2", " ", "G", " ", "M"}], "r"], "+", 
        FractionBox[
         RowBox[{
          SuperscriptBox["r", "2"], " ", "\[CapitalLambda]"}], "3"]}], ")"}], 
      " ", 
      SuperscriptBox[
       RowBox[{"d", "[", "t", "]"}], "2"]}], "+", 
     RowBox[{
      SuperscriptBox["r", "2"], " ", 
      SuperscriptBox[
       RowBox[{"d", "[", "\[CapitalOmega]", "]"}], "2"]}]}]}], 
   "\[InvisibleSpace]", 
   StyleBox["\<\"\\n\[Implies] \"\>",
    StripOnInput->False,
    LineColor->RGBColor[0.7, 0, 1],
    LineOpacity->1,
    FrontFaceColor->RGBColor[0.7, 0, 1],
    BackFaceColor->RGBColor[0.7, 0, 1],
    FrontFaceOpacity->1,
    BackFaceOpacity->1,
    GraphicsColor->RGBColor[0.7, 0, 1],
    Opacity->1,
    FontSize->Larger,
    FontWeight->Bold,
    FontColor->RGBColor[0.7, 0, 1],
    FontOpacity->1], "\[InvisibleSpace]", 
   StyleBox["\<\"\\n\[Implies] \"\>",
    StripOnInput->False,
    LineColor->RGBColor[0.7, 0, 1],
    LineOpacity->1,
    FrontFaceColor->RGBColor[0.7, 0, 1],
    BackFaceColor->RGBColor[0.7, 0, 1],
    FrontFaceOpacity->1,
    BackFaceOpacity->1,
    GraphicsColor->RGBColor[0.7, 0, 1],
    Opacity->1,
    FontSize->Larger,
    FontWeight->Bold,
    FontColor->RGBColor[0.7, 0, 1],
    FontOpacity->1], "\[InvisibleSpace]", 
   RowBox[{
    FractionBox[
     InterpretationBox[
      RowBox[{
       SubscriptBox[
        UnderscriptBox["\<\"\[PartialD]\"\>", "_"], "r"], "[", 
       RowBox[{
        SqrtBox[
         RowBox[{"-", "detg"}]], " ", 
        InterpretationBox[
         SubsuperscriptBox["g", 
          StyleBox[
           RowBox[{"r", "r"}],
           StripOnInput->False,
           ShowContents->False], 
          RowBox[{"r", "r"}]],
         $CellContext`Tensor[$CellContext`g, {$CellContext`r, \
$CellContext`r}, {$CellContext`Void, $CellContext`Void}],
         BaseStyle->{AutoMultiplicationSymbol -> False},
         Editable->False], " ", 
        InterpretationBox[
         RowBox[{
          SubscriptBox[
           UnderscriptBox["\<\"\[PartialD]\"\>", "_"], "r"], "[", "_", "]"}],
         $CellContext`tuDDown["\[PartialD]"][
          Blank[], $CellContext`r],
         Editable->False,
         SyntaxForm->Automatic]}], "]"}],
      $CellContext`tuDDown[
      "\[PartialD]"][(-$CellContext`detg)^
        Rational[
         1, 2] $CellContext`Tensor[$CellContext`g, {$CellContext`r, \
$CellContext`r}, {$CellContext`Void, $CellContext`Void}] $CellContext`tuDDown[
        "\[PartialD]"][
         Blank[], $CellContext`r], $CellContext`r],
      Editable->False,
      SyntaxForm->Automatic], 
     SqrtBox[
      RowBox[{"-", "detg"}]]], "+", 
    FractionBox[
     InterpretationBox[
      RowBox[{
       SubscriptBox[
        UnderscriptBox["\<\"\[PartialD]\"\>", "_"], "t"], "[", 
       RowBox[{
        SqrtBox[
         RowBox[{"-", "detg"}]], " ", 
        InterpretationBox[
         SubsuperscriptBox["g", 
          StyleBox[
           RowBox[{"t", "r"}],
           StripOnInput->False,
           ShowContents->False], 
          RowBox[{"t", "r"}]],
         $CellContext`Tensor[$CellContext`g, {$CellContext`t, \
$CellContext`r}, {$CellContext`Void, $CellContext`Void}],
         BaseStyle->{AutoMultiplicationSymbol -> False},
         Editable->False], " ", 
        InterpretationBox[
         RowBox[{
          SubscriptBox[
           UnderscriptBox["\<\"\[PartialD]\"\>", "_"], "r"], "[", "_", "]"}],
         $CellContext`tuDDown["\[PartialD]"][
          Blank[], $CellContext`r],
         Editable->False,
         SyntaxForm->Automatic]}], "]"}],
      $CellContext`tuDDown[
      "\[PartialD]"][(-$CellContext`detg)^
        Rational[
         1, 2] $CellContext`Tensor[$CellContext`g, {$CellContext`t, \
$CellContext`r}, {$CellContext`Void, $CellContext`Void}] $CellContext`tuDDown[
        "\[PartialD]"][
         Blank[], $CellContext`r], $CellContext`t],
      Editable->False,
      SyntaxForm->Automatic], 
     SqrtBox[
      RowBox[{"-", "detg"}]]], "+", 
    FractionBox[
     InterpretationBox[
      RowBox[{
       SubscriptBox[
        UnderscriptBox["\<\"\[PartialD]\"\>", "_"], "r"], "[", 
       RowBox[{
        SqrtBox[
         RowBox[{"-", "detg"}]], " ", 
        InterpretationBox[
         SubsuperscriptBox["g", 
          StyleBox[
           RowBox[{"r", "t"}],
           StripOnInput->False,
           ShowContents->False], 
          RowBox[{"r", "t"}]],
         $CellContext`Tensor[$CellContext`g, {$CellContext`r, \
$CellContext`t}, {$CellContext`Void, $CellContext`Void}],
         BaseStyle->{AutoMultiplicationSymbol -> False},
         Editable->False], " ", 
        InterpretationBox[
         RowBox[{
          SubscriptBox[
           UnderscriptBox["\<\"\[PartialD]\"\>", "_"], "t"], "[", "_", "]"}],
         $CellContext`tuDDown["\[PartialD]"][
          Blank[], $CellContext`t],
         Editable->False,
         SyntaxForm->Automatic]}], "]"}],
      $CellContext`tuDDown[
      "\[PartialD]"][(-$CellContext`detg)^
        Rational[
         1, 2] $CellContext`Tensor[$CellContext`g, {$CellContext`r, \
$CellContext`t}, {$CellContext`Void, $CellContext`Void}] $CellContext`tuDDown[
        "\[PartialD]"][
         Blank[], $CellContext`t], $CellContext`r],
      Editable->False,
      SyntaxForm->Automatic], 
     SqrtBox[
      RowBox[{"-", "detg"}]]], "+", 
    FractionBox[
     InterpretationBox[
      RowBox[{
       SubscriptBox[
        UnderscriptBox["\<\"\[PartialD]\"\>", "_"], "t"], "[", 
       RowBox[{
        SqrtBox[
         RowBox[{"-", "detg"}]], " ", 
        InterpretationBox[
         SubsuperscriptBox["g", 
          StyleBox[
           RowBox[{"t", "t"}],
           StripOnInput->False,
           ShowContents->False], 
          RowBox[{"t", "t"}]],
         $CellContext`Tensor[$CellContext`g, {$CellContext`t, \
$CellContext`t}, {$CellContext`Void, $CellContext`Void}],
         BaseStyle->{AutoMultiplicationSymbol -> False},
         Editable->False], " ", 
        InterpretationBox[
         RowBox[{
          SubscriptBox[
           UnderscriptBox["\<\"\[PartialD]\"\>", "_"], "t"], "[", "_", "]"}],
         $CellContext`tuDDown["\[PartialD]"][
          Blank[], $CellContext`t],
         Editable->False,
         SyntaxForm->Automatic]}], "]"}],
      $CellContext`tuDDown[
      "\[PartialD]"][(-$CellContext`detg)^
        Rational[
         1, 2] $CellContext`Tensor[$CellContext`g, {$CellContext`t, \
$CellContext`t}, {$CellContext`Void, $CellContext`Void}] $CellContext`tuDDown[
        "\[PartialD]"][
         Blank[], $CellContext`t], $CellContext`t],
      Editable->False,
      SyntaxForm->Automatic], 
     SqrtBox[
      RowBox[{"-", "detg"}]]]}], "\[InvisibleSpace]", 
   StyleBox["\<\"\\n\[RightArrow] \"\>",
    StripOnInput->False,
    LineColor->RGBColor[0.7, 0, 1],
    LineOpacity->1,
    FrontFaceColor->RGBColor[0.7, 0, 1],
    BackFaceColor->RGBColor[0.7, 0, 1],
    FrontFaceOpacity->1,
    BackFaceOpacity->1,
    GraphicsColor->RGBColor[0.7, 0, 1],
    Opacity->1,
    FontSize->Larger,
    FontWeight->Bold,
    FontColor->RGBColor[0.7, 0, 1],
    FontOpacity->1], "\[InvisibleSpace]", 
   StyleBox["\<\"\\n\[RightArrow] \"\>",
    StripOnInput->False,
    LineColor->RGBColor[0.7, 0, 1],
    LineOpacity->1,
    FrontFaceColor->RGBColor[0.7, 0, 1],
    BackFaceColor->RGBColor[0.7, 0, 1],
    FrontFaceOpacity->1,
    BackFaceOpacity->1,
    GraphicsColor->RGBColor[0.7, 0, 1],
    Opacity->1,
    FontSize->Larger,
    FontWeight->Bold,
    FontColor->RGBColor[0.7, 0, 1],
    FontOpacity->1], "\[InvisibleSpace]", 
   StyleBox["\<\"\\n\[RightArrow] \"\>",
    StripOnInput->False,
    LineColor->RGBColor[0.7, 0, 1],
    LineOpacity->1,
    FrontFaceColor->RGBColor[0.7, 0, 1],
    BackFaceColor->RGBColor[0.7, 0, 1],
    FrontFaceOpacity->1,
    BackFaceOpacity->1,
    GraphicsColor->RGBColor[0.7, 0, 1],
    Opacity->1,
    FontSize->Larger,
    FontWeight->Bold,
    FontColor->RGBColor[0.7, 0, 1],
    FontOpacity->1], "\[InvisibleSpace]", 
   RowBox[{"\[CapitalDelta]", "\[Rule]", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        FractionBox["1", "r"], "-", 
        RowBox[{"r", " ", "\[CapitalLambda]"}]}], ")"}], " ", 
      InterpretationBox[
       RowBox[{
        SubscriptBox[
         UnderscriptBox["\<\"\[PartialD]\"\>", "_"], "r"], "[", "_", "]"}],
       $CellContext`tuDDown["\[PartialD]"][
        Blank[], $CellContext`r],
       Editable->False,
       SyntaxForm->Automatic]}], "+", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "-", 
        FractionBox[
         RowBox[{
          SuperscriptBox["r", "2"], " ", "\[CapitalLambda]"}], "3"]}], ")"}], 
      " ", 
      InterpretationBox[
       RowBox[{
        SubscriptBox[
         UnderscriptBox["\<\"\[PartialD]\"\>", "_"], "r"], "[", 
        InterpretationBox[
         RowBox[{
          SubscriptBox[
           UnderscriptBox["\<\"\[PartialD]\"\>", "_"], "r"], "[", "_", "]"}],
         $CellContext`tuDDown["\[PartialD]"][
          Blank[], $CellContext`r],
         Editable->False,
         SyntaxForm->Automatic], "]"}],
       $CellContext`tuDDown["\[PartialD]"][
        $CellContext`tuDDown["\[PartialD]"][
         Blank[], $CellContext`r], $CellContext`r],
       Editable->False,
       SyntaxForm->Automatic]}], "+", 
     FractionBox[
      RowBox[{"3", " ", 
       InterpretationBox[
        RowBox[{
         SubscriptBox[
          UnderscriptBox["\<\"\[PartialD]\"\>", "_"], "t"], "[", 
         InterpretationBox[
          RowBox[{
           SubscriptBox[
            UnderscriptBox["\<\"\[PartialD]\"\>", "_"], "t"], "[", "_", 
           "]"}],
          $CellContext`tuDDown["\[PartialD]"][
           Blank[], $CellContext`t],
          Editable->False,
          SyntaxForm->Automatic], "]"}],
        $CellContext`tuDDown["\[PartialD]"][
         $CellContext`tuDDown["\[PartialD]"][
          Blank[], $CellContext`t], $CellContext`t],
        Editable->False,
        SyntaxForm->Automatic]}], 
      RowBox[{
       RowBox[{"-", "3"}], "+", 
       RowBox[{
        SuperscriptBox["r", "2"], " ", "\[CapitalLambda]"}]}]]}]}], 
   "\[InvisibleSpace]", 
   StyleBox["\<\"\\n\"\>",
    StripOnInput->False,
    LineColor->RGBColor[0.7, 0, 1],
    LineOpacity->1,
    FrontFaceColor->RGBColor[0.7, 0, 1],
    BackFaceColor->RGBColor[0.7, 0, 1],
    FrontFaceOpacity->1,
    BackFaceOpacity->1,
    GraphicsColor->RGBColor[0.7, 0, 1],
    Opacity->1,
    FontSize->Larger,
    FontColor->RGBColor[0.7, 0, 1],
    FontOpacity->1], "\[InvisibleSpace]", 
   StyleBox["\<\"This is not e[39] with m\[Rule]0\"\>",
    StripOnInput->False,
    LineColor->RGBColor[1, 0, 0],
    FrontFaceColor->RGBColor[1, 0, 0],
    BackFaceColor->RGBColor[1, 0, 0],
    GraphicsColor->RGBColor[1, 0, 0],
    FontFamily->"Helvetica",
    FontColor->RGBColor[1, 0, 0]], "\[InvisibleSpace]", 
   StyleBox["\<\"\\n\"\>",
    StripOnInput->False,
    LineColor->RGBColor[0.7, 0, 1],
    LineOpacity->1,
    FrontFaceColor->RGBColor[0.7, 0, 1],
    BackFaceColor->RGBColor[0.7, 0, 1],
    FrontFaceOpacity->1,
    BackFaceOpacity->1,
    GraphicsColor->RGBColor[0.7, 0, 1],
    Opacity->1,
    FontSize->Larger,
    FontColor->RGBColor[0.7, 0, 1],
    FontOpacity->1], "\[InvisibleSpace]", 
   StyleBox["\<\"Let \"\>",
    StripOnInput->False,
    LineColor->RGBColor[0.7, 0, 1],
    LineOpacity->1,
    FrontFaceColor->RGBColor[0.7, 0, 1],
    BackFaceColor->RGBColor[0.7, 0, 1],
    FrontFaceOpacity->1,
    BackFaceOpacity->1,
    GraphicsColor->RGBColor[0.7, 0, 1],
    Opacity->1,
    FontSize->Larger,
    FontColor->RGBColor[0.7, 0, 1],
    FontOpacity->1], "\[InvisibleSpace]", 
   RowBox[{"\[CapitalLambda]", "\[Rule]", "0"}], "\[InvisibleSpace]", 
   StyleBox["\<\"\\n\[RightArrow] \"\>",
    StripOnInput->False,
    LineColor->RGBColor[0.7, 0, 1],
    LineOpacity->1,
    FrontFaceColor->RGBColor[0.7, 0, 1],
    BackFaceColor->RGBColor[0.7, 0, 1],
    FrontFaceOpacity->1,
    BackFaceOpacity->1,
    GraphicsColor->RGBColor[0.7, 0, 1],
    Opacity->1,
    FontSize->Larger,
    FontWeight->Bold,
    FontColor->RGBColor[0.7, 0, 1],
    FontOpacity->1], "\[InvisibleSpace]", 
   RowBox[{"\[CapitalDelta]", "\[Rule]", 
    RowBox[{
     FractionBox[
      InterpretationBox[
       RowBox[{
        SubscriptBox[
         UnderscriptBox["\<\"\[PartialD]\"\>", "_"], "r"], "[", "_", "]"}],
       $CellContext`tuDDown["\[PartialD]"][
        Blank[], $CellContext`r],
       Editable->False,
       SyntaxForm->Automatic], "r"], "+", 
     InterpretationBox[
      RowBox[{
       SubscriptBox[
        UnderscriptBox["\<\"\[PartialD]\"\>", "_"], "r"], "[", 
       InterpretationBox[
        RowBox[{
         SubscriptBox[
          UnderscriptBox["\<\"\[PartialD]\"\>", "_"], "r"], "[", "_", "]"}],
        $CellContext`tuDDown["\[PartialD]"][
         Blank[], $CellContext`r],
        Editable->False,
        SyntaxForm->Automatic], "]"}],
      $CellContext`tuDDown["\[PartialD]"][
       $CellContext`tuDDown["\[PartialD]"][
        Blank[], $CellContext`r], $CellContext`r],
      Editable->False,
      SyntaxForm->Automatic], "-", 
     InterpretationBox[
      RowBox[{
       SubscriptBox[
        UnderscriptBox["\<\"\[PartialD]\"\>", "_"], "t"], "[", 
       InterpretationBox[
        RowBox[{
         SubscriptBox[
          UnderscriptBox["\<\"\[PartialD]\"\>", "_"], "t"], "[", "_", "]"}],
        $CellContext`tuDDown["\[PartialD]"][
         Blank[], $CellContext`t],
        Editable->False,
        SyntaxForm->Automatic], "]"}],
      $CellContext`tuDDown["\[PartialD]"][
       $CellContext`tuDDown["\[PartialD]"][
        Blank[], $CellContext`t], $CellContext`t],
      Editable->False,
      SyntaxForm->Automatic]}]}]}],
  SequenceForm[
   Style["Even Wiki's arbitrary n-dim curvilinear coordinate ", 
    RGBColor[0, 0, 1], FontFamily -> "Helvetica"], {
    $CellContext`Tensor[$CellContext`\[Xi], {1}, {$CellContext`Void}], 
    $CellContext`Tensor[$CellContext`\[Xi], {$CellContext`\[Ellipsis]}, \
{$CellContext`Void}], 
    $CellContext`Tensor[$CellContext`\[Xi], {$CellContext`n}, \
{$CellContext`Void}]}, 
   Style["\n\[RightArrow] ", Bold, Larger, 
    RGBColor[
    0.7, 0, 1, 1]], $CellContext`\[CapitalDelta] -> (-$CellContext`detg)^
     Rational[-1, 2] $CellContext`tuDDown[
     "\[PartialD]"][(-$CellContext`detg)^
       Rational[
        1, 2] $CellContext`Tensor[$CellContext`g, {$CellContext`i, \
$CellContext`j}, {$CellContext`Void, $CellContext`Void}] $CellContext`tuDDown[
       "\[PartialD]"][
        Blank[], 
        $CellContext`Tensor[$CellContext`\[Xi], {$CellContext`Void}, \
{$CellContext`j}]], 
      $CellContext`Tensor[$CellContext`\[Xi], {$CellContext`Void}, \
{$CellContext`i}]], 
   Style["\n", 
    RGBColor[0.7, 0, 1, 1], Larger], 
   Style["Using the proper time equation from the radial \
$metricSchwarzschildDeSitter ", 
    RGBColor[0.7, 0, 1, 1], 
    Larger], $CellContext`d[$CellContext`s]^2 -> (1 - 
       2 $CellContext`G $CellContext`M/$CellContext`r + 
       Rational[-1, 
          3] $CellContext`r^2 $CellContext`\[CapitalLambda])^(-1) \
$CellContext`d[$CellContext`r]^2 + (-1 + 
      2 $CellContext`G $CellContext`M/$CellContext`r + 
      Rational[1, 
         3] $CellContext`r^2 $CellContext`\[CapitalLambda]) \
$CellContext`d[$CellContext`t]^2 + $CellContext`r^2 \
$CellContext`d[$CellContext`\[CapitalOmega]]^2, 
   Style["\n\[Implies] ", Bold, Larger, 
    RGBColor[0.7, 0, 1, 1]], 
   Style["\n\[Implies] ", Bold, Larger, 
    RGBColor[
    0.7, 0, 1, 1]], (-$CellContext`detg)^Rational[-1, 2] $CellContext`tuDDown[
     "\[PartialD]"][(-$CellContext`detg)^
       Rational[
        1, 2] $CellContext`Tensor[$CellContext`g, {$CellContext`r, \
$CellContext`r}, {$CellContext`Void, $CellContext`Void}] $CellContext`tuDDown[
       "\[PartialD]"][
        Blank[], $CellContext`r], $CellContext`r] + (-$CellContext`detg)^
     Rational[-1, 2] $CellContext`tuDDown[
     "\[PartialD]"][(-$CellContext`detg)^
       Rational[
        1, 2] $CellContext`Tensor[$CellContext`g, {$CellContext`t, \
$CellContext`r}, {$CellContext`Void, $CellContext`Void}] $CellContext`tuDDown[
       "\[PartialD]"][
        Blank[], $CellContext`r], $CellContext`t] + (-$CellContext`detg)^
     Rational[-1, 2] $CellContext`tuDDown[
     "\[PartialD]"][(-$CellContext`detg)^
       Rational[
        1, 2] $CellContext`Tensor[$CellContext`g, {$CellContext`r, \
$CellContext`t}, {$CellContext`Void, $CellContext`Void}] $CellContext`tuDDown[
       "\[PartialD]"][
        Blank[], $CellContext`t], $CellContext`r] + (-$CellContext`detg)^
     Rational[-1, 2] $CellContext`tuDDown[
     "\[PartialD]"][(-$CellContext`detg)^
       Rational[
        1, 2] $CellContext`Tensor[$CellContext`g, {$CellContext`t, \
$CellContext`t}, {$CellContext`Void, $CellContext`Void}] $CellContext`tuDDown[
       "\[PartialD]"][
        Blank[], $CellContext`t], $CellContext`t], 
   Style["\n\[RightArrow] ", Bold, Larger, 
    RGBColor[0.7, 0, 1, 1]], 
   Style["\n\[RightArrow] ", Bold, Larger, 
    RGBColor[0.7, 0, 1, 1]], 
   Style["\n\[RightArrow] ", Bold, Larger, 
    RGBColor[
    0.7, 0, 1, 
     1]], $CellContext`\[CapitalDelta] -> ($CellContext`r^(-1) - \
$CellContext`r $CellContext`\[CapitalLambda]) $CellContext`tuDDown[
      "\[PartialD]"][
       Blank[], $CellContext`r] + (1 + 
      Rational[-1, 
         3] $CellContext`r^2 $CellContext`\[CapitalLambda]) \
$CellContext`tuDDown["\[PartialD]"][
       $CellContext`tuDDown["\[PartialD]"][
        Blank[], $CellContext`r], $CellContext`r] + 
    3 (-3 + $CellContext`r^2 $CellContext`\[CapitalLambda])^(-1) \
$CellContext`tuDDown["\[PartialD]"][
       $CellContext`tuDDown["\[PartialD]"][
        Blank[], $CellContext`t], $CellContext`t], 
   Style["\n", 
    RGBColor[0.7, 0, 1, 1], Larger], 
   Style["This is not e[39] with m\[Rule]0", 
    RGBColor[1, 0, 0], FontFamily -> "Helvetica"], 
   Style["\n", 
    RGBColor[0.7, 0, 1, 1], Larger], 
   Style["Let ", 
    RGBColor[0.7, 0, 1, 1], Larger], $CellContext`\[CapitalLambda] -> 0, 
   Style["\n\[RightArrow] ", Bold, Larger, 
    RGBColor[
    0.7, 0, 1, 
     1]], $CellContext`\[CapitalDelta] -> $CellContext`r^(-1) \
$CellContext`tuDDown["\[PartialD]"][
       Blank[], $CellContext`r] + $CellContext`tuDDown["\[PartialD]"][
      $CellContext`tuDDown["\[PartialD]"][
       Blank[], $CellContext`r], $CellContext`r] - $CellContext`tuDDown[
    "\[PartialD]"][
     $CellContext`tuDDown["\[PartialD]"][
      Blank[], $CellContext`t], $CellContext`t]],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.806150431350134*^9, 3.806150481276235*^9, {3.806150574281425*^9, 
   3.8061505910518103`*^9}, {3.806150637451541*^9, 3.806150664854477*^9}, 
   3.806150778845695*^9, {3.8061519827290173`*^9, 3.806152001551278*^9}, 
   3.806152045813521*^9, {3.806152107614855*^9, 3.806152160658329*^9}, 
   3.8061522059522552`*^9, {3.806152266769546*^9, 3.806152273503395*^9}, {
   3.806152326887319*^9, 3.806152367600379*^9}, {3.806152409587968*^9, 
   3.8061524169986553`*^9}, {3.8061524500125723`*^9, 3.806152492886167*^9}, 
   3.806152572235299*^9, 3.8061526837407207`*^9, 3.806152714527135*^9, 
   3.8061527506030416`*^9, 3.806152793692525*^9, {3.806152873849032*^9, 
   3.806152914482707*^9}, {3.8061529741396103`*^9, 3.806152979247307*^9}, {
   3.806153130990931*^9, 3.806153178152129*^9}, 3.8061533164816628`*^9, {
   3.806153364219717*^9, 3.806153374539559*^9}, 3.8061538118752527`*^9, 
   3.80615385160855*^9, 3.8061538917662086`*^9, 3.806153959575033*^9, {
   3.806154015977401*^9, 3.806154090689725*^9}, 3.8061541381615553`*^9, {
   3.8061541752432823`*^9, 3.806154211156969*^9}, {3.806154297900722*^9, 
   3.806154326390341*^9}, 3.806154435245125*^9, {3.8061549808617353`*^9, 
   3.8061549941790648`*^9}, 3.806157732126079*^9, 3.806240942409974*^9, 
   3.8062410346605253`*^9, 3.806241089286428*^9, {3.806327586069601*^9, 
   3.806327625909898*^9}, 3.8063276762060537`*^9, 3.806327963869163*^9, 
   3.8063280358856583`*^9, 3.8063286866271667`*^9, {3.806328743898592*^9, 
   3.806328764718182*^9}, 3.806332218764172*^9, 3.80633229959559*^9, 
   3.806676124512738*^9, 
   3.808052929553714*^9},ExpressionUUID->"848d7a2f-60fb-41ce-bcf4-\
b52d3f636de3"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PR", "[", 
  RowBox[{
  "\"\<Let's examine e[39]\>\"", "\[IndentingNewLine]", ",", "NL", ",", 
   "\"\<Since \>\"", "\[IndentingNewLine]", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"$pass", "//", 
       RowBox[{"tuRuleSelect", "[", "z", "]"}]}], "//", "tuRule1"}], ",", 
     RowBox[{"P", ">=", "0"}], ",", 
     RowBox[{"z", "\[GreaterEqual]", 
      RowBox[{"1", "/", "2"}]}]}], "}"}], "\[IndentingNewLine]", ",", 
   RowBox[{"$", "=", 
    RowBox[{"e", "[", "39", "]"}]}], "\[IndentingNewLine]", ",", "NL", ",", 
   "\"\<Let \>\"", ",", 
   RowBox[{"$s", "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"d", "\[Rule]", "9"}], ",", 
      RowBox[{"m", "\[Rule]", "0"}]}], "}"}]}], "\[IndentingNewLine]", ",", 
   "Yield", ",", 
   RowBox[{"$0", "=", 
    RowBox[{"$", "=", 
     RowBox[{"$", "/.", "$s"}]}]}], "\[IndentingNewLine]", ",", "NL", ",", 
   "\"\<For \>\"", ",", 
   RowBox[{"$", "=", 
    RowBox[{
     RowBox[{
      RowBox[{"Limit", "[", 
       RowBox[{"#", ",", 
        RowBox[{"z", "\[Rule]", ".01"}]}], "]"}], "&"}], "/@", "$"}]}]}], 
  "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.8067525673181353`*^9, 3.806752636901*^9}, {
   3.806752667200032*^9, 3.806752999955744*^9}, 
   3.8067531072956123`*^9},ExpressionUUID->"dec46523-4022-4a3e-909c-\
c60ca319bd1f"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   StyleBox["\<\"Let's examine e[39]\"\>",
    StripOnInput->False,
    LineColor->RGBColor[0.7, 0, 1],
    LineOpacity->1,
    FrontFaceColor->RGBColor[0.7, 0, 1],
    BackFaceColor->RGBColor[0.7, 0, 1],
    FrontFaceOpacity->1,
    BackFaceOpacity->1,
    GraphicsColor->RGBColor[0.7, 0, 1],
    Opacity->1,
    FontSize->Larger,
    FontColor->RGBColor[0.7, 0, 1],
    FontOpacity->1], "\[InvisibleSpace]", 
   StyleBox["\<\"\\n\"\>",
    StripOnInput->False,
    LineColor->RGBColor[0.7, 0, 1],
    LineOpacity->1,
    FrontFaceColor->RGBColor[0.7, 0, 1],
    BackFaceColor->RGBColor[0.7, 0, 1],
    FrontFaceOpacity->1,
    BackFaceOpacity->1,
    GraphicsColor->RGBColor[0.7, 0, 1],
    Opacity->1,
    FontSize->Larger,
    FontColor->RGBColor[0.7, 0, 1],
    FontOpacity->1], "\[InvisibleSpace]", 
   StyleBox["\<\"Since \"\>",
    StripOnInput->False,
    LineColor->RGBColor[0.7, 0, 1],
    LineOpacity->1,
    FrontFaceColor->RGBColor[0.7, 0, 1],
    BackFaceColor->RGBColor[0.7, 0, 1],
    FrontFaceOpacity->1,
    BackFaceOpacity->1,
    GraphicsColor->RGBColor[0.7, 0, 1],
    Opacity->1,
    FontSize->Larger,
    FontColor->RGBColor[0.7, 0, 1],
    FontOpacity->1], "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"z", "\[Rule]", 
      FractionBox[
       RowBox[{"1", "+", "P"}], "2"]}], ",", 
     RowBox[{"P", "\[GreaterEqual]", "0"}], ",", 
     RowBox[{"z", "\[GreaterEqual]", 
      FractionBox["1", "2"]}]}], "}"}], "\[InvisibleSpace]", 
   RowBox[{"G", "\[Rule]", 
    RowBox[{
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", 
         FractionBox["1", "4"]}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "2"}], "+", "d"}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Log", "[", 
           RowBox[{"1", "-", "z"}], "]"}], "+", 
          RowBox[{"Log", "[", "z", "]"}]}], ")"}]}]], " ", 
      RowBox[{"C", "[", "1", "]"}], " ", 
      RowBox[{"LegendreP", "[", 
       RowBox[{
        RowBox[{
         FractionBox["1", "2"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", 
           SqrtBox[
            RowBox[{"1", "-", 
             RowBox[{"2", " ", "d"}], "+", 
             SuperscriptBox["d", "2"], "-", 
             RowBox[{"4", " ", 
              SuperscriptBox["m", "2"]}]}]]}], ")"}]}], ",", 
        RowBox[{
         FractionBox["1", "2"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "2"}], "+", "d"}], ")"}]}], ",", 
        RowBox[{
         RowBox[{"-", "1"}], "+", 
         RowBox[{"2", " ", "z"}]}]}], "]"}]}], "+", 
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", 
         FractionBox["1", "4"]}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "2"}], "+", "d"}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Log", "[", 
           RowBox[{"1", "-", "z"}], "]"}], "+", 
          RowBox[{"Log", "[", "z", "]"}]}], ")"}]}]], " ", 
      RowBox[{"C", "[", "2", "]"}], " ", 
      RowBox[{"LegendreQ", "[", 
       RowBox[{
        RowBox[{
         FractionBox["1", "2"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", 
           SqrtBox[
            RowBox[{"1", "-", 
             RowBox[{"2", " ", "d"}], "+", 
             SuperscriptBox["d", "2"], "-", 
             RowBox[{"4", " ", 
              SuperscriptBox["m", "2"]}]}]]}], ")"}]}], ",", 
        RowBox[{
         FractionBox["1", "2"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "2"}], "+", "d"}], ")"}]}], ",", 
        RowBox[{
         RowBox[{"-", "1"}], "+", 
         RowBox[{"2", " ", "z"}]}]}], "]"}]}]}]}], "\[InvisibleSpace]", 
   StyleBox["\<\"\\n\"\>",
    StripOnInput->False,
    LineColor->RGBColor[0.7, 0, 1],
    LineOpacity->1,
    FrontFaceColor->RGBColor[0.7, 0, 1],
    BackFaceColor->RGBColor[0.7, 0, 1],
    FrontFaceOpacity->1,
    BackFaceOpacity->1,
    GraphicsColor->RGBColor[0.7, 0, 1],
    Opacity->1,
    FontSize->Larger,
    FontColor->RGBColor[0.7, 0, 1],
    FontOpacity->1], "\[InvisibleSpace]", 
   StyleBox["\<\"Let \"\>",
    StripOnInput->False,
    LineColor->RGBColor[0.7, 0, 1],
    LineOpacity->1,
    FrontFaceColor->RGBColor[0.7, 0, 1],
    BackFaceColor->RGBColor[0.7, 0, 1],
    FrontFaceOpacity->1,
    BackFaceOpacity->1,
    GraphicsColor->RGBColor[0.7, 0, 1],
    Opacity->1,
    FontSize->Larger,
    FontColor->RGBColor[0.7, 0, 1],
    FontOpacity->1], "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"d", "\[Rule]", "9"}], ",", 
     RowBox[{"m", "\[Rule]", "0"}]}], "}"}], "\[InvisibleSpace]", 
   StyleBox["\<\"\\n\[RightArrow] \"\>",
    StripOnInput->False,
    LineColor->RGBColor[0.7, 0, 1],
    LineOpacity->1,
    FrontFaceColor->RGBColor[0.7, 0, 1],
    BackFaceColor->RGBColor[0.7, 0, 1],
    FrontFaceOpacity->1,
    BackFaceOpacity->1,
    GraphicsColor->RGBColor[0.7, 0, 1],
    Opacity->1,
    FontSize->Larger,
    FontWeight->Bold,
    FontColor->RGBColor[0.7, 0, 1],
    FontOpacity->1], "\[InvisibleSpace]", 
   RowBox[{"G", "\[Rule]", 
    RowBox[{
     RowBox[{"-", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"3", " ", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{
            RowBox[{"-", 
             FractionBox["7", "4"]}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"Log", "[", 
               RowBox[{"1", "-", "z"}], "]"}], "+", 
              RowBox[{"Log", "[", "z", "]"}]}], ")"}]}]], " ", 
          SuperscriptBox["z", 
           RowBox[{"7", "/", "4"}]], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "5"}], "-", 
            RowBox[{"14", " ", "z"}], "-", 
            RowBox[{"56", " ", 
             SuperscriptBox["z", "2"]}], "-", 
            RowBox[{"560", " ", 
             SuperscriptBox["z", "3"]}], "+", 
            RowBox[{"4480", " ", 
             SuperscriptBox["z", "4"]}], "-", 
            RowBox[{"8960", " ", 
             SuperscriptBox["z", "5"]}], "+", 
            RowBox[{"7168", " ", 
             SuperscriptBox["z", "6"]}], "-", 
            RowBox[{"2048", " ", 
             SuperscriptBox["z", "7"]}]}], ")"}], " ", 
          RowBox[{"C", "[", "1", "]"}]}], ")"}], "/", 
        RowBox[{"(", 
         RowBox[{"2", " ", 
          SuperscriptBox["2", 
           RowBox[{"1", "/", "4"}]], " ", 
          SqrtBox["\[Pi]"], " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"2", "-", 
             RowBox[{"2", " ", "z"}]}], ")"}], 
           RowBox[{"7", "/", "4"}]], " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "+", 
             RowBox[{
              FractionBox["1", "2"], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "2"}], "+", 
                RowBox[{"2", " ", "z"}]}], ")"}]}]}], ")"}], 
           RowBox[{"7", "/", "2"}]]}], ")"}]}], ")"}]}], "+", 
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", 
         FractionBox["7", "4"]}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Log", "[", 
           RowBox[{"1", "-", "z"}], "]"}], "+", 
          RowBox[{"Log", "[", "z", "]"}]}], ")"}]}]], " ", 
      RowBox[{"C", "[", "2", "]"}], " ", 
      RowBox[{"LegendreQ", "[", 
       RowBox[{
        FractionBox["7", "2"], ",", 
        FractionBox["7", "2"], ",", 
        RowBox[{
         RowBox[{"-", "1"}], "+", 
         RowBox[{"2", " ", "z"}]}]}], "]"}]}]}]}], "\[InvisibleSpace]", 
   StyleBox["\<\"\\n\"\>",
    StripOnInput->False,
    LineColor->RGBColor[0.7, 0, 1],
    LineOpacity->1,
    FrontFaceColor->RGBColor[0.7, 0, 1],
    BackFaceColor->RGBColor[0.7, 0, 1],
    FrontFaceOpacity->1,
    BackFaceOpacity->1,
    GraphicsColor->RGBColor[0.7, 0, 1],
    Opacity->1,
    FontSize->Larger,
    FontColor->RGBColor[0.7, 0, 1],
    FontOpacity->1], "\[InvisibleSpace]", 
   StyleBox["\<\"For \"\>",
    StripOnInput->False,
    LineColor->RGBColor[0.7, 0, 1],
    LineOpacity->1,
    FrontFaceColor->RGBColor[0.7, 0, 1],
    BackFaceColor->RGBColor[0.7, 0, 1],
    FrontFaceOpacity->1,
    BackFaceOpacity->1,
    GraphicsColor->RGBColor[0.7, 0, 1],
    Opacity->1,
    FontSize->Larger,
    FontColor->RGBColor[0.7, 0, 1],
    FontOpacity->1], "\[InvisibleSpace]", 
   RowBox[{"G", "\[Rule]", 
    RowBox[{
     RowBox[{"1.1277497235838844`*^7", " ", 
      RowBox[{"C", "[", "1", "]"}]}], "+", 
     RowBox[{"680.6222787553111`", " ", 
      RowBox[{"C", "[", "2", "]"}]}]}]}]}],
  SequenceForm[
   Style["Let's examine e[39]", 
    RGBColor[0.7, 0, 1, 1], Larger], 
   Style["\n", 
    RGBColor[0.7, 0, 1, 1], Larger], 
   Style["Since ", 
    RGBColor[0.7, 0, 1, 1], Larger], {$CellContext`z -> 
    Rational[1, 2] (1 + $CellContext`P), $CellContext`P >= 0, $CellContext`z >= 
    Rational[1, 2]}, $CellContext`G -> 
   E^(Rational[-1, 4] (-2 + $CellContext`d) (Log[1 - $CellContext`z] + 
        Log[$CellContext`z])) C[1] 
     LegendreP[
      Rational[1, 
         2] (-1 + (1 - 2 $CellContext`d + $CellContext`d^2 - 
          4 $CellContext`m^2)^Rational[1, 2]), 
       Rational[1, 2] (-2 + $CellContext`d), -1 + 2 $CellContext`z] + 
    E^(Rational[-1, 4] (-2 + $CellContext`d) (Log[1 - $CellContext`z] + 
        Log[$CellContext`z])) C[2] 
     LegendreQ[
      Rational[1, 
         2] (-1 + (1 - 2 $CellContext`d + $CellContext`d^2 - 
          4 $CellContext`m^2)^Rational[1, 2]), 
       Rational[1, 2] (-2 + $CellContext`d), -1 + 2 $CellContext`z], 
   Style["\n", 
    RGBColor[0.7, 0, 1, 1], Larger], 
   Style["Let ", 
    RGBColor[0.7, 0, 1, 1], Larger], {$CellContext`d -> 9, $CellContext`m -> 
    0}, 
   Style["\n\[RightArrow] ", Bold, Larger, 
    RGBColor[0.7, 0, 1, 1]], $CellContext`G -> 
   Rational[-3, 2] 2^Rational[-1, 4] 
     E^(Rational[-7, 4] (Log[1 - $CellContext`z] + Log[$CellContext`z])) 
     Pi^Rational[-1, 2] (2 - 2 $CellContext`z)^Rational[-7, 4] $CellContext`z^
      Rational[7, 4] (-5 - 14 $CellContext`z - 56 $CellContext`z^2 - 
      560 $CellContext`z^3 + 4480 $CellContext`z^4 - 8960 $CellContext`z^5 + 
      7168 $CellContext`z^6 - 
      2048 $CellContext`z^7) (1 + Rational[1, 2] (-2 + 2 $CellContext`z))^
      Rational[-7, 2] C[1] + 
    E^(Rational[-7, 4] (Log[1 - $CellContext`z] + Log[$CellContext`z])) C[2] 
     LegendreQ[
       Rational[7, 2], 
       Rational[7, 2], -1 + 2 $CellContext`z], 
   Style["\n", 
    RGBColor[0.7, 0, 1, 1], Larger], 
   Style["For ", 
    RGBColor[0.7, 0, 1, 1], Larger], $CellContext`G -> 
   1.1277497235838844`*^7 C[1] + 680.6222787553111 C[2]],
  Editable->False]], "Print",
 CellChangeTimes->{{3.806752560790683*^9, 3.806752568603683*^9}, {
   3.806752613574378*^9, 3.80675263801003*^9}, {3.806752775508387*^9, 
   3.806753000736415*^9}, 3.806753108588544*^9, 
   3.80805293031392*^9},ExpressionUUID->"2e033615-7c42-478d-bee8-\
191880d63065"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"PR", "[", 
   RowBox[{
   "\"\<Let's examine e[39]\>\"", "\[IndentingNewLine]", ",", "NL", ",", 
    "\"\<Since \>\"", "\[IndentingNewLine]", ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"$pass", "//", 
        RowBox[{"tuRuleSelect", "[", "z", "]"}]}], "//", "tuRule1"}], ",", 
      RowBox[{"P", ">=", "0"}], ",", 
      RowBox[{"z", "\[GreaterEqual]", 
       RowBox[{"1", "/", "2"}]}]}], "}"}], "\[IndentingNewLine]", ",", 
    RowBox[{"$", "=", 
     RowBox[{"e", "[", "39", "]"}]}], "\[IndentingNewLine]", ",", "NL", ",", 
    "\"\<We plot the solution for various z[\[DoubleStruckCapitalC]].  \>\"", 
    "\[IndentingNewLine]", ",", "NL", ",", "\"\<for different values of \>\"",
     ",", 
    RowBox[{"$s0", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"d", "\[Rule]", "4"}], ",", 
       RowBox[{"m", "\[Rule]", "1"}], ",", 
       RowBox[{
        RowBox[{"C", "[", "1", "]"}], "\[Rule]", "1"}]}], "}"}]}]}], 
   "\[IndentingNewLine]", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"$", "=", 
  RowBox[{
   RowBox[{"$", "[", 
    RowBox[{"[", 
     RowBox[{"2", ",", "1"}], "]"}], "]"}], "/.", 
   "$s0"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"$", "=", 
   RowBox[{"$", "/.", 
    RowBox[{"{", 
     RowBox[{"z", "\[Rule]", 
      RowBox[{"x", "+", 
       RowBox[{"I", " ", "y"}]}]}], "}"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"$", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Re", "[", "$", "]"}], ",", 
     RowBox[{"Im", "[", "$", "]"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"$s", "=", 
   RowBox[{"xy", "\[Rule]", "2"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Plot3D", "[", 
   RowBox[{"$", ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", 
      RowBox[{"-", "xy"}], ",", "xy"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"y", ",", 
      RowBox[{"-", "xy"}], ",", "xy"}], "}"}]}], "]"}], "/.", 
  "$s"}]}], "Input",
 CellChangeTimes->{{3.806241321547324*^9, 3.806241344289093*^9}, {
   3.8062416660198317`*^9, 3.8062417672184687`*^9}, {3.8062417991455584`*^9, 
   3.8062419116707563`*^9}, {3.806241954424505*^9, 3.806242120522491*^9}, {
   3.806242161656625*^9, 3.8062422116597567`*^9}, {3.806242271333666*^9, 
   3.806242290420323*^9}, {3.806242416573254*^9, 3.806242440199945*^9}, {
   3.806242837974085*^9, 3.8062428400448923`*^9}, {3.806243399402672*^9, 
   3.8062434456461487`*^9}, {3.806243488776847*^9, 3.806243572323052*^9}, 
   3.8062444630657873`*^9, {3.8062445496458397`*^9, 3.806244686758361*^9}, {
   3.8062450882574263`*^9, 3.806245108025403*^9}, {3.806245164183915*^9, 
   3.8062451937793427`*^9}, {3.8062454898850117`*^9, 3.806245545441167*^9}, {
   3.806245580501214*^9, 3.80624558778159*^9}, {3.806245648385655*^9, 
   3.8062456594243593`*^9}, {3.806245697335969*^9, 3.806245772543474*^9}, {
   3.8062460125014973`*^9, 3.8062461252064743`*^9}, {3.806246178088019*^9, 
   3.8062462149635773`*^9}, {3.8062463649946423`*^9, 3.806246561457954*^9}, {
   3.806246679437017*^9, 3.80624671559793*^9}, {3.806247084788186*^9, 
   3.8062471119333344`*^9}, {3.806247150341049*^9, 3.8062471512694683`*^9}, {
   3.806247198788725*^9, 3.8062471991320133`*^9}, {3.806247238883412*^9, 
   3.806247239962688*^9}, {3.806247291322125*^9, 3.806247414633395*^9}, {
   3.806247495108873*^9, 3.806247519625967*^9}, {3.8062477458924522`*^9, 
   3.806247789462635*^9}, {3.806247826278213*^9, 3.8062479156898746`*^9}, 
   3.8062479804643993`*^9, 
   3.806697338362782*^9},ExpressionUUID->"178326f8-7d7b-490b-bc95-\
4a78bc14796d"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   StyleBox["\<\"Let's examine e[39]\"\>",
    StripOnInput->False,
    LineColor->RGBColor[0.7, 0, 1],
    LineOpacity->1,
    FrontFaceColor->RGBColor[0.7, 0, 1],
    BackFaceColor->RGBColor[0.7, 0, 1],
    FrontFaceOpacity->1,
    BackFaceOpacity->1,
    GraphicsColor->RGBColor[0.7, 0, 1],
    Opacity->1,
    FontSize->Larger,
    FontColor->RGBColor[0.7, 0, 1],
    FontOpacity->1], "\[InvisibleSpace]", 
   StyleBox["\<\"\\n\"\>",
    StripOnInput->False,
    LineColor->RGBColor[0.7, 0, 1],
    LineOpacity->1,
    FrontFaceColor->RGBColor[0.7, 0, 1],
    BackFaceColor->RGBColor[0.7, 0, 1],
    FrontFaceOpacity->1,
    BackFaceOpacity->1,
    GraphicsColor->RGBColor[0.7, 0, 1],
    Opacity->1,
    FontSize->Larger,
    FontColor->RGBColor[0.7, 0, 1],
    FontOpacity->1], "\[InvisibleSpace]", 
   StyleBox["\<\"Since \"\>",
    StripOnInput->False,
    LineColor->RGBColor[0.7, 0, 1],
    LineOpacity->1,
    FrontFaceColor->RGBColor[0.7, 0, 1],
    BackFaceColor->RGBColor[0.7, 0, 1],
    FrontFaceOpacity->1,
    BackFaceOpacity->1,
    GraphicsColor->RGBColor[0.7, 0, 1],
    Opacity->1,
    FontSize->Larger,
    FontColor->RGBColor[0.7, 0, 1],
    FontOpacity->1], "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"z", "\[Rule]", 
      FractionBox[
       RowBox[{"1", "+", "P"}], "2"]}], ",", 
     RowBox[{"P", "\[GreaterEqual]", "0"}], ",", 
     RowBox[{"z", "\[GreaterEqual]", 
      FractionBox["1", "2"]}]}], "}"}], "\[InvisibleSpace]", 
   RowBox[{"G", "\[Rule]", 
    RowBox[{
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", 
         FractionBox["1", "4"]}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "2"}], "+", "d"}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Log", "[", 
           RowBox[{"1", "-", "z"}], "]"}], "+", 
          RowBox[{"Log", "[", "z", "]"}]}], ")"}]}]], " ", 
      RowBox[{"C", "[", "1", "]"}], " ", 
      RowBox[{"LegendreP", "[", 
       RowBox[{
        RowBox[{
         FractionBox["1", "2"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", 
           SqrtBox[
            RowBox[{"1", "-", 
             RowBox[{"2", " ", "d"}], "+", 
             SuperscriptBox["d", "2"], "-", 
             RowBox[{"4", " ", 
              SuperscriptBox["m", "2"]}]}]]}], ")"}]}], ",", 
        RowBox[{
         FractionBox["1", "2"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "2"}], "+", "d"}], ")"}]}], ",", 
        RowBox[{
         RowBox[{"-", "1"}], "+", 
         RowBox[{"2", " ", "z"}]}]}], "]"}]}], "+", 
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", 
         FractionBox["1", "4"]}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "2"}], "+", "d"}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Log", "[", 
           RowBox[{"1", "-", "z"}], "]"}], "+", 
          RowBox[{"Log", "[", "z", "]"}]}], ")"}]}]], " ", 
      RowBox[{"C", "[", "2", "]"}], " ", 
      RowBox[{"LegendreQ", "[", 
       RowBox[{
        RowBox[{
         FractionBox["1", "2"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", 
           SqrtBox[
            RowBox[{"1", "-", 
             RowBox[{"2", " ", "d"}], "+", 
             SuperscriptBox["d", "2"], "-", 
             RowBox[{"4", " ", 
              SuperscriptBox["m", "2"]}]}]]}], ")"}]}], ",", 
        RowBox[{
         FractionBox["1", "2"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "2"}], "+", "d"}], ")"}]}], ",", 
        RowBox[{
         RowBox[{"-", "1"}], "+", 
         RowBox[{"2", " ", "z"}]}]}], "]"}]}]}]}], "\[InvisibleSpace]", 
   StyleBox["\<\"\\n\"\>",
    StripOnInput->False,
    LineColor->RGBColor[0.7, 0, 1],
    LineOpacity->1,
    FrontFaceColor->RGBColor[0.7, 0, 1],
    BackFaceColor->RGBColor[0.7, 0, 1],
    FrontFaceOpacity->1,
    BackFaceOpacity->1,
    GraphicsColor->RGBColor[0.7, 0, 1],
    Opacity->1,
    FontSize->Larger,
    FontColor->RGBColor[0.7, 0, 1],
    FontOpacity->1], "\[InvisibleSpace]", 
   StyleBox["\<\"We plot the solution for various z[\[DoubleStruckCapitalC]]. \
 \"\>",
    StripOnInput->False,
    LineColor->RGBColor[0.7, 0, 1],
    LineOpacity->1,
    FrontFaceColor->RGBColor[0.7, 0, 1],
    BackFaceColor->RGBColor[0.7, 0, 1],
    FrontFaceOpacity->1,
    BackFaceOpacity->1,
    GraphicsColor->RGBColor[0.7, 0, 1],
    Opacity->1,
    FontSize->Larger,
    FontColor->RGBColor[0.7, 0, 1],
    FontOpacity->1], "\[InvisibleSpace]", 
   StyleBox["\<\"\\n\"\>",
    StripOnInput->False,
    LineColor->RGBColor[0.7, 0, 1],
    LineOpacity->1,
    FrontFaceColor->RGBColor[0.7, 0, 1],
    BackFaceColor->RGBColor[0.7, 0, 1],
    FrontFaceOpacity->1,
    BackFaceOpacity->1,
    GraphicsColor->RGBColor[0.7, 0, 1],
    Opacity->1,
    FontSize->Larger,
    FontColor->RGBColor[0.7, 0, 1],
    FontOpacity->1], "\[InvisibleSpace]", 
   StyleBox["\<\"for different values of \"\>",
    StripOnInput->False,
    LineColor->RGBColor[0.7, 0, 1],
    LineOpacity->1,
    FrontFaceColor->RGBColor[0.7, 0, 1],
    BackFaceColor->RGBColor[0.7, 0, 1],
    FrontFaceOpacity->1,
    BackFaceOpacity->1,
    GraphicsColor->RGBColor[0.7, 0, 1],
    Opacity->1,
    FontSize->Larger,
    FontColor->RGBColor[0.7, 0, 1],
    FontOpacity->1], "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"d", "\[Rule]", "4"}], ",", 
     RowBox[{"m", "\[Rule]", "1"}], ",", 
     RowBox[{
      RowBox[{"C", "[", "1", "]"}], "\[Rule]", "1"}]}], "}"}]}],
  SequenceForm[
   Style["Let's examine e[39]", 
    RGBColor[0.7, 0, 1, 1], Larger], 
   Style["\n", 
    RGBColor[0.7, 0, 1, 1], Larger], 
   Style["Since ", 
    RGBColor[0.7, 0, 1, 1], Larger], {$CellContext`z -> 
    Rational[1, 2] (1 + $CellContext`P), $CellContext`P >= 0, $CellContext`z >= 
    Rational[1, 2]}, $CellContext`G -> 
   E^(Rational[-1, 4] (-2 + $CellContext`d) (Log[1 - $CellContext`z] + 
        Log[$CellContext`z])) C[1] 
     LegendreP[
      Rational[1, 
         2] (-1 + (1 - 2 $CellContext`d + $CellContext`d^2 - 
          4 $CellContext`m^2)^Rational[1, 2]), 
       Rational[1, 2] (-2 + $CellContext`d), -1 + 2 $CellContext`z] + 
    E^(Rational[-1, 4] (-2 + $CellContext`d) (Log[1 - $CellContext`z] + 
        Log[$CellContext`z])) C[2] 
     LegendreQ[
      Rational[1, 
         2] (-1 + (1 - 2 $CellContext`d + $CellContext`d^2 - 
          4 $CellContext`m^2)^Rational[1, 2]), 
       Rational[1, 2] (-2 + $CellContext`d), -1 + 2 $CellContext`z], 
   Style["\n", 
    RGBColor[0.7, 0, 1, 1], Larger], 
   Style["We plot the solution for various z[\[DoubleStruckCapitalC]].  ", 
    RGBColor[0.7, 0, 1, 1], Larger], 
   Style["\n", 
    RGBColor[0.7, 0, 1, 1], Larger], 
   Style["for different values of ", 
    RGBColor[0.7, 0, 1, 1], Larger], {$CellContext`d -> 4, $CellContext`m -> 
    1, C[1] -> 1}],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.8062479841432877`*^9, 3.806328873116618*^9, 3.806328922211565*^9, 
   3.806676125136001*^9, {3.806697329196713*^9, 3.806697339614749*^9}, 
   3.808052930930544*^9},ExpressionUUID->"3c9912a2-47c2-4c23-809b-\
4a40fae2b1fb"],

Cell[BoxData[
 RowBox[{
  SuperscriptBox["\[ExponentialE]", 
   RowBox[{
    FractionBox["1", "2"], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", 
       RowBox[{"Log", "[", 
        RowBox[{"1", "-", "z"}], "]"}]}], "-", 
      RowBox[{"Log", "[", "z", "]"}]}], ")"}]}]], " ", 
  RowBox[{"LegendreP", "[", 
   RowBox[{
    RowBox[{
     FractionBox["1", "2"], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", 
       SqrtBox["5"]}], ")"}]}], ",", "1", ",", 
    RowBox[{
     RowBox[{"-", "1"}], "+", 
     RowBox[{"2", " ", "z"}]}]}], "]"}]}]], "Output",
 CellChangeTimes->{
  3.806247984156899*^9, 3.80632887319447*^9, 3.8063289222372093`*^9, 
   3.806676125320017*^9, {3.806697329226552*^9, 3.806697339770198*^9}, 
   3.808052931138734*^9},ExpressionUUID->"0c0eda18-9fd4-4091-bd0e-\
ab6aec000f31"],

Cell[BoxData[
 Graphics3DBox[GraphicsComplex3DBox[CompressedData["
1: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
gTqECNQhRKAOIQJ1CBGoQ4hAHUIE6hAiUIcQgTqE8OsQ+P8PAnUyEaiTiUCd
TATqZCJQJxOBOpkI1MlEoE4mAnUyEaiTiUCdTATqZCJQJxN+nQz/N4Pf/wLO
73MB5/ezgPP7VsD5/Sng/D4UcH6/iePw+krA+f0j4Pw+EXB+Pwg4v+8DnN/f
Ac7v4+D/jXxZNiLFMuCf8wTS/DwBzw1I83MDPB8gzc8HuP9n0vwcAPt90rzf
x76e8Pp6/D+8zft37NNJ8z4d+3HSvB/Hvps077uxvybN+2vso0nzProer7Mv
L2lYt5XjzVPvYR/Jcyj6qtM/rw3m/PBY+PSJkr8T0snW7x+/m+Nt4vRYTcnz
ZS2UAr0cxnK8FUvjSSNVrNf/nNeTv68b6Wu5GSfL5fh+2ES3nx+Z/iaC401J
qn8d/aEbtk77JOeHSQvyfy76q+f50XUO4zpxfnj3nWWW9V8966seXGq5lvPD
tb2UZSR6Tpn4rHza1nTkrbP59z4SPZd0HZbnOjsdeQvJ2T5RoueSp0+ex8hx
/jbfdkeW5O+cetiJllu94eIhXIt0rx0br8LxxvBZQw/rn9ipVMjFQ4bPP3RJ
6YnFKvVcPGT4/EN7t3BdN3kFxxvDZy39pHYsf6ofxxvDZy29MqmfzUxr/v6t
pp1XPruimZvO87dqqtdx4bfwe1w8ZPisoU6roiaERGUgbwyff+j9+6nan7y5
/cvw+Ye+Wav+beNxbv8qSPmspT+L93jM6Y1xj/yU8llLLy8YOTb/Jcen5dgf
PyV/1/XqyhSH/c5cvmZ4LqfDnk7fdn8Ml1/guniBvG6kHMcnw3MFzZp+4FjG
co7Po1KeK+l71TPPpw3k+GR4rqR7yasXq9fy83UVzWyltq5gET+/lFG7YXVH
G9MykU+mDimn0w/k7OzmmoV8MjyX0xdt+gyeHZiFfCZKea6gNhuy/ugaZSGf
DM+VdEL02xjXfC6/MDxX0pF3p2p+Xc7lF4bnKqpCsq52eMPll3tXVuhK/o7t
soXytm17ubqxy5bL9yTPhUV/Ohso8uPqxktS/ovos14d5orORiGfcG0TFKk2
MD4G+WR4LqGb9ee96tGDi4cMz6X0eJJG1Kx1HJ8TpDyXUqWx3kZDW3PnBgwP
BdTs/c+F18JzkM810vUW0lJlu18/PHKRz2Cp/xTRZeOvVulq5SKfc77c15X8
36cbL7Quml3IQT6Z8Uuoo/FoT+VbXP3D8FxKS3UdJ7R9ytU/DM+lNGh24s2U
r1z9o/Sl+8RP+ulUo0ij8GMS16fYSXnOoHY29htkKrg+pauU50x61Xfasecb
IpBHhucsejoyedivxVHIJ1w/5ywcrrYzFvlh/CqdHp7YZ+6rEVyfwqwrg3bf
/1O8bX8R8sPon0lFE370mFVfgPwwvGXRyhonzQ/lecgPw1s2HRkT/0V3Wy7y
8/lK9D3robl0wKcuqTp1XL09fkuX0CGL86hb77zNT39w9fb6cNcmyd8dHrr5
qYvtql/Iz8IjI3UPSt5HNdmyNuX7b+RHrdfjn5K/R6wf2kL0Hvu+EjpUynMC
vXmv34L1TuE8P4mki5pcRtqrVyIPzLqiqau1XbZxz3LkgdE/jlYdG6yp/RT9
mDiM1ZSRPMc97Y/mIpmzhcjDnXAf3Xj3JNp7isr0+L75yMP5I1NCG5tSqMrN
qKKYSVy/9kU6fhp13JtzuMEpG/U83OvtxCGL7emDgHab28/mzgcOSnEXOt1S
wzMxuwr1HPXsXKib5P9+jxuT3F6LOx/okHvQrqHpN/F9fPqhqhV3PjBGKh9C
xvlNXWeXFYp8Lt9yV+ZAgj85tunm8A6xoagPXMc5Pl1/zqIGeRsm5TmEhKqu
L5NfVYn6MPbyJ+V7iryPDi9D3g6OnX1v2GJfYhjqLiP5v/CgJ8sDcVPNsx52
ntsXLG+kS/97JXX9uX1xm+GZBGlFJDR85+zLxI008rm2/oV/jxLUE671s/da
nBlcinoycSyJaPW+9ubxFM6+zLoSyE23a6tvizn7Tmb8jdSo9c1zD+fsy/on
ebnQX6UpgrMv68/kZGvRy06TufMK1v+J3ovJozf24eIqu1+IUkGt48y2XFxl
9xfp+0J16qjxXD/O7keS9b7MzsuFiwNM3Mskw9cR0+KwGOSHyUd5ZLSvx6Ci
j1zfzfCWSyK6HP1pkJOP/MD1Z4qGnacyFwfY+EPG7GzTvdwqH/lh4xWx+XRu
/5Wx3HkFG9/It6tPRiWFIA+EjYdkV5mc94KL3HkFGz+JTLzF+7kHuTzOxlui
lrm2cpkt13ez8ZkcGeT1JEGe67vZeE66W22Y9jmLyzts/CcvFVwTex6COjOV
5a2QbGipoPNYhTuvYPMOaWxode3ksiweb6Xkjqlrjp08xl/C5jXS8ap8kkNG
DvIG1+IN4ak/krj8wuZNomacfrV+MXdeweZZUi2T/WfQMS5+snmZnDQfOP7z
HS5+snmc/DqXHqB/lKsn2bxPbplurfv+hat/2DqBtNZJ7yG/gKt/2LqCBL7u
1kd/PFf/sHUIMVp9bXbxKy5fs3ULcZrsPWtIIb+eLCNe6z5ucbDjn1dUkYsf
9M7MnM7112wdRfbZLK4pN8tEPtm6i0Suj29puIarf9g6jXTOt1tx7AlX/8C1
tF3tpCOns5BPtg4kvdpqpyj24PI1WzcS2xfqw1dacPmarTPJ8QFDTPZN4foa
ti4ldqNe0d+nuPqcrWOJ/eA1PuqyXF/D1r3Ex7vrqf4RHJ9snUxOiZRP+bXl
f/9bTW5n9bV09OT3NdVE/4Xhtvpqrj5n63Zy1KuvvoUn19ewdT4ZnzPqVNAn
rq9h+wKyZG6n91aGXH3O9hGka/hE2wvRXH3O9h0kVdar1/xCrj6Hq0Z2cKsO
/lx9zvY1JOf2wqipxlw9eXFVo+bfvozsv+b5ZOBnjk+2PyKOZ+3a7yrn+GT7
KZL+/pHy9W0cn2z/RdKW7FnwvjXXJ7L9GomsjYyJL+P8k+3viN6ommHxI/nf
m9eRuMSw051X8fudv/17i3OlzrZcf832m6Sn+yt1n+1cf832p2Tq8E7GB5q4
/prtZ0mLSR2j5ulxfSLb/5LnC9fuVr/H9Ylsv0zCKjvOboc49BF5dOmozw1/
1mHdS6Gu22RhqX/0OH9/5VFenMfrobv3OhkVYzyEPEib58Ectu7yp2Vh6Zv/
OIYgPoatN/brpdefMgzCcUC+ed5HecKTh/EJb3yoZ0jzeiaHzY9x5HFlYki6
qwhxyOPnbp4YMCY1AtfJ1nXEqO2yWeZfI/g8ED4PMH7zeg95JjyewS6kuV3Q
z2lzP68ngJM1yvpjvnDPFcDn8sZXWB0zRLtD3qERV6dVj92JeYftj3Lp9bi4
oVuPcc+HQD1fMXyl/Xr9BNQT/k/4mBgrfdehGB/we8b7WqMLyah43rrE9Oqr
t7PLznD+D/MK1Am0eZ0AvCXQKTcs573JSubNK6LbfkxTyVDjvm8C+W1JHmG7
5MtwXsAtR00d1q4C6jesV2nzerWCDgh/cffzX//5vG+G3q2j8H9LSyhbf9IF
8UP0qn3+g0vral/aYt2xVv8DJ//gbB3bfBxYly/dZ/hmfVCJL28/+tKOlY2f
30U28OUJTx7xnLhTnl37nOGPQ3jjIB5xYnf4Oj3oC0oI6N9+2aGOXL0N+TqB
eDhUlfv1iebbi/DtxfoVae5X6IekuR+i/5Dm/oP2JQL2Jc3ti/0pad6flpAX
TP9FlGq0Dbn6HPtW0rxvDWP1LyDux06v+dqHi59Q100ZkHb3cR7/fCaLPLk8
xKMT1rd4zkman3Pi/iXN9y/ud8Lf73COynu+CJ/jan7+jPrQ5vqkIm7UubBn
57YcD+APl/X3RbRdWsbzNzFpvt9zkP9UpyVZOgb8uJdPXHUcC/yni/n+Rpv7
Wyq5LK2jounD9zFBXB8dxvbX/qRl06FfP87VoTxjxxAi3/ZS+7aruH4c9HVs
ZTn4aAPXx6lL6/kUenej4qz/4JTtQ2ni/NbOjh5BiLPj03VTZTpyOPaztHk/
i3pSvp4wfvM+F/WnzfUPY88fvhKlZbM9dct9cD6Yp3t/uw/HXv5GeeAnQE69
8NZOTxwf8lfzcwnkmfB5hjylppue59W7CHGmDskksSLDEy02cfuC7ZfpFq23
JGIAl9eYPiiJqk4cH1rcgquLQL55fx1GQH7aEeuMgj2lPPk4em3ANc25Izj9
mfjpQtu4yrhw5xh4vkGan2+gPGkuj+c5pPl5Ds5Lms8LcSCS1K4covyjbyyP
hzji23vpdo3GRByH2V/RZOixt73te1SgPPh/8/iMeY3w8hpeBexOm9s9jB5j
z3/KGmsOpS3j/JX1K9rcr9D/iYD/E57/Aw9UgAfK4wHztVfHrR9NiiL5/NDm
/KRSOKd69FBxbrvvnhzO2j0nufOw9v/FWbuvaXVr5v+QJ83lUR/C0wf8mQj4
M+H7M+A8v6WK0jicQr3G1Zzo+I6TBzxVyc+j3RuuTgZ/8JPr7LrEPJiPk+Y4
1GPRZIFn7pWSRq5/gTq8eR2LdS9tXvdiHqfN8zjWvTQyem7m/jFc3QvxeXvY
50kHEEd9KF+f3Qt+Nw7/64exS7MDYnsHIL6VwcmXqO/GfoMC+LwRAd5Ic94q
kLddadfvje0D9VsJ4jWt+qlx9RXKEwF50lwecBfy9rva6jWDQhCH+kGzKE5D
sxf3/A+c+7XwKDz+Xxz8LWRLknyOKvccGuTN4CNDOzWt4HiGeQ+t0H7a7h+/
dSG7XAxu3/8D//cQz0Vp83PRCgL1bcwgmdf6+txzQYpMfUtPql28L3Ofe26K
Pdel2y5fqFnUnTt/2ym1lws1G79iTmsNwOsJez5Ma94kbzi/hDuX625UGjT6
r91335P94WTKnVt2ZXCyfW4YMc8Ff66hO5jxyVnjtaHzvUL4epLmeuK6SPN1
oZ6kuZ64LtJ8Xagn4ekJ6yLN11VBXXMv6w38K29XFq2SvpDrZ8Eumknbjh4c
EIj2YuKSPTGwWj6ph0I4xmHGXvZEV72duDviOfS0TP9fin/xE07LenL7Asa3
J/HrvOdxeCriK4cryTtWeXD+diVDRumvPpbvtyj9x2+x7vqy4EHb//oJ4Fbv
Zh/fcp3/HJ0vPfRZqaXadI43wB/d8e8Tqc9/js6XbJ0sv0VR7SfaF3DR2xEb
FgX/5OtDBPQhAvoQAX1Ic30q0C5LZsTNeJ/I7V/gLbC31w3VLcGoz9u6pk+W
o8/N3nZgsMx/vnckPgNmfFVbkPb1/qFQWQ6vpx6sn2f1Tfoln8n5szq7X+yV
zr6rf43+TGHf/dEe0jvQgOMB+schluEd/vu9Rk6ghULSJWtqdmNVrbErN76z
3P6Repet6ZaVswrrG1F/Kjeq8Ifk/TC1/a62W1UfhHwObKmzSvKeusrHjvIb
Azg+Ad815aPq6/Ucn/1YPPFAUbnKKc6+LE4ahkwZ6uLM6cOOQ2brGQUuaAjm
z0sE5iUC85Lm81bQA++q50VssKZRNiorlhVzeTBT7dwJPR9r2kWr78y5IyKw
ngm9Fy+SvkeotXvdK91PXB3Vmfn7wU4XVi7e+xP+z1cO9S4p05eMY6Wclfbq
nj/Oq/fIWpyWYE3iwobN16nA/4coU7c2spPzFWtS0N5ecX4U1Pk5OP7Mi5dH
dnkA46TSp7Plf0vem3Haybv9a9SnhL59nRcqwZeWvlljjfaqx/fYFdlutzOS
TUGe2em9/bP33bMUJyEO8ldzvHevN0tB/UH+2oeANQoKyYiDfEi0xW7P7BTU
B+QPGH28FdI9GXGQrxjltX9T91Ruvax8yY6ROY6pSYiD/IUOnkeiunPnhiCf
cnxvYOyO/5w7sfKTuw5fPS6U+74e9c8bYx1mxdWT+H9l/19r3x0VVe+EDfaO
HbFir6iAvcWOvWHFggWxK03BgtgLr733ghUVCyIiohFsiApLFaQtS1v6Aiuu
iPrpm8zc38Z3z3e+cz7+4fh4yZ08N5nMTJKZSXvNlF+wriX8vGjI6rqi/QB4
r1CH2X543k9PD9qZxert4vOAL3B1Ti/Yi/EKbCck7vbr0vhPiMPz+7wdmlh0
wvg8Pj9ZMcTFIxH31/D5Fo+njn16Bfeb8PlshwmNaBzu1+PzjvU0k3Jb474V
Pl+tW8/CAZm4v4nPnygu9K70AXANPu/y6cj4Fg1xnxSfX1JtW+XN88C/KMPn
q1Sw/KkX/wFxeF7TWO4+1xP0WxnmfR9RfY91SF/43hrEE5sM6H/9DOBqxD/c
dDvRVgO4CvFK++aNLY/nXpSIJwzuueiJC8YVEe9hlb35h51ktwPuvX/u0Nt1
U/C7A/6A1bPG7w74u8q5c5vgeJbqb2efe7F2nLcU9wD8WW71pXOscf8L8c8X
O+2KMZe+F+BWjbx3Oc+VvgvgT+cuS4+K/4g8A54SNHub5o2kHyAP5aQuMkW/
AolnwL8VFjXQQ37UiJtEf+i2oTruLyC+o+b6bQM8cD8C8dLY+tn1O+B5LcRr
RR73e+Qk7S8Afjl0p3n7ManIM+A7WX125BnwujcGG77eKsXTAb80e3abkY4J
yDPgn06fVnsmSzwDHtAoY/2YYNzvRnz6gC6/Ks+Xxjngr+aETdQfg+MW8bAP
+4Nmlb5BniF/536b+2W9j6Ugz4AfNwyosXkEnntEPPzZSsOhDfG8H+IJl5cP
za+O59wkPO/8pZzmeI4L8RBnj6SrLTKQZ8BX9IjrGX4yA3kG/Ialmf3Hh+nI
M+BK5/qb6vpL8TfAW7nm+5Tvn4Q8A27/7Oj0zVckngEP9P81+duCCOQZ8HZ5
aU/HFqC9J9VFT5utCO79FnkG/N3gu909K7xEniEfrWzR3NBKjfG8qFQX+HXN
nLrZEs+At5jzwyA2T+IZcNeF/VP6DcP9X8SnDzO8vNxQOicDeOWSVuGtm0v7
8oDXPnH77WIviR/A9aNmJ2Wm4jkKxJO2NpkRMQTvyyC+pdZETQvrN8gP4OUm
D5oRMiAQ+QE83ip74QjXp8gP1nn5dMHHYa3ED+DBCQYerhNxfxBxrx/7z6bM
x/1ZxAtk64zGRUnjBOvSt7K33HpXOtcBuDGvDwI8AJ7vMNxx7HfJfgbc6MiJ
vd5ZgcgD4J6HF40zzvNDHgCnT5OcDh/yRh6wjuf8nCpD9L1QTsizbTdsRaf0
xs8DQE5/jjstqOMV8vJgAMgJdXIrnfyp/LVhaQDwCXUqBs8uLTfYScprB3i1
WXbVwsZCnTWp7qf5NdO01jOgnoVU9/MXr/sJcmJdJMYn2KWI19SqJ6JEPJ7x
Ce0jXofxCfIgfoXxCfIjfo3xSYBPwBcwPgHH+phhbN4hD4DvZPMOeQDcmM07
5AHwzWzeQb8Q5/MO+QG8Opt3yA/gfN4hP4Av+JhW1cY6GvkBPJTNO+QH8NVs
3iE/gBdO+nfeIT+Ap7B5h/xAnZZDTP8jP4CfZPof+QE8mul/5AfwFKb/kR/A
k5n+Bx4Qf8/0P/CG+Eqm/5FPwF98MbIa+k6BfALehul55BNwB6bnkU/AKdPz
yCfgzZieRz4BD2d6HvkE/DXT88gn5GWczOwW5BPwMma3IJ+AmzK7BfkEfBez
W5BPwLndgnwCXpvZLcgn4NxuAXtXD3ButyDPgNdhdgvyDPgVZrcgz4DHM7sF
eQacMrsFeQZ8BrNbkGfAud2CPAMezewW5BnqOYxkdjjyDHgys8ORZ8BDmR2O
PANejdnhyDPgKcwOR54B78PscOQZcB9mhyPPgHM7HHlGeZgdjjwDzu1w5Bnw
J8wOR54Bj2F2OPIM+AxmhyPPgD9mdjjyDLic2eHIM+QNzWN+OvIM+GHmjyPP
gH9kfjfyDHgJ86+RZ8B3MT8aeQac+8vIM+AVmV+MPAPO/VzkGXBr5uciz4C7
M38WeQa8CfNbkWfA7Zh/ijwDfoz5ocgz4IuZv4k8A/6D+ZXIM+/G4B8t3b/2
PJOIPAPO4yHIM+A87oE8A87jG8gz4DyOgTwDzuMVyDO2z+ISyDPgPP6APAPO
4w/IM+A8noA8A87jBsgz4Dw+gDwDzuMAyDPg3N8X+CyjlczX2uXEgH2roW14
3l/DYStiX7aW4kij/sBtftDWnpXeNLeQ4kW83hQlrxpuSuoGuJIe/rehn7SC
08+RkW+lcyCPeF7V2qpNxz7/lM57fP73u/+in3qOUKZEgt+npwf5vw2FeA7D
v1Mjs/kHkoZK8ZnWXH57e0ul5xO8J8vrw/yg43P0/FN7SPEWkD/x2uttzZMk
//EQlz+jOGHVwTeSn+7D5S8uUdTvkYJxEgr1ppT27zrVaif54/DbKbfHgWUr
pLgH41lDfVdGLx3pIcU9GM/faKm775NNAVKc7d/X+n6jhiHPAw9el+Jph3k+
2rrJaWl7xmMcg+evLaUegfqKZ3ifSE/vM4/bWAnxrs9c/k4nHO+O2CrFPRj9
X+ky/0BD11ZS3KM1lz9sadqyIakSnyC/T53mURX0pbjHSi7/njNBikZ7JT4P
cfkLAtu125cJfhPo21LqNriJocUSMb5URKuYqMoNSZB4hvzT602jqx8fLcU9
4Pf8MVvelvNJQZ4Z/2p6syhJXVhdinv8C7f5Qu/P7HGik7l0zm0Vz++77MrJ
KZG/pPjSv4+PLqGrJtwI7Tddii/5QtxJiC/5cvlnZpS49xwkxT3iufyGh4ML
LH0wvxPnv5gGXTze+/o8yR8H+f0ChvdL+J+4xygu/+BT1ZNepEtxj5Vc/nZz
lxXFd5DiS4e4/LLQmg0CV0rxpfb/tp9LfTXrwxpvl+Iea3g+b5c1Q+sOaiL5
46yOVj6t+2u40ZVXUnwJfhcbXd390RnPD3P+VdSyeQerknp4fpvzX0gb5238
mWKRhjyz/MqF1CLOfIivjxRfOsLjNruE+FIbLv+IVbart0+U4h6ruPxn1v/o
29Ec49X8u+TTtXeD3u8bJvHM+C+gQ2/ddkhMkuIeKL/+1/EJvcKQ51Fc/h2R
zYd1HxOCPK/k8jdv2Sixwg4pvpT074tT6bsFcV8zqkt+PatXkEYnvVmTK38r
8cx4SKeBO1pfun5Hinsw/jOoak6CY3aIFF+C35uNRi+61wHjSHy8pdLqdx98
c1kq3R9sw9/7JOW8ssVsKe6xkr93vupE2FUjab778vd6HF6dYnNPhvww3jKp
xZcndY6ex30iroezqO/gY7f7y18L4zCbxuR0K6xtH4T8dPpXnii6ybJa86Yr
JH5YPYoYWrFS+W9T+khxD1YXIo6umnv0WGBfKe7B9EM8TQv7OerwyXRhnETR
sjr9/c6mS/f+fHn7BrwuM/Bgwdv/kVWrtOgb3hfj+jOe2kZ/XFoUG4w8rPiX
t0Q6V1639s2+L5EHlmc9mZo4hTWwb0eRB9Z+Cj0ji2x8vrU/ymn3r6Ae9HzJ
3lOWAWEo5xGeL/AJq2uPcob+K89TGvfdfZLx+sfIp/rf94aRPY8jvd03Sv4+
q2P7njzYcTZ330z0j/D3zqCFu7MXSXGMeP481HGG9z75l4Y3ZFrTmaMamYJ/
reJyBpEhvP4pyMPqWKYQ25x7WeXaSvJwfkjugdwXYeWkOAznkzw3a97yYiMp
DsPkiScmeYryc/ZLcZjRvP3U9M1U/l6KM8DvytXMxrUaKfnFa3j7Yf4JhUGP
IlB+Pn7IlkFpzkemgJ+r5nUJ4n777/FNa/ehaHfx8Ul2Z/1T81HqI+gvr9sQ
RRROjU4f9rmHPBxk45+ctO0ROcNDijPw+UI+NLSqfn+JFGfg84uYHR+523GG
FGfg85GsvPHu3qAdUpyB6b104mO4Mul6TSlucIS/Nzr2drXz49Ff5rxlkYLX
i0OcgiV+4Lf/zN23FHLJ/uf6h1TJbn7ONVKG/HB9RSwrbfCIvR+M/HD9Rup8
qXhgxrEg5IfVY0klbypkpqy9GoD8cP1J2p+qVHumnsQP17ek8ZmVtQd7SHED
rp9JwVG1idFcKW7A9TmxO04Gzu2Vivxw/U923XTvXs0ceIN1P488nxtwymUc
jivefi5507Fzh6EmEp98nSL5g56194yVC3wWki7W4y4ab0xEHkHOmJvL3c6S
WOQTfg/o2G+W7VjJzufrLFlvM3Klm0so8snXZVJ/dY2C072Dkc92XM51ua0b
/twgxmFKyMFqS8mrcVJ8gNsJxDph1og676T4ALcryDnzDz/PTUxBPrkdQjKu
a2LHJ0nxAW63kPaBDR5fWYXxKD5Pi0nCXmVacjrGVTj/RSS95oAbJytJcRi+
vpMdQhyG211kyF63df2WJCHP3E4jDkssbw2yj0eeuV1HwjMM2s6XS/EBkD/5
+/vXw/8nPgC/7QIibjz/JMVhuJ1JZswNG1paJsVhuF1KMl7Edzs8FeNgPO5R
Sm6EJJbP7SDFB7jdS2wswmhYohQf4HYy2XRj1fxno6U4DLerSXkT2x8pF6X4
ALfDyfjtZg1/ZUjxAW63k8EVjIbVqCbFYbidTxRTLy8fnIr+J9irf8VhuB9B
fuUXHHutlOID3O8gNY/br2/oL8UHuJ9CqvTfNDqmhcQzyH/icoXyz6dLPHM/
iCy2T5m++JLot2pI9+uv3ryZEoo8cz+LzD5vXFKragjyzOu+kqtDnYLNX0nx
AV7flQzY/6Jdk0FJyDOrP/OT9EmyKPa6L8UHeH0q0qByk4IrNZORZzZ+fpBv
la+4bxmajDxzf5mUO19vl4mpFIdh/H8nARUc4mPuSnEY7n+RmUIcJpHL72rk
7v3ulxQf8OPypzd+rzk5LhZ5Bvlb3T1edcM4SQ+D/JvlWzL2tZB45nWViV/X
Mb18ciWeeZ0fMj/o1f49nmHYL67/6VBb9bNljWG/TE67cPtwxaXYhq82YdxE
j83rHOop7D+e4XZdFFtf8HmGK+jmARc6dP8u3UeYzN+bx9YdfC/8njbkQJnp
lmz89xtupy0wqNdiyUZsh+uZ93TD6hEelnskPILbS+Nj96s7xEn5HOKY3UId
md2C+FFmR5EX558513P2RX64fUgWsvciruJ2S+q3jZ3CLbKFcZJGVjPeEB/C
19kRjGdB7ynINsYPjpNIvj4aMLsdn2d4DvFi/OP4acrf68fseXG+UD5f0P6M
5XhYm5xX532k8x4V+N8llrUy2xz5HvmE/cqy3usXDd8KfIJfnE2fhpajt6Zk
4neHOnKnJjyyHTwU8xliO/fsRuw1MMb7BVjX9EhEraCjY9KwHXh+q9b4UfL6
w0r6jNkniLtxOzyO2XWAc382kfoetiyv2oH5zegMbucvHdWzd5N70viHeuZL
vYpvONbG93J/5A1N33jfIveU1E69x8wOP2/WOGWpLe47YzvVVa/DL9WW7qHA
vmdXD09a8DAH+wvPBxz2DWqrJ50zh+ejXplaX1hdhLzB83Pbnu1WZCLNU3i+
Q90O5YI/wT2IMlqNt3e4wfR95zdKflYxn0cnTbI6LJol+VkRvL93Hht0mGSD
93zpFT5fLth3d0tZKNnn3sz+p22Lkmd+u4P5zXi+9CDSiuGobyN5O5w3xM9w
/6L9GiWdfBH3EzHPvLV7eN9HLfGeCB+H3mQCm+84755y/4XrB5xH/13nRYZ5
8vsYPFpSq0y6bw64t36vJ6+m43lyAv2dy/wd5Lkxt/8frIlJ27Zc8nducX1y
3CbdqbSX5O/05/7FMHOrvWW9JD7f/6e/o+T+QhxZzsYt4tbcr3nMxjnyAPvC
Xdh4Qx7EPPDAMzwfy8Yb6iV4viXjB9uB583YeEO9BM9vYrzhutaby1/E/Gt8
byTvb202X1B+2Lf9xfSPoA/jyRs2XwT9GU9s2LzA53G/W0vfyvH5M0/nO/ys
LcX/efyEPDz78ODsXjkCP9kkgOk9bN+b+0cXmN5DnK+bxFNLb8u43s4lg1+1
k9vZKAQ5i8guLXtYSWy4nzWbxWdQz5dxO4TH+dGOgt8pTJ/jv7n+J6FM/wvP
6w3m5wCxfY6/4PsyqPdAz8yd5bNyV4KUNxLmS0bEPIdnwzFegeNqDnse+QTe
LPf3nn+xmvR9YX/5trDewfO9FO6bpr+V/ALQhxfYd0T9APK0epOzL62ldE8T
xuee/v1HDD4szVPArz38umfoYmmeAt7V74ZBVVtpnm7Tod8AN8j/ueTSAWk+
At6UyYM8AN4//sDYdbQYcRi3PmzdxPEzi69fsz0G7ohUSHmDm/L1qHteeMVJ
86T4M9hFVeL/N45URj24vjVpZ9j1616Jh5f/GS9S8+/1hqwsXjNBf1Ea4mk8
7mQ3wLRlXyuJnyP/yQ/w9ve5mhO8/S6qPQVdD0t+91yu3/p3sNpu6iqNHx7/
of0m/QqpPAjut8qoK1/3p74bsuuefgHiPXg80GR9ufX6t6V1djTns93VaGXR
e+ne4mTefiKLLyG+irdvzuTB9deDz4u2Wusv6IF4+kJrfZdze0ZOl3ZuMKpt
orQvA+PFRhuH9Y5aaNm30v3Bws32c+XlpPuMMXwdd7po+vV4ZQmv1JbFG1sP
LL+uex+JnwQeVyw1LH61De9fg70aQU21+iUjtfnf7WPxQ8R9+XsHsO8otPPX
+sv75UEun6m7IORSPn7fc9xOKGbyIC7n462E9Rdx/l7izPqL+gTsEGG9I935
e4ewuCvinAdiwOaRsG5GkP7CejeF2yGWLE6LONgnHlo4xJeiiDkbh4j35euj
CRuHiA/hcc6hbJwjzschsWbjHOXk34t005JTTw/sihBh3azP5fnB4uSI83lB
FjI9g+1AHdpfq5t6XpoN46qM642npE3H9hbNT0j6ZCHn4fvb5p0Cl6civu0/
cTWOhxGjd+xvMF+Kc5bx7x5SLsdk0Yf/WUf4vDAwbHs2vA/OLwrfZZRgH0J8
e6OWfSjD+jz+ZscTHp6U7hG858/3SOtRTf9ImcCzgu7U8lP09HL4fPcX5jv4
s4209h3k5Du3w51ZvB1x8HOXaeEymsPxB5uO7r/Ut1h473valMmJ89GB82DP
+oXjE+xkK604v5xc5/ZqBSYn4uAX19TC9fTucrzSmn/HA/IM9tVK5k8hDu0l
C340b5/aCP4+8LNR8PdBzsVafjrYpQqyV8veQz1MXmmNfz09qBOrvn9ZOeF4
Po5nsB92MjsB8fJ8nW3JxjnHNfj8dWY/IB7ExxUf5xxX4/MmzK5APJXr4YvM
z0JcyeYFHb5sZOjV/zn3C+1o+19KxGswOwSfP/Kfz8sIjB9iseHg3INSXjLQ
n+219neUaOffZvYe4kF8/pbrGuf9ddhZnKfg709k9h6OZ9bfVPoxt7vVwwk5
iPN9DZq+3zy9Z4K0vsB87MXkxO+o4fGZX+w7ot7YwnlzWFDd9cUvKR8azIs3
35pETDgr6SuH/9RLMsQrMD0jrC/ewvqiJgquD0NfTA5b0NQD8SN8nXq9clmi
UwnsE2nILd5OP9ux5xc9PIz4Q97fmJrbTds63wH7nGzkPDf47tDkRd5GxGO5
nmzaxtTA3ssT9SrIaZejKmy1SLLTAFe3nuU1/oRkxwJe99q2JlN6SXYs4GO1
9Kqa1uXyDNfS2yrUw8VC+6348x8+lb2KKS/5s9s4/lELB33uQZaMjdnR1jwL
vxfgljfb+3RZJa0jgGuvIyoctz21xrMa8TsB9YMWmHsi/4DXXDV0ZmqwB/IM
eOUqcoOAaedxnAAPW7TsGT29Kf85TlSon2u+LAj/3gvbp/F83OZm3qo276Ko
Z0R9gvuwdLhWXEJNLnJ7bJD++r5m0x5AO3wf+T21MS8/9po7nMMvIyVs/NC6
hd5yWaVb2A69WO1C1X2H6afDJrY1PrtgO1tGfPM99htPrCdXNR/lgO0Mz8kM
a7H/ML2TNWDu6jkrUc58Xn/cjdcfh/bNCjXr/9wPHTHpWu27ac7If3+Ovxu/
Pm/2SXvkH54/Fz806fj4FcjzVlbPXbAz1dRwmpfHn3ug3omjjlyfJ51Lgbrn
Y79a/qkPjt/x11T2/Hp6s5f7c4hbltEfHF+5e2/mrcvSd4F633aKKp1brZb0
fD1er3yBk0PX7fOkefGQy1nx2blx6zGfoYrc43jC5M0fw9y24nuhDrvjjfi4
i5elfU+o566SzS/v5ibtY8LzJvThqmCvXOTnMX9eexwqsa76r/qFoQFZuJ9O
83i/wnn9dHi+CudT0dPKeE625B9BHpKnziH7j4zRewE4z1tLtPPW4vNE+3k9
vdc3qtQ1+ucwPWr7MHJpKNzD1dPz/k8/Av0LoV96etuFupaA9xXqKgJeXqgz
+P+rHagPB9/zopVB9et7ojGvE+ArTg2waWwehXXaAJ/asqRGm+afsN4Y4O3j
4nat+hmLdbMAt3ZPt71qGo/52gB/f3yJn7l3IuZtAbxidfteVbrjuVg9wJd/
7zXE3jUF81wA3vL0Gjf/UwrMGwX4ifbNijULUjE/FOAL2jdYqAxNxTolgL97
vsqLZqVivQ3Ar43LcU56k4p1IwC/7FrViWxEHOffJLOG+57nRwl8amicjfWc
NyciBT41tF3p6hvzD8UIfGpol+p3F246IvKpoYPj34SMqCnyqaFXbd5WdK2R
JPCpoc5m35tMeyLyqaH/tLgYFblaIfCpobKlVp/vJqYKfGroqriyyf0+pgl8
amgtXyv/EebpAp8aGja8uGJ6p3SBTw0dvXZTXuPPaQKfGtrRZfeAst/2JOQd
A3zrnYtnF0SLPKtpQvaJuoeaiTyraSsHn/ujIiIEntVUb1iicdsn0QLPapp+
wPlZo+BPAs9qGtI21GTQps8Cz2o67UY/E0U1kWc13fZr69j7/VMEntW057VL
Dt1Ppwo8q+nym22ycvelCzyr6YOGvboPuZkh8Kymx5vf7XsyL0PgWU2LDdbt
/nY5Q+BZTbsO+j6herUMgWc1LRkd6lvBMl3gWU19GjaJuXs8TeBZRRPfXe38
T51IgWcVfWrmmuOfGi7wrKJn7247nbkvSuBZRTc+r/319NYYgWcV3T3T5fVA
EifwrKL5ty65uo0W9YOK3qm4pt+FwyLPKtrR9n65W0bpAs8qSty8PhWpMwWe
VTTJ0+jB8G5ZAs8qemr+zbEb62cJPKvo6KlH9UMmKAWeVbTA6+JN8wmZAs8q
uq6Zrc1jiwyB59+8HYrbaD0pXeBZSY//vDPw9MdwgWclTZjYYNupUJnAs5JO
cS+I+l41UuBZSeu5fyl8eDtK4FlJgyd/bFel1ieBZyW9VtDzdAODeIFnJZ25
/u5W6ibyrKQdnab0u1AlU+BZSa/3ND3wY1mOwLOSvgt0N7rgnivwrKQxtoPT
uj7IEXhW0gNtTyuGG2cLPCtpn8zJnvWOKgWelfT+kD32dt0yBZ6VdOebgcsb
l4o8y2nzpyVpGXNkAs9yGv3yzOQRPcMEnuX0VL9K2VVJuMCznN4duWj/pskR
As9yuqrVwsrmbyMFnuXU37Tx8gu3YwSef8tjv7HD6VnJAs9y2ulwBLnaIFvg
+fd77Ydmnc9TCTzLqXzvI+NJQSqBZzk9fvz5h4Vn8gWe5XTdvcs+RsocgWc5
dXcte37tcZbAs5xWazgxLEQt8iynV2ooivruzBB4ltELEZH3xl77KPApo6vP
WL05ejZU4FNGPTaNGFbNMkzgU0YLKieW158TJvApowPOqQc1Cfwo8Cmjr16T
lkvqfBT4lNEJWYpL09MKBD5ltGHrO0+C6msEPmXUsc/IG4ZPiwU+ZfT79dwG
Nz1UAp8yqjQM9NKzzhP4lNG1w+517Xg8W+BTRhdV2fn2xTalwKeM6qm6Ha2Y
kSGMTxn5Tp7obbr+QZBfT8+moOeZ4d30XmjLr6cXZJVbzcLliyC/nl5zC4c5
d8cVivOC6JgXJOa/5wXRMS8IzAthvBEd443oGG9Ex3gj/z3elESH/iQ69CfR
oT+JDv1JdOhPokN/kg0LqocNH5Yi6kMy4kCbHqlP/9KHRIc+JDr0IdGhD4kO
fUj+Wx+qiI71nehY34mO9Z3oWN+JjvWd6FjfiY71nXT47/Wd6FjfiY71nehY
34mO9Z3oWN+JjvWd/Pf6riY67FWiw14lOuxVosNeJTrsVaLDXiU67FWiw14l
OuxVosNeJTrsVaLDXiU67FWiw14l/22vaogO/4vo8L+IDv+L6PC/iA7/i+jw
v4gO/4vo8L+IDv+L6PC/iA7/i+jwv4gO/4vo8L/If/tfZQTiBkJ8gOiIDxAd
8QGiIz5AdMQHiI74ANERHyA64gNER3yA6IgPEB3xAaIjPkAgPqDNZxnpWj6/
3xzDVKyrx3H6xGJ++Jj8GKwPB/iD7Og+N97GYp0zwA/u3Xjoe/FnrNcFuOGK
0aNrrknEOlWAH31p9WVxTTkdzPMJAm45eWnhsjkpWN8IcNko++yb41KxDhDg
lbodbX0/MFWqf8PxeotvHzVLS8X6LoAPXn9v3eW3qVinBPD81outb21JxXob
gI/pHrV2b6tUrIfHxyG9onxYJ6tRLK3N67oB/mpUqqvG9TPWJwN8fEpC5ZtL
E7EuF+Ceb2JHkgVyOp/nTwR876AVJXpGCs6DFNev2TnrXa5hOtb1Afx+7Pnw
sDbpWLcGcHJk8arPqWlYfwXwzpX6tqm+Ng3riADuEf5cf05BKv/usO+nple7
DfnitisO66sBbtixJK57YgLldZ4Qf96i5/tuB+SY/xFwRbyXrVWWAusPAV71
m6FrD88MrK8DePdhzpcPmWRgnRjAB/kNv7pvZzrv10/Ebbqt+rE5NI3Lj3Vv
6O7HNXymL4zHOmeA95tgkrlihhzrHAC+4a33vvzf4wrq+gAecyRy5dTbmVif
BvCCTsMW+D7IwDorgFtdrNHcxj8d69YwXElXywa1qFmcifVXAD8c8PBY0K0M
rL/CcDk9YfD05fEDmRTqcTJcRp5X16T/qVMG9SYBX9U/PtV/VyjUE0J8bNmp
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
0Eb8/Ay0C0xE7Jm/w+uz/ov/A7M9vQM=
   "], {{
     {RGBColor[0.880722, 0.611041, 0.142051], EdgeForm[None], Specularity[
       GrayLevel[1], 3], 
      StyleBox[GraphicsGroup3DBox[
        TagBox[{Polygon3DBox[CompressedData["
1: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
zyla9x8OPrpoXTiqzPrkcPoPpj6iaF0+TDKgaN05vMx8vB99uiXm+/ouB4m3
FK1HR0reFs0VJoGPK1pPTwBPL5orjADPLZqLTBT/L1gWtC9Y10lGDdH5F6el
z0H0+TqcnY7UexT87bOCeXon2lsntiF6gDsktiG6g9sntjO6gdtJ5jLmI4zZ
hHvf5/oA2puIFxYsKxoXzLs70t6K+o7U3/1U6mLBsqhZwVyyg7gt9erU++oU
6q8ls8HvS6/Rr7b0ms4+5Sz6V03NF2+gXBeb1+9Pe2OdZ66bU34O/dR/Nu1V
mPO+XN8p+0KymfYzKTN1nqgvov43M58XfxCnmAgeSl3CHH4Uf+Pegwq+v3zB
51Uc7PtgK8pm3An3viT2PH7RN6bfHeDu1HV4xuW0LZQ8AvOYaC/wG4xbG3wC
9Vu57RPt2+Po82tobxv4W0fqWpQieBPtEbpmDfgr7RvaT44sW0aBF4izgYeD
Z0fWiVvE+yirKFVy8wTZetIhy4Ie+VAchPI8ZQT3zomsB7/keitlYVj7jynD
KHMlt3n+Msmz3OdaduI3sTmo+OeepR73NHHk2PNYFfipbJYRYbzvwpjrKNti
v1t57t0e3vE7ynGMv13yrGAsnV5S4jFfDHbbecFu2p3ZhsvpeyltT1GmiFPl
/r7ikHrmhvDci2Ov87zIa/BCWAfN5fswn0LuMV5gDqdTMq1pal0ouSS7WPaE
7Ao9+6xgY8i+GM08FlJfl/vMahyNpz7nhf5dglydqv3B/46l3pe+D4sjx+b3
0yhdg05fKx5BqUm5QHMSP5csE1+mzOC6J/cvAh9AfSz1kNh7qIzxp+ms0L6Y
63GxbYOt0gGaG+P8JN8HbfdIL+demytz8xjxmZrUx0g2SdaxB77hf8fT5wrp
ytzn7Bbq8fStRTkhnDedu3epP4q9t7Sv3kp9pn9IzbfEu2QD/hD7zF8X9uDG
0F97eXPYS7KJvwn7bX4F76ml1K+xB1pG1t0Vc6/rnpI/Wiv6PEO9jfaTItuq
SwO/uoX7fsy9njfpvsR9HuT/Y7l/H+0J2qvnXuNXJFtoH0l7deoj6LeJ9g3U
r1Iuin1OhrJXa1Ee4HoRdXfKTvDjsXWf3ll68EmdDekyytOxbcmZ9O0U9npr
njFQ51j7KLY+Lke5n3JSbHl6HH07l3j/HkXdtsRrXZN6FOV/4BrUgygXgiuW
eH6a2+s8b77mJVlF2zDKAq735TzWLbGt0Ye6com5by3a65XYThlOvU+JZcru
yO/yEXW5cJZ1putSGpbY1tPY1cP4b6ae1xvUdejToMQ2UZybC7xIvTu1PJFc
OYz3Hx/Zzkpz61/Za/LllOfec8WxwfVLbCtJJu0OskfrHtNeGvu8y/egMy/+
HoFnUvUpeK/ezNgjaRtR4u9RLPF7Lgv7TzLrQUp/+r9CfTn9B4CX6DyC5zCn
e6WTOCOv8v/XKHMjy53XKZVD28uhXeMI96O+kvoyzTW2PnkmNldcHvu7fRG5
r+5/iTKLZ50hvVu0nJKcWZ+aR4pPysbXXDXPLJyl9VpPyhiedwp9rpfNFdZI
6yPZKRkqjnUb4/QtsRz6gHHnUT9KnZRaBm9NzRUrxJYvzYLer1QwD0woR9A+
lTGal1j2L0y997XnGzHOwBLvAZ37XbF1zmMVLPdWU/+RmK/2T8xvxRU35La5
pnF9qHy08hcwzktcv5x6rYS35JZDV4kfppYZ96eWO5Ixb+vMBpkg2fBtkPNa
U9lq1ShbpD9iy8AqlAdSf8OzqTfm1pvSn0Mos8DVcu/tnD5nhvlI7z6n54rD
iz/k9sVeIL2fWG7om5wluRH0uPS5ZLvsx68iy3LJqy8j25myNwcWLHckf45M
7aO9UHo5sd/uQb277K6ibft39K0pV4jL5fYd3iu9T5/1XF8mfSh7PDeH+Su3
L+QG8ajEPsLG4DqJ/QjyJ/yb2td4n3R0Yn/P3eCLwa3Bt4HPT+x3WSGdndi3
d4+4SmI/yq3gc2VDFs2fepTZN3ML7ctofy+3j0OcU37f68FnJD4jOh/iZr/T
5+xIyiyKmhasm9+n7cCwP2XLxKnXbRT3fp57XV/O7V8Tx5NtflVs3awzWCiY
Z3zE/6+NLScle1vR3lGY+qbY+kX6tAvX+2sf0//U2LpX3+uY1LryeXHd1PLm
8MTnTHJTMvOo1PJgMu3VCp7zZ4xTueBnfgruUPC8Psnts19E/6MT+8vkN9ul
M8raLRaXkN3K9Vb1Se27kQ/n79S+B+no7fzvvdSc4nzq1wL3Fgc/TzwMfGxq
Xi5+3rXgPj9oLcG7wQfE5r3yea+SbmU+ZQW/18e5bayHxVcT22EPga9JzK3F
seUDkX/3OtpP1xkv2s/7bO44w5gQa5Bvc3VsTqLzJ/w19yyVvKA0C7J5TZDP
K2PrN/kc5Qd+NLYvuEfB6yy5PSUx/3k6Nb9YF2S8eNaK2OsirvhIwPoe+i57
FczL9X3FtfStHwrf+8UwhuTIcfIz6PzzTrdyfRtlW+T53CUdENl2WErdtyAC
ax9vy2Bj3RfksOyMe2LbPHMp91J+i8xhNT99p0cCnhf6yz6JI7etCH30PfRd
ZD9q3e6mvB/2t/Z5i4LPjM6ObEb52mSzy+dZLuz5igXvFa2HOJXmc2f8n1vq
PxtU7zIr8RnSWZLP4bKAtXcvoFwdW5fp3NwU1mRcwFXDebox4CUMXJdxe5b5
fOnbSEevCN9J73VgwRzz/KK5882x+fM7qddjZWo/iPwh8q8fw55qR9lEn0mx
97b46/WxOYnsI+mHG8Iek176OFyLB1wf+khHLQ/v8rX0R+CH48McdL4kMyQ7
5D/Reb88/n//hWrpU51rrUunYPeNBTcMPvxu4DYFn3mtn3Tr+qDrX0vNB68N
ckmyYgB1/XD+9Dz1k46+JjZX1Le4InwXzUV9JH+OD3MTvir0U5+NqbGepbhD
d3Av8eoy2yyyXf4qs69qGfhV1rlFZN+UZEzP8H31jXQGJENk76td9oJsD51B
ncVjy8yjxKfkz+wa1jZJ/axxieNi0/h2jUu9j/qHPkeX+VzrfHcK6ylOJNtI
elSyXvafONiw8C2Hhe8re1N8ahv1jNhr/g3tJ5fZ1pbN3SZ8C3EJHSytu2yM
awPW95UPpA/49tQcuIt4T6l91fL5y/eve3uH/pIl+jbSTQvLbDPKdrwmtItT
yYcje1E27glltrtlf4uHyAbR3pae0piyf+WDEfcS70oCli9uQZl9BfIZ9Arf
UWsvfjwivO9L8K3N0onU//CM1eC/xaFin2e9b5R67JGJfd3iV+JZ8vno/7K9
htDnFfA99Lk6dfxN49SjbhRbRihupzja3Ynj1VeDF4N3yOakz8O5+c6g2Dr0
uvQ/qh7NTi27JO+b6rymjv1dm1oOSR61iB3fVtxE8RP54QfH5uVreLeN9F9b
wTxWMZbKpbbxZROI086KvbZaE3Fs+R/kh5hRZn+C/Aqdwr6STSjbrTaTa1Jq
e1A6SD4b6YMhYf5TY9txenb9cE5ln0rX6x1lmx8Zu119KoZ7te8V75Ld+Gnq
uIDGuTu1XBSXOyVxHEMxNcXWFD+/hvYlieMt+4Fry29OuQR8If/vnptHKXZ8
UG79q3hrN/D/Isfs/s4cs+4Y4jNNNffEPvi9tA6JffxVtZcT+5TF1TsHXztL
HJVPHFvrzfrUKLXfvTztJYn97srFiBLHDappe8k3mZtzDgyxo2bgBoljQZIt
+yX2zTcA75s4zlMfXDNxLGIfcDEx123AmtRLzW/lDxS37BD4reJ3HQMfVkyw
E/jKyLy1b25eOjjEo5qDG8qnm5vTKl76T+Y4fqcQy2oIrkXdJzd3VQ7AweCb
I8fQD8nNgeVzHh784fqm5XL7vRWDUyyxl+zqUsdJqtBeLnGcpLLEB/VLwQ+5
u4LjHnuACzqPuW0Q5XLoHIgjyLcoO7opYzYtdYylIm1VE8dGeIWoLHEs6EBw
28Q5IIozKt4ouSRemYXcjavoc1ri2ItEYaXE/hzp0gqljtWIylROnD+imKZi
m5I/shX2KDo+k+qIJD6H2u/PVLAMlx1ToWjbXT5DySfFN3T2d9GnfO4YhOKq
/52PcEZeDrLrlQqOTSXaVsEG0TddlJgbS8ZXLFrX/MeLi5bz4sWlRfNdcQpx
+Pri8ZFzZt7NnXvwIwtWLzf3Vj7Mutx+Y/mPxYXrBfnWNvbeE59exZgTY/uU
lCvRA3xbaj0hfSFOJftUukn5HrJF1F92jeybCQHLBpCely9IfgbJ4WJuf7V8
6fL/z47NPySXxafGBf27MugL+a4Ui5TOlf9PH0I20q2p9YH0worUeRn9wHel
ljWSOa2D3JoaZJTyR/amzhPzHT1XvGsK474ROX9J+Ud3gC9KnAd0u+RPYu4/
OfaZfDg1fig1FxMn05o2DFjcbF3gIeIj8gnIDyB/QK3wXHEt5U8oj0I657Dc
+mVQ4EhTgv4aR/tLkXOx9g5rq7VYm5p3yl+o+KyeKb+mcmpagxsltpXEYTal
3ienR/YdKtYnP2HFUucsyOZQvoN0nHSUdJP8q5K7ixWLpl+BDd2w1D5V2YN7
545L16f/ZalzdprQXjdxTFu+mS3SLak57rOpdeWVmkfROld6Vu8ueae9dzn1
CPqsjZyHNjycJ+k1fVPxC/mGdyfmqa+H9RwX9k+a2rZ5IjUXEyeTL7p/wOJd
2g9HhnblFtXVuwQZVQ+8j2Sn9lts+0I2kXSm/KmKKcguli9ZZ0F+P/n/FBOp
BX4yc8xI936Y2t7UOVDMZ2Xg9puDPVo3th9HOXcrqa/kub1zY+WPXUH7peCb
qefE9udIXkhYyW+gvCatfZvYPhrFk3R2L03tBxIn3xLZRy4bX75C5fQ9Sn19
4n2m/JnrEsf7O4V1EwcVF32R+t+w946mfl02vM5l5ly/NZpD4Evaw+Nz+4k0
F8WXtT+0T+SLvjHsvf9s88yxS/nEfs6ct6acjXpB7p2a2Kcj3869QQc2DGdK
OSJac629cj1k38n+lF0ojtUhtp0qe7U9ZU7itdK+ujms56zUPg3xa/njxN3a
xX6euK5444YgpySv5G+RfSgZqfMun5d8X/LFyUd2Tlgr+ddk58tfp7ibYn3i
fspB0/e+ifri1PJRMUTlBi6n/azE+0P75JLU8llzXFD0+us86lw2DHaWYi4D
cn9H5Sj2otwfOc9QuvuByHmJxwS9IL+IdL84wAU8ayD/eyxyjuXw3N9R+Z/9
c+8H9VVOqMa8InFMUDpZe1y5Olr3G1LbpbK9FBNXrpfiWtenzi+QXbk8tT8x
DzL5nLAvJasVT5VtJx++cpSUk6bcNMViywfZLt+X7IDJqeOPc3Vf0b4y+XUV
51UO5k30OSdx3uWN4LMT+6bkR5I/aRmletBf8stpzpr7b4Hfy06XfFOsQPky
yvuoSZ8qiWPTiiM3TSyXtLaKp4/M7atUHtGo3H4kxd+H5vYrKlY+JLevUjFx
8XDl4PQv2padF/aY5FatoO8SfbPIeTLK4T0XPC/4JWTPyJaWD0H+kZpBZ0lO
KhZfI/b7Hh/2mfbbjNS5E1q/3jx3Wu7cOeVLPJ75HZWLshpcI3LOyRPgfSPn
rogDSEZpTz6WmaMqX2VN2MPay7LvlE80iPGn5s67Uw7DI/SvHjmn5eHM3Fu5
N6Nz+9OUd6pYvXK6lNs1OLd/VXkIr2eWw4rhyy4SL9T+Uxxf/XdllrOSt8q9
Ub7bEvBM+h+eO0dROV3vZvb9Ks92TRhTMl66d3bQ+8o1lM+merCVZwVd8w79
G0XOKVUeh/yTMxLnbckmnZ4493mZ1kp6NrPuU16xdIdycs9T3h/trSLnQk/K
nYuovIix4axJBg8C3xU5x0MyVLJUuWry2SpeJt/ax5l1unKnP8u8J7U3J+bO
z1QOxoTcOZDK/RiT24ep3NRPM+chKAdbXGlO0CPK4VHsV35L5fDo/CrXcnDB
+7Bq7rxy2V+ywzoHO0L89FvGHBg5F2sLeEDkfK0uufmS8qWb57aRlX/eLvc5
VY56s9ycXLnoyh2TD+EocfncvEt54F0pd0bOqVZ+xGnSHdLVXJ8XOd9MOewX
g09OHPcU4VaO9BGJfSDiJNMS6yOdBeVqTqJPA856zdxjKsdpc+Y8KOXL1cl9
7pSbJ3+0vrvyyhpSLoqcp9Eo95oox1I5+GqfL5s193yU81M7995Q/l7b3HJJ
+fZtcst85e23yG3zKn9ecS7pFMVFlHuleMrExH5Z+Yblm5WfR34PxXSUl3NI
ZD65KrM9q9ww5QNJtyrvSjE3xfPkJ/oh+BKVp6ZcOcWAJiXOMdRaHQl+KLM9
q3yzWpRzIuccyo5QrqZiMQ9mtu+Ue/ZH5jxA5eYtDzJfsXZxSnFLxTefCrJX
Mrh9brtSfpKWlGsj/07hgcx2ovLBpufOxVVelnI4J/C96pXa7yXdKt/Xkbnz
eJXH9Sf3joucN7gis36Rnjkid36v8sSUc6yzrnwA6RydKfmv7g2yRX5g5foo
50c6ZmNmu0m+wQ3grpHzOQ/NHSdS3tTzQb4p/1zf5LTwXd7OnCOnHNHngwxR
7t+ggnNalNsyIjGPFZ8VPxZPVv6JuOsMyS7+/0JmO0U58F+G2KhyJmWzLAm2
w2OB88gfrjwO5WrI7/Z55nwqyYd1FTy39RXMv3WvYgfSO4sDZ1bOgmKsCwPH
nBnkg2S43H/Kt5fv9Fauh1dyXsTCsFe7hX1ZJezNGUF+Kpe2jeRVYjku2VuD
ekfmnDflPP8FPjRynvP+ueOAymFWnqB0ULXE+ZvSTXvKpqHP+ZHz6pUrKpnT
U/6TIA/1nFa5Y5T6nYU4gWTOlWHvid8pd3oHczyZfdWMl3s5s69GOaJPhd/X
SEeszeyfUZ7nM5n9Nsr/fC6zb0r5os9m9p8oX1Q5mNJH1RPrDuX4KWe4emgX
d3o6M3/WbxnezLw+yvV9K3POpPI2X8rss1Ju6iuZfTjKQRX3Fp8Ur9SZUs6M
4jTKkZ7Iu9TnXb7OnC+n39Q0zs11lRuj3/2IAx/HvVsz58vpNyyyn06ObZ9v
z5xfp5z2dZltIv0m5TvwQZF/F7MeXCfy7zV+y5wrqHz1DzPnmipfWnax/KVX
pf7tkWTIXJ67LXPOnn5r833Yn5JFX2U+d/o90e5wLnQ+vsic1618bMWRFB/i
L/ogcy6r8q43Zc7l0++SZBMrV1V2cYdwLsSbxT2VuyF+2T7YBbI5lW8q+ak8
/EdD+8uRbWrZaIrDKE9Oz9W6f5TZ16Qcb9n3skdk7ys+dnrgb01z2y+yY/4P
gUqmAQ==
           "]], Polygon3DBox[CompressedData["
1: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
i9QnUnjhejoP5uuZXgmPXE9Fzc71fWEl/J5teR5PgCem0PumlqEvjkvh129V
hj45PoW+J8eSa12dQn/fjviTxDdPod9uD34aPDll/RP8FHhSCv12Z/ALrjcp
9MxdwC+Cp6XQK49M4RWP4xzXpfBEXI9cH/6TQgOUz+jRXEX/1BTa6/R8v/39
/jb5sTxZjiIX3qYa3EUNTi1uCttupH+d6y79LvID8KUpuG2nSmiCrkk+b5+7
a5V6sVqXHPaSFLxUfvpnEXq2Oanal5qAuao5rt6vOa65rzmlXrM5krmmOZ5e
dIcicr9ufKMnN4lcx5znwxRehv6KxqHYuUE/YPn60Bfl/vqT3/pNpND1fUc+
oz+sDL+8fwq/uEnWHOSIuzeG3jGbfvMU/tkGZfjZfVP4q21c78EtUvhpehJ6
Zf3qwqs4LoXPod/RtD70vOaV8NK+SbH2ykVdP79MsUa5VqnZv5zCo9ardo56
zHU1xbv9rfyiPmpUHjJPbxK1K3o8zeuC38hz/L1yH/2w5vXhYbnvkLrwtr7h
+luDm6WoZ2kHPpjztU6hr65eRr1LqxT+5Xpl6H29U+i5Q8rQH/uk0F87luEv
rp5Cb/wlBXfV412jPtYX9cWBKfTlkWXoz4NT6NMjytCXB6XQpweXoU+um0Kv
HVOGfjs0hb/7QwouqyfdluP/lII76yGuXh+cVm67AtsrjH+C/T9n/8YUfvAa
4IPAq6bwX825zL1WSaG/yq98Pj4nuZJ6nfpvE7D1LOpl+qttU+jNC1PkihM4
f5v64OBy8Rrb65oFB/V5lCnqDeRx8jk5in6QnEaeId/Qq9ygMXKNj9l2XF6v
/yb2nzxn/1gN70gNUy3T36iXr6fvb/carb1RY/TavYbp1XinvTY1Cb2H4UVo
FWpUegt6EmpXH1ejNmhYEdxeTcvaADUJtS41Tb0PNQK1TjUQtWw9CrURf6O1
FX4j/nY1DbVzNUi1DjUea2PUZNR+Hq2GN9q+CK1AzcraLDUytSyfwaIUnNdn
o+ZjbY6amFqQmqdenTmGucad1agVsGbgmTI0JLV6n6Hakhqt3pCaitqtGode
npqT2oeai9q3OYm5iZqL2rkajVqMnEnudDrtqRQegvn2+eDnUviFekt6bnpv
zrPOt3ra+mPmxPJJeaW58pMpjmV+bJ6s5m++bv78hO9cGbmvvpVaxbMpzrUF
71vn+nj/9G31bz9N4UdZu/BAfofkw20q4UHqRZrTPcz92boauZ61J9ag3E27
ohbbjTvHONd4fTv6bBj3vr+Vdo9coQjP+Z0UtQhuey9Fzq528FGKXH6Ga1Al
NJXX8/47FJGjO9450bnROfR5+tvnYxo3l9f/89235kE/XL1FbtER/GsZmpDa
kDVz+pN6NvIS+cl3ZWg0ajXWJFg/cF0ZMfUFvZ+leT7sJScoQ2/S65TDqC99
W0Z9mXVmM2lvlKEVykHkInIAvb7biuAGcm69SDmCXFy9yNoFcxD1IzmfXt+D
RXDBc1PUQjxahF4kR9f7e6AI7m6Ooxe6pIjc58cyuJQcUb9ZzqAXKoeUS8gZ
9DrlLHIJ69f0ptXQfymDE01PUbMoV/qjjLW+q2t2GZqF2sWYSvhnX5SRG1vj
Zz2hOW/TzEXMb9Ww1LLUJKw/ebwML1jOqjYvJ/I98X2RK8mhrH00h5FbqdG1
yNzjhsy59FrNieRilTLq3+Q26l2l97QSHoheiJxXHiefkwvrx8kd5Zg/mSuV
wV3U6PqX8c747shxny7D45TXOOa3MvJ7vXI5jvn+Y2XU3slR9WK+orWqxJri
2rJpitojNVC1UDmf3r05qVxQzq83pkdiLqDncVnGeiFqptfm5zstH++a/P74
PulJWWs6oQivasMU75v3z1zQNXFxfv9cK10z9TqvKGItdc3Wi3UNdS13zdY7
vaqItVwN/IJ8/Wrjavh6w67JavtyIGsP9IBa5/x/z2qs+XMagwNZW+SaKDdS
LzQ/uDh/L+oD1pItJD6zMTwg74c5q7mrHoDeshxBb0BPQS9Sj0evwZzIWk5z
anOlXilq2fRg9GLkFHrX5rByDecPdXv1e+uj9CP1W835XyhjjXWtNed/qYzn
a25lDUOzMurVzEV853z31FTUVuRwn5TB2a29MOeXy8vpL82/R64vp9F7v6EI
rvNqGVzYnMTvzRphdQf1h+fL4Dx683pkciE9zVF5fdfr1JM2j3LOe6oMjUWt
xTnJuenxzG98J1vRf66MY/ubP6iFfmju9BPtWfo3sO2HIjxA10c1CGtz1RzU
JvTQdk1xTL/fiZlPWNOrHnlAY/ijU6vhz85tDL9yq2r4t/Mag3u4j/uemvm0
HEWuclrmz3ISucnizD93rYYWtTSFlisf1/9Tf9rFZ098U+Krsu41ox1bCR3a
dcb1pk3mz+q55o8tM3+qq486vUk5Hzg65xF6KNYayN+tLVqc1x81r0M8dzW0
sPMzX9ylGtqaa6BroZzM9V8NzHfbb8JvQ76+pBJ8xXzUHMVcxXdI/cJarz51
UdtozZe1kt3qopbSmkk5ZLu6WNNd28fLK+tizb+Athn91eoiP7ioEvzeWrUl
OT+Yz/3fxmfF9WwsP2fbKOLJ9yPXUg2oi1oof/eCxvBfJ8h5GN+K2CZ1Mb8e
VInawIF1UTtpjWBb+k1pN+Y1vSX9xroY67xsrdz6dZFzmLe0rovf4LX7zLrU
Rw2lz6Ri7RxtSl1whA/k/HXBpeXUnmNyXZzTcznGWgLvgb/dmgJzGOsszEHN
bayPd62Rs+hPOF9Y63B2ng/9jf5WPfL6MvwEc2s1WbVZ/SjXPj0JvQnvoffS
e5TK8OitVbYGQX/ImlY9RGvWd2kMT966rx3y+mTNs7XP1hjs2Rjz94l5Pna+
tgZgfOan8nU9/3GZL1sL4De1Vebz+gOTMt+fnedjv0G/Rb9B9f0peb52PjZX
0cPfPc/fevvWNFhbb02EtQ7WFOyUYg50ffMb81vzG9+/MTiinFAP483G0BxP
yOuL64+apH8roYeuVqmn7t8aWFOg1z49z+cX5flZj91adGtm9N710K3tPivP
59ZUWLusR2+thR68tfXWJOjN68Fbi25NuN68Obm1z3r25upqrsfn9UEt1hoB
a4NOzuuJNSfmT5sX4Q+psVpbrcev9qoGa+36dUVos2q2/q2CGqxarpqvtfNq
AmrBar6n5/VHLVhN4Yi8fqk17JbXp+vzeqdGba28GoTatTmpdXZzM584uAzt
UY1RrVHPo1fOb/RC9FSsxVR/1GvpkKJG4ugitHU9EGs7uxThjei5eCyPaX6k
ZqZ25pr0WhkanFqcHFGuuI1rShHazzkp+KJamvr5I2Vo5Grl3j9rl/Vwre1S
79Tb1bPxb1n0gPRy9GetgZZDyiX1bKwdVQ/Sy9FDaprzPfVUPSDzOfNN8y89
JfVU9Vnz0X9qslLUHFirZY2JtePWQNye80n1Y/Vm9SM9CGuBexXhTTiHO5er
cRzYGPzvrBSahLVv1rBYu6pmK1+zhsTafT0Na0usMfJvOfSwrT2yxsi/BRlW
RO2RNUXmz8OLyM+XlZFbmGM4P5k/jPZd9RpS+Kdqb3pAn+f5ZIcUHEQuYr5v
vj4i32+f37wUxzD/cH5ZkGJ+928t1J/Vz9TT1LOt+TGfNX81/7YGyr8NMb+1
Nsr8w5oePRXzC2tw/Nsaa2iszXE++C6FB+RaLD9Qk9YP2qMxaoz8WwVrsKw9
cj5R03XN3q0xagCsTTuliNoA9QX1dvV69Qf9Yf9Gw7Vcb9mc2NzYGqB9G6OG
xNozNSdrS/TD1TjNgcyF1LDVRcwRzRXVNM2592T8Po3BAf7JgyvBDdQHrIGy
5kF/4R4aw/7RlvVX5VuzUtRAmh/+WIu5/Zf8vMyX7gRfWI3vQ49Kzdycw9xD
Dc1aRWtg1NbM2c3d1eO7NwT/2zeFZ+nfjlkTsSz7HeofemCH5vVKb0xNytpA
v2+1KjU5/7bgmCK0OjmKXEUOdXBjaLJqs+Yse2d/T24lhzmoMeaL+Xn+NB9U
A/NvEfTo1Mb06KwtVPPTu2uZ58+T8nqiZ2utfPsivFw1v3l5flUL1CNWz+lQ
hP+hx7cgz+/OT2oCcjb1ziHcj/8Dxmvjfw==
           "]], 
          Polygon3DBox[CompressedData["
1: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
           "]]},
         Annotation[#, "Charting`Private`Tag$3390#1"]& ]],
       Lighting->{{"Ambient", 
          RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]}, {
         "Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{0, 2, 2}]}, {"Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{2, 2, 2}]}, {"Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{2, 0, 2}]}}]}, 
     {RGBColor[0.368417, 0.506779, 0.709798], EdgeForm[None], Specularity[
       GrayLevel[1], 3], 
      StyleBox[GraphicsGroup3DBox[
        TagBox[{Polygon3DBox[CompressedData["
1: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
PBN8DriqZ8mWSOzHyZ+7Kepq6bojkPmSPrum1v/S/Z1Ljh8pjqR4kWJD8ifk
jyieoDWVZPZ15fPeAB3M+BXEe47xb515jSue1D76ztfJH839fRaWrae09kcH
n9v9aZfFfaP9o3NH/oDW83LGtoS5mK93lA1Amweentufl1/fNrP+3je+VyVx
fEQ+7PqJ4z7ybeeD55TsS9RLHHeQb3uk9hLfoRvPyqKvJJ+pWdT/2jsjyrYf
OvPcxsHnckfkh8rP5/rzXD8kWP93gj8/2E6QjpVNfXvJdnXv3N+4l/YZ175W
vAr5GcG2yqPQ/WjvwG8Pf3/wuzr3U/vPlyQ+F1tmPvee0X6JvrB84jH4NWvh
D4s+88WJz9S+if16+feKd1xA6yp9FmxvdKD/g4LP5QfAE+lrE67PzW0LbQx+
vex5kJ+ieJniUopVKTYle1d278C4lrXPpS+OjXpA+136VGtYa3n/zHpce1B2
svSuYjZv59YxR1Xtd0jHd4R2jHpfv+XvqL9O0d4eQ3+NkZ+Sepzf8nstbSPw
FOjmjOH7kuOK2rc9kTu0an/nC9oqeE/R1/fQQ3L7UfKnNo17UzK3yxaOMUrF
KrfJrEOkSxQrVUxQPvgJwfaD4iKKQyseojjVa9z/UclxIe2h90veV7/lxkdB
18+8Zmsyr5fVcWyLc8fEFQOXLlE/0nF55vW7DvRVrr2ntZxbl2pepCsUp/w2
jk2+m8b8tGISieMb4i+H/yn0ZuhN0b6VnVuP+99QzCfYB1b/0guv6PyW/oBe
Ec9Z7VnZAs+XrOPOjnaLzkzFVbVeDtN85T6H9b7XZI5x7AityxwHUnzz0OC1
ozNHcdwQ97Di0G/GedT5qTNVekTxdMXVD5evF9e49v89Uedpn0tnyP9VLPLu
3OsiYw2M07kLDuA5ZZ8Vd+ZeI1oriosqll+ftqTk+Lvi8Hp3xQY2TvxtFH+U
janv/7+4rb51k3jmao9MoS3T+qEtyh2XGg7tnXpcbzKOYzOvJcXh+6T+bvLZ
B6TWS4ohnBPtQNkms7l/Q+g50EmM/y1kHpR/kXpPKU67VNeQGQPtm/pbKc5w
S+bxH5o5PqsxHJrbh5Avob2qM1lYa2KEvnXJ77lh/P7S9TpjXy752yk+KJtR
dmm/1N9KcQytT907K3cuRLFDxXPb5Y4Davzyr7R2ZJNunjm2pDNibDw3dX1D
+bTce4LWOfgf8PHgBuC/wceBr8wc/5NuHJk4hiqbqD4yf0kn5Y7HTC5Zb84r
+xx8U+dM2WfBKvALFcdODmRt/Bp1+zzoDnHdav0q5vZo7P8ueE+XPAcLytbt
b9FHT/m/8D9JbTNvCn4idTxKtuSk3PE4xeVaJ44hPhbX1r3xt7Bi1hMS5420
brWeWuSOP46J57pieWMT5zwUIxuXOOauuPakuJe+DN5r2nOyB0bFexWTnRrX
uuKwU+L+URx2ctxXuj4kyrSP9wjLllEsUzGzO+l3RFxXjyeOVTeIYx8Yxy/Z
xyNfYx8dx6BvOTJ+T9kFP0ed/QB9zYZ3UebYm/wu5ZfkN8l+k879PHhvKQdz
Ge16rl0KvSExlu8jv/+6xHpN+Zh7on4oK96h9cb3fDQ1nhw81vZx7+v79Yzf
sF38psLjE8f18/id+sZvpXnoHudC89sm8RlzcMwxKdfUOc6T5uju+K11b6c4
l/+9N3PcWvmdGYnzHFvG/trGPuXb3RDfUX7bjYn34RTe55C4xjSfA+Kc/iw9
UnJcYuOK+9AZ+F6wXlKsZkHieLHG/oviF8g8ERzTUIx3teyEuH60jqrRd9YZ
+HrFMZUTq/72GtttUSf3j2OQXa3xjw3WZ8qJyc9qE5+pvbAgYo1Pttgtie2x
ehXPtfJr43Of9doLewefme1Sx/dkc90AnQ29u+RvInpPxIqRym55EPkncusy
6c994b8tPxf+S7lt+mk6X1Lvb9kGOp/vLP3/80Q3zJy7lf8tW2542XEqjaGP
zvFa2367xe/xZjxftR61VhVTlR6Rnak5vTXK6PsdEe+ZHhwvupZnfqJzu+T7
pwX7RMOhacX5RPnF92pNw986t3/dW3OUOkai/aOYwwXB9t7U1HEDxTb+F2dU
3KYh9LDEMTHtDeWUlH9V/GRS3Hfafy2DbTDZYvcGxxhXps6H6ux7Prc/qtyh
4h7K5yoHr3ySbCTlg0bljltoHMqxj477oWncf53jvvs9xnwU+1EOSH6Z8vVL
co/tkdy2k/pWbn9G3De/xDPt3njGzcvtf+jc/znGExRXWBnPcuV+tZ7lI3fP
bdPKJ5dcx2ijKt/9Qu4ct3LdnaKNKrtxRcn2q+TeirZsj9z2s2wDPUO5c9kI
ssEU11ds8LrU/u3KOLf7BK89rcEh4LOR/z51PkHxlrbyR+K+/iH1ujg3rg29
733xHK+fe/9qH7+Yey4GQAfz+yzpW+4dCG4O/gbcB3wKeA24L/hUzTX4neDz
/XdoP9pp8L+A3xvcDPxZahtQsUmdcwtKzmvI/hiEzJngb5HpJf9ZcwGeEBwP
UV71oahnPobfLTi++iG4a3Dc9QPwg8Hx6vfB14D/A54P7h4cg/0I/E30BeQT
dAiOXb8F/4HgmPYq8P3Bse43wfcFx8nfAG+H/urP73nM/2nBa1/nw0Xs6wG8
x0Z8t/mF4wuTkNlTuk8xM2TmFY5lTFSsJTgPcrniA4VjKBPgzy7s848DLyr8
7RSf/xhcGxwDfw/8J/dtBl5SeA4Uh38f/JdsJfiNguMkd2pe4P8O3TR3rkXr
5y5+Lyi8J5UjeLpwfGGs7JzC31E5gpcKf2vF8F8s/K0V2989OHZ9Jf08V/g7
Kn8xq3AMaAx4ceG1onzBbsH5nSuQf6bwN1U+4tXC8628w7OFv7tyIi8XnjPl
IBYWnhvlOz4A/00fW/AurxVeZ8o76L0Ub2yTOp4vfTiUORmKzB5aOxX7eMcE
2w8HBOeYbpEeg39csK1bD3xVcK7zY9bqmXX2i64PzttOR/5IZDbKnP86HHx8
sC8zhGftAu5ecR2C8rYFuGnVOvp+eAX4iuAc5S1R7/8tWeQ24llbQN+in1/l
u8JfBf4l9bp6G/wbeBPZzOB/wVuBPwT/A94SvKzwXlUOSDFWxVpP5tqb8H+G
bojMG+CflHeRTiusI5SbWFFYjyhn8Xrh/a9cxvLC+1M5oNXgUnBO7RNwEpz/
+hRcF5yDq+UdzwzOUf4Cf8vgXNjP4C2C8x0/gjcLzgNWZGMwzqbyb+BvHpwH
rEKfgn8e/F/hbxccQ57Md2pBm1rnd1Se8Xxkvkdmw+Cc3W/g7YNzKAdXfZ4p
d/M7/B2C8yyF1iz3nsu9F7BWHq71N5mDzB1cG1/xt+8Mfx/o1Ny57wbQ7TLX
Ql0IfTg4l/1Oat2g3PG7qeewC/fuJzuf/vvX+vtrHjopFpj6PNW5KjvqpGAb
5276PD/mR3RdcyVba0/oicFn2sWqR2CcGwTnNIfyu+B73Aet8r5XBue+P0Nm
3eB8aB38c4Pzywn47OB87rrg84Lz1Dm4VXB9Qhl8cXBNTgV8SXDNw7/0eWBw
jrgE/6zgHPQ64ObBOe5/Cu8x5ZR1RuqsUWz5+Yrn+irVjSDfJDiXVxOcaziR
d1wf/kXBeYF14ho+Sf4rfTYIztt+A64fnLf9ElwOzr1+AV4/OF/8OTgLzjt/
XXidKW/7FTgPzueuLayLlWuW3auY4CayJRnD+cF5/BCcl2zOGP4qrPuUg/6z
sF5TDlr+gmLHecV79EHpGOgh9HN0cN1RffDVwXUajxeO6/WW7qo633+i7BbZ
wXX2GUYVjsH1RaZR1Tn7psicBn4wsy/ZH5mt4XcG71t1vcgy8MPwt4LfSTY4
fV1cZ1vp2WhDb1axzlkQeXtXXWdwkr45spfU2TeYXDh2PBTZEYXPlV7gDZC/
NrgGT+tCdQhjeN/RhWOI/ZDZApn2wbVMm4PvCa6xkT5QPr0F8lMKx9mHSf9V
rWdV37g9+Njg+NuG4OuCa8k2VRwwuB5sY/AtwbWOm4BvDa7raMDYW9bZP+xH
/5sG55SnRbv9V2ivwvtfOaxzka1f51qxAdH+UY4+wLuszr7rAOS3Qb5LxbFm
xY8+ha7h+jm0SbSRheOzfZAZDN4Z3A3cu7AuUx6tR7T33oG2k+5IXN81CJmd
kOlacSxIMUDFAj9JXIekePyg3Datcg656tHqbAv35d5NuLcD9+7Md1gQnHPc
CTw3OFcyXDU2da4Bm1k4lzMa/ozC+ZJReq/COZuR4G8T18MpNvxd4rorxY9l
r8tuXw39PnEtl+LQj0Qb+yPNL8/tGFzbM4w+G4J7VLwWVBP4PPP+VOG8xWPw
bw+uX5oHvx79Vetsmx9TdVx1Ve4aUeWnlKeS/lYtx0Wpc0mKnzyZWt+rruPC
1LUDqgM5PfWZoPqQ01Ln7g+L+/QU1VpkjvPId1AuOchPhd8lc8xH+1XxtMmp
7QLVKqhmYcfg+pCLU+eI5YuqLm+zuKekQx7IbbcPK3v9qr5xWup1qtqkOanX
r2qWZqde16qzmpt6byk3+lRqXa46oompbQfVCE1QfL7qWt6lFfspirsq56m4
nuJ7dRWfD6pROTV1/YPqIx6JelS1MaekPodVn3OW8gtV1yedmnu/qs72udQx
rumJzxedw6qZuSB1flfnb0vw2MI5j/4V52uU41soP7pwXuoRzV3VZ5hqz7YC
dwqus3qycL7qUWS2rfpMVZ53G3CP4HozrSnVNr9KnydUfV7+N3ZXOAfzMPdO
KJxHGQQ+turaStUEyqZQHdHZ3PtQ4fNGOeuehfW76ijkXyjH9HrqGhzVnS4G
jy+cExpY8XhVP7YI/vDC9n3Piu0a1f+ck3q8qidcAR5XOK82oOLzSnUszVLn
rpQ7WQOdmdsX+gLairUyqNY2nvxo1Z98HZyzVqxfcf5HkHm11mfHGPDyWr/7
wpJjp4rljYK/rNZ6uEfhmgPVZjwKf1GtdZTqk1X3oHWya+Y4iurix5bts2ge
lY9Wfll5ZuW3VYugHKf0iuImin9q32r/fqfvlznW/i/4x7LzsPKDHkcmK7k2
4KdYq681MlC1d9AHkZlacgxTsYMDqvavhlSce1IuQbFSnXULGdvVqWvXFRNc
GRxTUGxB9XwTkH8C/Dj3juZZS2t9hsp+mx79XMWOleP9IrjmWfWiHwfvc+13
5QBUizI5ygyO9Qz/9TPKzvHpLFbuWTlond2Ty44Raa5Vy62YQBPVKpY9Zq0T
2UeK2w9MbXPp3hFab2XbojrHfwuOPyiP9WDZNrDOna6xpk57bkrZOUGtyall
5wS15vXfAcVP9sycq1bOWme6fJS3wVnm+h3F7hW3V2224qVrtMZCrImH91LZ
8yU9oDrzdRLr/O6F6zNUpyEbVLao4nWaA81FmtmXeiv2I99L6/A27nkhOBe4
bua6rFf4vXs85/W+em/Zm6qTHJW6HkA5PuUGW8RaIN2jmgDFaupnzsu/qz1Z
dU342ngGKUdc5voR8AfUOV82qs7vqfetZo4LKR+n+KRsXtVVjk6dp9B+rGS2
V1V7smPVfpr8NdVKqZ5N/03Zo+raZuWwlMtS7lu5/sEV2/Gy5xWjll+ofXdT
ah90VfxWScyhK+cln0J5M/0HQnEh5Sh19im3pbNPuRXFoJQPUu70z+D4m2p1
FlVcD7tn1fmdj0veO8rN6T0aVm2PSG/cmDo3pHoI5TaVo5ePqxpn5QK0B/8I
zj++U/J3VK3dyzq/q84HKy/8UnD+WnRiYZtda2Zk6rztD9HOOTtzbln3yyZ9
VvZ/6tyi4pXLoCvKPse1x5W/1rp6Onfub0VcM8pLas53iX6DalbvT/2/jjTG
1hUfU0xL+XbVWIyLe0Hvqff9K/j99R1UqyrbXDlE5XJlp0iX3p7aFlN+X3WC
yskpBi67Wvkq5a105krHLYp7Srkh7X3pgAllr0+9V9fc8RbVp0wqXBcyONoG
is0rJqAYtXL9s4LjCtoj2iuq7VRtVUvu7UJ7otb2fE3MC+s/KYoDdVfcOnWt
jv5ro//cyOfTOXIw/LfKrv3Q2fo2uCj5LFa93mBkDk0dH+oKPij1f47UT/PM
sVfFYKX/5fOp5vZWZFZWnF9Tnu2SsvtRfOli8MBaxy7eqDgfp7zcO2XX0sje
U82VajNkh/9Qdo2QYmLyuVWbukS+fNmxO8XEPi+7pkUxpc2qthflm+s/U6pj
uS2zPzeCZx2f2v8bBj46da34StnOmeMTGtuBqf3CoeCjwF+WXSej2NdXZdfS
KP6meKb0pPTLZWXLK+Z2b9n1e7K3dd4pV6P/3KyouPbkJMY4tXDsW7WjB8T1
qXUqv1f+r+I2rWMtnHxcfU/VxZxcdR2RzuUrMusm6Sj9l0LfU/U1zar+b5fy
bKoX0v+2lA9U/vb5wnXDqh9eXHaNjXwr5VVVY5tG/0C1IqoZmVY4TqqzcouY
a1bOWXWbyt8qB76k7Hoe+YCXl/1tFWO8Ajy81rE42Q/6D47+D6T/hqj/J+Pe
V82J/vtwZuY6E/2nQGetzlz95+XKsudO8Sv9P065BP1PpU/h+nXVAMu/17OO
Zb6+QH6rkv0X/U9hCfIPZ/aJN9V/NzLn1ORbycfqX7bOkQ8yAPxMreOBilto
DQ9OnXdU3l71DIqLaN0OSe3zPQe+JvX/wlRLJJtNNRaqtdD/9XrT55xax/10
NstOaJ0656jc4iWZ/YlNGFu3zPaOckCqWVZeU/pftR/y4WbDvyT1mtFZrDNZ
9QmyA1WPrJiEzvRHkOlb51qWEXWOtymXPSi1jpOuk+2h/zo14nqPzH6wxnlp
6jiQbJjhqc8O5buV99b/m/ZSrCDz/5j21n9kMvtJG4O7Zv7fouqlZK8qt/6D
/L/MeUnll5sit7Rwzbri5L3Kfi/5wvovzGvK+WXW178m/s+N8vsf6l0yx7Af
Qv5I6Mdl56Hkn2p/6R2Vt1csXPG6vZEZVPYcKS6xOp4j8gt7lv3fB/nUio/2
BB+Ter8pttYodc1pN3Dj1HajbNgG7JGPys5byRdWvLkHMk1Sxz4Vx9s3dfy1
F/g49VPYJ5Qdq5iocgH7p85LqxZYNaz675vqzxQ3+D92yuO2
           "]], 
          Polygon3DBox[CompressedData["
1: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
3ZN0w/nl/urdE4PXleM28k38NuZkzM38Vz8k/28nx6zm/gf4f1XenZqX2te2
ZeJd49nr1GKqPNttvmP643CNq/RFXK+3m/je9+j7fLabMeQ8cj45tvpWiV0W
Vdut8s3M0w6u+Zzv0Dyu+Vzfre/YceB48N0b7wwuMoaerfJ8xm7myJ+rEj98
iH3Nej1ckfZLb3KyY4z/qsR+zsFnqvh0c7Y/98bXb14l166GqJZozGbspo+4
j7n0exV/pcb5R/3+1Dz3wH4l+OEq88M1w/Ppg/TD+mN9049V1r5VwP9WiWGN
ZT2n536oynyaEPyZ5+Oau9FfpBm9xzE7skwNgGP5EL9RIzU8/1ThvM7nucEH
VxlT95bJ1zvWjq+SqzJGsN5OH2HNweu98R39q6xP1iAcWiVmNHacyzUd/EgV
/2ZO+8v6fVqfp0/SN6nhqOXMCh5G/7Qq136ykXj5ryprlWuWsZQakL7DZ/bZ
rbFbpkhNyE51/LhhO/Vyrg3rVek7xxvdjL91ON/6rg9VYmBjYbf1dJPTudF8
QZ3rMX7y3ZijNVf7Q5Vc7mq0AVXWkJXb2eba8jC/P9Am4/gp6+tv2Mwa5f0Y
P6vNqWG/WsffFxbJkb7cTbx9UZEc6SseDz6jSM73AZ5vffCZRXL0Dxpvsc/e
rVzzv2sX8SH9a361AfufxbavHdOdfH+5hN/Mb+caPqRITZBru2v2+u28c9dy
4yVrT6y52K+Ody4vU/M2rI5P7ilTczW8/l7WTh5QH+/8facRn/xolZq5HYrU
iFlLt0KVtcE58HA9/8Y2MmYcO8bgrgX7cL5ONzVlGxWpCbPWzJoDfbA5LGtH
1UDUQuRQt3cyfxZuZk1zbVMTUhsyp2/8reaj9rO9PrKT+Nxc/ymuJ1Vqzpar
4wtr0fRv1lSaAzAXYA2Ba9APvaltVa8yr+ucce6YI56v5rvGK+b3P+6NXmW9
nDVg99R6nLVh1lipz6kvqh9u30oO3Nz3ANqOrXBf+cEFcijw283Uk1hXMn43
tQxyNL+nNWf3FqkBsxbtsircQc52JP0dOP6NZvjDebQx8sxWcu/HNZPT7FfH
q8a/b8klWqnlO72Z+HivOp43vnySbUu0kluTY/TU4++rWo8wB3NbkRo3czNd
8O1Fatpe66QG7r4iNWzWxr3DOabifNuDX2kkp3NrEf3UXI81cI8VqcmxNs7c
3y8cc2YzOUBr5tQz1TfVW6fF/lIz55qU36nBY2v/Ys7S3KixgjGDOVI5dtnK
u5V7P8Hvoq3kLo9qRo/6uub0o4yn5I2t5FaPpb2mL24lF3myvJL+F82Mz8Np
a4H/4XcQ7dpmbM83w//dxxrAR4vosdYGGvMs20qu1FhoNL9Lt5IrPaaZGGDi
VnKjxgZnt5PTdo3vR/9C2vytrFEn01+4lWc6qn5n5uzN3VvzYK3fG918O7+h
vmSxVr6x31YeKX/QV+nD9GXWHzkuBjbCb9U3zMffXob/WzNyQq1PWUuyezvX
VgO1PkVO6rnVOK2nGc71pmmmZt/affmLvlMfqa9cspV3cEz9Dvu2kvOW/w2n
Ld/KmHYsX9JMjtxcuTl2a0eNAedsxWcY71gzsHetp1gLbI2AtQI+g7W5u7Ty
Tf2WV9G+or3QTLxk3DRfK9vsm0M3h28u3xy+taTm8Hep9S5ri5dpZcw4VoY0
U2NirYk5L2spnZvGpoPrOfpDrZfdW+s35qi2rvUd9QNzZNvUepW1nQPaqXGQ
8+3TTk3U8bV+p75krn2cVnyJOfeB7dQkyBn3k5NXiX/kJHKTTdm2bTP+UT+p
Vu7aaI2Y8em4jJctm/Fxrv+bs22HZnzuZvTn5lqfNON/D22G48h15IS/VeHM
cmc5l3zfGMJYwpo368HUMNUyrTmWr8iJ5EYny4+r5LvkPtY83VaFM8odrRl5
uoreYDwzQx1PrtFO/GcNmrVoxj2uFdb8WW8lR5WrGpPID6w1arcytqw5WrXK
2u0a6lq6Ujuxo/qnOui3VbiQ/utMuWA7fscaQes3P6/C3Yz51Os/pj99K3rx
As38J8X/pvifk3NaqVcyFjRHbq78/Sqxs/bh9FvdaOfWsI2sErMZu6kBW6/9
Of1ZW/kefpdPq+QSjCHv8PpVchHWtN1O/8Mq2r3Xe6yKr3yxmXvTZ27KuSZs
pfbjZ/D5XGO2Vs7dv514zlo6+bc83JrjEUXWT2uR5VByKddov59rqGupMbW1
nNaK/N7M2mfNiLUcf9S+R33DWo6/m1m7rOl4VA2+kZjwoio5MWP3kXX88phz
sDcxnLWo1pZUrcxla0zMz5kPM99nvs4cv/m6Kev13pyUualb6vhGziH3MGY8
Bvw4+KfeaADmG61t6W1lblvjYi38uK34ImvirZk2v2Z+zHzcPNg+a4aPHNZM
TYP5RPOL6oXWVIwqkl+01sJn8tk2KhOruYZW8p8ya6s1GdcVqTm3VuNDzjkL
19iO3/mbqcG7qkiNhLV55n9v5NjJGonnrNm7skhNhbV81lyMLHINazGqbrQW
34H8zPyydcfGREdVyf9+WabG3fjoU/adqRX/oR8ZzDecuZX+Se2cT65njeif
VWpk5TbnNqKPmHNWGzJGM54YWOVcp9HOpb9rlVzR00Xq380ZmSs6rEwuaSf5
byOcQe6wXRWuIUeSK5k/9L8w1jSO5lq7VKkfHlOkfn7nKrlQv5nfbpsq3E3O
Jne7oEq9pzG+8egRVXJLagjGX/okfZOagPHpRlXepd/Ab2E+0v/OWKP5VDdz
0LmoxmI8bA23Nb/qbdZ2b1uF28kh5ZLmA/1vljWcY7rJkfkt5Shyld2qaLlq
utaL7m6M6NguUs+8pHy9N2u0a7U11OrV49TzUZ3NWEaNY6Nar9O3Gs+qx61S
JZZQ67S+3JrlN2v93PzxElXWftcg16IdqnAbOZpczfhKX64GZzy1fZXvJyeU
Gy5VJZaRj8gtzXeqKxlDPIVtaJWx8k7t73eswg3lUHKpu6pwE2MM43tzwJdx
vjWL5IY31h82MsYd6xtUGfsjat9VtvPt/IbW1vp/Mr+139xaX2sd1ALUGNST
9BdqIdvUepLrg7GtY0J98aUqsfOktf72VpXaB3NY5rKMd/UnaiRqJctW8Y9q
HGody1XxZ2omaifq9R/U+rv6vfX+as+u4fJ9v/HLtZ5vLbtj4KVa7zffb/5f
/d/8vPUA7XbGnmPQWmfXB7UZ78F8teuH2o33YD76+W60EzUStZKtqnB7Ob/c
f8sq3F8OL5ffGjxtIzGA/sqa+w/rfIX5Bmv23yqSb7GWf5Mqvk+fqG/crEot
iz5OX7dhFV+mz9J3bVElVtCH68s3reIL9aH6UtdftVrfsfrJ0lX0SzUmtSZr
ZNS69Gn6Nv8PqZaohvI4257sZq6pRVrPbSy2Uiu1yPotc6rq3Wql1io80U1u
+Mgi/4/wPxD+d7C3Xo+GtfLfUb+//x1Vo1CrkKPIj5xTzi2/qd9WzUTtRE1F
fUpNybmohqe+NR3n+KCZnIU8ul+V3Lg5VHOp5sjNjZ9fJncuZ5A7qCk+X8Xn
6fv0ef6XyHoTdXV9vv7Z/KPP8nKdz9yripbmN/RbGmtM2opebsxxVDtxjjXn
5hP00fpqfaz/XVL/sVZCjVP9yf+T/ljPL33r/lVyrf4nxvyteofxtf9ZNf/k
O/Zdq0+/CN6zfj7HkGPJGgDXh1PK1AbsUWVs6aP0VXIouZQ5GfVCfYK+wZq0
x7r5xn5r9Wdr+f2GPr/1TObfX+9Gq1GjUauRM8md1IDUn+SD5mLkyHLla+va
WvVM/4ssN/um5sZytGWq/L9Dn6/vd+38qF67XfdOqZIbfqPWY6bgnA82c4z5
CbUb35V6nf+v+aPOL5s/Nt+uXi5v8z9f/vfLmNLY0v84mH8w320t17AytTf6
S2tnDqQdV+U/hf630pp//2tozb+1/+av/W/ia938v0QNSy1LzdB7McdufYz1
Nn3b4afqa2puam8XtfLfZ9dPtUv/s3uveoD+sJFtrn/Gbt81E0sbw1k/43+j
vebT1s5j/7bmUuo8/wfWVZ9X
           "]], Polygon3DBox[CompressedData["
1:eJwt13nYTdUaAPBzRTmfb3BFypTKUKlQ0qRZw01lCqHMY2VWoSskfIaPkD5T
ia6xhFQomWdlSGWqUE9JmtzSjH7vs/3xPme/v/2utfbZZ++11rmgTbcGXQuk
UqldopAom51KTXHwiihfMJXKz0qlnmZ/FE6lbhC1RF5OKlWa/+34VjFGBx0y
U6kS7Bd5dZHLWrJztV2pnxL66ypKyQ+pm3mGz3QqVSUjlTooXy7WsT/ZQvG0
fLXPgex87Y7po5Pa1frc4Pg8NkJev2gqVU9tQ7Vfir+Mu0nNM87lqGksjuuj
gvxLdTsdF3JcTXwhf9LnKf3VUfeqz/7yxqKF46/FNjFEvlKf6xyXVJcrr2vc
VWw9O5cNZ/VYOZ+HWFlWwmcteV/RTr5fPlL0k99r7Hqud5847po36msQf9P5
hmqvFD0id79y1Xzgnm4T6937B3lrdd+I7WKovLk46riydnm+YzP5APEGq8+q
iS7ygWIxayCvLrrJCxnjdW2+MU4DeUH5VFFfPqNwcm6H613gGo+41pv5crFB
TR1e1/Fe8YtzG9Tcw+6X7xE/s/XsVbV95Sv0t1Is9z1OqqvtWtbx24x7TD7b
cWvjlXJtB50rzWvze/h/HM9yboZ8qvNLnS/ms6lYIMrwE/q+XTxn3I7x/LHf
5NeIkawNO4/9Lr9OjGJtWSn2l/xmMZq1ZxVZRlwbe4n1Zuew4/KrxHDWil3J
LlTXgi1heawyy2R3spfZE6wqK82asAVsCCvJfpVfLUaw1qwcOyW/S4xjnVl5
VkDbK1k+68KmuKf3sRdZyn2ZEtchCrKabJK6buouYGewGmwi68ouYoXYtWwy
687KspPyO8RY1olVYGequ55NYT1YJVaE1WbT2OPsClaKNY7nhT3LqrOyrClb
xIaxaqwMe5AtZEPZYPY268Y2RVv5YN+tKGvOFrO+6uaxx9lmVs33PcrGsmrs
KbZL3WT2HKvK+rEP2ST2mD7HsI9iHos5QD5IXZo9wF5V11PdGHYF68t2snzW
SG0zNo2dEe8C68JeYPvjeWOZ8pe1bcEWsZJsALtclGD12Tz9DdT2EpbN7mEz
WB92Mctid7Pp7El2FbuItWRL2Wh2KSvG7mezWX92GSvO6rG5bACrws5mddkc
9jSb5voejvm1cDLXxpz7gGjCprJT6t5XN1BdYdaQNRCHvas11FVgreTL1I1R
t58N1U8uu8C7uU++QtuJ6r5jR8WF5sSVbBL7Xt5QfZa6VWwy+4E9wLJjfmGD
2MexzrDfYx5nOawZe8O4/dh89l+2g9VUd+z0/NIvncyRMVeWMm5xff7suKoY
pm0Lda+pe0rd9njntP2JvccmsCOsHsvQ7l02nh1m97PCbBkby75i97Iz2Tts
HPua3cfOYq+z/mxnzDvs/8boyl9iXdnGeC/la9W9yI6xJur+HWterL/sR9aI
5cTayJ5n37C6LM3WxBzNfmKNWVG2kD3DPmE3st+Mu4gNZrvZTewP9gZ7Nubn
mO9izWVvi7bm06Z+xy3ObVHzHlse/cjniHWsoXEaO56i7UnfY6uaBqwRm8xO
sC2sfjxbbBL7m21mS0R7YzxkjPed26q/69Xd7niwus/VLVbzVmayvjVRtzne
d3XXqLvMcSd1q9S9oKYmq8I6xprCJrDFaofEesRuce1/sWvVXcOeiDVU3f/Y
dexa9iTbzmbGPdB2JDsQc6C2KTW7xDmuY0O8h6yPfIm6UfKD6u5k/2JvsRHs
c1abndLfUpbHDsVczgqou1pcyjqwFcZ9PjNZ44ezz9in4nzP7mh2Oesj36Fu
orpx7OrYE7F9bDobz2qyQWw/m8Fms56xPrPLjXuEzWG92EZ2Raz1bC7rzTbF
O8K+ZbVc353p5DeP3/5N+Q2xTstvdh/K+V2+i2c8K3lH41095tyCaCfujb3b
6X1HMf3vzk72SyPFWrbCGHuyk/3SqIxkTxV7q5nsMW1X6a9S7A3Zjfq7i6XV
bWUr5TPUtWdL4z6xveqms3ZsCSvH9rERrGLsJVibWAtzknU01tPF/E2xXs0t
Wcn+a4Ka7Hj25U3jN9fPgpjD1M2TPy5asDXyYuo+lN8k7pZnxPPs3Cr5LH12
Yau1rcy+MObe7GSvmpeR7Bdj37iJrVL3cEbyTsS78RJrGuNpW1TbD1gZ1tHe
ZnW0i32vfJ1xdjhfWdtKYjvbw8o73phO5uS9MW9on+/4jthDxTXHfCMeVDPX
GDnObVOzk90U5/l4Ni36ZzdE32wsW8bGigOxPsc6zcfJc8UW1ou9y4bH+yFG
a1NE+0yxLd6DrGRfNyvWKbaLFc9O9rux7+0pPpHfoa5O/G7yLs4VyU72xvEb
7eefxl44nm91m2PNNu4rrFesd9nJ3jb2uN3Fx9nJMxjPYuyFu4qPspM1Kj+d
vGvxzu2IPXWs067vdfl85/rL8933A9qWi72lz+k+N8a8GPtY8aXx57m2XHa+
/BFt17DcmL+0fySdPEPxLB1kI9VVTifXHNf+HGunrgd7m5VVd5i1Yd3iGWWl
2VdsqLbnsXZxn7V9hrVU14nNZ8XVfc5asI7sNXY2+4wN0fZc1pa9o+0g1kpd
53TyfeN7H2B56i5hvdlWdePYZHYby4t3gS1ik9itbBT7li1kE+NdYiMLJ/8R
4r9CPqvFhrEv2Fz2LDsnnewrYn8xPif5f/lnrE+xbsUcyJ5n16WTZy2eudna
vhDPZDzf7BCbwwawFKsTzwF7lE2IdYUNYQfZLPYK68CWsfK+7/7T11IyncwP
MU8cM25j96U5e1leUN1OdaPUXZxOnvF41see3iOdlU6uN657jLbttX2CvSu/
SNvv1XWI/5gxl7IK7AfWkfVh77GK7MfT81Ul1oN1F3/obxgrxzrLVxt3uLrh
rDx7lK1lI1gn/Q2I9ZlV0d9x9kjszWKNZVexE+xRNoy9z2qwk6wJe4hNZ4XY
h+xh1jbW/JgT2Z7YG7Du7C1Whn3NOrOBMY+yy9ivrBlrxWayIrE+sIdYGzab
ZbHdrHnMB2wWy2SfsH8AhblBAw==
           "]], 
          Polygon3DBox[{{3262, 1219, 1237, 2695, 2518, 3788}, {3748, 2411, 
           2239, 2238, 2543, 3500}, {3440, 2464, 2160, 2161, 2465, 3441}}]},
         Annotation[#, "Charting`Private`Tag$3390#2"]& ]],
       Lighting->{{"Ambient", 
          RGBColor[
          0.19699838300000003`, 0.252204821, 0.33320940200000004`]}, {
         "Directional", 
          RGBColor[
          0.15473514000000002`, 0.21284718000000002`, 0.29811516000000005`], 
          ImageScaled[{0, 2, 2}]}, {"Directional", 
          RGBColor[
          0.15473514000000002`, 0.21284718000000002`, 0.29811516000000005`], 
          ImageScaled[{2, 2, 2}]}, {"Directional", 
          RGBColor[
          0.15473514000000002`, 0.21284718000000002`, 0.29811516000000005`], 
          ImageScaled[{2, 0, 2}]}}]}, 
     {GrayLevel[1], EdgeForm[None], 
      StyleBox[GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1:eJwtkEsOAVEQRQt5A61jzFB6AzbQOzAhYQEmjPxJ0xISAxuwBhPLkYhffNpn
AVbg3lQNbk71fa/r1qtSs1vrpEWkBGWgmRNppESmYNnXugj28B2iHoMtsALl
jW2r7zjboMkD/EAH1F+n3/Sf4Mv8N5hYTW8N3dFjBZ6gH/wzOHGaEYNzq+kV
fM1MciIXu38Fd57IDdx6epa3+QNPZ9hnNZu5nHEB1XFnAB6tD/OX5kdO56B/
sR3E9l7OwDuBr3vh2chpBrM4Q2R9mDO03XLHVV/3yH+5v9B69u2NfOsfeTs4
hQ==
          "]], Polygon3DBox[CompressedData["
1:eJxFkD0OQVEQhed6pvATpSAikbcBG1BrNCQUSomg8fw1IkSi0KjEGjRK+9AQ
NAiFBViBM5lJFCfz3blz58ydfDOo9kJElIHCUCVO9HRELSQb4E2U6IKLrUfk
G5+hi/fPfRGzrLVXVpbcDXGH3APxDp0iRGn0TKD/FCqAfajm1LNi57bTmhT4
xeojfm9wCXMlobLTuoC1VxHqg3MJogli3fpPWWvlzRo8gzpOcwPwktVbZliw
vbG+0mvIeteF5vYfmecJ3oPfMb2r2bwf1lllRwfwmHU28RTvI+tuxXPFumP5
U9v+L/upm5/0Fk9hyY3AP5j4Naw=
          "]], 
         Polygon3DBox[{{2515, 1501, 1500, 1010, 2595}}]}],
       Lighting->{{"Ambient", 
          GrayLevel[0.8]}}]}, 
     {GrayLevel[1], EdgeForm[None], 
      StyleBox[GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1:eJwtjzsOQUEUhsdlCiqFTiUUOixDawWiFhZxGyxCoZGIVqGxA/EuKXTeb25o
fJNzij/fmf+85qQq9VLNM8YkURjtrDFvgj1conXImBVMR8TvoIX6Lv9EAd4L
dmOS30QlvuH1YQKW0YgZE1hg4dRKnavPUvPlPSb/c/t15ge2yQ1gD+bpy3my
+46Xof4Bm6iI34In/esZVunxiX14sbLrCg9649HKnS4+6P98vXPGe8ueuc4J
9J9D3nF2Nazc7Py3znC9bscfAEM9RQ==
          "]], 
         Polygon3DBox[{{1490, 482, 477, 1491}, {1518, 1059, 930, 1519}, {2600,
           930, 1155, 2668}, {2691, 1155, 1453, 2733}, {1516, 1014, 1059, 
          1517}, {1416, 528, 585, 1417}, {2732, 1520, 930, 2727}, {2691, 1210,
           1016, 2668}, {2600, 1016, 1060, 2526}, {616, 560, 477, 482}, {1493,
           477, 559, 1423}, {1527, 1016, 1210, 1528}, {2730, 1531, 1229, 
          2718}, {1528, 1210, 1372, 1460}, {1523, 1060, 1016, 1524}}], 
         Polygon3DBox[{{1488, 561, 616, 482, 1489}, {2733, 1532, 1372, 1210, 
          2691}, {2526, 1060, 1522, 1521, 2727}, {1453, 1155, 1214, 1376, 
          1458}, {1512, 1300, 1214, 1014, 1513}}]}],
       Lighting->{{"Ambient", 
          GrayLevel[0.8]}}]}, {}, {}, {}}, {
     {GrayLevel[0], 
      Line3DBox[{427, 1, 400, 242, 2735, 16, 2749, 31, 2764, 46, 2779, 61, 
       2794, 76, 2809, 91, 3161, 577}], Line3DBox[{1534, 2, 1947, 299, 427}], 
      Line3DBox[{1536, 3, 1534}], Line3DBox[{1538, 4, 1536}], 
      Line3DBox[{1540, 5, 1538}], Line3DBox[{1542, 6, 1540}], 
      Line3DBox[{1544, 7, 1542}], Line3DBox[{1546, 8, 1544}], 
      Line3DBox[{1548, 9, 1546}], Line3DBox[{1550, 10, 1548}], 
      Line3DBox[{1552, 11, 1550}], Line3DBox[{1554, 12, 1552}], 
      Line3DBox[{1556, 13, 1554}], Line3DBox[{1558, 14, 1556}], 
      Line3DBox[{428, 15, 424, 300, 1558}], 
      Line3DBox[{2762, 30, 3022, 244, 428}], Line3DBox[{2777, 45, 2762}], 
      Line3DBox[{2792, 60, 2777}], Line3DBox[{2807, 75, 2792}], 
      Line3DBox[{2822, 90, 2807}], Line3DBox[{2836, 105, 2822}], 
      Line3DBox[{2837, 109, 2842, 124, 2850, 139, 2863, 154, 2878, 169, 2893, 
       184, 3067, 296, 438, 199, 425, 309, 1707, 200, 1708, 201, 1709, 202, 
       1710, 203, 1711, 204, 1712, 205, 1713, 206, 1714, 207, 1715, 208, 1716,
        209, 1717, 210, 1718, 211, 1719, 212, 1946, 298, 439, 213, 426, 310, 
       2920, 198, 2906, 183, 2891, 168, 2876, 153, 2861, 138, 2848, 123, 3159,
        508, 636}], Line3DBox[{573, 499, 2836}], Line3DBox[{574, 501, 2837}], 
      Line3DBox[{1473, 1472, 1471, 1470, 1469, 1468, 1467, 1466}], 
      Line3DBox[{1407, 1400, 1408, 1411, 1415, 1486}], 
      Line3DBox[{1403, 1398, 1404, 1393, 1405, 1396, 1397, 1392, 1391, 3614, 
       1401, 1402, 1395, 1406, 1394, 1407}], 
      Line3DBox[{1418, 1417, 1416, 1465}], 
      Line3DBox[{1477, 1476, 3615, 1475, 1474, 1473}], 
      Line3DBox[{1419, 1464, 1463, 1462}], 
      Line3DBox[{1484, 1483, 1482, 1481, 1480, 1479, 1478, 1477}], 
      Line3DBox[{1403, 1420}], 
      Line3DBox[{1421, 1410, 1413, 1412, 1399, 1409, 1414, 1494}], 
      Line3DBox[{1493, 1492, 1491, 1490, 1489, 1488, 1487}], 
      Line3DBox[{1422, 1485, 1484}], Line3DBox[{1493, 1423}]}, 
     {GrayLevel[0], 
      Line3DBox[{1113, 645, 1087, 882, 3165, 660, 3179, 675, 3194, 690, 3209, 
       705, 3224, 720, 3239, 735, 3475, 906, 1120, 1316}], 
      Line3DBox[{2095, 646, 2549, 952, 1113}], Line3DBox[{2097, 647, 2095}], 
      Line3DBox[{2099, 648, 2097}], Line3DBox[{2101, 649, 2099}], 
      Line3DBox[{2103, 650, 2101}], Line3DBox[{2105, 651, 2103}], 
      Line3DBox[{2107, 652, 2105}], Line3DBox[{2111, 653, 2108, 2107}], 
      Line3DBox[{2113, 654, 2111}], Line3DBox[{2115, 655, 2113}], 
      Line3DBox[{2117, 656, 2115}], Line3DBox[{2119, 657, 2117}], 
      Line3DBox[{2121, 658, 2119}], Line3DBox[{1114, 659, 1110, 953, 2121}], 
      Line3DBox[{3192, 674, 3457, 884, 1114}], Line3DBox[{3207, 689, 3192}], 
      Line3DBox[{3222, 704, 3207}], Line3DBox[{3237, 719, 3222}], 
      Line3DBox[{3251, 734, 3237}], Line3DBox[{3265, 749, 3251}], 
      Line3DBox[{3266, 753, 937, 3268, 768, 3278, 783, 3290, 798, 3305, 813, 
       3320, 828, 3504, 949, 1130, 843, 1111, 966, 2276, 844, 2277, 845, 2278,
        846, 2279, 847, 2280, 848, 2281, 849, 2282, 850, 2283, 2284, 851, 
       2285, 852, 2286, 853, 2287, 854, 2288, 855, 2289, 856, 2548, 951, 1131,
        857, 1112, 967, 3347, 842, 3333, 827, 3318, 812, 3303, 797, 3288, 782,
        3276, 767, 3605, 1205, 1364}], Line3DBox[{1140, 924, 1128, 3266}], 
      Line3DBox[{1140, 1197, 1294}], 
      Line3DBox[{1433, 1427, 1439, 1430, 1441, 1431, 1454, 1511}], 
      Line3DBox[{1440, 1428, 1434, 2728, 1449, 1433}], 
      Line3DBox[{1522, 1521, 2732, 1520, 1519, 1518, 1517, 1516, 1515, 1514, 
       1513, 1512}], Line3DBox[{1444, 1437, 1451, 1452, 1529}], 
      Line3DBox[{1450, 1435, 1443, 1424, 1440}], 
      Line3DBox[{1432, 1429, 2729, 1438, 1448, 1447, 1426, 1444}], 
      Line3DBox[{1442, 1425, 1445, 1446, 1432}], 
      Line3DBox[{1528, 1527, 1526, 1525, 1524, 1523, 1522}], 
      Line3DBox[{1506, 1505, 1504, 1503, 2731, 1502, 1501, 1500, 1499, 1498, 
       1497, 1496, 1495}], Line3DBox[{1508, 1507, 1506}], 
      Line3DBox[{1442, 1436, 1455, 1457}], Line3DBox[{1450, 1456}], 
      Line3DBox[{1458, 1453, 2733, 1532}], 
      Line3DBox[{1459, 1510, 1509, 1508}], Line3DBox[{1528, 1460}], 
      Line3DBox[{1461, 2730, 1531, 1530}], Line3DBox[{3265, 1222}]}, {}, 
     {GrayLevel[0.2], 
      Line3DBox[{2735, 3021, 1720, 2734, 3803, 2921, 2736, 3804, 2922, 2737, 
       3805, 2923, 2738, 3806, 2924, 2739, 3807, 2925, 2740, 3808, 2926, 2741,
        3616, 3881, 2742, 3809, 2927, 2743, 3810, 2928, 2744, 3811, 2929, 
       2745, 3812, 2930, 2746, 3813, 2931, 2747, 1904, 2932, 3022}], 
      Line3DBox[{2749, 3617, 3882, 2748, 1734, 2750, 3814, 2933, 2751, 3815, 
       2934, 2752, 3816, 2935, 2753, 3817, 2936, 2754, 3818, 2937, 2755, 3618,
        3883, 2756, 3619, 3884, 2757, 3819, 2938, 2758, 3820, 2939, 2759, 
       3821, 2940, 2760, 3822, 2941, 2761, 3823, 2942, 2762}], 
      Line3DBox[{2764, 3620, 3885, 2763, 3621, 3886, 2765, 1749, 2766, 3824, 
       2943, 2767, 3825, 2944, 2768, 3826, 2945, 2769, 3827, 2946, 2770, 3622,
        3887, 2771, 3623, 3888, 2772, 3624, 3889, 2773, 3828, 2947, 2774, 
       3829, 2948, 2775, 3830, 2949, 2776, 3831, 2950, 2777}], 
      Line3DBox[{2779, 3625, 3890, 2778, 3626, 3891, 2780, 3627, 3892, 2781, 
       1764, 2782, 3832, 2951, 2783, 3833, 2952, 2784, 3834, 2953, 2785, 3023,
        3024, 3963, 2786, 3628, 3893, 2787, 3629, 3894, 2788, 3630, 3895, 
       2789, 3835, 2954, 2790, 3836, 2955, 2791, 3837, 2956, 2792}], 
      Line3DBox[{2794, 3631, 3896, 2793, 3632, 3897, 2795, 3633, 3898, 2796, 
       3634, 3899, 2797, 1779, 2798, 3964, 3026, 3027, 2799, 3960, 3009, 3010,
        2800, 3011, 3025, 3012, 3970, 2801, 3030, 3031, 3971, 2802, 3033, 
       1912, 2803, 3635, 3900, 2804, 3636, 3901, 2805, 3838, 2957, 2806, 3839,
        2958, 2807}], 
      Line3DBox[{2809, 3637, 3902, 2808, 3638, 3903, 2810, 3639, 3904, 2811, 
       3640, 3905, 2812, 3698, 3906, 3140, 2813, 1887, 3028, 3111, 3110, 2814,
        3974, 3112, 3113, 3029, 3082, 3081, 2815, 3083, 3084, 3032, 3116, 
       3115, 3978, 2816, 3117, 3118, 3075, 3085, 1958, 2817, 3013, 3907, 3685,
        2818, 3641, 3908, 2819, 3642, 3909, 2820, 3643, 3910, 2821, 3840, 
       2959, 2822}], 
      Line3DBox[{2836, 3150, 3920, 3703, 2835, 3149, 3919, 3702, 2834, 3148, 
       3918, 3701, 2833, 3700, 3917, 3147, 2832, 3687, 3916, 3038, 3015, 2831,
        3695, 3973, 3094, 3037, 3093, 3092, 2830, 1962, 3119, 3091, 3036, 
       3090, 3106, 3089, 2829, 3087, 3114, 3088, 3035, 3126, 3128, 1988, 2828,
        3124, 3125, 3034, 3086, 3965, 3694, 2827, 3014, 3915, 3686, 2826, 
       3041, 3914, 3692, 2825, 3691, 3913, 3039, 2824, 3912, 3709, 2823, 3911,
        3708, 3161}], 
      Line3DBox[{2837, 3151, 3841, 2960, 3154, 3152, 3842, 2961, 3155, 3040, 
       3843, 2962, 3143, 3693, 3844, 3144, 3145, 2963, 3136, 3688, 3845, 2964,
        3045, 3697, 3976, 3127, 3123, 3139, 2965, 3046, 1967, 3129, 3095, 
       3048, 3077, 3122, 2966, 3047, 3098, 3109, 3099, 3050, 3078, 3138, 1804,
        3049, 3102, 3103, 3052, 3079, 3966, 2967, 3051, 3017, 3846, 2968, 
       3069, 3054, 3847, 2969, 3156, 3704, 3848, 2970, 3157, 3705, 3849, 2971,
        3158, 3706, 3850, 2972, 3159}], 
      Line3DBox[{2842, 3644, 3922, 2841, 3851, 2973, 2843, 3852, 2974, 2844, 
       3699, 3853, 2975, 3146, 3690, 3854, 2976, 3055, 1898, 3070, 3130, 2977,
        3141, 3979, 3131, 3132, 3058, 3080, 2978, 3057, 3104, 3105, 3076, 
       3133, 3645, 3977, 3142, 3134, 3135, 3071, 1812, 3059, 3018, 3073, 3972,
        2979, 3072, 3061, 3855, 2980, 2845, 3856, 2981, 2846, 3857, 2982, 
       2847, 3858, 2983, 2848}], 
      Line3DBox[{2850, 3646, 3923, 2849, 3647, 3924, 2851, 3859, 2984, 2852, 
       3860, 2985, 2853, 3861, 2986, 2854, 3967, 3056, 2987, 2855, 3961, 3019,
        3074, 2988, 3063, 3020, 3648, 3962, 3065, 3060, 3649, 3968, 2856, 
       3062, 1825, 2857, 3862, 2989, 2858, 3863, 2990, 2859, 3864, 2991, 2860,
        3865, 2992, 2861}], 
      Line3DBox[{2863, 3650, 3925, 2862, 3651, 3926, 2864, 3652, 3927, 2865, 
       3866, 2993, 2866, 3867, 2994, 2867, 3868, 2995, 2868, 3969, 3064, 2996,
        2869, 3653, 3928, 2870, 3654, 3929, 2871, 3655, 3930, 2872, 1839, 
       2873, 3869, 2997, 2874, 3870, 2998, 2875, 3871, 2999, 2876}], 
      Line3DBox[{2878, 3656, 3931, 2877, 3657, 3932, 2879, 3658, 3933, 2880, 
       3659, 3934, 2881, 3872, 3000, 2882, 3873, 3001, 2883, 3874, 3002, 2884,
        3660, 3935, 2885, 3661, 3936, 2886, 3662, 3937, 2887, 3663, 3938, 
       2888, 1854, 2889, 3875, 3003, 2890, 3876, 3004, 2891}], 
      Line3DBox[{2893, 3664, 3939, 2892, 3665, 3940, 2894, 3666, 3941, 2895, 
       3667, 3942, 2896, 3668, 3943, 2897, 3877, 3005, 2898, 3878, 3006, 2899,
        3669, 3944, 2900, 3670, 3945, 2901, 3671, 3946, 2902, 3672, 3947, 
       2903, 3673, 3948, 2904, 1869, 2905, 3879, 3007, 2906}], 
      Line3DBox[{2920, 3068, 1944, 2919, 3959, 3684, 2918, 3958, 3683, 2917, 
       3957, 3682, 2916, 3956, 3681, 2915, 3955, 3680, 2914, 3954, 3679, 2913,
        3008, 3880, 2912, 3953, 3678, 2911, 3952, 3677, 2910, 3951, 3676, 
       2909, 3950, 3675, 2908, 3949, 3674, 2907, 1943, 3066, 3067}], 
      Line3DBox[{3163, 3980, 3707, 3160, 3053, 2840, 3689, 3921, 3044, 3016, 
       2839, 3696, 3975, 3137, 3121, 3043, 3101, 3108, 3100, 2838, 3802, 4178,
        3615}], 
      Line3DBox[{3165, 3456, 2290, 3164, 4054, 3348, 3166, 4055, 3349, 3167, 
       4056, 3350, 3168, 4057, 3351, 3169, 4058, 3352, 3170, 4059, 3353, 3171,
        4060, 3710, 3981, 3172, 4061, 3354, 3173, 4062, 3355, 3174, 4063, 
       3356, 3175, 4064, 3357, 3176, 4065, 3358, 3177, 3781, 4133, 3359, 
       3457}], Line3DBox[{3179, 3711, 3982, 3178, 2305, 3180, 4066, 3360, 
       3181, 4067, 3361, 3182, 4068, 3362, 3183, 4069, 3363, 3184, 4070, 3364,
        3185, 4071, 3712, 3983, 3186, 3713, 3984, 3187, 4072, 3365, 3188, 
       4073, 3366, 3189, 4074, 3367, 3190, 4075, 3368, 3191, 4076, 3369, 
       3192}], Line3DBox[{3194, 3714, 3985, 3193, 3715, 3986, 3195, 2321, 
       3196, 4077, 3370, 3197, 4078, 3371, 3198, 4079, 3372, 3199, 4080, 3373,
        3200, 4081, 3716, 3987, 3201, 3717, 3988, 3202, 3718, 3989, 3203, 
       4082, 3374, 3204, 4083, 3375, 3205, 4084, 3376, 3206, 4085, 3377, 
       3207}], Line3DBox[{3209, 3719, 3990, 3208, 3720, 3991, 3210, 3721, 
       3992, 3211, 2337, 3212, 4086, 3378, 3213, 4087, 3379, 3214, 4088, 3380,
        3215, 4089, 3722, 3993, 3216, 3723, 3994, 3217, 3724, 3995, 3218, 
       3725, 3996, 3219, 4090, 3381, 3220, 4091, 3382, 3221, 4092, 3383, 
       3222}], Line3DBox[{3224, 3726, 3997, 3223, 3727, 3998, 3225, 3728, 
       3999, 3226, 3729, 4000, 3227, 2353, 3228, 4093, 3438, 3439, 3229, 4170,
        3459, 3460, 3230, 4134, 3440, 3441, 4001, 3231, 3442, 3443, 4002, 
       3232, 3464, 3465, 4003, 3233, 3730, 4004, 3234, 3731, 4005, 3235, 4094,
        3384, 3236, 4095, 3385, 3237}], 
      Line3DBox[{3239, 3732, 4006, 3238, 3733, 4007, 3240, 3734, 4008, 3241, 
       3735, 4009, 3242, 3783, 4135, 3467, 3243, 2468, 3458, 3444, 3537, 3244,
        4137, 3538, 3445, 3461, 3446, 3581, 3568, 3591, 4138, 3569, 3582, 
       3447, 3462, 3448, 3539, 4161, 3245, 3540, 3449, 3463, 3450, 2586, 3246,
        3466, 3506, 4152, 3782, 3247, 3736, 4010, 3248, 3737, 4011, 3249, 
       3738, 4012, 3250, 4096, 3386, 3251}], 
      Line3DBox[{3265, 4177, 3801, 3264, 4176, 3800, 3263, 4175, 3799, 3262, 
       3788, 4143, 3481, 3261, 3780, 4155, 3518, 3451, 3260, 3794, 4168, 3592,
        3570, 3472, 3572, 3583, 3571, 3259, 4162, 3546, 3547, 3471, 3545, 
       3544, 4165, 3258, 3542, 3543, 3470, 3541, 2588, 3257, 3566, 3590, 3567,
        3469, 3795, 4171, 3598, 3580, 3256, 3468, 3507, 4136, 3784, 3255, 
       3787, 4141, 3478, 3254, 3786, 4140, 3477, 3253, 3785, 4139, 3476, 3252,
        4013, 3474, 3473, 3475}], Line3DBox[CompressedData["
1:eJwVzrsuw2EYB+C3tjo2Dhcg6WxiMGjr0PJPymCzugBuwL3QugbHBdXBsSXB
isRZjKqjp8OT9/d733zJN7q6vryWiogVar0Rv30RLXY4I5eJmDKPeOGVXc7J
u+XMY954Z49Gf0TBLS+f8MEn+4zZX5gFanwxaXfjzYF8yTSnfDNgP+5+a27q
V/wxQ52m/YT7o7zFNbP8dKb9k/lMpfMvknRExpugixTb9m3ScsmbObnKBodk
7Ypmj3s3iV7SB+U7yvq8PiTfs6gv6MPyA0t6oo/I//N5NZg=
       "]], 
      Line3DBox[{3268, 3483, 3739, 4014, 3267, 3484, 4144, 3402, 3269, 3485, 
       4145, 3403, 3270, 3486, 4146, 3404, 3271, 3789, 4147, 3405, 3577, 3578,
        2638, 3494, 3535, 3406, 3493, 4164, 3554, 3555, 3525, 3587, 3407, 
       3601, 4167, 3588, 3589, 3496, 3536, 3740, 4151, 3495, 3596, 3597, 3579,
        2386, 3497, 3492, 4150, 3408, 3272, 4097, 3409, 3273, 4098, 3410, 
       3274, 4099, 3411, 3275, 4100, 3412, 3276}], 
      Line3DBox[{3278, 3741, 4015, 3277, 3742, 4016, 3279, 4101, 3413, 3280, 
       4102, 3414, 3281, 4103, 3415, 3282, 4104, 3453, 3416, 3515, 4105, 3498,
        3417, 3499, 4106, 3454, 3516, 3743, 4017, 3283, 3455, 3744, 4154, 
       3517, 3501, 2399, 3284, 4107, 3418, 3285, 4108, 3419, 3286, 4109, 3420,
        3287, 4110, 3421, 3288}], 
      Line3DBox[{3290, 3745, 4018, 3289, 3746, 4019, 3291, 3747, 4020, 3292, 
       4111, 3422, 3293, 4112, 3423, 3294, 4113, 3424, 3295, 4114, 3425, 3296,
        4115, 3500, 3748, 4021, 3297, 3749, 4022, 3298, 3750, 4023, 3299, 
       2414, 3300, 4116, 3426, 3301, 4117, 3427, 3302, 4118, 3428, 3303}], 
      Line3DBox[{3305, 3751, 4024, 3304, 3752, 4025, 3306, 3753, 4026, 3307, 
       3754, 4027, 3308, 4119, 3429, 3309, 4120, 3430, 3310, 4121, 3431, 3311,
        4122, 3755, 4028, 3312, 3756, 4029, 3313, 3757, 4030, 3314, 3758, 
       4031, 3315, 2430, 3316, 4123, 3432, 3317, 4124, 3433, 3318}], 
      Line3DBox[{3320, 3759, 4032, 3319, 3760, 4033, 3321, 3761, 4034, 3322, 
       3762, 4035, 3323, 3763, 4036, 3324, 4125, 3434, 3325, 4126, 3435, 3326,
        4127, 3764, 4037, 3327, 3765, 4038, 3328, 3766, 4039, 3329, 3767, 
       4040, 3330, 3768, 4041, 3331, 2446, 3332, 4128, 3436, 3333}], 
      Line3DBox[{3347, 3505, 2546, 3346, 4053, 3779, 3345, 4052, 3778, 3344, 
       4051, 3777, 3343, 4050, 3776, 3342, 4049, 3775, 3341, 4048, 3774, 4130,
        3340, 3437, 4129, 3339, 4047, 3773, 3338, 4046, 3772, 3337, 4045, 
       3771, 3336, 4044, 3770, 3335, 4043, 3769, 3334, 4042, 3503, 3502, 
       3504}], Line3DBox[{3611, 3606, 3613, 3479, 3526, 4156, 3387, 3564, 
       3548, 3549, 3480, 3527, 4157, 751, 3550, 3482, 4131, 3388, 3508, 3607, 
       3608, 3610, 1218, 3609, 3612}]}, 
     {GrayLevel[0.2], 
      Line3DBox[{1534, 1721, 3803, 1535, 1734, 1561, 3886, 1748, 1575, 3891, 
       1762, 1589, 3897, 1776, 1603, 3903, 1788, 1615, 3912, 2070, 2074}], 
      Line3DBox[{1536, 1722, 3804, 1537, 1735, 3814, 1562, 1749, 1576, 3892, 
       1763, 1590, 3898, 1777, 1604, 3904, 1789, 1616, 3913, 1917, 2021, 2071,
        2084}], 
      Line3DBox[{1538, 1723, 3805, 1539, 1736, 3815, 1563, 1750, 3824, 1577, 
       1764, 1591, 3899, 1778, 1605, 3905, 1790, 1617, 3914, 1919, 2022, 1920,
        2075}], 
      Line3DBox[{1540, 1724, 3806, 1541, 1737, 3816, 1564, 1751, 3825, 1578, 
       1765, 3832, 1592, 1779, 1606, 3906, 2011, 2012, 1618, 3915, 1889, 2008,
        1890, 2017, 2088}], 
      Line3DBox[{1542, 1725, 3807, 1543, 1738, 3817, 1565, 1752, 3826, 1579, 
       1766, 3833, 1593, 1906, 3964, 1907, 1909, 1887, 2013, 2015, 2014, 1914,
        3965, 1960, 1961, 1923, 1999, 1998, 2086}], 
      Line3DBox[{1544, 1726, 3808, 1545, 1739, 3818, 1566, 1753, 3827, 1580, 
       1767, 3834, 1594, 1884, 3960, 1908, 1885, 1910, 1973, 3974, 2006, 1974,
        1913, 1995, 2016, 1994, 1996, 1988, 1989, 1986, 1991, 1990, 2085}], 
      Line3DBox[{8, 2741, 23, 2755, 38, 2770, 53, 2785, 68, 2800, 389, 83, 
       2815, 256, 98, 2829, 268, 355, 2725}], 
      Line3DBox[{1546, 3881, 1727, 1547, 3883, 1740, 1567, 3887, 1754, 1581, 
       1905, 3963, 1768, 1595, 1886, 3970, 1948, 1780, 1607, 1975, 3978, 2007,
        1976, 1915, 1977, 1997, 1791, 1619, 1962, 1963, 1924, 2722, 1798, 
       1626, 4178, 2723, 2724, 1927, 1956, 1804, 1633, 1981, 1985, 1982, 1935,
        2005, 2020, 3977, 1811, 1645, 1971, 1972, 1942, 3962, 1823, 1658, 
       3928, 1836, 1672, 3935, 1850, 1686, 3944, 1864, 1700, 3954, 1878, 
       1714}], Line3DBox[{1548, 1728, 3809, 1549, 3884, 1741, 1568, 3888, 
       1755, 1582, 3893, 1769, 1596, 1911, 3971, 1949, 1781, 1608, 1958, 1959,
        1916, 1955, 1792, 1620, 3973, 1964, 1965, 1954, 1978, 1799, 1627, 
       3975, 1979, 1980, 1928, 1957, 1805, 3966, 1634, 1969, 1970, 1936, 1812,
        1646, 1937, 3968, 1824, 1659, 3929, 1837, 1673, 3936, 1851, 1687, 
       3945, 1865, 1701, 3955, 1879, 1715}], 
      Line3DBox[{1550, 1729, 3810, 1551, 1742, 3819, 1569, 3889, 1756, 1583, 
       3894, 1770, 1597, 1912, 1782, 1609, 3907, 1888, 1793, 1621, 3916, 1891,
        1800, 1628, 3921, 1894, 1950, 1806, 3846, 1635, 1899, 1952, 1813, 
       3972, 1647, 1939, 1825, 1660, 3930, 1838, 1674, 3937, 1852, 1688, 3946,
        1866, 1702, 3956, 1880, 1716}], 
      Line3DBox[{1552, 1730, 3811, 1553, 1743, 3820, 1570, 1757, 3828, 1584, 
       3895, 1771, 1598, 3900, 1783, 1610, 3908, 1794, 1622, 3917, 2032, 2055,
        2072, 2068, 3980, 2067, 1929, 2061, 1807, 3847, 1636, 1938, 1814, 
       3855, 1648, 1826, 3862, 1661, 1839, 1675, 3938, 1853, 1689, 3947, 1867,
        1703, 3957, 1881, 1717}], 
      Line3DBox[{1554, 1731, 3812, 1555, 1744, 3821, 1571, 1758, 3829, 1585, 
       1772, 3835, 1599, 3901, 1784, 1611, 3909, 1795, 1623, 3918, 2033, 2056,
        2034, 2076}], 
      Line3DBox[{1556, 1732, 3813, 1557, 1745, 3822, 1572, 1759, 3830, 1586, 
       1773, 3836, 1600, 1785, 3838, 1612, 3910, 1796, 1624, 3919, 2035, 2057,
        2036, 2077}], 
      Line3DBox[{1558, 1903, 1904, 1559, 1746, 3823, 1573, 1760, 3831, 1587, 
       1774, 3837, 1601, 1786, 3839, 1613, 1797, 3840, 1625, 3920, 2037, 2058,
        2038, 2078}], 
      Line3DBox[{1707, 1871, 1943, 1693, 1857, 3939, 1679, 1843, 3931, 1665, 
       1830, 3925, 1652, 1818, 3923, 1640, 1808, 3922, 1629, 3841, 1801, 2059,
        2039, 2079}], 
      Line3DBox[{1708, 1872, 3949, 1694, 1858, 3940, 1680, 1844, 3932, 1666, 
       1831, 3926, 1653, 1819, 3924, 1641, 3851, 1809, 1630, 3842, 1802, 2060,
        2040, 2080}], 
      Line3DBox[{1709, 1873, 3950, 1695, 1859, 3941, 1681, 1845, 3933, 1667, 
       1832, 3927, 1654, 3859, 1820, 1642, 3852, 1810, 1631, 3843, 1803, 2023,
        1918, 2065, 2047, 2089}], 
      Line3DBox[{1710, 1874, 3951, 1696, 1860, 3942, 1682, 1846, 3934, 1668, 
       3866, 1833, 1655, 3860, 1821, 1643, 3853, 2027, 2026, 2028, 3844, 1922,
        2024, 1921, 2025, 2054, 2066, 2093}], 
      Line3DBox[{1711, 1875, 3952, 1697, 1861, 3943, 1683, 3872, 1847, 1669, 
       3867, 1834, 1656, 3861, 1822, 1644, 3854, 1896, 2029, 1895, 1632, 3845,
        1893, 2009, 1892, 2048, 2018, 2052, 2051, 2091}], 
      Line3DBox[{1712, 1876, 3953, 1698, 3877, 1862, 1684, 3873, 1848, 1670, 
       3868, 1835, 1657, 1933, 3967, 1932, 1951, 1898, 1930, 1897, 1987, 3976,
        1992, 1993, 1925, 2001, 2030, 2000, 2053, 2092}], 
      Line3DBox[{206, 2913, 191, 2899, 176, 2884, 161, 2869, 146, 3063, 292, 
       131, 3057, 285, 116, 3047, 275, 382, 504, 2090}], 
      Line3DBox[{1713, 3880, 1877, 1699, 3878, 1863, 1685, 3874, 1849, 1671, 
       1941, 3969, 1940, 1953, 1901, 3961, 1900, 1934, 2003, 3979, 2019, 2004,
        1931, 1984, 2010, 1983, 2002, 1967, 1968, 1926, 1966, 2031, 2050, 
       2049, 2087}], 
      Line3DBox[{1718, 1882, 3958, 1704, 1868, 3948, 1690, 1854, 1676, 3869, 
       1840, 1662, 3863, 1827, 1649, 3856, 1815, 1637, 3848, 2042, 2062, 2041,
        2081}], 
      Line3DBox[{1719, 1883, 3959, 1705, 1869, 1691, 3875, 1855, 1677, 3870, 
       1841, 1663, 3864, 1828, 1650, 3857, 1816, 1638, 3849, 2044, 2063, 2043,
        2082}], 
      Line3DBox[{1946, 1945, 1944, 1706, 3879, 1870, 1692, 3876, 1856, 1678, 
       3871, 1842, 1664, 3865, 1829, 1651, 3858, 1817, 1639, 3850, 2046, 2064,
        2045, 2083}], 
      Line3DBox[{1947, 1902, 1720, 1533, 3882, 1733, 1560, 3885, 1747, 1574, 
       3890, 1761, 1588, 3896, 1775, 1602, 3902, 1787, 1614, 3911, 2069, 
       2073}], Line3DBox[{2095, 2291, 4054, 2096, 2305, 2124, 3986, 2320, 
       2139, 3991, 2335, 2154, 3998, 2350, 2169, 4007, 2362, 2181, 4139, 2505,
        2647, 2648, 2694, 2711}], 
      Line3DBox[{2097, 2292, 4055, 2098, 2306, 4066, 2125, 2321, 2140, 3992, 
       2336, 2155, 3999, 2351, 2170, 4008, 2363, 2182, 4140, 2506, 2649, 2650,
        2651, 2707}], 
      Line3DBox[{2099, 2293, 4056, 2100, 2307, 4067, 2126, 2322, 4077, 2141, 
       2337, 2156, 4000, 2352, 2171, 4009, 2364, 2183, 4141, 2508, 2652, 2654,
        2713}], 
      Line3DBox[{2101, 2294, 4057, 2102, 2308, 4068, 2127, 2323, 4078, 2142, 
       2338, 4086, 2157, 2353, 2172, 4135, 2493, 2494, 2550, 4136, 2496, 2653,
        2497, 2664, 2721}], 
      Line3DBox[{2103, 2295, 4058, 2104, 2309, 4069, 2128, 2324, 4079, 2143, 
       2339, 4087, 2158, 2462, 4093, 2463, 2485, 2468, 2495, 2469, 2639, 2499,
        4171, 2640, 2470, 2557, 2471, 2587, 2720}], 
      Line3DBox[{2105, 2296, 4059, 2106, 2310, 4070, 2129, 2325, 4080, 2144, 
       2340, 4088, 2159, 2486, 4170, 2659, 2661, 2660, 2488, 2577, 4137, 2578,
        2498, 2580, 2579, 2501, 2588, 2630, 2589, 2512, 2591, 2620, 2590, 
       2709}], Line3DBox[{2107, 2297, 4060, 2109, 2311, 4071, 2130, 2326, 
       4081, 2145, 2341, 4089, 2160, 2464, 4134, 2487, 2466, 2490, 2625, 2644,
        4138, 2626, 2500, 2584, 2614, 2583, 2503, 2592, 4165, 2631, 2728}], 
      Line3DBox[{2111, 2299, 4061, 2112, 3984, 2313, 2132, 3988, 2328, 2147, 
       3994, 2343, 2162, 2467, 4002, 2355, 2174, 2585, 2586, 2556, 2627, 2366,
        2185, 4168, 2628, 2629, 2517, 2568, 2373, 4157, 2192, 2604, 2605, 
       2530, 2633, 2378, 4166, 2199, 2634, 2635, 2537, 2386, 2211, 2481, 2555,
        4154, 2398, 2225, 4022, 2412, 2240, 4029, 2427, 2255, 4038, 2442, 
       2270, 4049, 2457, 2285}], 
      Line3DBox[{2113, 2300, 4062, 2114, 2314, 4072, 2133, 3989, 2329, 2148, 
       3995, 2344, 2163, 2491, 4003, 2356, 2175, 4152, 2492, 2367, 2186, 4155,
        2472, 2551, 2374, 4131, 2193, 2658, 2473, 2657, 2379, 4132, 2200, 
       2531, 2387, 4150, 2212, 2544, 2399, 2226, 4023, 2413, 2241, 4030, 2428,
        2256, 4039, 2443, 2271, 4050, 2458, 2286}], 
      Line3DBox[{2115, 2301, 4063, 2116, 2315, 4073, 2134, 2330, 4082, 2149, 
       3996, 2345, 2164, 4004, 2357, 2176, 4010, 2368, 2187, 4143, 2518, 2695,
        2714}], 
      Line3DBox[{2117, 2302, 4064, 2118, 2316, 4074, 2135, 2331, 4083, 2150, 
       2346, 4090, 2165, 4005, 2358, 2177, 4011, 2369, 2188, 4175, 2696, 
       2699}], Line3DBox[{2119, 2303, 4065, 2120, 2317, 4075, 2136, 2332, 
       4084, 2151, 2347, 4091, 2166, 2359, 4094, 2178, 4012, 2370, 2189, 4176,
        2697, 2700}], 
      Line3DBox[{2121, 2483, 2484, 4133, 2122, 2318, 4076, 2137, 2333, 4085, 
       2152, 2348, 4092, 2167, 2360, 4095, 2179, 2371, 4096, 2190, 4177, 2698,
        2701}], 
      Line3DBox[{2276, 2448, 4042, 2545, 2261, 2433, 4032, 2246, 2418, 4024, 
       2231, 2404, 4018, 2217, 2392, 4015, 2205, 2381, 4014, 2519, 2194, 4158,
        2375, 2569, 2558, 2615, 2665, 1165, 2715}], 
      Line3DBox[{2277, 2449, 4043, 2262, 2434, 4033, 2247, 2419, 4025, 2232, 
       2405, 4019, 2218, 2393, 4016, 2206, 4144, 2382, 2520, 2195, 4159, 2376,
        2570, 2559, 2617, 2666, 2616, 2684, 1354}], 
      Line3DBox[{2278, 2450, 4044, 2263, 2435, 4034, 2248, 2420, 4026, 2233, 
       2406, 4020, 2219, 4101, 2394, 2207, 4145, 2383, 2521, 2196, 4160, 2572,
        2571, 2560, 2507, 2675, 2618, 2685, 2679, 2712}], 
      Line3DBox[{2279, 2451, 4045, 2264, 2436, 4035, 2249, 2421, 4027, 2234, 
       4111, 2407, 2220, 4102, 2395, 2208, 4146, 2384, 2522, 2197, 2574, 4142,
        2573, 2561, 2509, 2676, 2680, 2716}], 
      Line3DBox[{2280, 2452, 4046, 2265, 2437, 4036, 2250, 4119, 2422, 2235, 
       4112, 2408, 2221, 4103, 2396, 2209, 4147, 2524, 2523, 2552, 4153, 2619,
        2511, 2562, 2510, 2677, 2682, 2681, 2719}], 
      Line3DBox[{2281, 2453, 4047, 2266, 4125, 2438, 2251, 4120, 2423, 2236, 
       4113, 2409, 2222, 2477, 4104, 2476, 2533, 2638, 2475, 2637, 2474, 2641,
        2525, 4148, 2622, 2514, 2563, 2513, 2678, 2621, 2683, 2708}], 
      Line3DBox[{2282, 4129, 2454, 2267, 4126, 2439, 2252, 4121, 2424, 2237, 
       4114, 2410, 2223, 2539, 4105, 2553, 2538, 2565, 2608, 4164, 2609, 2532,
        2607, 2606, 2527, 4149, 2598, 2599, 2564, 2597, 2667, 2596, 2690, 
       2717}], Line3DBox[{2284, 2456, 4048, 2269, 2441, 4037, 2254, 2426, 
       4028, 2239, 2411, 4021, 2542, 2224, 2397, 4017, 2479, 2210, 2385, 4151,
        2576, 2535, 2613, 2612, 2198, 2377, 2662, 2575, 2528, 2602, 2632, 
       2601, 2191, 4156, 2372, 2623, 2567, 2516, 2594, 2655, 4162, 2593, 2184,
        2365, 2566, 2502, 2582, 4161, 2581, 2173, 2354, 2489, 4001, 2465, 
       2161, 2342, 3993, 2146, 2327, 3987, 2131, 2312, 3983, 2110, 2298, 3981,
        2108}], 
      Line3DBox[{2287, 2459, 4051, 2272, 2444, 4040, 2257, 2429, 4031, 2242, 
       2414, 2227, 4107, 2400, 2213, 4097, 2388, 2201, 4169, 2380, 2686, 2656,
        2692, 2702}], 
      Line3DBox[{2288, 2460, 4052, 2273, 2445, 4041, 2258, 2430, 2243, 4116, 
       2415, 2228, 4108, 2401, 2214, 4098, 2389, 2202, 4172, 2670, 2687, 2669,
        2703}], 
      Line3DBox[{2289, 2461, 4053, 2274, 2446, 2259, 4123, 2431, 2244, 4117, 
       2416, 2229, 4109, 2402, 2215, 4099, 2390, 2203, 4173, 2672, 2688, 2671,
        2704}], 
      Line3DBox[{2548, 2547, 2546, 2275, 4128, 2447, 2260, 4124, 2432, 2245, 
       4118, 2417, 2230, 4110, 2403, 2216, 4100, 2391, 2204, 4174, 2674, 2689,
        2673, 2705}], 
      Line3DBox[{2549, 2482, 2290, 2094, 3982, 2304, 2123, 3985, 2319, 2138, 
       3990, 2334, 2153, 3997, 2349, 2168, 4006, 2361, 2180, 2504, 4013, 2645,
        2646, 2693, 2710}], 
      Line3DBox[{2729, 2624, 4163, 2603, 2529, 2610, 2636, 2611, 2534, 2643, 
       2663, 4167, 2642, 2536, 2478, 2540, 4106, 2480, 2554, 2541, 4115, 2543,
        2238, 2425, 4122, 2253, 2440, 4127, 2268, 2455, 4130, 
       2283}]}, {}, {}, {}, {}, {}}},
   VertexNormals->CompressedData["
1:eJysfGdQVkvXpaIoKAJmEEQRQQQRA4gIuhUUkWhAFAElKypIFgUECUpSMpIz
knOOTU6Sc845PQiIGIA5/bxzq6a+ee+PqZr7h6pT5/r06bV77b127dWsaq/u
alJs2rTpLv2mTVuIv6e5OPqGR5Lht3/hjcMUPmjV4W/b6AwJXlwZDhLVSwMa
m36B5qeeSMqDZTZrnAQUfM5eqXKZ0ByRMapU4oQUwg3Ttw6SINq4VitGLQeu
B3JfPRH3DFV2wU3vDhLUyHw4osWdD2kZxkFvghzhWfTTws91JLhprkozuFAA
E2tqLrTjobDeseGWX0KCpraE01+qCuBxyQsVG/0kMOvW2VuXTQJH713ZU1R5
wGV7iSU0OBPYX9I4/EghQba3kjNPTQZw3bs2HiCWD9KL27tXkkhgESbyinZT
IvhT8M+I+yP4Vfpq+/E0EgwEGZZv/x0M4uJmutOniqBoNlhcKpcEpjeU76p+
tADp4Ecn6tYK4feZ22P2pSRodacz/vDsI+L37NbvlsuHCLfqLjZi/fLBv7OM
D/uimcsJIeeZc4CpMvgJZTsJtDddOvGlJwR9aMu4otKeAbdvmkwk9pHA2mz2
SJ5YCnwR4roYxhOKRh5lBqdNkoD2rtXNTVrpkCkWYLKiG4L41N6PZQ2RoO1d
0TLV5WzY6ed+OeB+AKLTL+Sj6SRBf8+M26GCfDD8nLGH97076hMUGeqvIcFm
9TfaNjlF8Eh8si71lSAS7r9LV55DgoBHPt71gSUwpjunw/k2AP5QPaROiSSB
H+8toYdspZBaOXfepzkZ1lKmlza7k8CzZyf/G9Ni0K8aSu2XygOXsxuKPLYk
+Hhll7k8Tx4sDw0LPBgpBv5Km209ViSYksunerqQDK9vBtdZ05VBZty9RW97
Ejyxru/9aOMPo4acH/cQz3dznlOu+UKCTWw7Q1SNDNEZjltqSh9KwNz0zlp0
DAnsbqUKG97zR41NUzn5IkVg0iT2O4nAZfC7QVupYwRK/fL8GH1WHqhG6Z4W
qCbBmXTxO8cuRKOl+soNg+tZkG+VCKOtJDAKFswX3J4CnMeR5wxTFFLWfO9g
MUaC16hv3cEvHThzWfulGYn/T95r8nYvCcblzRKqNXIgPTk6tnsxCjk/c7vm
XU8CumulRz+kIUgePvHw6sFI9NXnvsUCsZ9pDyn2mqSVQnuia26Hmi9i7X9r
1O5PAh7b0NUA+0q4t6Z1MWbKBlho3nP+MCSB+Uhbr7RHNYQf55SOrUsGiRvv
71SKkyAxYdEuIqESHDnYLHfNF8Hv69aHHp8kget1a4klo2KQGGoTp8irhNxo
M8Z9x0kgel/kkK96KtikPab4YloDSbt0XMQESaB5yX2XJp8zDF2zUe1/Ug1b
tgQUhSiRYJlzec/xD/7oRKs3JR9XBZQGbqhffk+Ccm23aaGeGLTRp31779MS
yH39K0cuhDiP+kolvvFJKLrDf12kqwDq2oUD7hHn7oLJWvxUQzL6uvli6zOq
bHBk45yiJeJtb3RSRHR9EniV5y79fJSAaDbeNcQPk2BVNua3o0cavA7Plvv0
JBk5VvtMnyF44JLjYR+Yz4awrLE9Z/anInaTSSmrMiJ+zuxYlntbBFGUvGKR
+9JQ1dnp2p4IEvjYelz3VaqAUHqZ3cu3UlB1TiP7tldEHFLZG+xsqwPFn7/v
LnwOQerp1Jc2GElQlvw9jnq0CXTYQq4ZrcQA/Y+DnbqJ82AXtS75nqEJ8t+M
aD9LLoci2fVyOcV5iOdWfpxJXQk//9zbZVXbCHJ67t+o5edB82SL1MLFFHB+
mMk6JdwMHG9Ke1Z95oGiiLPdTsQD2R5ssU/nbwTWNfle9aV5COc7txK2nowY
Ag0eSe+qgfjz9if2iBBxMhfW8HhPJmqS9dKTP1AGMtlOsf5mJDg55DTuIpiF
DO5zC4wnFMKfJxs982EkKN4wvR5tk4mWXrex7XXNghJ2nS0KBSSQqjk3KGwf
B+qb7Lb0uqSg8b6J1SaCb58vPYuWm0yGTLVULmrvdHTF0S7uQwsJhI7urQ6o
ygCW8mO5ipHZqEDftZwhnwTS99+V7WMuhCuU4mWLXQXo1VxBR+9nEqhqfRo7
lVgBh87oGtI9K0bhd9IZdpwlQdTkglXCpmbQUzdV33egCK0XW762058HCSPn
5g/bu8GLcVTAfaszsmvcL7VNaA7ex/Wnmid3A02KHHu+dS1IOQZeDjs3C2z1
E7wd++rBfEnfdLitCxaXJXVVJWfhvqmOI62JL3h9qHJ5PdcFV18eNB66MgfL
E7LVfcFZqMH7S6+PQCuMj5Q7xAvMw72Rs8lZ80WI4/Ajg+NdtaCXZyNxd2Qe
ZguadsPjYkSxQ3e70a0ycKGocs2UJIFIqmteClMRKj7mVMb0Ix9Ci/4yDziQ
4KEvx7dT7fnobezV1/PcGcAwLaAfROSLSE+Zy9WmkcCqIhFDSk9DLB0a3ibE
Ph/2iPc9fDkG/PrjT+3KyULT9mGRqJkE3XJG/TTtifB7j9ZBl8YC9OZDeMFN
gh/8TD4kbLZOB/sxzS90I6XosbRfTz9x7rrcVuVcbhfB337K54xitcjNQPjz
0e/zQMmzssha3AiUAYKHhYNaEN+z157z4nPQ8tWeIWB2CJTafryPq6pHzmlT
X9aVp0Dmo7iRXfUYCPanCKinNsF1VhXRtbQx4D0fJE5rVg9XEYttD90YPHFR
/oK6x2Gt8BwN8+5idI+hsemg2xBUdp754/l0Gpij7B/sPFmParmGfIUU2qGV
+UlUNOUcONn9eR24pw45fuaT0DX6BlJ/Orata84Dz9OhLN7xKsT/MND47uti
OLOVo0Z1PwmoBe63v2oqQ9rifoZ597LAUP72XjU9ErhcYg/daVSMfO0yI+uk
k2GbRoNyGhHnvt9u/nCmDwS9Bwz+irnpCKXzBNYQ+Y4nyU56F20Q+L7b4fZ6
JBtFqlpERLYR+UtgVJrtQwBwZcQqa4oipCCssscMkUDxkkwB66gn0FalXaC/
UI4qPgi+ovhEArcrv9ZGbz2Arw0bW33MG1FjwOU6mxniXJ+WfK1Pb4Eanc78
ebjSjzhajL0lNs8C5cVSc9HDrfAhOiTeWWgKOS4vQ+j0IGx3m5dZ4JyHPu+U
mXXnWriaw00Z1NMAWRp6WzN+lKDqGrfw1p+zEKsw903dvAtGu4ZX3x0fRPxl
dbP8SYPwYEfC34PbxuERs/E4dXMPqqdX10tMbwTdpL+NHZ4zcEhyYMux8VbE
uuOgmXx9MRTW2Q37Tc9BG/C+ZXFvQGps165e7EyHjIPoVMf4PITESj994l6F
rtd25KSZxIJHSputGcHzOn/mxGMySpFRlEP2mclQuPq++fYlXxLYBGfTzAqR
kNAHy0sbmqqFbuGaXJrt3yCdd69Y5qMpdHD/A9M5cZ1CDXWXyCW7EciLbXCN
1BhCm/7zn9XHj8XF0DsNQ18blzBegiXGgkq56dB6zt0f43U18psUxisjl6mR
wAt872WHY7zmH03fxnj9bC601hBFoDlQsB/jpXfycj7G69o3WmUCL/hxNFAH
47X/8ssNjNdYsuvKF/NGoODhasB40XT6vsF4KUuxLxF4wY2VRB+M1zJFgivG
y09DN5DAC3ZJpd/GeKW23ryL8XoxxJ5E4IX4r2ZQkfE6KLYT45U1eT2UwAud
kD3chvH6obH2A+PV9bp5mcALBRjkrGK82uxGRzFe/gvCFgReaI/jq4b/ghf6
F7zQP3h53gsk4yUdkydM4IUUlYXsMF6NToy3MF5f7kpdIvBCDQ8Z7mC8xEYZ
yfxzxOx3FcE/oB90gMw/POwv/DH/qBxVeUWTkwVyAW1RmH/efzXsJfPPsYsR
BP8A3wHPPMw/6t3TZP5plN1mT/APPHDg68X84x52TwHzT2N8bzuDWC2YXrH0
xvwT4uG8hPlnyOzLAYJ/4KPEO6//wj/wD/8sUV3Ux/yzFl5yn+AfJBB79+p/
4R/0D//QSNDTY/7RafOuIvgHuddyb/Yi+OeO2001zD8CHY4qBP+gLv7MFMw/
xTk3jTD/fDJPdyf4B9n+XKXA/DNxiSUH84+Obc9Ngn8Qm0PKN8w/wd2uZP5Z
zHkpR/APOv00lsw/c0+NQzD/LFSCaL10MnJKdVXC/JP/pnMA51OdYObzRD6F
VElLcj7dwdpGzqej4pE9VN7pQOK+E4/z6cWc0hqcT997ls89isyGquhtVTif
uuWFlOJ8OrnTkWKJqJfaYtvacT7dk70+gfPpppx5OiKfQpQUPTPOpwqSt6xx
PtWXdWUg8il0sla8wflUITGOnE95j1i8ddnqDJlDF8n51IjjajLOp4OJc4+I
fIpoj3Zdwvm0mkOMH+fTO/MlKkQ+RUoxDw1xPv3N6u+E82noepwDkU/R21l9
E5xPfUlttTifTnWqFxP5FL2IuvkZ59MQNepUnE8ZyjMFiHyK9FsHpHE+Nb/P
tRfnU4XD2jWGt8pQ4DyfB86nbC4m+TifTvZvEifyKbpdX8iC8ykTn2o1zqdb
rHbzkbgz0GDWjVc4n7aeMovE9eHNftH9RH0Ig1skG3F9uKU4l1wfPtvXJUbU
h9B7IoNcH17uqyLXh5lnGVJ596fCYlmJNK4PX/JOLuH6MHosS5WoD6FpJJpc
HzY2N5Hrw+22wpNLt1JgWIaTA9eHxnoMhrg+3DKycIL0OQTEr4WQ60OmK2Px
uD50/b2Py2AlBsWG5nTh+tA6I4VcHyo3VpsQ9SE6kmhMrg8fnQt6gutDf53V
TUR9iGxPCtbh+pCuqvAWrg/9rgWIEfUhGm2RaMf1ofLPMx24Pnz2h8OcqA8R
i/dGH64PuauzlnF9CMeHPxP1IeriaTyO68PKeNt6XB+qUI34EPUh0tdeisb1
oWD19zFcH1pM5+sQ9SFCpjzk+rCZbVwE14e7A76MEvUhWrzAvxnXh6bfFcl6
R+FBkBChd2AysZisd0ZdJsl659TyYCWhd2CO7itZ7zgJCpL1jr5mAWPPYhSE
+Vwh6x2noi9kvdO8Nc6P0Dtwn46LrHeMvv/dg/XOW8macULvQNM5A7LeqdD7
QtY7dE8jfGKnbFC2pyFZ7xyqSerBeod5v88fQu+gP3aMt7Heya15aIv1Tupn
XUToHfSlQ4vhv+gd9C96B/2L3kH/onfQP3pnUtp+BuudsVejvITeQRRGJ/Kw
3vn0al8x1jsG0QLyokQ9HKm47If1zqndCQlY75xsIWkSegclnDaaxnrH32j7
UazfNeLO94TyhILpqUmyfld63UDW77YbB+x+6IaA5/41sn73qF4n63cq3oc1
fvcDwPUmPT/W71YWP8j6PZz2U9Xp9+5gOSRF1u/WIf/R7z81rWs+vRKEibv3
yPrdu1qdrN9pUNEWrrcB6FP8OhXW7zsFCy9h/b4pZjGU0O+o05iSrN97Bg5f
wPpd5M1bVkK/o9fWc8pYv6PQfrJ+71rqYSb0O1K2NNmO9TsH1xxZv//y+1pG
6HfU7ZFI1u/3Y117sH43MGeOI/Q7cjtTroj1+2NO0VCs31sUqE8R+h3JS0hv
YP3e5rBI1u8fSPXJhH5HQi/dyPr9w/Nysn6/ol+2RpeVh2Suz5P1+1jHEbJ+
76Y7t8fweha6XGVK1u8C5qfI/ajwOhLlYQof+GFG1Y77USy1zeR+1LEx2Y7m
p55QLEhJ7kc1xvuR+1GntW5qKZY4gbekPbkf9Yi5kdyPGp0rucka9wz4da+T
+1GmO1zI/ah9AfEDpkGOyNhWn9yPCp/IJ/ejwrymB3eNh6KqJhV33I+yJ6Xy
4n5U05lN1631k5DYos0+3I+qOWVJ7kf9DqElhQRnojVvN3I/Sn0+0An3oxhb
3/MFiuWj2KTFTtyP+jS3ndyPYspr/C3uj1BI3llyP8oYlitwP6pX8ytMnypC
BZ8PS+B+1M/F1Du4HzXLJS1ft1aIbv32GcX9qIP1z41wP8pALyG5Wy4fUedM
deJ+FIuoXjbuR0m1qOqfZ85Bu8b5VHA/qnnqNrkfNRs3elqlPQP5eIeS+1HK
lMxnzqQNQXOiVKi/TiJUsAb7KX2ZhrcXwinDJrpB7W9r4uSOHrA8o32nJmUK
DJqKZG4faoW43BiPiH2DSMLVdI9LxRQYMwuNPqyfgk18A+pvpr+hbds6trh4
D0Ej3YS9MtUQXO6YG+ajHoeSHb2+czYDoLSN7kGkXSnyoa5zDdKYAJ7OLZ33
xMeg1zHyq3BEGxJbTqo4ztgLXRObew+ETwNTbD7Js6cIeX8qHH13pAVlLnDM
LV8h6nKa8CP7t3Qgw9zV0f62EbR/yGBf251x+Pm1iedhTQU03fhk+IWFhL4c
5Bc7JFQK1DOj56le56CSPnvBHoK/9msy0cTkFMJXli69qqUJdEeceexlXT94
h1/78PdsHxhpLG18dx9BEoq5aivvvkGu8clfZ5UnIYytc568nrk9JGI9oDHr
PIPX48JWxITXc+DIg2liPbB/IoEer6ch1U8Rr6e/cuUVsR44+7bjJV5PXTqP
Kl5Ph8Wxi8R6EPVooQhez/nm4id4PaxsW0/r1PUj7aCX+ng9tu3oL17PrrEk
RKwHiSnw/MDrqXhlZnFHJBd6pxad8nJawbvyUeQAwzw8+V13B+OVckzPmcAL
fnGqHcB4lf42m8R4LVIWbCfwgmfHC7ZhvC58TfiM8Tr/LaKbwAtZdTtFYLwe
mukqYLzO9t39TOCFKvb5dWO89GrM0zFesVY6ZgReKHHHzjmM1/51AXJcxe6U
eUnEFXI7UU2Oq6WxCxQ4roI+xBQScYVaJY/L4LgSf77FWNYqFcqpbSYbJvyR
btYG38cJEgyryqx/Yk8B1cfsvGkrAeig+3DAnWkSHGspcBVyCkM71kKXa82y
4SdDxEcaQndEbBadoJOIQE5vrMQf+2eCKbp9yKGLBDlfH0zGTDcB953yDxSS
TWAxLNpp85aoi1opO6h/tgFtGXPKrEYbcI0ySQQfmAUPxmePG9M6IczATnOm
rgKVSLTtmFuZhay/s4ptwgMwLBf21JUhG8kvmyQIlc0A7/aqqWKeLvi7bhGp
e7MVVctG9i0GzsCx/hf7yo6MQ4qTSMxOkSBUKVO8LYtxAiTf1dWrGWUR+fZ+
7qWaQXjitmlJZv8MWF/WbX80PgAG3tnX+qSHQLfP6Mx84hgkTmdv3/siH2Uc
eJ6WLdsN3XQcbszLs+CZfC/SvmQILE3WBNsn+xF9/IaARvwYsAvmCVkUJUOp
xZ9frppjqPzGmZrStAlwH9/ddyBmGprYaq+dfdsETHvGFdMq+4F5+++TDDKT
oIl2R7oPDCGh8XtR9PJtIEad+mTxZxGI79vO6LtzGno+15j0MA7DTXYWLceu
bpjQ1neyCJgBgUz/3bQ7m8HdLNrybVUz2pElk3TWZxi4nxcjfYlJ6KKh4vG+
04PErDfSqtfGoUxc+Hmx+xCczV7t+HR0ABkrN5Q/c++AmVuLH1sfEXouzYNK
YrsxSKpYhTOwFqOsB9kjfJkk0Nr3lPx8wvNWHPEcpncZk5+HDjsMp2gFIf7S
spY1s0rktcfX/ro+CWybrIfw82zLz9PEcyhbt/+In8/upzn562Y9mjjsZEna
6EZfaeVytlPMwks/32beWBL82O8TE6hcBAMM0Ro7T6bAC9dcuk7LUbSJtbqE
fecE/AlouBJG1wSb/ut/C1D53cOCnmoOKf38/SfijFwhe7BM5IeZbpiVe/vh
yOkx5LD1hkDd3weF//k7AX2/Ao7g9dCya34l1gOnrvol4/WIzN9PHNBoQ+Kq
t7ftUZwBqWMLAvc1u+C5pFsrXmdtyNOXxDrRCn2OJl6nvN67yxjHvKfP7Qgc
wXPDOBvjuHo9dTdef4ReXhGxfnStzeAqXj+78hUrjCOdgKA1gSOKvsTFhnHM
lduYfuo1jl6ZiVYP2bSiPRputysERmFLyYtzGEcJCZRE4Ij86tN0MI4zEmYq
dC970Gyw7rKudi5i0pH0tM2ZhbCIk7phg+VQ/jZhhj+pG4zRhu9xt1nIW3sW
i+M2zGOSmYhbEMo5fwXHbd6nMHV87sZTxZun6yqgLnGFHp87LTmKIRy3Hp+K
WIm4Rbp3DVRw3F4+5Us+X+/nJD13iARBTsAC+XyNT915heOWvbOehohbdEDN
+COOWx0ezs84Pu/0cngQ8YlcTN834/j0p9Lpx+dRu3s0gDiPqKxvB6UscR6r
3J8nNNS3oMG22uOlqg3o0NHT4k+15sA+UmsbPo+lszo5xHlENi/qXPB53Bol
VP9n/xBkGPSrrvI1ot/vm5z8GqeA6arQqoBcOwR3nKZoC8pDC2alT87VzMGr
ckthwauNcIDBqU777SBqVpqaFDo/DeF7ach8yG/VGU7wIXBE0fJjPnTIvEzm
Q/dXttkEH8Jlp1IyHyoG/ybzIbtSbDPBh+iBCY095kNnswesLd8DUd7gL+WL
xlloIpL1+dZuEoxEBdJOHk6FMofYjAhLbyRlRK/6dur/eh/+eX/MboEHr9PI
y2iFWCew8eo14XXy2o6/dNEJQQdpFuo+J/WDbS/3zlP0szBkP/+sWGcQ6alq
1HZUlyAjpu1nH9POwEWq8xOYJ0cPHM0meBJMZBq7MU82j4q7Fpg4wBTH91gR
vVF0u+xYk33QJGjfSSDVKLehlPzJmAvfW1HmOHN1za1ZeO7kq8fmV4Pcb1ZS
Vmj0otovR/baj83AUJN4165fPTA8tTt51SMbqaU0cq4FzsLMWz/y93bvcW0j
vhckeneQvzdr6sU4zhc2TwIRkS+QAOMGA84XUqbjH/B6xtFABrEe2LuNvgqv
5/U7nXl8Lrg+7UokzgX0uoTfw+fif/A2+oe3lyq97vPJzwGLjeRGOFUG0qA2
FFje0gXX2B+9PObXjsLfqjXe/TkKu19qnZh6PAa68i98KfwyQPAY86h0Hwmd
M7LP9UoO+1eeuevlQu3mMwvV3dzWN1y6Qc5d7toscd5ekiae3PAtQk8P17Pp
Zc4jjrfG22sHG+B8aki8TckIOnJfrrl6eRC973N+d9RvGEZ0b9Qsi07ByrOu
rr2raejyo9I+77cjwHLBnfycdfpoGvEc6pzWyc9dWhzZWmXHwF3cOnq+vQ9O
snlIcIUNww2XiMVjVRNAs1Kel706BJJmX27VinXA2dLNRZdNCN11wP8bswLB
IzddVphFJ4G37v3xnPZS9CLo2q25Z9PAEh1cLqAyBEeVjh8Jf9SNrM6fP26y
awBmDhqzMyVNQkfL11e234oRp8g8ZD4YRuGiA0ckO6YAJCmWXYl96FZQGyb2
ASnd6ziD9yF15XyK0eAYyG39+G5ryziEsPxcF6oqhcaOTXJ4f8TiktmJ/YGj
5r4L34j9+bd9fiM3duaQ7yBSWNi/yLh1EqofvWiL5O8Gy4XiDPJ+lokUEvsJ
97jYP+L9vF6v9fXX/VkUyZGynkrfBjy7zdhfrLUCZ9yJE+mZ4yiDhZs/w7MY
2OUFfyUxjcPh3kfXLouPoRD+89/tHQchT2fxjBAMwd2A2E9Mi2OozfhQfc/d
ceCytHN+5VQDj5niZnCcSCjtHSHiBNT/pGz2JuJE5Mls/cGSRhDrSPzOs30O
grY6DgoeaPvX7/q35+6jDxvwvvXrcaoQ+4aWTwseEib2bdGO6Qv+Ll73G0pp
9G1Iso7jEP6uC327efD+xHSprBD7g9zTVRrw/vydSyPHfwzHwCIR/+Ba6EyO
f/M/mas4TiQfN6YQcYLShuxlcZx8vvj1KI6rrZYHs4i4Ql7+O8VxXIVUL3Hi
OGHSMRcj4gTFK9tW4zg59KfMEJ+jmGThSuIcIcsG7dP4HHXrVbDoHx8FI9IN
+U83S1AIo9iNQ/qTYPzujpbllg4QThzdc9lwCIkfu5LafmkS1ssOPXZInoAf
Ytcvay2MgOvZo6oaJxrhHJ/5Ie/aepCdsbmUZTQPZb1aZY9Vq0An+IHPrlkS
hLH8fBYjmwJnXa6Evn7jBlRPlFfc8sdBQmXsur78OOITC9k3l5cJ0UnxZ0Q4
B6Hdbrz98vsZcP4cNh9zMx1io+mFSzkGUd52rXR9gxnozOuNek6V8/+M1789
Hz546P0DhXnUl1daolCsWvji+tbcJIlWgN+2J9yJdT5f3LeHWCf8MK+4gdc5
L7X5IV7naYlLiFgnarmx6WgssU7DKYv4c+bDkJy1/5b7zinwF7R8WRxfB5Qm
xkZ43ywqgo4Q+4YszR7r4X2bZ8mXwvv2Wl2Bn9g31NbCM4v3LaL13ORKTApo
cHTsP9Dpi64MvTzXS/DwjlHaXLfYUMTZF/ynjSELXLjOHU0heLjn60PDT8N9
cEFP6TSDfBfapCDE4CJN8NTqMzHFjDHYnX393MalRmQ50Xq1gn4cLv+p/8a2
PAf6nSPSh2lr0Z4y/bDawCbwPtxdtsDfAW8EOxIN9ceBz3Vh6kj4CFT+PRR7
YH8iqOxrpuR8OAGeuqTHSvVjQJ3Gu2uzUwNs07itpd8xA6MCz8c57/UAm9rM
S+5juWDeMj/3edM8KIZzHNS62Qa1v3daNTE1oE8cJx4KMDQj6QPi1Iopc2Cq
UmSBnx9ltXtKPIdXlw5ux8//DS8O81DX3/LTKJrX/5DCSA24Xmum3zo8CImy
Sm74edHw6x3Ec6S4WWI3fv5u79h/4vBe/gkiDhHduhM5Dis3FJvxPrB/kGll
pq0FPVqpr3gf7KaCjuPvknod/4T4LvT7VNZv/F3cG4NcNSOjcHRrDNUtQrfd
qLTr+eMyCLuDNk4aCHmC5cCu++I7Z5GszO3zMrX9MGN7gYzjPsay5f2dvnDD
yZCM4ycHUTKOl7b0dRM4Isr9bmQcP9TyfMN1kfQAuzNRF0HxBb6PuC6intQ6
jM/pxThWd+KcwseP/qL4nKoxDKTiuve2Ic9Wou5FBy3vXsZ17/qeVBnMk04P
S1sJnkQ1h0qEME9K5KVcwnpHuSfoD6F3gCc0uwrrHc89HMI73g7BTkeU72Xa
CZbsYueruibgqvBeyme6Geh+3q8/+dFT6DeNR1nc/DA84RHNxfyZOqz2i+BP
xBrsWIH508TyQzDm4ZaNhVyCh5HJ6yNhmIclGY30cT4SCD0mTOQjeMpocQzn
I36/4SuffrXCwBU3iQ7bUWAK+eBDyzcOcky8jNJUKRDrOftlXscPUa2c2nJ4
hqhDQj/x4/d/XIt4QLyPHudGfsbva69Ms2BcLE2+HiFwQfS7djRjXFTXWq6u
s/TAuZCMmkazQaSsofhavoPQEYltL3eyj0Opa0znt/JOlPBCazXAcgTozX4+
1KsehKiMZLabiROoXiw55+ZCNzg0uZUe5J4GL8fC6h7LDuTt9mStSrkXwnb8
9MDn3ePpocfEeUcaTkdu4PO+M0yLHsfDnlPlT4h4gG5OBRocD3c+Caf2sA5C
9Euh0r7sSeg3vVDNlN4JNvctv5sc7EVRHDOyMnqdyFB35s74tmngKBOcx89v
xn9RIZ6D/csRGfz8o/zzb8+nh5DEgSfcQx696MSa2vGa++Ow9wdvFX7OzkRz
lXgOc8VKR/Fzb4O065g/Z64cTSL4Ex3mhwzMn+FzP7Tx9/LLjtAR3wuXg3+0
4u+dvdjYgL/3TDivDfG98AIid1QT3+v9ka4Ar//Xpe3ZxPqRdEZ1F15/VJG/
KeafOFA8QPAPZEwmMWP+yaG3uY75x+P8tBjBP0C5eeIK5p8BC9ItjMsBUMsj
cIHoeSVLjMuOpBATjMuDD5Z+BC4w1EG5OZDAxdqupY/MS1pjXgQvoZeRuzf+
Cy+hf3hJSUwyZWUpGJ1ZqG+7FpEJ71XFHoz2kOAom2l9g0UKcBjMW7678wUG
U8+u5hC6gG78xXK2TRiSb84eCBDKROL2JS/i/u/30T/ve1ZcIL9/rtR6U6BQ
JrgfeUp+/82d+FcC6sPARaE1YnG3HQXIx7BfTpmAo9SMr0mV1ZDU/3OrnM8E
0Cv7nz0aNgr2F8YtdvGlINWjX+T2MNShtmOe0S4HSGAktaAhOpCMBOP7go7L
VaLIn3tqEzRIkLmY+w6/v8z57RLxPlS77YvF789sLyK/73XI6CvxPshz5nzD
7wvwFr8tvDeDyi9qx+l/vV34n7+D4NWvaIf5uUBrzzTBz4hnmoYb87OxveJn
c89+MFLkpghSGYXKwMIwUeURuPD5KPk8Jq0LM5N0/OBKym7yeWyUMCXv8+bR
TRXEPqOd1w3J+0x7s4Ma80a+Z/0qwRvQ1VpVhXlDnMbMBvffpgId1PNyWhF0
XIrH/bcrcTn6WP8ajW3rIPQvmov4GoT17+0Npksq08VAMtzrfPzvIOLb3SRk
iqah3vfEO7zOINeN3cQ6Eetmcx+8Tu33I/48b4tQz5Z38Qdv16JPskGveEjz
wJKyQX4+69wYTTyH65dayM+b14UMMV7RU6fLCLxAhuoqF8ZrUsjZGeNFWWSx
fM9nAl0/ViGC8fLh32HGMWuJBMd2yZSXlaJB3yJD40ASVNzcy/tKNhipZIkJ
350vRftc2OrP+5Cg3+/CG/y+i/VDc+J9aLP8ro/fT29uIb+fd4LiJPE+WHaN
kd93ehJia20QhVwZuSLHzcphbEWGfrcNCXT3f+qb/5EA3m/ke6dLq6Gku1px
7RYJHMXzzlyrd4BH7o3m6oPV8OH46sIZeRJs9XJ1fifqhU40Tr5Pm/0GLN9E
DvRfJMGwj1DapvepENH+ZJGdleDv5xdNdIbmIeW3145i/zAQN3aojBKrg7Bf
YY4SrERdIZniMJOXhWYWk+o1Xaqh2ab5xsYFIt5K7cbqDreh6NVOS6fpVtDT
s3be9mAWrki5x+qujqNsKVXqvdtGIOiFn//MmQ7QtZTQwH2P1qSnwTrauSC5
LO6D+x5TDYlnFD63IBoTtkKdT/Gg/91GuO75PAwZJK9d5K9D2Rs6u44cCQUu
HoF5LjYSnI4vF0eFFSjC19ZvSNgbjlMlHIw1I0F0PMl5OdkL1mPTOf66ZcLm
dQrqa/0keFLP2U6d5QaPGW09t/LmQX1sc4hhI+l//i7653cHk3au49+dftN4
l+VIKDqi70P+3esVo+TffZpSHjQo7I227u8k/y5P4Y69371sEcXfe5nDBsWg
2dsrypxGggXDCoae9Ar0Q0HM81hFA2RKX76p+WYeltLStyWdnEZHGsYS7Og6
IOPB8Gf7wl7Y2JYS7/tyHMmaal7a4tkGV9nsHsuyjEJWILV08rFZtEVa+1Un
dRd00Vo98dZsggyFz+ottLNomSmvaeFTH1Axnsmb5Sj+13rpHgvrs7Cnk8jH
tWfnkYhRKFyi44j9EP2v7wf7JDQ/amlBMCnqJ8nbCGcv1M6Zyc2BNOxXuPuj
FqmfbapwJuJEqUU3wkZq/l//Hdoin50+k91Ic2Ff0uafTcB2xuIuQ8AMcDog
toXGIcT645pcTlcLLBxmkSqMnoSByuaoiCezyOftdFteVTe87XEw4eauhvw1
fa4/vJno/F717fNhFXDizStWlyckuDfg27C7IAmxfLt3R5m2HJQLVO7rWJFA
mutHcmFtKppYD6PZ21QOe4yMIxP1SaAlSeEWutSIFrStsrRK6iElQ+r4meE5
eN28pBf+ZhJ9dlmQdZNrB6B57yArNwTjtpmUpxIKES+/nOKkWRVk1j/d9eUU
CX7tHQupZyhHT7tZ043iaoBCNPlqcNc8rEjkSnWtF6M4jfkcz4/VQHPihrYi
FQlEf0fZkw4NoC6j0yypk83gNmux3H1nGqKaVELPC39FIY0Dkn+TSiF99tn2
NG8iHykW2Vyg6kB6cjrV9mxpQLnoyedSMgcuntqLnnWNKN6XkoO6NxKsMp9t
HeycB8ohpsqbUdXo6tnb6fmK/hBeEzhSR/CAV31+G5d8GfJpmTn1VMEdQneU
dAQQ//5SiOuBkXuewHPywOiPmGzofcB25kYnCfR0t4VZiXqDtcOf+tFv6TDv
+f7Wn2EScFrrrvVdcARzNkbTvZKFIKV1QKasnOA9plbBay89kCLvkDuLXwkY
cz+/4BhFAv53aeq/f5NAJ3bfd4GaUDQTJzaX6KYPXcEc5O+6K8p/zIEtDeXJ
1J/H38W0Gkf+LossMR2q3ki068sw+bs8ZhYq8HdRNXYmFij6ozpZbfJ3nbxq
Q/6ucXbzCG0Fd0QR8Yz8XW4L+9J+N6hCjd2v1YY9CGxvlKY8KyXB9AOJu1Mc
o+jnSy5rgaJWSDGM0E/1Hod5R/kduavT6LBUeKHX5iHofr7qS/M1A1SUnZbY
g3vR7G7pXPZgqSv/+TsLw3Gy9CPz2qhubQuFy6siyFoemD2eTwLBwbG+3KhY
FBS2MsauUAYSLvWe7s4kaFH/mddBFYTyeROc1s1LQOb7hyj7ryTotGIcoGzq
QlUR1mtbB74irw+xNRtX5uDugHVraqw7tLufvtpplY26b+0XpCR0wa9fXDeS
jnWje4XchXTRpuC7askawT8HqqeKom6wvwe5m2wCVGoFILQ+8d69mgSui8cj
jll7o+f3NGhp54rhxU4Rr+sJJHDXO3n+0/1cNFWO2G5nVUJW4imJ+Rsk+Hsj
jZf5agfaL1dTFqjeBGl/mxI/2s7CZul7BjqnZ9DVqt3nOqY7QYyrzzelth3s
f+SOClLZIEYpdvFg/WJkKKY8e4HgvWr2DsnpfelIcnb6R3x9JaLJcy9TekD8
7t/WfYXDTWjbvbKBROtmpPnr+vdrUnNQldnfF3hhAnFtN/qzdnsQ2d3/pWny
pe9f+WRs5Q+lvlcXuhaR9uKU+FeC7yP+fCT+HZqT0XQcwwrQ8/BH63Q8QglC
Jw/uKCZwD8zn+uHehkyFx66++taKsihH6uPEZmGcTruGaawKjR4Rkq64UQtf
Cz2OnPWah8rn3b22MsPopdvaFrPT04hz9tSwunHCv65nj1fK3bdrdUjks9bB
4p8NaEqxRSmZfh4+ZzzLfSs9gb7mM7cc0BpG1EkmDyUHOkD4V42k0eoY0jk1
fpFlrgPl7dx4JL88Ar7Ue48fGppGOndU80e+DaKVFuFU/oBiKO7IeHTfdAgd
3Nn57FJ4KxJMHLtVWDgJ3lVy1LzPslFarNZqkXs1GqQ80If4SGC588Zsq10y
Wjo1bIjGytH4Jxf6cWMSXP3IanjzeCk6/T6IgneuFt3+9Mjqbd08yDX80p+u
DUejxrug5l4ZsszRVmlzI8H6W06x/R2tyImqjC7jYjRcG2yJaRKYh15vFtlL
efWoMjpn1lIuAKaayx+c3EUCptCzJtWZlSgAbA1uHHCHQ5+usg/rkQg94arq
HOkGffoZuZLPsmAhjFLRpJcEB369M4hx/ABqAR4PuC/nQ6cBOmpdRwKzwxYm
e1la0MhVm2S6MxHoA5/EnIwNsc4gvUJbp1pEf3X3Qz9NH6S2V4PmNi8JdhY/
Lta5VoH0j0YZ7xhxQbRzbMkXrEkQf0Ep3dXfFQXr7GVoCi6GyBMMm0eSSaA9
yDeUmP8RKTHrduh2FQGtwYU+zmwSPC7Tr15/NI2aPIs5Roh8lClSKeWj3g+i
TuWfOYn6j33KO+6ASwtUPvu8/ODmCJgPH+nOZZ5DXu1u+drv2+A7H7v9Tb4G
eKE7U3SQZQ4J3ol1FHDqAl4x06qnY/lgIB77NtRiDtk6XaL3WmmHmqtHWQd/
lPx/61+hleet0Q9a0MOJH8cUrOrhXtvQjr/2cyD68st46c96NHj42hWbmFq4
nF5VuvvCPGxOsmNtSulFX1fCvczYm0CmwOFL860ZqE6jUJ6eHEZ+uxbkOO2b
4a2m8YoYwyQYWvZ9sbIdQnfEtd+2MzfD7klBqy/npyBZU5vBpTQDVcfvj+vZ
XAE0pqdeTjwlQbIfY23txRRkQPkrU2BTORw6Ij946h0JXNQsKjpMilD27ijB
TNEqyDDf0necgwSbKSrC1PzLkOggmwJ7SDW8sF1xop2bh9hycYFs9Wg0ZF5q
8zu+FEzr0JKgFwnge+ONw3Jf0YKZev13o1LY1V+pNkPUz6de8OhovChHovNm
dy8uWAN6NZ/ASvBwKcumwr+mXnCHgk7+0lg6bKq3Kukh8lr8Gz6TKi01NMgs
EdphiMCb8+KdaYI30uUqfrzhCkFHZbbeLa8qgZNCFrk84SToGFhN7I1zhXPu
nPeVv6aja5qH5QVGSVA2UMJFe9ERhoTFngwOZKHxDFevYEIH7TbuOp9y/hmY
WN+2n9bKR4UeO6g1iDg36LSZEzBSgRx9nZro7HwUO3HhtmgtUbcHuoRky79H
35Ku/y7/ipC82NF3XUUkiIjhcbiwQei/iIl5y9vOwLqbj75S4Pa/xgPTTdGi
TxbViHvQTu1dbTX6Xvzz1K3kf6/Tep/3RBuozKGjKx2ap/vrEbNQkCYzeyv0
DgYf3ZvZhb5qklJMH9YjNU25q8wys3Drmsq+m99HkZXswwL3a41I7AWF5vaa
caAPOp9t8nIecQbzc+T11CMQ0PR++r0KjqRG8nK4zqOU8UrDGKFmxKx6Rli9
Ix32DZx3ZaGPR7oMnHs08kpR1an03wEE/0j5afaLBqWhy1Yfv73dKEN+Vws2
+ZqSoO+x0rLR6yYUUJnS/7zsG5r5w/mben0OflrMPfvhOYX+2LZspd7RiL4x
XdTLMB2C3e1rHZGiBeiy2XUOqYYKFJSz4iMlRoKbcqFBBj4l6P5fp1OdW6rQ
FTOr6u2EjhZ2Ofy14sAgcjTIsNJ2b0AdbyXQoPU05O9453nijh/6+80yW86r
GKWUTsj7J5Fgb0ne1F+WQFQZyXNWobUYvTaJqa6JJ0HU4HEGP+MmdPcG2zet
88bw+86H/JPV81DKUJ3wQrsGsZqRWLRvPoeTe4R3xMoS+qVgq8/PhjK0/Dur
3NZaFTL2yjj/dCfBjVoRdgtbV/hEolW42JIOswzc1ZUjJKhtLZ5viLGHkmLH
MnH5bDi9FrhLupsEFpG6b17d7kDMEyI5a3bv0UBekFN17Ryoie74PN7biLp+
nJa9tmqIMs6nGOr0z8M9WiAtRlSj62cizj5ce4ZEH/W59SuQYITj15Na/3Dk
+OD++VN+Jajhs8zqUhgJshffZ2henkXeb8/WeexpAKOU8z1rlV0g+1vomeCR
cbT3gs8q3fVG4D+U+HcuYgwsOCeTzdXnEJ+Fr+/TT/Xw+W7xPPu5VnhBcf3A
jcfz6HjF05eVlS1w5HTy5bzGpH+NT9v7VY53T7aj/ITGLivZOpAu4f6bzzwH
+9zfP0i3+IYCI2IL1ERqwHfk+Nb7n/89zj1FfYY4k7tQ9jUeOq9r9VC80dv/
5/YsjJbLR+C4/UIKfZ7fUw955bH2OG5r129zeh/MQXZ3E9770FWAF+/pvcrK
JBBCftfeGSeit5Smr39SlkGYl0+6EcEza5mue68TcStgoEtltkHUgXaJaz5E
3F5YLVnBcbv8grqaiFu4dYf+D47b7VsOKpPj9mOrEhG3oNz6SAfHrarPQDfv
ZSJu885LP6yqgLPpiV0ZRNweeK11iSesEjGybD5wUbEa9lhd25gk8riah6sl
jueKuyOiRDzDB2kHcjwP7lmMwPHcU5i4QsQzTMhdzMLx7Hp6Cjl960AUFA4z
XeXWYFY34PwkfQ6e0WQPHOVsQuZ16/R+IsbwuMXv2s7WeSjoNjaZpaxB5xKM
1jPfPoehXkrtfjkScEfzTqK3DiC+nZJhM3M2BP+soVkm4vDNJ5HLjARfHWI+
+oX99mckCW/u5BN81ca2Qv7dOyLS9J3l1ujLbxL5d8/vTiD/rjTFcnmoiDHa
xvCR/LuMR83Iv7v4SuRk0tvnyJyfhvy7tirhNMbOZUgLdDVX01WR+5b6ulwi
Lzh8VTIp/Hgbwm11KFJpC4CloKV+1zcSsG0T24356tS2nk0e1xpBTqhZEfMV
O+WW3ZiXqtS/icQKNcOpl4XsmJeO/j7bqiv3Hs1sPzBHH4WAX0/saSfBw3bW
UvmX6OLRgVvs6g15paBsMefhS/CVsZqVCj4vai+YmInzAgcLOX/h83LuIaN5
7KFA9OlbQp9rUzHInxJtGyX44Ro1x+/MU53ItFDUPveGOYqWURgfDZkDpzdb
PzFT+MAbln2BeK6TdfAreZ5zSUySu+WpJ7zKziHPdfZTrc7gec59ogpqyiVO
kCnmfA7PdQ4KWmfgec52zQKnY3HPoCX8wka0Wg6kNH0Sx/Oc867ChyyCHNHO
k3/dNLnzwdnsdBGe57xcq6hFOx6KbG/znh1YKIBjNne88DxnFC+rIp7jHOAj
XfeuKoDB1P6DeJ6z6KjoLzzHeUF0SATPdXoUUjrhec6KL7qlAWL5qPH42Qt4
rvOriH4Pnue0vxeUjOc4g6lcNuO5zutXi6nwPKfyBR9GPMd5XXqDGs91sn6x
kcTznIt3jaNq1wrRlferXkofLaD9u9wEnufcU/Kpp0suHznT7WbHc527u0d7
8DxnUEvgOTzHycSRNWd02Be1jh9TxfOcG9cZlp60Z6A5Ufmf3j0hiHXk8SSe
5/SRO5mK55I57yjuwnPK4+kcIXg+2Sb390U8l+xFFfBnQzMd9O5PjOP55NyZ
9E48l5yRTSrCc8rfveLI88nbLsWexnPJ7utJZYwF+eBhcWsUzyfLhiXX6L8S
BPSG2xjPKUdTfafF88nswhqyeC55U9bwUzyn3PgofAeeT36873HHl+ZkVHhr
+2U8p3xjf/Aynk++6rdwG88lsxo8rTM1LYYb36ZU8Hxy39C3v/IjxWjTuOra
fZ48EM+4swPPJ9tFtkbhueSze1VJWgvJINe8YxnPJ5+K/iuA55LZHlNyO9j4
Q0vMLhU8nyw8tsaL55I/urN+1DYyRH7d+8jzyT3yo0p4Lnl7zOMkPKdcM8i5
hueThbQWPuO5ZO/MhfQSxwiUb8J9Fs8nt+tOU+G55F+BLfJ4Trnew4U8nyzf
7Gw9zRQFIk18YnjufnTPdSc8b9/Op9EmxRgNZVIBqXjuXrH92DSet3e4t6Tf
vRgF6Zse6eO5ewNWcxE8b896250Zz9k/tpNSt0tDYGZiYIXn7V1nfinjOXva
WEFGPHf//bUsed7+t4PP3+gpG6SmPDuB5+4LdSRP4nn7H21F/njOfkFWphHP
3WtImZP9xTJL767hOXu1V1u98Nw9w+gwE563TwpUn9ucV4k+QTwbnrvftnzu
CJ639zXYaPM2rUEni8499lFPhfrV9x543l42KIARz9kL3kw5oc7nDL+YHpXh
efuhee6o81wVyKOXvhLP3WszbjzF8/a+i/1H8Jx9hfTNMjx3n5HeS56313Rf
+yDSVYCcLg7Z+8QnoU7mi8F43l7hftUtPGf/ivZuA567n2K3Js/bu+U6l648
SoDl/cu3sI8k3fk72T+S4tuljX0jVlIBE9hH0sETQPaPtGW+L8S+kRRemjfY
R+J4bIcM9o/ov2YkRexLA9KFfVvvvy2Cg34X6rB/5Hu8kRL2jQxoHtuHfSTX
/tidxP6RLoqfT7BvZN2/mh37SGQHjgP2j6x7xLhi38j+JU4Z7COplDw3gf0j
+08YcmPfyMDjv4exj8RVQaQB+0fS80qrLWsbUXhywhHsI6nyGe/A/pECT9/l
SeFmBK1/d2Efif0w9Qj2jzQEWFzBvhG9lr+3sY8kTOzEOPaPpPNdPoJ9I1/a
+n2wj2Qo6xk39o/oSJ2VwL4RYc/7H7CPhP3cUDz2j8SmUiePJRSiLwHCzthH
spC/bwD7R9K+Mvza45qFhNik3KNsMpGg/xgl9o+ofXyHfcXA3Nc3h31RrCy9
ZD/UxRppF+yD2kkt7Y99UTsMzidgP1QraUFAMTIbBLovawVWZYChojHZX7yT
hvLRYhfBs5sfMO9nLgS93E2d2A9laJkzSfusGP6yp9HyJFbAq/3xTNgPVbAt
MXjvgSKY5zI9g31RVd69DtgPtWAtve641RkoyiX0sS+KWoVbDfuhlAYDJLEP
ysXZTRT7ophf29/Hfqj1k48B+6BUJW4Gte+rB/qQTXbYD+Whpc+HfVCc/Zs/
05j4Agorc8B+qCUn/2Dsg9JOuJmGfVF8R654Yj+UjHD4NFtXLWJI5MvGvqhP
VifvYj/UQ22FOOyDWvwVUnblcTGqMDrzBfuhhqftebAPKvg4jTH2RTkHPWXF
fiiY5jo2z52BaOpSzmJf1NL3W0bYD2V9POgu9vU9ed7JVGUaCYvs61+wv8/k
h+BT7Ovb/wvtYrkcA3TCHmR/37hwQ+3nxgKY5+aVxj6//cduIezvIzEtMWJf
X9i3wW0U1umQ6hoxgP19W3eah2Ff35iCxBvs81NTfuWD/X3LMveahYJaIDjF
qBT7/PwZ66Owv8/hGN10bFU9XGm8M+c/OwSntqwWY3+fk5+MAvb1ZR3eJol9
fnvVv2tif9/zziJZ7Ov7atJ+Hfv8kmMWKrG/797wFQ/s69MYUfvFtLsY3bT2
YMf+vuSTsTewr09M3OEK9vmZnODPwf6+5hz9dR2jb2jJ/8JO7POzPxO8G/v7
RqITx+68LkaBSQ0+2OcXByWN2N8X8ObqYO69LGS1L04b+/zov9syYn/fjzvC
9XXSycjUJkwF+/zOS2c8wf4+281zsYq56RDuxb1B9hmLU5D9xeGbaiOxT9Uh
0r+EljYINJ+Pkv2q40YO/tinesn5g9LxDwEQxXyU7FeVT+YSwT5VdaWCo8dG
PeENStDFflWpVYk+7FM9eWqsZrvEA2jYad2M/arh/tGO2Kf6SU7j9Qt6C7RL
MCYD+1VFAutssU+1Ke26KvatvmCwt8F+1bdVPqIbzrWoTu+aKPatfvhw7Sn2
qzKtX3XGPtX1Kudt2LdqwOnIr2HeBXwvA/KwTzV0N9Mc9q2+zPfgYtg2DjqH
+oWwT5XnjKYf9q365rDMYr8qXZbtFuxTZU62ymEdb0Ueb38sYb/qUxn5boHO
dHQ//+Tvw4QeXKlY58d+1RUl7lTsU12ecziOfaucbKz22K8qln8+lncyFBmm
Bi5HZ5SihhMZctivem1ti+oBij9Cp8PUt2Of8fI1FkfsL/7fwsRKZIPzKPYZ
07rVtmN/8ZDrzZYp82Eh7mQHLewztj/L2of9xeMqwmQfuP/j15swXh7HNMl4
FayXemAfuODwRDkNgVdYvyfZDz6TObJI4IUybh1SYCfwGpV22Yvxalm/gfFC
JB6949hn/Fm5nYzXs6Q97QRe6J7/uw90BF6bVk1aMF4CaZdCsA+8u3wxWY3A
S0mhIwnjdWQ/1xvsA/92u8wF4yU1sfsjxiusg46fwAsezUwAxuveDcoojFf6
5OXP2Ad+2extQTqBV7D2wUsYrxgOugLsA28U2jSF8WJmsjiF8boiI38V+8DL
qH2iMF7bXx2exHjVfvcQwj5weoP+KoxXQMAZEsard231B4EXaOUXTWC8WjmG
LmC8bhvLMWAf+N1d2dswXqMVDI4Yr32LYpTYB+4ft3sM45WVxnwf4xX9/poa
vtfgqO02f8w/+g3vyfzz85tKO8E/KGHxRgMzwT9aqtfJ/LMirDpE8A/6eIun
ahfBP7zPncj3G0ybWtLgew2+h13cjvmHy457EPNPkIqsDcE/6MzVHVmYf27w
nybzz+Ty5T6Cf1A5tUsf5p8zElfCMP9ELpadxfcayPov9WD+KZCpq8L84yYg
JoHvNRhT+iyF+SeYxfQp5p/TW4Xu43sNtm1R2on5Z309kcw/Fq5OLvheg7W4
uu3YZ+wWZXQC84/Ng7oT+F6D/PE7TzD/dJS35GP+SXYs6iT4B9x3L1Fi/hnX
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
q6dWKA04rC8PHxYf2xmPPJKtVYHHepUkSOGwXknWFgs6RyNbtxuzfydLUbYA
0wngsIpGb/UrfAtEahbx74HHeupDlw0cVtHiP+XL46b4wc5olhmFakTnseU4
cFh278IH8nfHYIZjKRrAY9W9c6VwWA3Wuytv/sjGUgWjgsBj+f1upXBYF6n9
Lq7/9LuE3ZWNLOzqcP3VgRLgtMz+XZcHPovu5/DeGNUGzDcbUjP8Nhf1RbCo
A5+1VUh037h+Pf7k8OZ0C2cU8p6jeQJ8VuNe2g31nLW4NFPw19rnnvJ73x9P
A581NH1Wrsm+CqsLLVpsehCEbfWVvwKfFUuXX2U5iLGur+JHukPRmE2j9z7w
WZxyiTHe50rwdMAXwSTheJxTmcUOfFZZH4ve1IsM9HPMSQw4LSd/GQqf9ZWO
a0HPPxNNan/yBE5rMlaFwmflJ9l5njfNRJlyYjSnD5QjyfQN54DP6qvrOurf
l4KOHIiaAk5L2MXUAvisuhXTMB+lUPR8K28CcFpXxkyCgc9aDeK+/cg2AI98
a5wHTivcxGgG+Kz3Z+JehfHkYnV3tx7gtL6ofhcAPkuV2l/S+09/SSmkUc38
ZTuOzo4XAX6LswFrALf172ntBsaUDuy2LN8D/FYJfRITcFuBuz0qesTb8JDo
vd8GXD7IIFNJBrgt6/k3zVMljVg2bcCz4kcIfttM1gJua5/nz4IjBrX4adkF
Nm+hJPysdv8icFsv4587/o6pxPxc+f8+bMjAcqt0O4HbylxRuxzNVIajbr69
K5uaiT8cikDAbTUtW/Jw9hN5f/J0IfBbYc5Ot4Hb8hBmtXcLyEdMZom8cxJ5
yPxkmAxwW9tNbNo4LYvQvauiEkzCpUjt/L4q4LaYH7ge6f1VjEi2a4nAb5E/
xqUDt/Ug3HjOfzof3XD8Wgf8Vs7vZifgtqw+PK/nswhFNm+c1wO/dTzvZwVw
W5x6P/zTXmRj5lQuOuC3TGnY1YHbOkjtLw3/p7/EURvxz2RLHzaXMbx+IrsN
PXKWvekcN4eMr7AfOot7MbdwiiVwXVGf8xSA5zKu8lQXft6NI1sWDM2TIzGD
KZsU8FxB4mMfszPasHLtJ1rXOzmYp6G3Fnguo+IZXDVVj6d8LvFkJBfg3r9x
A8BzzWyNU/uRWYU3neqkA65r59STYeC5Svp/hJg6lWGSo3lf1XwBft4WuRV4
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
6T+Jfi6rueW7lpaITsg9WNsiUIxNqUji7wjd/rrzwkPRtFQ0+txXKfhsBU69
d+XFPSLvDHwoCFAMzUX0208Wsj1twC9Pm1O9/Evoz/mwmxwVn9COj7E/5c90
4nDOgF4niml0Y/jgHSGDIUTDMHDfXqkD75BPlhRLG0OW/D1R1He+Iw3On/qJ
eS3oEOvKyNm0IfRHI6aGVF2LMqVmepWDx9DzfZs19sSMoACa27rKZp8wqW84
J4uPqFv3L6mpW44jOVwtl6vRii8pjLrsom1HMX8fZad9mkJfKr8VxvI14y+m
hnWmbLWIqY7pfbzSDEpF71h6/OvwhNyBJiNzjIrM54sYtpJQmLa7IamsEhs4
jZR9acxEkVXBP0TMCZ0iINI+S1WG2TlVf3qSktDL45ZLx6NJiCVV4Ly5Zzh6
sczLeKsjF2vf4Hh7oIPQmQ/Ve002hBDrXTrwzHQx9rM+YetJxIfun/c1ZDW8
kPhpEt+p7gosmuvf2Eroz5wn17oruX1xs5RmeRRlM5Z/EmVkS+i6pOuXuq8G
pWJO37iJTJ4+/DRfUb7kwBRClwT/MqtVIDe/54NSYxNY+Yees5LvANJ79u7q
fMIMOneSwfRReC2aHVJTKeCtQ7qCjW5TPS1YsJlBgFt6CuX50m+/zfAFzUd+
+DE/Mojr9ZIyVI36kMCXx7u9ikdRs0JmkX1LLy44s1lcU7sBZRwd55wPn0Tq
ExZyOvfbceImw2I9Z4zOVuRw6I1Mowcjczlf6ZqxWZx3wn2ddLRF+dSHtyMz
SP3Y6aiNX2qw7+UYyiHJd+hv3rdtgZoktHPhNOfs13JsE/5704BlJBqxztre
HEzE1WHzO9e0w5DargGKiuJM9Hyh6N5uQqe5ROZumRIhYRG3p+fWjPSK/WKN
Dhl1fEJZx1ilsm+M4+3s6o+nZcyLjQx84udch4l11OQbbziIb0XKfago/lHg
7l5ainon0GTKij6sC0LnUhPrAlH6S22EdWEYzEdeF66x57WJdYGoDmenwbo4
lSHqA+uCz0fuBINAMTJ6JUBeFxwRjuR14ZgZq0isC7QtRYe8Ljo74gpgvu3s
ZthgxlaLk2Rvx8N8I722ZYX5FrOs5UnMN0xyXyuG+XaGo4E83/huDYYR8w1b
s62Q59vIu842mG+mWAR7kZJw4eX8RZhvGjwbdCB+crQe4ybiJ/J53KUM8VNL
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
xFO1mt8GiKOkSqI8yL50CGw1UMXvT1Uqpb5/5Mf+5A3YNxRe4TvEKUdWfp8h
PuHI5QvELoFy0ctJQ9gpX0PNRIlPxmjnK6UsOV9JpnVHB8smhD54WXvm3ehG
Xlo3TSrZp2ExpHnOWSob/Yooo7h+akM795xqMsT9YCXtnJ3EJefs/K96Dgo+
g91oZwFoT+1CQmNhiO2Yip0Bbgfyr2R8vN5RDNcvjPCHmAegeC01dc1O3J8y
XjfyTy8HdfXoypeb3dCDmYiT5fj71ZjtPay+tRJ8inVOJh67C+f2X1uYyqNA
UtMer7PHq4DROvMRn18s9NkZqwzEUyChOGi2z7IK+ulHmMwXs+CRjPde6+cU
2Db0es3R7my4CQyz3qzV0FQSVKn+CI8LkJ6i66s4kH6b3LH1bjX8Dh+/IxtC
gbGBcRvRWl9IKZVcf6K9Cpg7NDtvJ1Dggcn9K9+8fNHBhReHItUrweEX797j
uRQ4ePIFe3hHOJJVCHxk2lIOvnH8d+UrKWAh5lI8ylIGo4OsEkKFsWgmXk/v
N/6/2nR0f5RcrISJtQoLNe/CEPembu2OTPzc7vSOzLCsgQw63YHLD2+gIwJO
5gJBFOA9IZCtgdu3d3EZn8XGw8FebPKVqRN+/lkuFrqW1UOFfpsy4/dsuCS5
U2TRgAKrA/5kxTrHQCSPgCD37gYwqHndde0CBR6NsILvkBUSb+rI5L1eB0+9
KNJzHrjdE7aepJuJRD3uX4PM+6rB+An/ru34PthulB3aqpKEJBwS7zDRVUKY
EtNLftw+/JYM7d3Kn47sM945iQSVgq155D4LRAG9n8nvVaSqwcAgp3DqTzo6
c9WDXiwQt1c3Povuk2gA9tTAorHoWNTTYv7nhCUFrI956HovtEB2l2Jk/J5r
EHAsedWCCAU89rfMmbW2Q6Oji3+1YjZkPChJix6bhu2sndVX+KJQTEtTV3dE
E4jEQ9BaNQrwfOKaYN//Er25+OCYlXEdMKXnnbS5ToF546k7aZRs9Jbx4jJm
1SrYsuzcZit8PVkPePcfM85F85Gvq645l4F2t62yfgYen1J8lSefNMPU6bwh
561FyM1wdFAFe/XjePnfHfdeQULm9snTe1IQk/8xg/TAaWC1YOwU39kLwo/N
Te6VJkFUkj+T7N8pKGe8cvp+fRG6tk1m04xSA4gsS3+6AfdHbwz6ORQbS5DZ
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
TjQOdOhl4N+NTJ0TN/m9BND2mzyn7TeRo+03yT/nNHeQqxNpqFxeSRwnudtS
hfjt5P+YrzmC1gpgt0HCjF0BcZzFVydf4rdJh1UnsNvg/cX1t4jjSpRTTxC/
FerNnMZuA4bpYweI4z6NhVH9Fu828SlLsxHeVtbtGMWOG0zfl0/8tvfL/fvY
YSjod/4v4rIt2YLriccmnq/5iB2GzlauSCYuU5sV3EM8tnHJfM1J2nyNCW0f
iuaSfSgP1ZcVVN4uQNo75eyHrRPAi6Ja5o6v33I3ewV2CYqzkF4gTmG+qUD1
CWcdVyN2CQLeylJ+7JTveqkSxCfiGet/BDx7Bzxm9zZ7qbyCyxJHeYSej0OY
plo79gq60Z48T/wiUshHdYtN17Jtgga5aCGm0ob4pfGsVhJxC+vAjn3YK4gT
+bURv3jrrKe6ha1v/hlpZ+kuKDuQdpfBVO8IaW8puo8YsVcA7ebVIn5pcb4x
TNzyLHuyBHsFvrS6mvljv/zjyGUmblHgcZTBXkHThyoMiV9mHJSobjn8WOMu
9gramfFxdRz2i+4HZqpb5G/IhWKvII8+q9fEL6JjrFS39N38Y4u9grjcJvcR
vyRZ018mblnFcXpW0qEFtAzu8RG/SDsx8xO3KK6sDsJegYOZ96OofjmecJS4
peNt+kHsFTDLogsjfgFjgR3ELVffbrXCXoGH2+PEOrBfrlJqqG6Jqdxvhb2C
BFbYsgphv8gktvoQt7z9OLkWewUp6B6oIn6pRypUt4iNBBzBXkFHne5KEr/s
mNd2IW5RPjwxgb2C5lRW3SV+ObPpvT5xyzXj+tvflrshOuHmR8Qv9YrLpYlb
VHznJ7BX4Ft+1S7il+HJmQHiliN5y7iwVyA6MGiK+CXK6XYjcYuE+/Za7BUI
PJ/xgfgl0iPQgrglV+6AJ/YKvJ+QXRuD/bJS+T3VLQ50H3SwV4DzgvfsaeyX
34KBVLeM0/ah7FiyD6Weecs4dgz6TNesQFzjaWtC9UyaKWU5dgyKUFzlTVzj
VPeC6pnzk1Jh/D/c0JNfxg+Jaz64B1I94z1rsKEjyweuxPjxbcHtfG34wXbi
mfurxzmxY2C2RCuNuOa66scK4pn3Wn9nsWMg+OqaIuIa63UGVM+8c2hQw44B
PQ6Dh8Q1n+xGqZ4Ztei/hR0D1dl9AuzYNfa+D8KJZ7bVrA/FjsH93ZVSU+ya
zSGO48QzV/uOmGLHwLWRt9ad2DVJ3/uonhl5qemOHQNzP0wOEdf8rmrpJZ7Z
v9yUTmgsDEby37wnefzPy4epObwVK0NWsHkAhL8UeE7y+LtOFhokh+dTFlJK
2+wG1keZL5I8ftLTjZrDb4wYX5Fy7C6qqvl9juTxN+aO/yM5vLCoFiu/Xyxy
VTv7mOTxJanPlUkOHxZL12K2mIXWS4ht6besgjv/BvaQHL6HVldTZEldzU1q
c4verNXIfIfUWZLTrwkJqKDm8wm2JJdH7je6lNxexYG/90FqPr/eLHnzifYq
VEMvNkBy+hXc3NR8fjIdkVwerU24H/rDyxeVyTJR83mfJltD05ZyxHdu43xY
Rzhau3aCms83MPFJCxXGAt8ZHg+S0wc+FdUn+byd8+mNte/CIDVRcI7k9Hu9
46j5fPyk+/jlhzfgsgf9W5LTX/3CZEryeevndIm7xsPRpWafEZLTK1wK7SD5
/PvIimuM37NRgE/xIsnp27j0hUg+v4tWD5N9ST3M9dcrDnJj389KjzHHOcfA
/DXtVyS3f26SU8R7vQ6xpa3M8xqyQub7/ai5fcZ0Z4p5XzX6aD6TuWwmEu0o
kxUjuX2sR5MfE10lavDfNkDy+6811ekkt38ZxHZJJKgUnW5yUiL5/cig+X6S
29tEP7o89Scd2F+2DZP8XrCmn5rbax65bTkWHQtW+n+1SH5vz9c/S3J7qUcH
rGP3XEPFlxKNSX6v2ypDze0le7SOVitmo5L0sW8kv7cf6k4nuX0krS6l+pK6
lDsTi5l6IpqQsqzaZpLrl59JDCB5fr/DhmtWxnVo+ksy27r9L1HMirdaJM8X
KlfkYlatQs4dcxEk1+dI2rGJ5PlVvgLl15zLEItYOQfJ9ZuZRql5fpwN90nn
rUWQt7NZjeT6PRv0h0ieP8wm339qTwpoiZn/Jrn+X9d3Z0mev6imLnWvNAnx
fcrNI7l+XVAlC8nz19HqPb6j1XssptV7vGDnsHdGqQFtqNe1I3m/QV7RY5Lz
34xsET1eXoW2fRWXIHk/Q0hZCsn5L+1NGRzqK0Wy9Ir3SN4vE91JzflNB9aX
Uh1fPviWuF5O9YMF8Xwwk64Cd1MlSrJkX8csUY2yc9cVkvyfX2X1h7i5ItS2
PImLzAN0No1S8/8zK99MSqvmIpc1u6+QeQCmmEOaJP/niojR4SzugKs9mfE2
216hgVS/v62+U1A44qRx/Ewt5Ced+khya787vhdIXl3dFTo64FsKsvtO5ZLc
er9/yFGSV9/73BdgMp0DQXP+YiS3fp99wYrk1dG0+gMaS+oPKOnfPcXBUoVY
qq/WkdxaLAFR8+rsp64Z99bWIomGwUWSW4v0rBYlefXOQ/2D+D4gszVR38h9
mPPZY0Luw4Wj1ycT8HhsSqB/LxmfXXAXkSPjMnvaPsfcJfscW93EL2dJYGe4
BLWR/PufvVk9yb0t4tRDFXY0wqHW1HqSf/+KiYgmuffmdR7drY2VcJjrlBrJ
v/c8+KtHcu9E+8ZmmZEicO701yL5d8/AA2ru/d+6BPZL6hJwdg5uTs7LRzuD
1yOSfz9k9WohuffPhBAxwal01KPXZ0Xy77u23PtJ7i0wd3/ZAb4YcEwc+/7s
Rw8Y3Xi3fYF5GmxpdczsltQx++FukGaq0AhGz/QHSF7+uyTlNMnJI0YKv3PT
V0NUXJwSycv5PhpTc/Kv5fWpByilMDjT9lMstgSddulaQ3LyCFq9gowl9Qo4
15q3KMN5xNx8Mpjk5d0vzneRnHz0zCc19ieZcDpx4yWSl79ksOkjOflGWh2w
rCV1wIQKUk9KBVVBf7LoMZKjs3a7U/PzvKfMsQzxZZD/O12A5Oi+p07lkfx8
2f+oY5At+oeHnScbRsQZ7Kk5etxOZ5Kft9DqYs0sqYslv/v4uU9VpWDqF2FK
8nVJzWA/kqtz/o/6Br9o9aBOLqkH9d+dBqx/C6xJbseazFtM8jp9jTfsJDfU
tJGh5ohz9dLnSX7YQ1v/4LVk/YMzrX6p/5L6pUovdKjzSX7lWykkf1XROkfN
XV2UhfMC6LrhnoyeSaV5LDr0XknHzmQaQh6t10kc6IKvb5kbyigfYLeEYPjX
uU8QT9tHk7BkH80MJf4Hmc/r0orgK2MIhaPpUUpkXk9mQ7sxmc/r35d5neSp
OVGc1Bw13leuV0WuCXZc3byeU0UN7Hy5j5Ic1Yi2H5Z7yX7YlV7VQmTe7ohy
RCXJTXt7reNJXspDq8cSvaQeC3+W2PFCjSr00Kg57LVhBtyYVyxXwe3e4N0G
65SZBtTO++UDmX87+JxOk8y72Z5ylSR5dN3CBxZbfH+SdW8dI/cnlrbv5v2b
/+y7kaDtu1Gkrcf4QFuPcYW2HuNyyqEzJL8u/aFnRfLs9NI3QiTHLtG1KUoR
/wwRJdpbPVI7wVyqWPfwno8wbjamT3KNesFmZ5JzHN4i0k3yjUu0dR33lqzr
YGMTfkPykTMf/WZJXuLA7exIcpKNN+9twM8JoqcE1ZHnpORZykXynPzfc7Uq
7dVyFwpiqbCZOfy+7v9enygxX+NtOIFOrHr0kCF4GD7+j7pAAvTrrq5UL0Nl
l5TcJvNCYHhCRSoAj4/W0NarDC5Zr8LT8jsH/78oqXlUlPy/L6qM9Mn/e4u2
f1Om4D/7NwNo+zdZ8v+zH9CRth/Qi7YfcJ9PhgZ+DlHU5hTqc3j7kHQEeQ6N
df9TB9WZVgf1KK0OaiVt39YF2r6tbtq+rf20/VBPluyHMqXt/xqj7f96QNv/
1e1QpERyeXGboCbyvN0X3/SCPG8/e4c6cL8APu3LlUm/EGbEK0v6hSjavq0D
tH1b52n7tqod/syTHD8uv+41yfXf1jIukjx/XmtfMsnxH5w9soPk+pfDBY2p
88u09TPxS9bPWO84dXmXVQlqU7gwtUm6C3HwruQ+pjMN01f8dgYeyEJtOw+x
RDC1oROFdbflVlIA0dbPJCxZP3M7d9+rAz4UpM0i2LrF5mJ5tojuF4/5Wvj/
ABVp0h8=
    "]],
  Axes->True,
  AxesLabel->{None, None, None},
  AxesOrigin->{Automatic, Automatic, Automatic},
  BoxRatios->{1, 1, 0.4},
  DisplayFunction->Identity,
  FaceGrids->None,
  FaceGridsStyle->Automatic,
  ImageSize->{359.12678132145214`, 326.970135847669},
  ImageSizeRaw->Automatic,
  Method->{"DefaultBoundaryStyle" -> Directive[
      GrayLevel[0.3]], "RotationControl" -> "Globe"},
  PlotRange->{{-2, 2}, {-2, 2}, {-2.236505986109193, 1.8661706914565446`}},
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], 
    Scaled[0.02]},
  Ticks->{Automatic, Automatic, Automatic},
  ViewPoint->{0.05790919616741347, -2.386605829043509, 2.3980740484344487`},
  ViewVertical->{0., 0., 1.}]], "Output",
 CellChangeTimes->{
  3.806247984156899*^9, 3.80632887319447*^9, 3.8063289222372093`*^9, 
   3.806676125320017*^9, {3.806697329226552*^9, 3.806697339770198*^9}, 
   3.8080529350855827`*^9},ImageCache->GraphicsData["CompressedBitmap", "\<\
eJzEvQe4FEX2PtzbYWZu4hIM5BwUFQPmxFUyEiXnfMk5iaSLAVERAyAMKooB
xZwJkhTBwJh1Fd2sm92fG8yLnO+cU6Gre2qGi7rf/z5P1e3q7unp6Xrfk+pU
dbeRs8ePnTJy9oTRIxt2nDly+vgJo2c17DBtJu7yfuE4vxiHpWNDx8dtcJys
arzj/E+3e/Cmt6q8vPwLLB+NHTvWcbn2klOmTHHUX7Xsz9ScOHHiG/iZC8aN
G+ccJ45vFYcKZsyYoT/aWexrMX78+G14Orc6hZd4BfcNof3HitO3cO3fgPew
FXe/PWbMmNZYbFeR+0pGjRpF+0bTjRwjrvI810En3H23PL3xhAkT9tK27VId
qXJrUdOjzWNHjhz5J2rJ602xfKYD14nFeKcj1T78o6f3i/A3Zn+NE5Thnd4r
99XFH/eq8U0NKtkjHXLf0Qq8ZD8s6tQP8Tg9JPHt3my82Nl4B9vCh+Gvxn27
sE372uF29GYiXS2+JHkznvUu7qPi9e3bl3bqm5G/cypuT6Rbl3+/o2PyuYzD
/Z/hTfL5I8XxuvZLR2DSJefvDs7A9vPyM23wGs/RV8ve7ozbz6vzR4ivayQO
RfDTyfKMxD6fOvp1eVsn4Z3LO/GXLFmie2W48dxscLL9+G/NZ23Hhu1HfCM+
1tDegbab+1r8YxKfRFVJ2ejRowsrGFyAH6St3dQqpjoJfP90jr5EiRN+N3+6
mD5TQqeX0Omp3fpiu9XFXKpj38IXLeaa9+kv8ESt74T+qohD+yxfWkwfLtVf
IG7Wo7b+liTVAXcIf0x8Ae3UX1Bs2SfPy745/jmlYseqXLfkWZ5Dkuog+hy4
5VOdCh8GbXHL5f6x3Ii84d3qN+bdF/7s+AOoyPcA/PB6+rtlT4zI1f1Jy8/m
KxTQea5oq57huyyM9ljOu6lsFxUf3dOqMPcZT0Z/9sTcT0b9Sj5fPplWuQBR
WYweXQfmfTzGvorYI9Nt+qtj+d4euX9inehX8df5/0PgVw7kPyPwbTA4L/wO
va+7AIP6rPoffUxKkPHVfIvAywPYH0/5nxHs6yvxK30lJFSXez/hxox98R8f
udmwi7tYjqb1USG19bMsMW7cpb2MtTw3bMNBBEN/jH2Vvoj8KmE72yy6IGLR
4Z8Av6BQ5Htdy/2xHj+9cl8eseASxmciYogfhWv52fxVp1nuwSCWlA/5rTcp
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
g6INFC2QmBAAoO0HMKgJIj2AspRzAoinnzXTkohj4rkAlGecP4DxaZYUF8Ad
ZwXQAoHIygiD1fwMwu2tNJmWKvTLoip0amxNemJUTfp2diX6ihn8jF3fJ1OZ
w0kZ9NaEdHplTBr9a0QaPTMklR4ZkCI7wx/MTabdzODmbom0plMCFdWvfLL1
zX+ivOttGlo/gW5tBteXxD/bhGZJoevF/a3Qbu/eElVLuKsonTb3THH5y06m
2wx/SFuKypwlPavXd1lAN2UuozrZa5i/jXK+hZbD76MOHOd1n/kcq8zXqPfK
D2WrC6xtwJZzWMuPFW6SWXla9aRCYSK+Ox/2tv9Aum7Al/g3YQ6N+1MkhqqB
QNrs4W9jHH+oNXTqV+KkXQK8X5zuTIx3gAq+BeeGT9YaiftTyNmCHGYQnWgJ
V+T74PY8K+8sw9/tQfwFukLbSW9qGm1n84GIF8aQ599ZYLw0wFH6duQ+C4wJ
RocerOHoUOMcvVnQhIrZ5EvJqFXznwUxKjlsFqQ8IjgBlY3z7Uh92kK5Tr8u
SCzpfA2Spp2v4UOna/hlO17DE/SADtfQhr5/pA2Ff6QB7a+WRxe3u5qK2enB
8fVvczUty7mSFmdfSQuzrqTeLWvx953folaokdoIrkUtymtei3Kb1aJePEa3
uYya1/kr9WHY8nmMapTImCXS2CbK+eH/+drhIb0J4A73S6dNWcrZberBDhSw
DVGwIaRDc/jfkVDpuoCBW8iwLaebs5HO3ESN+t0mZz/tOJFDulnPU+6SN6lg
9SfUf9O3NGjXb7Ir2MANMUmmYNG0k8LUjk5A+49yRgADTsoL2g4GbcePuoGD
Lwhw7PFOQ+MZwQnStKfjLwdBXobQFtW0zXjQT5oT4XloW+VNtvx/GbRwnKM7
C162d41GObyklpDqgyoopPMlMSWQk2IcgrFRfzZ0qQKdZDeTdD0O94jtd7+W
xQQfU9RGhnwpCd5MAPrTOQGKCDzRQX+i2KxL1ZgppywqleOMSyg2ncc0rNaL
Tb0k1IViUy6m2KSLKdrvjxRltGITasq7PM2+7NSYmvQka8rHR11EqziUW5F7
JS1nvB4YUoN134V0fNCF9NGkdPpgYjq9d2savTM+jd7n/z+bkk6PDKtBXetc
SgU3MME3RwSnUTxGMmLDG7KubOn6Mfivg4wXwjkvViPaXC6fRUK2DjNlfwKs
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
quQYaTIuJVRkpHEOXfv6v+gJsqKQ7WzmKqmL5ABzlfR06lnN1fZ0h+iebrXA
KMhcpVdE9sqOc/jnNNewPjpLkcxtFVhvWFupia+UG3dmTDt+xjRvrFZs6FkT
vxg+utRZVK0lZDnlJ46sa3vW2MtZLthU5WRLPG12Hxt1p01HlEZ8blxcuSnK
WLBUfkBLbaeexBx/dBTMw7BVk5XAtYcxe4qVQq+igq69ugVTTYSphrUZwS6h
XWGbGdpCzWTp3Ob6aLlk41KqfoGQ59+57TBIc8Ljo2guX16lgEJ3RsBtUgBM
dUqBlfD1S6VPEgQR/C7IFZiFnAuRaMExIoulMX9icScGT42hsOOoxchs7aSx
VQFyZ8VGaBpzK9rh030wn/6y5MDEL/ifhwXD1C/EU6oUGi1VeOTXtTE163QP
FnMnqjLmyKiA1kcVPY0PDqml6Iln88Oh32NRYWVRUbGokOS4wpj8gmzK8kyE
rVXNWk2Ekv4SJ52kk8Ey2WESVCPtrDaVpmbDIeLbdeiEoQIqaagwZ5AqV3yO
m9R8dibLwEq1rXlO4IwZk/5Wr5NU2jLM+vxR7vr8NGd9fshduK+u8TFNmi2U
IeqKM78Kjuq2ZmrNPt+Go+29DT91uv5TYFKm0qY6PkQK+upgWMdiKyNhc7FV
JQ8GnChTjwROt5cLJEK6+1RXW8xe7IfOqeB+l+XYXstxE6S26z7VUJaU4LUk
GfjwbEm2Y0ARrwfFvb5Mqg07SgywoxSlBFVzgkk5wXr0LOVYT8SxLZ2MEsca
UY9Sxifdc04Wa0pFU1vFJhfxrkN0pjlvkcxf9bW9ETVGilP4Vcam2jAP6N80
La4/0ymM+bytv3tYd/nc7i7ndRclWlonYnbEMxzVaHmiGI8bjugoJsdTTkiS
o+2NbJTP1F7YBMEyl+ogyH1FfJnyTgP3OEoAAbLkAUIRV+MGm7cdb96W7K6Z
UHGMEmTg956fgdtnM3B3qlSlc74kpi0aMUECab9VJ+AYgVVb2vqMaeKa5Ux9
uvirusq01Xrtmx+dpL2w9+XTtfn2Xukm9YOyQVV8nrnCsHpYRWH1AYTxap+s
A2bm12G112Ih4U0aKNFJb0a0xerO4QotNhLfpabFl1oRqIw1oZxmHKC2azTd
xhJkaKsTGWd7E0gDdvmSNZbSAiV7VFSPt/UsiLfw6fhJxjq1ZVomjDvoCZpl
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
AHdbpnY=\
\>"],ExpressionUUID->"405ed4a0-2310-4832-88f1-7b791ed579a6"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PR", "[", 
  RowBox[{
  "\"\<For some parameter values \>\"", ",", "$s0", ",", 
   "\"\< Mathematica show a branch cut in LegendreP for 1\[LessEqual]z<\
\[Infinity] or 1\[LessEqual]P<\[Infinity]. It is not as clear for other \
values of parameters. All plots show singularity at z\[LongRightArrow]0 or P\
\[LongRightArrow]-1 .\nPlots of the LegendreQ term were unsuccessful.\>\""}], 
  "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.806241321547324*^9, 3.806241344289093*^9}, {
   3.8062416660198317`*^9, 3.8062417672184687`*^9}, {3.8062417991455584`*^9, 
   3.8062419116707563`*^9}, {3.806241954424505*^9, 3.806242120522491*^9}, {
   3.806242161656625*^9, 3.8062422116597567`*^9}, {3.806242271333666*^9, 
   3.806242290420323*^9}, {3.806242416573254*^9, 3.806242440199945*^9}, {
   3.806242837974085*^9, 3.8062428400448923`*^9}, {3.806243399402672*^9, 
   3.8062434456461487`*^9}, {3.806243488776847*^9, 3.806243572323052*^9}, 
   3.8062444630657873`*^9, {3.8062445496458397`*^9, 3.806244686758361*^9}, {
   3.8062450882574263`*^9, 3.806245108025403*^9}, {3.806245164183915*^9, 
   3.8062451937793427`*^9}, {3.8062454898850117`*^9, 3.806245545441167*^9}, {
   3.806245580501214*^9, 3.80624558778159*^9}, {3.806245648385655*^9, 
   3.8062456594243593`*^9}, {3.806245697335969*^9, 3.806245772543474*^9}, {
   3.8062460125014973`*^9, 3.8062461252064743`*^9}, {3.806246178088019*^9, 
   3.8062462149635773`*^9}, {3.8062463649946423`*^9, 3.806246561457954*^9}, {
   3.806246679437017*^9, 3.80624671559793*^9}, {3.806247084788186*^9, 
   3.8062471119333344`*^9}, {3.806247150341049*^9, 3.8062471512694683`*^9}, {
   3.806247198788725*^9, 3.8062471991320133`*^9}, {3.806247238883412*^9, 
   3.806247239962688*^9}, {3.806247291322125*^9, 3.806247414633395*^9}, {
   3.806247495108873*^9, 3.806247519625967*^9}, {3.8062477458924522`*^9, 
   3.806247789462635*^9}, {3.806247826278213*^9, 3.8062479156898746`*^9}, {
   3.8062479804643993`*^9, 3.806248119577932*^9}, {3.8062491757159233`*^9, 
   3.8062491974762373`*^9}, {3.806249286314604*^9, 
   3.806249485385375*^9}},ExpressionUUID->"d57b48f7-aac4-427a-bb37-\
aa15b793d43e"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   StyleBox["\<\"For some parameter values \"\>",
    StripOnInput->False,
    LineColor->RGBColor[0.7, 0, 1],
    LineOpacity->1,
    FrontFaceColor->RGBColor[0.7, 0, 1],
    BackFaceColor->RGBColor[0.7, 0, 1],
    FrontFaceOpacity->1,
    BackFaceOpacity->1,
    GraphicsColor->RGBColor[0.7, 0, 1],
    Opacity->1,
    FontSize->Larger,
    FontColor->RGBColor[0.7, 0, 1],
    FontOpacity->1], "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"d", "\[Rule]", "4"}], ",", 
     RowBox[{"m", "\[Rule]", "1"}], ",", 
     RowBox[{
      RowBox[{"C", "[", "1", "]"}], "\[Rule]", "1"}]}], "}"}], 
   "\[InvisibleSpace]", 
   StyleBox["\<\" Mathematica show a branch cut in LegendreP for \
1\[LessEqual]z<\[Infinity] or 1\[LessEqual]P<\[Infinity]. It is not as clear \
for other values of parameters. All plots show singularity at z\
\[LongRightArrow]0 or P\[LongRightArrow]-1 .\\nPlots of the LegendreQ term \
were unsuccessful.\"\>",
    StripOnInput->False,
    LineColor->RGBColor[0.7, 0, 1],
    LineOpacity->1,
    FrontFaceColor->RGBColor[0.7, 0, 1],
    BackFaceColor->RGBColor[0.7, 0, 1],
    FrontFaceOpacity->1,
    BackFaceOpacity->1,
    GraphicsColor->RGBColor[0.7, 0, 1],
    Opacity->1,
    FontSize->Larger,
    FontColor->RGBColor[0.7, 0, 1],
    FontOpacity->1]}],
  SequenceForm[
   Style["For some parameter values ", 
    RGBColor[0.7, 0, 1, 1], Larger], {$CellContext`d -> 4, $CellContext`m -> 
    1, C[1] -> 1}, 
   Style[" Mathematica show a branch cut in LegendreP for 1\[LessEqual]z<\
\[Infinity] or 1\[LessEqual]P<\[Infinity]. It is not as clear for other \
values of parameters. All plots show singularity at z\[LongRightArrow]0 or P\
\[LongRightArrow]-1 .\nPlots of the LegendreQ term were unsuccessful.", 
    RGBColor[0.7, 0, 1, 1], Larger]],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.8062420508184357`*^9, 3.806242129497079*^9, {3.806242173790287*^9, 
   3.8062421928164*^9}, 3.806242234682405*^9, 3.80624282635835*^9, 
   3.806243283692998*^9, {3.806243403996595*^9, 3.806243439007222*^9}, {
   3.806243494221712*^9, 3.806243535703135*^9}, {3.8062445667693*^9, 
   3.806244687580316*^9}, 3.8062451794778214`*^9, {3.806245520097993*^9, 
   3.806245546291058*^9}, 3.806245588549136*^9, 3.806245660205847*^9, 
   3.8062457069316*^9, {3.806245737120542*^9, 3.8062457733207693`*^9}, {
   3.806246117706023*^9, 3.806246126027583*^9}, {3.8062461939910383`*^9, 
   3.8062462157573137`*^9}, {3.806246439107728*^9, 3.806246469739088*^9}, 
   3.806246563142968*^9, 3.806246716492251*^9, {3.806247088019137*^9, 
   3.806247112772077*^9}, 3.806247152199255*^9, 3.806247200012429*^9, 
   3.8062472411303673`*^9, {3.806247305917734*^9, 3.806247416040839*^9}, {
   3.806247497210799*^9, 3.8062475205566998`*^9}, {3.8062477469013157`*^9, 
   3.806247790342003*^9}, 3.806247917252088*^9, {3.8062479878224697`*^9, 
   3.806248028363468*^9}, 3.8062480742451763`*^9, 3.806248180119232*^9, {
   3.806249294964432*^9, 3.8062493015470457`*^9}, 3.806249338086568*^9, {
   3.8062494592956944`*^9, 3.806249486019347*^9}, 3.8066761292550983`*^9, 
   3.808052937198162*^9},ExpressionUUID->"23cbf0f3-9339-4fb0-be1b-\
e3cbda74ea2d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"$", "=", 
  RowBox[{
   RowBox[{"$m", "/.", 
    RowBox[{
     RowBox[{"d", "[", "\[CapitalOmega]", "]"}], "\[Rule]", "0"}]}], "/.", 
   RowBox[{"M", "\[Rule]", "0"}]}]}], "\[IndentingNewLine]", 
 RowBox[{"$", "=", 
  RowBox[{"$", "/.", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"d", "[", "t", "]"}], "\[Rule]", 
     RowBox[{
      RowBox[{"tuDPartial", "[", 
       RowBox[{"t", ",", "s"}], "]"}], 
      RowBox[{"d", "[", "s", "]"}]}]}], 
    "}"}]}]}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.806329029559062*^9, 3.806329253816094*^9}, {
   3.806332488477873*^9, 3.806332636511282*^9}, {3.8063327491504*^9, 
   3.80633276994636*^9}, 3.806332923279792*^9, {3.806335245855813*^9, 
   3.806335278549601*^9}, {3.8063353085934477`*^9, 
   3.8063353422134943`*^9}},ExpressionUUID->"85c1ffb1-e561-4345-88b0-\
1711242aea9e"],

Cell[BoxData[
 RowBox[{
  SuperscriptBox[
   RowBox[{"d", "[", "s", "]"}], "2"], "\[Rule]", 
  RowBox[{
   FractionBox[
    SuperscriptBox[
     RowBox[{"d", "[", "r", "]"}], "2"], 
    RowBox[{"1", "-", 
     FractionBox[
      RowBox[{
       SuperscriptBox["r", "2"], " ", "\[CapitalLambda]"}], "3"]}]], "+", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", 
      FractionBox[
       RowBox[{
        SuperscriptBox["r", "2"], " ", "\[CapitalLambda]"}], "3"]}], ")"}], 
    " ", 
    SuperscriptBox[
     RowBox[{"d", "[", "t", "]"}], "2"]}]}]}]], "Output",
 CellChangeTimes->{3.806335260079486*^9, 3.806335344453266*^9, 
  3.80667612938807*^9, 
  3.808052937354425*^9},ExpressionUUID->"36c2daa6-c12a-4ec7-9358-\
4e3fc221fd84"],

Cell[BoxData[
 RowBox[{
  SuperscriptBox[
   RowBox[{"d", "[", "s", "]"}], "2"], "\[Rule]", 
  RowBox[{
   FractionBox[
    SuperscriptBox[
     RowBox[{"d", "[", "r", "]"}], "2"], 
    RowBox[{"1", "-", 
     FractionBox[
      RowBox[{
       SuperscriptBox["r", "2"], " ", "\[CapitalLambda]"}], "3"]}]], "+", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", 
      FractionBox[
       RowBox[{
        SuperscriptBox["r", "2"], " ", "\[CapitalLambda]"}], "3"]}], ")"}], 
    " ", 
    SuperscriptBox[
     RowBox[{"d", "[", "s", "]"}], "2"], " ", 
    SuperscriptBox[
     InterpretationBox[
      RowBox[{
       SubscriptBox[
        UnderscriptBox["\<\"\[PartialD]\"\>", "_"], "s"], "[", "t", "]"}],
      $CellContext`tuDDown["\[PartialD]"][$CellContext`t, $CellContext`s],
      Editable->False,
      SyntaxForm->Automatic], "2"]}]}]}]], "Output",
 CellChangeTimes->{3.806335260079486*^9, 3.806335344453266*^9, 
  3.80667612938807*^9, 
  3.8080529373778543`*^9},ExpressionUUID->"49388eea-6c18-40ae-9dc0-\
266b6cea37df"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["3.2 Temperature", "Subsection",
 CellChangeTimes->{{3.806753398858231*^9, 
  3.8067534034626417`*^9}},ExpressionUUID->"a68a0d0c-3fea-4793-9e91-\
6a05bf2ee0dc"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PR", "[", 
  RowBox[{
  "\"\<Notion of particle is observer dependent where observer has Unruh \
detector in some energy state that can interact with scalar field \[Phi].  A \
coordinate invariant temperature model is \>\"", "\[IndentingNewLine]", ",", 
   RowBox[{
    RowBox[{"$", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"detector", "->", 
           RowBox[{
            RowBox[{"g", "[", 
             RowBox[{"CG", "[", "\"\<coupling\>\"", "]"}], "]"}], " ", 
            RowBox[{"xIntegral", "[", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"m", "[", "\[Tau]", "]"}], "[", 
                RowBox[{
                "CG", "[", "\"\<operator on internal states\>\"", "]"}], 
                "]"}], ".", 
               RowBox[{
                RowBox[{"\[Phi]", "[", 
                 RowBox[{
                  RowBox[{"x", "[", "\[Tau]", "]"}], "[", 
                  RowBox[{"CG", "[", "\"\<world line\>\"", "]"}], "]"}], 
                 "]"}], "[", 
                RowBox[{"CG", "[", "\"\<scalar field\>\"", "]"}], "]"}]}], 
              ",", 
              RowBox[{"{", 
               RowBox[{"\[Tau]", ",", 
                RowBox[{"-", "\[Infinity]"}], ",", "\[Infinity]"}], "}"}]}], 
             "]"}]}]}], "\[IndentingNewLine]", ",", 
          RowBox[{"\[Tau]", "[", 
           RowBox[{"CG", "[", "\"\<observer's world line\>\"", "]"}], "]"}]}],
          "\[IndentingNewLine]", "\t", "}"}], "[", 
        RowBox[{"CG", "[", "\"\<Unruh detector\>\"", "]"}], "]"}], 
       "\[IndentingNewLine]", ",", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"H", ".", 
           RowBox[{"Ket", "[", 
            RowBox[{"T", "[", 
             RowBox[{"iE", ",", "\"\<d\>\"", ",", 
              RowBox[{"{", "j", "}"}]}], "]"}], "]"}]}], "\[Rule]", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"T", "[", 
            RowBox[{"iE", ",", "\"\<d\>\"", ",", 
             RowBox[{"{", "j", "}"}]}], "]"}], ".", 
           RowBox[{"Ket", "[", 
            RowBox[{"T", "[", 
             RowBox[{"iE", ",", "\"\<d\>\"", ",", 
              RowBox[{"{", "j", "}"}]}], "]"}], "]"}]}]}], "}"}], "[", 
        RowBox[{"CG", "[", "\"\<Hamiltonian of detector\>\"", "]"}], "]"}], 
       "\[IndentingNewLine]", ",", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"$sm", "=", 
          RowBox[{
           RowBox[{"T", "[", 
            RowBox[{"m", ",", "\"\<dd\>\"", ",", 
             RowBox[{"{", 
              RowBox[{"i", ",", "j"}], "}"}]}], "]"}], "\[Rule]", 
           RowBox[{
            RowBox[{"Bra", "[", 
             RowBox[{"T", "[", 
              RowBox[{"iE", ",", "\"\<d\>\"", ",", 
               RowBox[{"{", "i", "}"}]}], "]"}], "]"}], ".", 
            RowBox[{"m", "[", "0", "]"}], ".", 
            RowBox[{"Ket", "[", 
             RowBox[{"T", "[", 
              RowBox[{"iE", ",", "\"\<d\>\"", ",", 
               RowBox[{"{", "j", "}"}]}], "]"}], "]"}]}]}]}], "}"}], "[", 
        RowBox[{"CG", "[", "\"\<matrix rep of m[\[Tau]]\>\"", "]"}], "]"}], 
       "\[IndentingNewLine]", ",", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"$", "=", 
            RowBox[{"g", " ", 
             RowBox[{"xIntegral", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"Bra", "[", 
                 RowBox[{
                  SubscriptBox["\[Beta]", "\[Phi]"], ",", 
                  RowBox[{"T", "[", 
                   RowBox[{"iE", ",", "\"\<d\>\"", ",", 
                    RowBox[{"{", "i", "}"}]}], "]"}]}], "]"}], ".", 
                RowBox[{"m", "[", "\[Tau]", "]"}], ".", 
                RowBox[{"\[Phi]", "[", 
                 RowBox[{"x", "[", "\[Tau]", "]"}], "]"}], ".", 
                RowBox[{"Ket", "[", 
                 RowBox[{
                  SubscriptBox["0", "\[Phi]"], ",", 
                  RowBox[{"T", "[", 
                   RowBox[{"iE", ",", "\"\<d\>\"", ",", 
                    RowBox[{"{", "j", "}"}]}], "]"}]}], "]"}]}], ",", 
               RowBox[{"{", 
                RowBox[{"\[Tau]", ",", 
                 RowBox[{"-", "\[Infinity]"}], ",", "\[Infinity]"}], "}"}]}], 
              "]"}]}]}], "\[IndentingNewLine]", ";", 
           RowBox[{"$", "//", "Framed"}]}], "\[IndentingNewLine]", ",", 
          RowBox[{"$s", "=", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"m", "[", "\[Tau]", "]"}], "\[Rule]", 
              RowBox[{
               RowBox[{"Exp", "[", 
                RowBox[{"I", " ", "H", " ", "\[Tau]"}], "]"}], ".", 
               RowBox[{"m", "[", "0", "]"}], ".", 
               RowBox[{"Exp", "[", 
                RowBox[{
                 RowBox[{"-", "I"}], " ", "H", " ", "\[Tau]"}], "]"}]}]}], 
             "}"}], "[", 
            RowBox[{"CG", "[", "\"\<time evolution\>\"", "]"}], "]"}]}], 
          "\[IndentingNewLine]", ",", 
          RowBox[{"$", "=", 
           RowBox[{"$", "/.", 
            RowBox[{"tuRule", "[", "$s", "]"}]}]}], "\[IndentingNewLine]", 
          ",", 
          RowBox[{"$", "=", 
           RowBox[{
            RowBox[{
             RowBox[{"$", "/.", 
              RowBox[{
               RowBox[{"Bra", "[", 
                RowBox[{"a_", ",", "b_"}], "]"}], "\[Rule]", 
               RowBox[{
                RowBox[{"Bra", "[", "a", "]"}], ".", 
                RowBox[{"Bra", "[", "b", "]"}]}]}]}], "/.", 
             RowBox[{
              RowBox[{"Ket", "[", 
               RowBox[{"a_", ",", "b_"}], "]"}], "\[Rule]", 
              RowBox[{
               RowBox[{"Ket", "[", "b", "]"}], ".", 
               RowBox[{"Ket", "[", "a", "]"}]}]}]}], "/.", 
            RowBox[{
             RowBox[{"tt", ":", 
              RowBox[{
               RowBox[{"\[Phi]", "[", "a_", "]"}], ".", 
               RowBox[{"Ket", "[", "e_", "]"}]}]}], "\[RuleDelayed]", 
             RowBox[{"Reverse", "[", "tt", "]"}]}]}]}], "\[IndentingNewLine]",
           ",", 
          RowBox[{"$", "=", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"$", "/.", " ", 
               RowBox[{
                RowBox[{"a_", "  ", ".", 
                 RowBox[{"(", 
                  RowBox[{"bb", ":", 
                   RowBox[{"Bra", "[", "e_", "]"}]}], ")"}], ".", " ", 
                 RowBox[{"Exp", "[", 
                  RowBox[{"I", " ", "H", " ", "\[Tau]"}], "]"}], ".", " ", 
                 "b__"}], "\[Rule]", " ", 
                RowBox[{"a", " ", ".", " ", "bb", ".", " ", 
                 RowBox[{"Exp", "[", 
                  RowBox[{"I", " ", "e", " ", "\[Tau]"}], "]"}], ".", 
                 "b"}]}]}], "/.", 
              RowBox[{
               RowBox[{"a__", " ", ".", " ", 
                RowBox[{"Exp", "[", 
                 RowBox[{
                  RowBox[{"-", "I"}], " ", "H", " ", "\[Tau]"}], "]"}], ".", 
                " ", 
                RowBox[{"(", 
                 RowBox[{"kk", ":", 
                  RowBox[{"Ket", "[", "e_", "]"}]}], " ", ")"}], ".", " ", 
                "b_"}], "\[Rule]", " ", 
               RowBox[{"a", " ", ".", " ", 
                RowBox[{"Exp", "[", 
                 RowBox[{
                  RowBox[{"-", "I"}], " ", "e", " ", "\[Tau]"}], "]"}], ".", 
                "kk", ".", "b"}]}]}], "//", 
             RowBox[{"expandDot", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"Reverse", "[", "$sm", "]"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"Exp", "[", "a_", "]"}], ",", 
                 RowBox[{"$sm", "[", 
                  RowBox[{"[", "1", "]"}], "]"}]}], "}"}]}], "]"}]}], "//", 
            "Simplify"}]}]}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
         "}"}], "[", 
        RowBox[{"CG", "[", 
         RowBox[{"\"\<transition amplitude \>\"", ",", 
          RowBox[{
           RowBox[{"Ket", "[", 
            RowBox[{
             SubscriptBox["0", "\[Phi]"], ",", 
             RowBox[{"T", "[", 
              RowBox[{"iE", ",", "\"\<d\>\"", ",", 
               RowBox[{"{", "i", "}"}]}], "]"}]}], "]"}], "\[LongRightArrow]", 
           RowBox[{"Ket", "[", 
            RowBox[{
             SubscriptBox["\[Beta]", "\[Phi]"], ",", 
             RowBox[{"T", "[", 
              RowBox[{"iE", ",", "\"\<d\>\"", ",", 
               RowBox[{"{", "j", "}"}]}], "]"}]}], "]"}]}]}], "]"}], "]"}], 
       "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"$", "=", 
           RowBox[{
            RowBox[{"ct", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"$", "/.", 
                RowBox[{"\[Tau]", "\[Rule]", "\[Tau]1"}]}], "/.", 
               RowBox[{"i", "\[Rule]", "i1"}]}], "/.", 
              RowBox[{"j", "\[Rule]", "j1"}]}], "]"}], ".", "$"}]}], 
          "\[IndentingNewLine]", ",", 
          RowBox[{"$", "=", 
           RowBox[{
            RowBox[{
             RowBox[{"$", "//", 
              RowBox[{
              "tuConjugateTransposeSimplify", "[", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"g", ",", 
                  RowBox[{"T", "[", 
                   RowBox[{"iE", ",", "\"\<d\>\"", ",", 
                    RowBox[{"{", "_", "}"}]}], "]"}], ",", "\[Tau]", ",", 
                  "\[Tau]1"}], "}"}], "\[IndentingNewLine]", ",", 
                RowBox[{"{", 
                 RowBox[{"g", ",", 
                  RowBox[{"T", "[", 
                   RowBox[{"iE", ",", "\"\<d\>\"", ",", 
                    RowBox[{"{", "_", "}"}]}], "]"}], ",", "\[Tau]", ",", 
                  "\[Tau]1", ",", 
                  RowBox[{"x\[Phi]", "[", "_", "]"}]}], "}"}]}], 
               "\[IndentingNewLine]", "]"}]}], "//", "tuIntegralGather"}], 
            "\[IndentingNewLine]", "//", 
            RowBox[{"expandDot", "[", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{
                 RowBox[{"ct", "[", 
                  RowBox[{"Bra", "[", "a_", "]"}], "]"}], "\[Rule]", 
                 RowBox[{"Ket", "[", "a", "]"}]}], "\[IndentingNewLine]", ",", 
                RowBox[{
                 RowBox[{"ct", "[", 
                  RowBox[{"Ket", "[", "a_", "]"}], "]"}], "\[Rule]", 
                 RowBox[{"Bra", "[", "a", "]"}]}]}], "}"}], 
              "\[IndentingNewLine]", ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"Exp", "[", "a_", "]"}], ",", 
                RowBox[{"T", "[", 
                 RowBox[{"m", ",", "\"\<dd\>\"", ",", 
                  RowBox[{"{", 
                   RowBox[{"_", ",", "_"}], "}"}]}], "]"}], 
                "\[IndentingNewLine]", ",", 
                RowBox[{"ct", "[", 
                 RowBox[{"T", "[", 
                  RowBox[{"m", ",", "\"\<dd\>\"", ",", 
                   RowBox[{"{", 
                    RowBox[{"_", ",", "_"}], "}"}]}], "]"}], "]"}]}], 
               "\[IndentingNewLine]", "}"}]}], "]"}]}]}], 
          "\[IndentingNewLine]", ",", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"$s", "=", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{"Ket", "[", 
                  SubscriptBox["\[Beta]", "\[Phi]"], "]"}], ".", 
                 RowBox[{"Bra", "[", 
                  SubscriptBox["\[Beta]", "\[Phi]"], "]"}]}], "\[Rule]", 
                "1"}], ",", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"Bra", "[", 
                    SubscriptBox["0", "\[Phi]"], "]"}], ".", " ", 
                   RowBox[{"ct", "[", 
                    RowBox[{"\[Phi]", "[", "x1_", "]"}], "]"}], ".", " ", 
                   RowBox[{"\[Phi]", "[", "x2_", "]"}], ".", " ", 
                   RowBox[{"Ket", "[", 
                    SubscriptBox["0", "\[Phi]"], "]"}]}], "\[Rule]", 
                  RowBox[{"G", "[", 
                   RowBox[{"x1", ",", "x2"}], "]"}]}], "}"}], "[", 
                RowBox[{"CG", "[", "\"\<Green's function\>\"", "]"}], "]"}], 
               "\[IndentingNewLine]", ",", 
               RowBox[{"j1", "\[Rule]", "j"}], ",", 
               RowBox[{"i1", "\[Rule]", "i"}]}], "}"}]}], 
            "\[IndentingNewLine]", "\[IndentingNewLine]", "}"}], "[", 
           RowBox[{
           "CG", "[", 
            "\"\<Sum over all \[Beta] states, G defined, between 2 detector \
states\>\"", "]"}], "]"}], "\[IndentingNewLine]", ",", 
          RowBox[{
           RowBox[{"e", "[", "56", "]"}], "=", 
           RowBox[{"$", "=", 
            RowBox[{
             RowBox[{"$", "//", 
              RowBox[{"expandDot", "[", "$s", "]"}]}], "//", "Simplify"}]}]}],
           "\[IndentingNewLine]", ",", 
          RowBox[{"CG", "[", "\"\<e[56]\>\"", "]"}]}], "\[IndentingNewLine]", 
         "}"}], "[", 
        RowBox[{
        "CG", "[", 
         "\"\<probability of this transition \!\(\*SuperscriptBox[\(Amplitude\
\), \(2\)]\)\>\"", "]"}], "]"}]}], "\[IndentingNewLine]", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", "}"}]}], ";", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"ColumnForms", "[", 
        RowBox[{"#1", ",", "3"}], "]"}], "&"}], ")"}], "[", "$", "]"}]}]}], 
  "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.806753512250431*^9, 3.80675353899349*^9}, {
   3.8067535941385717`*^9, 3.8067536986161137`*^9}, {3.806753738268114*^9, 
   3.806753740218384*^9}, {3.806753874638208*^9, 3.806754074888163*^9}, {
   3.8067541189932423`*^9, 3.8067542433888683`*^9}, {3.806754276401976*^9, 
   3.806754448074544*^9}, {3.8067553598138123`*^9, 3.806755708485249*^9}, {
   3.806755783974996*^9, 3.806755839619089*^9}, {3.806755907921494*^9, 
   3.806756018191554*^9}, {3.806756055051703*^9, 3.806756074356605*^9}, {
   3.806756109330431*^9, 3.806756170260688*^9}, {3.806756219092659*^9, 
   3.806756263055482*^9}, {3.8067562942651978`*^9, 3.806756326423115*^9}, {
   3.806756372009321*^9, 3.806756394711174*^9}, {3.806756432198436*^9, 
   3.80675651238796*^9}, {3.806756581920928*^9, 3.806756591013793*^9}, {
   3.806756632927988*^9, 3.806756782547983*^9}, {3.806756883318976*^9, 
   3.806757034590385*^9}, {3.8067570926972103`*^9, 3.806757169591984*^9}, {
   3.8067572096665916`*^9, 3.80675733039466*^9}, {3.8067574312844353`*^9, 
   3.806757502814637*^9}, {3.8067575500094357`*^9, 3.8067575808420267`*^9}, {
   3.80675761146802*^9, 3.806757623828887*^9}, {3.806757749600494*^9, 
   3.806757749912199*^9}, {3.806757790274179*^9, 3.806757839264532*^9}, {
   3.8067579039240828`*^9, 3.8067579141326637`*^9}, {3.806757948219599*^9, 
   3.8067579773235483`*^9}, {3.8067582364137917`*^9, 3.806758293602606*^9}, {
   3.806758331911676*^9, 3.806758390492271*^9}, {3.8067584207980623`*^9, 
   3.806758475917883*^9}, {3.8067585256583157`*^9, 3.806758525929214*^9}, {
   3.806758571568624*^9, 3.806758582230384*^9}, {3.806758615133833*^9, 
   3.806758629683745*^9}, {3.806758974688158*^9, 3.8067589784148808`*^9}, {
   3.806759018850937*^9, 3.806759028183366*^9}, {3.806759065397111*^9, 
   3.806759103588024*^9}, {3.806759142289445*^9, 3.806759262302808*^9}, 
   3.806759298229632*^9, {3.80675944437612*^9, 3.8067594666374073`*^9}, {
   3.8067594986869392`*^9, 3.8067595733823147`*^9}, {3.806759631874897*^9, 
   3.806759639522759*^9}, {3.8067598649428883`*^9, 3.806759942288686*^9}, {
   3.80675999186968*^9, 3.806759996265135*^9}, {3.8067600666331453`*^9, 
   3.806760096554154*^9}, {3.80676013150075*^9, 3.806760179580245*^9}, {
   3.806760794520103*^9, 3.8067608490998373`*^9}, {3.806760880684142*^9, 
   3.806760889918778*^9}, {3.808053038698307*^9, 3.808053066107071*^9}, 
   3.808053382029619*^9, 3.8080534279924803`*^9, {3.808053532166003*^9, 
   3.808053536968403*^9}},ExpressionUUID->"496a75ff-d74e-4f1a-bb70-\
9c4597c2a365"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   StyleBox["\<\"Notion of particle is observer dependent where observer has \
Unruh detector in some energy state that can interact with scalar field \
\[Phi].  A coordinate invariant temperature model is \"\>",
    StripOnInput->False,
    LineColor->RGBColor[0.7, 0, 1],
    LineOpacity->1,
    FrontFaceColor->RGBColor[0.7, 0, 1],
    BackFaceColor->RGBColor[0.7, 0, 1],
    FrontFaceOpacity->1,
    BackFaceOpacity->1,
    GraphicsColor->RGBColor[0.7, 0, 1],
    Opacity->1,
    FontSize->Larger,
    FontColor->RGBColor[0.7, 0, 1],
    FontOpacity->1], "\[InvisibleSpace]", 
   TagBox[GridBox[{
      {
       RowBox[{
        TagBox[GridBox[{
           {
            RowBox[{"detector", "\[Rule]", 
             RowBox[{
              RowBox[{"g", "[", 
               StyleBox["\<\"coupling\"\>",
                StripOnInput->False,
                LineColor->RGBColor[0, 
                  Rational[2, 3], 0],
                FrontFaceColor->RGBColor[0, 
                  Rational[2, 3], 0],
                BackFaceColor->RGBColor[0, 
                  Rational[2, 3], 0],
                GraphicsColor->RGBColor[0, 
                  Rational[2, 3], 0],
                FontFamily->"Helvetica",
                FontColor->RGBColor[0, 
                  Rational[2, 3], 0]], "]"}], " ", 
              TemplateBox[{RowBox[{
                  RowBox[{
                    RowBox[{"m", "[", "\[Tau]", "]"}], "[", 
                    StyleBox["\"operator on internal states\"", 
                    RGBColor[0, 
                    Rational[2, 3], 0], FontFamily -> "Helvetica", 
                    StripOnInput -> False], "]"}], ".", 
                  RowBox[{
                    RowBox[{"\[Phi]", "[", 
                    RowBox[{
                    RowBox[{"x", "[", "\[Tau]", "]"}], "[", 
                    StyleBox["\"world line\"", 
                    RGBColor[0, 
                    Rational[2, 3], 0], FontFamily -> "Helvetica", 
                    StripOnInput -> False], "]"}], "]"}], "[", 
                    StyleBox["\"scalar field\"", 
                    RGBColor[0, 
                    Rational[2, 3], 0], FontFamily -> "Helvetica", 
                    StripOnInput -> False], "]"}]}],"\[Tau]",
                RowBox[{"-", "\[Infinity]"}],"\[Infinity]"},
               "InactiveIntegrate",
               DisplayFunction->(RowBox[{
                  SubsuperscriptBox[
                   StyleBox["\[Integral]", "Inactive"], #3, #4], 
                  RowBox[{#, 
                    RowBox[{
                    StyleBox["\[DifferentialD]", "Inactive"], #2}]}]}]& ),
               InterpretationFunction->(RowBox[{
                  RowBox[{"Inactive", "[", "Integrate", "]"}], "[", 
                  RowBox[{#, ",", 
                    RowBox[{"{", 
                    RowBox[{#2, ",", #3, ",", #4}], "}"}]}], "]"}]& )]}]}]},
           {
            RowBox[{"\[Tau]", "[", 
             StyleBox["\<\"observer's world line\"\>",
              StripOnInput->False,
              LineColor->RGBColor[0, 
                Rational[2, 3], 0],
              FrontFaceColor->RGBColor[0, 
                Rational[2, 3], 0],
              BackFaceColor->RGBColor[0, 
                Rational[2, 3], 0],
              GraphicsColor->RGBColor[0, 
                Rational[2, 3], 0],
              FontFamily->"Helvetica",
              FontColor->RGBColor[0, 
                Rational[2, 3], 0]], "]"}]}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            RGBColor[0.7, 0, 1, 1], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {{Left}}},
          GridBoxDividers->{"Columns" -> {True}, "Rows" -> {False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"], "[", 
        StyleBox["\<\"Unruh detector\"\>",
         StripOnInput->False,
         LineColor->RGBColor[0, 
           Rational[2, 3], 0],
         FrontFaceColor->RGBColor[0, 
           Rational[2, 3], 0],
         BackFaceColor->RGBColor[0, 
           Rational[2, 3], 0],
         GraphicsColor->RGBColor[0, 
           Rational[2, 3], 0],
         FontFamily->"Helvetica",
         FontColor->RGBColor[0, 
           Rational[2, 3], 0]], "]"}]},
      {
       RowBox[{
        TagBox[GridBox[{
           {
            RowBox[{
             RowBox[{"H", ".", 
              InterpretationBox[
               RowBox[{
                StyleBox["\[LeftBracketingBar]",
                 FontWeight->Bold], 
                InterpretationBox[
                 SubsuperscriptBox[
                  StyleBox["\<\"E\"\>",
                   StripOnInput->False,
                   FontSlant->Italic], "j", 
                  StyleBox["j",
                   StripOnInput->False,
                   ShowContents->False]],
                 $CellContext`Tensor[
                  Style["E", Italic], {$CellContext`Void}, {$CellContext`j}],
                 BaseStyle->{AutoMultiplicationSymbol -> False},
                 Editable->False], 
                StyleBox["\[RightAngleBracket]",
                 FontWeight->Bold]}],
               Ket[
                $CellContext`Tensor[
                 Style["E", Italic], {$CellContext`Void}, {$CellContext`j}]],
               Editable->False,
               SyntaxForm->Automatic]}], "\[Rule]", 
             RowBox[{
              InterpretationBox[
               SubsuperscriptBox[
                StyleBox["\<\"E\"\>",
                 StripOnInput->False,
                 FontSlant->Italic], "j", 
                StyleBox["j",
                 StripOnInput->False,
                 ShowContents->False]],
               $CellContext`Tensor[
                Style["E", Italic], {$CellContext`Void}, {$CellContext`j}],
               BaseStyle->{AutoMultiplicationSymbol -> False},
               Editable->False], ".", 
              InterpretationBox[
               RowBox[{
                StyleBox["\[LeftBracketingBar]",
                 FontWeight->Bold], 
                InterpretationBox[
                 SubsuperscriptBox[
                  StyleBox["\<\"E\"\>",
                   StripOnInput->False,
                   FontSlant->Italic], "j", 
                  StyleBox["j",
                   StripOnInput->False,
                   ShowContents->False]],
                 $CellContext`Tensor[
                  Style["E", Italic], {$CellContext`Void}, {$CellContext`j}],
                 BaseStyle->{AutoMultiplicationSymbol -> False},
                 Editable->False], 
                StyleBox["\[RightAngleBracket]",
                 FontWeight->Bold]}],
               Ket[
                $CellContext`Tensor[
                 Style["E", Italic], {$CellContext`Void}, {$CellContext`j}]],
               Editable->False,
               SyntaxForm->Automatic]}]}]}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            RGBColor[0.7, 0, 1, 1], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {{Left}}},
          GridBoxDividers->{"Columns" -> {True}, "Rows" -> {False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"], "[", 
        StyleBox["\<\"Hamiltonian of detector\"\>",
         StripOnInput->False,
         LineColor->RGBColor[0, 
           Rational[2, 3], 0],
         FrontFaceColor->RGBColor[0, 
           Rational[2, 3], 0],
         BackFaceColor->RGBColor[0, 
           Rational[2, 3], 0],
         GraphicsColor->RGBColor[0, 
           Rational[2, 3], 0],
         FontFamily->"Helvetica",
         FontColor->RGBColor[0, 
           Rational[2, 3], 0]], "]"}]},
      {
       RowBox[{
        TagBox[GridBox[{
           {
            RowBox[{
             InterpretationBox[
              SubsuperscriptBox["m", 
               RowBox[{"i", "j"}], 
               StyleBox[
                RowBox[{"i", "j"}],
                StripOnInput->False,
                ShowContents->False]],
              $CellContext`Tensor[$CellContext`m, {$CellContext`Void, \
$CellContext`Void}, {$CellContext`i, $CellContext`j}],
              BaseStyle->{AutoMultiplicationSymbol -> False},
              Editable->False], "\[Rule]", 
             RowBox[{
              InterpretationBox[
               RowBox[{
                StyleBox["\[LeftAngleBracket]",
                 FontWeight->Bold], 
                InterpretationBox[
                 SubsuperscriptBox[
                  StyleBox["\<\"E\"\>",
                   StripOnInput->False,
                   FontSlant->Italic], "i", 
                  StyleBox["i",
                   StripOnInput->False,
                   ShowContents->False]],
                 $CellContext`Tensor[
                  Style["E", Italic], {$CellContext`Void}, {$CellContext`i}],
                 BaseStyle->{AutoMultiplicationSymbol -> False},
                 Editable->False], 
                StyleBox["\[RightBracketingBar]",
                 FontWeight->Bold]}],
               Bra[
                $CellContext`Tensor[
                 Style["E", Italic], {$CellContext`Void}, {$CellContext`i}]],
               Editable->False,
               SyntaxForm->Automatic], ".", 
              RowBox[{"m", "[", "0", "]"}], ".", 
              InterpretationBox[
               RowBox[{
                StyleBox["\[LeftBracketingBar]",
                 FontWeight->Bold], 
                InterpretationBox[
                 SubsuperscriptBox[
                  StyleBox["\<\"E\"\>",
                   StripOnInput->False,
                   FontSlant->Italic], "j", 
                  StyleBox["j",
                   StripOnInput->False,
                   ShowContents->False]],
                 $CellContext`Tensor[
                  Style["E", Italic], {$CellContext`Void}, {$CellContext`j}],
                 BaseStyle->{AutoMultiplicationSymbol -> False},
                 Editable->False], 
                StyleBox["\[RightAngleBracket]",
                 FontWeight->Bold]}],
               Ket[
                $CellContext`Tensor[
                 Style["E", Italic], {$CellContext`Void}, {$CellContext`j}]],
               Editable->False,
               SyntaxForm->Automatic]}]}]}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            RGBColor[0.7, 0, 1, 1], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {{Left}}},
          GridBoxDividers->{"Columns" -> {True}, "Rows" -> {False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"], "[", 
        StyleBox["\<\"matrix rep of m[\[Tau]]\"\>",
         StripOnInput->False,
         LineColor->RGBColor[0, 
           Rational[2, 3], 0],
         FrontFaceColor->RGBColor[0, 
           Rational[2, 3], 0],
         BackFaceColor->RGBColor[0, 
           Rational[2, 3], 0],
         GraphicsColor->RGBColor[0, 
           Rational[2, 3], 0],
         FontFamily->"Helvetica",
         FontColor->RGBColor[0, 
           Rational[2, 3], 0]], "]"}]},
      {
       RowBox[{
        TagBox[GridBox[{
           {
            FrameBox[
             RowBox[{"g", " ", 
              TemplateBox[{RowBox[{
                  InterpretationBox[
                   RowBox[{
                    StyleBox["\[LeftAngleBracket]", Bold], 
                    RowBox[{
                    SubscriptBox["\[Beta]", "\[Phi]"], ",", 
                    InterpretationBox[
                    SubsuperscriptBox[
                    StyleBox["\"E\"", Italic, StripOnInput -> False], 
                    RowBox[{"i"}], 
                    RowBox[{
                    StyleBox[
                    "i", ShowContents -> False, StripOnInput -> False]}]], 
                    $CellContext`Tensor[
                    Style[
                    "E", Italic], {$CellContext`Void}, {$CellContext`i}], 
                    Editable -> False, 
                    BaseStyle -> {AutoMultiplicationSymbol -> False}]}], 
                    StyleBox["\[RightBracketingBar]", Bold]}], 
                   Bra[
                    Subscript[$CellContext`\[Beta], $CellContext`\[Phi]], 
                    $CellContext`Tensor[
                    Style[
                    "E", Italic], {$CellContext`Void}, {$CellContext`i}]], 
                   SyntaxForm -> Automatic, Editable -> False], ".", 
                  RowBox[{"m", "[", "\[Tau]", "]"}], ".", 
                  RowBox[{"\[Phi]", "[", 
                    RowBox[{"x", "[", "\[Tau]", "]"}], "]"}], ".", 
                  InterpretationBox[
                   RowBox[{
                    StyleBox["\[LeftBracketingBar]", Bold], 
                    RowBox[{
                    SubscriptBox["0", "\[Phi]"], ",", 
                    InterpretationBox[
                    SubsuperscriptBox[
                    StyleBox["\"E\"", Italic, StripOnInput -> False], 
                    RowBox[{"j"}], 
                    RowBox[{
                    StyleBox[
                    "j", ShowContents -> False, StripOnInput -> False]}]], 
                    $CellContext`Tensor[
                    Style[
                    "E", Italic], {$CellContext`Void}, {$CellContext`j}], 
                    Editable -> False, 
                    BaseStyle -> {AutoMultiplicationSymbol -> False}]}], 
                    StyleBox["\[RightAngleBracket]", Bold]}], 
                   Ket[
                    Subscript[0, $CellContext`\[Phi]], 
                    $CellContext`Tensor[
                    Style[
                    "E", Italic], {$CellContext`Void}, {$CellContext`j}]], 
                   SyntaxForm -> Automatic, Editable -> False]}],"\[Tau]",
                RowBox[{"-", "\[Infinity]"}],"\[Infinity]"},
               "InactiveIntegrate",
               DisplayFunction->(RowBox[{
                  SubsuperscriptBox[
                   StyleBox["\[Integral]", "Inactive"], #3, #4], 
                  RowBox[{#, 
                    RowBox[{
                    StyleBox["\[DifferentialD]", "Inactive"], #2}]}]}]& ),
               InterpretationFunction->(RowBox[{
                  RowBox[{"Inactive", "[", "Integrate", "]"}], "[", 
                  RowBox[{#, ",", 
                    RowBox[{"{", 
                    RowBox[{#2, ",", #3, ",", #4}], "}"}]}], "]"}]& )]}],
             StripOnInput->False]},
           {
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"m", "[", "\[Tau]", "]"}], "\[Rule]", 
               RowBox[{
                SuperscriptBox["\[ExponentialE]", 
                 RowBox[{"\[ImaginaryI]", " ", "H", " ", "\[Tau]"}]], ".", 
                RowBox[{"m", "[", "0", "]"}], ".", 
                SuperscriptBox["\[ExponentialE]", 
                 RowBox[{
                  RowBox[{"-", "\[ImaginaryI]"}], " ", "H", " ", 
                  "\[Tau]"}]]}]}], "}"}], "[", 
             StyleBox["\<\"time evolution\"\>",
              StripOnInput->False,
              LineColor->RGBColor[0, 
                Rational[2, 3], 0],
              FrontFaceColor->RGBColor[0, 
                Rational[2, 3], 0],
              BackFaceColor->RGBColor[0, 
                Rational[2, 3], 0],
              GraphicsColor->RGBColor[0, 
                Rational[2, 3], 0],
              FontFamily->"Helvetica",
              FontColor->RGBColor[0, 
                Rational[2, 3], 0]], "]"}]},
           {
            RowBox[{"g", " ", 
             TemplateBox[{RowBox[{
                 InterpretationBox[
                  RowBox[{
                    StyleBox["\[LeftAngleBracket]", Bold], 
                    RowBox[{
                    SubscriptBox["\[Beta]", "\[Phi]"], ",", 
                    InterpretationBox[
                    SubsuperscriptBox[
                    StyleBox["\"E\"", Italic, StripOnInput -> False], 
                    RowBox[{"i"}], 
                    RowBox[{
                    StyleBox[
                    "i", ShowContents -> False, StripOnInput -> False]}]], 
                    $CellContext`Tensor[
                    Style[
                    "E", Italic], {$CellContext`Void}, {$CellContext`i}], 
                    Editable -> False, 
                    BaseStyle -> {AutoMultiplicationSymbol -> False}]}], 
                    StyleBox["\[RightBracketingBar]", Bold]}], 
                  Bra[
                   Subscript[$CellContext`\[Beta], $CellContext`\[Phi]], 
                   $CellContext`Tensor[
                    Style[
                    "E", Italic], {$CellContext`Void}, {$CellContext`i}]], 
                  SyntaxForm -> Automatic, Editable -> False], ".", 
                 SuperscriptBox["\[ExponentialE]", 
                  RowBox[{"\[ImaginaryI]", " ", "H", " ", "\[Tau]"}]], ".", 
                 RowBox[{"m", "[", "0", "]"}], ".", 
                 SuperscriptBox["\[ExponentialE]", 
                  RowBox[{
                    RowBox[{"-", "\[ImaginaryI]"}], " ", "H", " ", 
                    "\[Tau]"}]], ".", 
                 RowBox[{"\[Phi]", "[", 
                   RowBox[{"x", "[", "\[Tau]", "]"}], "]"}], ".", 
                 InterpretationBox[
                  RowBox[{
                    StyleBox["\[LeftBracketingBar]", Bold], 
                    RowBox[{
                    SubscriptBox["0", "\[Phi]"], ",", 
                    InterpretationBox[
                    SubsuperscriptBox[
                    StyleBox["\"E\"", Italic, StripOnInput -> False], 
                    RowBox[{"j"}], 
                    RowBox[{
                    StyleBox[
                    "j", ShowContents -> False, StripOnInput -> False]}]], 
                    $CellContext`Tensor[
                    Style[
                    "E", Italic], {$CellContext`Void}, {$CellContext`j}], 
                    Editable -> False, 
                    BaseStyle -> {AutoMultiplicationSymbol -> False}]}], 
                    StyleBox["\[RightAngleBracket]", Bold]}], 
                  Ket[
                   Subscript[0, $CellContext`\[Phi]], 
                   $CellContext`Tensor[
                    Style[
                    "E", Italic], {$CellContext`Void}, {$CellContext`j}]], 
                  SyntaxForm -> Automatic, Editable -> False]}],"\[Tau]",
               RowBox[{"-", "\[Infinity]"}],"\[Infinity]"},
              "InactiveIntegrate",
              DisplayFunction->(RowBox[{
                 SubsuperscriptBox[
                  StyleBox["\[Integral]", "Inactive"], #3, #4], 
                 RowBox[{#, 
                   RowBox[{
                    StyleBox["\[DifferentialD]", "Inactive"], #2}]}]}]& ),
              InterpretationFunction->(RowBox[{
                 RowBox[{"Inactive", "[", "Integrate", "]"}], "[", 
                 RowBox[{#, ",", 
                   RowBox[{"{", 
                    RowBox[{#2, ",", #3, ",", #4}], "}"}]}], "]"}]& )]}]},
           {
            RowBox[{"g", " ", 
             TemplateBox[{RowBox[{
                 InterpretationBox[
                  RowBox[{
                    StyleBox["\[LeftAngleBracket]", Bold], 
                    SubscriptBox["\[Beta]", "\[Phi]"], 
                    StyleBox["\[RightBracketingBar]", Bold]}], 
                  Bra[
                   Subscript[$CellContext`\[Beta], $CellContext`\[Phi]]], 
                  SyntaxForm -> Automatic, Editable -> False], ".", 
                 InterpretationBox[
                  RowBox[{
                    StyleBox["\[LeftAngleBracket]", Bold], 
                    InterpretationBox[
                    SubsuperscriptBox[
                    StyleBox["\"E\"", Italic, StripOnInput -> False], 
                    RowBox[{"i"}], 
                    RowBox[{
                    StyleBox[
                    "i", ShowContents -> False, StripOnInput -> False]}]], 
                    $CellContext`Tensor[
                    Style[
                    "E", Italic], {$CellContext`Void}, {$CellContext`i}], 
                    Editable -> False, 
                    BaseStyle -> {AutoMultiplicationSymbol -> False}], 
                    StyleBox["\[RightBracketingBar]", Bold]}], 
                  Bra[
                   $CellContext`Tensor[
                    Style[
                    "E", Italic], {$CellContext`Void}, {$CellContext`i}]], 
                  SyntaxForm -> Automatic, Editable -> False], ".", 
                 SuperscriptBox["\[ExponentialE]", 
                  RowBox[{"\[ImaginaryI]", " ", "H", " ", "\[Tau]"}]], ".", 
                 RowBox[{"m", "[", "0", "]"}], ".", 
                 SuperscriptBox["\[ExponentialE]", 
                  RowBox[{
                    RowBox[{"-", "\[ImaginaryI]"}], " ", "H", " ", 
                    "\[Tau]"}]], ".", 
                 InterpretationBox[
                  RowBox[{
                    StyleBox["\[LeftBracketingBar]", Bold], 
                    InterpretationBox[
                    SubsuperscriptBox[
                    StyleBox["\"E\"", Italic, StripOnInput -> False], 
                    RowBox[{"j"}], 
                    RowBox[{
                    StyleBox[
                    "j", ShowContents -> False, StripOnInput -> False]}]], 
                    $CellContext`Tensor[
                    Style[
                    "E", Italic], {$CellContext`Void}, {$CellContext`j}], 
                    Editable -> False, 
                    BaseStyle -> {AutoMultiplicationSymbol -> False}], 
                    StyleBox["\[RightAngleBracket]", Bold]}], 
                  Ket[
                   $CellContext`Tensor[
                    Style[
                    "E", Italic], {$CellContext`Void}, {$CellContext`j}]], 
                  SyntaxForm -> Automatic, Editable -> False], ".", 
                 RowBox[{"\[Phi]", "[", 
                   RowBox[{"x", "[", "\[Tau]", "]"}], "]"}], ".", 
                 InterpretationBox[
                  RowBox[{
                    StyleBox["\[LeftBracketingBar]", Bold], 
                    SubscriptBox["0", "\[Phi]"], 
                    StyleBox["\[RightAngleBracket]", Bold]}], 
                  Ket[
                   Subscript[0, $CellContext`\[Phi]]], SyntaxForm -> 
                  Automatic, Editable -> False]}],"\[Tau]",
               RowBox[{"-", "\[Infinity]"}],"\[Infinity]"},
              "InactiveIntegrate",
              DisplayFunction->(RowBox[{
                 SubsuperscriptBox[
                  StyleBox["\[Integral]", "Inactive"], #3, #4], 
                 RowBox[{#, 
                   RowBox[{
                    StyleBox["\[DifferentialD]", "Inactive"], #2}]}]}]& ),
              InterpretationFunction->(RowBox[{
                 RowBox[{"Inactive", "[", "Integrate", "]"}], "[", 
                 RowBox[{#, ",", 
                   RowBox[{"{", 
                    RowBox[{#2, ",", #3, ",", #4}], "}"}]}], "]"}]& )]}]},
           {
            RowBox[{"g", " ", 
             TemplateBox[{RowBox[{
                 SuperscriptBox["\[ExponentialE]", 
                  RowBox[{"\[ImaginaryI]", " ", "\[Tau]", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    InterpretationBox[
                    SubsuperscriptBox[
                    StyleBox["\"E\"", Italic, StripOnInput -> False], 
                    RowBox[{"i"}], 
                    RowBox[{
                    StyleBox[
                    "i", ShowContents -> False, StripOnInput -> False]}]], 
                    $CellContext`Tensor[
                    Style["E", 
                    Italic], {$CellContext`Void}, {$CellContext`i}], Editable -> 
                    False, BaseStyle -> {AutoMultiplicationSymbol -> False}], 
                    "-", 
                    InterpretationBox[
                    SubsuperscriptBox[
                    StyleBox["\"E\"", Italic, StripOnInput -> False], 
                    RowBox[{"j"}], 
                    RowBox[{
                    StyleBox[
                    "j", ShowContents -> False, StripOnInput -> False]}]], 
                    $CellContext`Tensor[
                    Style[
                    "E", Italic], {$CellContext`Void}, {$CellContext`j}], 
                    Editable -> False, 
                    BaseStyle -> {AutoMultiplicationSymbol -> False}]}], 
                    ")"}]}]], " ", 
                 RowBox[{
                   InterpretationBox[
                    RowBox[{
                    StyleBox["\[LeftAngleBracket]", Bold], 
                    SubscriptBox["\[Beta]", "\[Phi]"], 
                    StyleBox["\[RightBracketingBar]", Bold]}], 
                    Bra[
                    Subscript[$CellContext`\[Beta], $CellContext`\[Phi]]], 
                    SyntaxForm -> Automatic, Editable -> False], ".", 
                   RowBox[{"\[Phi]", "[", 
                    RowBox[{"x", "[", "\[Tau]", "]"}], "]"}], ".", 
                   InterpretationBox[
                    RowBox[{
                    StyleBox["\[LeftBracketingBar]", Bold], 
                    SubscriptBox["0", "\[Phi]"], 
                    StyleBox["\[RightAngleBracket]", Bold]}], 
                    Ket[
                    Subscript[0, $CellContext`\[Phi]]], SyntaxForm -> 
                    Automatic, Editable -> False]}], " ", 
                 InterpretationBox[
                  SubsuperscriptBox["m", 
                   RowBox[{"i", "j"}], 
                   RowBox[{
                    StyleBox[
                    "i", ShowContents -> False, StripOnInput -> False], 
                    StyleBox[
                    "j", ShowContents -> False, StripOnInput -> False]}]], 
                  $CellContext`Tensor[$CellContext`m, {$CellContext`Void, \
$CellContext`Void}, {$CellContext`i, $CellContext`j}], Editable -> False, 
                  BaseStyle -> {AutoMultiplicationSymbol -> False}]}],
               "\[Tau]",RowBox[{"-", "\[Infinity]"}],"\[Infinity]"},
              "InactiveIntegrate",
              DisplayFunction->(RowBox[{
                 SubsuperscriptBox[
                  StyleBox["\[Integral]", "Inactive"], #3, #4], 
                 RowBox[{#, 
                   RowBox[{
                    StyleBox["\[DifferentialD]", "Inactive"], #2}]}]}]& ),
              InterpretationFunction->(RowBox[{
                 RowBox[{"Inactive", "[", "Integrate", "]"}], "[", 
                 RowBox[{#, ",", 
                   RowBox[{"{", 
                    RowBox[{#2, ",", #3, ",", #4}], "}"}]}], "]"}]& )]}]}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            RGBColor[0.7, 0, 1, 1], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {{Left}}},
          GridBoxDividers->{"Columns" -> {True}, "Rows" -> {False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"], "[", 
        RowBox[{
         StyleBox["\<\"transition amplitude \"\>",
          StripOnInput->False,
          LineColor->RGBColor[0, 
            Rational[2, 3], 0],
          FrontFaceColor->RGBColor[0, 
            Rational[2, 3], 0],
          BackFaceColor->RGBColor[0, 
            Rational[2, 3], 0],
          GraphicsColor->RGBColor[0, 
            Rational[2, 3], 0],
          FontFamily->"Helvetica",
          FontColor->RGBColor[0, 
            Rational[2, 3], 0]], ",", 
         StyleBox[
          RowBox[{
           InterpretationBox[
            RowBox[{
             StyleBox["\[LeftBracketingBar]",
              FontWeight->Bold], 
             RowBox[{
              SubscriptBox["0", "\[Phi]"], ",", 
              InterpretationBox[
               SubsuperscriptBox[
                StyleBox["\<\"E\"\>",
                 StripOnInput->False,
                 FontSlant->Italic], "i", 
                StyleBox["i",
                 StripOnInput->False,
                 ShowContents->False]],
               $CellContext`Tensor[
                Style["E", Italic], {$CellContext`Void}, {$CellContext`i}],
               BaseStyle->{AutoMultiplicationSymbol -> False},
               Editable->False]}], 
             StyleBox["\[RightAngleBracket]",
              FontWeight->Bold]}],
            Ket[
             Subscript[0, $CellContext`\[Phi]], 
             $CellContext`Tensor[
              Style["E", Italic], {$CellContext`Void}, {$CellContext`i}]],
            Editable->False,
            SyntaxForm->Automatic], "\[LongRightArrow]", 
           InterpretationBox[
            RowBox[{
             StyleBox["\[LeftBracketingBar]",
              FontWeight->Bold], 
             RowBox[{
              SubscriptBox["\[Beta]", "\[Phi]"], ",", 
              InterpretationBox[
               SubsuperscriptBox[
                StyleBox["\<\"E\"\>",
                 StripOnInput->False,
                 FontSlant->Italic], "j", 
                StyleBox["j",
                 StripOnInput->False,
                 ShowContents->False]],
               $CellContext`Tensor[
                Style["E", Italic], {$CellContext`Void}, {$CellContext`j}],
               BaseStyle->{AutoMultiplicationSymbol -> False},
               Editable->False]}], 
             StyleBox["\[RightAngleBracket]",
              FontWeight->Bold]}],
            Ket[
             Subscript[$CellContext`\[Beta], $CellContext`\[Phi]], 
             $CellContext`Tensor[
              Style["E", Italic], {$CellContext`Void}, {$CellContext`j}]],
            Editable->False,
            SyntaxForm->Automatic]}],
          StripOnInput->False,
          LineColor->RGBColor[0, 
            Rational[2, 3], 0],
          FrontFaceColor->RGBColor[0, 
            Rational[2, 3], 0],
          BackFaceColor->RGBColor[0, 
            Rational[2, 3], 0],
          GraphicsColor->RGBColor[0, 
            Rational[2, 3], 0],
          FontFamily->"Helvetica",
          FontColor->RGBColor[0, 
            Rational[2, 3], 0]]}], "]"}]},
      {
       RowBox[{
        TagBox[GridBox[{
           {
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               InterpretationBox[
                SuperscriptBox["g", "\[Dagger]"],
                ConjugateTranspose[$CellContext`g],
                Editable->False,
                SyntaxForm->Automatic], " ", 
               InterpretationBox[
                SuperscriptBox[
                 TemplateBox[{RowBox[{
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"\[ImaginaryI]", " ", "\[Tau]1", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    InterpretationBox[
                    SubsuperscriptBox[
                    StyleBox["\"E\"", Italic, StripOnInput -> False], 
                    RowBox[{"i1"}], 
                    RowBox[{
                    StyleBox[
                    "i1", ShowContents -> False, StripOnInput -> False]}]], 
                    $CellContext`Tensor[
                    Style[
                    "E", Italic], {$CellContext`Void}, {$CellContext`i1}], 
                    Editable -> False, 
                    BaseStyle -> {AutoMultiplicationSymbol -> False}], "-", 
                    InterpretationBox[
                    SubsuperscriptBox[
                    StyleBox["\"E\"", Italic, StripOnInput -> False], 
                    RowBox[{"j1"}], 
                    RowBox[{
                    StyleBox[
                    "j1", ShowContents -> False, StripOnInput -> False]}]], 
                    $CellContext`Tensor[
                    Style[
                    "E", Italic], {$CellContext`Void}, {$CellContext`j1}], 
                    Editable -> False, 
                    BaseStyle -> {AutoMultiplicationSymbol -> False}]}], 
                    ")"}]}]], " ", 
                    RowBox[{
                    InterpretationBox[
                    RowBox[{
                    StyleBox["\[LeftAngleBracket]", Bold], 
                    SubscriptBox["\[Beta]", "\[Phi]"], 
                    StyleBox["\[RightBracketingBar]", Bold]}], 
                    Bra[
                    Subscript[$CellContext`\[Beta], $CellContext`\[Phi]]], 
                    SyntaxForm -> Automatic, Editable -> False], ".", 
                    RowBox[{"\[Phi]", "[", 
                    RowBox[{"x", "[", "\[Tau]1", "]"}], "]"}], ".", 
                    InterpretationBox[
                    RowBox[{
                    StyleBox["\[LeftBracketingBar]", Bold], 
                    SubscriptBox["0", "\[Phi]"], 
                    StyleBox["\[RightAngleBracket]", Bold]}], 
                    Ket[
                    Subscript[0, $CellContext`\[Phi]]], SyntaxForm -> 
                    Automatic, Editable -> False]}], " ", 
                    InterpretationBox[
                    SubsuperscriptBox["m", 
                    RowBox[{"i1", "j1"}], 
                    RowBox[{
                    StyleBox[
                    "i1", ShowContents -> False, StripOnInput -> False], 
                    StyleBox[
                    "j1", ShowContents -> False, StripOnInput -> False]}]], 
                    $CellContext`Tensor[$CellContext`m, {$CellContext`Void, \
$CellContext`Void}, {$CellContext`i1, $CellContext`j1}], Editable -> False, 
                    BaseStyle -> {AutoMultiplicationSymbol -> False}]}],
                   "\[Tau]1",RowBox[{"-", "\[Infinity]"}],"\[Infinity]"},
                  "InactiveIntegrate",
                  DisplayFunction->(RowBox[{
                    SubsuperscriptBox[
                    StyleBox["\[Integral]", "Inactive"], #3, #4], 
                    RowBox[{#, 
                    RowBox[{
                    StyleBox["\[DifferentialD]", "Inactive"], #2}]}]}]& ),
                  InterpretationFunction->(RowBox[{
                    RowBox[{"Inactive", "[", "Integrate", "]"}], "[", 
                    RowBox[{#, ",", 
                    RowBox[{"{", 
                    RowBox[{#2, ",", #3, ",", #4}], "}"}]}], "]"}]& )], 
                 "\[Dagger]"],
                ConjugateTranspose[
                 Inactive[Integrate][
                 E^(Complex[0, 1] $CellContext`\[Tau]1 ($CellContext`Tensor[
                    Style[
                    "E", Italic], {$CellContext`Void}, {$CellContext`i1}] - \
$CellContext`Tensor[
                    Style[
                    "E", Italic], {$CellContext`Void}, {$CellContext`j1}])) 
                  Dot[
                    Bra[
                    Subscript[$CellContext`\[Beta], $CellContext`\[Phi]]], 
                    $CellContext`\[Phi][
                    $CellContext`x[$CellContext`\[Tau]1]], 
                    Ket[
                    Subscript[
                    0, $CellContext`\[Phi]]]] \
$CellContext`Tensor[$CellContext`m, {$CellContext`Void, $CellContext`Void}, \
{$CellContext`i1, $CellContext`j1}], {$CellContext`\[Tau]1, 
                   DirectedInfinity[-1], 
                   DirectedInfinity[1]}]],
                Editable->False,
                SyntaxForm->Automatic]}], ")"}], ".", 
             RowBox[{"(", 
              RowBox[{"g", " ", 
               TemplateBox[{RowBox[{
                   SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"\[ImaginaryI]", " ", "\[Tau]", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    InterpretationBox[
                    SubsuperscriptBox[
                    StyleBox["\"E\"", Italic, StripOnInput -> False], 
                    RowBox[{"i"}], 
                    RowBox[{
                    StyleBox[
                    "i", ShowContents -> False, StripOnInput -> False]}]], 
                    $CellContext`Tensor[
                    Style[
                    "E", Italic], {$CellContext`Void}, {$CellContext`i}], 
                    Editable -> False, 
                    BaseStyle -> {AutoMultiplicationSymbol -> False}], "-", 
                    InterpretationBox[
                    SubsuperscriptBox[
                    StyleBox["\"E\"", Italic, StripOnInput -> False], 
                    RowBox[{"j"}], 
                    RowBox[{
                    StyleBox[
                    "j", ShowContents -> False, StripOnInput -> False]}]], 
                    $CellContext`Tensor[
                    Style[
                    "E", Italic], {$CellContext`Void}, {$CellContext`j}], 
                    Editable -> False, 
                    BaseStyle -> {AutoMultiplicationSymbol -> False}]}], 
                    ")"}]}]], " ", 
                   RowBox[{
                    InterpretationBox[
                    RowBox[{
                    StyleBox["\[LeftAngleBracket]", Bold], 
                    SubscriptBox["\[Beta]", "\[Phi]"], 
                    StyleBox["\[RightBracketingBar]", Bold]}], 
                    Bra[
                    Subscript[$CellContext`\[Beta], $CellContext`\[Phi]]], 
                    SyntaxForm -> Automatic, Editable -> False], ".", 
                    RowBox[{"\[Phi]", "[", 
                    RowBox[{"x", "[", "\[Tau]", "]"}], "]"}], ".", 
                    InterpretationBox[
                    RowBox[{
                    StyleBox["\[LeftBracketingBar]", Bold], 
                    SubscriptBox["0", "\[Phi]"], 
                    StyleBox["\[RightAngleBracket]", Bold]}], 
                    Ket[
                    Subscript[0, $CellContext`\[Phi]]], SyntaxForm -> 
                    Automatic, Editable -> False]}], " ", 
                   InterpretationBox[
                    SubsuperscriptBox["m", 
                    RowBox[{"i", "j"}], 
                    RowBox[{
                    StyleBox[
                    "i", ShowContents -> False, StripOnInput -> False], 
                    StyleBox[
                    "j", ShowContents -> False, StripOnInput -> False]}]], 
                    $CellContext`Tensor[$CellContext`m, {$CellContext`Void, \
$CellContext`Void}, {$CellContext`i, $CellContext`j}], Editable -> False, 
                    BaseStyle -> {AutoMultiplicationSymbol -> False}]}],
                 "\[Tau]",RowBox[{"-", "\[Infinity]"}],"\[Infinity]"},
                "InactiveIntegrate",
                DisplayFunction->(RowBox[{
                   SubsuperscriptBox[
                    StyleBox["\[Integral]", "Inactive"], #3, #4], 
                   RowBox[{#, 
                    RowBox[{
                    StyleBox["\[DifferentialD]", "Inactive"], #2}]}]}]& ),
                InterpretationFunction->(RowBox[{
                   RowBox[{"Inactive", "[", "Integrate", "]"}], "[", 
                   RowBox[{#, ",", 
                    RowBox[{"{", 
                    RowBox[{#2, ",", #3, ",", #4}], "}"}]}], "]"}]& )]}], 
              ")"}]}]},
           {
            TemplateBox[{RowBox[{
                SuperscriptBox["\[ExponentialE]", 
                 RowBox[{
                   RowBox[{"\[ImaginaryI]", " ", "\[Tau]", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    InterpretationBox[
                    SubsuperscriptBox[
                    StyleBox["\"E\"", Italic, StripOnInput -> False], 
                    RowBox[{"i"}], 
                    RowBox[{
                    StyleBox[
                    "i", ShowContents -> False, StripOnInput -> False]}]], 
                    $CellContext`Tensor[
                    Style[
                    "E", Italic], {$CellContext`Void}, {$CellContext`i}], 
                    Editable -> False, 
                    BaseStyle -> {AutoMultiplicationSymbol -> False}], "-", 
                    InterpretationBox[
                    SubsuperscriptBox[
                    StyleBox["\"E\"", Italic, StripOnInput -> False], 
                    RowBox[{"j"}], 
                    RowBox[{
                    StyleBox[
                    "j", ShowContents -> False, StripOnInput -> False]}]], 
                    $CellContext`Tensor[
                    Style[
                    "E", Italic], {$CellContext`Void}, {$CellContext`j}], 
                    Editable -> False, 
                    BaseStyle -> {AutoMultiplicationSymbol -> False}]}], 
                    ")"}]}], "-", 
                   RowBox[{"\[ImaginaryI]", " ", "\[Tau]1", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    InterpretationBox[
                    SubsuperscriptBox[
                    StyleBox["\"E\"", Italic, StripOnInput -> False], 
                    RowBox[{"i1"}], 
                    RowBox[{
                    StyleBox[
                    "i1", ShowContents -> False, StripOnInput -> False]}]], 
                    $CellContext`Tensor[
                    Style[
                    "E", Italic], {$CellContext`Void}, {$CellContext`i1}], 
                    Editable -> False, 
                    BaseStyle -> {AutoMultiplicationSymbol -> False}], "-", 
                    InterpretationBox[
                    SubsuperscriptBox[
                    StyleBox["\"E\"", Italic, StripOnInput -> False], 
                    RowBox[{"j1"}], 
                    RowBox[{
                    StyleBox[
                    "j1", ShowContents -> False, StripOnInput -> False]}]], 
                    $CellContext`Tensor[
                    Style[
                    "E", Italic], {$CellContext`Void}, {$CellContext`j1}], 
                    Editable -> False, 
                    BaseStyle -> {AutoMultiplicationSymbol -> False}]}], 
                    ")"}]}]}]], " ", 
                SuperscriptBox["g", "2"], " ", 
                InterpretationBox[
                 SuperscriptBox[
                  RowBox[{"(", 
                    InterpretationBox[
                    SubsuperscriptBox["m", 
                    RowBox[{"i1", "j1"}], 
                    RowBox[{
                    StyleBox[
                    "i1", ShowContents -> False, StripOnInput -> False], 
                    StyleBox[
                    "j1", ShowContents -> False, StripOnInput -> False]}]], 
                    $CellContext`Tensor[$CellContext`m, {$CellContext`Void, \
$CellContext`Void}, {$CellContext`i1, $CellContext`j1}], Editable -> False, 
                    BaseStyle -> {AutoMultiplicationSymbol -> False}], ")"}], 
                  "\[Dagger]"], 
                 ConjugateTranspose[
                  $CellContext`Tensor[$CellContext`m, {$CellContext`Void, \
$CellContext`Void}, {$CellContext`i1, $CellContext`j1}]], SyntaxForm -> 
                 Automatic, Editable -> False], " ", 
                RowBox[{
                  InterpretationBox[
                   RowBox[{
                    StyleBox["\[LeftAngleBracket]", Bold], 
                    SubscriptBox["0", "\[Phi]"], 
                    StyleBox["\[RightBracketingBar]", Bold]}], 
                   Bra[
                    Subscript[0, $CellContext`\[Phi]]], SyntaxForm -> 
                   Automatic, Editable -> False], ".", 
                  InterpretationBox[
                   SuperscriptBox[
                    RowBox[{"\[Phi]", "[", 
                    RowBox[{"x", "[", "\[Tau]1", "]"}], "]"}], "\[Dagger]"], 
                   ConjugateTranspose[
                    $CellContext`\[Phi][
                    $CellContext`x[$CellContext`\[Tau]1]]], SyntaxForm -> 
                   Automatic, Editable -> False], ".", 
                  InterpretationBox[
                   RowBox[{
                    StyleBox["\[LeftBracketingBar]", Bold], 
                    SubscriptBox["\[Beta]", "\[Phi]"], 
                    StyleBox["\[RightAngleBracket]", Bold]}], 
                   Ket[
                    Subscript[$CellContext`\[Beta], $CellContext`\[Phi]]], 
                   SyntaxForm -> Automatic, Editable -> False], ".", 
                  InterpretationBox[
                   RowBox[{
                    StyleBox["\[LeftAngleBracket]", Bold], 
                    SubscriptBox["\[Beta]", "\[Phi]"], 
                    StyleBox["\[RightBracketingBar]", Bold]}], 
                   Bra[
                    Subscript[$CellContext`\[Beta], $CellContext`\[Phi]]], 
                   SyntaxForm -> Automatic, Editable -> False], ".", 
                  RowBox[{"\[Phi]", "[", 
                    RowBox[{"x", "[", "\[Tau]", "]"}], "]"}], ".", 
                  InterpretationBox[
                   RowBox[{
                    StyleBox["\[LeftBracketingBar]", Bold], 
                    SubscriptBox["0", "\[Phi]"], 
                    StyleBox["\[RightAngleBracket]", Bold]}], 
                   Ket[
                    Subscript[0, $CellContext`\[Phi]]], SyntaxForm -> 
                   Automatic, Editable -> False]}], " ", 
                InterpretationBox[
                 SubsuperscriptBox["m", 
                  RowBox[{"i", "j"}], 
                  RowBox[{
                    StyleBox[
                    "i", ShowContents -> False, StripOnInput -> False], 
                    StyleBox[
                    "j", ShowContents -> False, StripOnInput -> False]}]], 
                 $CellContext`Tensor[$CellContext`m, {$CellContext`Void, \
$CellContext`Void}, {$CellContext`i, $CellContext`j}], Editable -> False, 
                 BaseStyle -> {AutoMultiplicationSymbol -> False}]}],"\[Tau]",
              RowBox[{"-", "\[Infinity]"}],"\[Infinity]","\[Tau]1",
              RowBox[{"-", "\[Infinity]"}],"\[Infinity]"},
             "InactiveIntegrate",
             DisplayFunction->(RowBox[{
                SubsuperscriptBox[
                 StyleBox["\[Integral]", "Inactive"], #3, #4], 
                RowBox[{
                  SubsuperscriptBox[
                   StyleBox["\[Integral]", "Inactive"], #6, #7], 
                  RowBox[{#, 
                    RowBox[{
                    StyleBox["\[DifferentialD]", "Inactive"], #5}], 
                    RowBox[{
                    StyleBox["\[DifferentialD]", "Inactive"], #2}]}]}]}]& ),
             InterpretationFunction->(RowBox[{
                RowBox[{"Inactive", "[", "Integrate", "]"}], "[", 
                RowBox[{#, ",", 
                  RowBox[{"{", 
                    RowBox[{#2, ",", #3, ",", #4}], "}"}], ",", 
                  RowBox[{"{", 
                    RowBox[{#5, ",", #6, ",", #7}], "}"}]}], "]"}]& )]},
           {
            RowBox[{
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{
                 RowBox[{
                  InterpretationBox[
                   RowBox[{
                    StyleBox["\[LeftBracketingBar]",
                    FontWeight->Bold], 
                    SubscriptBox["\[Beta]", "\[Phi]"], 
                    StyleBox["\[RightAngleBracket]",
                    FontWeight->Bold]}],
                   Ket[
                    Subscript[$CellContext`\[Beta], $CellContext`\[Phi]]],
                   Editable->False,
                   SyntaxForm->Automatic], ".", 
                  InterpretationBox[
                   RowBox[{
                    StyleBox["\[LeftAngleBracket]",
                    FontWeight->Bold], 
                    SubscriptBox["\[Beta]", "\[Phi]"], 
                    StyleBox["\[RightBracketingBar]",
                    FontWeight->Bold]}],
                   Bra[
                    Subscript[$CellContext`\[Beta], $CellContext`\[Phi]]],
                   Editable->False,
                   SyntaxForm->Automatic]}], "\[Rule]", "1"}], ",", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{
                    InterpretationBox[
                    RowBox[{
                    StyleBox["\[LeftAngleBracket]",
                    FontWeight->Bold], 
                    SubscriptBox["0", "\[Phi]"], 
                    StyleBox["\[RightBracketingBar]",
                    FontWeight->Bold]}],
                    Bra[
                    Subscript[0, $CellContext`\[Phi]]],
                    Editable->False,
                    SyntaxForm->Automatic], ".", 
                    InterpretationBox[
                    SuperscriptBox[
                    RowBox[{"\[Phi]", "[", "x1_", "]"}], "\[Dagger]"],
                    ConjugateTranspose[
                    $CellContext`\[Phi][
                    Pattern[$CellContext`x1, 
                    Blank[]]]],
                    Editable->False,
                    SyntaxForm->Automatic], ".", 
                    RowBox[{"\[Phi]", "[", "x2_", "]"}], ".", 
                    InterpretationBox[
                    RowBox[{
                    StyleBox["\[LeftBracketingBar]",
                    FontWeight->Bold], 
                    SubscriptBox["0", "\[Phi]"], 
                    StyleBox["\[RightAngleBracket]",
                    FontWeight->Bold]}],
                    Ket[
                    Subscript[0, $CellContext`\[Phi]]],
                    Editable->False,
                    SyntaxForm->Automatic]}], "\[Rule]", 
                   RowBox[{"G", "[", 
                    RowBox[{"x1", ",", "x2"}], "]"}]}], "}"}], "[", 
                 StyleBox["\<\"Green's function\"\>",
                  StripOnInput->False,
                  LineColor->RGBColor[0, 
                    Rational[2, 3], 0],
                  FrontFaceColor->RGBColor[0, 
                    Rational[2, 3], 0],
                  BackFaceColor->RGBColor[0, 
                    Rational[2, 3], 0],
                  GraphicsColor->RGBColor[0, 
                    Rational[2, 3], 0],
                  FontFamily->"Helvetica",
                  FontColor->RGBColor[0, 
                    Rational[2, 3], 0]], "]"}], ",", 
                RowBox[{"j1", "\[Rule]", "j"}], ",", 
                RowBox[{"i1", "\[Rule]", "i"}]}], "}"}], "}"}], "[", 
             
             StyleBox["\<\"Sum over all \[Beta] states, G defined, between 2 \
detector states\"\>",
              StripOnInput->False,
              LineColor->RGBColor[0, 
                Rational[2, 3], 0],
              FrontFaceColor->RGBColor[0, 
                Rational[2, 3], 0],
              BackFaceColor->RGBColor[0, 
                Rational[2, 3], 0],
              GraphicsColor->RGBColor[0, 
                Rational[2, 3], 0],
              FontFamily->"Helvetica",
              FontColor->RGBColor[0, 
                Rational[2, 3], 0]], "]"}]},
           {
            TemplateBox[{RowBox[{
                SuperscriptBox["\[ExponentialE]", 
                 RowBox[{"\[ImaginaryI]", " ", 
                   RowBox[{"(", 
                    RowBox[{"\[Tau]", "-", "\[Tau]1"}], ")"}], " ", 
                   RowBox[{"(", 
                    RowBox[{
                    InterpretationBox[
                    SubsuperscriptBox[
                    StyleBox["\"E\"", Italic, StripOnInput -> False], 
                    RowBox[{"i"}], 
                    RowBox[{
                    StyleBox[
                    "i", ShowContents -> False, StripOnInput -> False]}]], 
                    $CellContext`Tensor[
                    Style[
                    "E", Italic], {$CellContext`Void}, {$CellContext`i}], 
                    Editable -> False, 
                    BaseStyle -> {AutoMultiplicationSymbol -> False}], "-", 
                    InterpretationBox[
                    SubsuperscriptBox[
                    StyleBox["\"E\"", Italic, StripOnInput -> False], 
                    RowBox[{"j"}], 
                    RowBox[{
                    StyleBox[
                    "j", ShowContents -> False, StripOnInput -> False]}]], 
                    $CellContext`Tensor[
                    Style[
                    "E", Italic], {$CellContext`Void}, {$CellContext`j}], 
                    Editable -> False, 
                    BaseStyle -> {AutoMultiplicationSymbol -> False}]}], 
                    ")"}]}]], " ", 
                SuperscriptBox["g", "2"], " ", 
                InterpretationBox[
                 SuperscriptBox[
                  RowBox[{"(", 
                    InterpretationBox[
                    SubsuperscriptBox["m", 
                    RowBox[{"i", "j"}], 
                    RowBox[{
                    StyleBox[
                    "i", ShowContents -> False, StripOnInput -> False], 
                    StyleBox[
                    "j", ShowContents -> False, StripOnInput -> False]}]], 
                    $CellContext`Tensor[$CellContext`m, {$CellContext`Void, \
$CellContext`Void}, {$CellContext`i, $CellContext`j}], Editable -> False, 
                    BaseStyle -> {AutoMultiplicationSymbol -> False}], ")"}], 
                  "\[Dagger]"], 
                 ConjugateTranspose[
                  $CellContext`Tensor[$CellContext`m, {$CellContext`Void, \
$CellContext`Void}, {$CellContext`i, $CellContext`j}]], SyntaxForm -> 
                 Automatic, Editable -> False], " ", 
                RowBox[{"G", "[", 
                  RowBox[{
                    RowBox[{"x", "[", "\[Tau]1", "]"}], ",", 
                    RowBox[{"x", "[", "\[Tau]", "]"}]}], "]"}], " ", 
                InterpretationBox[
                 SubsuperscriptBox["m", 
                  RowBox[{"i", "j"}], 
                  RowBox[{
                    StyleBox[
                    "i", ShowContents -> False, StripOnInput -> False], 
                    StyleBox[
                    "j", ShowContents -> False, StripOnInput -> False]}]], 
                 $CellContext`Tensor[$CellContext`m, {$CellContext`Void, \
$CellContext`Void}, {$CellContext`i, $CellContext`j}], Editable -> False, 
                 BaseStyle -> {AutoMultiplicationSymbol -> False}]}],"\[Tau]",
              RowBox[{"-", "\[Infinity]"}],"\[Infinity]","\[Tau]1",
              RowBox[{"-", "\[Infinity]"}],"\[Infinity]"},
             "InactiveIntegrate",
             DisplayFunction->(RowBox[{
                SubsuperscriptBox[
                 StyleBox["\[Integral]", "Inactive"], #3, #4], 
                RowBox[{
                  SubsuperscriptBox[
                   StyleBox["\[Integral]", "Inactive"], #6, #7], 
                  RowBox[{#, 
                    RowBox[{
                    StyleBox["\[DifferentialD]", "Inactive"], #5}], 
                    RowBox[{
                    StyleBox["\[DifferentialD]", "Inactive"], #2}]}]}]}]& ),
             InterpretationFunction->(RowBox[{
                RowBox[{"Inactive", "[", "Integrate", "]"}], "[", 
                RowBox[{#, ",", 
                  RowBox[{"{", 
                    RowBox[{#2, ",", #3, ",", #4}], "}"}], ",", 
                  RowBox[{"{", 
                    RowBox[{#5, ",", #6, ",", #7}], "}"}]}], "]"}]& )]},
           {
            StyleBox["\<\"e[56]\"\>",
             StripOnInput->False,
             LineColor->RGBColor[0, 
               Rational[2, 3], 0],
             FrontFaceColor->RGBColor[0, 
               Rational[2, 3], 0],
             BackFaceColor->RGBColor[0, 
               Rational[2, 3], 0],
             GraphicsColor->RGBColor[0, 
               Rational[2, 3], 0],
             FontFamily->"Helvetica",
             FontColor->RGBColor[0, 
               Rational[2, 3], 0]]}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            RGBColor[0.7, 0, 1, 1], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {{Left}}},
          GridBoxDividers->{"Columns" -> {True}, "Rows" -> {False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"], "[", 
        StyleBox["\<\"probability of this transition \\!\\(\\*SuperscriptBox[\
\\(Amplitude\\), \\(2\\)]\\)\"\>",
         StripOnInput->False,
         LineColor->RGBColor[0, 
           Rational[2, 3], 0],
         FrontFaceColor->RGBColor[0, 
           Rational[2, 3], 0],
         BackFaceColor->RGBColor[0, 
           Rational[2, 3], 0],
         GraphicsColor->RGBColor[0, 
           Rational[2, 3], 0],
         FontFamily->"Helvetica",
         FontColor->RGBColor[0, 
           Rational[2, 3], 0]], "]"}]}
     },
     AutoDelete->False,
     FrameStyle->Directive[
       RGBColor[0.7, 0, 1, 1], 
       Thickness[Tiny]],
     GridBoxAlignment->{"Columns" -> {{Left}}},
     GridBoxDividers->{"Columns" -> {True}, "Rows" -> {False}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
    "Grid"]}],
  SequenceForm[
   Style["Notion of particle is observer dependent where observer has Unruh \
detector in some energy state that can interact with scalar field \[Phi].  A \
coordinate invariant temperature model is ", 
    RGBColor[0.7, 0, 1, 1], Larger], 
   Grid[{{
      Grid[{{$CellContext`detector -> $CellContext`g[
            Style["coupling", 
             RGBColor[0, 
              Rational[2, 3], 0], FontFamily -> "Helvetica"]] 
          Inactive[Integrate][
            Dot[
             $CellContext`m[$CellContext`\[Tau]][
              Style["operator on internal states", 
               RGBColor[0, 
                Rational[2, 3], 0], FontFamily -> "Helvetica"]], 
             $CellContext`\[Phi][
              $CellContext`x[$CellContext`\[Tau]][
               Style["world line", 
                RGBColor[0, 
                 Rational[2, 3], 0], FontFamily -> "Helvetica"]]][
              Style["scalar field", 
               RGBColor[0, 
                Rational[2, 3], 0], FontFamily -> 
               "Helvetica"]]], {$CellContext`\[Tau], 
             DirectedInfinity[-1], 
             DirectedInfinity[1]}]}, {
         $CellContext`\[Tau][
          Style["observer's world line", 
           RGBColor[0, 
            Rational[2, 3], 0], FontFamily -> "Helvetica"]]}}, 
       Dividers -> {{True}, {False}}, FrameStyle -> Directive[
         RGBColor[0.7, 0, 1, 1], 
         Thickness[Tiny]], Alignment -> Left][
       Style["Unruh detector", 
        RGBColor[0, 
         Rational[2, 3], 0], FontFamily -> "Helvetica"]]}, {
      Grid[{{Dot[$CellContext`H, 
           Ket[
            $CellContext`Tensor[
             Style["E", Italic], {$CellContext`Void}, {$CellContext`j}]]] -> 
         Dot[
           $CellContext`Tensor[
            Style["E", Italic], {$CellContext`Void}, {$CellContext`j}], 
           Ket[
            $CellContext`Tensor[
             Style["E", Italic], {$CellContext`Void}, {$CellContext`j}]]]}}, 
       Dividers -> {{True}, {False}}, FrameStyle -> Directive[
         RGBColor[0.7, 0, 1, 1], 
         Thickness[Tiny]], Alignment -> Left][
       Style["Hamiltonian of detector", 
        RGBColor[0, 
         Rational[2, 3], 0], FontFamily -> "Helvetica"]]}, {
      Grid[{{$CellContext`Tensor[$CellContext`m, {$CellContext`Void, \
$CellContext`Void}, {$CellContext`i, $CellContext`j}] -> Dot[
           Bra[
            $CellContext`Tensor[
             Style["E", Italic], {$CellContext`Void}, {$CellContext`i}]], 
           $CellContext`m[0], 
           Ket[
            $CellContext`Tensor[
             Style["E", Italic], {$CellContext`Void}, {$CellContext`j}]]]}}, 
       Dividers -> {{True}, {False}}, FrameStyle -> Directive[
         RGBColor[0.7, 0, 1, 1], 
         Thickness[Tiny]], Alignment -> Left][
       Style["matrix rep of m[\[Tau]]", 
        RGBColor[0, 
         Rational[2, 3], 0], FontFamily -> "Helvetica"]]}, {
      Grid[{{
         Framed[$CellContext`g Inactive[Integrate][
            Dot[
             Bra[
              Subscript[$CellContext`\[Beta], $CellContext`\[Phi]], 
              $CellContext`Tensor[
               Style["E", Italic], {$CellContext`Void}, {$CellContext`i}]], 
             $CellContext`m[$CellContext`\[Tau]], 
             $CellContext`\[Phi][
              $CellContext`x[$CellContext`\[Tau]]], 
             Ket[
              Subscript[0, $CellContext`\[Phi]], 
              $CellContext`Tensor[
               Style[
               "E", Italic], {$CellContext`Void}, {$CellContext`j}]]], \
{$CellContext`\[Tau], 
             DirectedInfinity[-1], 
             DirectedInfinity[1]}]]}, {
         {$CellContext`m[$CellContext`\[Tau]] -> 
          Dot[E^(Complex[0, 1] $CellContext`H $CellContext`\[Tau]), 
            $CellContext`m[0], 
            E^(Complex[0, -1] $CellContext`H $CellContext`\[Tau])]}[
          Style["time evolution", 
           RGBColor[0, 
            Rational[2, 3], 0], FontFamily -> "Helvetica"]]}, {$CellContext`g 
         Inactive[Integrate][
           Dot[
            Bra[
             Subscript[$CellContext`\[Beta], $CellContext`\[Phi]], 
             $CellContext`Tensor[
              Style["E", Italic], {$CellContext`Void}, {$CellContext`i}]], 
            E^(Complex[0, 1] $CellContext`H $CellContext`\[Tau]), 
            $CellContext`m[0], 
            E^(Complex[0, -1] $CellContext`H $CellContext`\[Tau]), 
            $CellContext`\[Phi][
             $CellContext`x[$CellContext`\[Tau]]], 
            Ket[
             Subscript[0, $CellContext`\[Phi]], 
             $CellContext`Tensor[
              Style[
              "E", Italic], {$CellContext`Void}, {$CellContext`j}]]], \
{$CellContext`\[Tau], 
            DirectedInfinity[-1], 
            DirectedInfinity[1]}]}, {$CellContext`g Inactive[Integrate][
           Dot[
            Bra[
             Subscript[$CellContext`\[Beta], $CellContext`\[Phi]]], 
            Bra[
             $CellContext`Tensor[
              Style["E", Italic], {$CellContext`Void}, {$CellContext`i}]], 
            E^(Complex[0, 1] $CellContext`H $CellContext`\[Tau]), 
            $CellContext`m[0], 
            E^(Complex[0, -1] $CellContext`H $CellContext`\[Tau]), 
            Ket[
             $CellContext`Tensor[
              Style["E", Italic], {$CellContext`Void}, {$CellContext`j}]], 
            $CellContext`\[Phi][
             $CellContext`x[$CellContext`\[Tau]]], 
            Ket[
             Subscript[0, $CellContext`\[Phi]]]], {$CellContext`\[Tau], 
            DirectedInfinity[-1], 
            DirectedInfinity[1]}]}, {$CellContext`g 
         Inactive[Integrate][
          E^(Complex[0, 1] $CellContext`\[Tau] ($CellContext`Tensor[
                Style[
                "E", Italic], {$CellContext`Void}, {$CellContext`i}] - \
$CellContext`Tensor[
               Style["E", Italic], {$CellContext`Void}, {$CellContext`j}])) 
           Dot[
             Bra[
              Subscript[$CellContext`\[Beta], $CellContext`\[Phi]]], 
             $CellContext`\[Phi][
              $CellContext`x[$CellContext`\[Tau]]], 
             Ket[
              Subscript[
              0, $CellContext`\[Phi]]]] $CellContext`Tensor[$CellContext`m, \
{$CellContext`Void, $CellContext`Void}, {$CellContext`i, $CellContext`j}], \
{$CellContext`\[Tau], 
            DirectedInfinity[-1], 
            DirectedInfinity[1]}]}}, Dividers -> {{True}, {False}}, 
       FrameStyle -> Directive[
         RGBColor[0.7, 0, 1, 1], 
         Thickness[Tiny]], Alignment -> Left][
       Style["transition amplitude ", 
        RGBColor[0, 
         Rational[2, 3], 0], FontFamily -> "Helvetica"], 
       Style[
        LongRightArrow[
         Ket[
          Subscript[0, $CellContext`\[Phi]], 
          $CellContext`Tensor[
           Style["E", Italic], {$CellContext`Void}, {$CellContext`i}]], 
         Ket[
          Subscript[$CellContext`\[Beta], $CellContext`\[Phi]], 
          $CellContext`Tensor[
           Style["E", Italic], {$CellContext`Void}, {$CellContext`j}]]], 
        RGBColor[0, 
         Rational[2, 3], 0], FontFamily -> "Helvetica"]]}, {
      Grid[{{
         Dot[ConjugateTranspose[$CellContext`g] ConjugateTranspose[
            Inactive[Integrate][
            E^(Complex[0, 1] $CellContext`\[Tau]1 ($CellContext`Tensor[
                  Style[
                  "E", Italic], {$CellContext`Void}, {$CellContext`i1}] - \
$CellContext`Tensor[
                 Style["E", Italic], {$CellContext`Void}, {$CellContext`j1}]))
                Dot[
               Bra[
                Subscript[$CellContext`\[Beta], $CellContext`\[Phi]]], 
               $CellContext`\[Phi][
                $CellContext`x[$CellContext`\[Tau]1]], 
               Ket[
                Subscript[
                0, $CellContext`\[Phi]]]] $CellContext`Tensor[$CellContext`m, \
{$CellContext`Void, $CellContext`Void}, {$CellContext`i1, $CellContext`j1}], \
{$CellContext`\[Tau]1, 
              DirectedInfinity[-1], 
              DirectedInfinity[1]}]], $CellContext`g 
          Inactive[Integrate][
           E^(Complex[0, 1] $CellContext`\[Tau] ($CellContext`Tensor[
                 Style[
                 "E", Italic], {$CellContext`Void}, {$CellContext`i}] - \
$CellContext`Tensor[
                Style["E", Italic], {$CellContext`Void}, {$CellContext`j}])) 
            Dot[
              Bra[
               Subscript[$CellContext`\[Beta], $CellContext`\[Phi]]], 
              $CellContext`\[Phi][
               $CellContext`x[$CellContext`\[Tau]]], 
              Ket[
               Subscript[
               0, $CellContext`\[Phi]]]] $CellContext`Tensor[$CellContext`m, \
{$CellContext`Void, $CellContext`Void}, {$CellContext`i, $CellContext`j}], \
{$CellContext`\[Tau], 
             DirectedInfinity[-1], 
             DirectedInfinity[1]}]]}, {
         Inactive[Integrate][
         E^(Complex[0, 1] $CellContext`\[Tau] ($CellContext`Tensor[
                Style[
                "E", Italic], {$CellContext`Void}, {$CellContext`i}] - \
$CellContext`Tensor[
               Style["E", Italic], {$CellContext`Void}, {$CellContext`j}]) + 
            Complex[0, -1] $CellContext`\[Tau]1 ($CellContext`Tensor[
                Style[
                "E", Italic], {$CellContext`Void}, {$CellContext`i1}] - \
$CellContext`Tensor[
               Style[
               "E", Italic], {$CellContext`Void}, {$CellContext`j1}])) \
$CellContext`g^2 ConjugateTranspose[
            $CellContext`Tensor[$CellContext`m, {$CellContext`Void, \
$CellContext`Void}, {$CellContext`i1, $CellContext`j1}]] Dot[
            Bra[
             Subscript[0, $CellContext`\[Phi]]], 
            ConjugateTranspose[
             $CellContext`\[Phi][
              $CellContext`x[$CellContext`\[Tau]1]]], 
            Ket[
             Subscript[$CellContext`\[Beta], $CellContext`\[Phi]]], 
            Bra[
             Subscript[$CellContext`\[Beta], $CellContext`\[Phi]]], 
            $CellContext`\[Phi][
             $CellContext`x[$CellContext`\[Tau]]], 
            Ket[
             Subscript[
             0, $CellContext`\[Phi]]]] $CellContext`Tensor[$CellContext`m, \
{$CellContext`Void, $CellContext`Void}, {$CellContext`i, $CellContext`j}], \
{$CellContext`\[Tau], 
           DirectedInfinity[-1], 
           DirectedInfinity[1]}, {$CellContext`\[Tau]1, 
           DirectedInfinity[-1], 
           DirectedInfinity[1]}]}, {
         {{Dot[
             Ket[
              Subscript[$CellContext`\[Beta], $CellContext`\[Phi]]], 
             Bra[
              Subscript[$CellContext`\[Beta], $CellContext`\[Phi]]]] -> 1, 
           {Dot[
              Bra[
               Subscript[0, $CellContext`\[Phi]]], 
              ConjugateTranspose[
               $CellContext`\[Phi][
                Pattern[$CellContext`x1, 
                 Blank[]]]], 
              $CellContext`\[Phi][
               Pattern[$CellContext`x2, 
                Blank[]]], 
              Ket[
               Subscript[
               0, $CellContext`\[Phi]]]] -> $CellContext`G[$CellContext`x1, \
$CellContext`x2]}[
            Style["Green's function", 
             RGBColor[0, 
              Rational[2, 3], 0], FontFamily -> 
             "Helvetica"]], $CellContext`j1 -> $CellContext`j, \
$CellContext`i1 -> $CellContext`i}}[
          Style[
          "Sum over all \[Beta] states, G defined, between 2 detector states", 
           RGBColor[0, 
            Rational[2, 3], 0], FontFamily -> "Helvetica"]]}, {
         Inactive[Integrate][
         E^(Complex[
             0, 1] ($CellContext`\[Tau] - $CellContext`\[Tau]1) \
($CellContext`Tensor[
               Style[
               "E", Italic], {$CellContext`Void}, {$CellContext`i}] - \
$CellContext`Tensor[
              Style[
              "E", Italic], {$CellContext`Void}, {$CellContext`j}])) \
$CellContext`g^2 ConjugateTranspose[
            $CellContext`Tensor[$CellContext`m, {$CellContext`Void, \
$CellContext`Void}, {$CellContext`i, $CellContext`j}]] $CellContext`G[
            $CellContext`x[$CellContext`\[Tau]1], 
            $CellContext`x[$CellContext`\[Tau]]] \
$CellContext`Tensor[$CellContext`m, {$CellContext`Void, $CellContext`Void}, \
{$CellContext`i, $CellContext`j}], {$CellContext`\[Tau], 
           DirectedInfinity[-1], 
           DirectedInfinity[1]}, {$CellContext`\[Tau]1, 
           DirectedInfinity[-1], 
           DirectedInfinity[1]}]}, {
         Style["e[56]", 
          RGBColor[0, 
           Rational[2, 3], 0], FontFamily -> "Helvetica"]}}, 
       Dividers -> {{True}, {False}}, FrameStyle -> Directive[
         RGBColor[0.7, 0, 1, 1], 
         Thickness[Tiny]], Alignment -> Left][
       Style[
       "probability of this transition \!\(\*SuperscriptBox[\(Amplitude\), \
\(2\)]\)", 
        RGBColor[0, 
         Rational[2, 3], 0], FontFamily -> "Helvetica"]]}}, 
    Dividers -> {{True}, {False}}, FrameStyle -> Directive[
      RGBColor[0.7, 0, 1, 1], 
      Thickness[Tiny]], Alignment -> Left]],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.806759029251924*^9, {3.80675907996889*^9, 3.8067591045323687`*^9}, {
   3.8067591547885313`*^9, 3.8067591829392643`*^9}, {3.80675921903474*^9, 
   3.806759232205552*^9}, 3.806759264793088*^9, 3.806759299070888*^9, 
   3.806759468836504*^9, {3.806759558624374*^9, 3.806759574265209*^9}, 
   3.80675964080193*^9, {3.806759928299293*^9, 3.806759943171523*^9}, 
   3.806760005475183*^9, {3.806760072036496*^9, 3.806760098572447*^9}, 
   3.806760150440693*^9, 3.806760180517479*^9, {3.8067608282891617`*^9, 
   3.806760850174881*^9}, 3.806760890934688*^9, 3.808052937640191*^9, 
   3.808053387422076*^9, 3.8080534656117163`*^9, 
   3.808053540590263*^9},ExpressionUUID->"db857cd8-f0da-467c-9cdd-\
b259b18cb7d3"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"PR", "[", 
   RowBox[{
   "\"\<As was state near e[35] the Green's function, G[X,Y] is only a \
function of the geodesic distance between X,Y. \>\"", ",", 
    RowBox[{"e", "[", "35", "]"}]}], "\[IndentingNewLine]", "]"}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.808053880761547*^9, 3.808053884471882*^9}, {
  3.8080542667388897`*^9, 3.808054335456705*^9}, {3.808054776898169*^9, 
  3.808054778087739*^9}},ExpressionUUID->"64307c1e-428d-413b-9869-\
426cb2cee2ce"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   StyleBox["\<\"As was state near e[35] the Green's function, G[X,Y] is only \
a function of the geodesic distance between X,Y. \"\>",
    StripOnInput->False,
    LineColor->RGBColor[0.7, 0, 1],
    LineOpacity->1,
    FrontFaceColor->RGBColor[0.7, 0, 1],
    BackFaceColor->RGBColor[0.7, 0, 1],
    FrontFaceOpacity->1,
    BackFaceOpacity->1,
    GraphicsColor->RGBColor[0.7, 0, 1],
    Opacity->1,
    FontSize->Larger,
    FontColor->RGBColor[0.7, 0, 1],
    FontOpacity->1], "\[InvisibleSpace]", 
   RowBox[{
    RowBox[{"G", "[", 
     RowBox[{"X", ",", "Y"}], "]"}], "\[Rule]", 
    InterpretationBox[
     RowBox[{
      StyleBox["\[LeftAngleBracket]",
       FontWeight->Bold], "0", 
      StyleBox["|",
       FontWeight->Bold], 
      RowBox[{
       RowBox[{"\[Phi]", "[", "X", "]"}], ".", 
       RowBox[{"\[Phi]", "[", "Y", "]"}]}], 
      StyleBox["|",
       FontWeight->Bold], "0", 
      StyleBox["\[RightAngleBracket]",
       FontWeight->Bold]}],
     BraKet[0, 
      Dot[
       $CellContext`\[Phi][$CellContext`X], 
       $CellContext`\[Phi][$CellContext`Y]], 0],
     Editable->False,
     SyntaxForm->Automatic]}]}],
  SequenceForm[
   Style["As was state near e[35] the Green's function, G[X,Y] is only a \
function of the geodesic distance between X,Y. ", 
    RGBColor[0.7, 0, 1, 1], 
    Larger], $CellContext`G[$CellContext`X, $CellContext`Y] -> BraKet[0, 
     Dot[
      $CellContext`\[Phi][$CellContext`X], 
      $CellContext`\[Phi][$CellContext`Y]], 0]],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.808054779100314*^9},ExpressionUUID->"2887cfd1-978e-44bd-858b-\
996fab1cc1e1"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"tuDExpandFvI", "[", 
    RowBox[{
     RowBox[{"ops_:", "tuDerivOps"}], ",", 
     RowBox[{"constants_List:", 
      RowBox[{"{", "}"}]}], ",", 
     RowBox[{"fnc_:", 
      RowBox[{"(", 
       RowBox[{
       "BraKet", "|", "Times", "|", "dotOps", "|", "Wedge", "|", 
        "CircleTimes"}], ")"}]}]}], "]"}], "[", "exp_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"tuOpIndependentVar", "[", 
     RowBox[{"tuDExpandF", ",", 
      RowBox[{
       RowBox[{"op$", "[", 
        RowBox[{"ops", ",", "constants", ",", "fnc"}], "]"}], "[", "exp", 
       "]"}]}], "]"}]}], "\[IndentingNewLine]", 
   "]"}]}], "\[IndentingNewLine]", "tuDerivOps", "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"tuDPartialu", "[", 
   RowBox[{
    RowBox[{"a", " ", "b"}], ",", 
    SubscriptBox["U", "c"]}], "]"}], "//", 
  RowBox[{"tuDExpandFvI", "[", "]"}]}]}], "Input",
 CellChangeTimes->{{3.808136491703899*^9, 3.8081365409634247`*^9}, {
  3.8081366018612537`*^9, 3.808136607110546*^9}, {3.808136702699172*^9, 
  3.808136702764974*^9}, {3.8081368820759087`*^9, 3.808136950407784*^9}, {
  3.808137066127618*^9, 3.808137136925943*^9}, {3.8081372306546497`*^9, 
  3.808137235375164*^9}},ExpressionUUID->"9967f9b2-5c47-4461-b030-\
2ecd9e63cf57"],

Cell[BoxData[
 RowBox[{"tuDPartial", "|", "tuDCovariant", "|", 
  RowBox[{"tuDs", "[", "_", "]"}], "|", 
  RowBox[{"tuDDown", "[", "_", "]"}], "|", "tuDPartialu", "|", 
  "tuDCovariantu", "|", 
  RowBox[{"tuDsu", "[", "_", "]"}], "|", 
  RowBox[{"tuDUp", "[", "_", "]"}], "|", "tuDLie"}]], "Output",
 CellChangeTimes->{
  3.808136506224224*^9, 3.808136608006708*^9, 3.808136703794094*^9, {
   3.808136908917663*^9, 3.8081369516206284`*^9}, {3.808137078239723*^9, 
   3.808137100558811*^9}, 3.808137138017084*^9, 3.808137236225892*^9, 
   3.808137515018297*^9},ExpressionUUID->"7dbade57-634e-4244-ae04-\
21b2e13d219f"],

Cell[BoxData[
 RowBox[{
  RowBox[{"b", " ", 
   InterpretationBox[
    RowBox[{
     TemplateBox[{
      UnderscriptBox["\"\[PartialD]\"", "_"],SubscriptBox["U", "c"]},
      "Superscript"], "[", "a", "]"}],
    $CellContext`tuDUp["\[PartialD]"][$CellContext`a, 
     Subscript[$CellContext`U, $CellContext`c]],
    Editable->False,
    SyntaxForm->Automatic]}], "+", 
  RowBox[{"a", " ", 
   InterpretationBox[
    RowBox[{
     TemplateBox[{
      UnderscriptBox["\"\[PartialD]\"", "_"],SubscriptBox["U", "c"]},
      "Superscript"], "[", "b", "]"}],
    $CellContext`tuDUp["\[PartialD]"][$CellContext`b, 
     Subscript[$CellContext`U, $CellContext`c]],
    Editable->False,
    SyntaxForm->Automatic]}]}]], "Output",
 CellChangeTimes->{
  3.808136506224224*^9, 3.808136608006708*^9, 3.808136703794094*^9, {
   3.808136908917663*^9, 3.8081369516206284`*^9}, {3.808137078239723*^9, 
   3.808137100558811*^9}, 3.808137138017084*^9, 3.808137236225892*^9, 
   3.808137515105144*^9},ExpressionUUID->"8beff455-2600-4026-a71f-\
4b6fd22b60d7"]
}, Open  ]]
}, Open  ]]
},
WindowSize->{808, 655},
WindowMargins->{{16, Automatic}, {Automatic, 50}},
FrontEndVersion->"11.2 for Mac OS X x86 (32-bit, 64-bit Kernel) (September \
10, 2017)",
StyleDefinitions->"tuTensorialStyle.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 1362, 23, 105, "Input",ExpressionUUID->"882ea1d0-4886-4f7a-9b0a-20e0867f772c",
 InitializationCell->True],
Cell[1945, 47, 381, 6, 26, "Output",ExpressionUUID->"f8c593b0-a6b0-4c4a-8baf-1fa7f72b112f"],
Cell[2329, 55, 453, 9, 34, "Output",ExpressionUUID->"0c3be116-536b-4df0-b16f-5885e818c93e"],
Cell[2785, 66, 525, 13, 26, "Output",ExpressionUUID->"6fae3a78-7691-4b43-bc61-be9851915246"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3347, 84, 190, 3, 47, "Subsection",ExpressionUUID->"03545561-06e1-4082-ae30-7ce779402bbe"],
Cell[CellGroupData[{
Cell[3562, 91, 166, 3, 42, "Subsubsection",ExpressionUUID->"482a70d5-a698-4342-a7da-3e635b61612a"],
Cell[CellGroupData[{
Cell[3753, 98, 5025, 110, 194, "Input",ExpressionUUID->"8cd6d54b-b601-4dce-a85a-f9468b66fd96"],
Cell[8781, 210, 12895, 333, 191, "Print",ExpressionUUID->"69fc38e8-d6f6-43d4-a57c-2b7d4f15eb50"]
}, Open  ]],
Cell[CellGroupData[{
Cell[21713, 548, 8985, 198, 363, "Input",ExpressionUUID->"53761e2e-74ba-433c-826a-85328fee57aa"],
Cell[30701, 748, 46408, 1095, 428, "Print",ExpressionUUID->"ee2cbc4c-43c4-42bf-91e4-9a013aae934b"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[77170, 1850, 189, 3, 47, "Subsection",ExpressionUUID->"cecf9368-a35c-4c89-8a97-b940662907bd"],
Cell[CellGroupData[{
Cell[77384, 1857, 181, 3, 42, "Subsubsection",ExpressionUUID->"0b3f5c8c-007b-49ae-901e-7619e6e94e10"],
Cell[CellGroupData[{
Cell[77590, 1864, 8770, 207, 402, "Input",ExpressionUUID->"b993975b-980c-467c-9bf6-f910246009d2"],
Cell[86363, 2073, 17230, 448, 390, "Print",ExpressionUUID->"56a8e3fc-788e-4c58-bd91-222d9fa4a828"]
}, Open  ]],
Cell[CellGroupData[{
Cell[103630, 2526, 905, 19, 90, "Input",ExpressionUUID->"da42148b-e5c8-48be-8ad3-48507f565c85"],
Cell[104538, 2547, 5426, 152, 148, "Print",ExpressionUUID->"1da91ba0-5e07-490b-9cd0-937899ba51a6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[110001, 2704, 5748, 142, 353, "Input",ExpressionUUID->"af7b00a1-6b04-49c2-ae35-e1727aa475a8"],
Cell[115752, 2848, 21273, 586, 362, "Print",ExpressionUUID->"0d01f5d6-f2c5-4834-ae79-f33f19f39d2c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[137062, 3439, 6170, 145, 378, "Input",ExpressionUUID->"c8a72f8a-51df-4fb8-9df4-eec071247409"],
Cell[143235, 3586, 25731, 700, 545, "Print",ExpressionUUID->"848d7a2f-60fb-41ce-bcf4-b52d3f636de3"]
}, Open  ]],
Cell[CellGroupData[{
Cell[169003, 4291, 1348, 36, 154, "Input",ExpressionUUID->"dec46523-4022-4a3e-909c-c60ca319bd1f"],
Cell[170354, 4329, 11097, 323, 310, "Print",ExpressionUUID->"2e033615-7c42-478d-bee8-191880d63065"]
}, Open  ]],
Cell[CellGroupData[{
Cell[181488, 4657, 3583, 81, 218, "Input",ExpressionUUID->"178326f8-7d7b-490b-bc95-4a78bc14796d"],
Cell[185074, 4740, 7314, 218, 187, "Print",ExpressionUUID->"3c9912a2-47c2-4c23-809b-4a40fae2b1fb"],
Cell[192391, 4960, 835, 26, 44, "Output",ExpressionUUID->"0c0eda18-9fd4-4091-bd0e-ab6aec000f31"],
Cell[193229, 4988, 326165, 5332, 339, 248507, 4058, "CachedBoxData", "BoxData", "Output",ExpressionUUID->"405ed4a0-2310-4832-88f1-7b791ed579a6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[519431, 10325, 2156, 32, 106, "Input",ExpressionUUID->"d57b48f7-aac4-427a-bb37-aa15b793d43e"],
Cell[521590, 10359, 3205, 69, 108, "Print",ExpressionUUID->"23cbf0f3-9339-4fb0-be1b-e3cbda74ea2d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[524832, 10433, 863, 22, 74, "Input",ExpressionUUID->"85c1ffb1-e561-4345-88b0-1711242aea9e"],
Cell[525698, 10457, 758, 25, 59, "Output",ExpressionUUID->"36c2daa6-c12a-4ec7-9358-4e3fc221fd84"],
Cell[526459, 10484, 1055, 33, 59, "Output",ExpressionUUID->"49388eea-6c18-40ae-9dc0-266b6cea37df"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[527575, 10524, 165, 3, 47, "Subsection",ExpressionUUID->"a68a0d0c-3fea-4793-9e91-6a05bf2ee0dc"],
Cell[CellGroupData[{
Cell[527765, 10531, 16203, 362, 864, "Input",ExpressionUUID->"496a75ff-d74e-4f1a-bb70-9c4597c2a365"],
Cell[543971, 10895, 70249, 1595, 527, "Print",ExpressionUUID->"db857cd8-f0da-467c-9cdd-b259b18cb7d3"]
}, Open  ]],
Cell[CellGroupData[{
Cell[614257, 12495, 500, 11, 90, "Input",ExpressionUUID->"64307c1e-428d-413b-9869-426cb2cee2ce"],
Cell[614760, 12508, 1669, 50, 59, "Print",ExpressionUUID->"2887cfd1-978e-44bd-858b-996fab1cc1e1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[616466, 12563, 1347, 34, 123, "Input",ExpressionUUID->"9967f9b2-5c47-4461-b030-2ecd9e63cf57"],
Cell[617816, 12599, 617, 12, 44, "Output",ExpressionUUID->"7dbade57-634e-4244-ae04-21b2e13d219f"],
Cell[618436, 12613, 1038, 27, 29, "Output",ExpressionUUID->"8beff455-2600-4026-a71f-4b6fd22b60d7"]
}, Open  ]]
}, Open  ]]
}
]
*)

