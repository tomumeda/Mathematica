(************** Content-type: application/mathematica **************
                     CreatedBy='Mathematica 5.2'

                    Mathematica-Compatible Notebook

This notebook can be used with any Mathematica-compatible
application, such as Mathematica, MathReader or Publicon. The data
for the notebook starts with the line containing stars above.

To get the notebook into a Mathematica-compatible application, do
one of the following:

* Save the data starting with the line of stars above into a file
  with a name ending in .nb, then open the file inside the
  application;

* Copy the data starting with the line of stars above to the
  clipboard, then use the Paste menu command inside the application.

Data for notebooks contains only printable 7-bit ASCII and can be
sent directly in email or through ftp in text mode.  Newlines can be
CR, LF or CRLF (Unix, Macintosh or MS-DOS style).

NOTE: If you modify the data for this notebook not in a Mathematica-
compatible application, you must delete the line below containing
the word CacheID, otherwise Mathematica-compatible applications may
try to use invalid cache data.

For more information on notebooks and Mathematica-compatible 
applications, contact Wolfram Research:
  web: http://www.wolfram.com
  email: info@wolfram.com
  phone: +1-217-398-0700 (U.S.)

Notebook reader applications are available free of charge from 
Wolfram Research.
*******************************************************************)

(*CacheID: 232*)


(*NotebookFileLineBreakTest
NotebookFileLineBreakTest*)
(*NotebookOptionsPosition[     11371,        393]*)
(*NotebookOutlinePosition[     12394,        429]*)
(*  CellTagsIndexPosition[     12319,        423]*)
(*WindowFrame->Normal*)



Notebook[{

Cell[CellGroupData[{
Cell["NewIndexChangePatterns", "ObjectName",
  CellTags->"Function?"],

Cell[TextData[{
  "\[FilledSmallSquare] ",
  Cell[BoxData[
      StyleBox[
        RowBox[{"New", 
          StyleBox["IndexChangePatterns",
            "MR"]}]]]],
  " is used to specify novel structures that contain indices. These are \
appended to built-in index pattern specifications."
}], "Usage",
  CellTags->"Function?"],

Cell["\<\
 The index change pattern specifications inform Tensorial on how to determine \
actual index locations in expressions. Only certain type of expressions \
contain indices. Tensorial knows how to find indices in Tensor and the \
various Tensorial  derivative expressions. However, users may wish to \
introduce new expressions that contain indices. The NewIndexChangePatterns \
then instruct Tensorial how to find indices in these new expressions.\
\>", "MathCaption"],

Cell[TextData[{
  " The usage should be ",
  Cell[BoxData[
      \(AppendTo[NewIndexChangePatterns, \ newpattern]\)]],
  " to add a single new pattern.."
}], "MathCaption"],

Cell["\<\
 An index change pattern has three parts.
1) The number of levels to be dropped from the end of an index Postion to \
obtain the expression containing the index.
2) A list that gives the pattern the dropped levels must match.
3) A pattern that the expression containing the index must match.\
\>", "MathCaption"],

Cell[TextData[{
  "See also: ",
  ButtonBox["IndexChange",
    ButtonData:>{"IndexChange"},
    ButtonStyle->"AddOnsLink"],
  ", ",
  ButtonBox["IndexParsingRules",
    ButtonData:>{"IndexParsingRules"},
    ButtonStyle->"AddOnsLink"],
  "."
}], "MathCaption"],

Cell[CellGroupData[{

Cell["Examples", "ExampleSection"],

Cell[BoxData[
    \(Needs["\<TensorCalculus4`Tensorial`\>"]\)], "Input",
  CellLabel->"In[1]:="],

Cell[BoxData[
    \(\(oldpatterns = IndexChangePatterns;\)\)], "Input",
  CellLabel->"In[2]:="],

Cell[BoxData[
    \(DefineTensorShortcuts[{{v}, 1}]\)], "Input",
  CellLabel->"In[3]:="],

Cell[TextData[{
  "Suppose we have a new type of tensor derivative called ",
  Cell[BoxData[
      \(NewD\)]],
  " that takes the forms"
}], "Text"],

Cell[BoxData[{
    \(\(NewD[texpr_, index_];\)\), "\[IndentingNewLine]", 
    \(\(NewD[texpr_, {index__}];\)\)}], "Input",
  CellLabel->"In[4]:="],

Cell[TextData[{
  "Here is an expression involving ",
  Cell[BoxData[
      \(NewD\)]],
  ". Tensorial knows how to change the index in the tensor but does not know \
how to change the differentiation index."
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[{
    \(NewD[vu[a], i]\), "\[IndentingNewLine]", 
    \(% // IndexChange[{{a, b}, {i, k}}]\)}], "Input",
  CellLabel->"In[6]:="],

Cell[BoxData[
    RowBox[{"NewD", "[", 
      RowBox[{
        InterpretationBox[
          SubsuperscriptBox["v", 
            TagBox[
              StyleBox["a",
                ShowContents->False],
              (StyleForm[ #, ShowContents -> False]&)], "a"],
          Tensor[ v, {a}, {Void}],
          Editable->False], ",", "i"}], "]"}]], "Output",
  CellLabel->"Out[6]="],

Cell[BoxData[
    RowBox[{"NewD", "[", 
      RowBox[{
        InterpretationBox[
          SubsuperscriptBox["v", 
            TagBox[
              StyleBox["b",
                ShowContents->False],
              (StyleForm[ #, ShowContents -> False]&)], "b"],
          Tensor[ v, {b}, {Void}],
          Editable->False], ",", "i"}], "]"}]], "Output",
  CellLabel->"Out[7]="]
}, Open  ]],

Cell["\<\
For the first form we must drop 1 level in the position to obtain the \
expression.\
\>", "Text"],

Cell[CellGroupData[{

Cell[BoxData[{
    \(Print["\<Expression containing index i\>"]\), "\[IndentingNewLine]", 
    \(expr = NewD[texpr, i]\), "\[IndentingNewLine]", 
    \(Print["\<Position of index in expression\>"]\), "\[IndentingNewLine]", 
    \(pos = Position[expr, i]\), "\[IndentingNewLine]", 
    \(Print["\<We obtain the index containing position by dropping 1 level \
from the position\>"]\), "\[IndentingNewLine]", 
    \(Part[expr, Sequence @@ Drop[First[pos], \(-1\)]]\)}], "Input",
  CellLabel->"In[8]:="],

Cell[BoxData[
    \("Expression containing index i"\)], "Print",
  CellLabel->"From In[8]:="],

Cell[BoxData[
    \(NewD[texpr, i]\)], "Output",
  CellLabel->"Out[9]="],

Cell[BoxData[
    \("Position of index in expression"\)], "Print",
  CellLabel->"From In[8]:="],

Cell[BoxData[
    \({{2}}\)], "Output",
  CellLabel->"Out[11]="],

Cell[BoxData[
    \("We obtain the index containing position by dropping 1 level from the \
position"\)], "Print",
  CellLabel->"From In[8]:="],

Cell[BoxData[
    \(NewD[texpr, i]\)], "Output",
  CellLabel->"Out[13]="]
}, Open  ]],

Cell[TextData[{
  "Furthermore, in this case the positions that were dropped must match the \
pattern ",
  Cell[BoxData[
      \({2}\)]],
  "."
}], "Text"],

Cell["We can do the same thing with a more complicated expression.", "Text"],

Cell[CellGroupData[{

Cell[BoxData[{
    \(Print["\<Expression containing index i\>"]\), "\[IndentingNewLine]", 
    \(expr = x + 3  NewD[texpr, i]\), "\[IndentingNewLine]", 
    \(Print["\<Position of index in expression\>"]\), "\[IndentingNewLine]", 
    \(pos = Position[expr, i]\), "\[IndentingNewLine]", 
    \(Print["\<We obtain the index containing position by dropping 1 level \
from the position\>"]\), "\[IndentingNewLine]", 
    \(Part[expr, Sequence @@ Drop[First[pos], \(-1\)]]\)}], "Input",
  CellLabel->"In[14]:="],

Cell[BoxData[
    \("Expression containing index i"\)], "Print",
  CellLabel->"From In[14]:="],

Cell[BoxData[
    \(x + 3\ NewD[texpr, i]\)], "Output",
  CellLabel->"Out[15]="],

Cell[BoxData[
    \("Position of index in expression"\)], "Print",
  CellLabel->"From In[14]:="],

Cell[BoxData[
    \({{2, 2, 2}}\)], "Output",
  CellLabel->"Out[17]="],

Cell[BoxData[
    \("We obtain the index containing position by dropping 1 level from the \
position"\)], "Print",
  CellLabel->"From In[14]:="],

Cell[BoxData[
    \(NewD[texpr, i]\)], "Output",
  CellLabel->"Out[19]="]
}, Open  ]],

Cell[TextData[{
  "The following is then the index change pattern for the first form of ",
  Cell[BoxData[
      \(NewD\)]],
  "."
}], "Text"],

Cell[BoxData[
    \(\(indexspecs1 = {1, {2}, 
          NewD[_, index_ /; Head[index] =!= List]};\)\)], "Input",
  CellLabel->"In[20]:="],

Cell[TextData[{
  "For the second form of ",
  Cell[BoxData[
      \(NewD\)]],
  ",  where we have a list of differentiation indices we must drop 2 levels \
and the index change pattern is:"
}], "Text"],

Cell[BoxData[
    \(\(indexspecs2 = {2, {2, _}, NewD[_, index_List]};\)\)], "Input",
  CellLabel->"In[21]:="],

Cell[TextData[{
  "We append these to ",
  Cell[BoxData[
      \(NewIndexChangePatterns\)]],
  "."
}], "Text"],

Cell[BoxData[{
    \(\(NewIndexChangePatterns = {};\)\), "\n", 
    \(\(\(AppendTo[NewIndexChangePatterns, #] &\) /@ {indexspecs1, 
          indexspecs2};\)\)}], "Input",
  CellLabel->"In[22]:="],

Cell[CellGroupData[{

Cell[BoxData[
    \(NewIndexChangePatterns\)], "Input",
  CellLabel->"In[24]:="],

Cell[BoxData[
    \({{1, {2}, NewD[_, index_ /; Head[index] =!= List]}, {2, {2, _}, 
        NewD[_, index_List]}}\)], "Output",
  CellLabel->"Out[24]="]
}, Open  ]],

Cell[TextData[{
  "Now, ",
  Cell[BoxData[
      \(IndexChange\)]],
  " knows how to find the differentiation indices in the new indexed \
expressions."
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[{
    \({NewD[vu[a], i], NewD[vu[a], {i, j}]}\), "\[IndentingNewLine]", 
    \(% // IndexChange[{{a, b}, {i, k}}]\)}], "Input",
  CellLabel->"In[25]:="],

Cell[BoxData[
    RowBox[{"{", 
      RowBox[{
        RowBox[{"NewD", "[", 
          RowBox[{
            InterpretationBox[
              SubsuperscriptBox["v", 
                TagBox[
                  StyleBox["a",
                    ShowContents->False],
                  (StyleForm[ #, ShowContents -> False]&)], "a"],
              Tensor[ v, {a}, {Void}],
              Editable->False], ",", "i"}], "]"}], ",", 
        RowBox[{"NewD", "[", 
          RowBox[{
            InterpretationBox[
              SubsuperscriptBox["v", 
                TagBox[
                  StyleBox["a",
                    ShowContents->False],
                  (StyleForm[ #, ShowContents -> False]&)], "a"],
              Tensor[ v, {a}, {Void}],
              Editable->False], ",", \({i, j}\)}], "]"}]}], "}"}]], "Output",
  CellLabel->"Out[25]="],

Cell[BoxData[
    RowBox[{"{", 
      RowBox[{
        RowBox[{"NewD", "[", 
          RowBox[{
            InterpretationBox[
              SubsuperscriptBox["v", 
                TagBox[
                  StyleBox["b",
                    ShowContents->False],
                  (StyleForm[ #, ShowContents -> False]&)], "b"],
              Tensor[ v, {b}, {Void}],
              Editable->False], ",", "k"}], "]"}], ",", 
        RowBox[{"NewD", "[", 
          RowBox[{
            InterpretationBox[
              SubsuperscriptBox["v", 
                TagBox[
                  StyleBox["b",
                    ShowContents->False],
                  (StyleForm[ #, ShowContents -> False]&)], "b"],
              Tensor[ v, {b}, {Void}],
              Editable->False], ",", \({k, j}\)}], "]"}]}], "}"}]], "Output",
  CellLabel->"Out[26]="]
}, Open  ]],

Cell["Restore settings", "Text"],

Cell[BoxData[
    \(\(NewIndexChangePatterns = oldpatterns;\)\)], "Input",
  CellLabel->"In[27]:="],

Cell[BoxData[{
    \(ClearTensorShortcuts[{{v}, 1}]\), "\[IndentingNewLine]", 
    \(Clear[oldpatterns, expr, pos]\)}], "Input",
  CellLabel->"In[28]:="]
}, Open  ]]
}, Open  ]]
},
FrontEndVersion->"5.2 for Microsoft Windows",
ScreenRectangle->{{0, 1680}, {0, 965}},
ScreenStyleEnvironment->"Working",
WindowToolbars->{},
WindowSize->{714, 477},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
ShowSelection->True,
CommonDefaultFormatTypes->{"Output"->StandardForm},
Magnification->1,
StyleDefinitions -> "HelpBrowser.nb"
]

(*******************************************************************
Cached data follows.  If you edit this Notebook file directly, not
using Mathematica, you must remove the line containing CacheID at
the top of  the file.  The cache data will then be recreated when
you save this file from within Mathematica.
*******************************************************************)

(*CellTagsOutline
CellTagsIndex->{
  "Function?"->{
    Cell[1776, 53, 69, 1, 41, "ObjectName",
      CellTags->"Function?"],
    Cell[1848, 56, 328, 10, 50, "Usage",
      CellTags->"Function?"]}
  }
*)

(*CellTagsIndex
CellTagsIndex->{
  {"Function?", 12148, 414}
  }
*)

(*NotebookFileOutline
Notebook[{

Cell[CellGroupData[{
Cell[1776, 53, 69, 1, 41, "ObjectName",
  CellTags->"Function?"],
Cell[1848, 56, 328, 10, 50, "Usage",
  CellTags->"Function?"],
Cell[2179, 68, 476, 7, 92, "MathCaption"],
Cell[2658, 77, 172, 5, 41, "MathCaption"],
Cell[2833, 84, 322, 6, 116, "MathCaption"],
Cell[3158, 92, 260, 10, 41, "MathCaption"],

Cell[CellGroupData[{
Cell[3443, 106, 34, 0, 39, "ExampleSection"],
Cell[3480, 108, 96, 2, 29, "Input"],
Cell[3579, 112, 95, 2, 29, "Input"],
Cell[3677, 116, 88, 2, 29, "Input"],
Cell[3768, 120, 148, 5, 25, "Text"],
Cell[3919, 127, 146, 3, 49, "Input"],
Cell[4068, 132, 220, 6, 42, "Text"],

Cell[CellGroupData[{
Cell[4313, 142, 141, 3, 49, "Input"],
Cell[4457, 147, 380, 11, 27, "Output"],
Cell[4840, 160, 380, 11, 27, "Output"]
}, Open  ]],
Cell[5235, 174, 107, 3, 25, "Text"],

Cell[CellGroupData[{
Cell[5367, 181, 499, 8, 149, "Input"],
Cell[5869, 191, 93, 2, 23, "Print"],
Cell[5965, 195, 72, 2, 27, "Output"],
Cell[6040, 199, 95, 2, 23, "Print"],
Cell[6138, 203, 64, 2, 27, "Output"],
Cell[6205, 207, 143, 3, 23, "Print"],
Cell[6351, 212, 73, 2, 27, "Output"]
}, Open  ]],
Cell[6439, 217, 155, 6, 25, "Text"],
Cell[6597, 225, 76, 0, 25, "Text"],

Cell[CellGroupData[{
Cell[6698, 229, 507, 8, 149, "Input"],
Cell[7208, 239, 94, 2, 23, "Print"],
Cell[7305, 243, 80, 2, 27, "Output"],
Cell[7388, 247, 96, 2, 23, "Print"],
Cell[7487, 251, 70, 2, 27, "Output"],
Cell[7560, 255, 144, 3, 23, "Print"],
Cell[7707, 260, 73, 2, 27, "Output"]
}, Open  ]],
Cell[7795, 265, 142, 5, 25, "Text"],
Cell[7940, 272, 137, 3, 29, "Input"],
Cell[8080, 277, 202, 6, 25, "Text"],
Cell[8285, 285, 109, 2, 29, "Input"],
Cell[8397, 289, 110, 5, 25, "Text"],
Cell[8510, 296, 196, 4, 49, "Input"],

Cell[CellGroupData[{
Cell[8731, 304, 80, 2, 29, "Input"],
Cell[8814, 308, 153, 3, 27, "Output"]
}, Open  ]],
Cell[8982, 314, 164, 6, 25, "Text"],

Cell[CellGroupData[{
Cell[9171, 324, 165, 3, 49, "Input"],
Cell[9339, 329, 848, 23, 27, "Output"],
Cell[10190, 354, 848, 23, 27, "Output"]
}, Open  ]],
Cell[11053, 380, 32, 0, 25, "Text"],
Cell[11088, 382, 99, 2, 29, "Input"],
Cell[11190, 386, 153, 3, 49, "Input"]
}, Open  ]]
}, Open  ]]
}
]
*)



(*******************************************************************
End of Mathematica Notebook file.
*******************************************************************)

