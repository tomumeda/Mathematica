(************** Content-type: application/mathematica **************
                     CreatedBy='Mathematica 5.2'

                    Mathematica-Compatible Notebook

This notebook can be used with any Mathematica-compatible
application, such as Mathematica, MathReader or Publicon. The data
for the notebook starts with the line containing stars above.

To get the notebook into a Mathematica-compatible application, do
one of the following:

* Save the data starting with the line of stars above into a file
  with a name ending in .nb, then open the file inside the
  application;

* Copy the data starting with the line of stars above to the
  clipboard, then use the Paste menu command inside the application.

Data for notebooks contains only printable 7-bit ASCII and can be
sent directly in email or through ftp in text mode.  Newlines can be
CR, LF or CRLF (Unix, Macintosh or MS-DOS style).

NOTE: If you modify the data for this notebook not in a Mathematica-
compatible application, you must delete the line below containing
the word CacheID, otherwise Mathematica-compatible applications may
try to use invalid cache data.

For more information on notebooks and Mathematica-compatible 
applications, contact Wolfram Research:
  web: http://www.wolfram.com
  email: info@wolfram.com
  phone: +1-217-398-0700 (U.S.)

Notebook reader applications are available free of charge from 
Wolfram Research.
*******************************************************************)

(*CacheID: 232*)


(*NotebookFileLineBreakTest
NotebookFileLineBreakTest*)
(*NotebookOptionsPosition[    656036,      16419]*)
(*NotebookOutlinePosition[    704354,      17997]*)
(*  CellTagsIndexPosition[    704270,      17991]*)
(*WindowFrame->Normal*)



Notebook[{
Cell[TextData[Cell[BoxData[GridBox[{
        {
          ButtonBox[
            StyleBox["\[FirstPage]",
              "SR"],
            ButtonFunction:>FrontEndExecute[ {
                FrontEndToken[ 
                  FrontEnd`SelectedNotebook[ ], "ScrollPageFirst"]}],
            ButtonStyle->"SlideHyperlink",
            ButtonNote->"First Slide"], 
          ButtonBox[
            StyleBox["\[LeftPointer]",
              "SR"],
            ButtonFunction:>FrontEndExecute[ {
                FrontEndToken[ 
                  FrontEnd`SelectedNotebook[ ], "ScrollPagePrevious"]}],
            ButtonStyle->"SlideHyperlink",
            ButtonNote->"Previous Slide"], 
          ButtonBox[
            StyleBox["\[RightPointer]",
              "SR"],
            ButtonFunction:>FrontEndExecute[ {
                FrontEndToken[ 
                  FrontEnd`SelectedNotebook[ ], "ScrollPageNext"]}],
            ButtonStyle->"SlideHyperlink",
            ButtonNote->"Next Slide"], 
          ButtonBox[
            StyleBox["\[LastPage]",
              "SR"],
            ButtonFunction:>FrontEndExecute[ {
                FrontEndToken[ 
                  FrontEnd`SelectedNotebook[ ], "ScrollPageLast"]}],
            ButtonStyle->"SlideHyperlink",
            ButtonNote->"Last Slide"], " ", 
          ButtonBox[
            StyleBox[
              RowBox[{
                CounterBox["SlideShowNavigationBar"], \(\(\ \)\(of\)\(\ \)\), 
                
                
                CounterBox["SlideShowNavigationBar", {None, 
                  "SlideShowHeader", -1}]}],
              "SR"],
            ButtonFrame->"None"]}
        }]]]], "SlideShowNavigationBar",
  CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell[TextData[{
  StyleBox["Tensorial",
    FontSlant->"Italic"],
  " 4.0"
}], "Title"],

Cell["\<\
A General Purpose Tensor Calculus Package for:
\t Learning\tTeaching        Research\
\>", "Chaptertitle"],

Cell["Renan Cabrera ,  David Park,  Jean-Fran\[CCedilla]ois Gouyet", \
"Subsubtitle",
  FontSize->12],

Cell[TextData[{
  "Features:\n\[FilledSmallCircle] Complete freedom in choosing tensor \
labels, indices and base indices.\n\[FilledSmallCircle] Flavored (colored or \
annotated) indices for various coordinate systems.\n\[FilledSmallCircle] \
Differently flavored indices may have different dimensions and base index \
sets.\n\[FilledSmallCircle] Minimum keystroke tensor input and formatted \
output that can be copied and pasted.\n\[FilledSmallCircle] Detailed set of \
index manipulation routines.\n\[FilledSmallCircle] Easy routines for setting \
tensor values or rules and expanding tensor sums and arrays.\n\
\[FilledSmallCircle] Zero tensors balance free indices, behave like zero and \
expand to zero arrays.\n\[FilledSmallCircle] CircleTimes and dot product \
routines\n\[FilledSmallCircle] Dot mode calculation for doing \
vector-matrix-array calculation.\n\[FilledSmallCircle] Routines to declare \
and apply tensor and tensor expression symmetries.\n\[FilledSmallCircle] \
Kronecker, generalized Kronecker and Levi-Civita routines.\n\
\[FilledSmallCircle] Partial, covariant, total, absolute and Lie derivative \
routines.\n\[FilledSmallCircle] Christoffel, Riemann, Ricci, Einstein, Weyl \
and scalar curvature routines.\n\[FilledSmallCircle] Blends naturally with \
the normal ",
  StyleBox["Mathematica",
    FontSlant->"Italic"],
  " norebook interface and kernel routines.\n\[FilledSmallCircle] Complete \
documented Help with individual pages and examples for each command. (Show \
it.) Additional tutorial notebooks. "
}], "EmphasisText"],

Cell[TextData[Cell[BoxData[GridBox[{
        {
          ButtonBox[
            StyleBox["\[FirstPage]",
              "SR"],
            ButtonFunction:>FrontEndExecute[ {
                FrontEndToken[ 
                  FrontEnd`SelectedNotebook[ ], "ScrollPageFirst"]}],
            ButtonStyle->"SlideHyperlink",
            ButtonNote->"First Slide"], 
          ButtonBox[
            StyleBox["\[LeftPointer]",
              "SR"],
            ButtonFunction:>FrontEndExecute[ {
                FrontEndToken[ 
                  FrontEnd`SelectedNotebook[ ], "ScrollPagePrevious"]}],
            ButtonStyle->"SlideHyperlink",
            ButtonNote->"Previous Slide"], 
          ButtonBox[
            StyleBox["\[RightPointer]",
              "SR"],
            ButtonFunction:>FrontEndExecute[ {
                FrontEndToken[ 
                  FrontEnd`SelectedNotebook[ ], "ScrollPageNext"]}],
            ButtonStyle->"SlideHyperlink",
            ButtonNote->"Next Slide"], 
          ButtonBox[
            StyleBox["\[LastPage]",
              "SR"],
            ButtonFunction:>FrontEndExecute[ {
                FrontEndToken[ 
                  FrontEnd`SelectedNotebook[ ], "ScrollPageLast"]}],
            ButtonStyle->"SlideHyperlink",
            ButtonNote->"Last Slide"], " ", 
          ButtonBox[
            StyleBox[
              RowBox[{
                CounterBox["SlideShowNavigationBar"], \(\(\ \)\(of\)\(\ \)\), 
                
                
                CounterBox["SlideShowNavigationBar", {None, 
                  "SlideShowHeader", -1}]}],
              "SR"],
            ButtonFrame->"None"]}
        }]]]], "SlideShowNavigationBar",
  CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell[TextData[{
  StyleBox["Tensorial",
    FontSlant->"Italic"],
  " 4.0 - Tensor Shortcut Input"
}], "Section"],

Cell[BoxData[
    \(Needs["\<TensorCalculus4`Tensorial`\>"]\)], "Input"],

Cell["\<\
Defining some tensor shortcuts that will be used throughout the slide show.\
\>", "Text"],

Cell[BoxData[
    \(DefineTensorShortcuts[{{x, e, u, v, dx, F, \[Lambda], zero}, 
        1}, {{g, \[Eta], G, T, \[CapitalLambda], X}, 
        2}, {{\[CapitalGamma], \[Epsilon], X}, 3}, {R, 4}]\)], "Input"],

Cell["\<\
To use a tensor shortcut type the tensor label followed by a series of u's \
and d's that give the up/down mode of the tensor. Then specify the indices. \
This is the shortest possible number of keystrokes to enter tensor \
expressions.  A 2D box structure would be much more tedious to enter.\
\>", "Text"],

Cell[CellGroupData[{

Cell[BoxData[
    \(Gdd[\[Mu], \[Nu]] \[Equal] 8  \[Pi]\ Tdd[\[Mu], \[Nu]]\)], "Input"],

Cell[BoxData[
    RowBox[{
      InterpretationBox[
        SubsuperscriptBox["G", \(\[Mu]  \[Nu]\), 
          RowBox[{
            TagBox[
              StyleBox["\[Mu]",
                ShowContents->False],
              (StyleForm[ #, ShowContents -> False]&)], 
            TagBox[
              StyleBox["\[Nu]",
                ShowContents->False],
              (StyleForm[ #, ShowContents -> False]&)]}]],
        Tensor[ G, {Void, Void}, {\[Mu], \[Nu]}],
        Editable->False], "\[Equal]", 
      RowBox[{"8", " ", "\[Pi]", " ", 
        InterpretationBox[
          SubsuperscriptBox["T", \(\[Mu]  \[Nu]\), 
            RowBox[{
              TagBox[
                StyleBox["\[Mu]",
                  ShowContents->False],
                (StyleForm[ #, ShowContents -> False]&)], 
              TagBox[
                StyleBox["\[Nu]",
                  ShowContents->False],
                (StyleForm[ #, ShowContents -> False]&)]}]],
          Tensor[ T, {Void, Void}, {\[Mu], \[Nu]}],
          Editable->False]}]}]], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
    \(v \[Equal] vu[i] ed[i]\), "\[IndentingNewLine]", 
    \(% // ToArrayValues[]\)}], "Input"],

Cell[BoxData[
    RowBox[{"v", "\[Equal]", 
      RowBox[{
        InterpretationBox[
          SubsuperscriptBox["e", "i", 
            TagBox[
              StyleBox["i",
                ShowContents->False],
              (StyleForm[ #, ShowContents -> False]&)]],
          Tensor[ e, {Void}, {i}],
          Editable->False], " ", 
        InterpretationBox[
          SubsuperscriptBox["v", 
            TagBox[
              StyleBox["i",
                ShowContents->False],
              (StyleForm[ #, ShowContents -> False]&)], "i"],
          Tensor[ v, {i}, {Void}],
          Editable->False]}]}]], "Output"],

Cell[BoxData[
    RowBox[{"v", "\[Equal]", 
      RowBox[{
        RowBox[{
          InterpretationBox[
            SubsuperscriptBox["e", "1", 
              TagBox[
                StyleBox["1",
                  ShowContents->False],
                (StyleForm[ #, ShowContents -> False]&)]],
            Tensor[ e, {Void}, {1}],
            Editable->False], " ", 
          InterpretationBox[
            SubsuperscriptBox["v", 
              TagBox[
                StyleBox["1",
                  ShowContents->False],
                (StyleForm[ #, ShowContents -> False]&)], "1"],
            Tensor[ v, {1}, {Void}],
            Editable->False]}], "+", 
        RowBox[{
          InterpretationBox[
            SubsuperscriptBox["e", "2", 
              TagBox[
                StyleBox["2",
                  ShowContents->False],
                (StyleForm[ #, ShowContents -> False]&)]],
            Tensor[ e, {Void}, {2}],
            Editable->False], " ", 
          InterpretationBox[
            SubsuperscriptBox["v", 
              TagBox[
                StyleBox["2",
                  ShowContents->False],
                (StyleForm[ #, ShowContents -> False]&)], "2"],
            Tensor[ v, {2}, {Void}],
            Editable->False]}], "+", 
        RowBox[{
          InterpretationBox[
            SubsuperscriptBox["e", "3", 
              TagBox[
                StyleBox["3",
                  ShowContents->False],
                (StyleForm[ #, ShowContents -> False]&)]],
            Tensor[ e, {Void}, {3}],
            Editable->False], " ", 
          InterpretationBox[
            SubsuperscriptBox["v", 
              TagBox[
                StyleBox["3",
                  ShowContents->False],
                (StyleForm[ #, ShowContents -> False]&)], "3"],
            Tensor[ v, {3}, {Void}],
            Editable->False]}]}]}]], "Output"]
}, Open  ]]
}, Open  ]],

Cell[TextData[Cell[BoxData[GridBox[{
        {
          ButtonBox[
            StyleBox["\[FirstPage]",
              "SR"],
            ButtonFunction:>FrontEndExecute[ {
                FrontEndToken[ 
                  FrontEnd`SelectedNotebook[ ], "ScrollPageFirst"]}],
            ButtonStyle->"SlideHyperlink",
            ButtonNote->"First Slide"], 
          ButtonBox[
            StyleBox["\[LeftPointer]",
              "SR"],
            ButtonFunction:>FrontEndExecute[ {
                FrontEndToken[ 
                  FrontEnd`SelectedNotebook[ ], "ScrollPagePrevious"]}],
            ButtonStyle->"SlideHyperlink",
            ButtonNote->"Previous Slide"], 
          ButtonBox[
            StyleBox["\[RightPointer]",
              "SR"],
            ButtonFunction:>FrontEndExecute[ {
                FrontEndToken[ 
                  FrontEnd`SelectedNotebook[ ], "ScrollPageNext"]}],
            ButtonStyle->"SlideHyperlink",
            ButtonNote->"Next Slide"], 
          ButtonBox[
            StyleBox["\[LastPage]",
              "SR"],
            ButtonFunction:>FrontEndExecute[ {
                FrontEndToken[ 
                  FrontEnd`SelectedNotebook[ ], "ScrollPageLast"]}],
            ButtonStyle->"SlideHyperlink",
            ButtonNote->"Last Slide"], " ", 
          ButtonBox[
            StyleBox[
              RowBox[{
                CounterBox["SlideShowNavigationBar"], \(\(\ \)\(of\)\(\ \)\), 
                
                
                CounterBox["SlideShowNavigationBar", {None, 
                  "SlideShowHeader", -1}]}],
              "SR"],
            ButtonFrame->"None"]}
        }]]]], "SlideShowNavigationBar",
  CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell[TextData[{
  StyleBox["Tensorial",
    FontSlant->"Italic"],
  " 4.0 - Formatted Output (a)"
}], "Section"],

Cell["Formatting of derivatives and tensors.", "Text"],

Cell[CellGroupData[{

Cell[BoxData[{
    \(Tdd[\[Alpha], \[Beta]]\), "\[IndentingNewLine]", 
    \(derivativelist = \[IndentingNewLine]{PartialD[%, {\[Gamma], \[Delta]}], 
        CovariantD[%, {\[Gamma], \[Delta]}], TotalD[%, u], AbsoluteD[%, u], 
        LieD[%, V]}\)}], "Input"],

Cell[BoxData[
    InterpretationBox[
      SubsuperscriptBox["T", \(\[Alpha]  \[Beta]\), 
        RowBox[{
          TagBox[
            StyleBox["\[Alpha]",
              ShowContents->False],
            (StyleForm[ #, ShowContents -> False]&)], 
          TagBox[
            StyleBox["\[Beta]",
              ShowContents->False],
            (StyleForm[ #, ShowContents -> False]&)]}]],
      Tensor[ T, {Void, Void}, {\[Alpha], \[Beta]}],
      Editable->False]], "Output"],

Cell[BoxData[
    RowBox[{"{", 
      RowBox[{
        InterpretationBox[
          SubscriptBox[
            InterpretationBox[
              SubsuperscriptBox["T", \(\[Alpha]  \[Beta]\), 
                RowBox[{
                  TagBox[
                    StyleBox["\[Alpha]",
                      ShowContents->False],
                    (StyleForm[ #, ShowContents -> False]&)], 
                  TagBox[
                    StyleBox["\[Beta]",
                      ShowContents->False],
                    (StyleForm[ #, ShowContents -> False]&)]}]],
              Tensor[ T, {Void, Void}, {\[Alpha], \[Beta]}],
              Editable->False], \(\(,\)\(\[Gamma]  \[Delta]\)\)],
          PartialD[ 
            Tensor[ 
            T, {Void, Void}, {\[Alpha], \[Beta]}], {\[Gamma], \[Delta]}],
          Editable->False], ",", 
        InterpretationBox[
          SubscriptBox[
            InterpretationBox[
              SubsuperscriptBox["T", \(\[Alpha]  \[Beta]\), 
                RowBox[{
                  TagBox[
                    StyleBox["\[Alpha]",
                      ShowContents->False],
                    (StyleForm[ #, ShowContents -> False]&)], 
                  TagBox[
                    StyleBox["\[Beta]",
                      ShowContents->False],
                    (StyleForm[ #, ShowContents -> False]&)]}]],
              Tensor[ T, {Void, Void}, {\[Alpha], \[Beta]}],
              Editable->False], \(\(;\)\(\[Gamma]  \[Delta]\)\)],
          CovariantD[ 
            Tensor[ 
            T, {Void, Void}, {\[Alpha], \[Beta]}], {\[Gamma], \[Delta]}],
          Editable->False], ",", 
        InterpretationBox[
          FractionBox[
            RowBox[{"\[DifferentialD]", 
              InterpretationBox[
                SubsuperscriptBox["T", \(\[Alpha]  \[Beta]\), 
                  RowBox[{
                    TagBox[
                      StyleBox["\[Alpha]",
                        ShowContents->False],
                      (StyleForm[ #, ShowContents -> False]&)], 
                    TagBox[
                      StyleBox["\[Beta]",
                        ShowContents->False],
                      (StyleForm[ #, ShowContents -> False]&)]}]],
                Tensor[ T, {Void, Void}, {\[Alpha], \[Beta]}],
                Editable->False]}], \(\[DifferentialD]u\)],
          TotalD[ 
            Tensor[ T, {Void, Void}, {\[Alpha], \[Beta]}], u]], ",", 
        InterpretationBox[
          FractionBox[
            RowBox[{"D", 
              InterpretationBox[
                SubsuperscriptBox["T", \(\[Alpha]  \[Beta]\), 
                  RowBox[{
                    TagBox[
                      StyleBox["\[Alpha]",
                        ShowContents->False],
                      (StyleForm[ #, ShowContents -> False]&)], 
                    TagBox[
                      StyleBox["\[Beta]",
                        ShowContents->False],
                      (StyleForm[ #, ShowContents -> False]&)]}]],
                Tensor[ T, {Void, Void}, {\[Alpha], \[Beta]}],
                Editable->False]}], \(d  u\)],
          AbsoluteD[ 
            Tensor[ T, {Void, Void}, {\[Alpha], \[Beta]}], u],
          Editable->False], ",", 
        RowBox[{"LieD", "[", 
          RowBox[{
            InterpretationBox[
              SubsuperscriptBox["T", \(\[Alpha]  \[Beta]\), 
                RowBox[{
                  TagBox[
                    StyleBox["\[Alpha]",
                      ShowContents->False],
                    (StyleForm[ #, ShowContents -> False]&)], 
                  TagBox[
                    StyleBox["\[Beta]",
                      ShowContents->False],
                    (StyleForm[ #, ShowContents -> False]&)]}]],
              Tensor[ T, {Void, Void}, {\[Alpha], \[Beta]}],
              Editable->False], ",", "V"}], "]"}]}], "}"}]], "Output"]
}, Open  ]],

Cell["\<\
We can change the formatting to other commonly used forms. The following uses \
a vertical bar for covariant derivative indices, and a subscripted Sterling \
symbol for Lie derivatives.\
\>", "Text"],

Cell[CellGroupData[{

Cell[BoxData[{
    \(SetLieDisplay["\<LieMode\>"]\), "\n", 
    \(\(SetDerivativeSymbols[{"\<,\>", "\<|\>", "\<\[DifferentialD]\>", "\<\
\[DifferentialD]\>", "\<D\>", "\<d\>", "\<\[Sterling]\>"}];\)\), "\
\[IndentingNewLine]", 
    \(derivativelist\)}], "Input"],

Cell[BoxData[
    RowBox[{"{", 
      RowBox[{
        InterpretationBox[
          SubscriptBox[
            InterpretationBox[
              SubsuperscriptBox["T", \(\[Alpha]  \[Beta]\), 
                RowBox[{
                  TagBox[
                    StyleBox["\[Alpha]",
                      ShowContents->False],
                    (StyleForm[ #, ShowContents -> False]&)], 
                  TagBox[
                    StyleBox["\[Beta]",
                      ShowContents->False],
                    (StyleForm[ #, ShowContents -> False]&)]}]],
              Tensor[ T, {Void, Void}, {\[Alpha], \[Beta]}],
              Editable->False], \(\(,\)\(\[Gamma]  \[Delta]\)\)],
          PartialD[ 
            Tensor[ 
            T, {Void, Void}, {\[Alpha], \[Beta]}], {\[Gamma], \[Delta]}],
          Editable->False], ",", 
        InterpretationBox[
          SubscriptBox[
            InterpretationBox[
              SubsuperscriptBox["T", \(\[Alpha]  \[Beta]\), 
                RowBox[{
                  TagBox[
                    StyleBox["\[Alpha]",
                      ShowContents->False],
                    (StyleForm[ #, ShowContents -> False]&)], 
                  TagBox[
                    StyleBox["\[Beta]",
                      ShowContents->False],
                    (StyleForm[ #, ShowContents -> False]&)]}]],
              Tensor[ T, {Void, Void}, {\[Alpha], \[Beta]}],
              Editable->False], \(\(|\)\(\[Gamma]  \[Delta]\)\)],
          CovariantD[ 
            Tensor[ 
            T, {Void, Void}, {\[Alpha], \[Beta]}], {\[Gamma], \[Delta]}],
          Editable->False], ",", 
        InterpretationBox[
          FractionBox[
            RowBox[{"\[DifferentialD]", 
              InterpretationBox[
                SubsuperscriptBox["T", \(\[Alpha]  \[Beta]\), 
                  RowBox[{
                    TagBox[
                      StyleBox["\[Alpha]",
                        ShowContents->False],
                      (StyleForm[ #, ShowContents -> False]&)], 
                    TagBox[
                      StyleBox["\[Beta]",
                        ShowContents->False],
                      (StyleForm[ #, ShowContents -> False]&)]}]],
                Tensor[ T, {Void, Void}, {\[Alpha], \[Beta]}],
                Editable->False]}], \(\[DifferentialD]u\)],
          TotalD[ 
            Tensor[ T, {Void, Void}, {\[Alpha], \[Beta]}], u]], ",", 
        InterpretationBox[
          FractionBox[
            RowBox[{"D", 
              InterpretationBox[
                SubsuperscriptBox["T", \(\[Alpha]  \[Beta]\), 
                  RowBox[{
                    TagBox[
                      StyleBox["\[Alpha]",
                        ShowContents->False],
                      (StyleForm[ #, ShowContents -> False]&)], 
                    TagBox[
                      StyleBox["\[Beta]",
                        ShowContents->False],
                      (StyleForm[ #, ShowContents -> False]&)]}]],
                Tensor[ T, {Void, Void}, {\[Alpha], \[Beta]}],
                Editable->False]}], \(d  u\)],
          AbsoluteD[ 
            Tensor[ T, {Void, Void}, {\[Alpha], \[Beta]}], u],
          Editable->False], ",", 
        InterpretationBox[
          TagBox[
            RowBox[{\(\[Sterling]\_V\), "\[VeryThinSpace]", 
              InterpretationBox[
                SubsuperscriptBox["T", \(\[Alpha]  \[Beta]\), 
                  RowBox[{
                    TagBox[
                      StyleBox["\[Alpha]",
                        ShowContents->False],
                      (StyleForm[ #, ShowContents -> False]&)], 
                    TagBox[
                      StyleBox["\[Beta]",
                        ShowContents->False],
                      (StyleForm[ #, ShowContents -> False]&)]}]],
                Tensor[ T, {Void, Void}, {\[Alpha], \[Beta]}],
                Editable->False]}],
            LieD,
            SyntaxForm->"Wedge"],
          LieD[ 
            Tensor[ T, {Void, Void}, {\[Alpha], \[Beta]}], V],
          Editable->False]}], "}"}]], "Output"]
}, Open  ]]
}, Open  ]],

Cell[TextData[Cell[BoxData[GridBox[{
        {
          ButtonBox[
            StyleBox["\[FirstPage]",
              "SR"],
            ButtonFunction:>FrontEndExecute[ {
                FrontEndToken[ 
                  FrontEnd`SelectedNotebook[ ], "ScrollPageFirst"]}],
            ButtonStyle->"SlideHyperlink",
            ButtonNote->"First Slide"], 
          ButtonBox[
            StyleBox["\[LeftPointer]",
              "SR"],
            ButtonFunction:>FrontEndExecute[ {
                FrontEndToken[ 
                  FrontEnd`SelectedNotebook[ ], "ScrollPagePrevious"]}],
            ButtonStyle->"SlideHyperlink",
            ButtonNote->"Previous Slide"], 
          ButtonBox[
            StyleBox["\[RightPointer]",
              "SR"],
            ButtonFunction:>FrontEndExecute[ {
                FrontEndToken[ 
                  FrontEnd`SelectedNotebook[ ], "ScrollPageNext"]}],
            ButtonStyle->"SlideHyperlink",
            ButtonNote->"Next Slide"], 
          ButtonBox[
            StyleBox["\[LastPage]",
              "SR"],
            ButtonFunction:>FrontEndExecute[ {
                FrontEndToken[ 
                  FrontEnd`SelectedNotebook[ ], "ScrollPageLast"]}],
            ButtonStyle->"SlideHyperlink"], " ", 
          ButtonBox[
            StyleBox[
              RowBox[{
                CounterBox["SlideShowNavigationBar"], \(\(\ \)\(of\)\(\ \)\), 
                
                
                CounterBox["SlideShowNavigationBar", {None, 
                  "SlideShowHeader", -1}]}],
              "SR"],
            ButtonFrame->"None"]}
        }]]]], "SlideShowNavigationBar",
  CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell[TextData[{
  StyleBox["Tensorial",
    FontSlant->"Italic"],
  " 4.0 - Formatted Output (b)"
}], "Section"],

Cell["\<\
In the following, the \"DelMode\" is set for covariant derivatives.\
\>", "Text"],

Cell[CellGroupData[{

Cell[BoxData[{
    \(SetCovariantDisplay["\<DelMode\>"]\), "\[IndentingNewLine]", 
    \(derivativelist\)}], "Input"],

Cell[BoxData[
    RowBox[{"{", 
      RowBox[{
        InterpretationBox[
          SubscriptBox[
            InterpretationBox[
              SubsuperscriptBox["T", \(\[Alpha]  \[Beta]\), 
                RowBox[{
                  TagBox[
                    StyleBox["\[Alpha]",
                      ShowContents->False],
                    (StyleForm[ #, ShowContents -> False]&)], 
                  TagBox[
                    StyleBox["\[Beta]",
                      ShowContents->False],
                    (StyleForm[ #, ShowContents -> False]&)]}]],
              Tensor[ T, {Void, Void}, {\[Alpha], \[Beta]}],
              Editable->False], \(\(,\)\(\[Gamma]  \[Delta]\)\)],
          PartialD[ 
            Tensor[ 
            T, {Void, Void}, {\[Alpha], \[Beta]}], {\[Gamma], \[Delta]}],
          Editable->False], ",", 
        InterpretationBox[
          RowBox[{\(\[Del]\_\(\[Gamma]  \[Delta]\)\), 
            InterpretationBox[
              SubsuperscriptBox["T", \(\[Alpha]  \[Beta]\), 
                RowBox[{
                  TagBox[
                    StyleBox["\[Alpha]",
                      ShowContents->False],
                    (StyleForm[ #, ShowContents -> False]&)], 
                  TagBox[
                    StyleBox["\[Beta]",
                      ShowContents->False],
                    (StyleForm[ #, ShowContents -> False]&)]}]],
              Tensor[ T, {Void, Void}, {\[Alpha], \[Beta]}],
              Editable->False]}],
          CovariantD[ 
            Tensor[ 
            T, {Void, Void}, {\[Alpha], \[Beta]}], {\[Gamma], \[Delta]}],
          Editable->False], ",", 
        InterpretationBox[
          FractionBox[
            RowBox[{"\[DifferentialD]", 
              InterpretationBox[
                SubsuperscriptBox["T", \(\[Alpha]  \[Beta]\), 
                  RowBox[{
                    TagBox[
                      StyleBox["\[Alpha]",
                        ShowContents->False],
                      (StyleForm[ #, ShowContents -> False]&)], 
                    TagBox[
                      StyleBox["\[Beta]",
                        ShowContents->False],
                      (StyleForm[ #, ShowContents -> False]&)]}]],
                Tensor[ T, {Void, Void}, {\[Alpha], \[Beta]}],
                Editable->False]}], \(\[DifferentialD]u\)],
          TotalD[ 
            Tensor[ T, {Void, Void}, {\[Alpha], \[Beta]}], u]], ",", 
        InterpretationBox[
          FractionBox[
            RowBox[{"D", 
              InterpretationBox[
                SubsuperscriptBox["T", \(\[Alpha]  \[Beta]\), 
                  RowBox[{
                    TagBox[
                      StyleBox["\[Alpha]",
                        ShowContents->False],
                      (StyleForm[ #, ShowContents -> False]&)], 
                    TagBox[
                      StyleBox["\[Beta]",
                        ShowContents->False],
                      (StyleForm[ #, ShowContents -> False]&)]}]],
                Tensor[ T, {Void, Void}, {\[Alpha], \[Beta]}],
                Editable->False]}], \(d  u\)],
          AbsoluteD[ 
            Tensor[ T, {Void, Void}, {\[Alpha], \[Beta]}], u],
          Editable->False], ",", 
        InterpretationBox[
          TagBox[
            RowBox[{\(\[Sterling]\_V\), "\[VeryThinSpace]", 
              InterpretationBox[
                SubsuperscriptBox["T", \(\[Alpha]  \[Beta]\), 
                  RowBox[{
                    TagBox[
                      StyleBox["\[Alpha]",
                        ShowContents->False],
                      (StyleForm[ #, ShowContents -> False]&)], 
                    TagBox[
                      StyleBox["\[Beta]",
                        ShowContents->False],
                      (StyleForm[ #, ShowContents -> False]&)]}]],
                Tensor[ T, {Void, Void}, {\[Alpha], \[Beta]}],
                Editable->False]}],
            LieD,
            SyntaxForm->"Wedge"],
          LieD[ 
            Tensor[ T, {Void, Void}, {\[Alpha], \[Beta]}], V],
          Editable->False]}], "}"}]], "Output"]
}, Open  ]],

Cell["\<\
The output can be copied and pasted. Here the output covariant derivative \
above was copied and pasted. \
\>", "Text",
  FontSize->16],

Cell[CellGroupData[{

Cell[BoxData[{
    InterpretationBox[
      RowBox[{\(\[Del]\_\(\[Gamma]  \[Delta]\)\), 
        InterpretationBox[
          SubsuperscriptBox["T", \(\[Alpha]  \[Beta]\), 
            RowBox[{
              TagBox[
                StyleBox["\[Alpha]",
                  ShowContents->False],
                (StyleForm[ #, ShowContents -> False]&)], 
              TagBox[
                StyleBox["\[Beta]",
                  ShowContents->False],
                (StyleForm[ #, ShowContents -> False]&)]}]],
          Tensor[ T, {Void, Void}, {\[Alpha], \[Beta]}],
          Editable->False]}],
      CovariantD[ 
        Tensor[ T, {Void, Void}, {\[Alpha], \[Beta]}], {\[Gamma], \[Delta]}],
      Editable->False], "\[IndentingNewLine]", \(% // FullForm\)}], "Input"],

Cell[BoxData[
    InterpretationBox[
      RowBox[{\(\[Del]\_\(\[Gamma]  \[Delta]\)\), 
        InterpretationBox[
          SubsuperscriptBox["T", \(\[Alpha]  \[Beta]\), 
            RowBox[{
              TagBox[
                StyleBox["\[Alpha]",
                  ShowContents->False],
                (StyleForm[ #, ShowContents -> False]&)], 
              TagBox[
                StyleBox["\[Beta]",
                  ShowContents->False],
                (StyleForm[ #, ShowContents -> False]&)]}]],
          Tensor[ T, {Void, Void}, {\[Alpha], \[Beta]}],
          Editable->False]}],
      CovariantD[ 
        Tensor[ T, {Void, Void}, {\[Alpha], \[Beta]}], {\[Gamma], \[Delta]}],
      Editable->False]], "Output"],

Cell[BoxData[
    TagBox[
      StyleBox[\(CovariantD[
          Tensor[T, List[Void, Void], List[\\[Alpha], \\[Beta]]], 
          List[\\[Gamma], \\[Delta]]]\),
        ShowSpecialCharacters->False,
        ShowStringCharacters->True,
        NumberMarks->True],
      FullForm]], "Output"]
}, Open  ]],

Cell["Restore the default formatting.", "Text"],

Cell[BoxData[{
    \(SetCovariantDisplay["\<SemicolonMode\>"]\), "\[IndentingNewLine]", 
    \(SetLieDisplay["\<PlainMode\>"]\), "\[IndentingNewLine]", 
    \(\(SetDerivativeSymbols[{"\<,\>", "\<;\>", "\<\[DifferentialD]\>", "\<\
\[DifferentialD]\>", "\<D\>", "\<d\>", "\<\[Sterling]\>"}];\)\)}], "Input"]
}, Open  ]],

Cell[TextData[Cell[BoxData[GridBox[{
        {
          ButtonBox[
            StyleBox["\[FirstPage]",
              "SR"],
            ButtonFunction:>FrontEndExecute[ {
                FrontEndToken[ 
                  FrontEnd`SelectedNotebook[ ], "ScrollPageFirst"]}],
            ButtonStyle->"SlideHyperlink",
            ButtonNote->"First Slide"], 
          ButtonBox[
            StyleBox["\[LeftPointer]",
              "SR"],
            ButtonFunction:>FrontEndExecute[ {
                FrontEndToken[ 
                  FrontEnd`SelectedNotebook[ ], "ScrollPagePrevious"]}],
            ButtonStyle->"SlideHyperlink",
            ButtonNote->"Previous Slide"], 
          ButtonBox[
            StyleBox["\[RightPointer]",
              "SR"],
            ButtonFunction:>FrontEndExecute[ {
                FrontEndToken[ 
                  FrontEnd`SelectedNotebook[ ], "ScrollPageNext"]}],
            ButtonStyle->"SlideHyperlink",
            ButtonNote->"Next Slide"], 
          ButtonBox[
            StyleBox["\[LastPage]",
              "SR"],
            ButtonFunction:>FrontEndExecute[ {
                FrontEndToken[ 
                  FrontEnd`SelectedNotebook[ ], "ScrollPageLast"]}],
            ButtonStyle->"SlideHyperlink"], " ", 
          ButtonBox[
            StyleBox[
              RowBox[{
                CounterBox["SlideShowNavigationBar"], \(\(\ \)\(of\)\(\ \)\), 
                
                
                CounterBox["SlideShowNavigationBar", {None, 
                  "SlideShowHeader", -1}]}],
              "SR"],
            ButtonFrame->"None"]}
        }]]]], "SlideShowNavigationBar",
  CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell[TextData[{
  StyleBox["Tensorial",
    FontSlant->"Italic"],
  " 4.0 - Open Design (a)"
}], "Section"],

Cell["\<\
1) There are no built-in tensor labels, only routines that carry out \
calculations when the relevant tensor labels are supplied to them
2) There are no restrictions on the symbols or integers that may be used as \
indices.\
\>", "EmphasisText"],

Cell[TextData[{
  "This means it is much easier to follow a textbook or research paper and \
more closely follow the author's notation. It means that ",
  StyleBox["Tensorial",
    FontSlant->"Italic"],
  " can easily be extended to new types of tensorial objects."
}], "Text"],

Cell["\<\
In relativity we don't have to expand a vector in components 1, 2 ,3 and 4, \
where time is associated with index 4  as in some tensor programs.\
\>", "Text"],

Cell[CellGroupData[{

Cell[BoxData[{
    \(DeclareBaseIndices[{1, 2, 3, 4}]\), "\n", 
    \(u \[Equal] uu[a] ed[a]\), "\[IndentingNewLine]", 
    \(% // ToArrayValues[]\)}], "Input"],

Cell[BoxData[
    RowBox[{"u", "\[Equal]", 
      RowBox[{
        InterpretationBox[
          SubsuperscriptBox["e", "a", 
            TagBox[
              StyleBox["a",
                ShowContents->False],
              (StyleForm[ #, ShowContents -> False]&)]],
          Tensor[ e, {Void}, {a}],
          Editable->False], " ", 
        InterpretationBox[
          SubsuperscriptBox["u", 
            TagBox[
              StyleBox["a",
                ShowContents->False],
              (StyleForm[ #, ShowContents -> False]&)], "a"],
          Tensor[ u, {a}, {Void}],
          Editable->False]}]}]], "Output"],

Cell[BoxData[
    RowBox[{"u", "\[Equal]", 
      RowBox[{
        RowBox[{
          InterpretationBox[
            SubsuperscriptBox["e", "1", 
              TagBox[
                StyleBox["1",
                  ShowContents->False],
                (StyleForm[ #, ShowContents -> False]&)]],
            Tensor[ e, {Void}, {1}],
            Editable->False], " ", 
          InterpretationBox[
            SubsuperscriptBox["u", 
              TagBox[
                StyleBox["1",
                  ShowContents->False],
                (StyleForm[ #, ShowContents -> False]&)], "1"],
            Tensor[ u, {1}, {Void}],
            Editable->False]}], "+", 
        RowBox[{
          InterpretationBox[
            SubsuperscriptBox["e", "2", 
              TagBox[
                StyleBox["2",
                  ShowContents->False],
                (StyleForm[ #, ShowContents -> False]&)]],
            Tensor[ e, {Void}, {2}],
            Editable->False], " ", 
          InterpretationBox[
            SubsuperscriptBox["u", 
              TagBox[
                StyleBox["2",
                  ShowContents->False],
                (StyleForm[ #, ShowContents -> False]&)], "2"],
            Tensor[ u, {2}, {Void}],
            Editable->False]}], "+", 
        RowBox[{
          InterpretationBox[
            SubsuperscriptBox["e", "3", 
              TagBox[
                StyleBox["3",
                  ShowContents->False],
                (StyleForm[ #, ShowContents -> False]&)]],
            Tensor[ e, {Void}, {3}],
            Editable->False], " ", 
          InterpretationBox[
            SubsuperscriptBox["u", 
              TagBox[
                StyleBox["3",
                  ShowContents->False],
                (StyleForm[ #, ShowContents -> False]&)], "3"],
            Tensor[ u, {3}, {Void}],
            Editable->False]}], "+", 
        RowBox[{
          InterpretationBox[
            SubsuperscriptBox["e", "4", 
              TagBox[
                StyleBox["4",
                  ShowContents->False],
                (StyleForm[ #, ShowContents -> False]&)]],
            Tensor[ e, {Void}, {4}],
            Editable->False], " ", 
          InterpretationBox[
            SubsuperscriptBox["u", 
              TagBox[
                StyleBox["4",
                  ShowContents->False],
                (StyleForm[ #, ShowContents -> False]&)], "4"],
            Tensor[ u, {4}, {Void}],
            Editable->False]}]}]}]], "Output"]
}, Open  ]],

Cell["The indexing could be started at 0.", "Text"],

Cell[CellGroupData[{

Cell[BoxData[{
    \(DeclareBaseIndices[{0, 1, 2, 3}]\), "\n", 
    \(u \[Equal] uu[\[Alpha]] ed[\[Alpha]]\), "\[IndentingNewLine]", 
    \(% // ToArrayValues[]\)}], "Input"],

Cell[BoxData[
    RowBox[{"u", "\[Equal]", 
      RowBox[{
        InterpretationBox[
          SubsuperscriptBox["e", "\[Alpha]", 
            TagBox[
              StyleBox["\[Alpha]",
                ShowContents->False],
              (StyleForm[ #, ShowContents -> False]&)]],
          Tensor[ e, {Void}, {\[Alpha]}],
          Editable->False], " ", 
        InterpretationBox[
          SubsuperscriptBox["u", 
            TagBox[
              StyleBox["\[Alpha]",
                ShowContents->False],
              (StyleForm[ #, ShowContents -> False]&)], "\[Alpha]"],
          Tensor[ u, {\[Alpha]}, {Void}],
          Editable->False]}]}]], "Output"],

Cell[BoxData[
    RowBox[{"u", "\[Equal]", 
      RowBox[{
        RowBox[{
          InterpretationBox[
            SubsuperscriptBox["e", "0", 
              TagBox[
                StyleBox["0",
                  ShowContents->False],
                (StyleForm[ #, ShowContents -> False]&)]],
            Tensor[ e, {Void}, {0}],
            Editable->False], " ", 
          InterpretationBox[
            SubsuperscriptBox["u", 
              TagBox[
                StyleBox["0",
                  ShowContents->False],
                (StyleForm[ #, ShowContents -> False]&)], "0"],
            Tensor[ u, {0}, {Void}],
            Editable->False]}], "+", 
        RowBox[{
          InterpretationBox[
            SubsuperscriptBox["e", "1", 
              TagBox[
                StyleBox["1",
                  ShowContents->False],
                (StyleForm[ #, ShowContents -> False]&)]],
            Tensor[ e, {Void}, {1}],
            Editable->False], " ", 
          InterpretationBox[
            SubsuperscriptBox["u", 
              TagBox[
                StyleBox["1",
                  ShowContents->False],
                (StyleForm[ #, ShowContents -> False]&)], "1"],
            Tensor[ u, {1}, {Void}],
            Editable->False]}], "+", 
        RowBox[{
          InterpretationBox[
            SubsuperscriptBox["e", "2", 
              TagBox[
                StyleBox["2",
                  ShowContents->False],
                (StyleForm[ #, ShowContents -> False]&)]],
            Tensor[ e, {Void}, {2}],
            Editable->False], " ", 
          InterpretationBox[
            SubsuperscriptBox["u", 
              TagBox[
                StyleBox["2",
                  ShowContents->False],
                (StyleForm[ #, ShowContents -> False]&)], "2"],
            Tensor[ u, {2}, {Void}],
            Editable->False]}], "+", 
        RowBox[{
          InterpretationBox[
            SubsuperscriptBox["e", "3", 
              TagBox[
                StyleBox["3",
                  ShowContents->False],
                (StyleForm[ #, ShowContents -> False]&)]],
            Tensor[ e, {Void}, {3}],
            Editable->False], " ", 
          InterpretationBox[
            SubsuperscriptBox["u", 
              TagBox[
                StyleBox["3",
                  ShowContents->False],
                (StyleForm[ #, ShowContents -> False]&)], "3"],
            Tensor[ u, {3}, {Void}],
            Editable->False]}]}]}]], "Output"]
}, Open  ]]
}, Open  ]],

Cell[TextData[Cell[BoxData[GridBox[{
        {
          ButtonBox[
            StyleBox["\[FirstPage]",
              "SR"],
            ButtonFunction:>FrontEndExecute[ {
                FrontEndToken[ 
                  FrontEnd`SelectedNotebook[ ], "ScrollPageFirst"]}],
            ButtonStyle->"SlideHyperlink",
            ButtonNote->"First Slide"], 
          ButtonBox[
            StyleBox["\[LeftPointer]",
              "SR"],
            ButtonFunction:>FrontEndExecute[ {
                FrontEndToken[ 
                  FrontEnd`SelectedNotebook[ ], "ScrollPagePrevious"]}],
            ButtonStyle->"SlideHyperlink",
            ButtonNote->"Previous Slide"], 
          ButtonBox[
            StyleBox["\[RightPointer]",
              "SR"],
            ButtonFunction:>FrontEndExecute[ {
                FrontEndToken[ 
                  FrontEnd`SelectedNotebook[ ], "ScrollPageNext"]}],
            ButtonStyle->"SlideHyperlink",
            ButtonNote->"Next Slide"], 
          ButtonBox[
            StyleBox["\[LastPage]",
              "SR"],
            ButtonFunction:>FrontEndExecute[ {
                FrontEndToken[ 
                  FrontEnd`SelectedNotebook[ ], "ScrollPageLast"]}],
            ButtonStyle->"SlideHyperlink"], " ", 
          ButtonBox[
            StyleBox[
              RowBox[{
                CounterBox["SlideShowNavigationBar"], \(\(\ \)\(of\)\(\ \)\), 
                
                
                CounterBox["SlideShowNavigationBar", {None, 
                  "SlideShowHeader", -1}]}],
              "SR"],
            ButtonFrame->"None"]}
        }]]]], "SlideShowNavigationBar",
  CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell[TextData[{
  StyleBox["Tensorial",
    FontSlant->"Italic"],
  " 4.0 - Open Design (b)"
}], "Section"],

Cell["Or you could use actual symbols.", "Text"],

Cell[CellGroupData[{

Cell[BoxData[{
    \(DeclareBaseIndices[{t, x, y, z}]\), "\n", 
    \(u \[Equal] uu[i] ed[i]\), "\[IndentingNewLine]", 
    \(% // ToArrayValues[]\)}], "Input"],

Cell[BoxData[
    RowBox[{"u", "\[Equal]", 
      RowBox[{
        InterpretationBox[
          SubsuperscriptBox["e", "i", 
            TagBox[
              StyleBox["i",
                ShowContents->False],
              (StyleForm[ #, ShowContents -> False]&)]],
          Tensor[ e, {Void}, {i}],
          Editable->False], " ", 
        InterpretationBox[
          SubsuperscriptBox["u", 
            TagBox[
              StyleBox["i",
                ShowContents->False],
              (StyleForm[ #, ShowContents -> False]&)], "i"],
          Tensor[ u, {i}, {Void}],
          Editable->False]}]}]], "Output"],

Cell[BoxData[
    RowBox[{"u", "\[Equal]", 
      RowBox[{
        RowBox[{
          InterpretationBox[
            SubsuperscriptBox["e", "t", 
              TagBox[
                StyleBox["t",
                  ShowContents->False],
                (StyleForm[ #, ShowContents -> False]&)]],
            Tensor[ e, {Void}, {t}],
            Editable->False], " ", 
          InterpretationBox[
            SubsuperscriptBox["u", 
              TagBox[
                StyleBox["t",
                  ShowContents->False],
                (StyleForm[ #, ShowContents -> False]&)], "t"],
            Tensor[ u, {t}, {Void}],
            Editable->False]}], "+", 
        RowBox[{
          InterpretationBox[
            SubsuperscriptBox["e", "x", 
              TagBox[
                StyleBox["x",
                  ShowContents->False],
                (StyleForm[ #, ShowContents -> False]&)]],
            Tensor[ e, {Void}, {x}],
            Editable->False], " ", 
          InterpretationBox[
            SubsuperscriptBox["u", 
              TagBox[
                StyleBox["x",
                  ShowContents->False],
                (StyleForm[ #, ShowContents -> False]&)], "x"],
            Tensor[ u, {x}, {Void}],
            Editable->False]}], "+", 
        RowBox[{
          InterpretationBox[
            SubsuperscriptBox["e", "y", 
              TagBox[
                StyleBox["y",
                  ShowContents->False],
                (StyleForm[ #, ShowContents -> False]&)]],
            Tensor[ e, {Void}, {y}],
            Editable->False], " ", 
          InterpretationBox[
            SubsuperscriptBox["u", 
              TagBox[
                StyleBox["y",
                  ShowContents->False],
                (StyleForm[ #, ShowContents -> False]&)], "y"],
            Tensor[ u, {y}, {Void}],
            Editable->False]}], "+", 
        RowBox[{
          InterpretationBox[
            SubsuperscriptBox["e", "z", 
              TagBox[
                StyleBox["z",
                  ShowContents->False],
                (StyleForm[ #, ShowContents -> False]&)]],
            Tensor[ e, {Void}, {z}],
            Editable->False], " ", 
          InterpretationBox[
            SubsuperscriptBox["u", 
              TagBox[
                StyleBox["z",
                  ShowContents->False],
                (StyleForm[ #, ShowContents -> False]&)], "z"],
            Tensor[ u, {z}, {Void}],
            Editable->False]}]}]}]], "Output"]
}, Open  ]],

Cell["The following raises an index with a metric tensor g.", "Text"],

Cell[CellGroupData[{

Cell[BoxData[{
    \(guu[a, b] Tdd[b, c]\), "\[IndentingNewLine]", 
    \(% // MetricSimplify[g]\)}], "Input"],

Cell[BoxData[
    RowBox[{
      InterpretationBox[
        SubsuperscriptBox["g", 
          RowBox[{
            TagBox[
              StyleBox["a",
                ShowContents->False],
              (StyleForm[ #, ShowContents -> False]&)], 
            TagBox[
              StyleBox["b",
                ShowContents->False],
              (StyleForm[ #, ShowContents -> False]&)]}], \(a  b\)],
        Tensor[ g, {a, b}, {Void, Void}],
        Editable->False], " ", 
      InterpretationBox[
        SubsuperscriptBox["T", \(b  c\), 
          RowBox[{
            TagBox[
              StyleBox["b",
                ShowContents->False],
              (StyleForm[ #, ShowContents -> False]&)], 
            TagBox[
              StyleBox["c",
                ShowContents->False],
              (StyleForm[ #, ShowContents -> False]&)]}]],
        Tensor[ T, {Void, Void}, {b, c}],
        Editable->False]}]], "Output"],

Cell[BoxData[
    InterpretationBox[
      SubsuperscriptBox["T", 
        RowBox[{
          TagBox[
            StyleBox["a",
              ShowContents->False],
            (StyleForm[ #, ShowContents -> False]&)], "c"}], 
        RowBox[{"a", 
          TagBox[
            StyleBox["c",
              ShowContents->False],
            (StyleForm[ #, ShowContents -> False]&)]}]],
      Tensor[ T, {a, Void}, {Void, c}],
      Editable->False]], "Output"]
}, Open  ]],

Cell["\<\
We could use other symbols for a metric tensor. We could even have several \
metric tensors around at once. They would all have access to the \
MetricSimplify routine.\
\>", "Text"],

Cell[CellGroupData[{

Cell[BoxData[{
    \(\[Eta]uu[\[Alpha], \[Beta]] 
      Tdd[\[Beta], \[Gamma]]\), "\[IndentingNewLine]", 
    \(% // MetricSimplify[\[Eta]]\)}], "Input"],

Cell[BoxData[
    RowBox[{
      InterpretationBox[
        SubsuperscriptBox["T", \(\[Beta]  \[Gamma]\), 
          RowBox[{
            TagBox[
              StyleBox["\[Beta]",
                ShowContents->False],
              (StyleForm[ #, ShowContents -> False]&)], 
            TagBox[
              StyleBox["\[Gamma]",
                ShowContents->False],
              (StyleForm[ #, ShowContents -> False]&)]}]],
        Tensor[ T, {Void, Void}, {\[Beta], \[Gamma]}],
        Editable->False], " ", 
      InterpretationBox[
        SubsuperscriptBox["\[Eta]", 
          RowBox[{
            TagBox[
              StyleBox["\[Alpha]",
                ShowContents->False],
              (StyleForm[ #, ShowContents -> False]&)], 
            TagBox[
              StyleBox["\[Beta]",
                ShowContents->False],
              (
              StyleForm[ #, ShowContents -> 
                False]&)]}], \(\[Alpha]  \[Beta]\)],
        Tensor[ \[Eta], {\[Alpha], \[Beta]}, {Void, Void}],
        Editable->False]}]], "Output"],

Cell[BoxData[
    InterpretationBox[
      SubsuperscriptBox["T", 
        RowBox[{
          TagBox[
            StyleBox["\[Alpha]",
              ShowContents->False],
            (StyleForm[ #, ShowContents -> False]&)], "\[Gamma]"}], 
        RowBox[{"\[Alpha]", 
          TagBox[
            StyleBox["\[Gamma]",
              ShowContents->False],
            (StyleForm[ #, ShowContents -> False]&)]}]],
      Tensor[ T, {\[Alpha], Void}, {Void, \[Gamma]}],
      Editable->False]], "Output"]
}, Open  ]]
}, Open  ]],

Cell[TextData[Cell[BoxData[GridBox[{
        {
          ButtonBox[
            StyleBox["\[FirstPage]",
              "SR"],
            ButtonFunction:>FrontEndExecute[ {
                FrontEndToken[ 
                  FrontEnd`SelectedNotebook[ ], "ScrollPageFirst"]}],
            ButtonStyle->"SlideHyperlink",
            ButtonNote->"First Slide"], 
          ButtonBox[
            StyleBox["\[LeftPointer]",
              "SR"],
            ButtonFunction:>FrontEndExecute[ {
                FrontEndToken[ 
                  FrontEnd`SelectedNotebook[ ], "ScrollPagePrevious"]}],
            ButtonStyle->"SlideHyperlink",
            ButtonNote->"Previous Slide"], 
          ButtonBox[
            StyleBox["\[RightPointer]",
              "SR"],
            ButtonFunction:>FrontEndExecute[ {
                FrontEndToken[ 
                  FrontEnd`SelectedNotebook[ ], "ScrollPageNext"]}],
            ButtonStyle->"SlideHyperlink",
            ButtonNote->"Next Slide"], 
          ButtonBox[
            StyleBox["\[LastPage]",
              "SR"],
            ButtonFunction:>FrontEndExecute[ {
                FrontEndToken[ 
                  FrontEnd`SelectedNotebook[ ], "ScrollPageLast"]}],
            ButtonStyle->"SlideHyperlink"], " ", 
          ButtonBox[
            StyleBox[
              RowBox[{
                CounterBox["SlideShowNavigationBar"], \(\(\ \)\(of\)\(\ \)\), 
                
                
                CounterBox["SlideShowNavigationBar", {None, 
                  "SlideShowHeader", -1}]}],
              "SR"],
            ButtonFrame->"None"]}
        }]]]], "SlideShowNavigationBar",
  CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell[TextData[{
  StyleBox["Tensorial",
    FontSlant->"Italic"],
  " 4.0 - Flavored Indices (a)"
}], "Section"],

Cell["\<\
Indices may carry flavors. These can be used to associate them with \
particular coordinate systems or for other purposes.\
\>", "EmphasisText"],

Cell[BoxData[
    \(DeclareIndexFlavor[{red, Red}, {blue, Blue}, {rocket, 
        OverHat}]\)], "Input"],

Cell[CellGroupData[{

Cell[BoxData[{
    \(u \[Equal] uu[\[Alpha]] ed[\[Alpha]] // 
      ToFlavor[red]\), "\[IndentingNewLine]", 
    \(% // ToArrayValues[]\)}], "Input"],

Cell[BoxData[
    RowBox[{"u", "\[Equal]", 
      RowBox[{
        InterpretationBox[
          SubsuperscriptBox["e", 
            TagBox[
              StyleBox["\[Alpha]",
                FontColor->RGBColor[1, 0, 0]],
              (StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)], 
            TagBox[
              StyleBox[
                TagBox[
                  StyleBox["\[Alpha]",
                    FontColor->RGBColor[1, 0, 0]],
                  (StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)],
                ShowContents->False],
              (StyleForm[ #, ShowContents -> False]&)]],
          Tensor[ e, {Void}, {
            red[ \[Alpha]]}],
          Editable->False], " ", 
        InterpretationBox[
          SubsuperscriptBox["u", 
            TagBox[
              StyleBox[
                TagBox[
                  StyleBox["\[Alpha]",
                    FontColor->RGBColor[1, 0, 0]],
                  (StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)],
                ShowContents->False],
              (StyleForm[ #, ShowContents -> False]&)], 
            TagBox[
              StyleBox["\[Alpha]",
                FontColor->RGBColor[1, 0, 0]],
              (StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)]],
          Tensor[ u, {
            red[ \[Alpha]]}, {Void}],
          Editable->False]}]}]], "Output"],

Cell[BoxData[
    RowBox[{"u", "\[Equal]", 
      RowBox[{
        RowBox[{
          InterpretationBox[
            SubsuperscriptBox["e", 
              TagBox[
                StyleBox["t",
                  FontColor->RGBColor[1, 0, 0]],
                (StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)], 
              TagBox[
                StyleBox[
                  TagBox[
                    StyleBox["t",
                      FontColor->RGBColor[1, 0, 0]],
                    (StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)],
                  ShowContents->False],
                (StyleForm[ #, ShowContents -> False]&)]],
            Tensor[ e, {Void}, {
              red[ t]}],
            Editable->False], " ", 
          InterpretationBox[
            SubsuperscriptBox["u", 
              TagBox[
                StyleBox[
                  TagBox[
                    StyleBox["t",
                      FontColor->RGBColor[1, 0, 0]],
                    (StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)],
                  ShowContents->False],
                (StyleForm[ #, ShowContents -> False]&)], 
              TagBox[
                StyleBox["t",
                  FontColor->RGBColor[1, 0, 0]],
                (StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)]],
            Tensor[ u, {
              red[ t]}, {Void}],
            Editable->False]}], "+", 
        RowBox[{
          InterpretationBox[
            SubsuperscriptBox["e", 
              TagBox[
                StyleBox["x",
                  FontColor->RGBColor[1, 0, 0]],
                (StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)], 
              TagBox[
                StyleBox[
                  TagBox[
                    StyleBox["x",
                      FontColor->RGBColor[1, 0, 0]],
                    (StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)],
                  ShowContents->False],
                (StyleForm[ #, ShowContents -> False]&)]],
            Tensor[ e, {Void}, {
              red[ x]}],
            Editable->False], " ", 
          InterpretationBox[
            SubsuperscriptBox["u", 
              TagBox[
                StyleBox[
                  TagBox[
                    StyleBox["x",
                      FontColor->RGBColor[1, 0, 0]],
                    (StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)],
                  ShowContents->False],
                (StyleForm[ #, ShowContents -> False]&)], 
              TagBox[
                StyleBox["x",
                  FontColor->RGBColor[1, 0, 0]],
                (StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)]],
            Tensor[ u, {
              red[ x]}, {Void}],
            Editable->False]}], "+", 
        RowBox[{
          InterpretationBox[
            SubsuperscriptBox["e", 
              TagBox[
                StyleBox["y",
                  FontColor->RGBColor[1, 0, 0]],
                (StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)], 
              TagBox[
                StyleBox[
                  TagBox[
                    StyleBox["y",
                      FontColor->RGBColor[1, 0, 0]],
                    (StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)],
                  ShowContents->False],
                (StyleForm[ #, ShowContents -> False]&)]],
            Tensor[ e, {Void}, {
              red[ y]}],
            Editable->False], " ", 
          InterpretationBox[
            SubsuperscriptBox["u", 
              TagBox[
                StyleBox[
                  TagBox[
                    StyleBox["y",
                      FontColor->RGBColor[1, 0, 0]],
                    (StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)],
                  ShowContents->False],
                (StyleForm[ #, ShowContents -> False]&)], 
              TagBox[
                StyleBox["y",
                  FontColor->RGBColor[1, 0, 0]],
                (StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)]],
            Tensor[ u, {
              red[ y]}, {Void}],
            Editable->False]}], "+", 
        RowBox[{
          InterpretationBox[
            SubsuperscriptBox["e", 
              TagBox[
                StyleBox["z",
                  FontColor->RGBColor[1, 0, 0]],
                (StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)], 
              TagBox[
                StyleBox[
                  TagBox[
                    StyleBox["z",
                      FontColor->RGBColor[1, 0, 0]],
                    (StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)],
                  ShowContents->False],
                (StyleForm[ #, ShowContents -> False]&)]],
            Tensor[ e, {Void}, {
              red[ z]}],
            Editable->False], " ", 
          InterpretationBox[
            SubsuperscriptBox["u", 
              TagBox[
                StyleBox[
                  TagBox[
                    StyleBox["z",
                      FontColor->RGBColor[1, 0, 0]],
                    (StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)],
                  ShowContents->False],
                (StyleForm[ #, ShowContents -> False]&)], 
              TagBox[
                StyleBox["z",
                  FontColor->RGBColor[1, 0, 0]],
                (StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)]],
            Tensor[ u, {
              red[ z]}, {Void}],
            Editable->False]}]}]}]], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
    \(u \[Equal] uu[\[Alpha]] ed[\[Alpha]] // 
      ToFlavor[rocket]\), "\[IndentingNewLine]", 
    \(% // ToArrayValues[]\)}], "Input"],

Cell[BoxData[
    RowBox[{"u", "\[Equal]", 
      RowBox[{
        InterpretationBox[
          SubsuperscriptBox["e", \(\[Alpha]\&^\), 
            TagBox[
              StyleBox[\(\[Alpha]\&^\),
                ShowContents->False],
              (StyleForm[ #, ShowContents -> False]&)]],
          Tensor[ e, {Void}, {
            rocket[ \[Alpha]]}],
          Editable->False], " ", 
        InterpretationBox[
          SubsuperscriptBox["u", 
            TagBox[
              StyleBox[\(\[Alpha]\&^\),
                ShowContents->False],
              (StyleForm[ #, ShowContents -> False]&)], \(\[Alpha]\&^\)],
          Tensor[ u, {
            rocket[ \[Alpha]]}, {Void}],
          Editable->False]}]}]], "Output"],

Cell[BoxData[
    RowBox[{"u", "\[Equal]", 
      RowBox[{
        RowBox[{
          InterpretationBox[
            SubsuperscriptBox["e", \(t\&^\), 
              TagBox[
                StyleBox[\(t\&^\),
                  ShowContents->False],
                (StyleForm[ #, ShowContents -> False]&)]],
            Tensor[ e, {Void}, {
              rocket[ t]}],
            Editable->False], " ", 
          InterpretationBox[
            SubsuperscriptBox["u", 
              TagBox[
                StyleBox[\(t\&^\),
                  ShowContents->False],
                (StyleForm[ #, ShowContents -> False]&)], \(t\&^\)],
            Tensor[ u, {
              rocket[ t]}, {Void}],
            Editable->False]}], "+", 
        RowBox[{
          InterpretationBox[
            SubsuperscriptBox["e", \(x\&^\), 
              TagBox[
                StyleBox[\(x\&^\),
                  ShowContents->False],
                (StyleForm[ #, ShowContents -> False]&)]],
            Tensor[ e, {Void}, {
              rocket[ x]}],
            Editable->False], " ", 
          InterpretationBox[
            SubsuperscriptBox["u", 
              TagBox[
                StyleBox[\(x\&^\),
                  ShowContents->False],
                (StyleForm[ #, ShowContents -> False]&)], \(x\&^\)],
            Tensor[ u, {
              rocket[ x]}, {Void}],
            Editable->False]}], "+", 
        RowBox[{
          InterpretationBox[
            SubsuperscriptBox["e", \(y\&^\), 
              TagBox[
                StyleBox[\(y\&^\),
                  ShowContents->False],
                (StyleForm[ #, ShowContents -> False]&)]],
            Tensor[ e, {Void}, {
              rocket[ y]}],
            Editable->False], " ", 
          InterpretationBox[
            SubsuperscriptBox["u", 
              TagBox[
                StyleBox[\(y\&^\),
                  ShowContents->False],
                (StyleForm[ #, ShowContents -> False]&)], \(y\&^\)],
            Tensor[ u, {
              rocket[ y]}, {Void}],
            Editable->False]}], "+", 
        RowBox[{
          InterpretationBox[
            SubsuperscriptBox["e", \(z\&^\), 
              TagBox[
                StyleBox[\(z\&^\),
                  ShowContents->False],
                (StyleForm[ #, ShowContents -> False]&)]],
            Tensor[ e, {Void}, {
              rocket[ z]}],
            Editable->False], " ", 
          InterpretationBox[
            SubsuperscriptBox["u", 
              TagBox[
                StyleBox[\(z\&^\),
                  ShowContents->False],
                (StyleForm[ #, ShowContents -> False]&)], \(z\&^\)],
            Tensor[ u, {
              rocket[ z]}, {Void}],
            Editable->False]}]}]}]], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
    \(u \[Equal] uu[\[Alpha]] ed[\[Alpha]] // 
      ToFlavor[blue]\), "\[IndentingNewLine]", 
    \(% // ToArrayValues[]\)}], "Input"],

Cell[BoxData[
    RowBox[{"u", "\[Equal]", 
      RowBox[{
        InterpretationBox[
          SubsuperscriptBox["e", 
            TagBox[
              StyleBox["\[Alpha]",
                FontColor->RGBColor[0, 0, 1]],
              (StyleForm[ #, FontColor -> RGBColor[ 0, 0, 1]]&)], 
            TagBox[
              StyleBox[
                TagBox[
                  StyleBox["\[Alpha]",
                    FontColor->RGBColor[0, 0, 1]],
                  (StyleForm[ #, FontColor -> RGBColor[ 0, 0, 1]]&)],
                ShowContents->False],
              (StyleForm[ #, ShowContents -> False]&)]],
          Tensor[ e, {Void}, {
            blue[ \[Alpha]]}],
          Editable->False], " ", 
        InterpretationBox[
          SubsuperscriptBox["u", 
            TagBox[
              StyleBox[
                TagBox[
                  StyleBox["\[Alpha]",
                    FontColor->RGBColor[0, 0, 1]],
                  (StyleForm[ #, FontColor -> RGBColor[ 0, 0, 1]]&)],
                ShowContents->False],
              (StyleForm[ #, ShowContents -> False]&)], 
            TagBox[
              StyleBox["\[Alpha]",
                FontColor->RGBColor[0, 0, 1]],
              (StyleForm[ #, FontColor -> RGBColor[ 0, 0, 1]]&)]],
          Tensor[ u, {
            blue[ \[Alpha]]}, {Void}],
          Editable->False]}]}]], "Output"],

Cell[BoxData[
    RowBox[{"u", "\[Equal]", 
      RowBox[{
        RowBox[{
          InterpretationBox[
            SubsuperscriptBox["e", 
              TagBox[
                StyleBox["t",
                  FontColor->RGBColor[0, 0, 1]],
                (StyleForm[ #, FontColor -> RGBColor[ 0, 0, 1]]&)], 
              TagBox[
                StyleBox[
                  TagBox[
                    StyleBox["t",
                      FontColor->RGBColor[0, 0, 1]],
                    (StyleForm[ #, FontColor -> RGBColor[ 0, 0, 1]]&)],
                  ShowContents->False],
                (StyleForm[ #, ShowContents -> False]&)]],
            Tensor[ e, {Void}, {
              blue[ t]}],
            Editable->False], " ", 
          InterpretationBox[
            SubsuperscriptBox["u", 
              TagBox[
                StyleBox[
                  TagBox[
                    StyleBox["t",
                      FontColor->RGBColor[0, 0, 1]],
                    (StyleForm[ #, FontColor -> RGBColor[ 0, 0, 1]]&)],
                  ShowContents->False],
                (StyleForm[ #, ShowContents -> False]&)], 
              TagBox[
                StyleBox["t",
                  FontColor->RGBColor[0, 0, 1]],
                (StyleForm[ #, FontColor -> RGBColor[ 0, 0, 1]]&)]],
            Tensor[ u, {
              blue[ t]}, {Void}],
            Editable->False]}], "+", 
        RowBox[{
          InterpretationBox[
            SubsuperscriptBox["e", 
              TagBox[
                StyleBox["x",
                  FontColor->RGBColor[0, 0, 1]],
                (StyleForm[ #, FontColor -> RGBColor[ 0, 0, 1]]&)], 
              TagBox[
                StyleBox[
                  TagBox[
                    StyleBox["x",
                      FontColor->RGBColor[0, 0, 1]],
                    (StyleForm[ #, FontColor -> RGBColor[ 0, 0, 1]]&)],
                  ShowContents->False],
                (StyleForm[ #, ShowContents -> False]&)]],
            Tensor[ e, {Void}, {
              blue[ x]}],
            Editable->False], " ", 
          InterpretationBox[
            SubsuperscriptBox["u", 
              TagBox[
                StyleBox[
                  TagBox[
                    StyleBox["x",
                      FontColor->RGBColor[0, 0, 1]],
                    (StyleForm[ #, FontColor -> RGBColor[ 0, 0, 1]]&)],
                  ShowContents->False],
                (StyleForm[ #, ShowContents -> False]&)], 
              TagBox[
                StyleBox["x",
                  FontColor->RGBColor[0, 0, 1]],
                (StyleForm[ #, FontColor -> RGBColor[ 0, 0, 1]]&)]],
            Tensor[ u, {
              blue[ x]}, {Void}],
            Editable->False]}], "+", 
        RowBox[{
          InterpretationBox[
            SubsuperscriptBox["e", 
              TagBox[
                StyleBox["y",
                  FontColor->RGBColor[0, 0, 1]],
                (StyleForm[ #, FontColor -> RGBColor[ 0, 0, 1]]&)], 
              TagBox[
                StyleBox[
                  TagBox[
                    StyleBox["y",
                      FontColor->RGBColor[0, 0, 1]],
                    (StyleForm[ #, FontColor -> RGBColor[ 0, 0, 1]]&)],
                  ShowContents->False],
                (StyleForm[ #, ShowContents -> False]&)]],
            Tensor[ e, {Void}, {
              blue[ y]}],
            Editable->False], " ", 
          InterpretationBox[
            SubsuperscriptBox["u", 
              TagBox[
                StyleBox[
                  TagBox[
                    StyleBox["y",
                      FontColor->RGBColor[0, 0, 1]],
                    (StyleForm[ #, FontColor -> RGBColor[ 0, 0, 1]]&)],
                  ShowContents->False],
                (StyleForm[ #, ShowContents -> False]&)], 
              TagBox[
                StyleBox["y",
                  FontColor->RGBColor[0, 0, 1]],
                (StyleForm[ #, FontColor -> RGBColor[ 0, 0, 1]]&)]],
            Tensor[ u, {
              blue[ y]}, {Void}],
            Editable->False]}], "+", 
        RowBox[{
          InterpretationBox[
            SubsuperscriptBox["e", 
              TagBox[
                StyleBox["z",
                  FontColor->RGBColor[0, 0, 1]],
                (StyleForm[ #, FontColor -> RGBColor[ 0, 0, 1]]&)], 
              TagBox[
                StyleBox[
                  TagBox[
                    StyleBox["z",
                      FontColor->RGBColor[0, 0, 1]],
                    (StyleForm[ #, FontColor -> RGBColor[ 0, 0, 1]]&)],
                  ShowContents->False],
                (StyleForm[ #, ShowContents -> False]&)]],
            Tensor[ e, {Void}, {
              blue[ z]}],
            Editable->False], " ", 
          InterpretationBox[
            SubsuperscriptBox["u", 
              TagBox[
                StyleBox[
                  TagBox[
                    StyleBox["z",
                      FontColor->RGBColor[0, 0, 1]],
                    (StyleForm[ #, FontColor -> RGBColor[ 0, 0, 1]]&)],
                  ShowContents->False],
                (StyleForm[ #, ShowContents -> False]&)], 
              TagBox[
                StyleBox["z",
                  FontColor->RGBColor[0, 0, 1]],
                (StyleForm[ #, FontColor -> RGBColor[ 0, 0, 1]]&)]],
            Tensor[ u, {
              blue[ z]}, {Void}],
            Editable->False]}]}]}]], "Output"]
}, Open  ]]
}, Open  ]],

Cell[TextData[Cell[BoxData[GridBox[{
        {
          ButtonBox[
            StyleBox["\[FirstPage]",
              "SR"],
            ButtonFunction:>FrontEndExecute[ {
                FrontEndToken[ 
                  FrontEnd`SelectedNotebook[ ], "ScrollPageFirst"]}],
            ButtonStyle->"SlideHyperlink",
            ButtonNote->"First Slide"], 
          ButtonBox[
            StyleBox["\[LeftPointer]",
              "SR"],
            ButtonFunction:>FrontEndExecute[ {
                FrontEndToken[ 
                  FrontEnd`SelectedNotebook[ ], "ScrollPagePrevious"]}],
            ButtonStyle->"SlideHyperlink",
            ButtonNote->"Previous Slide"], 
          ButtonBox[
            StyleBox["\[RightPointer]",
              "SR"],
            ButtonFunction:>FrontEndExecute[ {
                FrontEndToken[ 
                  FrontEnd`SelectedNotebook[ ], "ScrollPageNext"]}],
            ButtonStyle->"SlideHyperlink",
            ButtonNote->"Next Slide"], 
          ButtonBox[
            StyleBox["\[LastPage]",
              "SR"],
            ButtonFunction:>FrontEndExecute[ {
                FrontEndToken[ 
                  FrontEnd`SelectedNotebook[ ], "ScrollPageLast"]}],
            ButtonStyle->"SlideHyperlink"], " ", 
          ButtonBox[
            StyleBox[
              RowBox[{
                CounterBox["SlideShowNavigationBar"], \(\(\ \)\(of\)\(\ \)\), 
                
                
                CounterBox["SlideShowNavigationBar", {None, 
                  "SlideShowHeader", -1}]}],
              "SR"],
            ButtonFrame->"None"]}
        }]]]], "SlideShowNavigationBar",
  CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell[TextData[{
  StyleBox["Tensorial",
    FontSlant->"Italic"],
  " 4.0 - Flavored Indices (b)"
}], "Section"],

Cell["\<\
The following implements a rotational change of basis in the plane.\
\>", "Text"],

Cell[BoxData[{\(DeclareBaseIndices[{1, 2}]\), "\[IndentingNewLine]", 
    RowBox[{"SetTensorValueRules", "[", 
      RowBox[{\(\[CapitalLambda]ud[red@a, b]\), ",", 
        RowBox[{"(", GridBox[{
              {\(Cos[\[Theta]]\), \(Sin[\[Theta]]\)},
              {\(-Sin[\[Theta]]\), \(Cos[\[Theta]]\)}
              }], ")"}]}], "]"}], "\[IndentingNewLine]", 
    RowBox[{"SetTensorValueRules", "[", 
      RowBox[{\(\[CapitalLambda]ud[a, red@b]\), ",", 
        RowBox[{"(", GridBox[{
              {\(Cos[\[Theta]]\), \(-Sin[\[Theta]]\)},
              {\(Sin[\[Theta]]\), \(Cos[\[Theta]]\)}
              }], ")"}]}], "]"}]}], "Input"],

Cell["\<\
The following transforms components of a vector, the basis vectors and \
components of a second order tensor T (next slide).\
\>", "Text"],

Cell["Components.", "Text"],

Cell[CellGroupData[{

Cell[BoxData[{
    \(vu[red@a] \[Equal] \[CapitalLambda]ud[red@a, b] 
        vu[b]\), "\[IndentingNewLine]", 
    \(\(% // ToArrayValues[]\) // TableForm\)}], "Input"],

Cell[BoxData[
    RowBox[{
      InterpretationBox[
        SubsuperscriptBox["v", 
          TagBox[
            StyleBox[
              TagBox[
                StyleBox["a",
                  FontColor->RGBColor[1, 0, 0]],
                (StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)],
              ShowContents->False],
            (StyleForm[ #, ShowContents -> False]&)], 
          TagBox[
            StyleBox["a",
              FontColor->RGBColor[1, 0, 0]],
            (StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)]],
        Tensor[ v, {
          red[ a]}, {Void}],
        Editable->False], "\[Equal]", 
      RowBox[{
        InterpretationBox[
          SubsuperscriptBox["v", 
            TagBox[
              StyleBox["b",
                ShowContents->False],
              (StyleForm[ #, ShowContents -> False]&)], "b"],
          Tensor[ v, {b}, {Void}],
          Editable->False], " ", 
        InterpretationBox[
          SubsuperscriptBox["\[CapitalLambda]", 
            RowBox[{
              TagBox[
                StyleBox[
                  TagBox[
                    StyleBox["a",
                      FontColor->RGBColor[1, 0, 0]],
                    (StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)],
                  ShowContents->False],
                (StyleForm[ #, ShowContents -> False]&)], "b"}], 
            RowBox[{
              TagBox[
                StyleBox["a",
                  FontColor->RGBColor[1, 0, 0]],
                (StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)], 
              TagBox[
                StyleBox["b",
                  ShowContents->False],
                (StyleForm[ #, ShowContents -> False]&)]}]],
          Tensor[ \[CapitalLambda], {
            red[ a], Void}, {Void, b}],
          Editable->False]}]}]], "Output"],

Cell[BoxData[
    InterpretationBox[GridBox[{
          {
            RowBox[{
              InterpretationBox[
                SubsuperscriptBox["v", 
                  TagBox[
                    StyleBox[
                      TagBox[
                        StyleBox["1",
                          FontColor->RGBColor[1, 0, 0]],
                        (StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)],
                      ShowContents->False],
                    (StyleForm[ #, ShowContents -> False]&)], 
                  TagBox[
                    StyleBox["1",
                      FontColor->RGBColor[1, 0, 0]],
                    (StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)]],
                Tensor[ v, {
                  red[ 1]}, {Void}],
                Editable->False], "\[Equal]", 
              RowBox[{
                RowBox[{\(Cos[\[Theta]]\), " ", 
                  InterpretationBox[
                    SubsuperscriptBox["v", 
                      TagBox[
                        StyleBox["1",
                          ShowContents->False],
                        (StyleForm[ #, ShowContents -> False]&)], "1"],
                    Tensor[ v, {1}, {Void}],
                    Editable->False]}], "+", 
                RowBox[{\(Sin[\[Theta]]\), " ", 
                  InterpretationBox[
                    SubsuperscriptBox["v", 
                      TagBox[
                        StyleBox["2",
                          ShowContents->False],
                        (StyleForm[ #, ShowContents -> False]&)], "2"],
                    Tensor[ v, {2}, {Void}],
                    Editable->False]}]}]}]},
          {
            RowBox[{
              InterpretationBox[
                SubsuperscriptBox["v", 
                  TagBox[
                    StyleBox[
                      TagBox[
                        StyleBox["2",
                          FontColor->RGBColor[1, 0, 0]],
                        (StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)],
                      ShowContents->False],
                    (StyleForm[ #, ShowContents -> False]&)], 
                  TagBox[
                    StyleBox["2",
                      FontColor->RGBColor[1, 0, 0]],
                    (StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)]],
                Tensor[ v, {
                  red[ 2]}, {Void}],
                Editable->False], "\[Equal]", 
              RowBox[{
                RowBox[{\(-Sin[\[Theta]]\), " ", 
                  InterpretationBox[
                    SubsuperscriptBox["v", 
                      TagBox[
                        StyleBox["1",
                          ShowContents->False],
                        (StyleForm[ #, ShowContents -> False]&)], "1"],
                    Tensor[ v, {1}, {Void}],
                    Editable->False]}], "+", 
                RowBox[{\(Cos[\[Theta]]\), " ", 
                  InterpretationBox[
                    SubsuperscriptBox["v", 
                      TagBox[
                        StyleBox["2",
                          ShowContents->False],
                        (StyleForm[ #, ShowContents -> False]&)], "2"],
                    Tensor[ v, {2}, {Void}],
                    Editable->False]}]}]}]}
          },
        RowSpacings->1,
        ColumnSpacings->3,
        RowAlignments->Baseline,
        ColumnAlignments->{Left}],
      TableForm[ {
        Equal[ 
          Tensor[ v, {
            red[ 1]}, {Void}], 
          Plus[ 
            Times[ 
              Cos[ \[Theta]], 
              Tensor[ v, {1}, {Void}]], 
            Times[ 
              Sin[ \[Theta]], 
              Tensor[ v, {2}, {Void}]]]], 
        Equal[ 
          Tensor[ v, {
            red[ 2]}, {Void}], 
          Plus[ 
            Times[ -1, 
              Sin[ \[Theta]], 
              Tensor[ v, {1}, {Void}]], 
            Times[ 
              Cos[ \[Theta]], 
              Tensor[ v, {2}, {Void}]]]]}]]], "Output"]
}, Open  ]],

Cell["Basis vectors.", "Text"],

Cell[CellGroupData[{

Cell[BoxData[{
    \(ed[red@b] \[Equal] \[CapitalLambda]ud[a, red@b] 
        ed[a]\), "\[IndentingNewLine]", 
    \(\(% // ToArrayValues[]\) // TableForm\)}], "Input"],

Cell[BoxData[
    RowBox[{
      InterpretationBox[
        SubsuperscriptBox["e", 
          TagBox[
            StyleBox["b",
              FontColor->RGBColor[1, 0, 0]],
            (StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)], 
          TagBox[
            StyleBox[
              TagBox[
                StyleBox["b",
                  FontColor->RGBColor[1, 0, 0]],
                (StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)],
              ShowContents->False],
            (StyleForm[ #, ShowContents -> False]&)]],
        Tensor[ e, {Void}, {
          red[ b]}],
        Editable->False], "\[Equal]", 
      RowBox[{
        InterpretationBox[
          SubsuperscriptBox["e", "a", 
            TagBox[
              StyleBox["a",
                ShowContents->False],
              (StyleForm[ #, ShowContents -> False]&)]],
          Tensor[ e, {Void}, {a}],
          Editable->False], " ", 
        InterpretationBox[
          SubsuperscriptBox["\[CapitalLambda]", 
            RowBox[{
              TagBox[
                StyleBox["a",
                  ShowContents->False],
                (StyleForm[ #, ShowContents -> False]&)], 
              TagBox[
                StyleBox["b",
                  FontColor->RGBColor[1, 0, 0]],
                (StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)]}], 
            RowBox[{"a", 
              TagBox[
                StyleBox[
                  TagBox[
                    StyleBox["b",
                      FontColor->RGBColor[1, 0, 0]],
                    (StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)],
                  ShowContents->False],
                (StyleForm[ #, ShowContents -> False]&)]}]],
          Tensor[ \[CapitalLambda], {a, Void}, {Void, 
            red[ b]}],
          Editable->False]}]}]], "Output"],

Cell[BoxData[
    InterpretationBox[GridBox[{
          {
            RowBox[{
              InterpretationBox[
                SubsuperscriptBox["e", 
                  TagBox[
                    StyleBox["1",
                      FontColor->RGBColor[1, 0, 0]],
                    (StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)], 
                  TagBox[
                    StyleBox[
                      TagBox[
                        StyleBox["1",
                          FontColor->RGBColor[1, 0, 0]],
                        (StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)],
                      ShowContents->False],
                    (StyleForm[ #, ShowContents -> False]&)]],
                Tensor[ e, {Void}, {
                  red[ 1]}],
                Editable->False], "\[Equal]", 
              RowBox[{
                RowBox[{\(Cos[\[Theta]]\), " ", 
                  InterpretationBox[
                    SubsuperscriptBox["e", "1", 
                      TagBox[
                        StyleBox["1",
                          ShowContents->False],
                        (StyleForm[ #, ShowContents -> False]&)]],
                    Tensor[ e, {Void}, {1}],
                    Editable->False]}], "+", 
                RowBox[{\(Sin[\[Theta]]\), " ", 
                  InterpretationBox[
                    SubsuperscriptBox["e", "2", 
                      TagBox[
                        StyleBox["2",
                          ShowContents->False],
                        (StyleForm[ #, ShowContents -> False]&)]],
                    Tensor[ e, {Void}, {2}],
                    Editable->False]}]}]}]},
          {
            RowBox[{
              InterpretationBox[
                SubsuperscriptBox["e", 
                  TagBox[
                    StyleBox["2",
                      FontColor->RGBColor[1, 0, 0]],
                    (StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)], 
                  TagBox[
                    StyleBox[
                      TagBox[
                        StyleBox["2",
                          FontColor->RGBColor[1, 0, 0]],
                        (StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)],
                      ShowContents->False],
                    (StyleForm[ #, ShowContents -> False]&)]],
                Tensor[ e, {Void}, {
                  red[ 2]}],
                Editable->False], "\[Equal]", 
              RowBox[{
                RowBox[{\(-Sin[\[Theta]]\), " ", 
                  InterpretationBox[
                    SubsuperscriptBox["e", "1", 
                      TagBox[
                        StyleBox["1",
                          ShowContents->False],
                        (StyleForm[ #, ShowContents -> False]&)]],
                    Tensor[ e, {Void}, {1}],
                    Editable->False]}], "+", 
                RowBox[{\(Cos[\[Theta]]\), " ", 
                  InterpretationBox[
                    SubsuperscriptBox["e", "2", 
                      TagBox[
                        StyleBox["2",
                          ShowContents->False],
                        (StyleForm[ #, ShowContents -> False]&)]],
                    Tensor[ e, {Void}, {2}],
                    Editable->False]}]}]}]}
          },
        RowSpacings->1,
        ColumnSpacings->3,
        RowAlignments->Baseline,
        ColumnAlignments->{Left}],
      TableForm[ {
        Equal[ 
          Tensor[ e, {Void}, {
            red[ 1]}], 
          Plus[ 
            Times[ 
              Cos[ \[Theta]], 
              Tensor[ e, {Void}, {1}]], 
            Times[ 
              Sin[ \[Theta]], 
              Tensor[ e, {Void}, {2}]]]], 
        Equal[ 
          Tensor[ e, {Void}, {
            red[ 2]}], 
          Plus[ 
            Times[ -1, 
              Sin[ \[Theta]], 
              Tensor[ e, {Void}, {1}]], 
            Times[ 
              Cos[ \[Theta]], 
              Tensor[ e, {Void}, {2}]]]]}]]], "Output"]
}, Open  ]]
}, Open  ]],

Cell[TextData[Cell[BoxData[GridBox[{
        {
          ButtonBox[
            StyleBox["\[FirstPage]",
              "SR"],
            ButtonFunction:>FrontEndExecute[ {
                FrontEndToken[ 
                  FrontEnd`SelectedNotebook[ ], "ScrollPageFirst"]}],
            ButtonStyle->"SlideHyperlink",
            ButtonNote->"First Slide"], 
          ButtonBox[
            StyleBox["\[LeftPointer]",
              "SR"],
            ButtonFunction:>FrontEndExecute[ {
                FrontEndToken[ 
                  FrontEnd`SelectedNotebook[ ], "ScrollPagePrevious"]}],
            ButtonStyle->"SlideHyperlink",
            ButtonNote->"Previous Slide"], 
          ButtonBox[
            StyleBox["\[RightPointer]",
              "SR"],
            ButtonFunction:>FrontEndExecute[ {
                FrontEndToken[ 
                  FrontEnd`SelectedNotebook[ ], "ScrollPageNext"]}],
            ButtonStyle->"SlideHyperlink",
            ButtonNote->"Next Slide"], 
          ButtonBox[
            StyleBox["\[LastPage]",
              "SR"],
            ButtonFunction:>FrontEndExecute[ {
                FrontEndToken[ 
                  FrontEnd`SelectedNotebook[ ], "ScrollPageLast"]}],
            ButtonStyle->"SlideHyperlink"], " ", 
          ButtonBox[
            StyleBox[
              RowBox[{
                CounterBox["SlideShowNavigationBar"], \(\(\ \)\(of\)\(\ \)\), 
                
                
                CounterBox["SlideShowNavigationBar", {None, 
                  "SlideShowHeader", -1}]}],
              "SR"],
            ButtonFrame->"None"]}
        }]]]], "SlideShowNavigationBar",
  CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell[TextData[{
  StyleBox["Tensorial",
    FontSlant->"Italic"],
  " 4.0 - Flavored Indices (c)"
}], "Section"],

Cell["\<\
Transformation of the components of a tensor under a rotation.\
\>", "Text"],

Cell[CellGroupData[{

Cell[BoxData[{
    \(Tud[red@a, 
        red@b] \[Equal] \[CapitalLambda]ud[red@a, c] \[CapitalLambda]ud[d, 
          red@b] Tud[c, d]\), "\[IndentingNewLine]", 
    \(\(\(Simplify[\(ToArrayValues[]\)[#]] &\) /@ %;\)\), \
"\[IndentingNewLine]", 
    \(Thread[Flatten /@ %] // TableForm\)}], "Input"],

Cell[BoxData[
    RowBox[{
      InterpretationBox[
        SubsuperscriptBox["T", 
          RowBox[{
            TagBox[
              StyleBox[
                TagBox[
                  StyleBox["a",
                    FontColor->RGBColor[1, 0, 0]],
                  (StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)],
                ShowContents->False],
              (StyleForm[ #, ShowContents -> False]&)], 
            TagBox[
              StyleBox["b",
                FontColor->RGBColor[1, 0, 0]],
              (StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)]}], 
          RowBox[{
            TagBox[
              StyleBox["a",
                FontColor->RGBColor[1, 0, 0]],
              (StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)], 
            TagBox[
              StyleBox[
                TagBox[
                  StyleBox["b",
                    FontColor->RGBColor[1, 0, 0]],
                  (StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)],
                ShowContents->False],
              (StyleForm[ #, ShowContents -> False]&)]}]],
        Tensor[ T, {
          red[ a], Void}, {Void, 
          red[ b]}],
        Editable->False], "\[Equal]", 
      RowBox[{
        InterpretationBox[
          SubsuperscriptBox["T", 
            RowBox[{
              TagBox[
                StyleBox["c",
                  ShowContents->False],
                (StyleForm[ #, ShowContents -> False]&)], "d"}], 
            RowBox[{"c", 
              TagBox[
                StyleBox["d",
                  ShowContents->False],
                (StyleForm[ #, ShowContents -> False]&)]}]],
          Tensor[ T, {c, Void}, {Void, d}],
          Editable->False], " ", 
        InterpretationBox[
          SubsuperscriptBox["\[CapitalLambda]", 
            RowBox[{
              TagBox[
                StyleBox["d",
                  ShowContents->False],
                (StyleForm[ #, ShowContents -> False]&)], 
              TagBox[
                StyleBox["b",
                  FontColor->RGBColor[1, 0, 0]],
                (StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)]}], 
            RowBox[{"d", 
              TagBox[
                StyleBox[
                  TagBox[
                    StyleBox["b",
                      FontColor->RGBColor[1, 0, 0]],
                    (StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)],
                  ShowContents->False],
                (StyleForm[ #, ShowContents -> False]&)]}]],
          Tensor[ \[CapitalLambda], {d, Void}, {Void, 
            red[ b]}],
          Editable->False], " ", 
        InterpretationBox[
          SubsuperscriptBox["\[CapitalLambda]", 
            RowBox[{
              TagBox[
                StyleBox[
                  TagBox[
                    StyleBox["a",
                      FontColor->RGBColor[1, 0, 0]],
                    (StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)],
                  ShowContents->False],
                (StyleForm[ #, ShowContents -> False]&)], "c"}], 
            RowBox[{
              TagBox[
                StyleBox["a",
                  FontColor->RGBColor[1, 0, 0]],
                (StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)], 
              TagBox[
                StyleBox["c",
                  ShowContents->False],
                (StyleForm[ #, ShowContents -> False]&)]}]],
          Tensor[ \[CapitalLambda], {
            red[ a], Void}, {Void, c}],
          Editable->False]}]}]], "Output"],

Cell[BoxData[
    InterpretationBox[GridBox[{
          {
            RowBox[{
              InterpretationBox[
                SubsuperscriptBox["T", 
                  RowBox[{
                    TagBox[
                      StyleBox[
                        TagBox[
                          StyleBox["1",
                            FontColor->RGBColor[1, 0, 0]],
                          (StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)],
                        ShowContents->False],
                      (StyleForm[ #, ShowContents -> False]&)], 
                    TagBox[
                      StyleBox["1",
                        FontColor->RGBColor[1, 0, 0]],
                      (StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)]}], 
                  RowBox[{
                    TagBox[
                      StyleBox["1",
                        FontColor->RGBColor[1, 0, 0]],
                      (StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)], 
                    TagBox[
                      StyleBox[
                        TagBox[
                          StyleBox["1",
                            FontColor->RGBColor[1, 0, 0]],
                          (StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)],
                        ShowContents->False],
                      (StyleForm[ #, ShowContents -> False]&)]}]],
                Tensor[ T, {
                  red[ 1], Void}, {Void, 
                  red[ 1]}],
                Editable->False], "\[Equal]", 
              RowBox[{
                RowBox[{\(Cos[\[Theta]]\^2\), " ", 
                  InterpretationBox[
                    SubsuperscriptBox["T", 
                      RowBox[{
                        TagBox[
                          StyleBox["1",
                            ShowContents->False],
                          (StyleForm[ #, ShowContents -> False]&)], "1"}], 
                      RowBox[{"1", 
                        TagBox[
                          StyleBox["1",
                            ShowContents->False],
                          (StyleForm[ #, ShowContents -> False]&)]}]],
                    Tensor[ T, {1, Void}, {Void, 1}],
                    Editable->False]}], "+", 
                RowBox[{\(Sin[\[Theta]]\), " ", 
                  RowBox[{"(", 
                    RowBox[{
                      RowBox[{\(Cos[\[Theta]]\), " ", 
                        InterpretationBox[
                          SubsuperscriptBox["T", 
                            RowBox[{
                              TagBox[
                                StyleBox["1",
                                  ShowContents->False],
                                (StyleForm[ #, ShowContents -> False]&)], 
                              "2"}], 
                            RowBox[{"1", 
                              TagBox[
                                StyleBox["2",
                                  ShowContents->False],
                                (StyleForm[ #, ShowContents -> False]&)]}]],
                          Tensor[ T, {1, Void}, {Void, 2}],
                          Editable->False]}], "+", 
                      RowBox[{\(Cos[\[Theta]]\), " ", 
                        InterpretationBox[
                          SubsuperscriptBox["T", 
                            RowBox[{
                              TagBox[
                                StyleBox["2",
                                  ShowContents->False],
                                (StyleForm[ #, ShowContents -> False]&)], 
                              "1"}], 
                            RowBox[{"2", 
                              TagBox[
                                StyleBox["1",
                                  ShowContents->False],
                                (StyleForm[ #, ShowContents -> False]&)]}]],
                          Tensor[ T, {2, Void}, {Void, 1}],
                          Editable->False]}], "+", 
                      RowBox[{\(Sin[\[Theta]]\), " ", 
                        InterpretationBox[
                          SubsuperscriptBox["T", 
                            RowBox[{
                              TagBox[
                                StyleBox["2",
                                  ShowContents->False],
                                (StyleForm[ #, ShowContents -> False]&)], 
                              "2"}], 
                            RowBox[{"2", 
                              TagBox[
                                StyleBox["2",
                                  ShowContents->False],
                                (StyleForm[ #, ShowContents -> False]&)]}]],
                          Tensor[ T, {2, Void}, {Void, 2}],
                          Editable->False]}]}], ")"}]}]}]}]},
          {
            RowBox[{
              InterpretationBox[
                SubsuperscriptBox["T", 
                  RowBox[{
                    TagBox[
                      StyleBox[
                        TagBox[
                          StyleBox["1",
                            FontColor->RGBColor[1, 0, 0]],
                          (StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)],
                        ShowContents->False],
                      (StyleForm[ #, ShowContents -> False]&)], 
                    TagBox[
                      StyleBox["2",
                        FontColor->RGBColor[1, 0, 0]],
                      (StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)]}], 
                  RowBox[{
                    TagBox[
                      StyleBox["1",
                        FontColor->RGBColor[1, 0, 0]],
                      (StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)], 
                    TagBox[
                      StyleBox[
                        TagBox[
                          StyleBox["2",
                            FontColor->RGBColor[1, 0, 0]],
                          (StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)],
                        ShowContents->False],
                      (StyleForm[ #, ShowContents -> False]&)]}]],
                Tensor[ T, {
                  red[ 1], Void}, {Void, 
                  red[ 2]}],
                Editable->False], "\[Equal]", 
              RowBox[{
                RowBox[{\(-Cos[\[Theta]]\), " ", \(Sin[\[Theta]]\), " ", 
                  InterpretationBox[
                    SubsuperscriptBox["T", 
                      RowBox[{
                        TagBox[
                          StyleBox["1",
                            ShowContents->False],
                          (StyleForm[ #, ShowContents -> False]&)], "1"}], 
                      RowBox[{"1", 
                        TagBox[
                          StyleBox["1",
                            ShowContents->False],
                          (StyleForm[ #, ShowContents -> False]&)]}]],
                    Tensor[ T, {1, Void}, {Void, 1}],
                    Editable->False]}], "+", 
                RowBox[{\(Cos[\[Theta]]\^2\), " ", 
                  InterpretationBox[
                    SubsuperscriptBox["T", 
                      RowBox[{
                        TagBox[
                          StyleBox["1",
                            ShowContents->False],
                          (StyleForm[ #, ShowContents -> False]&)], "2"}], 
                      RowBox[{"1", 
                        TagBox[
                          StyleBox["2",
                            ShowContents->False],
                          (StyleForm[ #, ShowContents -> False]&)]}]],
                    Tensor[ T, {1, Void}, {Void, 2}],
                    Editable->False]}], "+", 
                RowBox[{\(Sin[\[Theta]]\), " ", 
                  RowBox[{"(", 
                    RowBox[{
                      RowBox[{\(-Sin[\[Theta]]\), " ", 
                        InterpretationBox[
                          SubsuperscriptBox["T", 
                            RowBox[{
                              TagBox[
                                StyleBox["2",
                                  ShowContents->False],
                                (StyleForm[ #, ShowContents -> False]&)], 
                              "1"}], 
                            RowBox[{"2", 
                              TagBox[
                                StyleBox["1",
                                  ShowContents->False],
                                (StyleForm[ #, ShowContents -> False]&)]}]],
                          Tensor[ T, {2, Void}, {Void, 1}],
                          Editable->False]}], "+", 
                      RowBox[{\(Cos[\[Theta]]\), " ", 
                        InterpretationBox[
                          SubsuperscriptBox["T", 
                            RowBox[{
                              TagBox[
                                StyleBox["2",
                                  ShowContents->False],
                                (StyleForm[ #, ShowContents -> False]&)], 
                              "2"}], 
                            RowBox[{"2", 
                              TagBox[
                                StyleBox["2",
                                  ShowContents->False],
                                (StyleForm[ #, ShowContents -> False]&)]}]],
                          Tensor[ T, {2, Void}, {Void, 2}],
                          Editable->False]}]}], ")"}]}]}]}]},
          {
            RowBox[{
              InterpretationBox[
                SubsuperscriptBox["T", 
                  RowBox[{
                    TagBox[
                      StyleBox[
                        TagBox[
                          StyleBox["2",
                            FontColor->RGBColor[1, 0, 0]],
                          (StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)],
                        ShowContents->False],
                      (StyleForm[ #, ShowContents -> False]&)], 
                    TagBox[
                      StyleBox["1",
                        FontColor->RGBColor[1, 0, 0]],
                      (StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)]}], 
                  RowBox[{
                    TagBox[
                      StyleBox["2",
                        FontColor->RGBColor[1, 0, 0]],
                      (StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)], 
                    TagBox[
                      StyleBox[
                        TagBox[
                          StyleBox["1",
                            FontColor->RGBColor[1, 0, 0]],
                          (StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)],
                        ShowContents->False],
                      (StyleForm[ #, ShowContents -> False]&)]}]],
                Tensor[ T, {
                  red[ 2], Void}, {Void, 
                  red[ 1]}],
                Editable->False], "\[Equal]", 
              RowBox[{
                RowBox[{\(-Cos[\[Theta]]\), " ", \(Sin[\[Theta]]\), " ", 
                  InterpretationBox[
                    SubsuperscriptBox["T", 
                      RowBox[{
                        TagBox[
                          StyleBox["1",
                            ShowContents->False],
                          (StyleForm[ #, ShowContents -> False]&)], "1"}], 
                      RowBox[{"1", 
                        TagBox[
                          StyleBox["1",
                            ShowContents->False],
                          (StyleForm[ #, ShowContents -> False]&)]}]],
                    Tensor[ T, {1, Void}, {Void, 1}],
                    Editable->False]}], "-", 
                RowBox[{\(Sin[\[Theta]]\^2\), " ", 
                  InterpretationBox[
                    SubsuperscriptBox["T", 
                      RowBox[{
                        TagBox[
                          StyleBox["1",
                            ShowContents->False],
                          (StyleForm[ #, ShowContents -> False]&)], "2"}], 
                      RowBox[{"1", 
                        TagBox[
                          StyleBox["2",
                            ShowContents->False],
                          (StyleForm[ #, ShowContents -> False]&)]}]],
                    Tensor[ T, {1, Void}, {Void, 2}],
                    Editable->False]}], "+", 
                RowBox[{\(Cos[\[Theta]]\), " ", 
                  RowBox[{"(", 
                    RowBox[{
                      RowBox[{\(Cos[\[Theta]]\), " ", 
                        InterpretationBox[
                          SubsuperscriptBox["T", 
                            RowBox[{
                              TagBox[
                                StyleBox["2",
                                  ShowContents->False],
                                (StyleForm[ #, ShowContents -> False]&)], 
                              "1"}], 
                            RowBox[{"2", 
                              TagBox[
                                StyleBox["1",
                                  ShowContents->False],
                                (StyleForm[ #, ShowContents -> False]&)]}]],
                          Tensor[ T, {2, Void}, {Void, 1}],
                          Editable->False]}], "+", 
                      RowBox[{\(Sin[\[Theta]]\), " ", 
                        InterpretationBox[
                          SubsuperscriptBox["T", 
                            RowBox[{
                              TagBox[
                                StyleBox["2",
                                  ShowContents->False],
                                (StyleForm[ #, ShowContents -> False]&)], 
                              "2"}], 
                            RowBox[{"2", 
                              TagBox[
                                StyleBox["2",
                                  ShowContents->False],
                                (StyleForm[ #, ShowContents -> False]&)]}]],
                          Tensor[ T, {2, Void}, {Void, 2}],
                          Editable->False]}]}], ")"}]}]}]}]},
          {
            RowBox[{
              InterpretationBox[
                SubsuperscriptBox["T", 
                  RowBox[{
                    TagBox[
                      StyleBox[
                        TagBox[
                          StyleBox["2",
                            FontColor->RGBColor[1, 0, 0]],
                          (StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)],
                        ShowContents->False],
                      (StyleForm[ #, ShowContents -> False]&)], 
                    TagBox[
                      StyleBox["2",
                        FontColor->RGBColor[1, 0, 0]],
                      (StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)]}], 
                  RowBox[{
                    TagBox[
                      StyleBox["2",
                        FontColor->RGBColor[1, 0, 0]],
                      (StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)], 
                    TagBox[
                      StyleBox[
                        TagBox[
                          StyleBox["2",
                            FontColor->RGBColor[1, 0, 0]],
                          (StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)],
                        ShowContents->False],
                      (StyleForm[ #, ShowContents -> False]&)]}]],
                Tensor[ T, {
                  red[ 2], Void}, {Void, 
                  red[ 2]}],
                Editable->False], "\[Equal]", 
              RowBox[{
                RowBox[{\(Sin[\[Theta]]\^2\), " ", 
                  InterpretationBox[
                    SubsuperscriptBox["T", 
                      RowBox[{
                        TagBox[
                          StyleBox["1",
                            ShowContents->False],
                          (StyleForm[ #, ShowContents -> False]&)], "1"}], 
                      RowBox[{"1", 
                        TagBox[
                          StyleBox["1",
                            ShowContents->False],
                          (StyleForm[ #, ShowContents -> False]&)]}]],
                    Tensor[ T, {1, Void}, {Void, 1}],
                    Editable->False]}], "-", 
                RowBox[{\(Cos[\[Theta]]\), " ", 
                  RowBox[{"(", 
                    RowBox[{
                      RowBox[{\(Sin[\[Theta]]\), " ", 
                        InterpretationBox[
                          SubsuperscriptBox["T", 
                            RowBox[{
                              TagBox[
                                StyleBox["1",
                                  ShowContents->False],
                                (StyleForm[ #, ShowContents -> False]&)], 
                              "2"}], 
                            RowBox[{"1", 
                              TagBox[
                                StyleBox["2",
                                  ShowContents->False],
                                (StyleForm[ #, ShowContents -> False]&)]}]],
                          Tensor[ T, {1, Void}, {Void, 2}],
                          Editable->False]}], "+", 
                      RowBox[{\(Sin[\[Theta]]\), " ", 
                        InterpretationBox[
                          SubsuperscriptBox["T", 
                            RowBox[{
                              TagBox[
                                StyleBox["2",
                                  ShowContents->False],
                                (StyleForm[ #, ShowContents -> False]&)], 
                              "1"}], 
                            RowBox[{"2", 
                              TagBox[
                                StyleBox["1",
                                  ShowContents->False],
                                (StyleForm[ #, ShowContents -> False]&)]}]],
                          Tensor[ T, {2, Void}, {Void, 1}],
                          Editable->False]}], "-", 
                      RowBox[{\(Cos[\[Theta]]\), " ", 
                        InterpretationBox[
                          SubsuperscriptBox["T", 
                            RowBox[{
                              TagBox[
                                StyleBox["2",
                                  ShowContents->False],
                                (StyleForm[ #, ShowContents -> False]&)], 
                              "2"}], 
                            RowBox[{"2", 
                              TagBox[
                                StyleBox["2",
                                  ShowContents->False],
                                (StyleForm[ #, ShowContents -> False]&)]}]],
                          Tensor[ T, {2, Void}, {Void, 2}],
                          Editable->False]}]}], ")"}]}]}]}]}
          },
        RowSpacings->1,
        ColumnSpacings->3,
        RowAlignments->Baseline,
        ColumnAlignments->{Left}],
      TableForm[ {
        Equal[ 
          Tensor[ T, {
            red[ 1], Void}, {Void, 
            red[ 1]}], 
          Plus[ 
            Times[ 
              Power[ 
                Cos[ \[Theta]], 2], 
              Tensor[ T, {1, Void}, {Void, 1}]], 
            Times[ 
              Sin[ \[Theta]], 
              Plus[ 
                Times[ 
                  Cos[ \[Theta]], 
                  Tensor[ T, {1, Void}, {Void, 2}]], 
                Times[ 
                  Cos[ \[Theta]], 
                  Tensor[ T, {2, Void}, {Void, 1}]], 
                Times[ 
                  Sin[ \[Theta]], 
                  Tensor[ T, {2, Void}, {Void, 2}]]]]]], 
        Equal[ 
          Tensor[ T, {
            red[ 1], Void}, {Void, 
            red[ 2]}], 
          Plus[ 
            Times[ -1, 
              Cos[ \[Theta]], 
              Sin[ \[Theta]], 
              Tensor[ T, {1, Void}, {Void, 1}]], 
            Times[ 
              Power[ 
                Cos[ \[Theta]], 2], 
              Tensor[ T, {1, Void}, {Void, 2}]], 
            Times[ 
              Sin[ \[Theta]], 
              Plus[ 
                Times[ -1, 
                  Sin[ \[Theta]], 
                  Tensor[ T, {2, Void}, {Void, 1}]], 
                Times[ 
                  Cos[ \[Theta]], 
                  Tensor[ T, {2, Void}, {Void, 2}]]]]]], 
        Equal[ 
          Tensor[ T, {
            red[ 2], Void}, {Void, 
            red[ 1]}], 
          Plus[ 
            Times[ -1, 
              Cos[ \[Theta]], 
              Sin[ \[Theta]], 
              Tensor[ T, {1, Void}, {Void, 1}]], 
            Times[ -1, 
              Power[ 
                Sin[ \[Theta]], 2], 
              Tensor[ T, {1, Void}, {Void, 2}]], 
            Times[ 
              Cos[ \[Theta]], 
              Plus[ 
                Times[ 
                  Cos[ \[Theta]], 
                  Tensor[ T, {2, Void}, {Void, 1}]], 
                Times[ 
                  Sin[ \[Theta]], 
                  Tensor[ T, {2, Void}, {Void, 2}]]]]]], 
        Equal[ 
          Tensor[ T, {
            red[ 2], Void}, {Void, 
            red[ 2]}], 
          Plus[ 
            Times[ 
              Power[ 
                Sin[ \[Theta]], 2], 
              Tensor[ T, {1, Void}, {Void, 1}]], 
            Times[ -1, 
              Cos[ \[Theta]], 
              Plus[ 
                Times[ 
                  Sin[ \[Theta]], 
                  Tensor[ T, {1, Void}, {Void, 2}]], 
                Times[ 
                  Sin[ \[Theta]], 
                  Tensor[ T, {2, Void}, {Void, 1}]], 
                Times[ -1, 
                  Cos[ \[Theta]], 
                  Tensor[ T, {2, Void}, {Void, 2}]]]]]]}]]], "Output"]
}, Open  ]]
}, Open  ]],

Cell[TextData[Cell[BoxData[GridBox[{
        {
          ButtonBox[
            StyleBox["\[FirstPage]",
              "SR"],
            ButtonFunction:>FrontEndExecute[ {
                FrontEndToken[ 
                  FrontEnd`SelectedNotebook[ ], "ScrollPageFirst"]}],
            ButtonStyle->"SlideHyperlink",
            ButtonNote->"First Slide"], 
          ButtonBox[
            StyleBox["\[LeftPointer]",
              "SR"],
            ButtonFunction:>FrontEndExecute[ {
                FrontEndToken[ 
                  FrontEnd`SelectedNotebook[ ], "ScrollPagePrevious"]}],
            ButtonStyle->"SlideHyperlink",
            ButtonNote->"Previous Slide"], 
          ButtonBox[
            StyleBox["\[RightPointer]",
              "SR"],
            ButtonFunction:>FrontEndExecute[ {
                FrontEndToken[ 
                  FrontEnd`SelectedNotebook[ ], "ScrollPageNext"]}],
            ButtonStyle->"SlideHyperlink",
            ButtonNote->"Next Slide"], 
          ButtonBox[
            StyleBox["\[LastPage]",
              "SR"],
            ButtonFunction:>FrontEndExecute[ {
                FrontEndToken[ 
                  FrontEnd`SelectedNotebook[ ], "ScrollPageLast"]}],
            ButtonStyle->"SlideHyperlink"], " ", 
          ButtonBox[
            StyleBox[
              RowBox[{
                CounterBox["SlideShowNavigationBar"], \(\(\ \)\(of\)\(\ \)\), 
                
                
                CounterBox["SlideShowNavigationBar", {None, 
                  "SlideShowHeader", -1}]}],
              "SR"],
            ButtonFrame->"None"]}
        }]]]], "SlideShowNavigationBar",
  CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell[TextData[{
  StyleBox["Tensorial",
    FontSlant->"Italic"],
  " 4.0 - Multiple Base Indices (a)"
}], "Section"],

Cell["\<\
Individual base index sets and dimensions may be associated with different \
flavors of indices.\
\>", "EmphasisText"],

Cell[TextData[{
  "In the following we calculate and display the Christoffel symbols for \
spherical coordinates using plain indices ",
  Cell[BoxData[
      \({1, 2, 3}\)]],
  " as base indices."
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[{
    \(\(DeclareIndexFlavor[{red, Red}, {green, SapGreen}];\)\), "\n", 
    \(DeclareBaseIndices[{1, 2, 
        3}, {red, {r, \[Phi], \[Theta]}}, {green, {\[Theta], \[Phi]}}]\), "\n\
", 
    \(\(labs = {x, \[Delta], g, \[CapitalGamma]};\)\), "\n", 
    \(\((metric = 
          DiagonalMatrix[{1, r\^2, \(r\^2\) Sin[\[Phi]]\^2}] // 
            CoordinatesToTensors[{r, \[Phi], \[Theta]}])\) // 
      MatrixForm\), "\n", 
    \(\(MapThread[
        SetTensorValueRules[#1, #2] &, {{gdd[a, b], guu[a, b]}, {metric, 
            Inverse[metric]}}];\)\), "\n", 
    \(\(MapThread[
        SetTensorValueRules[#1, #2] &, {{\[CapitalGamma]ddd[a, b, 
              c], \[CapitalGamma]udd[a, b, c]}, 
          CalculateChristoffels[labs]}];\)\), "\n", 
    \(\(SelectedTensorRules[\[CapitalGamma], \ \[CapitalGamma]udd[_, b_, c_] /; 
            OrderedQ[{b, c}]] // UseCoordinates[{r, \[Phi], \[Theta]}]\) // 
      TableForm\)}], "Input"],

Cell[BoxData[
    TagBox[
      RowBox[{"(", "\[NoBreak]", GridBox[{
            {"1", "0", "0"},
            {"0", 
              TagBox[
                SuperscriptBox[
                  RowBox[{"(", 
                    InterpretationBox[
                      SubsuperscriptBox["x", 
                        TagBox[
                          StyleBox["1",
                            ShowContents->False],
                          (StyleForm[ #, ShowContents -> False]&)], "1"],
                      Tensor[ x, {1}, {Void}],
                      Editable->False], ")"}], "2"],
                DisplayForm], "0"},
            {"0", "0", 
              RowBox[{
                SuperscriptBox[
                  RowBox[{"Sin", "[", 
                    InterpretationBox[
                      SubsuperscriptBox["x", 
                        TagBox[
                          StyleBox["2",
                            ShowContents->False],
                          (StyleForm[ #, ShowContents -> False]&)], "2"],
                      Tensor[ x, {2}, {Void}],
                      Editable->False], "]"}], "2"], " ", 
                TagBox[
                  SuperscriptBox[
                    RowBox[{"(", 
                      InterpretationBox[
                        SubsuperscriptBox["x", 
                          TagBox[
                            StyleBox["1",
                              ShowContents->False],
                            (StyleForm[ #, ShowContents -> False]&)], "1"],
                        Tensor[ x, {1}, {Void}],
                        Editable->False], ")"}], "2"],
                  DisplayForm]}]}
            },
          RowSpacings->1,
          ColumnSpacings->1,
          ColumnAlignments->{Left}], "\[NoBreak]", ")"}],
      Function[ BoxForm`e$, 
        MatrixForm[ BoxForm`e$]]]], "Output"],

Cell[BoxData[
    InterpretationBox[GridBox[{
          {
            RowBox[{
              InterpretationBox[
                SubsuperscriptBox["\[CapitalGamma]", 
                  RowBox[{
                    TagBox[
                      StyleBox["1",
                        ShowContents->False],
                      (StyleForm[ #, ShowContents -> False]&)], "2", "2"}], 
                  RowBox[{"1", 
                    TagBox[
                      StyleBox["2",
                        ShowContents->False],
                      (StyleForm[ #, ShowContents -> False]&)], 
                    TagBox[
                      StyleBox["2",
                        ShowContents->False],
                      (StyleForm[ #, ShowContents -> False]&)]}]],
                Tensor[ \[CapitalGamma], {1, Void, Void}, {Void, 2, 2}],
                Editable->False], "\[Rule]", \(-r\)}]},
          {
            RowBox[{
              InterpretationBox[
                SubsuperscriptBox["\[CapitalGamma]", 
                  RowBox[{
                    TagBox[
                      StyleBox["1",
                        ShowContents->False],
                      (StyleForm[ #, ShowContents -> False]&)], "3", "3"}], 
                  RowBox[{"1", 
                    TagBox[
                      StyleBox["3",
                        ShowContents->False],
                      (StyleForm[ #, ShowContents -> False]&)], 
                    TagBox[
                      StyleBox["3",
                        ShowContents->False],
                      (StyleForm[ #, ShowContents -> False]&)]}]],
                Tensor[ \[CapitalGamma], {1, Void, Void}, {Void, 3, 3}],
                Editable->False], "\[Rule]", \(\(-r\)\ Sin[\[Phi]]\^2\)}]},
          {
            RowBox[{
              InterpretationBox[
                SubsuperscriptBox["\[CapitalGamma]", 
                  RowBox[{
                    TagBox[
                      StyleBox["2",
                        ShowContents->False],
                      (StyleForm[ #, ShowContents -> False]&)], "1", "2"}], 
                  RowBox[{"2", 
                    TagBox[
                      StyleBox["1",
                        ShowContents->False],
                      (StyleForm[ #, ShowContents -> False]&)], 
                    TagBox[
                      StyleBox["2",
                        ShowContents->False],
                      (StyleForm[ #, ShowContents -> False]&)]}]],
                Tensor[ \[CapitalGamma], {2, Void, Void}, {Void, 1, 2}],
                Editable->False], "\[Rule]", \(1\/r\)}]},
          {
            RowBox[{
              InterpretationBox[
                SubsuperscriptBox["\[CapitalGamma]", 
                  RowBox[{
                    TagBox[
                      StyleBox["2",
                        ShowContents->False],
                      (StyleForm[ #, ShowContents -> False]&)], "3", "3"}], 
                  RowBox[{"2", 
                    TagBox[
                      StyleBox["3",
                        ShowContents->False],
                      (StyleForm[ #, ShowContents -> False]&)], 
                    TagBox[
                      StyleBox["3",
                        ShowContents->False],
                      (StyleForm[ #, ShowContents -> False]&)]}]],
                Tensor[ \[CapitalGamma], {2, Void, Void}, {Void, 3, 3}],
                Editable->False], 
              "\[Rule]", \(\(-Cos[\[Phi]]\)\ Sin[\[Phi]]\)}]},
          {
            RowBox[{
              InterpretationBox[
                SubsuperscriptBox["\[CapitalGamma]", 
                  RowBox[{
                    TagBox[
                      StyleBox["3",
                        ShowContents->False],
                      (StyleForm[ #, ShowContents -> False]&)], "1", "3"}], 
                  RowBox[{"3", 
                    TagBox[
                      StyleBox["1",
                        ShowContents->False],
                      (StyleForm[ #, ShowContents -> False]&)], 
                    TagBox[
                      StyleBox["3",
                        ShowContents->False],
                      (StyleForm[ #, ShowContents -> False]&)]}]],
                Tensor[ \[CapitalGamma], {3, Void, Void}, {Void, 1, 3}],
                Editable->False], "\[Rule]", \(1\/r\)}]},
          {
            RowBox[{
              InterpretationBox[
                SubsuperscriptBox["\[CapitalGamma]", 
                  RowBox[{
                    TagBox[
                      StyleBox["3",
                        ShowContents->False],
                      (StyleForm[ #, ShowContents -> False]&)], "2", "3"}], 
                  RowBox[{"3", 
                    TagBox[
                      StyleBox["2",
                        ShowContents->False],
                      (StyleForm[ #, ShowContents -> False]&)], 
                    TagBox[
                      StyleBox["3",
                        ShowContents->False],
                      (StyleForm[ #, ShowContents -> False]&)]}]],
                Tensor[ \[CapitalGamma], {3, Void, Void}, {Void, 2, 3}],
                Editable->False], "\[Rule]", \(Cot[\[Phi]]\)}]}
          },
        RowSpacings->1,
        ColumnSpacings->3,
        RowAlignments->Baseline,
        ColumnAlignments->{Left}],
      TableForm[ {Tensor[ \[CapitalGamma], {1, Void, Void}, {Void, 2, 2}] -> 
        Times[ -1, r], 
        Tensor[ \[CapitalGamma], {1, Void, Void}, {Void, 3, 3}] -> 
        Times[ -1, r, 
          Power[ 
            Sin[ \[Phi]], 2]], 
        Tensor[ \[CapitalGamma], {2, Void, Void}, {Void, 1, 2}] -> Power[ 
        r, -1], Tensor[ \[CapitalGamma], {2, Void, Void}, {Void, 3, 3}] -> 
        Times[ -1, 
          Cos[ \[Phi]], 
          Sin[ \[Phi]]], 
        Tensor[ \[CapitalGamma], {3, Void, Void}, {Void, 1, 3}] -> Power[ 
        r, -1], Tensor[ \[CapitalGamma], {3, Void, Void}, {Void, 2, 3}] -> 
        Cot[ \[Phi]]}]]], "Output"]
}, Open  ]]
}, Open  ]],

Cell[TextData[Cell[BoxData[GridBox[{
        {
          ButtonBox[
            StyleBox["\[FirstPage]",
              "SR"],
            ButtonFunction:>FrontEndExecute[ {
                FrontEndToken[ 
                  FrontEnd`SelectedNotebook[ ], "ScrollPageFirst"]}],
            ButtonStyle->"SlideHyperlink",
            ButtonNote->"First Slide"], 
          ButtonBox[
            StyleBox["\[LeftPointer]",
              "SR"],
            ButtonFunction:>FrontEndExecute[ {
                FrontEndToken[ 
                  FrontEnd`SelectedNotebook[ ], "ScrollPagePrevious"]}],
            ButtonStyle->"SlideHyperlink",
            ButtonNote->"Previous Slide"], 
          ButtonBox[
            StyleBox["\[RightPointer]",
              "SR"],
            ButtonFunction:>FrontEndExecute[ {
                FrontEndToken[ 
                  FrontEnd`SelectedNotebook[ ], "ScrollPageNext"]}],
            ButtonStyle->"SlideHyperlink",
            ButtonNote->"Next Slide"], 
          ButtonBox[
            StyleBox["\[LastPage]",
              "SR"],
            ButtonFunction:>FrontEndExecute[ {
                FrontEndToken[ 
                  FrontEnd`SelectedNotebook[ ], "ScrollPageLast"]}],
            ButtonStyle->"SlideHyperlink"], " ", 
          ButtonBox[
            StyleBox[
              RowBox[{
                CounterBox["SlideShowNavigationBar"], \(\(\ \)\(of\)\(\ \)\), 
                
                
                CounterBox["SlideShowNavigationBar", {None, 
                  "SlideShowHeader", -1}]}],
              "SR"],
            ButtonFrame->"None"]}
        }]]]], "SlideShowNavigationBar",
  CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell[TextData[{
  StyleBox["Tensorial",
    FontSlant->"Italic"],
  " 4.0 - Multiple Base Indices (b)"
}], "Section"],

Cell[TextData[{
  "This does the same using red indices and base indices ",
  Cell[BoxData[
      \({r, \[Phi], \[Theta]}\)]]
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[{
    \(\((metric = 
          DiagonalMatrix[{1, r\^2, \(r\^2\) Sin[\[Phi]]\^2}] // 
            CoordinatesToTensors[{r, \[Phi], \[Theta]}, x, red])\) // 
      MatrixForm\), "\n", 
    \(\(MapThread[
        SetTensorValueRules[#1, #2] &, {{gdd[a, b], guu[a, b]} // 
            ToFlavor[red], {metric, Inverse[metric]}}];\)\), "\n", 
    \(\(MapThread[
        SetTensorValueRules[#1, #2] &, {{\[CapitalGamma]ddd[a, b, 
                c], \[CapitalGamma]udd[a, b, c]} // ToFlavor[red], 
          CalculateChristoffels[labs, red]}];\)\), "\n", 
    \(\(SelectedTensorRules[\[CapitalGamma], \ \[CapitalGamma]udd[red[_], b_, 
              c_] /; OrderedQ[{b, c}]] // 
        UseCoordinates[{r, \[Phi], \[Theta]}, x, red]\) // 
      TableForm\)}], "Input"],

Cell[BoxData[
    TagBox[
      RowBox[{"(", "\[NoBreak]", GridBox[{
            {"1", "0", "0"},
            {"0", 
              TagBox[
                SuperscriptBox[
                  RowBox[{"(", 
                    InterpretationBox[
                      SubsuperscriptBox["x", 
                        TagBox[
                          StyleBox[
                            TagBox[
                              StyleBox["r",
                                FontColor->RGBColor[1, 0, 0]],
                              (
                              StyleForm[ #, FontColor -> RGBColor[ 
                                1, 0, 0]]&)],
                            ShowContents->False],
                          (StyleForm[ #, ShowContents -> False]&)], 
                        TagBox[
                          StyleBox["r",
                            FontColor->RGBColor[1, 0, 0]],
                          (StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)]],
                      
                      Tensor[ x, {
                        red[ r]}, {Void}],
                      Editable->False], ")"}], "2"],
                DisplayForm], "0"},
            {"0", "0", 
              RowBox[{
                SuperscriptBox[
                  RowBox[{"Sin", "[", 
                    InterpretationBox[
                      SubsuperscriptBox["x", 
                        TagBox[
                          StyleBox[
                            TagBox[
                              StyleBox["\[Phi]",
                                FontColor->RGBColor[1, 0, 0]],
                              (
                              StyleForm[ #, FontColor -> RGBColor[ 
                                1, 0, 0]]&)],
                            ShowContents->False],
                          (StyleForm[ #, ShowContents -> False]&)], 
                        TagBox[
                          StyleBox["\[Phi]",
                            FontColor->RGBColor[1, 0, 0]],
                          (StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)]],
                      
                      Tensor[ x, {
                        red[ \[Phi]]}, {Void}],
                      Editable->False], "]"}], "2"], " ", 
                TagBox[
                  SuperscriptBox[
                    RowBox[{"(", 
                      InterpretationBox[
                        SubsuperscriptBox["x", 
                          TagBox[
                            StyleBox[
                              TagBox[
                                StyleBox["r",
                                  FontColor->RGBColor[1, 0, 0]],
                                (
                                StyleForm[ #, FontColor -> RGBColor[ 
                                  1, 0, 0]]&)],
                              ShowContents->False],
                            (StyleForm[ #, ShowContents -> False]&)], 
                          TagBox[
                            StyleBox["r",
                              FontColor->RGBColor[1, 0, 0]],
                            (
                            StyleForm[ #, FontColor -> RGBColor[ 
                              1, 0, 0]]&)]],
                        Tensor[ x, {
                          red[ r]}, {Void}],
                        Editable->False], ")"}], "2"],
                  DisplayForm]}]}
            },
          RowSpacings->1,
          ColumnSpacings->1,
          ColumnAlignments->{Left}], "\[NoBreak]", ")"}],
      Function[ BoxForm`e$, 
        MatrixForm[ BoxForm`e$]]]], "Output"],

Cell[BoxData[
    InterpretationBox[GridBox[{
          {
            RowBox[{
              InterpretationBox[
                SubsuperscriptBox["\[CapitalGamma]", 
                  RowBox[{
                    TagBox[
                      StyleBox[
                        TagBox[
                          StyleBox["r",
                            FontColor->RGBColor[1, 0, 0]],
                          (StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)],
                        ShowContents->False],
                      (StyleForm[ #, ShowContents -> False]&)], 
                    TagBox[
                      StyleBox["\[Phi]",
                        FontColor->RGBColor[1, 0, 0]],
                      (StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)], 
                    TagBox[
                      StyleBox["\[Phi]",
                        FontColor->RGBColor[1, 0, 0]],
                      (StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)]}], 
                  RowBox[{
                    TagBox[
                      StyleBox["r",
                        FontColor->RGBColor[1, 0, 0]],
                      (StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)], 
                    TagBox[
                      StyleBox[
                        TagBox[
                          StyleBox["\[Phi]",
                            FontColor->RGBColor[1, 0, 0]],
                          (StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)],
                        ShowContents->False],
                      (StyleForm[ #, ShowContents -> False]&)], 
                    TagBox[
                      StyleBox[
                        TagBox[
                          StyleBox["\[Phi]",
                            FontColor->RGBColor[1, 0, 0]],
                          (StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)],
                        ShowContents->False],
                      (StyleForm[ #, ShowContents -> False]&)]}]],
                Tensor[ \[CapitalGamma], {
                  red[ r], Void, Void}, {Void, 
                  red[ \[Phi]], 
                  red[ \[Phi]]}],
                Editable->False], "\[Rule]", \(-r\)}]},
          {
            RowBox[{
              InterpretationBox[
                SubsuperscriptBox["\[CapitalGamma]", 
                  RowBox[{
                    TagBox[
                      StyleBox[
                        TagBox[
                          StyleBox["r",
                            FontColor->RGBColor[1, 0, 0]],
                          (StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)],
                        ShowContents->False],
                      (StyleForm[ #, ShowContents -> False]&)], 
                    TagBox[
                      StyleBox["\[Theta]",
                        FontColor->RGBColor[1, 0, 0]],
                      (StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)], 
                    TagBox[
                      StyleBox["\[Theta]",
                        FontColor->RGBColor[1, 0, 0]],
                      (StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)]}], 
                  RowBox[{
                    TagBox[
                      StyleBox["r",
                        FontColor->RGBColor[1, 0, 0]],
                      (StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)], 
                    TagBox[
                      StyleBox[
                        TagBox[
                          StyleBox["\[Theta]",
                            FontColor->RGBColor[1, 0, 0]],
                          (StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)],
                        ShowContents->False],
                      (StyleForm[ #, ShowContents -> False]&)], 
                    TagBox[
                      StyleBox[
                        TagBox[
                          StyleBox["\[Theta]",
                            FontColor->RGBColor[1, 0, 0]],
                          (StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)],
                        ShowContents->False],
                      (StyleForm[ #, ShowContents -> False]&)]}]],
                Tensor[ \[CapitalGamma], {
                  red[ r], Void, Void}, {Void, 
                  red[ \[Theta]], 
                  red[ \[Theta]]}],
                Editable->False], "\[Rule]", \(\(-r\)\ Sin[\[Phi]]\^2\)}]},
          {
            RowBox[{
              InterpretationBox[
                SubsuperscriptBox["\[CapitalGamma]", 
                  RowBox[{
                    TagBox[
                      StyleBox[
                        TagBox[
                          StyleBox["\[Phi]",
                            FontColor->RGBColor[1, 0, 0]],
                          (StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)],
                        ShowContents->False],
                      (StyleForm[ #, ShowContents -> False]&)], 
                    TagBox[
                      StyleBox["r",
                        FontColor->RGBColor[1, 0, 0]],
                      (StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)], 
                    TagBox[
                      StyleBox["\[Phi]",
                        FontColor->RGBColor[1, 0, 0]],
                      (StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)]}], 
                  RowBox[{
                    TagBox[
                      StyleBox["\[Phi]",
                        FontColor->RGBColor[1, 0, 0]],
                      (StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)], 
                    TagBox[
                      StyleBox[
                        TagBox[
                          StyleBox["r",
                            FontColor->RGBColor[1, 0, 0]],
                          (StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)],
                        ShowContents->False],
                      (StyleForm[ #, ShowContents -> False]&)], 
                    TagBox[
                      StyleBox[
                        TagBox[
                          StyleBox["\[Phi]",
                            FontColor->RGBColor[1, 0, 0]],
                          (StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)],
                        ShowContents->False],
                      (StyleForm[ #, ShowContents -> False]&)]}]],
                Tensor[ \[CapitalGamma], {
                  red[ \[Phi]], Void, Void}, {Void, 
                  red[ r], 
                  red[ \[Phi]]}],
                Editable->False], "\[Rule]", \(1\/r\)}]},
          {
            RowBox[{
              InterpretationBox[
                SubsuperscriptBox["\[CapitalGamma]", 
                  RowBox[{
                    TagBox[
                      StyleBox[
                        TagBox[
                          StyleBox["\[Phi]",
                            FontColor->RGBColor[1, 0, 0]],
                          (StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)],
                        ShowContents->False],
                      (StyleForm[ #, ShowContents -> False]&)], 
                    TagBox[
                      StyleBox["\[Theta]",
                        FontColor->RGBColor[1, 0, 0]],
                      (StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)], 
                    TagBox[
                      StyleBox["\[Theta]",
                        FontColor->RGBColor[1, 0, 0]],
                      (StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)]}], 
                  RowBox[{
                    TagBox[
                      StyleBox["\[Phi]",
                        FontColor->RGBColor[1, 0, 0]],
                      (StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)], 
                    TagBox[
                      StyleBox[
                        TagBox[
                          StyleBox["\[Theta]",
                            FontColor->RGBColor[1, 0, 0]],
                          (StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)],
                        ShowContents->False],
                      (StyleForm[ #, ShowContents -> False]&)], 
                    TagBox[
                      StyleBox[
                        TagBox[
                          StyleBox["\[Theta]",
                            FontColor->RGBColor[1, 0, 0]],
                          (StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)],
                        ShowContents->False],
                      (StyleForm[ #, ShowContents -> False]&)]}]],
                Tensor[ \[CapitalGamma], {
                  red[ \[Phi]], Void, Void}, {Void, 
                  red[ \[Theta]], 
                  red[ \[Theta]]}],
                Editable->False], 
              "\[Rule]", \(\(-Cos[\[Phi]]\)\ Sin[\[Phi]]\)}]},
          {
            RowBox[{
              InterpretationBox[
                SubsuperscriptBox["\[CapitalGamma]", 
                  RowBox[{
                    TagBox[
                      StyleBox[
                        TagBox[
                          StyleBox["\[Theta]",
                            FontColor->RGBColor[1, 0, 0]],
                          (StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)],
                        ShowContents->False],
                      (StyleForm[ #, ShowContents -> False]&)], 
                    TagBox[
                      StyleBox["r",
                        FontColor->RGBColor[1, 0, 0]],
                      (StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)], 
                    TagBox[
                      StyleBox["\[Theta]",
                        FontColor->RGBColor[1, 0, 0]],
                      (StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)]}], 
                  RowBox[{
                    TagBox[
                      StyleBox["\[Theta]",
                        FontColor->RGBColor[1, 0, 0]],
                      (StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)], 
                    TagBox[
                      StyleBox[
                        TagBox[
                          StyleBox["r",
                            FontColor->RGBColor[1, 0, 0]],
                          (StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)],
                        ShowContents->False],
                      (StyleForm[ #, ShowContents -> False]&)], 
                    TagBox[
                      StyleBox[
                        TagBox[
                          StyleBox["\[Theta]",
                            FontColor->RGBColor[1, 0, 0]],
                          (StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)],
                        ShowContents->False],
                      (StyleForm[ #, ShowContents -> False]&)]}]],
                Tensor[ \[CapitalGamma], {
                  red[ \[Theta]], Void, Void}, {Void, 
                  red[ r], 
                  red[ \[Theta]]}],
                Editable->False], "\[Rule]", \(1\/r\)}]},
          {
            RowBox[{
              InterpretationBox[
                SubsuperscriptBox["\[CapitalGamma]", 
                  RowBox[{
                    TagBox[
                      StyleBox[
                        TagBox[
                          StyleBox["\[Theta]",
                            FontColor->RGBColor[1, 0, 0]],
                          (StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)],
                        ShowContents->False],
                      (StyleForm[ #, ShowContents -> False]&)], 
                    TagBox[
                      StyleBox["\[Theta]",
                        FontColor->RGBColor[1, 0, 0]],
                      (StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)], 
                    TagBox[
                      StyleBox["\[Phi]",
                        FontColor->RGBColor[1, 0, 0]],
                      (StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)]}], 
                  RowBox[{
                    TagBox[
                      StyleBox["\[Theta]",
                        FontColor->RGBColor[1, 0, 0]],
                      (StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)], 
                    TagBox[
                      StyleBox[
                        TagBox[
                          StyleBox["\[Theta]",
                            FontColor->RGBColor[1, 0, 0]],
                          (StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)],
                        ShowContents->False],
                      (StyleForm[ #, ShowContents -> False]&)], 
                    TagBox[
                      StyleBox[
                        TagBox[
                          StyleBox["\[Phi]",
                            FontColor->RGBColor[1, 0, 0]],
                          (StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)],
                        ShowContents->False],
                      (StyleForm[ #, ShowContents -> False]&)]}]],
                Tensor[ \[CapitalGamma], {
                  red[ \[Theta]], Void, Void}, {Void, 
                  red[ \[Theta]], 
                  red[ \[Phi]]}],
                Editable->False], "\[Rule]", \(Cot[\[Phi]]\)}]}
          },
        RowSpacings->1,
        ColumnSpacings->3,
        RowAlignments->Baseline,
        ColumnAlignments->{Left}],
      TableForm[ {Tensor[ \[CapitalGamma], {
          red[ r], Void, Void}, {Void, 
          red[ \[Phi]], 
          red[ \[Phi]]}] -> Times[ -1, r], Tensor[ \[CapitalGamma], {
          red[ r], Void, Void}, {Void, 
          red[ \[Theta]], 
          red[ \[Theta]]}] -> Times[ -1, r, 
          Power[ 
            Sin[ \[Phi]], 2]], Tensor[ \[CapitalGamma], {
          red[ \[Phi]], Void, Void}, {Void, 
          red[ r], 
          red[ \[Phi]]}] -> Power[ r, -1], Tensor[ \[CapitalGamma], {
          red[ \[Phi]], Void, Void}, {Void, 
          red[ \[Theta]], 
          red[ \[Theta]]}] -> Times[ -1, 
          Cos[ \[Phi]], 
          Sin[ \[Phi]]], Tensor[ \[CapitalGamma], {
          red[ \[Theta]], Void, Void}, {Void, 
          red[ r], 
          red[ \[Theta]]}] -> Power[ r, -1], Tensor[ \[CapitalGamma], {
          red[ \[Theta]], Void, Void}, {Void, 
          red[ \[Theta]], 
          red[ \[Phi]]}] -> Cot[ \[Phi]]}]]], "Output"]
}, Open  ]]
}, Open  ]],

Cell[TextData[Cell[BoxData[GridBox[{
        {
          ButtonBox[
            StyleBox["\[FirstPage]",
              "SR"],
            ButtonFunction:>FrontEndExecute[ {
                FrontEndToken[ 
                  FrontEnd`SelectedNotebook[ ], "ScrollPageFirst"]}],
            ButtonStyle->"SlideHyperlink",
            ButtonNote->"First Slide"], 
          ButtonBox[
            StyleBox["\[LeftPointer]",
              "SR"],
            ButtonFunction:>FrontEndExecute[ {
                FrontEndToken[ 
                  FrontEnd`SelectedNotebook[ ], "ScrollPagePrevious"]}],
            ButtonStyle->"SlideHyperlink",
            ButtonNote->"Previous Slide"], 
          ButtonBox[
            StyleBox["\[RightPointer]",
              "SR"],
            ButtonFunction:>FrontEndExecute[ {
                FrontEndToken[ 
                  FrontEnd`SelectedNotebook[ ], "ScrollPageNext"]}],
            ButtonStyle->"SlideHyperlink",
            ButtonNote->"Next Slide"], 
          ButtonBox[
            StyleBox["\[LastPage]",
              "SR"],
            ButtonFunction:>FrontEndExecute[ {
                FrontEndToken[ 
                  FrontEnd`SelectedNotebook[ ], "ScrollPageLast"]}],
            ButtonStyle->"SlideHyperlink"], " ", 
          ButtonBox[
            StyleBox[
              RowBox[{
                CounterBox["SlideShowNavigationBar"], \(\(\ \)\(of\)\(\ \)\), 
                
                
                CounterBox["SlideShowNavigationBar", {None, 
                  "SlideShowHeader", -1}]}],
              "SR"],
            ButtonFrame->"None"]}
        }]]]], "SlideShowNavigationBar",
  CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell[TextData[{
  StyleBox["Tensorial",
    FontSlant->"Italic"],
  " 4.0 - Multiple Base Indices (c)"
}], "Section"],

Cell[TextData[{
  "The following calculates the Christoffel symbols for the surface of a \
sphere of radius a. The green flavor is used with base indices ",
  Cell[BoxData[
      \({\[Theta], \[Phi]}\)]],
  ". This is two dimensional."
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[{
    \(\(SetAttributes[a, Constant];\)\), "\n", 
    \(\((metric = 
          DiagonalMatrix[{a\^2, \(a\^2\) Sin[\[Theta]]\^2}] // 
            CoordinatesToTensors[{\[Theta], \[Phi]}, x, green])\) // 
      MatrixForm\), "\n", 
    \(\(MapThread[
        SetTensorValueRules[#1, #2] &, {{gdd[a, b], guu[a, b]} // 
            ToFlavor[green], {metric, Inverse[metric]}}];\)\), "\n", 
    \(\(MapThread[
        SetTensorValueRules[#1, #2] &, {{\[CapitalGamma]ddd[a, b, 
                c], \[CapitalGamma]udd[a, b, c]} // ToFlavor[green], 
          CalculateChristoffels[labs, green]}];\)\), "\n", 
    \(\(SelectedTensorRules[\[CapitalGamma], \ \[CapitalGamma]udd[green[_], 
              b_, c_] /; OrderedQ[{b, c}]] // 
        UseCoordinates[{\[Theta], \[Phi]}, x, green]\) // 
      TableForm\)}], "Input"],

Cell[BoxData[
    TagBox[
      RowBox[{"(", "\[NoBreak]", GridBox[{
            {\(a\^2\), "0"},
            {"0", 
              RowBox[{\(a\^2\), " ", 
                SuperscriptBox[
                  RowBox[{"Sin", "[", 
                    InterpretationBox[
                      SubsuperscriptBox["x", 
                        TagBox[
                          StyleBox[
                            TagBox[
                              StyleBox["\[Theta]",
                                FontColor->RGBColor[0.18999, 0.500008, 
                                0.0800031]],
                              (
                              StyleForm[ #, FontColor -> 
                                RGBColor[ .189993, .5, \
.080004000000000006]]&)],
                            ShowContents->False],
                          (StyleForm[ #, ShowContents -> False]&)], 
                        TagBox[
                          StyleBox["\[Theta]",
                            FontColor->RGBColor[0.18999, 0.500008, 
                            0.0800031]],
                          (
                          StyleForm[ #, FontColor -> 
                            RGBColor[ .189993, .5, .080004000000000006]]&)]],
                      Tensor[ x, {
                        green[ \[Theta]]}, {Void}],
                      Editable->False], "]"}], "2"]}]}
            },
          RowSpacings->1,
          ColumnSpacings->1,
          ColumnAlignments->{Left}], "\[NoBreak]", ")"}],
      Function[ BoxForm`e$, 
        MatrixForm[ BoxForm`e$]]]], "Output"],

Cell[BoxData[
    InterpretationBox[GridBox[{
          {
            RowBox[{
              InterpretationBox[
                SubsuperscriptBox["\[CapitalGamma]", 
                  RowBox[{
                    TagBox[
                      StyleBox[
                        TagBox[
                          StyleBox["\[Theta]",
                            FontColor->RGBColor[0.18999, 0.500008, 
                            0.0800031]],
                          (
                          StyleForm[ #, FontColor -> 
                            RGBColor[ .189993, .5, .080004000000000006]]&)],
                        ShowContents->False],
                      (StyleForm[ #, ShowContents -> False]&)], 
                    TagBox[
                      StyleBox["\[Phi]",
                        FontColor->RGBColor[0.18999, 0.500008, 0.0800031]],
                      (
                      StyleForm[ #, FontColor -> 
                        RGBColor[ .189993, .5, .080004000000000006]]&)], 
                    TagBox[
                      StyleBox["\[Phi]",
                        FontColor->RGBColor[0.18999, 0.500008, 0.0800031]],
                      (
                      StyleForm[ #, FontColor -> 
                        RGBColor[ .189993, .5, .080004000000000006]]&)]}], 
                  RowBox[{
                    TagBox[
                      StyleBox["\[Theta]",
                        FontColor->RGBColor[0.18999, 0.500008, 0.0800031]],
                      (
                      StyleForm[ #, FontColor -> 
                        RGBColor[ .189993, .5, .080004000000000006]]&)], 
                    TagBox[
                      StyleBox[
                        TagBox[
                          StyleBox["\[Phi]",
                            FontColor->RGBColor[0.18999, 0.500008, 
                            0.0800031]],
                          (
                          StyleForm[ #, FontColor -> 
                            RGBColor[ .189993, .5, .080004000000000006]]&)],
                        ShowContents->False],
                      (StyleForm[ #, ShowContents -> False]&)], 
                    TagBox[
                      StyleBox[
                        TagBox[
                          StyleBox["\[Phi]",
                            FontColor->RGBColor[0.18999, 0.500008, 
                            0.0800031]],
                          (
                          StyleForm[ #, FontColor -> 
                            RGBColor[ .189993, .5, .080004000000000006]]&)],
                        ShowContents->False],
                      (StyleForm[ #, ShowContents -> False]&)]}]],
                Tensor[ \[CapitalGamma], {
                  green[ \[Theta]], Void, Void}, {Void, 
                  green[ \[Phi]], 
                  green[ \[Phi]]}],
                Editable->False], 
              "\[Rule]", \(\(-Cos[\[Theta]]\)\ Sin[\[Theta]]\)}]},
          {
            RowBox[{
              InterpretationBox[
                SubsuperscriptBox["\[CapitalGamma]", 
                  RowBox[{
                    TagBox[
                      StyleBox[
                        TagBox[
                          StyleBox["\[Phi]",
                            FontColor->RGBColor[0.18999, 0.500008, 
                            0.0800031]],
                          (
                          StyleForm[ #, FontColor -> 
                            RGBColor[ .189993, .5, .080004000000000006]]&)],
                        ShowContents->False],
                      (StyleForm[ #, ShowContents -> False]&)], 
                    TagBox[
                      StyleBox["\[Theta]",
                        FontColor->RGBColor[0.18999, 0.500008, 0.0800031]],
                      (
                      StyleForm[ #, FontColor -> 
                        RGBColor[ .189993, .5, .080004000000000006]]&)], 
                    TagBox[
                      StyleBox["\[Phi]",
                        FontColor->RGBColor[0.18999, 0.500008, 0.0800031]],
                      (
                      StyleForm[ #, FontColor -> 
                        RGBColor[ .189993, .5, .080004000000000006]]&)]}], 
                  RowBox[{
                    TagBox[
                      StyleBox["\[Phi]",
                        FontColor->RGBColor[0.18999, 0.500008, 0.0800031]],
                      (
                      StyleForm[ #, FontColor -> 
                        RGBColor[ .189993, .5, .080004000000000006]]&)], 
                    TagBox[
                      StyleBox[
                        TagBox[
                          StyleBox["\[Theta]",
                            FontColor->RGBColor[0.18999, 0.500008, 
                            0.0800031]],
                          (
                          StyleForm[ #, FontColor -> 
                            RGBColor[ .189993, .5, .080004000000000006]]&)],
                        ShowContents->False],
                      (StyleForm[ #, ShowContents -> False]&)], 
                    TagBox[
                      StyleBox[
                        TagBox[
                          StyleBox["\[Phi]",
                            FontColor->RGBColor[0.18999, 0.500008, 
                            0.0800031]],
                          (
                          StyleForm[ #, FontColor -> 
                            RGBColor[ .189993, .5, .080004000000000006]]&)],
                        ShowContents->False],
                      (StyleForm[ #, ShowContents -> False]&)]}]],
                Tensor[ \[CapitalGamma], {
                  green[ \[Phi]], Void, Void}, {Void, 
                  green[ \[Theta]], 
                  green[ \[Phi]]}],
                Editable->False], "\[Rule]", \(Cot[\[Theta]]\)}]}
          },
        RowSpacings->1,
        ColumnSpacings->3,
        RowAlignments->Baseline,
        ColumnAlignments->{Left}],
      TableForm[ {Tensor[ \[CapitalGamma], {
          green[ \[Theta]], Void, Void}, {Void, 
          green[ \[Phi]], 
          green[ \[Phi]]}] -> Times[ -1, 
          Cos[ \[Theta]], 
          Sin[ \[Theta]]], Tensor[ \[CapitalGamma], {
          green[ \[Phi]], Void, Void}, {Void, 
          green[ \[Theta]], 
          green[ \[Phi]]}] -> Cot[ \[Theta]]}]]], "Output"]
}, Open  ]]
}, Open  ]],

Cell[TextData[Cell[BoxData[GridBox[{
        {
          ButtonBox[
            StyleBox["\[FirstPage]",
              "SR"],
            ButtonFunction:>FrontEndExecute[ {
                FrontEndToken[ 
                  FrontEnd`SelectedNotebook[ ], "ScrollPageFirst"]}],
            ButtonStyle->"SlideHyperlink",
            ButtonNote->"First Slide"], 
          ButtonBox[
            StyleBox["\[LeftPointer]",
              "SR"],
            ButtonFunction:>FrontEndExecute[ {
                FrontEndToken[ 
                  FrontEnd`SelectedNotebook[ ], "ScrollPagePrevious"]}],
            ButtonStyle->"SlideHyperlink",
            ButtonNote->"Previous Slide"], 
          ButtonBox[
            StyleBox["\[RightPointer]",
              "SR"],
            ButtonFunction:>FrontEndExecute[ {
                FrontEndToken[ 
                  FrontEnd`SelectedNotebook[ ], "ScrollPageNext"]}],
            ButtonStyle->"SlideHyperlink",
            ButtonNote->"Next Slide"], 
          ButtonBox[
            StyleBox["\[LastPage]",
              "SR"],
            ButtonFunction:>FrontEndExecute[ {
                FrontEndToken[ 
                  FrontEnd`SelectedNotebook[ ], "ScrollPageLast"]}],
            ButtonStyle->"SlideHyperlink"], " ", 
          ButtonBox[
            StyleBox[
              RowBox[{
                CounterBox["SlideShowNavigationBar"], \(\(\ \)\(of\)\(\ \)\), 
                
                
                CounterBox["SlideShowNavigationBar", {None, 
                  "SlideShowHeader", -1}]}],
              "SR"],
            ButtonFrame->"None"]}
        }]]]], "SlideShowNavigationBar",
  CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell[TextData[{
  StyleBox["Tensorial",
    FontSlant->"Italic"],
  " 4.0 - Multiple Base Indices (d)"
}], "Section"],

Cell["\<\
All the various metrics and connections are simultaneously present and \
usable, here displayed with the coordinates.\
\>", "Text"],

Cell[CellGroupData[{

Cell[BoxData[
    \(SelectedTensorRules[\[CapitalGamma], \ \[CapitalGamma]udd[_, b_, c_] /; 
          OrderedQ[{b, c}]] // TableForm\)], "Input"],

Cell[BoxData[
    InterpretationBox[GridBox[{
          {
            RowBox[{
              InterpretationBox[
                SubsuperscriptBox["\[CapitalGamma]", 
                  RowBox[{
                    TagBox[
                      StyleBox["1",
                        ShowContents->False],
                      (StyleForm[ #, ShowContents -> False]&)], "2", "2"}], 
                  RowBox[{"1", 
                    TagBox[
                      StyleBox["2",
                        ShowContents->False],
                      (StyleForm[ #, ShowContents -> False]&)], 
                    TagBox[
                      StyleBox["2",
                        ShowContents->False],
                      (StyleForm[ #, ShowContents -> False]&)]}]],
                Tensor[ \[CapitalGamma], {1, Void, Void}, {Void, 2, 2}],
                Editable->False], "\[Rule]", 
              RowBox[{"-", 
                InterpretationBox[
                  SubsuperscriptBox["x", 
                    TagBox[
                      StyleBox["1",
                        ShowContents->False],
                      (StyleForm[ #, ShowContents -> False]&)], "1"],
                  Tensor[ x, {1}, {Void}],
                  Editable->False]}]}]},
          {
            RowBox[{
              InterpretationBox[
                SubsuperscriptBox["\[CapitalGamma]", 
                  RowBox[{
                    TagBox[
                      StyleBox["1",
                        ShowContents->False],
                      (StyleForm[ #, ShowContents -> False]&)], "3", "3"}], 
                  RowBox[{"1", 
                    TagBox[
                      StyleBox["3",
                        ShowContents->False],
                      (StyleForm[ #, ShowContents -> False]&)], 
                    TagBox[
                      StyleBox["3",
                        ShowContents->False],
                      (StyleForm[ #, ShowContents -> False]&)]}]],
                Tensor[ \[CapitalGamma], {1, Void, Void}, {Void, 3, 3}],
                Editable->False], "\[Rule]", 
              RowBox[{
                RowBox[{"-", 
                  SuperscriptBox[
                    RowBox[{"Sin", "[", 
                      InterpretationBox[
                        SubsuperscriptBox["x", 
                          TagBox[
                            StyleBox["2",
                              ShowContents->False],
                            (StyleForm[ #, ShowContents -> False]&)], "2"],
                        Tensor[ x, {2}, {Void}],
                        Editable->False], "]"}], "2"]}], " ", 
                InterpretationBox[
                  SubsuperscriptBox["x", 
                    TagBox[
                      StyleBox["1",
                        ShowContents->False],
                      (StyleForm[ #, ShowContents -> False]&)], "1"],
                  Tensor[ x, {1}, {Void}],
                  Editable->False]}]}]},
          {
            RowBox[{
              InterpretationBox[
                SubsuperscriptBox["\[CapitalGamma]", 
                  RowBox[{
                    TagBox[
                      StyleBox["2",
                        ShowContents->False],
                      (StyleForm[ #, ShowContents -> False]&)], "1", "2"}], 
                  RowBox[{"2", 
                    TagBox[
                      StyleBox["1",
                        ShowContents->False],
                      (StyleForm[ #, ShowContents -> False]&)], 
                    TagBox[
                      StyleBox["2",
                        ShowContents->False],
                      (StyleForm[ #, ShowContents -> False]&)]}]],
                Tensor[ \[CapitalGamma], {2, Void, Void}, {Void, 1, 2}],
                Editable->False], "\[Rule]", 
              TagBox[
                SuperscriptBox[
                  RowBox[{"(", 
                    InterpretationBox[
                      SubsuperscriptBox["x", 
                        TagBox[
                          StyleBox["1",
                            ShowContents->False],
                          (StyleForm[ #, ShowContents -> False]&)], "1"],
                      Tensor[ x, {1}, {Void}],
                      Editable->False], ")"}], \(-1\)],
                DisplayForm]}]},
          {
            RowBox[{
              InterpretationBox[
                SubsuperscriptBox["\[CapitalGamma]", 
                  RowBox[{
                    TagBox[
                      StyleBox["2",
                        ShowContents->False],
                      (StyleForm[ #, ShowContents -> False]&)], "3", "3"}], 
                  RowBox[{"2", 
                    TagBox[
                      StyleBox["3",
                        ShowContents->False],
                      (StyleForm[ #, ShowContents -> False]&)], 
                    TagBox[
                      StyleBox["3",
                        ShowContents->False],
                      (StyleForm[ #, ShowContents -> False]&)]}]],
                Tensor[ \[CapitalGamma], {2, Void, Void}, {Void, 3, 3}],
                Editable->False], "\[Rule]", 
              RowBox[{
                RowBox[{"-", 
                  RowBox[{"Cos", "[", 
                    InterpretationBox[
                      SubsuperscriptBox["x", 
                        TagBox[
                          StyleBox["2",
                            ShowContents->False],
                          (StyleForm[ #, ShowContents -> False]&)], "2"],
                      Tensor[ x, {2}, {Void}],
                      Editable->False], "]"}]}], " ", 
                RowBox[{"Sin", "[", 
                  InterpretationBox[
                    SubsuperscriptBox["x", 
                      TagBox[
                        StyleBox["2",
                          ShowContents->False],
                        (StyleForm[ #, ShowContents -> False]&)], "2"],
                    Tensor[ x, {2}, {Void}],
                    Editable->False], "]"}]}]}]},
          {
            RowBox[{
              InterpretationBox[
                SubsuperscriptBox["\[CapitalGamma]", 
                  RowBox[{
                    TagBox[
                      StyleBox["3",
                        ShowContents->False],
                      (StyleForm[ #, ShowContents -> False]&)], "1", "3"}], 
                  RowBox[{"3", 
                    TagBox[
                      StyleBox["1",
                        ShowContents->False],
                      (StyleForm[ #, ShowContents -> False]&)], 
                    TagBox[
                      StyleBox["3",
                        ShowContents->False],
                      (StyleForm[ #, ShowContents -> False]&)]}]],
                Tensor[ \[CapitalGamma], {3, Void, Void}, {Void, 1, 3}],
                Editable->False], "\[Rule]", 
              TagBox[
                SuperscriptBox[
                  RowBox[{"(", 
                    InterpretationBox[
                      SubsuperscriptBox["x", 
                        TagBox[
                          StyleBox["1",
                            ShowContents->False],
                          (StyleForm[ #, ShowContents -> False]&)], "1"],
                      Tensor[ x, {1}, {Void}],
                      Editable->False], ")"}], \(-1\)],
                DisplayForm]}]},
          {
            RowBox[{
              InterpretationBox[
                SubsuperscriptBox["\[CapitalGamma]", 
                  RowBox[{
                    TagBox[
                      StyleBox["3",
                        ShowContents->False],
                      (StyleForm[ #, ShowContents -> False]&)], "2", "3"}], 
                  RowBox[{"3", 
                    TagBox[
                      StyleBox["2",
                        ShowContents->False],
                      (StyleForm[ #, ShowContents -> False]&)], 
                    TagBox[
                      StyleBox["3",
                        ShowContents->False],
                      (StyleForm[ #, ShowContents -> False]&)]}]],
                Tensor[ \[CapitalGamma], {3, Void, Void}, {Void, 2, 3}],
                Editable->False], "\[Rule]", 
              RowBox[{"Cot", "[", 
                InterpretationBox[
                  SubsuperscriptBox["x", 
                    TagBox[
                      StyleBox["2",
                        ShowContents->False],
                      (StyleForm[ #, ShowContents -> False]&)], "2"],
                  Tensor[ x, {2}, {Void}],
                  Editable->False], "]"}]}]},
          {
            RowBox[{
              InterpretationBox[
                SubsuperscriptBox["\[CapitalGamma]", 
                  RowBox[{
                    TagBox[
                      StyleBox[
                        TagBox[
                          StyleBox["r",
                            FontColor->RGBColor[1, 0, 0]],
                          (StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)],
                        ShowContents->False],
                      (StyleForm[ #, ShowContents -> False]&)], 
                    TagBox[
                      StyleBox["\[Phi]",
                        FontColor->RGBColor[1, 0, 0]],
                      (StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)], 
                    TagBox[
                      StyleBox["\[Phi]",
                        FontColor->RGBColor[1, 0, 0]],
                      (StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)]}], 
                  RowBox[{
                    TagBox[
                      StyleBox["r",
                        FontColor->RGBColor[1, 0, 0]],
                      (StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)], 
                    TagBox[
                      StyleBox[
                        TagBox[
                          StyleBox["\[Phi]",
                            FontColor->RGBColor[1, 0, 0]],
                          (StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)],
                        ShowContents->False],
                      (StyleForm[ #, ShowContents -> False]&)], 
                    TagBox[
                      StyleBox[
                        TagBox[
                          StyleBox["\[Phi]",
                            FontColor->RGBColor[1, 0, 0]],
                          (StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)],
                        ShowContents->False],
                      (StyleForm[ #, ShowContents -> False]&)]}]],
                Tensor[ \[CapitalGamma], {
                  red[ r], Void, Void}, {Void, 
                  red[ \[Phi]], 
                  red[ \[Phi]]}],
                Editable->False], "\[Rule]", 
              RowBox[{"-", 
                InterpretationBox[
                  SubsuperscriptBox["x", 
                    TagBox[
                      StyleBox[
                        TagBox[
                          StyleBox["r",
                            FontColor->RGBColor[1, 0, 0]],
                          (StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)],
                        ShowContents->False],
                      (StyleForm[ #, ShowContents -> False]&)], 
                    TagBox[
                      StyleBox["r",
                        FontColor->RGBColor[1, 0, 0]],
                      (StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)]],
                  Tensor[ x, {
                    red[ r]}, {Void}],
                  Editable->False]}]}]},
          {
            RowBox[{
              InterpretationBox[
                SubsuperscriptBox["\[CapitalGamma]", 
                  RowBox[{
                    TagBox[
                      StyleBox[
                        TagBox[
                          StyleBox["r",
                            FontColor->RGBColor[1, 0, 0]],
                          (StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)],
                        ShowContents->False],
                      (StyleForm[ #, ShowContents -> False]&)], 
                    TagBox[
                      StyleBox["\[Theta]",
                        FontColor->RGBColor[1, 0, 0]],
                      (StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)], 
                    TagBox[
                      StyleBox["\[Theta]",
                        FontColor->RGBColor[1, 0, 0]],
                      (StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)]}], 
                  RowBox[{
                    TagBox[
                      StyleBox["r",
                        FontColor->RGBColor[1, 0, 0]],
                      (StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)], 
                    TagBox[
                      StyleBox[
                        TagBox[
                          StyleBox["\[Theta]",
                            FontColor->RGBColor[1, 0, 0]],
                          (StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)],
                        ShowContents->False],
                      (StyleForm[ #, ShowContents -> False]&)], 
                    TagBox[
                      StyleBox[
                        TagBox[
                          StyleBox["\[Theta]",
                            FontColor->RGBColor[1, 0, 0]],
                          (StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)],
                        ShowContents->False],
                      (StyleForm[ #, ShowContents -> False]&)]}]],
                Tensor[ \[CapitalGamma], {
                  red[ r], Void, Void}, {Void, 
                  red[ \[Theta]], 
                  red[ \[Theta]]}],
                Editable->False], "\[Rule]", 
              RowBox[{
                RowBox[{"-", 
                  SuperscriptBox[
                    RowBox[{"Sin", "[", 
                      InterpretationBox[
                        SubsuperscriptBox["x", 
                          TagBox[
                            StyleBox[
                              TagBox[
                                StyleBox["\[Phi]",
                                  FontColor->RGBColor[1, 0, 0]],
                                (
                                StyleForm[ #, FontColor -> RGBColor[ 
                                  1, 0, 0]]&)],
                              ShowContents->False],
                            (StyleForm[ #, ShowContents -> False]&)], 
                          TagBox[
                            StyleBox["\[Phi]",
                              FontColor->RGBColor[1, 0, 0]],
                            (
                            StyleForm[ #, FontColor -> RGBColor[ 
                              1, 0, 0]]&)]],
                        Tensor[ x, {
                          red[ \[Phi]]}, {Void}],
                        Editable->False], "]"}], "2"]}], " ", 
                InterpretationBox[
                  SubsuperscriptBox["x", 
                    TagBox[
                      StyleBox[
                        TagBox[
                          StyleBox["r",
                            FontColor->RGBColor[1, 0, 0]],
                          (StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)],
                        ShowContents->False],
                      (StyleForm[ #, ShowContents -> False]&)], 
                    TagBox[
                      StyleBox["r",
                        FontColor->RGBColor[1, 0, 0]],
                      (StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)]],
                  Tensor[ x, {
                    red[ r]}, {Void}],
                  Editable->False]}]}]},
          {
            RowBox[{
              InterpretationBox[
                SubsuperscriptBox["\[CapitalGamma]", 
                  RowBox[{
                    TagBox[
                      StyleBox[
                        TagBox[
                          StyleBox["\[Phi]",
                            FontColor->RGBColor[1, 0, 0]],
                          (StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)],
                        ShowContents->False],
                      (StyleForm[ #, ShowContents -> False]&)], 
                    TagBox[
                      StyleBox["r",
                        FontColor->RGBColor[1, 0, 0]],
                      (StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)], 
                    TagBox[
                      StyleBox["\[Phi]",
                        FontColor->RGBColor[1, 0, 0]],
                      (StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)]}], 
                  RowBox[{
                    TagBox[
                      StyleBox["\[Phi]",
                        FontColor->RGBColor[1, 0, 0]],
                      (StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)], 
                    TagBox[
                      StyleBox[
                        TagBox[
                          StyleBox["r",
                            FontColor->RGBColor[1, 0, 0]],
                          (StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)],
                        ShowContents->False],
                      (StyleForm[ #, ShowContents -> False]&)], 
                    TagBox[
                      StyleBox[
                        TagBox[
                          StyleBox["\[Phi]",
                            FontColor->RGBColor[1, 0, 0]],
                          (StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)],
                        ShowContents->False],
                      (StyleForm[ #, ShowContents -> False]&)]}]],
                Tensor[ \[CapitalGamma], {
                  red[ \[Phi]], Void, Void}, {Void, 
                  red[ r], 
                  red[ \[Phi]]}],
                Editable->False], "\[Rule]", 
              TagBox[
                SuperscriptBox[
                  RowBox[{"(", 
                    InterpretationBox[
                      SubsuperscriptBox["x", 
                        TagBox[
                          StyleBox[
                            TagBox[
                              StyleBox["r",
                                FontColor->RGBColor[1, 0, 0]],
                              (
                              StyleForm[ #, FontColor -> RGBColor[ 
                                1, 0, 0]]&)],
                            ShowContents->False],
                          (StyleForm[ #, ShowContents -> False]&)], 
                        TagBox[
                          StyleBox["r",
                            FontColor->RGBColor[1, 0, 0]],
                          (StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)]],
                      
                      Tensor[ x, {
                        red[ r]}, {Void}],
                      Editable->False], ")"}], \(-1\)],
                DisplayForm]}]},
          {
            RowBox[{
              InterpretationBox[
                SubsuperscriptBox["\[CapitalGamma]", 
                  RowBox[{
                    TagBox[
                      StyleBox[
                        TagBox[
                          StyleBox["\[Phi]",
                            FontColor->RGBColor[1, 0, 0]],
                          (StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)],
                        ShowContents->False],
                      (StyleForm[ #, ShowContents -> False]&)], 
                    TagBox[
                      StyleBox["\[Theta]",
                        FontColor->RGBColor[1, 0, 0]],
                      (StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)], 
                    TagBox[
                      StyleBox["\[Theta]",
                        FontColor->RGBColor[1, 0, 0]],
                      (StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)]}], 
                  RowBox[{
                    TagBox[
                      StyleBox["\[Phi]",
                        FontColor->RGBColor[1, 0, 0]],
                      (StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)], 
                    TagBox[
                      StyleBox[
                        TagBox[
                          StyleBox["\[Theta]",
                            FontColor->RGBColor[1, 0, 0]],
                          (StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)],
                        ShowContents->False],
                      (StyleForm[ #, ShowContents -> False]&)], 
                    TagBox[
                      StyleBox[
                        TagBox[
                          StyleBox["\[Theta]",
                            FontColor->RGBColor[1, 0, 0]],
                          (StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)],
                        ShowContents->False],
                      (StyleForm[ #, ShowContents -> False]&)]}]],
                Tensor[ \[CapitalGamma], {
                  red[ \[Phi]], Void, Void}, {Void, 
                  red[ \[Theta]], 
                  red[ \[Theta]]}],
                Editable->False], "\[Rule]", 
              RowBox[{
                RowBox[{"-", 
                  RowBox[{"Cos", "[", 
                    InterpretationBox[
                      SubsuperscriptBox["x", 
                        TagBox[
                          StyleBox[
                            TagBox[
                              StyleBox["\[Phi]",
                                FontColor->RGBColor[1, 0, 0]],
                              (
                              StyleForm[ #, FontColor -> RGBColor[ 
                                1, 0, 0]]&)],
                            ShowContents->False],
                          (StyleForm[ #, ShowContents -> False]&)], 
                        TagBox[
                          StyleBox["\[Phi]",
                            FontColor->RGBColor[1, 0, 0]],
                          (StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)]],
                      
                      Tensor[ x, {
                        red[ \[Phi]]}, {Void}],
                      Editable->False], "]"}]}], " ", 
                RowBox[{"Sin", "[", 
                  InterpretationBox[
                    SubsuperscriptBox["x", 
                      TagBox[
                        StyleBox[
                          TagBox[
                            StyleBox["\[Phi]",
                              FontColor->RGBColor[1, 0, 0]],
                            (
                            StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)],
                          
                          ShowContents->False],
                        (StyleForm[ #, ShowContents -> False]&)], 
                      TagBox[
                        StyleBox["\[Phi]",
                          FontColor->RGBColor[1, 0, 0]],
                        (StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)]],
                    Tensor[ x, {
                      red[ \[Phi]]}, {Void}],
                    Editable->False], "]"}]}]}]},
          {
            RowBox[{
              InterpretationBox[
                SubsuperscriptBox["\[CapitalGamma]", 
                  RowBox[{
                    TagBox[
                      StyleBox[
                        TagBox[
                          StyleBox["\[Theta]",
                            FontColor->RGBColor[1, 0, 0]],
                          (StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)],
                        ShowContents->False],
                      (StyleForm[ #, ShowContents -> False]&)], 
                    TagBox[
                      StyleBox["r",
                        FontColor->RGBColor[1, 0, 0]],
                      (StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)], 
                    TagBox[
                      StyleBox["\[Theta]",
                        FontColor->RGBColor[1, 0, 0]],
                      (StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)]}], 
                  RowBox[{
                    TagBox[
                      StyleBox["\[Theta]",
                        FontColor->RGBColor[1, 0, 0]],
                      (StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)], 
                    TagBox[
                      StyleBox[
                        TagBox[
                          StyleBox["r",
                            FontColor->RGBColor[1, 0, 0]],
                          (StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)],
                        ShowContents->False],
                      (StyleForm[ #, ShowContents -> False]&)], 
                    TagBox[
                      StyleBox[
                        TagBox[
                          StyleBox["\[Theta]",
                            FontColor->RGBColor[1, 0, 0]],
                          (StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)],
                        ShowContents->False],
                      (StyleForm[ #, ShowContents -> False]&)]}]],
                Tensor[ \[CapitalGamma], {
                  red[ \[Theta]], Void, Void}, {Void, 
                  red[ r], 
                  red[ \[Theta]]}],
                Editable->False], "\[Rule]", 
              TagBox[
                SuperscriptBox[
                  RowBox[{"(", 
                    InterpretationBox[
                      SubsuperscriptBox["x", 
                        TagBox[
                          StyleBox[
                            TagBox[
                              StyleBox["r",
                                FontColor->RGBColor[1, 0, 0]],
                              (
                              StyleForm[ #, FontColor -> RGBColor[ 
                                1, 0, 0]]&)],
                            ShowContents->False],
                          (StyleForm[ #, ShowContents -> False]&)], 
                        TagBox[
                          StyleBox["r",
                            FontColor->RGBColor[1, 0, 0]],
                          (StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)]],
                      
                      Tensor[ x, {
                        red[ r]}, {Void}],
                      Editable->False], ")"}], \(-1\)],
                DisplayForm]}]},
          {
            RowBox[{
              InterpretationBox[
                SubsuperscriptBox["\[CapitalGamma]", 
                  RowBox[{
                    TagBox[
                      StyleBox[
                        TagBox[
                          StyleBox["\[Theta]",
                            FontColor->RGBColor[1, 0, 0]],
                          (StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)],
                        ShowContents->False],
                      (StyleForm[ #, ShowContents -> False]&)], 
                    TagBox[
                      StyleBox["\[Theta]",
                        FontColor->RGBColor[1, 0, 0]],
                      (StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)], 
                    TagBox[
                      StyleBox["\[Phi]",
                        FontColor->RGBColor[1, 0, 0]],
                      (StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)]}], 
                  RowBox[{
                    TagBox[
                      StyleBox["\[Theta]",
                        FontColor->RGBColor[1, 0, 0]],
                      (StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)], 
                    TagBox[
                      StyleBox[
                        TagBox[
                          StyleBox["\[Theta]",
                            FontColor->RGBColor[1, 0, 0]],
                          (StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)],
                        ShowContents->False],
                      (StyleForm[ #, ShowContents -> False]&)], 
                    TagBox[
                      StyleBox[
                        TagBox[
                          StyleBox["\[Phi]",
                            FontColor->RGBColor[1, 0, 0]],
                          (StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)],
                        ShowContents->False],
                      (StyleForm[ #, ShowContents -> False]&)]}]],
                Tensor[ \[CapitalGamma], {
                  red[ \[Theta]], Void, Void}, {Void, 
                  red[ \[Theta]], 
                  red[ \[Phi]]}],
                Editable->False], "\[Rule]", 
              RowBox[{"Cot", "[", 
                InterpretationBox[
                  SubsuperscriptBox["x", 
                    TagBox[
                      StyleBox[
                        TagBox[
                          StyleBox["\[Phi]",
                            FontColor->RGBColor[1, 0, 0]],
                          (StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)],
                        ShowContents->False],
                      (StyleForm[ #, ShowContents -> False]&)], 
                    TagBox[
                      StyleBox["\[Phi]",
                        FontColor->RGBColor[1, 0, 0]],
                      (StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)]],
                  Tensor[ x, {
                    red[ \[Phi]]}, {Void}],
                  Editable->False], "]"}]}]},
          {
            RowBox[{
              InterpretationBox[
                SubsuperscriptBox["\[CapitalGamma]", 
                  RowBox[{
                    TagBox[
                      StyleBox[
                        TagBox[
                          StyleBox["\[Theta]",
                            FontColor->RGBColor[0.18999, 0.500008, 
                            0.0800031]],
                          (
                          StyleForm[ #, FontColor -> 
                            RGBColor[ .189993, .5, .080004000000000006]]&)],
                        ShowContents->False],
                      (StyleForm[ #, ShowContents -> False]&)], 
                    TagBox[
                      StyleBox["\[Phi]",
                        FontColor->RGBColor[0.18999, 0.500008, 0.0800031]],
                      (
                      StyleForm[ #, FontColor -> 
                        RGBColor[ .189993, .5, .080004000000000006]]&)], 
                    TagBox[
                      StyleBox["\[Phi]",
                        FontColor->RGBColor[0.18999, 0.500008, 0.0800031]],
                      (
                      StyleForm[ #, FontColor -> 
                        RGBColor[ .189993, .5, .080004000000000006]]&)]}], 
                  RowBox[{
                    TagBox[
                      StyleBox["\[Theta]",
                        FontColor->RGBColor[0.18999, 0.500008, 0.0800031]],
                      (
                      StyleForm[ #, FontColor -> 
                        RGBColor[ .189993, .5, .080004000000000006]]&)], 
                    TagBox[
                      StyleBox[
                        TagBox[
                          StyleBox["\[Phi]",
                            FontColor->RGBColor[0.18999, 0.500008, 
                            0.0800031]],
                          (
                          StyleForm[ #, FontColor -> 
                            RGBColor[ .189993, .5, .080004000000000006]]&)],
                        ShowContents->False],
                      (StyleForm[ #, ShowContents -> False]&)], 
                    TagBox[
                      StyleBox[
                        TagBox[
                          StyleBox["\[Phi]",
                            FontColor->RGBColor[0.18999, 0.500008, 
                            0.0800031]],
                          (
                          StyleForm[ #, FontColor -> 
                            RGBColor[ .189993, .5, .080004000000000006]]&)],
                        ShowContents->False],
                      (StyleForm[ #, ShowContents -> False]&)]}]],
                Tensor[ \[CapitalGamma], {
                  green[ \[Theta]], Void, Void}, {Void, 
                  green[ \[Phi]], 
                  green[ \[Phi]]}],
                Editable->False], "\[Rule]", 
              RowBox[{
                RowBox[{"-", 
                  RowBox[{"Cos", "[", 
                    InterpretationBox[
                      SubsuperscriptBox["x", 
                        TagBox[
                          StyleBox[
                            TagBox[
                              StyleBox["\[Theta]",
                                FontColor->RGBColor[0.18999, 0.500008, 
                                0.0800031]],
                              (
                              StyleForm[ #, FontColor -> 
                                RGBColor[ .189993, .5, \
.080004000000000006]]&)],
                            ShowContents->False],
                          (StyleForm[ #, ShowContents -> False]&)], 
                        TagBox[
                          StyleBox["\[Theta]",
                            FontColor->RGBColor[0.18999, 0.500008, 
                            0.0800031]],
                          (
                          StyleForm[ #, FontColor -> 
                            RGBColor[ .189993, .5, .080004000000000006]]&)]],
                      Tensor[ x, {
                        green[ \[Theta]]}, {Void}],
                      Editable->False], "]"}]}], " ", 
                RowBox[{"Sin", "[", 
                  InterpretationBox[
                    SubsuperscriptBox["x", 
                      TagBox[
                        StyleBox[
                          TagBox[
                            StyleBox["\[Theta]",
                              FontColor->RGBColor[0.18999, 0.500008, 
                              0.0800031]],
                            (
                            StyleForm[ #, FontColor -> 
                              RGBColor[ .189993, .5, .080004000000000006]]&)],
                          
                          ShowContents->False],
                        (StyleForm[ #, ShowContents -> False]&)], 
                      TagBox[
                        StyleBox["\[Theta]",
                          FontColor->RGBColor[0.18999, 0.500008, 0.0800031]],
                        (
                        StyleForm[ #, FontColor -> 
                          RGBColor[ .189993, .5, .080004000000000006]]&)]],
                    Tensor[ x, {
                      green[ \[Theta]]}, {Void}],
                    Editable->False], "]"}]}]}]},
          {
            RowBox[{
              InterpretationBox[
                SubsuperscriptBox["\[CapitalGamma]", 
                  RowBox[{
                    TagBox[
                      StyleBox[
                        TagBox[
                          StyleBox["\[Phi]",
                            FontColor->RGBColor[0.18999, 0.500008, 
                            0.0800031]],
                          (
                          StyleForm[ #, FontColor -> 
                            RGBColor[ .189993, .5, .080004000000000006]]&)],
                        ShowContents->False],
                      (StyleForm[ #, ShowContents -> False]&)], 
                    TagBox[
                      StyleBox["\[Theta]",
                        FontColor->RGBColor[0.18999, 0.500008, 0.0800031]],
                      (
                      StyleForm[ #, FontColor -> 
                        RGBColor[ .189993, .5, .080004000000000006]]&)], 
                    TagBox[
                      StyleBox["\[Phi]",
                        FontColor->RGBColor[0.18999, 0.500008, 0.0800031]],
                      (
                      StyleForm[ #, FontColor -> 
                        RGBColor[ .189993, .5, .080004000000000006]]&)]}], 
                  RowBox[{
                    TagBox[
                      StyleBox["\[Phi]",
                        FontColor->RGBColor[0.18999, 0.500008, 0.0800031]],
                      (
                      StyleForm[ #, FontColor -> 
                        RGBColor[ .189993, .5, .080004000000000006]]&)], 
                    TagBox[
                      StyleBox[
                        TagBox[
                          StyleBox["\[Theta]",
                            FontColor->RGBColor[0.18999, 0.500008, 
                            0.0800031]],
                          (
                          StyleForm[ #, FontColor -> 
                            RGBColor[ .189993, .5, .080004000000000006]]&)],
                        ShowContents->False],
                      (StyleForm[ #, ShowContents -> False]&)], 
                    TagBox[
                      StyleBox[
                        TagBox[
                          StyleBox["\[Phi]",
                            FontColor->RGBColor[0.18999, 0.500008, 
                            0.0800031]],
                          (
                          StyleForm[ #, FontColor -> 
                            RGBColor[ .189993, .5, .080004000000000006]]&)],
                        ShowContents->False],
                      (StyleForm[ #, ShowContents -> False]&)]}]],
                Tensor[ \[CapitalGamma], {
                  green[ \[Phi]], Void, Void}, {Void, 
                  green[ \[Theta]], 
                  green[ \[Phi]]}],
                Editable->False], "\[Rule]", 
              RowBox[{"Cot", "[", 
                InterpretationBox[
                  SubsuperscriptBox["x", 
                    TagBox[
                      StyleBox[
                        TagBox[
                          StyleBox["\[Theta]",
                            FontColor->RGBColor[0.18999, 0.500008, 
                            0.0800031]],
                          (
                          StyleForm[ #, FontColor -> 
                            RGBColor[ .189993, .5, .080004000000000006]]&)],
                        ShowContents->False],
                      (StyleForm[ #, ShowContents -> False]&)], 
                    TagBox[
                      StyleBox["\[Theta]",
                        FontColor->RGBColor[0.18999, 0.500008, 0.0800031]],
                      (
                      StyleForm[ #, FontColor -> 
                        RGBColor[ .189993, .5, .080004000000000006]]&)]],
                  Tensor[ x, {
                    green[ \[Theta]]}, {Void}],
                  Editable->False], "]"}]}]}
          },
        RowSpacings->1,
        ColumnSpacings->3,
        RowAlignments->Baseline,
        ColumnAlignments->{Left}],
      TableForm[ {Tensor[ \[CapitalGamma], {1, Void, Void}, {Void, 2, 2}] -> 
        Times[ -1, 
          Tensor[ x, {1}, {Void}]], 
        Tensor[ \[CapitalGamma], {1, Void, Void}, {Void, 3, 3}] -> 
        Times[ -1, 
          Power[ 
            Sin[ 
              Tensor[ x, {2}, {Void}]], 2], 
          Tensor[ x, {1}, {Void}]], 
        Tensor[ \[CapitalGamma], {2, Void, Void}, {Void, 1, 2}] -> Power[ 
          Tensor[ x, {1}, {Void}], -1], 
        Tensor[ \[CapitalGamma], {2, Void, Void}, {Void, 3, 3}] -> 
        Times[ -1, 
          Cos[ 
            Tensor[ x, {2}, {Void}]], 
          Sin[ 
            Tensor[ x, {2}, {Void}]]], 
        Tensor[ \[CapitalGamma], {3, Void, Void}, {Void, 1, 3}] -> Power[ 
          Tensor[ x, {1}, {Void}], -1], 
        Tensor[ \[CapitalGamma], {3, Void, Void}, {Void, 2, 3}] -> Cot[ 
          Tensor[ x, {2}, {Void}]], Tensor[ \[CapitalGamma], {
          red[ r], Void, Void}, {Void, 
          red[ \[Phi]], 
          red[ \[Phi]]}] -> Times[ -1, 
          Tensor[ x, {
            red[ r]}, {Void}]], Tensor[ \[CapitalGamma], {
          red[ r], Void, Void}, {Void, 
          red[ \[Theta]], 
          red[ \[Theta]]}] -> Times[ -1, 
          Power[ 
            Sin[ 
              Tensor[ x, {
                red[ \[Phi]]}, {Void}]], 2], 
          Tensor[ x, {
            red[ r]}, {Void}]], Tensor[ \[CapitalGamma], {
          red[ \[Phi]], Void, Void}, {Void, 
          red[ r], 
          red[ \[Phi]]}] -> Power[ 
          Tensor[ x, {
            red[ r]}, {Void}], -1], Tensor[ \[CapitalGamma], {
          red[ \[Phi]], Void, Void}, {Void, 
          red[ \[Theta]], 
          red[ \[Theta]]}] -> Times[ -1, 
          Cos[ 
            Tensor[ x, {
              red[ \[Phi]]}, {Void}]], 
          Sin[ 
            Tensor[ x, {
              red[ \[Phi]]}, {Void}]]], Tensor[ \[CapitalGamma], {
          red[ \[Theta]], Void, Void}, {Void, 
          red[ r], 
          red[ \[Theta]]}] -> Power[ 
          Tensor[ x, {
            red[ r]}, {Void}], -1], Tensor[ \[CapitalGamma], {
          red[ \[Theta]], Void, Void}, {Void, 
          red[ \[Theta]], 
          red[ \[Phi]]}] -> Cot[ 
          Tensor[ x, {
            red[ \[Phi]]}, {Void}]], Tensor[ \[CapitalGamma], {
          green[ \[Theta]], Void, Void}, {Void, 
          green[ \[Phi]], 
          green[ \[Phi]]}] -> Times[ -1, 
          Cos[ 
            Tensor[ x, {
              green[ \[Theta]]}, {Void}]], 
          Sin[ 
            Tensor[ x, {
              green[ \[Theta]]}, {Void}]]], Tensor[ \[CapitalGamma], {
          green[ \[Phi]], Void, Void}, {Void, 
          green[ \[Theta]], 
          green[ \[Phi]]}] -> Cot[ 
          Tensor[ x, {
            green[ \[Theta]]}, {Void}]]}]]], "Output"]
}, Open  ]],

Cell[BoxData[{
    \(\({{gdd[a, b], 
            guu[a, b], \[CapitalGamma]ddd[a, b, c], \[CapitalGamma]udd[a, b, 
              c]}, {gdd[a, b], 
              guu[a, b], \[CapitalGamma]ddd[a, b, c], \[CapitalGamma]udd[a, 
                b, c]} // 
            ToFlavor[red], {gdd[a, b], 
              guu[a, b], \[CapitalGamma]ddd[a, b, c], \[CapitalGamma]udd[a, 
                b, c]} // ToFlavor[green]} // 
        Flatten;\)\), "\[IndentingNewLine]", 
    \(\(ClearTensorValues /@ %;\)\)}], "Input"]
}, Open  ]],

Cell[TextData[Cell[BoxData[GridBox[{
        {
          ButtonBox[
            StyleBox["\[FirstPage]",
              "SR"],
            ButtonFunction:>FrontEndExecute[ {
                FrontEndToken[ 
                  FrontEnd`SelectedNotebook[ ], "ScrollPageFirst"]}],
            ButtonStyle->"SlideHyperlink",
            ButtonNote->"First Slide"], 
          ButtonBox[
            StyleBox["\[LeftPointer]",
              "SR"],
            ButtonFunction:>FrontEndExecute[ {
                FrontEndToken[ 
                  FrontEnd`SelectedNotebook[ ], "ScrollPagePrevious"]}],
            ButtonStyle->"SlideHyperlink",
            ButtonNote->"Previous Slide"], 
          ButtonBox[
            StyleBox["\[RightPointer]",
              "SR"],
            ButtonFunction:>FrontEndExecute[ {
                FrontEndToken[ 
                  FrontEnd`SelectedNotebook[ ], "ScrollPageNext"]}],
            ButtonStyle->"SlideHyperlink",
            ButtonNote->"Next Slide"], 
          ButtonBox[
            StyleBox["\[LastPage]",
              "SR"],
            ButtonFunction:>FrontEndExecute[ {
                FrontEndToken[ 
                  FrontEnd`SelectedNotebook[ ], "ScrollPageLast"]}],
            ButtonStyle->"SlideHyperlink"], " ", 
          ButtonBox[
            StyleBox[
              RowBox[{
                CounterBox["SlideShowNavigationBar"], \(\(\ \)\(of\)\(\ \)\), 
                
                
                CounterBox["SlideShowNavigationBar", {None, 
                  "SlideShowHeader", -1}]}],
              "SR"],
            ButtonFrame->"None"]}
        }]]]], "SlideShowNavigationBar",
  CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell[TextData[{
  StyleBox["Tensorial",
    FontSlant->"Italic"],
  " 4.0 - Dot Mode Calculations (a)"
}], "Section"],

Cell["\<\
Dot Mode allow us to see calculations as vector-matrix-array expressions.\
\>", "EmphasisText"],

Cell[TextData[{
  "The following is the cross product of two vectors, ",
  Cell[BoxData[
      \(u\)]],
  " and ",
  Cell[BoxData[
      \(v\)]],
  ", in 3D Cartesian space."
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[{
    \(u\[Cross]v\), "\[IndentingNewLine]", 
    \(% /. {u \[Rule] uu[i], v \[Rule] vu[j]}\), "\[IndentingNewLine]", 
    \(ToArrayValues[] /@ % // MatrixForm\)}], "Input"],

Cell[BoxData[
    \(u\[Cross]v\)], "Output"],

Cell[BoxData[
    RowBox[{
      InterpretationBox[
        SubsuperscriptBox["u", 
          TagBox[
            StyleBox["i",
              ShowContents->False],
            (StyleForm[ #, ShowContents -> False]&)], "i"],
        Tensor[ u, {i}, {Void}],
        Editable->False], "\[Cross]", 
      InterpretationBox[
        SubsuperscriptBox["v", 
          TagBox[
            StyleBox["j",
              ShowContents->False],
            (StyleForm[ #, ShowContents -> False]&)], "j"],
        Tensor[ v, {j}, {Void}],
        Editable->False]}]], "Output"],

Cell[BoxData[
    TagBox[
      RowBox[{"(", "\[NoBreak]", 
        TagBox[GridBox[{
              {
                RowBox[{
                  RowBox[{
                    RowBox[{"-", 
                      InterpretationBox[
                        SubsuperscriptBox["u", 
                          TagBox[
                            StyleBox["3",
                              ShowContents->False],
                            (StyleForm[ #, ShowContents -> False]&)], "3"],
                        Tensor[ u, {3}, {Void}],
                        Editable->False]}], " ", 
                    InterpretationBox[
                      SubsuperscriptBox["v", 
                        TagBox[
                          StyleBox["2",
                            ShowContents->False],
                          (StyleForm[ #, ShowContents -> False]&)], "2"],
                      Tensor[ v, {2}, {Void}],
                      Editable->False]}], "+", 
                  RowBox[{
                    InterpretationBox[
                      SubsuperscriptBox["u", 
                        TagBox[
                          StyleBox["2",
                            ShowContents->False],
                          (StyleForm[ #, ShowContents -> False]&)], "2"],
                      Tensor[ u, {2}, {Void}],
                      Editable->False], " ", 
                    InterpretationBox[
                      SubsuperscriptBox["v", 
                        TagBox[
                          StyleBox["3",
                            ShowContents->False],
                          (StyleForm[ #, ShowContents -> False]&)], "3"],
                      Tensor[ v, {3}, {Void}],
                      Editable->False]}]}]},
              {
                RowBox[{
                  RowBox[{
                    InterpretationBox[
                      SubsuperscriptBox["u", 
                        TagBox[
                          StyleBox["3",
                            ShowContents->False],
                          (StyleForm[ #, ShowContents -> False]&)], "3"],
                      Tensor[ u, {3}, {Void}],
                      Editable->False], " ", 
                    InterpretationBox[
                      SubsuperscriptBox["v", 
                        TagBox[
                          StyleBox["1",
                            ShowContents->False],
                          (StyleForm[ #, ShowContents -> False]&)], "1"],
                      Tensor[ v, {1}, {Void}],
                      Editable->False]}], "-", 
                  RowBox[{
                    InterpretationBox[
                      SubsuperscriptBox["u", 
                        TagBox[
                          StyleBox["1",
                            ShowContents->False],
                          (StyleForm[ #, ShowContents -> False]&)], "1"],
                      Tensor[ u, {1}, {Void}],
                      Editable->False], " ", 
                    InterpretationBox[
                      SubsuperscriptBox["v", 
                        TagBox[
                          StyleBox["3",
                            ShowContents->False],
                          (StyleForm[ #, ShowContents -> False]&)], "3"],
                      Tensor[ v, {3}, {Void}],
                      Editable->False]}]}]},
              {
                RowBox[{
                  RowBox[{
                    RowBox[{"-", 
                      InterpretationBox[
                        SubsuperscriptBox["u", 
                          TagBox[
                            StyleBox["2",
                              ShowContents->False],
                            (StyleForm[ #, ShowContents -> False]&)], "2"],
                        Tensor[ u, {2}, {Void}],
                        Editable->False]}], " ", 
                    InterpretationBox[
                      SubsuperscriptBox["v", 
                        TagBox[
                          StyleBox["1",
                            ShowContents->False],
                          (StyleForm[ #, ShowContents -> False]&)], "1"],
                      Tensor[ v, {1}, {Void}],
                      Editable->False]}], "+", 
                  RowBox[{
                    InterpretationBox[
                      SubsuperscriptBox["u", 
                        TagBox[
                          StyleBox["1",
                            ShowContents->False],
                          (StyleForm[ #, ShowContents -> False]&)], "1"],
                      Tensor[ u, {1}, {Void}],
                      Editable->False], " ", 
                    InterpretationBox[
                      SubsuperscriptBox["v", 
                        TagBox[
                          StyleBox["2",
                            ShowContents->False],
                          (StyleForm[ #, ShowContents -> False]&)], "2"],
                      Tensor[ v, {2}, {Void}],
                      Editable->False]}]}]}
              },
            RowSpacings->1,
            ColumnAlignments->{Left}],
          Column], "\[NoBreak]", ")"}],
      Function[ BoxForm`e$, 
        MatrixForm[ BoxForm`e$]]]], "Output"]
}, Open  ]],

Cell[TextData[{
  "We can calculate this with tensor calculus using the Levi-Civita \
completely antisymmetric tensor ",
  Cell[BoxData[
      \(\[Epsilon]\)]],
  "."
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[{
    \(SetTensorValueRules[\[Epsilon]ddd[i, j, k], 
      PermutationPseudotensor[3]]\), "\n", 
    \(uu[i] vu[j] \[Epsilon]ddd[i, j, k]\), "\n", 
    \(\(% // ToArrayValues[]\) // MatrixForm\)}], "Input"],

Cell[BoxData[
    RowBox[{
      InterpretationBox[
        SubsuperscriptBox["u", 
          TagBox[
            StyleBox["i",
              ShowContents->False],
            (StyleForm[ #, ShowContents -> False]&)], "i"],
        Tensor[ u, {i}, {Void}],
        Editable->False], " ", 
      InterpretationBox[
        SubsuperscriptBox["v", 
          TagBox[
            StyleBox["j",
              ShowContents->False],
            (StyleForm[ #, ShowContents -> False]&)], "j"],
        Tensor[ v, {j}, {Void}],
        Editable->False], " ", 
      InterpretationBox[
        SubsuperscriptBox["\[Epsilon]", \(i  j  k\), 
          RowBox[{
            TagBox[
              StyleBox["i",
                ShowContents->False],
              (StyleForm[ #, ShowContents -> False]&)], 
            TagBox[
              StyleBox["j",
                ShowContents->False],
              (StyleForm[ #, ShowContents -> False]&)], 
            TagBox[
              StyleBox["k",
                ShowContents->False],
              (StyleForm[ #, ShowContents -> False]&)]}]],
        Tensor[ \[Epsilon], {Void, Void, Void}, {i, j, k}],
        Editable->False]}]], "Output"],

Cell[BoxData[
    TagBox[
      RowBox[{"(", "\[NoBreak]", 
        TagBox[GridBox[{
              {
                RowBox[{
                  RowBox[{
                    RowBox[{"-", 
                      InterpretationBox[
                        SubsuperscriptBox["u", 
                          TagBox[
                            StyleBox["3",
                              ShowContents->False],
                            (StyleForm[ #, ShowContents -> False]&)], "3"],
                        Tensor[ u, {3}, {Void}],
                        Editable->False]}], " ", 
                    InterpretationBox[
                      SubsuperscriptBox["v", 
                        TagBox[
                          StyleBox["2",
                            ShowContents->False],
                          (StyleForm[ #, ShowContents -> False]&)], "2"],
                      Tensor[ v, {2}, {Void}],
                      Editable->False]}], "+", 
                  RowBox[{
                    InterpretationBox[
                      SubsuperscriptBox["u", 
                        TagBox[
                          StyleBox["2",
                            ShowContents->False],
                          (StyleForm[ #, ShowContents -> False]&)], "2"],
                      Tensor[ u, {2}, {Void}],
                      Editable->False], " ", 
                    InterpretationBox[
                      SubsuperscriptBox["v", 
                        TagBox[
                          StyleBox["3",
                            ShowContents->False],
                          (StyleForm[ #, ShowContents -> False]&)], "3"],
                      Tensor[ v, {3}, {Void}],
                      Editable->False]}]}]},
              {
                RowBox[{
                  RowBox[{
                    InterpretationBox[
                      SubsuperscriptBox["u", 
                        TagBox[
                          StyleBox["3",
                            ShowContents->False],
                          (StyleForm[ #, ShowContents -> False]&)], "3"],
                      Tensor[ u, {3}, {Void}],
                      Editable->False], " ", 
                    InterpretationBox[
                      SubsuperscriptBox["v", 
                        TagBox[
                          StyleBox["1",
                            ShowContents->False],
                          (StyleForm[ #, ShowContents -> False]&)], "1"],
                      Tensor[ v, {1}, {Void}],
                      Editable->False]}], "-", 
                  RowBox[{
                    InterpretationBox[
                      SubsuperscriptBox["u", 
                        TagBox[
                          StyleBox["1",
                            ShowContents->False],
                          (StyleForm[ #, ShowContents -> False]&)], "1"],
                      Tensor[ u, {1}, {Void}],
                      Editable->False], " ", 
                    InterpretationBox[
                      SubsuperscriptBox["v", 
                        TagBox[
                          StyleBox["3",
                            ShowContents->False],
                          (StyleForm[ #, ShowContents -> False]&)], "3"],
                      Tensor[ v, {3}, {Void}],
                      Editable->False]}]}]},
              {
                RowBox[{
                  RowBox[{
                    RowBox[{"-", 
                      InterpretationBox[
                        SubsuperscriptBox["u", 
                          TagBox[
                            StyleBox["2",
                              ShowContents->False],
                            (StyleForm[ #, ShowContents -> False]&)], "2"],
                        Tensor[ u, {2}, {Void}],
                        Editable->False]}], " ", 
                    InterpretationBox[
                      SubsuperscriptBox["v", 
                        TagBox[
                          StyleBox["1",
                            ShowContents->False],
                          (StyleForm[ #, ShowContents -> False]&)], "1"],
                      Tensor[ v, {1}, {Void}],
                      Editable->False]}], "+", 
                  RowBox[{
                    InterpretationBox[
                      SubsuperscriptBox["u", 
                        TagBox[
                          StyleBox["1",
                            ShowContents->False],
                          (StyleForm[ #, ShowContents -> False]&)], "1"],
                      Tensor[ u, {1}, {Void}],
                      Editable->False], " ", 
                    InterpretationBox[
                      SubsuperscriptBox["v", 
                        TagBox[
                          StyleBox["2",
                            ShowContents->False],
                          (StyleForm[ #, ShowContents -> False]&)], "2"],
                      Tensor[ v, {2}, {Void}],
                      Editable->False]}]}]}
              },
            RowSpacings->1,
            ColumnAlignments->{Left}],
          Column], "\[NoBreak]", ")"}],
      Function[ BoxForm`e$, 
        MatrixForm[ BoxForm`e$]]]], "Output"]
}, Open  ]]
}, Open  ]],

Cell[TextData[Cell[BoxData[GridBox[{
        {
          ButtonBox[
            StyleBox["\[FirstPage]",
              "SR"],
            ButtonFunction:>FrontEndExecute[ {
                FrontEndToken[ 
                  FrontEnd`SelectedNotebook[ ], "ScrollPageFirst"]}],
            ButtonStyle->"SlideHyperlink",
            ButtonNote->"First Slide"], 
          ButtonBox[
            StyleBox["\[LeftPointer]",
              "SR"],
            ButtonFunction:>FrontEndExecute[ {
                FrontEndToken[ 
                  FrontEnd`SelectedNotebook[ ], "ScrollPagePrevious"]}],
            ButtonStyle->"SlideHyperlink",
            ButtonNote->"Previous Slide"], 
          ButtonBox[
            StyleBox["\[RightPointer]",
              "SR"],
            ButtonFunction:>FrontEndExecute[ {
                FrontEndToken[ 
                  FrontEnd`SelectedNotebook[ ], "ScrollPageNext"]}],
            ButtonStyle->"SlideHyperlink",
            ButtonNote->"Next Slide"], 
          ButtonBox[
            StyleBox["\[LastPage]",
              "SR"],
            ButtonFunction:>FrontEndExecute[ {
                FrontEndToken[ 
                  FrontEnd`SelectedNotebook[ ], "ScrollPageLast"]}],
            ButtonStyle->"SlideHyperlink"], " ", 
          ButtonBox[
            StyleBox[
              RowBox[{
                CounterBox["SlideShowNavigationBar"], \(\(\ \)\(of\)\(\ \)\), 
                
                
                CounterBox["SlideShowNavigationBar", {None, 
                  "SlideShowHeader", -1}]}],
              "SR"],
            ButtonFrame->"None"]}
        }]]]], "SlideShowNavigationBar",
  CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell[TextData[{
  StyleBox["Tensorial",
    FontSlant->"Italic"],
  " 4.0 - Dot Mode Calculations (b)"
}], "Section"],

Cell["\<\
The following does the calculation by actually generating the matrices and \
arrays, displaying them, and multiplying them.\
\>", "Text"],

Cell[CellGroupData[{

Cell[BoxData[{
    \(Print["\<Components of cross product in Cartesian 3D\>"]\), "\
\[IndentingNewLine]", 
    \(uu[i] vu[j] \[Epsilon]ddd[i, j, k]\), "\[IndentingNewLine]", 
    \(Print["\<Converting to dot mode. We group u and v\>"]\), "\
\[IndentingNewLine]", 
    \(%% // DotTensorFactors[{{1, 2}, 3}]\), "\[IndentingNewLine]", 
    \(Print["\<Expanding the arrays, we must put i at the second level in the \
first array.\>"]\), "\[IndentingNewLine]", 
    \(step1 = \(%% // ExpandDotArray[uu[_] vu[_], {2, 1}]\) // 
        ExpandDotArray[Tensor[\[Epsilon], __]]\), "\[IndentingNewLine]", 
    \(Print["\<Evaluating, we must contract the intermediate array on the 1st \
and 2nd levels\>"]\), "\[IndentingNewLine]", 
    \(%% // 
      DotOperate[1, 
        Function[{A, B}, ContractArray[A . B, {1, 2}]]]\)}], "Input"],

Cell[BoxData[
    \("Components of cross product in Cartesian 3D"\)], "Print"],

Cell[BoxData[
    RowBox[{
      InterpretationBox[
        SubsuperscriptBox["u", 
          TagBox[
            StyleBox["i",
              ShowContents->False],
            (StyleForm[ #, ShowContents -> False]&)], "i"],
        Tensor[ u, {i}, {Void}],
        Editable->False], " ", 
      InterpretationBox[
        SubsuperscriptBox["v", 
          TagBox[
            StyleBox["j",
              ShowContents->False],
            (StyleForm[ #, ShowContents -> False]&)], "j"],
        Tensor[ v, {j}, {Void}],
        Editable->False], " ", 
      InterpretationBox[
        SubsuperscriptBox["\[Epsilon]", \(i  j  k\), 
          RowBox[{
            TagBox[
              StyleBox["i",
                ShowContents->False],
              (StyleForm[ #, ShowContents -> False]&)], 
            TagBox[
              StyleBox["j",
                ShowContents->False],
              (StyleForm[ #, ShowContents -> False]&)], 
            TagBox[
              StyleBox["k",
                ShowContents->False],
              (StyleForm[ #, ShowContents -> False]&)]}]],
        Tensor[ \[Epsilon], {Void, Void, Void}, {i, j, k}],
        Editable->False]}]], "Output"],

Cell[BoxData[
    \("Converting to dot mode. We group u and v"\)], "Print"],

Cell[BoxData[
    RowBox[{
      RowBox[{"(", 
        RowBox[{
          InterpretationBox[
            SubsuperscriptBox["u", 
              TagBox[
                StyleBox["i",
                  ShowContents->False],
                (StyleForm[ #, ShowContents -> False]&)], "i"],
            Tensor[ u, {i}, {Void}],
            Editable->False], " ", 
          InterpretationBox[
            SubsuperscriptBox["v", 
              TagBox[
                StyleBox["j",
                  ShowContents->False],
                (StyleForm[ #, ShowContents -> False]&)], "j"],
            Tensor[ v, {j}, {Void}],
            Editable->False]}], ")"}], ".", 
      InterpretationBox[
        SubsuperscriptBox["\[Epsilon]", \(i  j  k\), 
          RowBox[{
            TagBox[
              StyleBox["i",
                ShowContents->False],
              (StyleForm[ #, ShowContents -> False]&)], 
            TagBox[
              StyleBox["j",
                ShowContents->False],
              (StyleForm[ #, ShowContents -> False]&)], 
            TagBox[
              StyleBox["k",
                ShowContents->False],
              (StyleForm[ #, ShowContents -> False]&)]}]],
        Tensor[ \[Epsilon], {Void, Void, Void}, {i, j, k}],
        Editable->False]}]], "Output"],

Cell[BoxData[
    \("Expanding the arrays, we must put i at the second level in the first \
array."\)], "Print"],

Cell[BoxData[
    RowBox[{
      TagBox[
        RowBox[{"(", "\[NoBreak]", GridBox[{
              {
                RowBox[{
                  InterpretationBox[
                    SubsuperscriptBox["u", 
                      TagBox[
                        StyleBox["1",
                          ShowContents->False],
                        (StyleForm[ #, ShowContents -> False]&)], "1"],
                    Tensor[ u, {1}, {Void}],
                    Editable->False], " ", 
                  InterpretationBox[
                    SubsuperscriptBox["v", 
                      TagBox[
                        StyleBox["1",
                          ShowContents->False],
                        (StyleForm[ #, ShowContents -> False]&)], "1"],
                    Tensor[ v, {1}, {Void}],
                    Editable->False]}], 
                RowBox[{
                  InterpretationBox[
                    SubsuperscriptBox["u", 
                      TagBox[
                        StyleBox["2",
                          ShowContents->False],
                        (StyleForm[ #, ShowContents -> False]&)], "2"],
                    Tensor[ u, {2}, {Void}],
                    Editable->False], " ", 
                  InterpretationBox[
                    SubsuperscriptBox["v", 
                      TagBox[
                        StyleBox["1",
                          ShowContents->False],
                        (StyleForm[ #, ShowContents -> False]&)], "1"],
                    Tensor[ v, {1}, {Void}],
                    Editable->False]}], 
                RowBox[{
                  InterpretationBox[
                    SubsuperscriptBox["u", 
                      TagBox[
                        StyleBox["3",
                          ShowContents->False],
                        (StyleForm[ #, ShowContents -> False]&)], "3"],
                    Tensor[ u, {3}, {Void}],
                    Editable->False], " ", 
                  InterpretationBox[
                    SubsuperscriptBox["v", 
                      TagBox[
                        StyleBox["1",
                          ShowContents->False],
                        (StyleForm[ #, ShowContents -> False]&)], "1"],
                    Tensor[ v, {1}, {Void}],
                    Editable->False]}]},
              {
                RowBox[{
                  InterpretationBox[
                    SubsuperscriptBox["u", 
                      TagBox[
                        StyleBox["1",
                          ShowContents->False],
                        (StyleForm[ #, ShowContents -> False]&)], "1"],
                    Tensor[ u, {1}, {Void}],
                    Editable->False], " ", 
                  InterpretationBox[
                    SubsuperscriptBox["v", 
                      TagBox[
                        StyleBox["2",
                          ShowContents->False],
                        (StyleForm[ #, ShowContents -> False]&)], "2"],
                    Tensor[ v, {2}, {Void}],
                    Editable->False]}], 
                RowBox[{
                  InterpretationBox[
                    SubsuperscriptBox["u", 
                      TagBox[
                        StyleBox["2",
                          ShowContents->False],
                        (StyleForm[ #, ShowContents -> False]&)], "2"],
                    Tensor[ u, {2}, {Void}],
                    Editable->False], " ", 
                  InterpretationBox[
                    SubsuperscriptBox["v", 
                      TagBox[
                        StyleBox["2",
                          ShowContents->False],
                        (StyleForm[ #, ShowContents -> False]&)], "2"],
                    Tensor[ v, {2}, {Void}],
                    Editable->False]}], 
                RowBox[{
                  InterpretationBox[
                    SubsuperscriptBox["u", 
                      TagBox[
                        StyleBox["3",
                          ShowContents->False],
                        (StyleForm[ #, ShowContents -> False]&)], "3"],
                    Tensor[ u, {3}, {Void}],
                    Editable->False], " ", 
                  InterpretationBox[
                    SubsuperscriptBox["v", 
                      TagBox[
                        StyleBox["2",
                          ShowContents->False],
                        (StyleForm[ #, ShowContents -> False]&)], "2"],
                    Tensor[ v, {2}, {Void}],
                    Editable->False]}]},
              {
                RowBox[{
                  InterpretationBox[
                    SubsuperscriptBox["u", 
                      TagBox[
                        StyleBox["1",
                          ShowContents->False],
                        (StyleForm[ #, ShowContents -> False]&)], "1"],
                    Tensor[ u, {1}, {Void}],
                    Editable->False], " ", 
                  InterpretationBox[
                    SubsuperscriptBox["v", 
                      TagBox[
                        StyleBox["3",
                          ShowContents->False],
                        (StyleForm[ #, ShowContents -> False]&)], "3"],
                    Tensor[ v, {3}, {Void}],
                    Editable->False]}], 
                RowBox[{
                  InterpretationBox[
                    SubsuperscriptBox["u", 
                      TagBox[
                        StyleBox["2",
                          ShowContents->False],
                        (StyleForm[ #, ShowContents -> False]&)], "2"],
                    Tensor[ u, {2}, {Void}],
                    Editable->False], " ", 
                  InterpretationBox[
                    SubsuperscriptBox["v", 
                      TagBox[
                        StyleBox["3",
                          ShowContents->False],
                        (StyleForm[ #, ShowContents -> False]&)], "3"],
                    Tensor[ v, {3}, {Void}],
                    Editable->False]}], 
                RowBox[{
                  InterpretationBox[
                    SubsuperscriptBox["u", 
                      TagBox[
                        StyleBox["3",
                          ShowContents->False],
                        (StyleForm[ #, ShowContents -> False]&)], "3"],
                    Tensor[ u, {3}, {Void}],
                    Editable->False], " ", 
                  InterpretationBox[
                    SubsuperscriptBox["v", 
                      TagBox[
                        StyleBox["3",
                          ShowContents->False],
                        (StyleForm[ #, ShowContents -> False]&)], "3"],
                    Tensor[ v, {3}, {Void}],
                    Editable->False]}]}
              },
            RowSpacings->1,
            ColumnSpacings->1,
            ColumnAlignments->{Left}], "\[NoBreak]", ")"}],
        Function[ BoxForm`e$, 
          MatrixForm[ BoxForm`e$]]], ".", 
      TagBox[
        RowBox[{"(", "\[NoBreak]", GridBox[{
              {
                RowBox[{"(", "\[NoBreak]", 
                  TagBox[GridBox[{
                        {"0"},
                        {"0"},
                        {"0"}
                        },
                      RowSpacings->1,
                      ColumnAlignments->{Left}],
                    Column], "\[NoBreak]", ")"}], 
                RowBox[{"(", "\[NoBreak]", 
                  TagBox[GridBox[{
                        {"0"},
                        {"0"},
                        {"1"}
                        },
                      RowSpacings->1,
                      ColumnAlignments->{Left}],
                    Column], "\[NoBreak]", ")"}], 
                RowBox[{"(", "\[NoBreak]", 
                  TagBox[GridBox[{
                        {"0"},
                        {\(-1\)},
                        {"0"}
                        },
                      RowSpacings->1,
                      ColumnAlignments->{Left}],
                    Column], "\[NoBreak]", ")"}]},
              {
                RowBox[{"(", "\[NoBreak]", 
                  TagBox[GridBox[{
                        {"0"},
                        {"0"},
                        {\(-1\)}
                        },
                      RowSpacings->1,
                      ColumnAlignments->{Left}],
                    Column], "\[NoBreak]", ")"}], 
                RowBox[{"(", "\[NoBreak]", 
                  TagBox[GridBox[{
                        {"0"},
                        {"0"},
                        {"0"}
                        },
                      RowSpacings->1,
                      ColumnAlignments->{Left}],
                    Column], "\[NoBreak]", ")"}], 
                RowBox[{"(", "\[NoBreak]", 
                  TagBox[GridBox[{
                        {"1"},
                        {"0"},
                        {"0"}
                        },
                      RowSpacings->1,
                      ColumnAlignments->{Left}],
                    Column], "\[NoBreak]", ")"}]},
              {
                RowBox[{"(", "\[NoBreak]", 
                  TagBox[GridBox[{
                        {"0"},
                        {"1"},
                        {"0"}
                        },
                      RowSpacings->1,
                      ColumnAlignments->{Left}],
                    Column], "\[NoBreak]", ")"}], 
                RowBox[{"(", "\[NoBreak]", 
                  TagBox[GridBox[{
                        {\(-1\)},
                        {"0"},
                        {"0"}
                        },
                      RowSpacings->1,
                      ColumnAlignments->{Left}],
                    Column], "\[NoBreak]", ")"}], 
                RowBox[{"(", "\[NoBreak]", 
                  TagBox[GridBox[{
                        {"0"},
                        {"0"},
                        {"0"}
                        },
                      RowSpacings->1,
                      ColumnAlignments->{Left}],
                    Column], "\[NoBreak]", ")"}]}
              },
            RowSpacings->1,
            ColumnSpacings->1,
            ColumnAlignments->{Left}], "\[NoBreak]", ")"}],
        Function[ BoxForm`e$, 
          MatrixForm[ BoxForm`e$]]]}]], "Output"],

Cell[BoxData[
    \("Evaluating, we must contract the intermediate array on the 1st and 2nd \
levels"\)], "Print"],

Cell[BoxData[
    TagBox[
      RowBox[{"(", "\[NoBreak]", 
        TagBox[GridBox[{
              {
                RowBox[{
                  RowBox[{
                    RowBox[{"-", 
                      InterpretationBox[
                        SubsuperscriptBox["u", 
                          TagBox[
                            StyleBox["3",
                              ShowContents->False],
                            (StyleForm[ #, ShowContents -> False]&)], "3"],
                        Tensor[ u, {3}, {Void}],
                        Editable->False]}], " ", 
                    InterpretationBox[
                      SubsuperscriptBox["v", 
                        TagBox[
                          StyleBox["2",
                            ShowContents->False],
                          (StyleForm[ #, ShowContents -> False]&)], "2"],
                      Tensor[ v, {2}, {Void}],
                      Editable->False]}], "+", 
                  RowBox[{
                    InterpretationBox[
                      SubsuperscriptBox["u", 
                        TagBox[
                          StyleBox["2",
                            ShowContents->False],
                          (StyleForm[ #, ShowContents -> False]&)], "2"],
                      Tensor[ u, {2}, {Void}],
                      Editable->False], " ", 
                    InterpretationBox[
                      SubsuperscriptBox["v", 
                        TagBox[
                          StyleBox["3",
                            ShowContents->False],
                          (StyleForm[ #, ShowContents -> False]&)], "3"],
                      Tensor[ v, {3}, {Void}],
                      Editable->False]}]}]},
              {
                RowBox[{
                  RowBox[{
                    InterpretationBox[
                      SubsuperscriptBox["u", 
                        TagBox[
                          StyleBox["3",
                            ShowContents->False],
                          (StyleForm[ #, ShowContents -> False]&)], "3"],
                      Tensor[ u, {3}, {Void}],
                      Editable->False], " ", 
                    InterpretationBox[
                      SubsuperscriptBox["v", 
                        TagBox[
                          StyleBox["1",
                            ShowContents->False],
                          (StyleForm[ #, ShowContents -> False]&)], "1"],
                      Tensor[ v, {1}, {Void}],
                      Editable->False]}], "-", 
                  RowBox[{
                    InterpretationBox[
                      SubsuperscriptBox["u", 
                        TagBox[
                          StyleBox["1",
                            ShowContents->False],
                          (StyleForm[ #, ShowContents -> False]&)], "1"],
                      Tensor[ u, {1}, {Void}],
                      Editable->False], " ", 
                    InterpretationBox[
                      SubsuperscriptBox["v", 
                        TagBox[
                          StyleBox["3",
                            ShowContents->False],
                          (StyleForm[ #, ShowContents -> False]&)], "3"],
                      Tensor[ v, {3}, {Void}],
                      Editable->False]}]}]},
              {
                RowBox[{
                  RowBox[{
                    RowBox[{"-", 
                      InterpretationBox[
                        SubsuperscriptBox["u", 
                          TagBox[
                            StyleBox["2",
                              ShowContents->False],
                            (StyleForm[ #, ShowContents -> False]&)], "2"],
                        Tensor[ u, {2}, {Void}],
                        Editable->False]}], " ", 
                    InterpretationBox[
                      SubsuperscriptBox["v", 
                        TagBox[
                          StyleBox["1",
                            ShowContents->False],
                          (StyleForm[ #, ShowContents -> False]&)], "1"],
                      Tensor[ v, {1}, {Void}],
                      Editable->False]}], "+", 
                  RowBox[{
                    InterpretationBox[
                      SubsuperscriptBox["u", 
                        TagBox[
                          StyleBox["1",
                            ShowContents->False],
                          (StyleForm[ #, ShowContents -> False]&)], "1"],
                      Tensor[ u, {1}, {Void}],
                      Editable->False], " ", 
                    InterpretationBox[
                      SubsuperscriptBox["v", 
                        TagBox[
                          StyleBox["2",
                            ShowContents->False],
                          (StyleForm[ #, ShowContents -> False]&)], "2"],
                      Tensor[ v, {2}, {Void}],
                      Editable->False]}]}]}
              },
            RowSpacings->1,
            ColumnAlignments->{Left}],
          Column], "\[NoBreak]", ")"}],
      Function[ BoxForm`e$, 
        MatrixForm[ BoxForm`e$]]]], "Output"]
}, Open  ]]
}, Open  ]],

Cell[TextData[Cell[BoxData[GridBox[{
        {
          ButtonBox[
            StyleBox["\[FirstPage]",
              "SR"],
            ButtonFunction:>FrontEndExecute[ {
                FrontEndToken[ 
                  FrontEnd`SelectedNotebook[ ], "ScrollPageFirst"]}],
            ButtonStyle->"SlideHyperlink",
            ButtonNote->"First Slide"], 
          ButtonBox[
            StyleBox["\[LeftPointer]",
              "SR"],
            ButtonFunction:>FrontEndExecute[ {
                FrontEndToken[ 
                  FrontEnd`SelectedNotebook[ ], "ScrollPagePrevious"]}],
            ButtonStyle->"SlideHyperlink",
            ButtonNote->"Previous Slide"], 
          ButtonBox[
            StyleBox["\[RightPointer]",
              "SR"],
            ButtonFunction:>FrontEndExecute[ {
                FrontEndToken[ 
                  FrontEnd`SelectedNotebook[ ], "ScrollPageNext"]}],
            ButtonStyle->"SlideHyperlink",
            ButtonNote->"Next Slide"], 
          ButtonBox[
            StyleBox["\[LastPage]",
              "SR"],
            ButtonFunction:>FrontEndExecute[ {
                FrontEndToken[ 
                  FrontEnd`SelectedNotebook[ ], "ScrollPageLast"]}],
            ButtonStyle->"SlideHyperlink"], " ", 
          ButtonBox[
            StyleBox[
              RowBox[{
                CounterBox["SlideShowNavigationBar"], \(\(\ \)\(of\)\(\ \)\), 
                
                
                CounterBox["SlideShowNavigationBar", {None, 
                  "SlideShowHeader", -1}]}],
              "SR"],
            ButtonFrame->"None"]}
        }]]]], "SlideShowNavigationBar",
  CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell[TextData[{
  StyleBox["Tensorial",
    FontSlant->"Italic"],
  " 4.0 - Dot Mode Calculations (c)"
}], "Section"],

Cell["\<\
If we wish to see the extra contraction as a separate step we can pick up \
from the penultimate line above.\
\>", "Text"],

Cell[CellGroupData[{

Cell[BoxData[{
    \(Print["\<Picking up from the 3rd line of the previous \
calculation\>"]\), "\[IndentingNewLine]", 
    \(step1\), "\[IndentingNewLine]", 
    \(Print["\<Multiplying the two arrays without the extra contraction gives \
us an array \>", Xudd[j, j, k]]\), "\[IndentingNewLine]", 
    \(%% // DotOperate[1, Dot]\), "\[IndentingNewLine]", 
    \(Print["\<Contracting levels 1 and 2\>"]\), "\[IndentingNewLine]", 
    \(ContractArray[%%, {1, 2}] // MatrixForm\)}], "Input"],

Cell[BoxData[
    \("Picking up from the 3rd line of the previous calculation"\)], "Print"],

Cell[BoxData[
    RowBox[{
      TagBox[
        RowBox[{"(", "\[NoBreak]", GridBox[{
              {
                RowBox[{
                  InterpretationBox[
                    SubsuperscriptBox["u", 
                      TagBox[
                        StyleBox["1",
                          ShowContents->False],
                        (StyleForm[ #, ShowContents -> False]&)], "1"],
                    Tensor[ u, {1}, {Void}],
                    Editable->False], " ", 
                  InterpretationBox[
                    SubsuperscriptBox["v", 
                      TagBox[
                        StyleBox["1",
                          ShowContents->False],
                        (StyleForm[ #, ShowContents -> False]&)], "1"],
                    Tensor[ v, {1}, {Void}],
                    Editable->False]}], 
                RowBox[{
                  InterpretationBox[
                    SubsuperscriptBox["u", 
                      TagBox[
                        StyleBox["2",
                          ShowContents->False],
                        (StyleForm[ #, ShowContents -> False]&)], "2"],
                    Tensor[ u, {2}, {Void}],
                    Editable->False], " ", 
                  InterpretationBox[
                    SubsuperscriptBox["v", 
                      TagBox[
                        StyleBox["1",
                          ShowContents->False],
                        (StyleForm[ #, ShowContents -> False]&)], "1"],
                    Tensor[ v, {1}, {Void}],
                    Editable->False]}], 
                RowBox[{
                  InterpretationBox[
                    SubsuperscriptBox["u", 
                      TagBox[
                        StyleBox["3",
                          ShowContents->False],
                        (StyleForm[ #, ShowContents -> False]&)], "3"],
                    Tensor[ u, {3}, {Void}],
                    Editable->False], " ", 
                  InterpretationBox[
                    SubsuperscriptBox["v", 
                      TagBox[
                        StyleBox["1",
                          ShowContents->False],
                        (StyleForm[ #, ShowContents -> False]&)], "1"],
                    Tensor[ v, {1}, {Void}],
                    Editable->False]}]},
              {
                RowBox[{
                  InterpretationBox[
                    SubsuperscriptBox["u", 
                      TagBox[
                        StyleBox["1",
                          ShowContents->False],
                        (StyleForm[ #, ShowContents -> False]&)], "1"],
                    Tensor[ u, {1}, {Void}],
                    Editable->False], " ", 
                  InterpretationBox[
                    SubsuperscriptBox["v", 
                      TagBox[
                        StyleBox["2",
                          ShowContents->False],
                        (StyleForm[ #, ShowContents -> False]&)], "2"],
                    Tensor[ v, {2}, {Void}],
                    Editable->False]}], 
                RowBox[{
                  InterpretationBox[
                    SubsuperscriptBox["u", 
                      TagBox[
                        StyleBox["2",
                          ShowContents->False],
                        (StyleForm[ #, ShowContents -> False]&)], "2"],
                    Tensor[ u, {2}, {Void}],
                    Editable->False], " ", 
                  InterpretationBox[
                    SubsuperscriptBox["v", 
                      TagBox[
                        StyleBox["2",
                          ShowContents->False],
                        (StyleForm[ #, ShowContents -> False]&)], "2"],
                    Tensor[ v, {2}, {Void}],
                    Editable->False]}], 
                RowBox[{
                  InterpretationBox[
                    SubsuperscriptBox["u", 
                      TagBox[
                        StyleBox["3",
                          ShowContents->False],
                        (StyleForm[ #, ShowContents -> False]&)], "3"],
                    Tensor[ u, {3}, {Void}],
                    Editable->False], " ", 
                  InterpretationBox[
                    SubsuperscriptBox["v", 
                      TagBox[
                        StyleBox["2",
                          ShowContents->False],
                        (StyleForm[ #, ShowContents -> False]&)], "2"],
                    Tensor[ v, {2}, {Void}],
                    Editable->False]}]},
              {
                RowBox[{
                  InterpretationBox[
                    SubsuperscriptBox["u", 
                      TagBox[
                        StyleBox["1",
                          ShowContents->False],
                        (StyleForm[ #, ShowContents -> False]&)], "1"],
                    Tensor[ u, {1}, {Void}],
                    Editable->False], " ", 
                  InterpretationBox[
                    SubsuperscriptBox["v", 
                      TagBox[
                        StyleBox["3",
                          ShowContents->False],
                        (StyleForm[ #, ShowContents -> False]&)], "3"],
                    Tensor[ v, {3}, {Void}],
                    Editable->False]}], 
                RowBox[{
                  InterpretationBox[
                    SubsuperscriptBox["u", 
                      TagBox[
                        StyleBox["2",
                          ShowContents->False],
                        (StyleForm[ #, ShowContents -> False]&)], "2"],
                    Tensor[ u, {2}, {Void}],
                    Editable->False], " ", 
                  InterpretationBox[
                    SubsuperscriptBox["v", 
                      TagBox[
                        StyleBox["3",
                          ShowContents->False],
                        (StyleForm[ #, ShowContents -> False]&)], "3"],
                    Tensor[ v, {3}, {Void}],
                    Editable->False]}], 
                RowBox[{
                  InterpretationBox[
                    SubsuperscriptBox["u", 
                      TagBox[
                        StyleBox["3",
                          ShowContents->False],
                        (StyleForm[ #, ShowContents -> False]&)], "3"],
                    Tensor[ u, {3}, {Void}],
                    Editable->False], " ", 
                  InterpretationBox[
                    SubsuperscriptBox["v", 
                      TagBox[
                        StyleBox["3",
                          ShowContents->False],
                        (StyleForm[ #, ShowContents -> False]&)], "3"],
                    Tensor[ v, {3}, {Void}],
                    Editable->False]}]}
              },
            RowSpacings->1,
            ColumnSpacings->1,
            ColumnAlignments->{Left}], "\[NoBreak]", ")"}],
        Function[ BoxForm`e$, 
          MatrixForm[ BoxForm`e$]]], ".", 
      TagBox[
        RowBox[{"(", "\[NoBreak]", GridBox[{
              {
                RowBox[{"(", "\[NoBreak]", 
                  TagBox[GridBox[{
                        {"0"},
                        {"0"},
                        {"0"}
                        },
                      RowSpacings->1,
                      ColumnAlignments->{Left}],
                    Column], "\[NoBreak]", ")"}], 
                RowBox[{"(", "\[NoBreak]", 
                  TagBox[GridBox[{
                        {"0"},
                        {"0"},
                        {"1"}
                        },
                      RowSpacings->1,
                      ColumnAlignments->{Left}],
                    Column], "\[NoBreak]", ")"}], 
                RowBox[{"(", "\[NoBreak]", 
                  TagBox[GridBox[{
                        {"0"},
                        {\(-1\)},
                        {"0"}
                        },
                      RowSpacings->1,
                      ColumnAlignments->{Left}],
                    Column], "\[NoBreak]", ")"}]},
              {
                RowBox[{"(", "\[NoBreak]", 
                  TagBox[GridBox[{
                        {"0"},
                        {"0"},
                        {\(-1\)}
                        },
                      RowSpacings->1,
                      ColumnAlignments->{Left}],
                    Column], "\[NoBreak]", ")"}], 
                RowBox[{"(", "\[NoBreak]", 
                  TagBox[GridBox[{
                        {"0"},
                        {"0"},
                        {"0"}
                        },
                      RowSpacings->1,
                      ColumnAlignments->{Left}],
                    Column], "\[NoBreak]", ")"}], 
                RowBox[{"(", "\[NoBreak]", 
                  TagBox[GridBox[{
                        {"1"},
                        {"0"},
                        {"0"}
                        },
                      RowSpacings->1,
                      ColumnAlignments->{Left}],
                    Column], "\[NoBreak]", ")"}]},
              {
                RowBox[{"(", "\[NoBreak]", 
                  TagBox[GridBox[{
                        {"0"},
                        {"1"},
                        {"0"}
                        },
                      RowSpacings->1,
                      ColumnAlignments->{Left}],
                    Column], "\[NoBreak]", ")"}], 
                RowBox[{"(", "\[NoBreak]", 
                  TagBox[GridBox[{
                        {\(-1\)},
                        {"0"},
                        {"0"}
                        },
                      RowSpacings->1,
                      ColumnAlignments->{Left}],
                    Column], "\[NoBreak]", ")"}], 
                RowBox[{"(", "\[NoBreak]", 
                  TagBox[GridBox[{
                        {"0"},
                        {"0"},
                        {"0"}
                        },
                      RowSpacings->1,
                      ColumnAlignments->{Left}],
                    Column], "\[NoBreak]", ")"}]}
              },
            RowSpacings->1,
            ColumnSpacings->1,
            ColumnAlignments->{Left}], "\[NoBreak]", ")"}],
        Function[ BoxForm`e$, 
          MatrixForm[ BoxForm`e$]]]}]], "Output"],

Cell[BoxData[
    InterpretationBox[
      RowBox[{"\<\"Multiplying the two arrays without the extra contraction \
gives us an array \"\>", "\[InvisibleSpace]", 
        InterpretationBox[
          SubsuperscriptBox["X", 
            RowBox[{
              TagBox[
                StyleBox["j",
                  ShowContents->False],
                (StyleForm[ #, ShowContents -> False]&)], "j", "k"}], 
            RowBox[{"j", 
              TagBox[
                StyleBox["j",
                  ShowContents->False],
                (StyleForm[ #, ShowContents -> False]&)], 
              TagBox[
                StyleBox["k",
                  ShowContents->False],
                (StyleForm[ #, ShowContents -> False]&)]}]],
          Tensor[ X, {j, Void, Void}, {Void, j, k}],
          Editable->False]}],
      SequenceForm[ 
      "Multiplying the two arrays without the extra contraction gives us an \
array ", 
        Tensor[ X, {j, Void, Void}, {Void, j, k}]],
      Editable->False]], "Print"],

Cell[BoxData[
    TagBox[
      RowBox[{"(", "\[NoBreak]", GridBox[{
            {
              RowBox[{"(", "\[NoBreak]", 
                TagBox[GridBox[{
                      {"0"},
                      {
                        RowBox[{
                          InterpretationBox[
                            SubsuperscriptBox["u", 
                              TagBox[
                                StyleBox["3",
                                  ShowContents->False],
                                (StyleForm[ #, ShowContents -> False]&)], 
                              "3"],
                            Tensor[ u, {3}, {Void}],
                            Editable->False], " ", 
                          InterpretationBox[
                            SubsuperscriptBox["v", 
                              TagBox[
                                StyleBox["1",
                                  ShowContents->False],
                                (StyleForm[ #, ShowContents -> False]&)], 
                              "1"],
                            Tensor[ v, {1}, {Void}],
                            Editable->False]}]},
                      {
                        RowBox[{
                          RowBox[{"-", 
                            InterpretationBox[
                              SubsuperscriptBox["u", 
                                TagBox[
                                  StyleBox["2",
                                    ShowContents->False],
                                  (StyleForm[ #, ShowContents -> False]&)], 
                                "2"],
                              Tensor[ u, {2}, {Void}],
                              Editable->False]}], " ", 
                          InterpretationBox[
                            SubsuperscriptBox["v", 
                              TagBox[
                                StyleBox["1",
                                  ShowContents->False],
                                (StyleForm[ #, ShowContents -> False]&)], 
                              "1"],
                            Tensor[ v, {1}, {Void}],
                            Editable->False]}]}
                      },
                    RowSpacings->1,
                    ColumnAlignments->{Left}],
                  Column], "\[NoBreak]", ")"}], 
              RowBox[{"(", "\[NoBreak]", 
                TagBox[GridBox[{
                      {
                        RowBox[{
                          RowBox[{"-", 
                            InterpretationBox[
                              SubsuperscriptBox["u", 
                                TagBox[
                                  StyleBox["3",
                                    ShowContents->False],
                                  (StyleForm[ #, ShowContents -> False]&)], 
                                "3"],
                              Tensor[ u, {3}, {Void}],
                              Editable->False]}], " ", 
                          InterpretationBox[
                            SubsuperscriptBox["v", 
                              TagBox[
                                StyleBox["1",
                                  ShowContents->False],
                                (StyleForm[ #, ShowContents -> False]&)], 
                              "1"],
                            Tensor[ v, {1}, {Void}],
                            Editable->False]}]},
                      {"0"},
                      {
                        RowBox[{
                          InterpretationBox[
                            SubsuperscriptBox["u", 
                              TagBox[
                                StyleBox["1",
                                  ShowContents->False],
                                (StyleForm[ #, ShowContents -> False]&)], 
                              "1"],
                            Tensor[ u, {1}, {Void}],
                            Editable->False], " ", 
                          InterpretationBox[
                            SubsuperscriptBox["v", 
                              TagBox[
                                StyleBox["1",
                                  ShowContents->False],
                                (StyleForm[ #, ShowContents -> False]&)], 
                              "1"],
                            Tensor[ v, {1}, {Void}],
                            Editable->False]}]}
                      },
                    RowSpacings->1,
                    ColumnAlignments->{Left}],
                  Column], "\[NoBreak]", ")"}], 
              RowBox[{"(", "\[NoBreak]", 
                TagBox[GridBox[{
                      {
                        RowBox[{
                          InterpretationBox[
                            SubsuperscriptBox["u", 
                              TagBox[
                                StyleBox["2",
                                  ShowContents->False],
                                (StyleForm[ #, ShowContents -> False]&)], 
                              "2"],
                            Tensor[ u, {2}, {Void}],
                            Editable->False], " ", 
                          InterpretationBox[
                            SubsuperscriptBox["v", 
                              TagBox[
                                StyleBox["1",
                                  ShowContents->False],
                                (StyleForm[ #, ShowContents -> False]&)], 
                              "1"],
                            Tensor[ v, {1}, {Void}],
                            Editable->False]}]},
                      {
                        RowBox[{
                          RowBox[{"-", 
                            InterpretationBox[
                              SubsuperscriptBox["u", 
                                TagBox[
                                  StyleBox["1",
                                    ShowContents->False],
                                  (StyleForm[ #, ShowContents -> False]&)], 
                                "1"],
                              Tensor[ u, {1}, {Void}],
                              Editable->False]}], " ", 
                          InterpretationBox[
                            SubsuperscriptBox["v", 
                              TagBox[
                                StyleBox["1",
                                  ShowContents->False],
                                (StyleForm[ #, ShowContents -> False]&)], 
                              "1"],
                            Tensor[ v, {1}, {Void}],
                            Editable->False]}]},
                      {"0"}
                      },
                    RowSpacings->1,
                    ColumnAlignments->{Left}],
                  Column], "\[NoBreak]", ")"}]},
            {
              RowBox[{"(", "\[NoBreak]", 
                TagBox[GridBox[{
                      {"0"},
                      {
                        RowBox[{
                          InterpretationBox[
                            SubsuperscriptBox["u", 
                              TagBox[
                                StyleBox["3",
                                  ShowContents->False],
                                (StyleForm[ #, ShowContents -> False]&)], 
                              "3"],
                            Tensor[ u, {3}, {Void}],
                            Editable->False], " ", 
                          InterpretationBox[
                            SubsuperscriptBox["v", 
                              TagBox[
                                StyleBox["2",
                                  ShowContents->False],
                                (StyleForm[ #, ShowContents -> False]&)], 
                              "2"],
                            Tensor[ v, {2}, {Void}],
                            Editable->False]}]},
                      {
                        RowBox[{
                          RowBox[{"-", 
                            InterpretationBox[
                              SubsuperscriptBox["u", 
                                TagBox[
                                  StyleBox["2",
                                    ShowContents->False],
                                  (StyleForm[ #, ShowContents -> False]&)], 
                                "2"],
                              Tensor[ u, {2}, {Void}],
                              Editable->False]}], " ", 
                          InterpretationBox[
                            SubsuperscriptBox["v", 
                              TagBox[
                                StyleBox["2",
                                  ShowContents->False],
                                (StyleForm[ #, ShowContents -> False]&)], 
                              "2"],
                            Tensor[ v, {2}, {Void}],
                            Editable->False]}]}
                      },
                    RowSpacings->1,
                    ColumnAlignments->{Left}],
                  Column], "\[NoBreak]", ")"}], 
              RowBox[{"(", "\[NoBreak]", 
                TagBox[GridBox[{
                      {
                        RowBox[{
                          RowBox[{"-", 
                            InterpretationBox[
                              SubsuperscriptBox["u", 
                                TagBox[
                                  StyleBox["3",
                                    ShowContents->False],
                                  (StyleForm[ #, ShowContents -> False]&)], 
                                "3"],
                              Tensor[ u, {3}, {Void}],
                              Editable->False]}], " ", 
                          InterpretationBox[
                            SubsuperscriptBox["v", 
                              TagBox[
                                StyleBox["2",
                                  ShowContents->False],
                                (StyleForm[ #, ShowContents -> False]&)], 
                              "2"],
                            Tensor[ v, {2}, {Void}],
                            Editable->False]}]},
                      {"0"},
                      {
                        RowBox[{
                          InterpretationBox[
                            SubsuperscriptBox["u", 
                              TagBox[
                                StyleBox["1",
                                  ShowContents->False],
                                (StyleForm[ #, ShowContents -> False]&)], 
                              "1"],
                            Tensor[ u, {1}, {Void}],
                            Editable->False], " ", 
                          InterpretationBox[
                            SubsuperscriptBox["v", 
                              TagBox[
                                StyleBox["2",
                                  ShowContents->False],
                                (StyleForm[ #, ShowContents -> False]&)], 
                              "2"],
                            Tensor[ v, {2}, {Void}],
                            Editable->False]}]}
                      },
                    RowSpacings->1,
                    ColumnAlignments->{Left}],
                  Column], "\[NoBreak]", ")"}], 
              RowBox[{"(", "\[NoBreak]", 
                TagBox[GridBox[{
                      {
                        RowBox[{
                          InterpretationBox[
                            SubsuperscriptBox["u", 
                              TagBox[
                                StyleBox["2",
                                  ShowContents->False],
                                (StyleForm[ #, ShowContents -> False]&)], 
                              "2"],
                            Tensor[ u, {2}, {Void}],
                            Editable->False], " ", 
                          InterpretationBox[
                            SubsuperscriptBox["v", 
                              TagBox[
                                StyleBox["2",
                                  ShowContents->False],
                                (StyleForm[ #, ShowContents -> False]&)], 
                              "2"],
                            Tensor[ v, {2}, {Void}],
                            Editable->False]}]},
                      {
                        RowBox[{
                          RowBox[{"-", 
                            InterpretationBox[
                              SubsuperscriptBox["u", 
                                TagBox[
                                  StyleBox["1",
                                    ShowContents->False],
                                  (StyleForm[ #, ShowContents -> False]&)], 
                                "1"],
                              Tensor[ u, {1}, {Void}],
                              Editable->False]}], " ", 
                          InterpretationBox[
                            SubsuperscriptBox["v", 
                              TagBox[
                                StyleBox["2",
                                  ShowContents->False],
                                (StyleForm[ #, ShowContents -> False]&)], 
                              "2"],
                            Tensor[ v, {2}, {Void}],
                            Editable->False]}]},
                      {"0"}
                      },
                    RowSpacings->1,
                    ColumnAlignments->{Left}],
                  Column], "\[NoBreak]", ")"}]},
            {
              RowBox[{"(", "\[NoBreak]", 
                TagBox[GridBox[{
                      {"0"},
                      {
                        RowBox[{
                          InterpretationBox[
                            SubsuperscriptBox["u", 
                              TagBox[
                                StyleBox["3",
                                  ShowContents->False],
                                (StyleForm[ #, ShowContents -> False]&)], 
                              "3"],
                            Tensor[ u, {3}, {Void}],
                            Editable->False], " ", 
                          InterpretationBox[
                            SubsuperscriptBox["v", 
                              TagBox[
                                StyleBox["3",
                                  ShowContents->False],
                                (StyleForm[ #, ShowContents -> False]&)], 
                              "3"],
                            Tensor[ v, {3}, {Void}],
                            Editable->False]}]},
                      {
                        RowBox[{
                          RowBox[{"-", 
                            InterpretationBox[
                              SubsuperscriptBox["u", 
                                TagBox[
                                  StyleBox["2",
                                    ShowContents->False],
                                  (StyleForm[ #, ShowContents -> False]&)], 
                                "2"],
                              Tensor[ u, {2}, {Void}],
                              Editable->False]}], " ", 
                          InterpretationBox[
                            SubsuperscriptBox["v", 
                              TagBox[
                                StyleBox["3",
                                  ShowContents->False],
                                (StyleForm[ #, ShowContents -> False]&)], 
                              "3"],
                            Tensor[ v, {3}, {Void}],
                            Editable->False]}]}
                      },
                    RowSpacings->1,
                    ColumnAlignments->{Left}],
                  Column], "\[NoBreak]", ")"}], 
              RowBox[{"(", "\[NoBreak]", 
                TagBox[GridBox[{
                      {
                        RowBox[{
                          RowBox[{"-", 
                            InterpretationBox[
                              SubsuperscriptBox["u", 
                                TagBox[
                                  StyleBox["3",
                                    ShowContents->False],
                                  (StyleForm[ #, ShowContents -> False]&)], 
                                "3"],
                              Tensor[ u, {3}, {Void}],
                              Editable->False]}], " ", 
                          InterpretationBox[
                            SubsuperscriptBox["v", 
                              TagBox[
                                StyleBox["3",
                                  ShowContents->False],
                                (StyleForm[ #, ShowContents -> False]&)], 
                              "3"],
                            Tensor[ v, {3}, {Void}],
                            Editable->False]}]},
                      {"0"},
                      {
                        RowBox[{
                          InterpretationBox[
                            SubsuperscriptBox["u", 
                              TagBox[
                                StyleBox["1",
                                  ShowContents->False],
                                (StyleForm[ #, ShowContents -> False]&)], 
                              "1"],
                            Tensor[ u, {1}, {Void}],
                            Editable->False], " ", 
                          InterpretationBox[
                            SubsuperscriptBox["v", 
                              TagBox[
                                StyleBox["3",
                                  ShowContents->False],
                                (StyleForm[ #, ShowContents -> False]&)], 
                              "3"],
                            Tensor[ v, {3}, {Void}],
                            Editable->False]}]}
                      },
                    RowSpacings->1,
                    ColumnAlignments->{Left}],
                  Column], "\[NoBreak]", ")"}], 
              RowBox[{"(", "\[NoBreak]", 
                TagBox[GridBox[{
                      {
                        RowBox[{
                          InterpretationBox[
                            SubsuperscriptBox["u", 
                              TagBox[
                                StyleBox["2",
                                  ShowContents->False],
                                (StyleForm[ #, ShowContents -> False]&)], 
                              "2"],
                            Tensor[ u, {2}, {Void}],
                            Editable->False], " ", 
                          InterpretationBox[
                            SubsuperscriptBox["v", 
                              TagBox[
                                StyleBox["3",
                                  ShowContents->False],
                                (StyleForm[ #, ShowContents -> False]&)], 
                              "3"],
                            Tensor[ v, {3}, {Void}],
                            Editable->False]}]},
                      {
                        RowBox[{
                          RowBox[{"-", 
                            InterpretationBox[
                              SubsuperscriptBox["u", 
                                TagBox[
                                  StyleBox["1",
                                    ShowContents->False],
                                  (StyleForm[ #, ShowContents -> False]&)], 
                                "1"],
                              Tensor[ u, {1}, {Void}],
                              Editable->False]}], " ", 
                          InterpretationBox[
                            SubsuperscriptBox["v", 
                              TagBox[
                                StyleBox["3",
                                  ShowContents->False],
                                (StyleForm[ #, ShowContents -> False]&)], 
                              "3"],
                            Tensor[ v, {3}, {Void}],
                            Editable->False]}]},
                      {"0"}
                      },
                    RowSpacings->1,
                    ColumnAlignments->{Left}],
                  Column], "\[NoBreak]", ")"}]}
            },
          RowSpacings->1,
          ColumnSpacings->1,
          ColumnAlignments->{Left}], "\[NoBreak]", ")"}],
      Function[ BoxForm`e$, 
        MatrixForm[ BoxForm`e$]]]], "Output"],

Cell[BoxData[
    \("Contracting levels 1 and 2"\)], "Print"],

Cell[BoxData[
    TagBox[
      RowBox[{"(", "\[NoBreak]", 
        TagBox[GridBox[{
              {
                RowBox[{
                  RowBox[{
                    RowBox[{"-", 
                      InterpretationBox[
                        SubsuperscriptBox["u", 
                          TagBox[
                            StyleBox["3",
                              ShowContents->False],
                            (StyleForm[ #, ShowContents -> False]&)], "3"],
                        Tensor[ u, {3}, {Void}],
                        Editable->False]}], " ", 
                    InterpretationBox[
                      SubsuperscriptBox["v", 
                        TagBox[
                          StyleBox["2",
                            ShowContents->False],
                          (StyleForm[ #, ShowContents -> False]&)], "2"],
                      Tensor[ v, {2}, {Void}],
                      Editable->False]}], "+", 
                  RowBox[{
                    InterpretationBox[
                      SubsuperscriptBox["u", 
                        TagBox[
                          StyleBox["2",
                            ShowContents->False],
                          (StyleForm[ #, ShowContents -> False]&)], "2"],
                      Tensor[ u, {2}, {Void}],
                      Editable->False], " ", 
                    InterpretationBox[
                      SubsuperscriptBox["v", 
                        TagBox[
                          StyleBox["3",
                            ShowContents->False],
                          (StyleForm[ #, ShowContents -> False]&)], "3"],
                      Tensor[ v, {3}, {Void}],
                      Editable->False]}]}]},
              {
                RowBox[{
                  RowBox[{
                    InterpretationBox[
                      SubsuperscriptBox["u", 
                        TagBox[
                          StyleBox["3",
                            ShowContents->False],
                          (StyleForm[ #, ShowContents -> False]&)], "3"],
                      Tensor[ u, {3}, {Void}],
                      Editable->False], " ", 
                    InterpretationBox[
                      SubsuperscriptBox["v", 
                        TagBox[
                          StyleBox["1",
                            ShowContents->False],
                          (StyleForm[ #, ShowContents -> False]&)], "1"],
                      Tensor[ v, {1}, {Void}],
                      Editable->False]}], "-", 
                  RowBox[{
                    InterpretationBox[
                      SubsuperscriptBox["u", 
                        TagBox[
                          StyleBox["1",
                            ShowContents->False],
                          (StyleForm[ #, ShowContents -> False]&)], "1"],
                      Tensor[ u, {1}, {Void}],
                      Editable->False], " ", 
                    InterpretationBox[
                      SubsuperscriptBox["v", 
                        TagBox[
                          StyleBox["3",
                            ShowContents->False],
                          (StyleForm[ #, ShowContents -> False]&)], "3"],
                      Tensor[ v, {3}, {Void}],
                      Editable->False]}]}]},
              {
                RowBox[{
                  RowBox[{
                    RowBox[{"-", 
                      InterpretationBox[
                        SubsuperscriptBox["u", 
                          TagBox[
                            StyleBox["2",
                              ShowContents->False],
                            (StyleForm[ #, ShowContents -> False]&)], "2"],
                        Tensor[ u, {2}, {Void}],
                        Editable->False]}], " ", 
                    InterpretationBox[
                      SubsuperscriptBox["v", 
                        TagBox[
                          StyleBox["1",
                            ShowContents->False],
                          (StyleForm[ #, ShowContents -> False]&)], "1"],
                      Tensor[ v, {1}, {Void}],
                      Editable->False]}], "+", 
                  RowBox[{
                    InterpretationBox[
                      SubsuperscriptBox["u", 
                        TagBox[
                          StyleBox["1",
                            ShowContents->False],
                          (StyleForm[ #, ShowContents -> False]&)], "1"],
                      Tensor[ u, {1}, {Void}],
                      Editable->False], " ", 
                    InterpretationBox[
                      SubsuperscriptBox["v", 
                        TagBox[
                          StyleBox["2",
                            ShowContents->False],
                          (StyleForm[ #, ShowContents -> False]&)], "2"],
                      Tensor[ v, {2}, {Void}],
                      Editable->False]}]}]}
              },
            RowSpacings->1,
            ColumnAlignments->{Left}],
          Column], "\[NoBreak]", ")"}],
      Function[ BoxForm`e$, 
        MatrixForm[ BoxForm`e$]]]], "Output"]
}, Open  ]]
}, Open  ]],

Cell[TextData[Cell[BoxData[GridBox[{
        {
          ButtonBox[
            StyleBox["\[FirstPage]",
              "SR"],
            ButtonFunction:>FrontEndExecute[ {
                FrontEndToken[ 
                  FrontEnd`SelectedNotebook[ ], "ScrollPageFirst"]}],
            ButtonStyle->"SlideHyperlink",
            ButtonNote->"First Slide"], 
          ButtonBox[
            StyleBox["\[LeftPointer]",
              "SR"],
            ButtonFunction:>FrontEndExecute[ {
                FrontEndToken[ 
                  FrontEnd`SelectedNotebook[ ], "ScrollPagePrevious"]}],
            ButtonStyle->"SlideHyperlink",
            ButtonNote->"Previous Slide"], 
          ButtonBox[
            StyleBox["\[RightPointer]",
              "SR"],
            ButtonFunction:>FrontEndExecute[ {
                FrontEndToken[ 
                  FrontEnd`SelectedNotebook[ ], "ScrollPageNext"]}],
            ButtonStyle->"SlideHyperlink",
            ButtonNote->"Next Slide"], 
          ButtonBox[
            StyleBox["\[LastPage]",
              "SR"],
            ButtonFunction:>FrontEndExecute[ {
                FrontEndToken[ 
                  FrontEnd`SelectedNotebook[ ], "ScrollPageLast"]}],
            ButtonStyle->"SlideHyperlink"], " ", 
          ButtonBox[
            StyleBox[
              RowBox[{
                CounterBox["SlideShowNavigationBar"], \(\(\ \)\(of\)\(\ \)\), 
                
                
                CounterBox["SlideShowNavigationBar", {None, 
                  "SlideShowHeader", -1}]}],
              "SR"],
            ButtonFrame->"None"]}
        }]]]], "SlideShowNavigationBar",
  CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell[TextData[{
  StyleBox["Tensorial",
    FontSlant->"Italic"],
  " 4.0 - Dot Mode Calculations (d)"
}], "Section"],

Cell["\<\
The following shows an alternative dot mode expansion of the same expression.\
\
\>", "Text"],

Cell[CellGroupData[{

Cell[BoxData[{
    \(Print["\<Components of cross product in Cartesian 3D\>"]\), "\
\[IndentingNewLine]", 
    \(uu[i] vu[j] \[Epsilon]ddd[i, j, k]\), "\[IndentingNewLine]", 
    \(Print["\<Converting to dot mode using 3 arguments\>"]\), "\
\[IndentingNewLine]", 
    \(%% // DotTensorFactors[{1, 2, 3}]\), "\[IndentingNewLine]", 
    \(Print["\<Expanding the arrays we put j at the first level in the \
\[Epsilon] array.\>"]\), "\[IndentingNewLine]", 
    \(\(%% // ExpandDotArray[uu[_] | vu[_]]\) // 
      ExpandDotArray[
        Tensor[\[Epsilon], __], {2, 1, 3}]\), "\[IndentingNewLine]", 
    \(Print["\<We then evaluate the right most dot product giving an \
expression of the form \>", uu[i] . Xdd[i, k]]\), "\[IndentingNewLine]", 
    \(%% // DotOperate[2, Dot]\), "\[IndentingNewLine]", 
    \(Print["\<Everything is lined up to evaluate the remaining dot\>"]\), "\
\[IndentingNewLine]", 
    \(%% // DotOperate[1, Dot]\)}], "Input"],

Cell[BoxData[
    \("Components of cross product in Cartesian 3D"\)], "Print"],

Cell[BoxData[
    RowBox[{
      InterpretationBox[
        SubsuperscriptBox["u", 
          TagBox[
            StyleBox["i",
              ShowContents->False],
            (StyleForm[ #, ShowContents -> False]&)], "i"],
        Tensor[ u, {i}, {Void}],
        Editable->False], " ", 
      InterpretationBox[
        SubsuperscriptBox["v", 
          TagBox[
            StyleBox["j",
              ShowContents->False],
            (StyleForm[ #, ShowContents -> False]&)], "j"],
        Tensor[ v, {j}, {Void}],
        Editable->False], " ", 
      InterpretationBox[
        SubsuperscriptBox["\[Epsilon]", \(i  j  k\), 
          RowBox[{
            TagBox[
              StyleBox["i",
                ShowContents->False],
              (StyleForm[ #, ShowContents -> False]&)], 
            TagBox[
              StyleBox["j",
                ShowContents->False],
              (StyleForm[ #, ShowContents -> False]&)], 
            TagBox[
              StyleBox["k",
                ShowContents->False],
              (StyleForm[ #, ShowContents -> False]&)]}]],
        Tensor[ \[Epsilon], {Void, Void, Void}, {i, j, k}],
        Editable->False]}]], "Output"],

Cell[BoxData[
    \("Converting to dot mode using 3 arguments"\)], "Print"],

Cell[BoxData[
    RowBox[{
      InterpretationBox[
        SubsuperscriptBox["u", 
          TagBox[
            StyleBox["i",
              ShowContents->False],
            (StyleForm[ #, ShowContents -> False]&)], "i"],
        Tensor[ u, {i}, {Void}],
        Editable->False], ".", 
      InterpretationBox[
        SubsuperscriptBox["v", 
          TagBox[
            StyleBox["j",
              ShowContents->False],
            (StyleForm[ #, ShowContents -> False]&)], "j"],
        Tensor[ v, {j}, {Void}],
        Editable->False], ".", 
      InterpretationBox[
        SubsuperscriptBox["\[Epsilon]", \(i  j  k\), 
          RowBox[{
            TagBox[
              StyleBox["i",
                ShowContents->False],
              (StyleForm[ #, ShowContents -> False]&)], 
            TagBox[
              StyleBox["j",
                ShowContents->False],
              (StyleForm[ #, ShowContents -> False]&)], 
            TagBox[
              StyleBox["k",
                ShowContents->False],
              (StyleForm[ #, ShowContents -> False]&)]}]],
        Tensor[ \[Epsilon], {Void, Void, Void}, {i, j, k}],
        Editable->False]}]], "Output"],

Cell[BoxData[
    \("Expanding the arrays we put j at the first level in the \[Epsilon] \
array."\)], "Print"],

Cell[BoxData[
    RowBox[{
      TagBox[
        RowBox[{"(", "\[NoBreak]", 
          TagBox[GridBox[{
                {
                  InterpretationBox[
                    SubsuperscriptBox["u", 
                      TagBox[
                        StyleBox["1",
                          ShowContents->False],
                        (StyleForm[ #, ShowContents -> False]&)], "1"],
                    Tensor[ u, {1}, {Void}],
                    Editable->False]},
                {
                  InterpretationBox[
                    SubsuperscriptBox["u", 
                      TagBox[
                        StyleBox["2",
                          ShowContents->False],
                        (StyleForm[ #, ShowContents -> False]&)], "2"],
                    Tensor[ u, {2}, {Void}],
                    Editable->False]},
                {
                  InterpretationBox[
                    SubsuperscriptBox["u", 
                      TagBox[
                        StyleBox["3",
                          ShowContents->False],
                        (StyleForm[ #, ShowContents -> False]&)], "3"],
                    Tensor[ u, {3}, {Void}],
                    Editable->False]}
                },
              RowSpacings->1,
              ColumnAlignments->{Left}],
            Column], "\[NoBreak]", ")"}],
        Function[ BoxForm`e$, 
          MatrixForm[ BoxForm`e$]]], ".", 
      TagBox[
        RowBox[{"(", "\[NoBreak]", 
          TagBox[GridBox[{
                {
                  InterpretationBox[
                    SubsuperscriptBox["v", 
                      TagBox[
                        StyleBox["1",
                          ShowContents->False],
                        (StyleForm[ #, ShowContents -> False]&)], "1"],
                    Tensor[ v, {1}, {Void}],
                    Editable->False]},
                {
                  InterpretationBox[
                    SubsuperscriptBox["v", 
                      TagBox[
                        StyleBox["2",
                          ShowContents->False],
                        (StyleForm[ #, ShowContents -> False]&)], "2"],
                    Tensor[ v, {2}, {Void}],
                    Editable->False]},
                {
                  InterpretationBox[
                    SubsuperscriptBox["v", 
                      TagBox[
                        StyleBox["3",
                          ShowContents->False],
                        (StyleForm[ #, ShowContents -> False]&)], "3"],
                    Tensor[ v, {3}, {Void}],
                    Editable->False]}
                },
              RowSpacings->1,
              ColumnAlignments->{Left}],
            Column], "\[NoBreak]", ")"}],
        Function[ BoxForm`e$, 
          MatrixForm[ BoxForm`e$]]], ".", 
      TagBox[
        RowBox[{"(", "\[NoBreak]", GridBox[{
              {
                RowBox[{"(", "\[NoBreak]", 
                  TagBox[GridBox[{
                        {"0"},
                        {"0"},
                        {"0"}
                        },
                      RowSpacings->1,
                      ColumnAlignments->{Left}],
                    Column], "\[NoBreak]", ")"}], 
                RowBox[{"(", "\[NoBreak]", 
                  TagBox[GridBox[{
                        {"0"},
                        {"0"},
                        {\(-1\)}
                        },
                      RowSpacings->1,
                      ColumnAlignments->{Left}],
                    Column], "\[NoBreak]", ")"}], 
                RowBox[{"(", "\[NoBreak]", 
                  TagBox[GridBox[{
                        {"0"},
                        {"1"},
                        {"0"}
                        },
                      RowSpacings->1,
                      ColumnAlignments->{Left}],
                    Column], "\[NoBreak]", ")"}]},
              {
                RowBox[{"(", "\[NoBreak]", 
                  TagBox[GridBox[{
                        {"0"},
                        {"0"},
                        {"1"}
                        },
                      RowSpacings->1,
                      ColumnAlignments->{Left}],
                    Column], "\[NoBreak]", ")"}], 
                RowBox[{"(", "\[NoBreak]", 
                  TagBox[GridBox[{
                        {"0"},
                        {"0"},
                        {"0"}
                        },
                      RowSpacings->1,
                      ColumnAlignments->{Left}],
                    Column], "\[NoBreak]", ")"}], 
                RowBox[{"(", "\[NoBreak]", 
                  TagBox[GridBox[{
                        {\(-1\)},
                        {"0"},
                        {"0"}
                        },
                      RowSpacings->1,
                      ColumnAlignments->{Left}],
                    Column], "\[NoBreak]", ")"}]},
              {
                RowBox[{"(", "\[NoBreak]", 
                  TagBox[GridBox[{
                        {"0"},
                        {\(-1\)},
                        {"0"}
                        },
                      RowSpacings->1,
                      ColumnAlignments->{Left}],
                    Column], "\[NoBreak]", ")"}], 
                RowBox[{"(", "\[NoBreak]", 
                  TagBox[GridBox[{
                        {"1"},
                        {"0"},
                        {"0"}
                        },
                      RowSpacings->1,
                      ColumnAlignments->{Left}],
                    Column], "\[NoBreak]", ")"}], 
                RowBox[{"(", "\[NoBreak]", 
                  TagBox[GridBox[{
                        {"0"},
                        {"0"},
                        {"0"}
                        },
                      RowSpacings->1,
                      ColumnAlignments->{Left}],
                    Column], "\[NoBreak]", ")"}]}
              },
            RowSpacings->1,
            ColumnSpacings->1,
            ColumnAlignments->{Left}], "\[NoBreak]", ")"}],
        Function[ BoxForm`e$, 
          MatrixForm[ BoxForm`e$]]]}]], "Output"],

Cell[BoxData[
    InterpretationBox[
      RowBox[{"\<\"We then evaluate the right most dot product giving an \
expression of the form \"\>", "\[InvisibleSpace]", 
        RowBox[{
          InterpretationBox[
            SubsuperscriptBox["u", 
              TagBox[
                StyleBox["i",
                  ShowContents->False],
                (StyleForm[ #, ShowContents -> False]&)], "i"],
            Tensor[ u, {i}, {Void}],
            Editable->False], ".", 
          InterpretationBox[
            SubsuperscriptBox["X", \(i  k\), 
              RowBox[{
                TagBox[
                  StyleBox["i",
                    ShowContents->False],
                  (StyleForm[ #, ShowContents -> False]&)], 
                TagBox[
                  StyleBox["k",
                    ShowContents->False],
                  (StyleForm[ #, ShowContents -> False]&)]}]],
            Tensor[ X, {Void, Void}, {i, k}],
            Editable->False]}]}],
      SequenceForm[ 
      "We then evaluate the right most dot product giving an expression of \
the form ", 
        Dot[ 
          Tensor[ u, {i}, {Void}], 
          Tensor[ X, {Void, Void}, {i, k}]]],
      Editable->False]], "Print"],

Cell[BoxData[
    RowBox[{
      TagBox[
        RowBox[{"(", "\[NoBreak]", 
          TagBox[GridBox[{
                {
                  InterpretationBox[
                    SubsuperscriptBox["u", 
                      TagBox[
                        StyleBox["1",
                          ShowContents->False],
                        (StyleForm[ #, ShowContents -> False]&)], "1"],
                    Tensor[ u, {1}, {Void}],
                    Editable->False]},
                {
                  InterpretationBox[
                    SubsuperscriptBox["u", 
                      TagBox[
                        StyleBox["2",
                          ShowContents->False],
                        (StyleForm[ #, ShowContents -> False]&)], "2"],
                    Tensor[ u, {2}, {Void}],
                    Editable->False]},
                {
                  InterpretationBox[
                    SubsuperscriptBox["u", 
                      TagBox[
                        StyleBox["3",
                          ShowContents->False],
                        (StyleForm[ #, ShowContents -> False]&)], "3"],
                    Tensor[ u, {3}, {Void}],
                    Editable->False]}
                },
              RowSpacings->1,
              ColumnAlignments->{Left}],
            Column], "\[NoBreak]", ")"}],
        Function[ BoxForm`e$, 
          MatrixForm[ BoxForm`e$]]], ".", 
      TagBox[
        RowBox[{"(", "\[NoBreak]", GridBox[{
              {"0", 
                RowBox[{"-", 
                  InterpretationBox[
                    SubsuperscriptBox["v", 
                      TagBox[
                        StyleBox["3",
                          ShowContents->False],
                        (StyleForm[ #, ShowContents -> False]&)], "3"],
                    Tensor[ v, {3}, {Void}],
                    Editable->False]}], 
                InterpretationBox[
                  SubsuperscriptBox["v", 
                    TagBox[
                      StyleBox["2",
                        ShowContents->False],
                      (StyleForm[ #, ShowContents -> False]&)], "2"],
                  Tensor[ v, {2}, {Void}],
                  Editable->False]},
              {
                InterpretationBox[
                  SubsuperscriptBox["v", 
                    TagBox[
                      StyleBox["3",
                        ShowContents->False],
                      (StyleForm[ #, ShowContents -> False]&)], "3"],
                  Tensor[ v, {3}, {Void}],
                  Editable->False], "0", 
                RowBox[{"-", 
                  InterpretationBox[
                    SubsuperscriptBox["v", 
                      TagBox[
                        StyleBox["1",
                          ShowContents->False],
                        (StyleForm[ #, ShowContents -> False]&)], "1"],
                    Tensor[ v, {1}, {Void}],
                    Editable->False]}]},
              {
                RowBox[{"-", 
                  InterpretationBox[
                    SubsuperscriptBox["v", 
                      TagBox[
                        StyleBox["2",
                          ShowContents->False],
                        (StyleForm[ #, ShowContents -> False]&)], "2"],
                    Tensor[ v, {2}, {Void}],
                    Editable->False]}], 
                InterpretationBox[
                  SubsuperscriptBox["v", 
                    TagBox[
                      StyleBox["1",
                        ShowContents->False],
                      (StyleForm[ #, ShowContents -> False]&)], "1"],
                  Tensor[ v, {1}, {Void}],
                  Editable->False], "0"}
              },
            RowSpacings->1,
            ColumnSpacings->1,
            ColumnAlignments->{Left}], "\[NoBreak]", ")"}],
        Function[ BoxForm`e$, 
          MatrixForm[ BoxForm`e$]]]}]], "Output"],

Cell[BoxData[
    \("Everything is lined up to evaluate the remaining dot"\)], "Print"],

Cell[BoxData[
    TagBox[
      RowBox[{"(", "\[NoBreak]", 
        TagBox[GridBox[{
              {
                RowBox[{
                  RowBox[{
                    RowBox[{"-", 
                      InterpretationBox[
                        SubsuperscriptBox["u", 
                          TagBox[
                            StyleBox["3",
                              ShowContents->False],
                            (StyleForm[ #, ShowContents -> False]&)], "3"],
                        Tensor[ u, {3}, {Void}],
                        Editable->False]}], " ", 
                    InterpretationBox[
                      SubsuperscriptBox["v", 
                        TagBox[
                          StyleBox["2",
                            ShowContents->False],
                          (StyleForm[ #, ShowContents -> False]&)], "2"],
                      Tensor[ v, {2}, {Void}],
                      Editable->False]}], "+", 
                  RowBox[{
                    InterpretationBox[
                      SubsuperscriptBox["u", 
                        TagBox[
                          StyleBox["2",
                            ShowContents->False],
                          (StyleForm[ #, ShowContents -> False]&)], "2"],
                      Tensor[ u, {2}, {Void}],
                      Editable->False], " ", 
                    InterpretationBox[
                      SubsuperscriptBox["v", 
                        TagBox[
                          StyleBox["3",
                            ShowContents->False],
                          (StyleForm[ #, ShowContents -> False]&)], "3"],
                      Tensor[ v, {3}, {Void}],
                      Editable->False]}]}]},
              {
                RowBox[{
                  RowBox[{
                    InterpretationBox[
                      SubsuperscriptBox["u", 
                        TagBox[
                          StyleBox["3",
                            ShowContents->False],
                          (StyleForm[ #, ShowContents -> False]&)], "3"],
                      Tensor[ u, {3}, {Void}],
                      Editable->False], " ", 
                    InterpretationBox[
                      SubsuperscriptBox["v", 
                        TagBox[
                          StyleBox["1",
                            ShowContents->False],
                          (StyleForm[ #, ShowContents -> False]&)], "1"],
                      Tensor[ v, {1}, {Void}],
                      Editable->False]}], "-", 
                  RowBox[{
                    InterpretationBox[
                      SubsuperscriptBox["u", 
                        TagBox[
                          StyleBox["1",
                            ShowContents->False],
                          (StyleForm[ #, ShowContents -> False]&)], "1"],
                      Tensor[ u, {1}, {Void}],
                      Editable->False], " ", 
                    InterpretationBox[
                      SubsuperscriptBox["v", 
                        TagBox[
                          StyleBox["3",
                            ShowContents->False],
                          (StyleForm[ #, ShowContents -> False]&)], "3"],
                      Tensor[ v, {3}, {Void}],
                      Editable->False]}]}]},
              {
                RowBox[{
                  RowBox[{
                    RowBox[{"-", 
                      InterpretationBox[
                        SubsuperscriptBox["u", 
                          TagBox[
                            StyleBox["2",
                              ShowContents->False],
                            (StyleForm[ #, ShowContents -> False]&)], "2"],
                        Tensor[ u, {2}, {Void}],
                        Editable->False]}], " ", 
                    InterpretationBox[
                      SubsuperscriptBox["v", 
                        TagBox[
                          StyleBox["1",
                            ShowContents->False],
                          (StyleForm[ #, ShowContents -> False]&)], "1"],
                      Tensor[ v, {1}, {Void}],
                      Editable->False]}], "+", 
                  RowBox[{
                    InterpretationBox[
                      SubsuperscriptBox["u", 
                        TagBox[
                          StyleBox["1",
                            ShowContents->False],
                          (StyleForm[ #, ShowContents -> False]&)], "1"],
                      Tensor[ u, {1}, {Void}],
                      Editable->False], " ", 
                    InterpretationBox[
                      SubsuperscriptBox["v", 
                        TagBox[
                          StyleBox["2",
                            ShowContents->False],
                          (StyleForm[ #, ShowContents -> False]&)], "2"],
                      Tensor[ v, {2}, {Void}],
                      Editable->False]}]}]}
              },
            RowSpacings->1,
            ColumnAlignments->{Left}],
          Column], "\[NoBreak]", ")"}],
      Function[ BoxForm`e$, 
        MatrixForm[ BoxForm`e$]]]], "Output"]
}, Open  ]]
}, Open  ]],

Cell[TextData[Cell[BoxData[GridBox[{
        {
          ButtonBox[
            StyleBox["\[FirstPage]",
              "SR"],
            ButtonFunction:>FrontEndExecute[ {
                FrontEndToken[ 
                  FrontEnd`SelectedNotebook[ ], "ScrollPageFirst"]}],
            ButtonStyle->"SlideHyperlink",
            ButtonNote->"First Slide"], 
          ButtonBox[
            StyleBox["\[LeftPointer]",
              "SR"],
            ButtonFunction:>FrontEndExecute[ {
                FrontEndToken[ 
                  FrontEnd`SelectedNotebook[ ], "ScrollPagePrevious"]}],
            ButtonStyle->"SlideHyperlink",
            ButtonNote->"Previous Slide"], 
          ButtonBox[
            StyleBox["\[RightPointer]",
              "SR"],
            ButtonFunction:>FrontEndExecute[ {
                FrontEndToken[ 
                  FrontEnd`SelectedNotebook[ ], "ScrollPageNext"]}],
            ButtonStyle->"SlideHyperlink",
            ButtonNote->"Next Slide"], 
          ButtonBox[
            StyleBox["\[LastPage]",
              "SR"],
            ButtonFunction:>FrontEndExecute[ {
                FrontEndToken[ 
                  FrontEnd`SelectedNotebook[ ], "ScrollPageLast"]}],
            ButtonStyle->"SlideHyperlink"], " ", 
          ButtonBox[
            StyleBox[
              RowBox[{
                CounterBox["SlideShowNavigationBar"], \(\(\ \)\(of\)\(\ \)\), 
                
                
                CounterBox["SlideShowNavigationBar", {None, 
                  "SlideShowHeader", -1}]}],
              "SR"],
            ButtonFrame->"None"]}
        }]]]], "SlideShowNavigationBar",
  CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell[TextData[{
  StyleBox["Tensorial",
    FontSlant->"Italic"],
  " 4.0 - Using Symmetries (a)"
}], "Section"],

Cell["Symmetries can be specified and used in simplifications.", \
"EmphasisText"],

Cell["\<\
The following declares the symmetry of a metric tensor g and then simplifies \
the full expression of the line element. This declares that the first and \
second slots of 2nd order g tensors are symmetrical.\
\>", "Text"],

Cell[BoxData[
    \(\(TensorSymmetry[g, 2] = Symmetric[1, 2];\)\)], "Input"],

Cell[CellGroupData[{

Cell[BoxData[{
    \(gdd[a, b] dxu[a] dxu[b]\), "\[IndentingNewLine]", 
    \(% // EinsteinSum[]\), "\[IndentingNewLine]", 
    \(% // SymmetrizeSlots[]\)}], "Input"],

Cell[BoxData[
    RowBox[{
      InterpretationBox[
        SubsuperscriptBox["dx", 
          TagBox[
            StyleBox["a",
              ShowContents->False],
            (StyleForm[ #, ShowContents -> False]&)], "a"],
        Tensor[ dx, {a}, {Void}],
        Editable->False], " ", 
      InterpretationBox[
        SubsuperscriptBox["dx", 
          TagBox[
            StyleBox["b",
              ShowContents->False],
            (StyleForm[ #, ShowContents -> False]&)], "b"],
        Tensor[ dx, {b}, {Void}],
        Editable->False], " ", 
      InterpretationBox[
        SubsuperscriptBox["g", \(a  b\), 
          RowBox[{
            TagBox[
              StyleBox["a",
                ShowContents->False],
              (StyleForm[ #, ShowContents -> False]&)], 
            TagBox[
              StyleBox["b",
                ShowContents->False],
              (StyleForm[ #, ShowContents -> False]&)]}]],
        Tensor[ g, {Void, Void}, {a, b}],
        Editable->False]}]], "Output"],

Cell[BoxData[
    RowBox[{
      RowBox[{
        TagBox[
          SuperscriptBox[
            RowBox[{"(", 
              InterpretationBox[
                SubsuperscriptBox["dx", 
                  TagBox[
                    StyleBox["1",
                      ShowContents->False],
                    (StyleForm[ #, ShowContents -> False]&)], "1"],
                Tensor[ dx, {1}, {Void}],
                Editable->False], ")"}], "2"],
          DisplayForm], " ", 
        InterpretationBox[
          SubsuperscriptBox["g", \(1  1\), 
            RowBox[{
              TagBox[
                StyleBox["1",
                  ShowContents->False],
                (StyleForm[ #, ShowContents -> False]&)], 
              TagBox[
                StyleBox["1",
                  ShowContents->False],
                (StyleForm[ #, ShowContents -> False]&)]}]],
          Tensor[ g, {Void, Void}, {1, 1}],
          Editable->False]}], "+", 
      RowBox[{
        InterpretationBox[
          SubsuperscriptBox["dx", 
            TagBox[
              StyleBox["1",
                ShowContents->False],
              (StyleForm[ #, ShowContents -> False]&)], "1"],
          Tensor[ dx, {1}, {Void}],
          Editable->False], " ", 
        InterpretationBox[
          SubsuperscriptBox["dx", 
            TagBox[
              StyleBox["2",
                ShowContents->False],
              (StyleForm[ #, ShowContents -> False]&)], "2"],
          Tensor[ dx, {2}, {Void}],
          Editable->False], " ", 
        InterpretationBox[
          SubsuperscriptBox["g", \(1  2\), 
            RowBox[{
              TagBox[
                StyleBox["1",
                  ShowContents->False],
                (StyleForm[ #, ShowContents -> False]&)], 
              TagBox[
                StyleBox["2",
                  ShowContents->False],
                (StyleForm[ #, ShowContents -> False]&)]}]],
          Tensor[ g, {Void, Void}, {1, 2}],
          Editable->False]}], "+", 
      RowBox[{
        InterpretationBox[
          SubsuperscriptBox["dx", 
            TagBox[
              StyleBox["1",
                ShowContents->False],
              (StyleForm[ #, ShowContents -> False]&)], "1"],
          Tensor[ dx, {1}, {Void}],
          Editable->False], " ", 
        InterpretationBox[
          SubsuperscriptBox["dx", 
            TagBox[
              StyleBox["3",
                ShowContents->False],
              (StyleForm[ #, ShowContents -> False]&)], "3"],
          Tensor[ dx, {3}, {Void}],
          Editable->False], " ", 
        InterpretationBox[
          SubsuperscriptBox["g", \(1  3\), 
            RowBox[{
              TagBox[
                StyleBox["1",
                  ShowContents->False],
                (StyleForm[ #, ShowContents -> False]&)], 
              TagBox[
                StyleBox["3",
                  ShowContents->False],
                (StyleForm[ #, ShowContents -> False]&)]}]],
          Tensor[ g, {Void, Void}, {1, 3}],
          Editable->False]}], "+", 
      RowBox[{
        InterpretationBox[
          SubsuperscriptBox["dx", 
            TagBox[
              StyleBox["1",
                ShowContents->False],
              (StyleForm[ #, ShowContents -> False]&)], "1"],
          Tensor[ dx, {1}, {Void}],
          Editable->False], " ", 
        InterpretationBox[
          SubsuperscriptBox["dx", 
            TagBox[
              StyleBox["2",
                ShowContents->False],
              (StyleForm[ #, ShowContents -> False]&)], "2"],
          Tensor[ dx, {2}, {Void}],
          Editable->False], " ", 
        InterpretationBox[
          SubsuperscriptBox["g", \(2  1\), 
            RowBox[{
              TagBox[
                StyleBox["2",
                  ShowContents->False],
                (StyleForm[ #, ShowContents -> False]&)], 
              TagBox[
                StyleBox["1",
                  ShowContents->False],
                (StyleForm[ #, ShowContents -> False]&)]}]],
          Tensor[ g, {Void, Void}, {2, 1}],
          Editable->False]}], "+", 
      RowBox[{
        TagBox[
          SuperscriptBox[
            RowBox[{"(", 
              InterpretationBox[
                SubsuperscriptBox["dx", 
                  TagBox[
                    StyleBox["2",
                      ShowContents->False],
                    (StyleForm[ #, ShowContents -> False]&)], "2"],
                Tensor[ dx, {2}, {Void}],
                Editable->False], ")"}], "2"],
          DisplayForm], " ", 
        InterpretationBox[
          SubsuperscriptBox["g", \(2  2\), 
            RowBox[{
              TagBox[
                StyleBox["2",
                  ShowContents->False],
                (StyleForm[ #, ShowContents -> False]&)], 
              TagBox[
                StyleBox["2",
                  ShowContents->False],
                (StyleForm[ #, ShowContents -> False]&)]}]],
          Tensor[ g, {Void, Void}, {2, 2}],
          Editable->False]}], "+", 
      RowBox[{
        InterpretationBox[
          SubsuperscriptBox["dx", 
            TagBox[
              StyleBox["2",
                ShowContents->False],
              (StyleForm[ #, ShowContents -> False]&)], "2"],
          Tensor[ dx, {2}, {Void}],
          Editable->False], " ", 
        InterpretationBox[
          SubsuperscriptBox["dx", 
            TagBox[
              StyleBox["3",
                ShowContents->False],
              (StyleForm[ #, ShowContents -> False]&)], "3"],
          Tensor[ dx, {3}, {Void}],
          Editable->False], " ", 
        InterpretationBox[
          SubsuperscriptBox["g", \(2  3\), 
            RowBox[{
              TagBox[
                StyleBox["2",
                  ShowContents->False],
                (StyleForm[ #, ShowContents -> False]&)], 
              TagBox[
                StyleBox["3",
                  ShowContents->False],
                (StyleForm[ #, ShowContents -> False]&)]}]],
          Tensor[ g, {Void, Void}, {2, 3}],
          Editable->False]}], "+", 
      RowBox[{
        InterpretationBox[
          SubsuperscriptBox["dx", 
            TagBox[
              StyleBox["1",
                ShowContents->False],
              (StyleForm[ #, ShowContents -> False]&)], "1"],
          Tensor[ dx, {1}, {Void}],
          Editable->False], " ", 
        InterpretationBox[
          SubsuperscriptBox["dx", 
            TagBox[
              StyleBox["3",
                ShowContents->False],
              (StyleForm[ #, ShowContents -> False]&)], "3"],
          Tensor[ dx, {3}, {Void}],
          Editable->False], " ", 
        InterpretationBox[
          SubsuperscriptBox["g", \(3  1\), 
            RowBox[{
              TagBox[
                StyleBox["3",
                  ShowContents->False],
                (StyleForm[ #, ShowContents -> False]&)], 
              TagBox[
                StyleBox["1",
                  ShowContents->False],
                (StyleForm[ #, ShowContents -> False]&)]}]],
          Tensor[ g, {Void, Void}, {3, 1}],
          Editable->False]}], "+", 
      RowBox[{
        InterpretationBox[
          SubsuperscriptBox["dx", 
            TagBox[
              StyleBox["2",
                ShowContents->False],
              (StyleForm[ #, ShowContents -> False]&)], "2"],
          Tensor[ dx, {2}, {Void}],
          Editable->False], " ", 
        InterpretationBox[
          SubsuperscriptBox["dx", 
            TagBox[
              StyleBox["3",
                ShowContents->False],
              (StyleForm[ #, ShowContents -> False]&)], "3"],
          Tensor[ dx, {3}, {Void}],
          Editable->False], " ", 
        InterpretationBox[
          SubsuperscriptBox["g", \(3  2\), 
            RowBox[{
              TagBox[
                StyleBox["3",
                  ShowContents->False],
                (StyleForm[ #, ShowContents -> False]&)], 
              TagBox[
                StyleBox["2",
                  ShowContents->False],
                (StyleForm[ #, ShowContents -> False]&)]}]],
          Tensor[ g, {Void, Void}, {3, 2}],
          Editable->False]}], "+", 
      RowBox[{
        TagBox[
          SuperscriptBox[
            RowBox[{"(", 
              InterpretationBox[
                SubsuperscriptBox["dx", 
                  TagBox[
                    StyleBox["3",
                      ShowContents->False],
                    (StyleForm[ #, ShowContents -> False]&)], "3"],
                Tensor[ dx, {3}, {Void}],
                Editable->False], ")"}], "2"],
          DisplayForm], " ", 
        InterpretationBox[
          SubsuperscriptBox["g", \(3  3\), 
            RowBox[{
              TagBox[
                StyleBox["3",
                  ShowContents->False],
                (StyleForm[ #, ShowContents -> False]&)], 
              TagBox[
                StyleBox["3",
                  ShowContents->False],
                (StyleForm[ #, ShowContents -> False]&)]}]],
          Tensor[ g, {Void, Void}, {3, 3}],
          Editable->False]}]}]], "Output"],

Cell[BoxData[
    RowBox[{
      RowBox[{
        TagBox[
          SuperscriptBox[
            RowBox[{"(", 
              InterpretationBox[
                SubsuperscriptBox["dx", 
                  TagBox[
                    StyleBox["1",
                      ShowContents->False],
                    (StyleForm[ #, ShowContents -> False]&)], "1"],
                Tensor[ dx, {1}, {Void}],
                Editable->False], ")"}], "2"],
          DisplayForm], " ", 
        InterpretationBox[
          SubsuperscriptBox["g", \(1  1\), 
            RowBox[{
              TagBox[
                StyleBox["1",
                  ShowContents->False],
                (StyleForm[ #, ShowContents -> False]&)], 
              TagBox[
                StyleBox["1",
                  ShowContents->False],
                (StyleForm[ #, ShowContents -> False]&)]}]],
          Tensor[ g, {Void, Void}, {1, 1}],
          Editable->False]}], "+", 
      RowBox[{"2", " ", 
        InterpretationBox[
          SubsuperscriptBox["dx", 
            TagBox[
              StyleBox["1",
                ShowContents->False],
              (StyleForm[ #, ShowContents -> False]&)], "1"],
          Tensor[ dx, {1}, {Void}],
          Editable->False], " ", 
        InterpretationBox[
          SubsuperscriptBox["dx", 
            TagBox[
              StyleBox["2",
                ShowContents->False],
              (StyleForm[ #, ShowContents -> False]&)], "2"],
          Tensor[ dx, {2}, {Void}],
          Editable->False], " ", 
        InterpretationBox[
          SubsuperscriptBox["g", \(1  2\), 
            RowBox[{
              TagBox[
                StyleBox["1",
                  ShowContents->False],
                (StyleForm[ #, ShowContents -> False]&)], 
              TagBox[
                StyleBox["2",
                  ShowContents->False],
                (StyleForm[ #, ShowContents -> False]&)]}]],
          Tensor[ g, {Void, Void}, {1, 2}],
          Editable->False]}], "+", 
      RowBox[{"2", " ", 
        InterpretationBox[
          SubsuperscriptBox["dx", 
            TagBox[
              StyleBox["1",
                ShowContents->False],
              (StyleForm[ #, ShowContents -> False]&)], "1"],
          Tensor[ dx, {1}, {Void}],
          Editable->False], " ", 
        InterpretationBox[
          SubsuperscriptBox["dx", 
            TagBox[
              StyleBox["3",
                ShowContents->False],
              (StyleForm[ #, ShowContents -> False]&)], "3"],
          Tensor[ dx, {3}, {Void}],
          Editable->False], " ", 
        InterpretationBox[
          SubsuperscriptBox["g", \(1  3\), 
            RowBox[{
              TagBox[
                StyleBox["1",
                  ShowContents->False],
                (StyleForm[ #, ShowContents -> False]&)], 
              TagBox[
                StyleBox["3",
                  ShowContents->False],
                (StyleForm[ #, ShowContents -> False]&)]}]],
          Tensor[ g, {Void, Void}, {1, 3}],
          Editable->False]}], "+", 
      RowBox[{
        TagBox[
          SuperscriptBox[
            RowBox[{"(", 
              InterpretationBox[
                SubsuperscriptBox["dx", 
                  TagBox[
                    StyleBox["2",
                      ShowContents->False],
                    (StyleForm[ #, ShowContents -> False]&)], "2"],
                Tensor[ dx, {2}, {Void}],
                Editable->False], ")"}], "2"],
          DisplayForm], " ", 
        InterpretationBox[
          SubsuperscriptBox["g", \(2  2\), 
            RowBox[{
              TagBox[
                StyleBox["2",
                  ShowContents->False],
                (StyleForm[ #, ShowContents -> False]&)], 
              TagBox[
                StyleBox["2",
                  ShowContents->False],
                (StyleForm[ #, ShowContents -> False]&)]}]],
          Tensor[ g, {Void, Void}, {2, 2}],
          Editable->False]}], "+", 
      RowBox[{"2", " ", 
        InterpretationBox[
          SubsuperscriptBox["dx", 
            TagBox[
              StyleBox["2",
                ShowContents->False],
              (StyleForm[ #, ShowContents -> False]&)], "2"],
          Tensor[ dx, {2}, {Void}],
          Editable->False], " ", 
        InterpretationBox[
          SubsuperscriptBox["dx", 
            TagBox[
              StyleBox["3",
                ShowContents->False],
              (StyleForm[ #, ShowContents -> False]&)], "3"],
          Tensor[ dx, {3}, {Void}],
          Editable->False], " ", 
        InterpretationBox[
          SubsuperscriptBox["g", \(2  3\), 
            RowBox[{
              TagBox[
                StyleBox["2",
                  ShowContents->False],
                (StyleForm[ #, ShowContents -> False]&)], 
              TagBox[
                StyleBox["3",
                  ShowContents->False],
                (StyleForm[ #, ShowContents -> False]&)]}]],
          Tensor[ g, {Void, Void}, {2, 3}],
          Editable->False]}], "+", 
      RowBox[{
        TagBox[
          SuperscriptBox[
            RowBox[{"(", 
              InterpretationBox[
                SubsuperscriptBox["dx", 
                  TagBox[
                    StyleBox["3",
                      ShowContents->False],
                    (StyleForm[ #, ShowContents -> False]&)], "3"],
                Tensor[ dx, {3}, {Void}],
                Editable->False], ")"}], "2"],
          DisplayForm], " ", 
        InterpretationBox[
          SubsuperscriptBox["g", \(3  3\), 
            RowBox[{
              TagBox[
                StyleBox["3",
                  ShowContents->False],
                (StyleForm[ #, ShowContents -> False]&)], 
              TagBox[
                StyleBox["3",
                  ShowContents->False],
                (StyleForm[ #, ShowContents -> False]&)]}]],
          Tensor[ g, {Void, Void}, {3, 3}],
          Editable->False]}]}]], "Output"]
}, Open  ]],

Cell[TextData[{
  Cell[BoxData[
      \(SymmetrizeSlots\)]],
  " is the inverse of ",
  Cell[BoxData[
      \(Symmetric\)]],
  " and ",
  Cell[BoxData[
      \(AntiSymmetric\)]],
  "."
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[{
    \(Xddd[a, b, c] // ToFlavor[blue]\), "\[IndentingNewLine]", 
    \(% // AntiSymmetric[blue /@ {a, b, c}]\), "\[IndentingNewLine]", 
    \(% // SymmetrizeSlots[X, 3, AntiSymmetric[1, 2, 3]]\)}], "Input"],

Cell[BoxData[
    InterpretationBox[
      SubsuperscriptBox["X", 
        RowBox[{
          TagBox[
            StyleBox["a",
              FontColor->RGBColor[0, 0, 1]],
            (StyleForm[ #, FontColor -> RGBColor[ 0, 0, 1]]&)], 
          TagBox[
            StyleBox["b",
              FontColor->RGBColor[0, 0, 1]],
            (StyleForm[ #, FontColor -> RGBColor[ 0, 0, 1]]&)], 
          TagBox[
            StyleBox["c",
              FontColor->RGBColor[0, 0, 1]],
            (StyleForm[ #, FontColor -> RGBColor[ 0, 0, 1]]&)]}], 
        RowBox[{
          TagBox[
            StyleBox[
              TagBox[
                StyleBox["a",
                  FontColor->RGBColor[0, 0, 1]],
                (StyleForm[ #, FontColor -> RGBColor[ 0, 0, 1]]&)],
              ShowContents->False],
            (StyleForm[ #, ShowContents -> False]&)], 
          TagBox[
            StyleBox[
              TagBox[
                StyleBox["b",
                  FontColor->RGBColor[0, 0, 1]],
                (StyleForm[ #, FontColor -> RGBColor[ 0, 0, 1]]&)],
              ShowContents->False],
            (StyleForm[ #, ShowContents -> False]&)], 
          TagBox[
            StyleBox[
              TagBox[
                StyleBox["c",
                  FontColor->RGBColor[0, 0, 1]],
                (StyleForm[ #, FontColor -> RGBColor[ 0, 0, 1]]&)],
              ShowContents->False],
            (StyleForm[ #, ShowContents -> False]&)]}]],
      Tensor[ X, {Void, Void, Void}, {
        blue[ a], 
        blue[ b], 
        blue[ c]}],
      Editable->False]], "Output"],

Cell[BoxData[
    RowBox[{\(1\/6\), " ", 
      RowBox[{"(", 
        RowBox[{
          InterpretationBox[
            SubsuperscriptBox["X", 
              RowBox[{
                TagBox[
                  StyleBox["a",
                    FontColor->RGBColor[0, 0, 1]],
                  (StyleForm[ #, FontColor -> RGBColor[ 0, 0, 1]]&)], 
                TagBox[
                  StyleBox["b",
                    FontColor->RGBColor[0, 0, 1]],
                  (StyleForm[ #, FontColor -> RGBColor[ 0, 0, 1]]&)], 
                TagBox[
                  StyleBox["c",
                    FontColor->RGBColor[0, 0, 1]],
                  (StyleForm[ #, FontColor -> RGBColor[ 0, 0, 1]]&)]}], 
              RowBox[{
                TagBox[
                  StyleBox[
                    TagBox[
                      StyleBox["a",
                        FontColor->RGBColor[0, 0, 1]],
                      (StyleForm[ #, FontColor -> RGBColor[ 0, 0, 1]]&)],
                    ShowContents->False],
                  (StyleForm[ #, ShowContents -> False]&)], 
                TagBox[
                  StyleBox[
                    TagBox[
                      StyleBox["b",
                        FontColor->RGBColor[0, 0, 1]],
                      (StyleForm[ #, FontColor -> RGBColor[ 0, 0, 1]]&)],
                    ShowContents->False],
                  (StyleForm[ #, ShowContents -> False]&)], 
                TagBox[
                  StyleBox[
                    TagBox[
                      StyleBox["c",
                        FontColor->RGBColor[0, 0, 1]],
                      (StyleForm[ #, FontColor -> RGBColor[ 0, 0, 1]]&)],
                    ShowContents->False],
                  (StyleForm[ #, ShowContents -> False]&)]}]],
            Tensor[ X, {Void, Void, Void}, {
              blue[ a], 
              blue[ b], 
              blue[ c]}],
            Editable->False], "-", 
          InterpretationBox[
            SubsuperscriptBox["X", 
              RowBox[{
                TagBox[
                  StyleBox["a",
                    FontColor->RGBColor[0, 0, 1]],
                  (StyleForm[ #, FontColor -> RGBColor[ 0, 0, 1]]&)], 
                TagBox[
                  StyleBox["c",
                    FontColor->RGBColor[0, 0, 1]],
                  (StyleForm[ #, FontColor -> RGBColor[ 0, 0, 1]]&)], 
                TagBox[
                  StyleBox["b",
                    FontColor->RGBColor[0, 0, 1]],
                  (StyleForm[ #, FontColor -> RGBColor[ 0, 0, 1]]&)]}], 
              RowBox[{
                TagBox[
                  StyleBox[
                    TagBox[
                      StyleBox["a",
                        FontColor->RGBColor[0, 0, 1]],
                      (StyleForm[ #, FontColor -> RGBColor[ 0, 0, 1]]&)],
                    ShowContents->False],
                  (StyleForm[ #, ShowContents -> False]&)], 
                TagBox[
                  StyleBox[
                    TagBox[
                      StyleBox["c",
                        FontColor->RGBColor[0, 0, 1]],
                      (StyleForm[ #, FontColor -> RGBColor[ 0, 0, 1]]&)],
                    ShowContents->False],
                  (StyleForm[ #, ShowContents -> False]&)], 
                TagBox[
                  StyleBox[
                    TagBox[
                      StyleBox["b",
                        FontColor->RGBColor[0, 0, 1]],
                      (StyleForm[ #, FontColor -> RGBColor[ 0, 0, 1]]&)],
                    ShowContents->False],
                  (StyleForm[ #, ShowContents -> False]&)]}]],
            Tensor[ X, {Void, Void, Void}, {
              blue[ a], 
              blue[ c], 
              blue[ b]}],
            Editable->False], "-", 
          InterpretationBox[
            SubsuperscriptBox["X", 
              RowBox[{
                TagBox[
                  StyleBox["b",
                    FontColor->RGBColor[0, 0, 1]],
                  (StyleForm[ #, FontColor -> RGBColor[ 0, 0, 1]]&)], 
                TagBox[
                  StyleBox["a",
                    FontColor->RGBColor[0, 0, 1]],
                  (StyleForm[ #, FontColor -> RGBColor[ 0, 0, 1]]&)], 
                TagBox[
                  StyleBox["c",
                    FontColor->RGBColor[0, 0, 1]],
                  (StyleForm[ #, FontColor -> RGBColor[ 0, 0, 1]]&)]}], 
              RowBox[{
                TagBox[
                  StyleBox[
                    TagBox[
                      StyleBox["b",
                        FontColor->RGBColor[0, 0, 1]],
                      (StyleForm[ #, FontColor -> RGBColor[ 0, 0, 1]]&)],
                    ShowContents->False],
                  (StyleForm[ #, ShowContents -> False]&)], 
                TagBox[
                  StyleBox[
                    TagBox[
                      StyleBox["a",
                        FontColor->RGBColor[0, 0, 1]],
                      (StyleForm[ #, FontColor -> RGBColor[ 0, 0, 1]]&)],
                    ShowContents->False],
                  (StyleForm[ #, ShowContents -> False]&)], 
                TagBox[
                  StyleBox[
                    TagBox[
                      StyleBox["c",
                        FontColor->RGBColor[0, 0, 1]],
                      (StyleForm[ #, FontColor -> RGBColor[ 0, 0, 1]]&)],
                    ShowContents->False],
                  (StyleForm[ #, ShowContents -> False]&)]}]],
            Tensor[ X, {Void, Void, Void}, {
              blue[ b], 
              blue[ a], 
              blue[ c]}],
            Editable->False], "+", 
          InterpretationBox[
            SubsuperscriptBox["X", 
              RowBox[{
                TagBox[
                  StyleBox["b",
                    FontColor->RGBColor[0, 0, 1]],
                  (StyleForm[ #, FontColor -> RGBColor[ 0, 0, 1]]&)], 
                TagBox[
                  StyleBox["c",
                    FontColor->RGBColor[0, 0, 1]],
                  (StyleForm[ #, FontColor -> RGBColor[ 0, 0, 1]]&)], 
                TagBox[
                  StyleBox["a",
                    FontColor->RGBColor[0, 0, 1]],
                  (StyleForm[ #, FontColor -> RGBColor[ 0, 0, 1]]&)]}], 
              RowBox[{
                TagBox[
                  StyleBox[
                    TagBox[
                      StyleBox["b",
                        FontColor->RGBColor[0, 0, 1]],
                      (StyleForm[ #, FontColor -> RGBColor[ 0, 0, 1]]&)],
                    ShowContents->False],
                  (StyleForm[ #, ShowContents -> False]&)], 
                TagBox[
                  StyleBox[
                    TagBox[
                      StyleBox["c",
                        FontColor->RGBColor[0, 0, 1]],
                      (StyleForm[ #, FontColor -> RGBColor[ 0, 0, 1]]&)],
                    ShowContents->False],
                  (StyleForm[ #, ShowContents -> False]&)], 
                TagBox[
                  StyleBox[
                    TagBox[
                      StyleBox["a",
                        FontColor->RGBColor[0, 0, 1]],
                      (StyleForm[ #, FontColor -> RGBColor[ 0, 0, 1]]&)],
                    ShowContents->False],
                  (StyleForm[ #, ShowContents -> False]&)]}]],
            Tensor[ X, {Void, Void, Void}, {
              blue[ b], 
              blue[ c], 
              blue[ a]}],
            Editable->False], "+", 
          InterpretationBox[
            SubsuperscriptBox["X", 
              RowBox[{
                TagBox[
                  StyleBox["c",
                    FontColor->RGBColor[0, 0, 1]],
                  (StyleForm[ #, FontColor -> RGBColor[ 0, 0, 1]]&)], 
                TagBox[
                  StyleBox["a",
                    FontColor->RGBColor[0, 0, 1]],
                  (StyleForm[ #, FontColor -> RGBColor[ 0, 0, 1]]&)], 
                TagBox[
                  StyleBox["b",
                    FontColor->RGBColor[0, 0, 1]],
                  (StyleForm[ #, FontColor -> RGBColor[ 0, 0, 1]]&)]}], 
              RowBox[{
                TagBox[
                  StyleBox[
                    TagBox[
                      StyleBox["c",
                        FontColor->RGBColor[0, 0, 1]],
                      (StyleForm[ #, FontColor -> RGBColor[ 0, 0, 1]]&)],
                    ShowContents->False],
                  (StyleForm[ #, ShowContents -> False]&)], 
                TagBox[
                  StyleBox[
                    TagBox[
                      StyleBox["a",
                        FontColor->RGBColor[0, 0, 1]],
                      (StyleForm[ #, FontColor -> RGBColor[ 0, 0, 1]]&)],
                    ShowContents->False],
                  (StyleForm[ #, ShowContents -> False]&)], 
                TagBox[
                  StyleBox[
                    TagBox[
                      StyleBox["b",
                        FontColor->RGBColor[0, 0, 1]],
                      (StyleForm[ #, FontColor -> RGBColor[ 0, 0, 1]]&)],
                    ShowContents->False],
                  (StyleForm[ #, ShowContents -> False]&)]}]],
            Tensor[ X, {Void, Void, Void}, {
              blue[ c], 
              blue[ a], 
              blue[ b]}],
            Editable->False], "-", 
          InterpretationBox[
            SubsuperscriptBox["X", 
              RowBox[{
                TagBox[
                  StyleBox["c",
                    FontColor->RGBColor[0, 0, 1]],
                  (StyleForm[ #, FontColor -> RGBColor[ 0, 0, 1]]&)], 
                TagBox[
                  StyleBox["b",
                    FontColor->RGBColor[0, 0, 1]],
                  (StyleForm[ #, FontColor -> RGBColor[ 0, 0, 1]]&)], 
                TagBox[
                  StyleBox["a",
                    FontColor->RGBColor[0, 0, 1]],
                  (StyleForm[ #, FontColor -> RGBColor[ 0, 0, 1]]&)]}], 
              RowBox[{
                TagBox[
                  StyleBox[
                    TagBox[
                      StyleBox["c",
                        FontColor->RGBColor[0, 0, 1]],
                      (StyleForm[ #, FontColor -> RGBColor[ 0, 0, 1]]&)],
                    ShowContents->False],
                  (StyleForm[ #, ShowContents -> False]&)], 
                TagBox[
                  StyleBox[
                    TagBox[
                      StyleBox["b",
                        FontColor->RGBColor[0, 0, 1]],
                      (StyleForm[ #, FontColor -> RGBColor[ 0, 0, 1]]&)],
                    ShowContents->False],
                  (StyleForm[ #, ShowContents -> False]&)], 
                TagBox[
                  StyleBox[
                    TagBox[
                      StyleBox["a",
                        FontColor->RGBColor[0, 0, 1]],
                      (StyleForm[ #, FontColor -> RGBColor[ 0, 0, 1]]&)],
                    ShowContents->False],
                  (StyleForm[ #, ShowContents -> False]&)]}]],
            Tensor[ X, {Void, Void, Void}, {
              blue[ c], 
              blue[ b], 
              blue[ a]}],
            Editable->False]}], ")"}]}]], "Output"],

Cell[BoxData[
    InterpretationBox[
      SubsuperscriptBox["X", 
        RowBox[{
          TagBox[
            StyleBox["a",
              FontColor->RGBColor[0, 0, 1]],
            (StyleForm[ #, FontColor -> RGBColor[ 0, 0, 1]]&)], 
          TagBox[
            StyleBox["b",
              FontColor->RGBColor[0, 0, 1]],
            (StyleForm[ #, FontColor -> RGBColor[ 0, 0, 1]]&)], 
          TagBox[
            StyleBox["c",
              FontColor->RGBColor[0, 0, 1]],
            (StyleForm[ #, FontColor -> RGBColor[ 0, 0, 1]]&)]}], 
        RowBox[{
          TagBox[
            StyleBox[
              TagBox[
                StyleBox["a",
                  FontColor->RGBColor[0, 0, 1]],
                (StyleForm[ #, FontColor -> RGBColor[ 0, 0, 1]]&)],
              ShowContents->False],
            (StyleForm[ #, ShowContents -> False]&)], 
          TagBox[
            StyleBox[
              TagBox[
                StyleBox["b",
                  FontColor->RGBColor[0, 0, 1]],
                (StyleForm[ #, FontColor -> RGBColor[ 0, 0, 1]]&)],
              ShowContents->False],
            (StyleForm[ #, ShowContents -> False]&)], 
          TagBox[
            StyleBox[
              TagBox[
                StyleBox["c",
                  FontColor->RGBColor[0, 0, 1]],
                (StyleForm[ #, FontColor -> RGBColor[ 0, 0, 1]]&)],
              ShowContents->False],
            (StyleForm[ #, ShowContents -> False]&)]}]],
      Tensor[ X, {Void, Void, Void}, {
        blue[ a], 
        blue[ b], 
        blue[ c]}],
      Editable->False]], "Output"]
}, Open  ]]
}, Open  ]],

Cell[TextData[Cell[BoxData[GridBox[{
        {
          ButtonBox[
            StyleBox["\[FirstPage]",
              "SR"],
            ButtonFunction:>FrontEndExecute[ {
                FrontEndToken[ 
                  FrontEnd`SelectedNotebook[ ], "ScrollPageFirst"]}],
            ButtonStyle->"SlideHyperlink",
            ButtonNote->"First Slide"], 
          ButtonBox[
            StyleBox["\[LeftPointer]",
              "SR"],
            ButtonFunction:>FrontEndExecute[ {
                FrontEndToken[ 
                  FrontEnd`SelectedNotebook[ ], "ScrollPagePrevious"]}],
            ButtonStyle->"SlideHyperlink",
            ButtonNote->"Previous Slide"], 
          ButtonBox[
            StyleBox["\[RightPointer]",
              "SR"],
            ButtonFunction:>FrontEndExecute[ {
                FrontEndToken[ 
                  FrontEnd`SelectedNotebook[ ], "ScrollPageNext"]}],
            ButtonStyle->"SlideHyperlink",
            ButtonNote->"Next Slide"], 
          ButtonBox[
            StyleBox["\[LastPage]",
              "SR"],
            ButtonFunction:>FrontEndExecute[ {
                FrontEndToken[ 
                  FrontEnd`SelectedNotebook[ ], "ScrollPageLast"]}],
            ButtonStyle->"SlideHyperlink"], " ", 
          ButtonBox[
            StyleBox[
              RowBox[{
                CounterBox["SlideShowNavigationBar"], \(\(\ \)\(of\)\(\ \)\), 
                
                
                CounterBox["SlideShowNavigationBar", {None, 
                  "SlideShowHeader", -1}]}],
              "SR"],
            ButtonFrame->"None"]}
        }]]]], "SlideShowNavigationBar",
  CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell[TextData[{
  StyleBox["Tensorial",
    FontSlant->"Italic"],
  " 4.0 - Using Symmetries (b)"
}], "Section"],

Cell["\<\
The following declares a pattern symmetry, in this case the symmetry of the \
dot product. \
\>", "Text"],

Cell[BoxData[
    \(DeclarePatternSymmetries[ed[a_] . ed[b_], {{1, {a, b}}}]\)], "Input"],

Cell[CellGroupData[{

Cell[BoxData[{
    \(1/2 \((ed[i] . ed[j] + ed[j] . ed[i])\)\), "\[IndentingNewLine]", 
    \(% // SymmetrizePattern[]\)}], "Input"],

Cell[BoxData[
    RowBox[{\(1\/2\), " ", 
      RowBox[{"(", 
        RowBox[{
          RowBox[{
            InterpretationBox[
              SubsuperscriptBox["e", "i", 
                TagBox[
                  StyleBox["i",
                    ShowContents->False],
                  (StyleForm[ #, ShowContents -> False]&)]],
              Tensor[ e, {Void}, {i}],
              Editable->False], ".", 
            InterpretationBox[
              SubsuperscriptBox["e", "j", 
                TagBox[
                  StyleBox["j",
                    ShowContents->False],
                  (StyleForm[ #, ShowContents -> False]&)]],
              Tensor[ e, {Void}, {j}],
              Editable->False]}], "+", 
          RowBox[{
            InterpretationBox[
              SubsuperscriptBox["e", "j", 
                TagBox[
                  StyleBox["j",
                    ShowContents->False],
                  (StyleForm[ #, ShowContents -> False]&)]],
              Tensor[ e, {Void}, {j}],
              Editable->False], ".", 
            InterpretationBox[
              SubsuperscriptBox["e", "i", 
                TagBox[
                  StyleBox["i",
                    ShowContents->False],
                  (StyleForm[ #, ShowContents -> False]&)]],
              Tensor[ e, {Void}, {i}],
              Editable->False]}]}], ")"}]}]], "Output"],

Cell[BoxData[
    RowBox[{
      InterpretationBox[
        SubsuperscriptBox["e", "i", 
          TagBox[
            StyleBox["i",
              ShowContents->False],
            (StyleForm[ #, ShowContents -> False]&)]],
        Tensor[ e, {Void}, {i}],
        Editable->False], ".", 
      InterpretationBox[
        SubsuperscriptBox["e", "j", 
          TagBox[
            StyleBox["j",
              ShowContents->False],
            (StyleForm[ #, ShowContents -> False]&)]],
        Tensor[ e, {Void}, {j}],
        Editable->False]}]], "Output"]
}, Open  ]],

Cell["\<\
The following declares some symmetries of the Riemann tensor: symmetrical \
with the interchange of two pairs of indices, and antisymmetrical on \
interchange within the pairs.\
\>", "Text"],

Cell[CellGroupData[{

Cell[BoxData[{
    \(Rdddd[a_, b_, c_, d_]\), "\n", 
    \(DeclarePatternSymmetries[%, {{1, {{a, b}, {c, d}}}, {\(-1\), {a, 
            b}}, {\(-1\), {c, d}}}]\)}], "Input"],

Cell[BoxData[
    InterpretationBox[
      SubsuperscriptBox["R", \(a_  b_  c_  d_\), 
        RowBox[{
          TagBox[
            StyleBox["a_",
              ShowContents->False],
            (StyleForm[ #, ShowContents -> False]&)], 
          TagBox[
            StyleBox["b_",
              ShowContents->False],
            (StyleForm[ #, ShowContents -> False]&)], 
          TagBox[
            StyleBox["c_",
              ShowContents->False],
            (StyleForm[ #, ShowContents -> False]&)], 
          TagBox[
            StyleBox["d_",
              ShowContents->False],
            (StyleForm[ #, ShowContents -> False]&)]}]],
      Tensor[ R, {Void, Void, Void, Void}, {
        Pattern[ a, 
          Blank[ ]], 
        Pattern[ b, 
          Blank[ ]], 
        Pattern[ c, 
          Blank[ ]], 
        Pattern[ d, 
          Blank[ ]]}],
      Editable->False]], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
    \(Rdddd[\[Alpha], \[Beta], \[Gamma], \[Delta]] + 
      Rdddd[\[Delta], \[Gamma], \[Beta], \[Alpha]]\), "\[IndentingNewLine]", 
    \(% // SymmetrizePattern[]\)}], "Input"],

Cell[BoxData[
    RowBox[{
      InterpretationBox[
        SubsuperscriptBox["R", \(\[Alpha]  \[Beta]  \[Gamma]  \[Delta]\), 
          RowBox[{
            TagBox[
              StyleBox["\[Alpha]",
                ShowContents->False],
              (StyleForm[ #, ShowContents -> False]&)], 
            TagBox[
              StyleBox["\[Beta]",
                ShowContents->False],
              (StyleForm[ #, ShowContents -> False]&)], 
            TagBox[
              StyleBox["\[Gamma]",
                ShowContents->False],
              (StyleForm[ #, ShowContents -> False]&)], 
            TagBox[
              StyleBox["\[Delta]",
                ShowContents->False],
              (StyleForm[ #, ShowContents -> False]&)]}]],
        Tensor[ 
        R, {Void, Void, Void, Void}, {\[Alpha], \[Beta], \[Gamma], \[Delta]}],
        
        Editable->False], "+", 
      InterpretationBox[
        SubsuperscriptBox["R", \(\[Delta]  \[Gamma]  \[Beta]  \[Alpha]\), 
          RowBox[{
            TagBox[
              StyleBox["\[Delta]",
                ShowContents->False],
              (StyleForm[ #, ShowContents -> False]&)], 
            TagBox[
              StyleBox["\[Gamma]",
                ShowContents->False],
              (StyleForm[ #, ShowContents -> False]&)], 
            TagBox[
              StyleBox["\[Beta]",
                ShowContents->False],
              (StyleForm[ #, ShowContents -> False]&)], 
            TagBox[
              StyleBox["\[Alpha]",
                ShowContents->False],
              (StyleForm[ #, ShowContents -> False]&)]}]],
        Tensor[ 
        R, {Void, Void, Void, Void}, {\[Delta], \[Gamma], \[Beta], \[Alpha]}],
        
        Editable->False]}]], "Output"],

Cell[BoxData[
    RowBox[{"2", " ", 
      InterpretationBox[
        SubsuperscriptBox["R", \(\[Alpha]  \[Beta]  \[Gamma]  \[Delta]\), 
          RowBox[{
            TagBox[
              StyleBox["\[Alpha]",
                ShowContents->False],
              (StyleForm[ #, ShowContents -> False]&)], 
            TagBox[
              StyleBox["\[Beta]",
                ShowContents->False],
              (StyleForm[ #, ShowContents -> False]&)], 
            TagBox[
              StyleBox["\[Gamma]",
                ShowContents->False],
              (StyleForm[ #, ShowContents -> False]&)], 
            TagBox[
              StyleBox["\[Delta]",
                ShowContents->False],
              (StyleForm[ #, ShowContents -> False]&)]}]],
        Tensor[ 
        R, {Void, Void, Void, Void}, {\[Alpha], \[Beta], \[Gamma], \[Delta]}],
        
        Editable->False]}]], "Output"]
}, Open  ]],

Cell["\<\
The Riemann symmetry could also be declared as a tensor symmetry.\
\>", "Text"],

Cell[CellGroupData[{

Cell[BoxData[{
    \(\(TensorSymmetry[R, 4] = 
        Symmetric[AntiSymmetric[1, 2], 
          AntiSymmetric[3, 4]];\)\), "\[IndentingNewLine]", 
    \(Rdddd[\[Alpha], \[Beta], \[Gamma], \[Delta]] + 
      Rdddd[\[Delta], \[Gamma], \[Beta], \[Alpha]]\), "\[IndentingNewLine]", 
    \(% // SymmetrizeSlots[]\)}], "Input"],

Cell[BoxData[
    RowBox[{
      InterpretationBox[
        SubsuperscriptBox["R", \(\[Alpha]  \[Beta]  \[Gamma]  \[Delta]\), 
          RowBox[{
            TagBox[
              StyleBox["\[Alpha]",
                ShowContents->False],
              (StyleForm[ #, ShowContents -> False]&)], 
            TagBox[
              StyleBox["\[Beta]",
                ShowContents->False],
              (StyleForm[ #, ShowContents -> False]&)], 
            TagBox[
              StyleBox["\[Gamma]",
                ShowContents->False],
              (StyleForm[ #, ShowContents -> False]&)], 
            TagBox[
              StyleBox["\[Delta]",
                ShowContents->False],
              (StyleForm[ #, ShowContents -> False]&)]}]],
        Tensor[ 
        R, {Void, Void, Void, Void}, {\[Alpha], \[Beta], \[Gamma], \[Delta]}],
        
        Editable->False], "+", 
      InterpretationBox[
        SubsuperscriptBox["R", \(\[Delta]  \[Gamma]  \[Beta]  \[Alpha]\), 
          RowBox[{
            TagBox[
              StyleBox["\[Delta]",
                ShowContents->False],
              (StyleForm[ #, ShowContents -> False]&)], 
            TagBox[
              StyleBox["\[Gamma]",
                ShowContents->False],
              (StyleForm[ #, ShowContents -> False]&)], 
            TagBox[
              StyleBox["\[Beta]",
                ShowContents->False],
              (StyleForm[ #, ShowContents -> False]&)], 
            TagBox[
              StyleBox["\[Alpha]",
                ShowContents->False],
              (StyleForm[ #, ShowContents -> False]&)]}]],
        Tensor[ 
        R, {Void, Void, Void, Void}, {\[Delta], \[Gamma], \[Beta], \[Alpha]}],
        
        Editable->False]}]], "Output"],

Cell[BoxData[
    RowBox[{"2", " ", 
      InterpretationBox[
        SubsuperscriptBox["R", \(\[Alpha]  \[Beta]  \[Gamma]  \[Delta]\), 
          RowBox[{
            TagBox[
              StyleBox["\[Alpha]",
                ShowContents->False],
              (StyleForm[ #, ShowContents -> False]&)], 
            TagBox[
              StyleBox["\[Beta]",
                ShowContents->False],
              (StyleForm[ #, ShowContents -> False]&)], 
            TagBox[
              StyleBox["\[Gamma]",
                ShowContents->False],
              (StyleForm[ #, ShowContents -> False]&)], 
            TagBox[
              StyleBox["\[Delta]",
                ShowContents->False],
              (StyleForm[ #, ShowContents -> False]&)]}]],
        Tensor[ 
        R, {Void, Void, Void, Void}, {\[Alpha], \[Beta], \[Gamma], \[Delta]}],
        
        Editable->False]}]], "Output"]
}, Open  ]]
}, Open  ]],

Cell[TextData[Cell[BoxData[GridBox[{
        {
          ButtonBox[
            StyleBox["\[FirstPage]",
              "SR"],
            ButtonFunction:>FrontEndExecute[ {
                FrontEndToken[ 
                  FrontEnd`SelectedNotebook[ ], "ScrollPageFirst"]}],
            ButtonStyle->"SlideHyperlink",
            ButtonNote->"First Slide"], 
          ButtonBox[
            StyleBox["\[LeftPointer]",
              "SR"],
            ButtonFunction:>FrontEndExecute[ {
                FrontEndToken[ 
                  FrontEnd`SelectedNotebook[ ], "ScrollPagePrevious"]}],
            ButtonStyle->"SlideHyperlink",
            ButtonNote->"Previous Slide"], 
          ButtonBox[
            StyleBox["\[RightPointer]",
              "SR"],
            ButtonFunction:>FrontEndExecute[ {
                FrontEndToken[ 
                  FrontEnd`SelectedNotebook[ ], "ScrollPageNext"]}],
            ButtonStyle->"SlideHyperlink",
            ButtonNote->"Next Slide"], 
          ButtonBox[
            StyleBox["\[LastPage]",
              "SR"],
            ButtonFunction:>FrontEndExecute[ {
                FrontEndToken[ 
                  FrontEnd`SelectedNotebook[ ], "ScrollPageLast"]}],
            ButtonStyle->"SlideHyperlink"], " ", 
          ButtonBox[
            StyleBox[
              RowBox[{
                CounterBox["SlideShowNavigationBar"], \(\(\ \)\(of\)\(\ \)\), 
                
                
                CounterBox["SlideShowNavigationBar", {None, 
                  "SlideShowHeader", -1}]}],
              "SR"],
            ButtonFrame->"None"]}
        }]]]], "SlideShowNavigationBar",
  CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell[TextData[{
  StyleBox["Tensorial",
    FontSlant->"Italic"],
  " 4.0 - Derivatives - Partial Derivative"
}], "Section"],

Cell[CellGroupData[{

Cell[BoxData[{
    \(Print["\<Calculating the Christoffel Coefficients\>"]\), "\
\[IndentingNewLine]", 
    \(1/2 
       Plus @@ MapThread[#2  PartialD[gdd @@ Take[#, 2], Last[#]] &, {Table[
              RotateLeft[{a, b, c}, n], {n, 0, 2}], {1, \(-1\), 
              1}}]\), "\[IndentingNewLine]", 
    \(Print["\<Symmetrizing the slots on g\>"]\), "\[IndentingNewLine]", 
    \(%% // SymmetrizeSlots[]\), "\[IndentingNewLine]", 
    \(Print["\<Expanding the partial derivatives in terms of the \
coordinates\>"]\), "\[IndentingNewLine]", 
    \(%% // ExpandPartialD[{x, \[Delta], g, \[CapitalGamma]}]\)}], "Input"],

Cell[BoxData[
    \("Calculating the Christoffel Coefficients"\)], "Print"],

Cell[BoxData[
    RowBox[{\(1\/2\), " ", 
      RowBox[{"(", 
        RowBox[{
          InterpretationBox[
            SubscriptBox[
              InterpretationBox[
                SubsuperscriptBox["g", \(a  b\), 
                  RowBox[{
                    TagBox[
                      StyleBox["a",
                        ShowContents->False],
                      (StyleForm[ #, ShowContents -> False]&)], 
                    TagBox[
                      StyleBox["b",
                        ShowContents->False],
                      (StyleForm[ #, ShowContents -> False]&)]}]],
                Tensor[ g, {Void, Void}, {a, b}],
                Editable->False], \(\(,\)\(c\)\)],
            PartialD[ 
              Tensor[ g, {Void, Void}, {a, b}], c],
            Editable->False], "-", 
          InterpretationBox[
            SubscriptBox[
              InterpretationBox[
                SubsuperscriptBox["g", \(b  c\), 
                  RowBox[{
                    TagBox[
                      StyleBox["b",
                        ShowContents->False],
                      (StyleForm[ #, ShowContents -> False]&)], 
                    TagBox[
                      StyleBox["c",
                        ShowContents->False],
                      (StyleForm[ #, ShowContents -> False]&)]}]],
                Tensor[ g, {Void, Void}, {b, c}],
                Editable->False], \(\(,\)\(a\)\)],
            PartialD[ 
              Tensor[ g, {Void, Void}, {b, c}], a],
            Editable->False], "+", 
          InterpretationBox[
            SubscriptBox[
              InterpretationBox[
                SubsuperscriptBox["g", \(c  a\), 
                  RowBox[{
                    TagBox[
                      StyleBox["c",
                        ShowContents->False],
                      (StyleForm[ #, ShowContents -> False]&)], 
                    TagBox[
                      StyleBox["a",
                        ShowContents->False],
                      (StyleForm[ #, ShowContents -> False]&)]}]],
                Tensor[ g, {Void, Void}, {c, a}],
                Editable->False], \(\(,\)\(b\)\)],
            PartialD[ 
              Tensor[ g, {Void, Void}, {c, a}], b],
            Editable->False]}], ")"}]}]], "Output"],

Cell[BoxData[
    \("Symmetrizing the slots on g"\)], "Print"],

Cell[BoxData[
    RowBox[{\(1\/2\), " ", 
      RowBox[{"(", 
        RowBox[{
          InterpretationBox[
            SubscriptBox[
              InterpretationBox[
                SubsuperscriptBox["g", \(a  b\), 
                  RowBox[{
                    TagBox[
                      StyleBox["a",
                        ShowContents->False],
                      (StyleForm[ #, ShowContents -> False]&)], 
                    TagBox[
                      StyleBox["b",
                        ShowContents->False],
                      (StyleForm[ #, ShowContents -> False]&)]}]],
                Tensor[ g, {Void, Void}, {a, b}],
                Editable->False], \(\(,\)\(c\)\)],
            PartialD[ 
              Tensor[ g, {Void, Void}, {a, b}], c],
            Editable->False], "+", 
          InterpretationBox[
            SubscriptBox[
              InterpretationBox[
                SubsuperscriptBox["g", \(a  c\), 
                  RowBox[{
                    TagBox[
                      StyleBox["a",
                        ShowContents->False],
                      (StyleForm[ #, ShowContents -> False]&)], 
                    TagBox[
                      StyleBox["c",
                        ShowContents->False],
                      (StyleForm[ #, ShowContents -> False]&)]}]],
                Tensor[ g, {Void, Void}, {a, c}],
                Editable->False], \(\(,\)\(b\)\)],
            PartialD[ 
              Tensor[ g, {Void, Void}, {a, c}], b],
            Editable->False], "-", 
          InterpretationBox[
            SubscriptBox[
              InterpretationBox[
                SubsuperscriptBox["g", \(b  c\), 
                  RowBox[{
                    TagBox[
                      StyleBox["b",
                        ShowContents->False],
                      (StyleForm[ #, ShowContents -> False]&)], 
                    TagBox[
                      StyleBox["c",
                        ShowContents->False],
                      (StyleForm[ #, ShowContents -> False]&)]}]],
                Tensor[ g, {Void, Void}, {b, c}],
                Editable->False], \(\(,\)\(a\)\)],
            PartialD[ 
              Tensor[ g, {Void, Void}, {b, c}], a],
            Editable->False]}], ")"}]}]], "Output"],

Cell[BoxData[
    \("Expanding the partial derivatives in terms of the coordinates"\)], \
"Print"],

Cell[BoxData[
    RowBox[{\(1\/2\), " ", 
      RowBox[{"(", 
        RowBox[{
          InterpretationBox[
            FractionBox[
              RowBox[{"\[PartialD]", 
                InterpretationBox[
                  SubsuperscriptBox["g", \(a  b\), 
                    RowBox[{
                      TagBox[
                        StyleBox["a",
                          ShowContents->False],
                        (StyleForm[ #, ShowContents -> False]&)], 
                      TagBox[
                        StyleBox["b",
                          ShowContents->False],
                        (StyleForm[ #, ShowContents -> False]&)]}]],
                  Tensor[ g, {Void, Void}, {a, b}],
                  Editable->False]}], 
              RowBox[{"\[PartialD]", 
                InterpretationBox[
                  SubsuperscriptBox["x", 
                    TagBox[
                      StyleBox["c",
                        ShowContents->False],
                      (StyleForm[ #, ShowContents -> False]&)], "c"],
                  Tensor[ x, {c}, {Void}],
                  Editable->False]}]],
            PartialD[ {x, \[Delta], g, \[CapitalGamma]}][ 
              Tensor[ g, {Void, Void}, {a, b}], 
              Tensor[ x, {c}, {Void}]],
            Editable->False], "+", 
          InterpretationBox[
            FractionBox[
              RowBox[{"\[PartialD]", 
                InterpretationBox[
                  SubsuperscriptBox["g", \(a  c\), 
                    RowBox[{
                      TagBox[
                        StyleBox["a",
                          ShowContents->False],
                        (StyleForm[ #, ShowContents -> False]&)], 
                      TagBox[
                        StyleBox["c",
                          ShowContents->False],
                        (StyleForm[ #, ShowContents -> False]&)]}]],
                  Tensor[ g, {Void, Void}, {a, c}],
                  Editable->False]}], 
              RowBox[{"\[PartialD]", 
                InterpretationBox[
                  SubsuperscriptBox["x", 
                    TagBox[
                      StyleBox["b",
                        ShowContents->False],
                      (StyleForm[ #, ShowContents -> False]&)], "b"],
                  Tensor[ x, {b}, {Void}],
                  Editable->False]}]],
            PartialD[ {x, \[Delta], g, \[CapitalGamma]}][ 
              Tensor[ g, {Void, Void}, {a, c}], 
              Tensor[ x, {b}, {Void}]],
            Editable->False], "-", 
          InterpretationBox[
            FractionBox[
              RowBox[{"\[PartialD]", 
                InterpretationBox[
                  SubsuperscriptBox["g", \(b  c\), 
                    RowBox[{
                      TagBox[
                        StyleBox["b",
                          ShowContents->False],
                        (StyleForm[ #, ShowContents -> False]&)], 
                      TagBox[
                        StyleBox["c",
                          ShowContents->False],
                        (StyleForm[ #, ShowContents -> False]&)]}]],
                  Tensor[ g, {Void, Void}, {b, c}],
                  Editable->False]}], 
              RowBox[{"\[PartialD]", 
                InterpretationBox[
                  SubsuperscriptBox["x", 
                    TagBox[
                      StyleBox["a",
                        ShowContents->False],
                      (StyleForm[ #, ShowContents -> False]&)], "a"],
                  Tensor[ x, {a}, {Void}],
                  Editable->False]}]],
            PartialD[ {x, \[Delta], g, \[CapitalGamma]}][ 
              Tensor[ g, {Void, Void}, {b, c}], 
              Tensor[ x, {a}, {Void}]],
            Editable->False]}], ")"}]}]], "Output"]
}, Open  ]]
}, Open  ]],

Cell[TextData[Cell[BoxData[GridBox[{
        {
          ButtonBox[
            StyleBox["\[FirstPage]",
              "SR"],
            ButtonFunction:>FrontEndExecute[ {
                FrontEndToken[ 
                  FrontEnd`SelectedNotebook[ ], "ScrollPageFirst"]}],
            ButtonStyle->"SlideHyperlink",
            ButtonNote->"First Slide"], 
          ButtonBox[
            StyleBox["\[LeftPointer]",
              "SR"],
            ButtonFunction:>FrontEndExecute[ {
                FrontEndToken[ 
                  FrontEnd`SelectedNotebook[ ], "ScrollPagePrevious"]}],
            ButtonStyle->"SlideHyperlink",
            ButtonNote->"Previous Slide"], 
          ButtonBox[
            StyleBox["\[RightPointer]",
              "SR"],
            ButtonFunction:>FrontEndExecute[ {
                FrontEndToken[ 
                  FrontEnd`SelectedNotebook[ ], "ScrollPageNext"]}],
            ButtonStyle->"SlideHyperlink",
            ButtonNote->"Next Slide"], 
          ButtonBox[
            StyleBox["\[LastPage]",
              "SR"],
            ButtonFunction:>FrontEndExecute[ {
                FrontEndToken[ 
                  FrontEnd`SelectedNotebook[ ], "ScrollPageLast"]}],
            ButtonStyle->"SlideHyperlink"], " ", 
          ButtonBox[
            StyleBox[
              RowBox[{
                CounterBox["SlideShowNavigationBar"], \(\(\ \)\(of\)\(\ \)\), 
                
                
                CounterBox["SlideShowNavigationBar", {None, 
                  "SlideShowHeader", -1}]}],
              "SR"],
            ButtonFrame->"None"]}
        }]]]], "SlideShowNavigationBar",
  CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell[TextData[{
  StyleBox["Tensorial",
    FontSlant->"Italic"],
  " 4.0 - Derivatives - Covariant Derivative"
}], "Section"],

Cell[CellGroupData[{

Cell[BoxData[{
    \(Tud[a, b] // ToFlavor[red]\), "\[IndentingNewLine]", 
    \(Print["\<Second order covariant derivative\>"]\), \
"\[IndentingNewLine]", 
    \(CovariantD[%%, red /@ {c, d}]\), "\[IndentingNewLine]", 
    \(Print["\<Expanding in terms of coordinates and connection \
coefficients\>"]\), "\[IndentingNewLine]", 
    \(%% // 
      ExpandCovariantD[{x, \[Delta], g, \[CapitalGamma]}, 
        red /@ {e, f}]\)}], "Input"],

Cell[BoxData[
    InterpretationBox[
      SubsuperscriptBox["T", 
        RowBox[{
          TagBox[
            StyleBox[
              TagBox[
                StyleBox["a",
                  FontColor->RGBColor[1, 0, 0]],
                (StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)],
              ShowContents->False],
            (StyleForm[ #, ShowContents -> False]&)], 
          TagBox[
            StyleBox["b",
              FontColor->RGBColor[1, 0, 0]],
            (StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)]}], 
        RowBox[{
          TagBox[
            StyleBox["a",
              FontColor->RGBColor[1, 0, 0]],
            (StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)], 
          TagBox[
            StyleBox[
              TagBox[
                StyleBox["b",
                  FontColor->RGBColor[1, 0, 0]],
                (StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)],
              ShowContents->False],
            (StyleForm[ #, ShowContents -> False]&)]}]],
      Tensor[ T, {
        red[ a], Void}, {Void, 
        red[ b]}],
      Editable->False]], "Output"],

Cell[BoxData[
    \("Second order covariant derivative"\)], "Print"],

Cell[BoxData[
    InterpretationBox[
      SubscriptBox[
        InterpretationBox[
          SubsuperscriptBox["T", 
            RowBox[{
              TagBox[
                StyleBox[
                  TagBox[
                    StyleBox["a",
                      FontColor->RGBColor[1, 0, 0]],
                    (StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)],
                  ShowContents->False],
                (StyleForm[ #, ShowContents -> False]&)], 
              TagBox[
                StyleBox["b",
                  FontColor->RGBColor[1, 0, 0]],
                (StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)]}], 
            RowBox[{
              TagBox[
                StyleBox["a",
                  FontColor->RGBColor[1, 0, 0]],
                (StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)], 
              TagBox[
                StyleBox[
                  TagBox[
                    StyleBox["b",
                      FontColor->RGBColor[1, 0, 0]],
                    (StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)],
                  ShowContents->False],
                (StyleForm[ #, ShowContents -> False]&)]}]],
          Tensor[ T, {
            red[ a], Void}, {Void, 
            red[ b]}],
          Editable->False], 
        RowBox[{";", 
          RowBox[{
            TagBox[
              StyleBox["c",
                FontColor->RGBColor[1, 0, 0]],
              (StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)], 
            TagBox[
              StyleBox["d",
                FontColor->RGBColor[1, 0, 0]],
              (StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)]}]}]],
      CovariantD[ 
        Tensor[ T, {
          red[ a], Void}, {Void, 
          red[ b]}], {
        red[ c], 
        red[ d]}],
      Editable->False]], "Output"],

Cell[BoxData[
    \("Expanding in terms of coordinates and connection coefficients"\)], \
"Print"],

Cell[BoxData[
    RowBox[{
      InterpretationBox[
        FractionBox[
          RowBox[{\(\[PartialD]\^2\), 
            InterpretationBox[
              SubsuperscriptBox["T", 
                RowBox[{
                  TagBox[
                    StyleBox[
                      TagBox[
                        StyleBox["a",
                          FontColor->RGBColor[1, 0, 0]],
                        (StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)],
                      ShowContents->False],
                    (StyleForm[ #, ShowContents -> False]&)], 
                  TagBox[
                    StyleBox["b",
                      FontColor->RGBColor[1, 0, 0]],
                    (StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)]}], 
                RowBox[{
                  TagBox[
                    StyleBox["a",
                      FontColor->RGBColor[1, 0, 0]],
                    (StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)], 
                  TagBox[
                    StyleBox[
                      TagBox[
                        StyleBox["b",
                          FontColor->RGBColor[1, 0, 0]],
                        (StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)],
                      ShowContents->False],
                    (StyleForm[ #, ShowContents -> False]&)]}]],
              Tensor[ T, {
                red[ a], Void}, {Void, 
                red[ b]}],
              Editable->False]}], 
          RowBox[{"\[PartialD]", 
            InterpretationBox[
              SubsuperscriptBox["x", 
                TagBox[
                  StyleBox[
                    TagBox[
                      StyleBox["d",
                        FontColor->RGBColor[1, 0, 0]],
                      (StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)],
                    ShowContents->False],
                  (StyleForm[ #, ShowContents -> False]&)], 
                TagBox[
                  StyleBox["d",
                    FontColor->RGBColor[1, 0, 0]],
                  (StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)]],
              Tensor[ x, {
                red[ d]}, {Void}],
              Editable->False], "\[PartialD]", 
            InterpretationBox[
              SubsuperscriptBox["x", 
                TagBox[
                  StyleBox[
                    TagBox[
                      StyleBox["c",
                        FontColor->RGBColor[1, 0, 0]],
                      (StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)],
                    ShowContents->False],
                  (StyleForm[ #, ShowContents -> False]&)], 
                TagBox[
                  StyleBox["c",
                    FontColor->RGBColor[1, 0, 0]],
                  (StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)]],
              Tensor[ x, {
                red[ c]}, {Void}],
              Editable->False]}]],
        PartialD[ {x, \[Delta], g, \[CapitalGamma]}][ 
          Tensor[ T, {
            red[ a], Void}, {Void, 
            red[ b]}], {
          Tensor[ x, {
            red[ d]}, {Void}], 
          Tensor[ x, {
            red[ c]}, {Void}]}],
        Editable->False], "-", 
      RowBox[{
        InterpretationBox[
          SubsuperscriptBox["\[CapitalGamma]", 
            RowBox[{
              TagBox[
                StyleBox[
                  TagBox[
                    StyleBox["f",
                      FontColor->RGBColor[1, 0, 0]],
                    (StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)],
                  ShowContents->False],
                (StyleForm[ #, ShowContents -> False]&)], 
              TagBox[
                StyleBox["d",
                  FontColor->RGBColor[1, 0, 0]],
                (StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)], 
              TagBox[
                StyleBox["c",
                  FontColor->RGBColor[1, 0, 0]],
                (StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)]}], 
            RowBox[{
              TagBox[
                StyleBox["f",
                  FontColor->RGBColor[1, 0, 0]],
                (StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)], 
              TagBox[
                StyleBox[
                  TagBox[
                    StyleBox["d",
                      FontColor->RGBColor[1, 0, 0]],
                    (StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)],
                  ShowContents->False],
                (StyleForm[ #, ShowContents -> False]&)], 
              TagBox[
                StyleBox[
                  TagBox[
                    StyleBox["c",
                      FontColor->RGBColor[1, 0, 0]],
                    (StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)],
                  ShowContents->False],
                (StyleForm[ #, ShowContents -> False]&)]}]],
          Tensor[ \[CapitalGamma], {
            red[ f], Void, Void}, {Void, 
            red[ d], 
            red[ c]}],
          Editable->False], " ", 
        RowBox[{"(", 
          RowBox[{
            RowBox[{
              InterpretationBox[
                SubsuperscriptBox["T", 
                  RowBox[{
                    TagBox[
                      StyleBox[
                        TagBox[
                          StyleBox["e",
                            FontColor->RGBColor[1, 0, 0]],
                          (StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)],
                        ShowContents->False],
                      (StyleForm[ #, ShowContents -> False]&)], 
                    TagBox[
                      StyleBox["b",
                        FontColor->RGBColor[1, 0, 0]],
                      (StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)]}], 
                  RowBox[{
                    TagBox[
                      StyleBox["e",
                        FontColor->RGBColor[1, 0, 0]],
                      (StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)], 
                    TagBox[
                      StyleBox[
                        TagBox[
                          StyleBox["b",
                            FontColor->RGBColor[1, 0, 0]],
                          (StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)],
                        ShowContents->False],
                      (StyleForm[ #, ShowContents -> False]&)]}]],
                Tensor[ T, {
                  red[ e], Void}, {Void, 
                  red[ b]}],
                Editable->False], " ", 
              InterpretationBox[
                SubsuperscriptBox["\[CapitalGamma]", 
                  RowBox[{
                    TagBox[
                      StyleBox[
                        TagBox[
                          StyleBox["a",
                            FontColor->RGBColor[1, 0, 0]],
                          (StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)],
                        ShowContents->False],
                      (StyleForm[ #, ShowContents -> False]&)], 
                    TagBox[
                      StyleBox["f",
                        FontColor->RGBColor[1, 0, 0]],
                      (StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)], 
                    TagBox[
                      StyleBox["e",
                        FontColor->RGBColor[1, 0, 0]],
                      (StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)]}], 
                  RowBox[{
                    TagBox[
                      StyleBox["a",
                        FontColor->RGBColor[1, 0, 0]],
                      (StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)], 
                    TagBox[
                      StyleBox[
                        TagBox[
                          StyleBox["f",
                            FontColor->RGBColor[1, 0, 0]],
                          (StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)],
                        ShowContents->False],
                      (StyleForm[ #, ShowContents -> False]&)], 
                    TagBox[
                      StyleBox[
                        TagBox[
                          StyleBox["e",
                            FontColor->RGBColor[1, 0, 0]],
                          (StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)],
                        ShowContents->False],
                      (StyleForm[ #, ShowContents -> False]&)]}]],
                Tensor[ \[CapitalGamma], {
                  red[ a], Void, Void}, {Void, 
                  red[ f], 
                  red[ e]}],
                Editable->False]}], "-", 
            RowBox[{
              InterpretationBox[
                SubsuperscriptBox["T", 
                  RowBox[{
                    TagBox[
                      StyleBox[
                        TagBox[
                          StyleBox["a",
                            FontColor->RGBColor[1, 0, 0]],
                          (StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)],
                        ShowContents->False],
                      (StyleForm[ #, ShowContents -> False]&)], 
                    TagBox[
                      StyleBox["e",
                        FontColor->RGBColor[1, 0, 0]],
                      (StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)]}], 
                  RowBox[{
                    TagBox[
                      StyleBox["a",
                        FontColor->RGBColor[1, 0, 0]],
                      (StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)], 
                    TagBox[
                      StyleBox[
                        TagBox[
                          StyleBox["e",
                            FontColor->RGBColor[1, 0, 0]],
                          (StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)],
                        ShowContents->False],
                      (StyleForm[ #, ShowContents -> False]&)]}]],
                Tensor[ T, {
                  red[ a], Void}, {Void, 
                  red[ e]}],
                Editable->False], " ", 
              InterpretationBox[
                SubsuperscriptBox["\[CapitalGamma]", 
                  RowBox[{
                    TagBox[
                      StyleBox[
                        TagBox[
                          StyleBox["e",
                            FontColor->RGBColor[1, 0, 0]],
                          (StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)],
                        ShowContents->False],
                      (StyleForm[ #, ShowContents -> False]&)], 
                    TagBox[
                      StyleBox["f",
                        FontColor->RGBColor[1, 0, 0]],
                      (StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)], 
                    TagBox[
                      StyleBox["b",
                        FontColor->RGBColor[1, 0, 0]],
                      (StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)]}], 
                  RowBox[{
                    TagBox[
                      StyleBox["e",
                        FontColor->RGBColor[1, 0, 0]],
                      (StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)], 
                    TagBox[
                      StyleBox[
                        TagBox[
                          StyleBox["f",
                            FontColor->RGBColor[1, 0, 0]],
                          (StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)],
                        ShowContents->False],
                      (StyleForm[ #, ShowContents -> False]&)], 
                    TagBox[
                      StyleBox[
                        TagBox[
                          StyleBox["b",
                            FontColor->RGBColor[1, 0, 0]],
                          (StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)],
                        ShowContents->False],
                      (StyleForm[ #, ShowContents -> False]&)]}]],
                Tensor[ \[CapitalGamma], {
                  red[ e], Void, Void}, {Void, 
                  red[ f], 
                  red[ b]}],
                Editable->False]}], "+", 
            InterpretationBox[
              FractionBox[
                RowBox[{"\[PartialD]", 
                  InterpretationBox[
                    SubsuperscriptBox["T", 
                      RowBox[{
                        TagBox[
                          StyleBox[
                            TagBox[
                              StyleBox["a",
                                FontColor->RGBColor[1, 0, 0]],
                              (
                              StyleForm[ #, FontColor -> RGBColor[ 
                                1, 0, 0]]&)],
                            ShowContents->False],
                          (StyleForm[ #, ShowContents -> False]&)], 
                        TagBox[
                          StyleBox["b",
                            FontColor->RGBColor[1, 0, 0]],
                          (
                          StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)]}],
                       
                      RowBox[{
                        TagBox[
                          StyleBox["a",
                            FontColor->RGBColor[1, 0, 0]],
                          (StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)], 
                        
                        TagBox[
                          StyleBox[
                            TagBox[
                              StyleBox["b",
                                FontColor->RGBColor[1, 0, 0]],
                              (
                              StyleForm[ #, FontColor -> RGBColor[ 
                                1, 0, 0]]&)],
                            ShowContents->False],
                          (StyleForm[ #, ShowContents -> False]&)]}]],
                    Tensor[ T, {
                      red[ a], Void}, {Void, 
                      red[ b]}],
                    Editable->False]}], 
                RowBox[{"\[PartialD]", 
                  InterpretationBox[
                    SubsuperscriptBox["x", 
                      TagBox[
                        StyleBox[
                          TagBox[
                            StyleBox["f",
                              FontColor->RGBColor[1, 0, 0]],
                            (
                            StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)],
                          
                          ShowContents->False],
                        (StyleForm[ #, ShowContents -> False]&)], 
                      TagBox[
                        StyleBox["f",
                          FontColor->RGBColor[1, 0, 0]],
                        (StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)]],
                    Tensor[ x, {
                      red[ f]}, {Void}],
                    Editable->False]}]],
              PartialD[ {x, \[Delta], g, \[CapitalGamma]}][ 
                Tensor[ T, {
                  red[ a], Void}, {Void, 
                  red[ b]}], 
                Tensor[ x, {
                  red[ f]}, {Void}]],
              Editable->False]}], ")"}]}], "-", 
      RowBox[{
        InterpretationBox[
          SubsuperscriptBox["\[CapitalGamma]", 
            RowBox[{
              TagBox[
                StyleBox[
                  TagBox[
                    StyleBox["e",
                      FontColor->RGBColor[1, 0, 0]],
                    (StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)],
                  ShowContents->False],
                (StyleForm[ #, ShowContents -> False]&)], 
              TagBox[
                StyleBox["c",
                  FontColor->RGBColor[1, 0, 0]],
                (StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)], 
              TagBox[
                StyleBox["b",
                  FontColor->RGBColor[1, 0, 0]],
                (StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)]}], 
            RowBox[{
              TagBox[
                StyleBox["e",
                  FontColor->RGBColor[1, 0, 0]],
                (StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)], 
              TagBox[
                StyleBox[
                  TagBox[
                    StyleBox["c",
                      FontColor->RGBColor[1, 0, 0]],
                    (StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)],
                  ShowContents->False],
                (StyleForm[ #, ShowContents -> False]&)], 
              TagBox[
                StyleBox[
                  TagBox[
                    StyleBox["b",
                      FontColor->RGBColor[1, 0, 0]],
                    (StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)],
                  ShowContents->False],
                (StyleForm[ #, ShowContents -> False]&)]}]],
          Tensor[ \[CapitalGamma], {
            red[ e], Void, Void}, {Void, 
            red[ c], 
            red[ b]}],
          Editable->False], " ", 
        InterpretationBox[
          FractionBox[
            RowBox[{"\[PartialD]", 
              InterpretationBox[
                SubsuperscriptBox["T", 
                  RowBox[{
                    TagBox[
                      StyleBox[
                        TagBox[
                          StyleBox["a",
                            FontColor->RGBColor[1, 0, 0]],
                          (StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)],
                        ShowContents->False],
                      (StyleForm[ #, ShowContents -> False]&)], 
                    TagBox[
                      StyleBox["e",
                        FontColor->RGBColor[1, 0, 0]],
                      (StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)]}], 
                  RowBox[{
                    TagBox[
                      StyleBox["a",
                        FontColor->RGBColor[1, 0, 0]],
                      (StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)], 
                    TagBox[
                      StyleBox[
                        TagBox[
                          StyleBox["e",
                            FontColor->RGBColor[1, 0, 0]],
                          (StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)],
                        ShowContents->False],
                      (StyleForm[ #, ShowContents -> False]&)]}]],
                Tensor[ T, {
                  red[ a], Void}, {Void, 
                  red[ e]}],
                Editable->False]}], 
            RowBox[{"\[PartialD]", 
              InterpretationBox[
                SubsuperscriptBox["x", 
                  TagBox[
                    StyleBox[
                      TagBox[
                        StyleBox["d",
                          FontColor->RGBColor[1, 0, 0]],
                        (StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)],
                      ShowContents->False],
                    (StyleForm[ #, ShowContents -> False]&)], 
                  TagBox[
                    StyleBox["d",
                      FontColor->RGBColor[1, 0, 0]],
                    (StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)]],
                Tensor[ x, {
                  red[ d]}, {Void}],
                Editable->False]}]],
          PartialD[ {x, \[Delta], g, \[CapitalGamma]}][ 
            Tensor[ T, {
              red[ a], Void}, {Void, 
              red[ e]}], 
            Tensor[ x, {
              red[ d]}, {Void}]],
          Editable->False]}], "-", 
      RowBox[{
        InterpretationBox[
          SubsuperscriptBox["\[CapitalGamma]", 
            RowBox[{
              TagBox[
                StyleBox[
                  TagBox[
                    StyleBox["f",
                      FontColor->RGBColor[1, 0, 0]],
                    (StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)],
                  ShowContents->False],
                (StyleForm[ #, ShowContents -> False]&)], 
              TagBox[
                StyleBox["d",
                  FontColor->RGBColor[1, 0, 0]],
                (StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)], 
              TagBox[
                StyleBox["b",
                  FontColor->RGBColor[1, 0, 0]],
                (StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)]}], 
            RowBox[{
              TagBox[
                StyleBox["f",
                  FontColor->RGBColor[1, 0, 0]],
                (StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)], 
              TagBox[
                StyleBox[
                  TagBox[
                    StyleBox["d",
                      FontColor->RGBColor[1, 0, 0]],
                    (StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)],
                  ShowContents->False],
                (StyleForm[ #, ShowContents -> False]&)], 
              TagBox[
                StyleBox[
                  TagBox[
                    StyleBox["b",
                      FontColor->RGBColor[1, 0, 0]],
                    (StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)],
                  ShowContents->False],
                (StyleForm[ #, ShowContents -> False]&)]}]],
          Tensor[ \[CapitalGamma], {
            red[ f], Void, Void}, {Void, 
            red[ d], 
            red[ b]}],
          Editable->False], " ", 
        RowBox[{"(", 
          RowBox[{
            RowBox[{
              InterpretationBox[
                SubsuperscriptBox["T", 
                  RowBox[{
                    TagBox[
                      StyleBox[
                        TagBox[
                          StyleBox["e",
                            FontColor->RGBColor[1, 0, 0]],
                          (StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)],
                        ShowContents->False],
                      (StyleForm[ #, ShowContents -> False]&)], 
                    TagBox[
                      StyleBox["f",
                        FontColor->RGBColor[1, 0, 0]],
                      (StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)]}], 
                  RowBox[{
                    TagBox[
                      StyleBox["e",
                        FontColor->RGBColor[1, 0, 0]],
                      (StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)], 
                    TagBox[
                      StyleBox[
                        TagBox[
                          StyleBox["f",
                            FontColor->RGBColor[1, 0, 0]],
                          (StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)],
                        ShowContents->False],
                      (StyleForm[ #, ShowContents -> False]&)]}]],
                Tensor[ T, {
                  red[ e], Void}, {Void, 
                  red[ f]}],
                Editable->False], " ", 
              InterpretationBox[
                SubsuperscriptBox["\[CapitalGamma]", 
                  RowBox[{
                    TagBox[
                      StyleBox[
                        TagBox[
                          StyleBox["a",
                            FontColor->RGBColor[1, 0, 0]],
                          (StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)],
                        ShowContents->False],
                      (StyleForm[ #, ShowContents -> False]&)], 
                    TagBox[
                      StyleBox["c",
                        FontColor->RGBColor[1, 0, 0]],
                      (StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)], 
                    TagBox[
                      StyleBox["e",
                        FontColor->RGBColor[1, 0, 0]],
                      (StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)]}], 
                  RowBox[{
                    TagBox[
                      StyleBox["a",
                        FontColor->RGBColor[1, 0, 0]],
                      (StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)], 
                    TagBox[
                      StyleBox[
                        TagBox[
                          StyleBox["c",
                            FontColor->RGBColor[1, 0, 0]],
                          (StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)],
                        ShowContents->False],
                      (StyleForm[ #, ShowContents -> False]&)], 
                    TagBox[
                      StyleBox[
                        TagBox[
                          StyleBox["e",
                            FontColor->RGBColor[1, 0, 0]],
                          (StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)],
                        ShowContents->False],
                      (StyleForm[ #, ShowContents -> False]&)]}]],
                Tensor[ \[CapitalGamma], {
                  red[ a], Void, Void}, {Void, 
                  red[ c], 
                  red[ e]}],
                Editable->False]}], "-", 
            RowBox[{
              InterpretationBox[
                SubsuperscriptBox["T", 
                  RowBox[{
                    TagBox[
                      StyleBox[
                        TagBox[
                          StyleBox["a",
                            FontColor->RGBColor[1, 0, 0]],
                          (StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)],
                        ShowContents->False],
                      (StyleForm[ #, ShowContents -> False]&)], 
                    TagBox[
                      StyleBox["e",
                        FontColor->RGBColor[1, 0, 0]],
                      (StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)]}], 
                  RowBox[{
                    TagBox[
                      StyleBox["a",
                        FontColor->RGBColor[1, 0, 0]],
                      (StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)], 
                    TagBox[
                      StyleBox[
                        TagBox[
                          StyleBox["e",
                            FontColor->RGBColor[1, 0, 0]],
                          (StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)],
                        ShowContents->False],
                      (StyleForm[ #, ShowContents -> False]&)]}]],
                Tensor[ T, {
                  red[ a], Void}, {Void, 
                  red[ e]}],
                Editable->False], " ", 
              InterpretationBox[
                SubsuperscriptBox["\[CapitalGamma]", 
                  RowBox[{
                    TagBox[
                      StyleBox[
                        TagBox[
                          StyleBox["e",
                            FontColor->RGBColor[1, 0, 0]],
                          (StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)],
                        ShowContents->False],
                      (StyleForm[ #, ShowContents -> False]&)], 
                    TagBox[
                      StyleBox["c",
                        FontColor->RGBColor[1, 0, 0]],
                      (StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)], 
                    TagBox[
                      StyleBox["f",
                        FontColor->RGBColor[1, 0, 0]],
                      (StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)]}], 
                  RowBox[{
                    TagBox[
                      StyleBox["e",
                        FontColor->RGBColor[1, 0, 0]],
                      (StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)], 
                    TagBox[
                      StyleBox[
                        TagBox[
                          StyleBox["c",
                            FontColor->RGBColor[1, 0, 0]],
                          (StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)],
                        ShowContents->False],
                      (StyleForm[ #, ShowContents -> False]&)], 
                    TagBox[
                      StyleBox[
                        TagBox[
                          StyleBox["f",
                            FontColor->RGBColor[1, 0, 0]],
                          (StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)],
                        ShowContents->False],
                      (StyleForm[ #, ShowContents -> False]&)]}]],
                Tensor[ \[CapitalGamma], {
                  red[ e], Void, Void}, {Void, 
                  red[ c], 
                  red[ f]}],
                Editable->False]}], "+", 
            InterpretationBox[
              FractionBox[
                RowBox[{"\[PartialD]", 
                  InterpretationBox[
                    SubsuperscriptBox["T", 
                      RowBox[{
                        TagBox[
                          StyleBox[
                            TagBox[
                              StyleBox["a",
                                FontColor->RGBColor[1, 0, 0]],
                              (
                              StyleForm[ #, FontColor -> RGBColor[ 
                                1, 0, 0]]&)],
                            ShowContents->False],
                          (StyleForm[ #, ShowContents -> False]&)], 
                        TagBox[
                          StyleBox["f",
                            FontColor->RGBColor[1, 0, 0]],
                          (
                          StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)]}],
                       
                      RowBox[{
                        TagBox[
                          StyleBox["a",
                            FontColor->RGBColor[1, 0, 0]],
                          (StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)], 
                        
                        TagBox[
                          StyleBox[
                            TagBox[
                              StyleBox["f",
                                FontColor->RGBColor[1, 0, 0]],
                              (
                              StyleForm[ #, FontColor -> RGBColor[ 
                                1, 0, 0]]&)],
                            ShowContents->False],
                          (StyleForm[ #, ShowContents -> False]&)]}]],
                    Tensor[ T, {
                      red[ a], Void}, {Void, 
                      red[ f]}],
                    Editable->False]}], 
                RowBox[{"\[PartialD]", 
                  InterpretationBox[
                    SubsuperscriptBox["x", 
                      TagBox[
                        StyleBox[
                          TagBox[
                            StyleBox["c",
                              FontColor->RGBColor[1, 0, 0]],
                            (
                            StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)],
                          
                          ShowContents->False],
                        (StyleForm[ #, ShowContents -> False]&)], 
                      TagBox[
                        StyleBox["c",
                          FontColor->RGBColor[1, 0, 0]],
                        (StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)]],
                    Tensor[ x, {
                      red[ c]}, {Void}],
                    Editable->False]}]],
              PartialD[ {x, \[Delta], g, \[CapitalGamma]}][ 
                Tensor[ T, {
                  red[ a], Void}, {Void, 
                  red[ f]}], 
                Tensor[ x, {
                  red[ c]}, {Void}]],
              Editable->False]}], ")"}]}], "+", 
      RowBox[{
        InterpretationBox[
          SubsuperscriptBox["\[CapitalGamma]", 
            RowBox[{
              TagBox[
                StyleBox[
                  TagBox[
                    StyleBox["a",
                      FontColor->RGBColor[1, 0, 0]],
                    (StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)],
                  ShowContents->False],
                (StyleForm[ #, ShowContents -> False]&)], 
              TagBox[
                StyleBox["c",
                  FontColor->RGBColor[1, 0, 0]],
                (StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)], 
              TagBox[
                StyleBox["e",
                  FontColor->RGBColor[1, 0, 0]],
                (StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)]}], 
            RowBox[{
              TagBox[
                StyleBox["a",
                  FontColor->RGBColor[1, 0, 0]],
                (StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)], 
              TagBox[
                StyleBox[
                  TagBox[
                    StyleBox["c",
                      FontColor->RGBColor[1, 0, 0]],
                    (StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)],
                  ShowContents->False],
                (StyleForm[ #, ShowContents -> False]&)], 
              TagBox[
                StyleBox[
                  TagBox[
                    StyleBox["e",
                      FontColor->RGBColor[1, 0, 0]],
                    (StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)],
                  ShowContents->False],
                (StyleForm[ #, ShowContents -> False]&)]}]],
          Tensor[ \[CapitalGamma], {
            red[ a], Void, Void}, {Void, 
            red[ c], 
            red[ e]}],
          Editable->False], " ", 
        InterpretationBox[
          FractionBox[
            RowBox[{"\[PartialD]", 
              InterpretationBox[
                SubsuperscriptBox["T", 
                  RowBox[{
                    TagBox[
                      StyleBox[
                        TagBox[
                          StyleBox["e",
                            FontColor->RGBColor[1, 0, 0]],
                          (StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)],
                        ShowContents->False],
                      (StyleForm[ #, ShowContents -> False]&)], 
                    TagBox[
                      StyleBox["b",
                        FontColor->RGBColor[1, 0, 0]],
                      (StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)]}], 
                  RowBox[{
                    TagBox[
                      StyleBox["e",
                        FontColor->RGBColor[1, 0, 0]],
                      (StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)], 
                    TagBox[
                      StyleBox[
                        TagBox[
                          StyleBox["b",
                            FontColor->RGBColor[1, 0, 0]],
                          (StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)],
                        ShowContents->False],
                      (StyleForm[ #, ShowContents -> False]&)]}]],
                Tensor[ T, {
                  red[ e], Void}, {Void, 
                  red[ b]}],
                Editable->False]}], 
            RowBox[{"\[PartialD]", 
              InterpretationBox[
                SubsuperscriptBox["x", 
                  TagBox[
                    StyleBox[
                      TagBox[
                        StyleBox["d",
                          FontColor->RGBColor[1, 0, 0]],
                        (StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)],
                      ShowContents->False],
                    (StyleForm[ #, ShowContents -> False]&)], 
                  TagBox[
                    StyleBox["d",
                      FontColor->RGBColor[1, 0, 0]],
                    (StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)]],
                Tensor[ x, {
                  red[ d]}, {Void}],
                Editable->False]}]],
          PartialD[ {x, \[Delta], g, \[CapitalGamma]}][ 
            Tensor[ T, {
              red[ e], Void}, {Void, 
              red[ b]}], 
            Tensor[ x, {
              red[ d]}, {Void}]],
          Editable->False]}], "+", 
      RowBox[{
        InterpretationBox[
          SubsuperscriptBox["\[CapitalGamma]", 
            RowBox[{
              TagBox[
                StyleBox[
                  TagBox[
                    StyleBox["a",
                      FontColor->RGBColor[1, 0, 0]],
                    (StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)],
                  ShowContents->False],
                (StyleForm[ #, ShowContents -> False]&)], 
              TagBox[
                StyleBox["d",
                  FontColor->RGBColor[1, 0, 0]],
                (StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)], 
              TagBox[
                StyleBox["f",
                  FontColor->RGBColor[1, 0, 0]],
                (StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)]}], 
            RowBox[{
              TagBox[
                StyleBox["a",
                  FontColor->RGBColor[1, 0, 0]],
                (StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)], 
              TagBox[
                StyleBox[
                  TagBox[
                    StyleBox["d",
                      FontColor->RGBColor[1, 0, 0]],
                    (StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)],
                  ShowContents->False],
                (StyleForm[ #, ShowContents -> False]&)], 
              TagBox[
                StyleBox[
                  TagBox[
                    StyleBox["f",
                      FontColor->RGBColor[1, 0, 0]],
                    (StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)],
                  ShowContents->False],
                (StyleForm[ #, ShowContents -> False]&)]}]],
          Tensor[ \[CapitalGamma], {
            red[ a], Void, Void}, {Void, 
            red[ d], 
            red[ f]}],
          Editable->False], " ", 
        RowBox[{"(", 
          RowBox[{
            RowBox[{
              RowBox[{"-", 
                InterpretationBox[
                  SubsuperscriptBox["T", 
                    RowBox[{
                      TagBox[
                        StyleBox[
                          TagBox[
                            StyleBox["f",
                              FontColor->RGBColor[1, 0, 0]],
                            (
                            StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)],
                          
                          ShowContents->False],
                        (StyleForm[ #, ShowContents -> False]&)], 
                      TagBox[
                        StyleBox["e",
                          FontColor->RGBColor[1, 0, 0]],
                        (StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)]}], 
                    
                    RowBox[{
                      TagBox[
                        StyleBox["f",
                          FontColor->RGBColor[1, 0, 0]],
                        (StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)], 
                      TagBox[
                        StyleBox[
                          TagBox[
                            StyleBox["e",
                              FontColor->RGBColor[1, 0, 0]],
                            (
                            StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)],
                          
                          ShowContents->False],
                        (StyleForm[ #, ShowContents -> False]&)]}]],
                  Tensor[ T, {
                    red[ f], Void}, {Void, 
                    red[ e]}],
                  Editable->False]}], " ", 
              InterpretationBox[
                SubsuperscriptBox["\[CapitalGamma]", 
                  RowBox[{
                    TagBox[
                      StyleBox[
                        TagBox[
                          StyleBox["e",
                            FontColor->RGBColor[1, 0, 0]],
                          (StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)],
                        ShowContents->False],
                      (StyleForm[ #, ShowContents -> False]&)], 
                    TagBox[
                      StyleBox["c",
                        FontColor->RGBColor[1, 0, 0]],
                      (StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)], 
                    TagBox[
                      StyleBox["b",
                        FontColor->RGBColor[1, 0, 0]],
                      (StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)]}], 
                  RowBox[{
                    TagBox[
                      StyleBox["e",
                        FontColor->RGBColor[1, 0, 0]],
                      (StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)], 
                    TagBox[
                      StyleBox[
                        TagBox[
                          StyleBox["c",
                            FontColor->RGBColor[1, 0, 0]],
                          (StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)],
                        ShowContents->False],
                      (StyleForm[ #, ShowContents -> False]&)], 
                    TagBox[
                      StyleBox[
                        TagBox[
                          StyleBox["b",
                            FontColor->RGBColor[1, 0, 0]],
                          (StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)],
                        ShowContents->False],
                      (StyleForm[ #, ShowContents -> False]&)]}]],
                Tensor[ \[CapitalGamma], {
                  red[ e], Void, Void}, {Void, 
                  red[ c], 
                  red[ b]}],
                Editable->False]}], "+", 
            RowBox[{
              InterpretationBox[
                SubsuperscriptBox["T", 
                  RowBox[{
                    TagBox[
                      StyleBox[
                        TagBox[
                          StyleBox["e",
                            FontColor->RGBColor[1, 0, 0]],
                          (StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)],
                        ShowContents->False],
                      (StyleForm[ #, ShowContents -> False]&)], 
                    TagBox[
                      StyleBox["b",
                        FontColor->RGBColor[1, 0, 0]],
                      (StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)]}], 
                  RowBox[{
                    TagBox[
                      StyleBox["e",
                        FontColor->RGBColor[1, 0, 0]],
                      (StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)], 
                    TagBox[
                      StyleBox[
                        TagBox[
                          StyleBox["b",
                            FontColor->RGBColor[1, 0, 0]],
                          (StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)],
                        ShowContents->False],
                      (StyleForm[ #, ShowContents -> False]&)]}]],
                Tensor[ T, {
                  red[ e], Void}, {Void, 
                  red[ b]}],
                Editable->False], " ", 
              InterpretationBox[
                SubsuperscriptBox["\[CapitalGamma]", 
                  RowBox[{
                    TagBox[
                      StyleBox[
                        TagBox[
                          StyleBox["f",
                            FontColor->RGBColor[1, 0, 0]],
                          (StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)],
                        ShowContents->False],
                      (StyleForm[ #, ShowContents -> False]&)], 
                    TagBox[
                      StyleBox["c",
                        FontColor->RGBColor[1, 0, 0]],
                      (StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)], 
                    TagBox[
                      StyleBox["e",
                        FontColor->RGBColor[1, 0, 0]],
                      (StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)]}], 
                  RowBox[{
                    TagBox[
                      StyleBox["f",
                        FontColor->RGBColor[1, 0, 0]],
                      (StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)], 
                    TagBox[
                      StyleBox[
                        TagBox[
                          StyleBox["c",
                            FontColor->RGBColor[1, 0, 0]],
                          (StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)],
                        ShowContents->False],
                      (StyleForm[ #, ShowContents -> False]&)], 
                    TagBox[
                      StyleBox[
                        TagBox[
                          StyleBox["e",
                            FontColor->RGBColor[1, 0, 0]],
                          (StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)],
                        ShowContents->False],
                      (StyleForm[ #, ShowContents -> False]&)]}]],
                Tensor[ \[CapitalGamma], {
                  red[ f], Void, Void}, {Void, 
                  red[ c], 
                  red[ e]}],
                Editable->False]}], "+", 
            InterpretationBox[
              FractionBox[
                RowBox[{"\[PartialD]", 
                  InterpretationBox[
                    SubsuperscriptBox["T", 
                      RowBox[{
                        TagBox[
                          StyleBox[
                            TagBox[
                              StyleBox["f",
                                FontColor->RGBColor[1, 0, 0]],
                              (
                              StyleForm[ #, FontColor -> RGBColor[ 
                                1, 0, 0]]&)],
                            ShowContents->False],
                          (StyleForm[ #, ShowContents -> False]&)], 
                        TagBox[
                          StyleBox["b",
                            FontColor->RGBColor[1, 0, 0]],
                          (
                          StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)]}],
                       
                      RowBox[{
                        TagBox[
                          StyleBox["f",
                            FontColor->RGBColor[1, 0, 0]],
                          (StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)], 
                        
                        TagBox[
                          StyleBox[
                            TagBox[
                              StyleBox["b",
                                FontColor->RGBColor[1, 0, 0]],
                              (
                              StyleForm[ #, FontColor -> RGBColor[ 
                                1, 0, 0]]&)],
                            ShowContents->False],
                          (StyleForm[ #, ShowContents -> False]&)]}]],
                    Tensor[ T, {
                      red[ f], Void}, {Void, 
                      red[ b]}],
                    Editable->False]}], 
                RowBox[{"\[PartialD]", 
                  InterpretationBox[
                    SubsuperscriptBox["x", 
                      TagBox[
                        StyleBox[
                          TagBox[
                            StyleBox["c",
                              FontColor->RGBColor[1, 0, 0]],
                            (
                            StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)],
                          
                          ShowContents->False],
                        (StyleForm[ #, ShowContents -> False]&)], 
                      TagBox[
                        StyleBox["c",
                          FontColor->RGBColor[1, 0, 0]],
                        (StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)]],
                    Tensor[ x, {
                      red[ c]}, {Void}],
                    Editable->False]}]],
              PartialD[ {x, \[Delta], g, \[CapitalGamma]}][ 
                Tensor[ T, {
                  red[ f], Void}, {Void, 
                  red[ b]}], 
                Tensor[ x, {
                  red[ c]}, {Void}]],
              Editable->False]}], ")"}]}], "+", 
      RowBox[{
        InterpretationBox[
          SubsuperscriptBox["T", 
            RowBox[{
              TagBox[
                StyleBox[
                  TagBox[
                    StyleBox["e",
                      FontColor->RGBColor[1, 0, 0]],
                    (StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)],
                  ShowContents->False],
                (StyleForm[ #, ShowContents -> False]&)], 
              TagBox[
                StyleBox["b",
                  FontColor->RGBColor[1, 0, 0]],
                (StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)]}], 
            RowBox[{
              TagBox[
                StyleBox["e",
                  FontColor->RGBColor[1, 0, 0]],
                (StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)], 
              TagBox[
                StyleBox[
                  TagBox[
                    StyleBox["b",
                      FontColor->RGBColor[1, 0, 0]],
                    (StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)],
                  ShowContents->False],
                (StyleForm[ #, ShowContents -> False]&)]}]],
          Tensor[ T, {
            red[ e], Void}, {Void, 
            red[ b]}],
          Editable->False], " ", 
        InterpretationBox[
          FractionBox[
            RowBox[{"\[PartialD]", 
              InterpretationBox[
                SubsuperscriptBox["\[CapitalGamma]", 
                  RowBox[{
                    TagBox[
                      StyleBox[
                        TagBox[
                          StyleBox["a",
                            FontColor->RGBColor[1, 0, 0]],
                          (StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)],
                        ShowContents->False],
                      (StyleForm[ #, ShowContents -> False]&)], 
                    TagBox[
                      StyleBox["c",
                        FontColor->RGBColor[1, 0, 0]],
                      (StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)], 
                    TagBox[
                      StyleBox["e",
                        FontColor->RGBColor[1, 0, 0]],
                      (StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)]}], 
                  RowBox[{
                    TagBox[
                      StyleBox["a",
                        FontColor->RGBColor[1, 0, 0]],
                      (StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)], 
                    TagBox[
                      StyleBox[
                        TagBox[
                          StyleBox["c",
                            FontColor->RGBColor[1, 0, 0]],
                          (StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)],
                        ShowContents->False],
                      (StyleForm[ #, ShowContents -> False]&)], 
                    TagBox[
                      StyleBox[
                        TagBox[
                          StyleBox["e",
                            FontColor->RGBColor[1, 0, 0]],
                          (StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)],
                        ShowContents->False],
                      (StyleForm[ #, ShowContents -> False]&)]}]],
                Tensor[ \[CapitalGamma], {
                  red[ a], Void, Void}, {Void, 
                  red[ c], 
                  red[ e]}],
                Editable->False]}], 
            RowBox[{"\[PartialD]", 
              InterpretationBox[
                SubsuperscriptBox["x", 
                  TagBox[
                    StyleBox[
                      TagBox[
                        StyleBox["d",
                          FontColor->RGBColor[1, 0, 0]],
                        (StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)],
                      ShowContents->False],
                    (StyleForm[ #, ShowContents -> False]&)], 
                  TagBox[
                    StyleBox["d",
                      FontColor->RGBColor[1, 0, 0]],
                    (StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)]],
                Tensor[ x, {
                  red[ d]}, {Void}],
                Editable->False]}]],
          PartialD[ {x, \[Delta], g, \[CapitalGamma]}][ 
            Tensor[ \[CapitalGamma], {
              red[ a], Void, Void}, {Void, 
              red[ c], 
              red[ e]}], 
            Tensor[ x, {
              red[ d]}, {Void}]],
          Editable->False]}], "-", 
      RowBox[{
        InterpretationBox[
          SubsuperscriptBox["T", 
            RowBox[{
              TagBox[
                StyleBox[
                  TagBox[
                    StyleBox["a",
                      FontColor->RGBColor[1, 0, 0]],
                    (StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)],
                  ShowContents->False],
                (StyleForm[ #, ShowContents -> False]&)], 
              TagBox[
                StyleBox["e",
                  FontColor->RGBColor[1, 0, 0]],
                (StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)]}], 
            RowBox[{
              TagBox[
                StyleBox["a",
                  FontColor->RGBColor[1, 0, 0]],
                (StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)], 
              TagBox[
                StyleBox[
                  TagBox[
                    StyleBox["e",
                      FontColor->RGBColor[1, 0, 0]],
                    (StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)],
                  ShowContents->False],
                (StyleForm[ #, ShowContents -> False]&)]}]],
          Tensor[ T, {
            red[ a], Void}, {Void, 
            red[ e]}],
          Editable->False], " ", 
        InterpretationBox[
          FractionBox[
            RowBox[{"\[PartialD]", 
              InterpretationBox[
                SubsuperscriptBox["\[CapitalGamma]", 
                  RowBox[{
                    TagBox[
                      StyleBox[
                        TagBox[
                          StyleBox["e",
                            FontColor->RGBColor[1, 0, 0]],
                          (StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)],
                        ShowContents->False],
                      (StyleForm[ #, ShowContents -> False]&)], 
                    TagBox[
                      StyleBox["c",
                        FontColor->RGBColor[1, 0, 0]],
                      (StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)], 
                    TagBox[
                      StyleBox["b",
                        FontColor->RGBColor[1, 0, 0]],
                      (StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)]}], 
                  RowBox[{
                    TagBox[
                      StyleBox["e",
                        FontColor->RGBColor[1, 0, 0]],
                      (StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)], 
                    TagBox[
                      StyleBox[
                        TagBox[
                          StyleBox["c",
                            FontColor->RGBColor[1, 0, 0]],
                          (StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)],
                        ShowContents->False],
                      (StyleForm[ #, ShowContents -> False]&)], 
                    TagBox[
                      StyleBox[
                        TagBox[
                          StyleBox["b",
                            FontColor->RGBColor[1, 0, 0]],
                          (StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)],
                        ShowContents->False],
                      (StyleForm[ #, ShowContents -> False]&)]}]],
                Tensor[ \[CapitalGamma], {
                  red[ e], Void, Void}, {Void, 
                  red[ c], 
                  red[ b]}],
                Editable->False]}], 
            RowBox[{"\[PartialD]", 
              InterpretationBox[
                SubsuperscriptBox["x", 
                  TagBox[
                    StyleBox[
                      TagBox[
                        StyleBox["d",
                          FontColor->RGBColor[1, 0, 0]],
                        (StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)],
                      ShowContents->False],
                    (StyleForm[ #, ShowContents -> False]&)], 
                  TagBox[
                    StyleBox["d",
                      FontColor->RGBColor[1, 0, 0]],
                    (StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)]],
                Tensor[ x, {
                  red[ d]}, {Void}],
                Editable->False]}]],
          PartialD[ {x, \[Delta], g, \[CapitalGamma]}][ 
            Tensor[ \[CapitalGamma], {
              red[ e], Void, Void}, {Void, 
              red[ c], 
              red[ b]}], 
            Tensor[ x, {
              red[ d]}, {Void}]],
          Editable->False]}]}]], "Output"]
}, Open  ]]
}, Open  ]],

Cell[TextData[Cell[BoxData[GridBox[{
        {
          ButtonBox[
            StyleBox["\[FirstPage]",
              "SR"],
            ButtonFunction:>FrontEndExecute[ {
                FrontEndToken[ 
                  FrontEnd`SelectedNotebook[ ], "ScrollPageFirst"]}],
            ButtonStyle->"SlideHyperlink",
            ButtonNote->"First Slide"], 
          ButtonBox[
            StyleBox["\[LeftPointer]",
              "SR"],
            ButtonFunction:>FrontEndExecute[ {
                FrontEndToken[ 
                  FrontEnd`SelectedNotebook[ ], "ScrollPagePrevious"]}],
            ButtonStyle->"SlideHyperlink",
            ButtonNote->"Previous Slide"], 
          ButtonBox[
            StyleBox["\[RightPointer]",
              "SR"],
            ButtonFunction:>FrontEndExecute[ {
                FrontEndToken[ 
                  FrontEnd`SelectedNotebook[ ], "ScrollPageNext"]}],
            ButtonStyle->"SlideHyperlink",
            ButtonNote->"Next Slide"], 
          ButtonBox[
            StyleBox["\[LastPage]",
              "SR"],
            ButtonFunction:>FrontEndExecute[ {
                FrontEndToken[ 
                  FrontEnd`SelectedNotebook[ ], "ScrollPageLast"]}],
            ButtonStyle->"SlideHyperlink"], " ", 
          ButtonBox[
            StyleBox[
              RowBox[{
                CounterBox["SlideShowNavigationBar"], \(\(\ \)\(of\)\(\ \)\), 
                
                
                CounterBox["SlideShowNavigationBar", {None, 
                  "SlideShowHeader", -1}]}],
              "SR"],
            ButtonFrame->"None"]}
        }]]]], "SlideShowNavigationBar",
  CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell[TextData[{
  StyleBox["Tensorial",
    FontSlant->"Italic"],
  " 4.0 - Derivatives - Total Derivative"
}], "Section"],

Cell[CellGroupData[{

Cell[BoxData[{
    \(\(SetAttributes[m, Constant];\)\), "\[IndentingNewLine]", 
    \(F \[Equal] m\ a\), "\[IndentingNewLine]", 
    \(% /. {F \[Rule] Fu[i], 
        a \[Rule] TotalD[xu[i], {t, t}]}\), "\[IndentingNewLine]", 
    \(% // ToArrayValues[]\), "\[IndentingNewLine]", 
    \(\(\(% // UseCoordinates[{0, 0, \(-m\)\ g}, F]\) // 
        UseCoordinates[{x[t], y[t], z[t]}];\)\), "\[IndentingNewLine]", 
    \(Reverse /@ Map[#/m &, %, {2}]\), "\[IndentingNewLine]", 
    \(\(Join[%, {\(x'\)[0] \[Equal] v0, \(y'\)[0] \[Equal] 
            0, \(z'\)[0] \[Equal] 0, x[0] \[Equal] 0, y[0] \[Equal] 0, 
          z[0] \[Equal] z0}];\)\), "\[IndentingNewLine]", 
    \(Simplify@\(First@
        DSolve[%, {x[t], y[t], z[t]}, t]\)\), "\[IndentingNewLine]", 
    \(LHSSymbolsToPatterns[{t}] /@ %\)}], "Input"],

Cell[BoxData[
    \(F \[Equal] a\ m\)], "Output"],

Cell[BoxData[
    RowBox[{
      InterpretationBox[
        SubsuperscriptBox["F", 
          TagBox[
            StyleBox["i",
              ShowContents->False],
            (StyleForm[ #, ShowContents -> False]&)], "i"],
        Tensor[ F, {i}, {Void}],
        Editable->False], "\[Equal]", 
      RowBox[{"m", " ", 
        InterpretationBox[
          FractionBox[
            RowBox[{\(\[DifferentialD]\^2\), 
              InterpretationBox[
                SubsuperscriptBox["x", 
                  TagBox[
                    StyleBox["i",
                      ShowContents->False],
                    (StyleForm[ #, ShowContents -> False]&)], "i"],
                Tensor[ x, {i}, {Void}],
                Editable->False]}], \(\[DifferentialD]t \[DifferentialD]t\)],
          TotalD[ 
            Tensor[ x, {i}, {Void}], {t, t}],
          Editable->False]}]}]], "Output"],

Cell[BoxData[
    RowBox[{"{", 
      RowBox[{
        RowBox[{
          InterpretationBox[
            SubsuperscriptBox["F", 
              TagBox[
                StyleBox["1",
                  ShowContents->False],
                (StyleForm[ #, ShowContents -> False]&)], "1"],
            Tensor[ F, {1}, {Void}],
            Editable->False], "\[Equal]", 
          RowBox[{"m", " ", 
            InterpretationBox[
              FractionBox[
                RowBox[{\(\[DifferentialD]\^2\), 
                  InterpretationBox[
                    SubsuperscriptBox["x", 
                      TagBox[
                        StyleBox["1",
                          ShowContents->False],
                        (StyleForm[ #, ShowContents -> False]&)], "1"],
                    Tensor[ x, {1}, {Void}],
                    
                    Editable->
                      False]}], \(\[DifferentialD]t \[DifferentialD]t\)],
              TotalD[ 
                Tensor[ x, {1}, {Void}], {t, t}],
              Editable->False]}]}], ",", 
        RowBox[{
          InterpretationBox[
            SubsuperscriptBox["F", 
              TagBox[
                StyleBox["2",
                  ShowContents->False],
                (StyleForm[ #, ShowContents -> False]&)], "2"],
            Tensor[ F, {2}, {Void}],
            Editable->False], "\[Equal]", 
          RowBox[{"m", " ", 
            InterpretationBox[
              FractionBox[
                RowBox[{\(\[DifferentialD]\^2\), 
                  InterpretationBox[
                    SubsuperscriptBox["x", 
                      TagBox[
                        StyleBox["2",
                          ShowContents->False],
                        (StyleForm[ #, ShowContents -> False]&)], "2"],
                    Tensor[ x, {2}, {Void}],
                    
                    Editable->
                      False]}], \(\[DifferentialD]t \[DifferentialD]t\)],
              TotalD[ 
                Tensor[ x, {2}, {Void}], {t, t}],
              Editable->False]}]}], ",", 
        RowBox[{
          InterpretationBox[
            SubsuperscriptBox["F", 
              TagBox[
                StyleBox["3",
                  ShowContents->False],
                (StyleForm[ #, ShowContents -> False]&)], "3"],
            Tensor[ F, {3}, {Void}],
            Editable->False], "\[Equal]", 
          RowBox[{"m", " ", 
            InterpretationBox[
              FractionBox[
                RowBox[{\(\[DifferentialD]\^2\), 
                  InterpretationBox[
                    SubsuperscriptBox["x", 
                      TagBox[
                        StyleBox["3",
                          ShowContents->False],
                        (StyleForm[ #, ShowContents -> False]&)], "3"],
                    Tensor[ x, {3}, {Void}],
                    
                    Editable->
                      False]}], \(\[DifferentialD]t \[DifferentialD]t\)],
              TotalD[ 
                Tensor[ x, {3}, {Void}], {t, t}],
              Editable->False]}]}]}], "}"}]], "Output"],

Cell[BoxData[
    RowBox[{"{", 
      RowBox[{
        RowBox[{
          RowBox[{
            SuperscriptBox["x", "\[Prime]\[Prime]",
              MultilineFunction->None], "[", "t", "]"}], "\[Equal]", "0"}], 
        ",", 
        RowBox[{
          RowBox[{
            SuperscriptBox["y", "\[Prime]\[Prime]",
              MultilineFunction->None], "[", "t", "]"}], "\[Equal]", "0"}], 
        ",", 
        RowBox[{
          RowBox[{
            SuperscriptBox["z", "\[Prime]\[Prime]",
              MultilineFunction->None], "[", "t", "]"}], 
          "\[Equal]", \(-g\)}]}], "}"}]], "Output"],

Cell[BoxData[
    \({x[t] \[Rule] t\ v0, y[t] \[Rule] 0, 
      z[t] \[Rule] \(-\(\(g\ t\^2\)\/2\)\) + z0}\)], "Output"],

Cell[BoxData[
    \({x[t_] \[Rule] t\ v0, y[t_] \[Rule] 0, 
      z[t_] \[Rule] \(-\(\(g\ t\^2\)\/2\)\) + z0}\)], "Output"]
}, Open  ]],

Cell[TextData[{
  StyleBox["Tensorial",
    FontSlant->"Italic"],
  " equations smoothly morphed to regular ",
  StyleBox["Mathematica",
    FontSlant->"Italic"],
  " differential equations, which ",
  StyleBox["Mathematica",
    FontSlant->"Italic"],
  " solved. ",
  Cell[BoxData[
      \(LHSSymbolsToPatterns\)]],
  " can be used to convert derived equations or rules to general substitution \
rules."
}], "Text"]
}, Open  ]],

Cell[TextData[Cell[BoxData[GridBox[{
        {
          ButtonBox[
            StyleBox["\[FirstPage]",
              "SR"],
            ButtonFunction:>FrontEndExecute[ {
                FrontEndToken[ 
                  FrontEnd`SelectedNotebook[ ], "ScrollPageFirst"]}],
            ButtonStyle->"SlideHyperlink",
            ButtonNote->"First Slide"], 
          ButtonBox[
            StyleBox["\[LeftPointer]",
              "SR"],
            ButtonFunction:>FrontEndExecute[ {
                FrontEndToken[ 
                  FrontEnd`SelectedNotebook[ ], "ScrollPagePrevious"]}],
            ButtonStyle->"SlideHyperlink",
            ButtonNote->"Previous Slide"], 
          ButtonBox[
            StyleBox["\[RightPointer]",
              "SR"],
            ButtonFunction:>FrontEndExecute[ {
                FrontEndToken[ 
                  FrontEnd`SelectedNotebook[ ], "ScrollPageNext"]}],
            ButtonStyle->"SlideHyperlink",
            ButtonNote->"Next Slide"], 
          ButtonBox[
            StyleBox["\[LastPage]",
              "SR"],
            ButtonFunction:>FrontEndExecute[ {
                FrontEndToken[ 
                  FrontEnd`SelectedNotebook[ ], "ScrollPageLast"]}],
            ButtonStyle->"SlideHyperlink"], " ", 
          ButtonBox[
            StyleBox[
              RowBox[{
                CounterBox["SlideShowNavigationBar"], \(\(\ \)\(of\)\(\ \)\), 
                
                
                CounterBox["SlideShowNavigationBar", {None, 
                  "SlideShowHeader", -1}]}],
              "SR"],
            ButtonFrame->"None"]}
        }]]]], "SlideShowNavigationBar",
  CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell[TextData[{
  StyleBox["Tensorial",
    FontSlant->"Italic"],
  " 4.0 - Derivatives - Absolute Derivative (a)"
}], "Section"],

Cell["\<\
Calculation of velocity and acceleration tensors in spherical coordinates:  \
\[Rho] is the distance from the origin to a point, \[Theta] is the angle from \
the North pole, and \[Phi] is the rotation about the z axis.
1) Enter the metric matrix for spherical coordinates in coordinate form.
2) Convert to coordinate positions with label x (the default).
3) Set the metric tensor values. The inverse is also calculated and set.
4) Calculate and set the Christoffel symbols.\
\>", "Text"],

Cell[CellGroupData[{

Cell[BoxData[{
    \(\(cmetric = 
        DiagonalMatrix[{1, \[Rho]\^2, \(\[Rho]\^2\) 
              Sin[\[Theta]]\^2}];\)\), "\[IndentingNewLine]", 
    \(\((metric = 
          cmetric // CoordinatesToTensors[{\[Rho], \[Theta], \[Phi]}])\) // 
      MatrixForm\), "\[IndentingNewLine]", 
    \(\(MapThread[
        SetTensorValues[#1, #2] &, {{gdd[a, b], guu[a, b]}, {metric, 
            Inverse@metric}}];\)\), "\[IndentingNewLine]", 
    \(\(MapThread[
        SetTensorValues[#1, #2] &, {{\[CapitalGamma]ddd[a, b, 
              c], \[CapitalGamma]udd[a, b, ]}, 
          CalculateChristoffels[labs]}];\)\)}], "Input"],

Cell[BoxData[
    TagBox[
      RowBox[{"(", "\[NoBreak]", GridBox[{
            {"1", "0", "0"},
            {"0", 
              TagBox[
                SuperscriptBox[
                  RowBox[{"(", 
                    InterpretationBox[
                      SubsuperscriptBox["x", 
                        TagBox[
                          StyleBox["1",
                            ShowContents->False],
                          (StyleForm[ #, ShowContents -> False]&)], "1"],
                      Tensor[ x, {1}, {Void}],
                      Editable->False], ")"}], "2"],
                DisplayForm], "0"},
            {"0", "0", 
              RowBox[{
                SuperscriptBox[
                  RowBox[{"Sin", "[", 
                    InterpretationBox[
                      SubsuperscriptBox["x", 
                        TagBox[
                          StyleBox["2",
                            ShowContents->False],
                          (StyleForm[ #, ShowContents -> False]&)], "2"],
                      Tensor[ x, {2}, {Void}],
                      Editable->False], "]"}], "2"], " ", 
                TagBox[
                  SuperscriptBox[
                    RowBox[{"(", 
                      InterpretationBox[
                        SubsuperscriptBox["x", 
                          TagBox[
                            StyleBox["1",
                              ShowContents->False],
                            (StyleForm[ #, ShowContents -> False]&)], "1"],
                        Tensor[ x, {1}, {Void}],
                        Editable->False], ")"}], "2"],
                  DisplayForm]}]}
            },
          RowSpacings->1,
          ColumnSpacings->1,
          ColumnAlignments->{Left}], "\[NoBreak]", ")"}],
      Function[ BoxForm`e$, 
        MatrixForm[ BoxForm`e$]]]], "Output"]
}, Open  ]],

Cell["\<\
We set tensor values for the velocity and we set coordinate rules for an \
object rotating around equatorial plane at a radius of R and an angular \
velocity \[Omega].\
\>", "Text"],

Cell[BoxData[{
    \(SetTensorValues[vu[i], TotalD[xu[i], t] // ToArrayValues[]]\), "\n", 
    \(SetTensorValueRules[xu[i], {R, \[Pi]/2, \[Omega]\ t}]\)}], "Input"]
}, Open  ]],

Cell[TextData[Cell[BoxData[GridBox[{
        {
          ButtonBox[
            StyleBox["\[FirstPage]",
              "SR"],
            ButtonFunction:>FrontEndExecute[ {
                FrontEndToken[ 
                  FrontEnd`SelectedNotebook[ ], "ScrollPageFirst"]}],
            ButtonStyle->"SlideHyperlink",
            ButtonNote->"First Slide"], 
          ButtonBox[
            StyleBox["\[LeftPointer]",
              "SR"],
            ButtonFunction:>FrontEndExecute[ {
                FrontEndToken[ 
                  FrontEnd`SelectedNotebook[ ], "ScrollPagePrevious"]}],
            ButtonStyle->"SlideHyperlink",
            ButtonNote->"Previous Slide"], 
          ButtonBox[
            StyleBox["\[RightPointer]",
              "SR"],
            ButtonFunction:>FrontEndExecute[ {
                FrontEndToken[ 
                  FrontEnd`SelectedNotebook[ ], "ScrollPageNext"]}],
            ButtonStyle->"SlideHyperlink",
            ButtonNote->"Next Slide"], 
          ButtonBox[
            StyleBox["\[LastPage]",
              "SR"],
            ButtonFunction:>FrontEndExecute[ {
                FrontEndToken[ 
                  FrontEnd`SelectedNotebook[ ], "ScrollPageLast"]}],
            ButtonStyle->"SlideHyperlink"], " ", 
          ButtonBox[
            StyleBox[
              RowBox[{
                CounterBox["SlideShowNavigationBar"], \(\(\ \)\(of\)\(\ \)\), 
                
                
                CounterBox["SlideShowNavigationBar", {None, 
                  "SlideShowHeader", -1}]}],
              "SR"],
            ButtonFrame->"None"]}
        }]]]], "SlideShowNavigationBar",
  CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell[TextData[{
  StyleBox["Tensorial",
    FontSlant->"Italic"],
  " 4.0 - Derivatives - Absolute Derivative (b)"
}], "Section"],

Cell["\<\
Now it is trivial to calculate the acceleration by taking the absolute \
derivative of the velocity.
1) Take the absolute derivative of the velocity.
2) Expand it in terms of Christoffel symbols and total derivatives.
3) Expand to the components in terms of the coordinate positions.
4) Substitute coordinate values.\
\>", "Text"],

Cell[CellGroupData[{

Cell[BoxData[{
    \(AbsoluteD[vu[m], t]\), "\[IndentingNewLine]", 
    \(% // ExpandAbsoluteD[labs, {\[Mu], \[Nu]}]\), "\[IndentingNewLine]", 
    \(\(\(% // EinsteinSum[]\) // 
        EinsteinArray[];\)\), "\[IndentingNewLine]", 
    \(% /. TensorValueRules[\[CapitalGamma]] // 
      UseCoordinates[{r, \[Theta], \[Phi]}]\)}], "Input"],

Cell[BoxData[
    InterpretationBox[
      FractionBox[
        RowBox[{"D", 
          InterpretationBox[
            SubsuperscriptBox["v", 
              TagBox[
                StyleBox["m",
                  ShowContents->False],
                (StyleForm[ #, ShowContents -> False]&)], "m"],
            Tensor[ v, {m}, {Void}],
            Editable->False]}], \(d  t\)],
      AbsoluteD[ 
        Tensor[ v, {m}, {Void}], t],
      Editable->False]], "Output"],

Cell[BoxData[
    RowBox[{
      InterpretationBox[
        FractionBox[
          RowBox[{"\[DifferentialD]", 
            InterpretationBox[
              SubsuperscriptBox["v", 
                TagBox[
                  StyleBox["m",
                    ShowContents->False],
                  (StyleForm[ #, ShowContents -> False]&)], "m"],
              Tensor[ v, {m}, {Void}],
              Editable->False]}], \(\[DifferentialD]t\)],
        TotalD[ 
          Tensor[ v, {m}, {Void}], t]], "+", 
      RowBox[{
        InterpretationBox[
          SubsuperscriptBox["v", 
            TagBox[
              StyleBox["\[Mu]",
                ShowContents->False],
              (StyleForm[ #, ShowContents -> False]&)], "\[Mu]"],
          Tensor[ v, {\[Mu]}, {Void}],
          Editable->False], " ", 
        InterpretationBox[
          SubsuperscriptBox["\[CapitalGamma]", 
            RowBox[{
              TagBox[
                StyleBox["m",
                  ShowContents->False],
                (StyleForm[ #, ShowContents -> False]&)], "\[Mu]", "\[Nu]"}], 
            
            RowBox[{"m", 
              TagBox[
                StyleBox["\[Mu]",
                  ShowContents->False],
                (StyleForm[ #, ShowContents -> False]&)], 
              TagBox[
                StyleBox["\[Nu]",
                  ShowContents->False],
                (StyleForm[ #, ShowContents -> False]&)]}]],
          Tensor[ \[CapitalGamma], {m, Void, Void}, {Void, \[Mu], \[Nu]}],
          Editable->False], " ", 
        InterpretationBox[
          FractionBox[
            RowBox[{"\[DifferentialD]", 
              InterpretationBox[
                SubsuperscriptBox["x", 
                  TagBox[
                    StyleBox["\[Nu]",
                      ShowContents->False],
                    (StyleForm[ #, ShowContents -> False]&)], "\[Nu]"],
                Tensor[ x, {\[Nu]}, {Void}],
                Editable->False]}], \(\[DifferentialD]t\)],
          TotalD[ 
            Tensor[ x, {\[Nu]}, {Void}], t]]}]}]], "Output"],

Cell[BoxData[
    RowBox[{"{", 
      RowBox[{
        RowBox[{
          
          InterpretationBox[\(\[DifferentialD]\^2 
                  r\/\(\(\ \)\(\(\[VeryThinSpace]\)\(\[DifferentialD]\)\) \(t\
\)\)\^2\),
            Dt[ r, {t, 2}],
            Editable->False], "-", 
          RowBox[{"r", " ", 
            TagBox[
              SuperscriptBox[
                RowBox[{"(", 
                  
                  InterpretationBox[\(\[DifferentialD]\[Theta]\/\
\[DifferentialD]t\),
                    Dt[ \[Theta], t],
                    Editable->False], ")"}], "2"],
              DisplayForm]}], "-", 
          RowBox[{"r", " ", 
            TagBox[
              SuperscriptBox[
                RowBox[{"(", 
                  
                  InterpretationBox[\(\[DifferentialD]\[Phi]\/\[DifferentialD]\
t\),
                    Dt[ \[Phi], t],
                    Editable->False], ")"}], "2"],
              DisplayForm], " ", \(Sin[\[Theta]]\^2\)}]}], ",", 
        RowBox[{
          FractionBox[
            RowBox[{"2", " ", 
              InterpretationBox[\(\[DifferentialD]r\/\[DifferentialD]t\),
                Dt[ r, t],
                Editable->False], " ", 
              
              InterpretationBox[\(\[DifferentialD]\[Theta]\/\[DifferentialD]t\
\),
                Dt[ \[Theta], t],
                Editable->False]}], "r"], "+", 
          
          InterpretationBox[\(\[DifferentialD]\^2 \[Theta]\/\(\(\ \)\(\(\
\[VeryThinSpace]\)\(\[DifferentialD]\)\) \(t\)\)\^2\),
            Dt[ \[Theta], {t, 2}],
            Editable->False], "-", 
          RowBox[{\(Cos[\[Theta]]\), " ", 
            TagBox[
              SuperscriptBox[
                RowBox[{"(", 
                  
                  InterpretationBox[\(\[DifferentialD]\[Phi]\/\[DifferentialD]\
t\),
                    Dt[ \[Phi], t],
                    Editable->False], ")"}], "2"],
              DisplayForm], " ", \(Sin[\[Theta]]\)}]}], ",", 
        RowBox[{
          FractionBox[
            RowBox[{"2", " ", 
              InterpretationBox[\(\[DifferentialD]r\/\[DifferentialD]t\),
                Dt[ r, t],
                Editable->False], " ", 
              
              InterpretationBox[\(\[DifferentialD]\[Phi]\/\[DifferentialD]t\),
                
                Dt[ \[Phi], t],
                Editable->False]}], "r"], "+", 
          RowBox[{"2", " ", \(Cot[\[Theta]]\), " ", 
            
            InterpretationBox[\(\[DifferentialD]\[Theta]\/\[DifferentialD]t\),
              
              Dt[ \[Theta], t],
              Editable->False], " ", 
            InterpretationBox[\(\[DifferentialD]\[Phi]\/\[DifferentialD]t\),
              Dt[ \[Phi], t],
              Editable->False]}], "+", 
          
          InterpretationBox[\(\[DifferentialD]\^2 \[Phi]\/\(\(\ \)\(\(\
\[VeryThinSpace]\)\(\[DifferentialD]\)\) \(t\)\)\^2\),
            Dt[ \[Phi], {t, 2}],
            Editable->False]}]}], "}"}]], "Output"]
}, Open  ]],

Cell["\<\
Which is actually the result we can find in any vector calculus books.\
\>", "Text"]
}, Open  ]],

Cell[TextData[Cell[BoxData[GridBox[{
        {
          ButtonBox[
            StyleBox["\[FirstPage]",
              "SR"],
            ButtonFunction:>FrontEndExecute[ {
                FrontEndToken[ 
                  FrontEnd`SelectedNotebook[ ], "ScrollPageFirst"]}],
            ButtonStyle->"SlideHyperlink",
            ButtonNote->"First Slide"], 
          ButtonBox[
            StyleBox["\[LeftPointer]",
              "SR"],
            ButtonFunction:>FrontEndExecute[ {
                FrontEndToken[ 
                  FrontEnd`SelectedNotebook[ ], "ScrollPagePrevious"]}],
            ButtonStyle->"SlideHyperlink",
            ButtonNote->"Previous Slide"], 
          ButtonBox[
            StyleBox["\[RightPointer]",
              "SR"],
            ButtonFunction:>FrontEndExecute[ {
                FrontEndToken[ 
                  FrontEnd`SelectedNotebook[ ], "ScrollPageNext"]}],
            ButtonStyle->"SlideHyperlink",
            ButtonNote->"Next Slide"], 
          ButtonBox[
            StyleBox["\[LastPage]",
              "SR"],
            ButtonFunction:>FrontEndExecute[ {
                FrontEndToken[ 
                  FrontEnd`SelectedNotebook[ ], "ScrollPageLast"]}],
            ButtonStyle->"SlideHyperlink"], " ", 
          ButtonBox[
            StyleBox[
              RowBox[{
                CounterBox["SlideShowNavigationBar"], \(\(\ \)\(of\)\(\ \)\), 
                
                
                CounterBox["SlideShowNavigationBar", {None, 
                  "SlideShowHeader", -1}]}],
              "SR"],
            ButtonFrame->"None"]}
        }]]]], "SlideShowNavigationBar",
  CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell[TextData[{
  StyleBox["Tensorial",
    FontSlant->"Italic"],
  " 4.0 - Derivatives - Absolute Derivative (c)"
}], "Section"],

Cell[TextData[{
  " For the orbiting object we specified above, we can just use ",
  Cell[BoxData[
      \(ToArrayValues\)]],
  ", which expands and substitutes all rules. We obtain a general form \
because ",
  StyleBox["Mathematica",
    FontSlant->"Italic"],
  " does not know that \[Omega] and R are constant."
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[{
    \(AbsoluteD[vu[i], t]\), "\[IndentingNewLine]", 
    \(% // ExpandAbsoluteD[labs, {\[Mu], \[Nu]}]\), "\[IndentingNewLine]", 
    \(% // ToArrayValues[]\)}], "Input"],

Cell[BoxData[
    InterpretationBox[
      FractionBox[
        RowBox[{"D", 
          InterpretationBox[
            SubsuperscriptBox["v", 
              TagBox[
                StyleBox["i",
                  ShowContents->False],
                (StyleForm[ #, ShowContents -> False]&)], "i"],
            Tensor[ v, {i}, {Void}],
            Editable->False]}], \(d  t\)],
      AbsoluteD[ 
        Tensor[ v, {i}, {Void}], t],
      Editable->False]], "Output"],

Cell[BoxData[
    RowBox[{
      InterpretationBox[
        FractionBox[
          RowBox[{"\[DifferentialD]", 
            InterpretationBox[
              SubsuperscriptBox["v", 
                TagBox[
                  StyleBox["i",
                    ShowContents->False],
                  (StyleForm[ #, ShowContents -> False]&)], "i"],
              Tensor[ v, {i}, {Void}],
              Editable->False]}], \(\[DifferentialD]t\)],
        TotalD[ 
          Tensor[ v, {i}, {Void}], t]], "+", 
      RowBox[{
        InterpretationBox[
          SubsuperscriptBox["v", 
            TagBox[
              StyleBox["\[Mu]",
                ShowContents->False],
              (StyleForm[ #, ShowContents -> False]&)], "\[Mu]"],
          Tensor[ v, {\[Mu]}, {Void}],
          Editable->False], " ", 
        InterpretationBox[
          SubsuperscriptBox["\[CapitalGamma]", 
            RowBox[{
              TagBox[
                StyleBox["i",
                  ShowContents->False],
                (StyleForm[ #, ShowContents -> False]&)], "\[Mu]", "\[Nu]"}], 
            
            RowBox[{"i", 
              TagBox[
                StyleBox["\[Mu]",
                  ShowContents->False],
                (StyleForm[ #, ShowContents -> False]&)], 
              TagBox[
                StyleBox["\[Nu]",
                  ShowContents->False],
                (StyleForm[ #, ShowContents -> False]&)]}]],
          Tensor[ \[CapitalGamma], {i, Void, Void}, {Void, \[Mu], \[Nu]}],
          Editable->False], " ", 
        InterpretationBox[
          FractionBox[
            RowBox[{"\[DifferentialD]", 
              InterpretationBox[
                SubsuperscriptBox["x", 
                  TagBox[
                    StyleBox["\[Nu]",
                      ShowContents->False],
                    (StyleForm[ #, ShowContents -> False]&)], "\[Nu]"],
                Tensor[ x, {\[Nu]}, {Void}],
                Editable->False]}], \(\[DifferentialD]t\)],
          TotalD[ 
            Tensor[ x, {\[Nu]}, {Void}], t]]}]}]], "Output"],

Cell[BoxData[
    RowBox[{"{", 
      RowBox[{
        RowBox[{
          
          InterpretationBox[\(\[DifferentialD]\^2 
                  R\/\(\(\ \)\(\(\[VeryThinSpace]\)\(\[DifferentialD]\)\) \(t\
\)\)\^2\),
            Dt[ R, {t, 2}],
            Editable->False], "-", 
          RowBox[{"R", " ", 
            SuperscriptBox[
              RowBox[{"(", 
                RowBox[{"\[Omega]", "+", 
                  RowBox[{"t", " ", 
                    
                    InterpretationBox[\(\[DifferentialD]\[Omega]\/\
\[DifferentialD]t\),
                      Dt[ \[Omega], t],
                      Editable->False]}]}], ")"}], "2"]}]}], ",", "0", ",", 
        RowBox[{
          RowBox[{"2", " ", 
            
            InterpretationBox[\(\[DifferentialD]\[Omega]\/\[DifferentialD]t\),
              
              Dt[ \[Omega], t],
              Editable->False]}], "+", 
          FractionBox[
            RowBox[{"2", " ", 
              InterpretationBox[\(\[DifferentialD]R\/\[DifferentialD]t\),
                Dt[ R, t],
                Editable->False], " ", 
              RowBox[{"(", 
                RowBox[{"\[Omega]", "+", 
                  RowBox[{"t", " ", 
                    
                    InterpretationBox[\(\[DifferentialD]\[Omega]\/\
\[DifferentialD]t\),
                      Dt[ \[Omega], t],
                      Editable->False]}]}], ")"}]}], "R"], "+", 
          RowBox[{"t", " ", 
            
            InterpretationBox[\(\[DifferentialD]\^2 \[Omega]\/\(\(\ \)\(\(\
\[VeryThinSpace]\)\(\[DifferentialD]\)\) \(t\)\)\^2\),
              Dt[ \[Omega], {t, 2}],
              Editable->False]}]}]}], "}"}]], "Output"]
}, Open  ]],

Cell["\<\
If we wish \[Omega] and R to be regarded as constants...\
\>", "Text"],

Cell[CellGroupData[{

Cell[BoxData[{
    \(\(SetAttributes[{R, \[Omega]}, Constant];\)\), "\[IndentingNewLine]", 
    \(AbsoluteD[vu[m], t]\), "\[IndentingNewLine]", 
    \(% // ExpandAbsoluteD[labs, {\[Mu], \[Nu]}]\), "\[IndentingNewLine]", 
    \(% // ToArrayValues[]\), "\[IndentingNewLine]", 
    \(ClearAll[R, \[Omega]]\)}], "Input"],

Cell[BoxData[
    InterpretationBox[
      FractionBox[
        RowBox[{"D", 
          InterpretationBox[
            SubsuperscriptBox["v", 
              TagBox[
                StyleBox["m",
                  ShowContents->False],
                (StyleForm[ #, ShowContents -> False]&)], "m"],
            Tensor[ v, {m}, {Void}],
            Editable->False]}], \(d  t\)],
      AbsoluteD[ 
        Tensor[ v, {m}, {Void}], t],
      Editable->False]], "Output"],

Cell[BoxData[
    RowBox[{
      InterpretationBox[
        FractionBox[
          RowBox[{"\[DifferentialD]", 
            InterpretationBox[
              SubsuperscriptBox["v", 
                TagBox[
                  StyleBox["m",
                    ShowContents->False],
                  (StyleForm[ #, ShowContents -> False]&)], "m"],
              Tensor[ v, {m}, {Void}],
              Editable->False]}], \(\[DifferentialD]t\)],
        TotalD[ 
          Tensor[ v, {m}, {Void}], t]], "+", 
      RowBox[{
        InterpretationBox[
          SubsuperscriptBox["v", 
            TagBox[
              StyleBox["\[Mu]",
                ShowContents->False],
              (StyleForm[ #, ShowContents -> False]&)], "\[Mu]"],
          Tensor[ v, {\[Mu]}, {Void}],
          Editable->False], " ", 
        InterpretationBox[
          SubsuperscriptBox["\[CapitalGamma]", 
            RowBox[{
              TagBox[
                StyleBox["m",
                  ShowContents->False],
                (StyleForm[ #, ShowContents -> False]&)], "\[Mu]", "\[Nu]"}], 
            
            RowBox[{"m", 
              TagBox[
                StyleBox["\[Mu]",
                  ShowContents->False],
                (StyleForm[ #, ShowContents -> False]&)], 
              TagBox[
                StyleBox["\[Nu]",
                  ShowContents->False],
                (StyleForm[ #, ShowContents -> False]&)]}]],
          Tensor[ \[CapitalGamma], {m, Void, Void}, {Void, \[Mu], \[Nu]}],
          Editable->False], " ", 
        InterpretationBox[
          FractionBox[
            RowBox[{"\[DifferentialD]", 
              InterpretationBox[
                SubsuperscriptBox["x", 
                  TagBox[
                    StyleBox["\[Nu]",
                      ShowContents->False],
                    (StyleForm[ #, ShowContents -> False]&)], "\[Nu]"],
                Tensor[ x, {\[Nu]}, {Void}],
                Editable->False]}], \(\[DifferentialD]t\)],
          TotalD[ 
            Tensor[ x, {\[Nu]}, {Void}], t]]}]}]], "Output"],

Cell[BoxData[
    \({\(-R\)\ \[Omega]\^2, 0, 0}\)], "Output"]
}, Open  ]]
}, Open  ]],

Cell[TextData[Cell[BoxData[GridBox[{
        {
          ButtonBox[
            StyleBox["\[FirstPage]",
              "SR"],
            ButtonFunction:>FrontEndExecute[ {
                FrontEndToken[ 
                  FrontEnd`SelectedNotebook[ ], "ScrollPageFirst"]}],
            ButtonStyle->"SlideHyperlink",
            ButtonNote->"First Slide"], 
          ButtonBox[
            StyleBox["\[LeftPointer]",
              "SR"],
            ButtonFunction:>FrontEndExecute[ {
                FrontEndToken[ 
                  FrontEnd`SelectedNotebook[ ], "ScrollPagePrevious"]}],
            ButtonStyle->"SlideHyperlink",
            ButtonNote->"Previous Slide"], 
          ButtonBox[
            StyleBox["\[RightPointer]",
              "SR"],
            ButtonFunction:>FrontEndExecute[ {
                FrontEndToken[ 
                  FrontEnd`SelectedNotebook[ ], "ScrollPageNext"]}],
            ButtonStyle->"SlideHyperlink",
            ButtonNote->"Next Slide"], 
          ButtonBox[
            StyleBox["\[LastPage]",
              "SR"],
            ButtonFunction:>FrontEndExecute[ {
                FrontEndToken[ 
                  FrontEnd`SelectedNotebook[ ], "ScrollPageLast"]}],
            ButtonStyle->"SlideHyperlink"], " ", 
          ButtonBox[
            StyleBox[
              RowBox[{
                CounterBox["SlideShowNavigationBar"], \(\(\ \)\(of\)\(\ \)\), 
                
                
                CounterBox["SlideShowNavigationBar", {None, 
                  "SlideShowHeader", -1}]}],
              "SR"],
            ButtonFrame->"None"]}
        }]]]], "SlideShowNavigationBar",
  CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell[TextData[{
  StyleBox["Tensorial",
    FontSlant->"Italic"],
  " 4.0 - Derivatives - Lie Derivative"
}], "Section"],

Cell[CellGroupData[{

Cell[BoxData[{
    \(SetLieDisplay["\<LieMode\>"]\), "\n", 
    \(Fu[i] // ToFlavor[red]\), "\n", 
    \(LieD[%, V]\), "\n", 
    \(% // ExpandLieD[labs, red@\[Mu]]\)}], "Input"],

Cell[BoxData[
    InterpretationBox[
      SubsuperscriptBox["F", 
        TagBox[
          StyleBox[
            TagBox[
              StyleBox["i",
                FontColor->RGBColor[1, 0, 0]],
              (StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)],
            ShowContents->False],
          (StyleForm[ #, ShowContents -> False]&)], 
        TagBox[
          StyleBox["i",
            FontColor->RGBColor[1, 0, 0]],
          (StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)]],
      Tensor[ F, {
        red[ i]}, {Void}],
      Editable->False]], "Output"],

Cell[BoxData[
    InterpretationBox[
      TagBox[
        RowBox[{\(\[Sterling]\_V\), "\[VeryThinSpace]", 
          InterpretationBox[
            SubsuperscriptBox["F", 
              TagBox[
                StyleBox[
                  TagBox[
                    StyleBox["i",
                      FontColor->RGBColor[1, 0, 0]],
                    (StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)],
                  ShowContents->False],
                (StyleForm[ #, ShowContents -> False]&)], 
              TagBox[
                StyleBox["i",
                  FontColor->RGBColor[1, 0, 0]],
                (StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)]],
            Tensor[ F, {
              red[ i]}, {Void}],
            Editable->False]}],
        LieD,
        SyntaxForm->"Wedge"],
      LieD[ 
        Tensor[ F, {
          red[ i]}, {Void}], V],
      Editable->False]], "Output"],

Cell[BoxData[
    RowBox[{
      RowBox[{
        InterpretationBox[
          SubsuperscriptBox["V", 
            TagBox[
              StyleBox[
                TagBox[
                  StyleBox["\[Mu]",
                    FontColor->RGBColor[1, 0, 0]],
                  (StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)],
                ShowContents->False],
              (StyleForm[ #, ShowContents -> False]&)], 
            TagBox[
              StyleBox["\[Mu]",
                FontColor->RGBColor[1, 0, 0]],
              (StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)]],
          Tensor[ V, {
            red[ \[Mu]]}, {Void}],
          Editable->False], " ", 
        InterpretationBox[
          FractionBox[
            RowBox[{"\[PartialD]", 
              InterpretationBox[
                SubsuperscriptBox["F", 
                  TagBox[
                    StyleBox[
                      TagBox[
                        StyleBox["i",
                          FontColor->RGBColor[1, 0, 0]],
                        (StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)],
                      ShowContents->False],
                    (StyleForm[ #, ShowContents -> False]&)], 
                  TagBox[
                    StyleBox["i",
                      FontColor->RGBColor[1, 0, 0]],
                    (StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)]],
                Tensor[ F, {
                  red[ i]}, {Void}],
                Editable->False]}], 
            RowBox[{"\[PartialD]", 
              InterpretationBox[
                SubsuperscriptBox["x", 
                  TagBox[
                    StyleBox[
                      TagBox[
                        StyleBox["\[Mu]",
                          FontColor->RGBColor[1, 0, 0]],
                        (StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)],
                      ShowContents->False],
                    (StyleForm[ #, ShowContents -> False]&)], 
                  TagBox[
                    StyleBox["\[Mu]",
                      FontColor->RGBColor[1, 0, 0]],
                    (StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)]],
                Tensor[ x, {
                  red[ \[Mu]]}, {Void}],
                Editable->False]}]],
          PartialD[ {x, \[Delta], g, \[CapitalGamma]}][ 
            Tensor[ F, {
              red[ i]}, {Void}], 
            Tensor[ x, {
              red[ \[Mu]]}, {Void}]],
          Editable->False]}], "-", 
      RowBox[{
        InterpretationBox[
          SubsuperscriptBox["F", 
            TagBox[
              StyleBox[
                TagBox[
                  StyleBox["\[Mu]",
                    FontColor->RGBColor[1, 0, 0]],
                  (StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)],
                ShowContents->False],
              (StyleForm[ #, ShowContents -> False]&)], 
            TagBox[
              StyleBox["\[Mu]",
                FontColor->RGBColor[1, 0, 0]],
              (StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)]],
          Tensor[ F, {
            red[ \[Mu]]}, {Void}],
          Editable->False], " ", 
        InterpretationBox[
          FractionBox[
            RowBox[{"\[PartialD]", 
              InterpretationBox[
                SubsuperscriptBox["V", 
                  TagBox[
                    StyleBox[
                      TagBox[
                        StyleBox["i",
                          FontColor->RGBColor[1, 0, 0]],
                        (StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)],
                      ShowContents->False],
                    (StyleForm[ #, ShowContents -> False]&)], 
                  TagBox[
                    StyleBox["i",
                      FontColor->RGBColor[1, 0, 0]],
                    (StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)]],
                Tensor[ V, {
                  red[ i]}, {Void}],
                Editable->False]}], 
            RowBox[{"\[PartialD]", 
              InterpretationBox[
                SubsuperscriptBox["x", 
                  TagBox[
                    StyleBox[
                      TagBox[
                        StyleBox["\[Mu]",
                          FontColor->RGBColor[1, 0, 0]],
                        (StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)],
                      ShowContents->False],
                    (StyleForm[ #, ShowContents -> False]&)], 
                  TagBox[
                    StyleBox["\[Mu]",
                      FontColor->RGBColor[1, 0, 0]],
                    (StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)]],
                Tensor[ x, {
                  red[ \[Mu]]}, {Void}],
                Editable->False]}]],
          PartialD[ {x, \[Delta], g, \[CapitalGamma]}][ 
            Tensor[ V, {
              red[ i]}, {Void}], 
            Tensor[ x, {
              red[ \[Mu]]}, {Void}]],
          Editable->False]}]}]], "Output"]
}, Open  ]],

Cell["\<\
Lie derivative of a product of a scalar tensor and a 2nd order tensor with \
respect to two different vector fields.\
\>", "Text"],

Cell[CellGroupData[{

Cell[BoxData[{
    \(Tensor[\[Phi]] Tud[i, j] // ToFlavor[red]\), "\[IndentingNewLine]", 
    \(LieD[%, {V, W}]\), "\[IndentingNewLine]", 
    \(% // ExpandLieD[labs, red /@ {\[Mu], \[Nu]}]\)}], "Input"],

Cell[BoxData[
    RowBox[{
      InterpretationBox["\[Phi]",
        Tensor[ \[Phi]],
        Editable->False], " ", 
      InterpretationBox[
        SubsuperscriptBox["T", 
          RowBox[{
            TagBox[
              StyleBox[
                TagBox[
                  StyleBox["i",
                    FontColor->RGBColor[1, 0, 0]],
                  (StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)],
                ShowContents->False],
              (StyleForm[ #, ShowContents -> False]&)], 
            TagBox[
              StyleBox["j",
                FontColor->RGBColor[1, 0, 0]],
              (StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)]}], 
          RowBox[{
            TagBox[
              StyleBox["i",
                FontColor->RGBColor[1, 0, 0]],
              (StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)], 
            TagBox[
              StyleBox[
                TagBox[
                  StyleBox["j",
                    FontColor->RGBColor[1, 0, 0]],
                  (StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)],
                ShowContents->False],
              (StyleForm[ #, ShowContents -> False]&)]}]],
        Tensor[ T, {
          red[ i], Void}, {Void, 
          red[ j]}],
        Editable->False]}]], "Output"],

Cell[BoxData[
    RowBox[{
      RowBox[{
        InterpretationBox[
          TagBox[
            RowBox[{\(\[Sterling]\_W\), "\[VeryThinSpace]", 
              InterpretationBox["\[Phi]",
                Tensor[ \[Phi]],
                Editable->False]}],
            LieD,
            SyntaxForm->"Wedge"],
          LieD[ 
            Tensor[ \[Phi]], W],
          Editable->False], " ", 
        InterpretationBox[
          TagBox[
            RowBox[{\(\[Sterling]\_V\), "\[VeryThinSpace]", 
              InterpretationBox[
                SubsuperscriptBox["T", 
                  RowBox[{
                    TagBox[
                      StyleBox[
                        TagBox[
                          StyleBox["i",
                            FontColor->RGBColor[1, 0, 0]],
                          (StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)],
                        ShowContents->False],
                      (StyleForm[ #, ShowContents -> False]&)], 
                    TagBox[
                      StyleBox["j",
                        FontColor->RGBColor[1, 0, 0]],
                      (StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)]}], 
                  RowBox[{
                    TagBox[
                      StyleBox["i",
                        FontColor->RGBColor[1, 0, 0]],
                      (StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)], 
                    TagBox[
                      StyleBox[
                        TagBox[
                          StyleBox["j",
                            FontColor->RGBColor[1, 0, 0]],
                          (StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)],
                        ShowContents->False],
                      (StyleForm[ #, ShowContents -> False]&)]}]],
                Tensor[ T, {
                  red[ i], Void}, {Void, 
                  red[ j]}],
                Editable->False]}],
            LieD,
            SyntaxForm->"Wedge"],
          LieD[ 
            Tensor[ T, {
              red[ i], Void}, {Void, 
              red[ j]}], V],
          Editable->False]}], "+", 
      RowBox[{
        InterpretationBox[
          TagBox[
            RowBox[{\(\[Sterling]\_V\), "\[VeryThinSpace]", 
              InterpretationBox["\[Phi]",
                Tensor[ \[Phi]],
                Editable->False]}],
            LieD,
            SyntaxForm->"Wedge"],
          LieD[ 
            Tensor[ \[Phi]], V],
          Editable->False], " ", 
        InterpretationBox[
          TagBox[
            RowBox[{\(\[Sterling]\_W\), "\[VeryThinSpace]", 
              InterpretationBox[
                SubsuperscriptBox["T", 
                  RowBox[{
                    TagBox[
                      StyleBox[
                        TagBox[
                          StyleBox["i",
                            FontColor->RGBColor[1, 0, 0]],
                          (StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)],
                        ShowContents->False],
                      (StyleForm[ #, ShowContents -> False]&)], 
                    TagBox[
                      StyleBox["j",
                        FontColor->RGBColor[1, 0, 0]],
                      (StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)]}], 
                  RowBox[{
                    TagBox[
                      StyleBox["i",
                        FontColor->RGBColor[1, 0, 0]],
                      (StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)], 
                    TagBox[
                      StyleBox[
                        TagBox[
                          StyleBox["j",
                            FontColor->RGBColor[1, 0, 0]],
                          (StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)],
                        ShowContents->False],
                      (StyleForm[ #, ShowContents -> False]&)]}]],
                Tensor[ T, {
                  red[ i], Void}, {Void, 
                  red[ j]}],
                Editable->False]}],
            LieD,
            SyntaxForm->"Wedge"],
          LieD[ 
            Tensor[ T, {
              red[ i], Void}, {Void, 
              red[ j]}], W],
          Editable->False]}], "+", 
      RowBox[{
        InterpretationBox[
          TagBox[
            RowBox[{\(\[Sterling]\_\(V  W\)\), "\[VeryThinSpace]", 
              InterpretationBox[
                SubsuperscriptBox["T", 
                  RowBox[{
                    TagBox[
                      StyleBox[
                        TagBox[
                          StyleBox["i",
                            FontColor->RGBColor[1, 0, 0]],
                          (StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)],
                        ShowContents->False],
                      (StyleForm[ #, ShowContents -> False]&)], 
                    TagBox[
                      StyleBox["j",
                        FontColor->RGBColor[1, 0, 0]],
                      (StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)]}], 
                  RowBox[{
                    TagBox[
                      StyleBox["i",
                        FontColor->RGBColor[1, 0, 0]],
                      (StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)], 
                    TagBox[
                      StyleBox[
                        TagBox[
                          StyleBox["j",
                            FontColor->RGBColor[1, 0, 0]],
                          (StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)],
                        ShowContents->False],
                      (StyleForm[ #, ShowContents -> False]&)]}]],
                Tensor[ T, {
                  red[ i], Void}, {Void, 
                  red[ j]}],
                Editable->False]}],
            LieD,
            SyntaxForm->"Wedge"],
          LieD[ 
            Tensor[ T, {
              red[ i], Void}, {Void, 
              red[ j]}], {V, W}],
          Editable->False], " ", 
        InterpretationBox["\[Phi]",
          Tensor[ \[Phi]],
          Editable->False]}], "+", 
      RowBox[{
        InterpretationBox[
          TagBox[
            RowBox[{\(\[Sterling]\_\(V  W\)\), "\[VeryThinSpace]", 
              InterpretationBox["\[Phi]",
                Tensor[ \[Phi]],
                Editable->False]}],
            LieD,
            SyntaxForm->"Wedge"],
          LieD[ 
            Tensor[ \[Phi]], {V, W}],
          Editable->False], " ", 
        InterpretationBox[
          SubsuperscriptBox["T", 
            RowBox[{
              TagBox[
                StyleBox[
                  TagBox[
                    StyleBox["i",
                      FontColor->RGBColor[1, 0, 0]],
                    (StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)],
                  ShowContents->False],
                (StyleForm[ #, ShowContents -> False]&)], 
              TagBox[
                StyleBox["j",
                  FontColor->RGBColor[1, 0, 0]],
                (StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)]}], 
            RowBox[{
              TagBox[
                StyleBox["i",
                  FontColor->RGBColor[1, 0, 0]],
                (StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)], 
              TagBox[
                StyleBox[
                  TagBox[
                    StyleBox["j",
                      FontColor->RGBColor[1, 0, 0]],
                    (StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)],
                  ShowContents->False],
                (StyleForm[ #, ShowContents -> False]&)]}]],
          Tensor[ T, {
            red[ i], Void}, {Void, 
            red[ j]}],
          Editable->False]}]}]], "Output"],

Cell[BoxData[
    RowBox[{
      RowBox[{
        InterpretationBox[
          SubsuperscriptBox["T", 
            RowBox[{
              TagBox[
                StyleBox[
                  TagBox[
                    StyleBox["i",
                      FontColor->RGBColor[1, 0, 0]],
                    (StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)],
                  ShowContents->False],
                (StyleForm[ #, ShowContents -> False]&)], 
              TagBox[
                StyleBox["j",
                  FontColor->RGBColor[1, 0, 0]],
                (StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)]}], 
            RowBox[{
              TagBox[
                StyleBox["i",
                  FontColor->RGBColor[1, 0, 0]],
                (StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)], 
              TagBox[
                StyleBox[
                  TagBox[
                    StyleBox["j",
                      FontColor->RGBColor[1, 0, 0]],
                    (StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)],
                  ShowContents->False],
                (StyleForm[ #, ShowContents -> False]&)]}]],
          Tensor[ T, {
            red[ i], Void}, {Void, 
            red[ j]}],
          Editable->False], " ", 
        InterpretationBox[
          SubsuperscriptBox["W", 
            TagBox[
              StyleBox[
                TagBox[
                  StyleBox["\[Nu]",
                    FontColor->RGBColor[1, 0, 0]],
                  (StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)],
                ShowContents->False],
              (StyleForm[ #, ShowContents -> False]&)], 
            TagBox[
              StyleBox["\[Nu]",
                FontColor->RGBColor[1, 0, 0]],
              (StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)]],
          Tensor[ W, {
            red[ \[Nu]]}, {Void}],
          Editable->False], " ", 
        RowBox[{"(", 
          RowBox[{
            RowBox[{
              InterpretationBox[
                SubsuperscriptBox["V", 
                  TagBox[
                    StyleBox[
                      TagBox[
                        StyleBox["\[Mu]",
                          FontColor->RGBColor[1, 0, 0]],
                        (StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)],
                      ShowContents->False],
                    (StyleForm[ #, ShowContents -> False]&)], 
                  TagBox[
                    StyleBox["\[Mu]",
                      FontColor->RGBColor[1, 0, 0]],
                    (StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)]],
                Tensor[ V, {
                  red[ \[Mu]]}, {Void}],
                Editable->False], " ", 
              InterpretationBox[
                FractionBox[
                  RowBox[{\(\[PartialD]\^2\), 
                    InterpretationBox["\[Phi]",
                      Tensor[ \[Phi]],
                      Editable->False]}], 
                  RowBox[{"\[PartialD]", 
                    InterpretationBox[
                      SubsuperscriptBox["x", 
                        TagBox[
                          StyleBox[
                            TagBox[
                              StyleBox["\[Nu]",
                                FontColor->RGBColor[1, 0, 0]],
                              (
                              StyleForm[ #, FontColor -> RGBColor[ 
                                1, 0, 0]]&)],
                            ShowContents->False],
                          (StyleForm[ #, ShowContents -> False]&)], 
                        TagBox[
                          StyleBox["\[Nu]",
                            FontColor->RGBColor[1, 0, 0]],
                          (StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)]],
                      
                      Tensor[ x, {
                        red[ \[Nu]]}, {Void}],
                      Editable->False], "\[PartialD]", 
                    InterpretationBox[
                      SubsuperscriptBox["x", 
                        TagBox[
                          StyleBox[
                            TagBox[
                              StyleBox["\[Mu]",
                                FontColor->RGBColor[1, 0, 0]],
                              (
                              StyleForm[ #, FontColor -> RGBColor[ 
                                1, 0, 0]]&)],
                            ShowContents->False],
                          (StyleForm[ #, ShowContents -> False]&)], 
                        TagBox[
                          StyleBox["\[Mu]",
                            FontColor->RGBColor[1, 0, 0]],
                          (StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)]],
                      
                      Tensor[ x, {
                        red[ \[Mu]]}, {Void}],
                      Editable->False]}]],
                PartialD[ {x, \[Delta], g, \[CapitalGamma]}][ 
                  Tensor[ \[Phi]], {
                  Tensor[ x, {
                    red[ \[Nu]]}, {Void}], 
                  Tensor[ x, {
                    red[ \[Mu]]}, {Void}]}],
                Editable->False]}], "+", 
            RowBox[{
              InterpretationBox[
                FractionBox[
                  RowBox[{"\[PartialD]", 
                    InterpretationBox["\[Phi]",
                      Tensor[ \[Phi]],
                      Editable->False]}], 
                  RowBox[{"\[PartialD]", 
                    InterpretationBox[
                      SubsuperscriptBox["x", 
                        TagBox[
                          StyleBox[
                            TagBox[
                              StyleBox["\[Mu]",
                                FontColor->RGBColor[1, 0, 0]],
                              (
                              StyleForm[ #, FontColor -> RGBColor[ 
                                1, 0, 0]]&)],
                            ShowContents->False],
                          (StyleForm[ #, ShowContents -> False]&)], 
                        TagBox[
                          StyleBox["\[Mu]",
                            FontColor->RGBColor[1, 0, 0]],
                          (StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)]],
                      
                      Tensor[ x, {
                        red[ \[Mu]]}, {Void}],
                      Editable->False]}]],
                PartialD[ {x, \[Delta], g, \[CapitalGamma]}][ 
                  Tensor[ \[Phi]], 
                  Tensor[ x, {
                    red[ \[Mu]]}, {Void}]],
                Editable->False], " ", 
              InterpretationBox[
                FractionBox[
                  RowBox[{"\[PartialD]", 
                    InterpretationBox[
                      SubsuperscriptBox["V", 
                        TagBox[
                          StyleBox[
                            TagBox[
                              StyleBox["\[Mu]",
                                FontColor->RGBColor[1, 0, 0]],
                              (
                              StyleForm[ #, FontColor -> RGBColor[ 
                                1, 0, 0]]&)],
                            ShowContents->False],
                          (StyleForm[ #, ShowContents -> False]&)], 
                        TagBox[
                          StyleBox["\[Mu]",
                            FontColor->RGBColor[1, 0, 0]],
                          (StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)]],
                      
                      Tensor[ V, {
                        red[ \[Mu]]}, {Void}],
                      Editable->False]}], 
                  RowBox[{"\[PartialD]", 
                    InterpretationBox[
                      SubsuperscriptBox["x", 
                        TagBox[
                          StyleBox[
                            TagBox[
                              StyleBox["\[Nu]",
                                FontColor->RGBColor[1, 0, 0]],
                              (
                              StyleForm[ #, FontColor -> RGBColor[ 
                                1, 0, 0]]&)],
                            ShowContents->False],
                          (StyleForm[ #, ShowContents -> False]&)], 
                        TagBox[
                          StyleBox["\[Nu]",
                            FontColor->RGBColor[1, 0, 0]],
                          (StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)]],
                      
                      Tensor[ x, {
                        red[ \[Nu]]}, {Void}],
                      Editable->False]}]],
                PartialD[ {x, \[Delta], g, \[CapitalGamma]}][ 
                  Tensor[ V, {
                    red[ \[Mu]]}, {Void}], 
                  Tensor[ x, {
                    red[ \[Nu]]}, {Void}]],
                Editable->False]}]}], ")"}]}], "+", 
      RowBox[{
        InterpretationBox[
          SubsuperscriptBox["W", 
            TagBox[
              StyleBox[
                TagBox[
                  StyleBox["\[Mu]",
                    FontColor->RGBColor[1, 0, 0]],
                  (StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)],
                ShowContents->False],
              (StyleForm[ #, ShowContents -> False]&)], 
            TagBox[
              StyleBox["\[Mu]",
                FontColor->RGBColor[1, 0, 0]],
              (StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)]],
          Tensor[ W, {
            red[ \[Mu]]}, {Void}],
          Editable->False], " ", 
        InterpretationBox[
          FractionBox[
            RowBox[{"\[PartialD]", 
              InterpretationBox["\[Phi]",
                Tensor[ \[Phi]],
                Editable->False]}], 
            RowBox[{"\[PartialD]", 
              InterpretationBox[
                SubsuperscriptBox["x", 
                  TagBox[
                    StyleBox[
                      TagBox[
                        StyleBox["\[Mu]",
                          FontColor->RGBColor[1, 0, 0]],
                        (StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)],
                      ShowContents->False],
                    (StyleForm[ #, ShowContents -> False]&)], 
                  TagBox[
                    StyleBox["\[Mu]",
                      FontColor->RGBColor[1, 0, 0]],
                    (StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)]],
                Tensor[ x, {
                  red[ \[Mu]]}, {Void}],
                Editable->False]}]],
          PartialD[ {x, \[Delta], g, \[CapitalGamma]}][ 
            Tensor[ \[Phi]], 
            Tensor[ x, {
              red[ \[Mu]]}, {Void}]],
          Editable->False], " ", 
        RowBox[{"(", 
          RowBox[{
            RowBox[{
              InterpretationBox[
                SubsuperscriptBox["V", 
                  TagBox[
                    StyleBox[
                      TagBox[
                        StyleBox["\[Nu]",
                          FontColor->RGBColor[1, 0, 0]],
                        (StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)],
                      ShowContents->False],
                    (StyleForm[ #, ShowContents -> False]&)], 
                  TagBox[
                    StyleBox["\[Nu]",
                      FontColor->RGBColor[1, 0, 0]],
                    (StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)]],
                Tensor[ V, {
                  red[ \[Nu]]}, {Void}],
                Editable->False], " ", 
              InterpretationBox[
                FractionBox[
                  RowBox[{"\[PartialD]", 
                    InterpretationBox[
                      SubsuperscriptBox["T", 
                        RowBox[{
                          TagBox[
                            StyleBox[
                              TagBox[
                                StyleBox["i",
                                  FontColor->RGBColor[1, 0, 0]],
                                (
                                StyleForm[ #, FontColor -> RGBColor[ 
                                  1, 0, 0]]&)],
                              ShowContents->False],
                            (StyleForm[ #, ShowContents -> False]&)], 
                          TagBox[
                            StyleBox["j",
                              FontColor->RGBColor[1, 0, 0]],
                            (
                            StyleForm[ #, FontColor -> RGBColor[ 
                              1, 0, 0]]&)]}], 
                        RowBox[{
                          TagBox[
                            StyleBox["i",
                              FontColor->RGBColor[1, 0, 0]],
                            (
                            StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)],
                           
                          TagBox[
                            StyleBox[
                              TagBox[
                                StyleBox["j",
                                  FontColor->RGBColor[1, 0, 0]],
                                (
                                StyleForm[ #, FontColor -> RGBColor[ 
                                  1, 0, 0]]&)],
                              ShowContents->False],
                            (StyleForm[ #, ShowContents -> False]&)]}]],
                      Tensor[ T, {
                        red[ i], Void}, {Void, 
                        red[ j]}],
                      Editable->False]}], 
                  RowBox[{"\[PartialD]", 
                    InterpretationBox[
                      SubsuperscriptBox["x", 
                        TagBox[
                          StyleBox[
                            TagBox[
                              StyleBox["\[Nu]",
                                FontColor->RGBColor[1, 0, 0]],
                              (
                              StyleForm[ #, FontColor -> RGBColor[ 
                                1, 0, 0]]&)],
                            ShowContents->False],
                          (StyleForm[ #, ShowContents -> False]&)], 
                        TagBox[
                          StyleBox["\[Nu]",
                            FontColor->RGBColor[1, 0, 0]],
                          (StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)]],
                      
                      Tensor[ x, {
                        red[ \[Nu]]}, {Void}],
                      Editable->False]}]],
                PartialD[ {x, \[Delta], g, \[CapitalGamma]}][ 
                  Tensor[ T, {
                    red[ i], Void}, {Void, 
                    red[ j]}], 
                  Tensor[ x, {
                    red[ \[Nu]]}, {Void}]],
                Editable->False]}], "-", 
            RowBox[{
              InterpretationBox[
                SubsuperscriptBox["T", 
                  RowBox[{
                    TagBox[
                      StyleBox[
                        TagBox[
                          StyleBox["\[Nu]",
                            FontColor->RGBColor[1, 0, 0]],
                          (StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)],
                        ShowContents->False],
                      (StyleForm[ #, ShowContents -> False]&)], 
                    TagBox[
                      StyleBox["j",
                        FontColor->RGBColor[1, 0, 0]],
                      (StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)]}], 
                  RowBox[{
                    TagBox[
                      StyleBox["\[Nu]",
                        FontColor->RGBColor[1, 0, 0]],
                      (StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)], 
                    TagBox[
                      StyleBox[
                        TagBox[
                          StyleBox["j",
                            FontColor->RGBColor[1, 0, 0]],
                          (StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)],
                        ShowContents->False],
                      (StyleForm[ #, ShowContents -> False]&)]}]],
                Tensor[ T, {
                  red[ \[Nu]], Void}, {Void, 
                  red[ j]}],
                Editable->False], " ", 
              InterpretationBox[
                FractionBox[
                  RowBox[{"\[PartialD]", 
                    InterpretationBox[
                      SubsuperscriptBox["V", 
                        TagBox[
                          StyleBox[
                            TagBox[
                              StyleBox["i",
                                FontColor->RGBColor[1, 0, 0]],
                              (
                              StyleForm[ #, FontColor -> RGBColor[ 
                                1, 0, 0]]&)],
                            ShowContents->False],
                          (StyleForm[ #, ShowContents -> False]&)], 
                        TagBox[
                          StyleBox["i",
                            FontColor->RGBColor[1, 0, 0]],
                          (StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)]],
                      
                      Tensor[ V, {
                        red[ i]}, {Void}],
                      Editable->False]}], 
                  RowBox[{"\[PartialD]", 
                    InterpretationBox[
                      SubsuperscriptBox["x", 
                        TagBox[
                          StyleBox[
                            TagBox[
                              StyleBox["\[Nu]",
                                FontColor->RGBColor[1, 0, 0]],
                              (
                              StyleForm[ #, FontColor -> RGBColor[ 
                                1, 0, 0]]&)],
                            ShowContents->False],
                          (StyleForm[ #, ShowContents -> False]&)], 
                        TagBox[
                          StyleBox["\[Nu]",
                            FontColor->RGBColor[1, 0, 0]],
                          (StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)]],
                      
                      Tensor[ x, {
                        red[ \[Nu]]}, {Void}],
                      Editable->False]}]],
                PartialD[ {x, \[Delta], g, \[CapitalGamma]}][ 
                  Tensor[ V, {
                    red[ i]}, {Void}], 
                  Tensor[ x, {
                    red[ \[Nu]]}, {Void}]],
                Editable->False]}], "+", 
            RowBox[{
              InterpretationBox[
                SubsuperscriptBox["T", 
                  RowBox[{
                    TagBox[
                      StyleBox[
                        TagBox[
                          StyleBox["i",
                            FontColor->RGBColor[1, 0, 0]],
                          (StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)],
                        ShowContents->False],
                      (StyleForm[ #, ShowContents -> False]&)], 
                    TagBox[
                      StyleBox["\[Nu]",
                        FontColor->RGBColor[1, 0, 0]],
                      (StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)]}], 
                  RowBox[{
                    TagBox[
                      StyleBox["i",
                        FontColor->RGBColor[1, 0, 0]],
                      (StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)], 
                    TagBox[
                      StyleBox[
                        TagBox[
                          StyleBox["\[Nu]",
                            FontColor->RGBColor[1, 0, 0]],
                          (StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)],
                        ShowContents->False],
                      (StyleForm[ #, ShowContents -> False]&)]}]],
                Tensor[ T, {
                  red[ i], Void}, {Void, 
                  red[ \[Nu]]}],
                Editable->False], " ", 
              InterpretationBox[
                FractionBox[
                  RowBox[{"\[PartialD]", 
                    InterpretationBox[
                      SubsuperscriptBox["V", 
                        TagBox[
                          StyleBox[
                            TagBox[
                              StyleBox["\[Nu]",
                                FontColor->RGBColor[1, 0, 0]],
                              (
                              StyleForm[ #, FontColor -> RGBColor[ 
                                1, 0, 0]]&)],
                            ShowContents->False],
                          (StyleForm[ #, ShowContents -> False]&)], 
                        TagBox[
                          StyleBox["\[Nu]",
                            FontColor->RGBColor[1, 0, 0]],
                          (StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)]],
                      
                      Tensor[ V, {
                        red[ \[Nu]]}, {Void}],
                      Editable->False]}], 
                  RowBox[{"\[PartialD]", 
                    InterpretationBox[
                      SubsuperscriptBox["x", 
                        TagBox[
                          StyleBox[
                            TagBox[
                              StyleBox["j",
                                FontColor->RGBColor[1, 0, 0]],
                              (
                              StyleForm[ #, FontColor -> RGBColor[ 
                                1, 0, 0]]&)],
                            ShowContents->False],
                          (StyleForm[ #, ShowContents -> False]&)], 
                        TagBox[
                          StyleBox["j",
                            FontColor->RGBColor[1, 0, 0]],
                          (StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)]],
                      
                      Tensor[ x, {
                        red[ j]}, {Void}],
                      Editable->False]}]],
                PartialD[ {x, \[Delta], g, \[CapitalGamma]}][ 
                  Tensor[ V, {
                    red[ \[Nu]]}, {Void}], 
                  Tensor[ x, {
                    red[ j]}, {Void}]],
                Editable->False]}]}], ")"}]}], "+", 
      RowBox[{
        InterpretationBox[
          SubsuperscriptBox["V", 
            TagBox[
              StyleBox[
                TagBox[
                  StyleBox["\[Mu]",
                    FontColor->RGBColor[1, 0, 0]],
                  (StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)],
                ShowContents->False],
              (StyleForm[ #, ShowContents -> False]&)], 
            TagBox[
              StyleBox["\[Mu]",
                FontColor->RGBColor[1, 0, 0]],
              (StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)]],
          Tensor[ V, {
            red[ \[Mu]]}, {Void}],
          Editable->False], " ", 
        InterpretationBox[
          FractionBox[
            RowBox[{"\[PartialD]", 
              InterpretationBox["\[Phi]",
                Tensor[ \[Phi]],
                Editable->False]}], 
            RowBox[{"\[PartialD]", 
              InterpretationBox[
                SubsuperscriptBox["x", 
                  TagBox[
                    StyleBox[
                      TagBox[
                        StyleBox["\[Mu]",
                          FontColor->RGBColor[1, 0, 0]],
                        (StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)],
                      ShowContents->False],
                    (StyleForm[ #, ShowContents -> False]&)], 
                  TagBox[
                    StyleBox["\[Mu]",
                      FontColor->RGBColor[1, 0, 0]],
                    (StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)]],
                Tensor[ x, {
                  red[ \[Mu]]}, {Void}],
                Editable->False]}]],
          PartialD[ {x, \[Delta], g, \[CapitalGamma]}][ 
            Tensor[ \[Phi]], 
            Tensor[ x, {
              red[ \[Mu]]}, {Void}]],
          Editable->False], " ", 
        RowBox[{"(", 
          RowBox[{
            RowBox[{
              InterpretationBox[
                SubsuperscriptBox["W", 
                  TagBox[
                    StyleBox[
                      TagBox[
                        StyleBox["\[Nu]",
                          FontColor->RGBColor[1, 0, 0]],
                        (StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)],
                      ShowContents->False],
                    (StyleForm[ #, ShowContents -> False]&)], 
                  TagBox[
                    StyleBox["\[Nu]",
                      FontColor->RGBColor[1, 0, 0]],
                    (StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)]],
                Tensor[ W, {
                  red[ \[Nu]]}, {Void}],
                Editable->False], " ", 
              InterpretationBox[
                FractionBox[
                  RowBox[{"\[PartialD]", 
                    InterpretationBox[
                      SubsuperscriptBox["T", 
                        RowBox[{
                          TagBox[
                            StyleBox[
                              TagBox[
                                StyleBox["i",
                                  FontColor->RGBColor[1, 0, 0]],
                                (
                                StyleForm[ #, FontColor -> RGBColor[ 
                                  1, 0, 0]]&)],
                              ShowContents->False],
                            (StyleForm[ #, ShowContents -> False]&)], 
                          TagBox[
                            StyleBox["j",
                              FontColor->RGBColor[1, 0, 0]],
                            (
                            StyleForm[ #, FontColor -> RGBColor[ 
                              1, 0, 0]]&)]}], 
                        RowBox[{
                          TagBox[
                            StyleBox["i",
                              FontColor->RGBColor[1, 0, 0]],
                            (
                            StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)],
                           
                          TagBox[
                            StyleBox[
                              TagBox[
                                StyleBox["j",
                                  FontColor->RGBColor[1, 0, 0]],
                                (
                                StyleForm[ #, FontColor -> RGBColor[ 
                                  1, 0, 0]]&)],
                              ShowContents->False],
                            (StyleForm[ #, ShowContents -> False]&)]}]],
                      Tensor[ T, {
                        red[ i], Void}, {Void, 
                        red[ j]}],
                      Editable->False]}], 
                  RowBox[{"\[PartialD]", 
                    InterpretationBox[
                      SubsuperscriptBox["x", 
                        TagBox[
                          StyleBox[
                            TagBox[
                              StyleBox["\[Nu]",
                                FontColor->RGBColor[1, 0, 0]],
                              (
                              StyleForm[ #, FontColor -> RGBColor[ 
                                1, 0, 0]]&)],
                            ShowContents->False],
                          (StyleForm[ #, ShowContents -> False]&)], 
                        TagBox[
                          StyleBox["\[Nu]",
                            FontColor->RGBColor[1, 0, 0]],
                          (StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)]],
                      
                      Tensor[ x, {
                        red[ \[Nu]]}, {Void}],
                      Editable->False]}]],
                PartialD[ {x, \[Delta], g, \[CapitalGamma]}][ 
                  Tensor[ T, {
                    red[ i], Void}, {Void, 
                    red[ j]}], 
                  Tensor[ x, {
                    red[ \[Nu]]}, {Void}]],
                Editable->False]}], "-", 
            RowBox[{
              InterpretationBox[
                SubsuperscriptBox["T", 
                  RowBox[{
                    TagBox[
                      StyleBox[
                        TagBox[
                          StyleBox["\[Nu]",
                            FontColor->RGBColor[1, 0, 0]],
                          (StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)],
                        ShowContents->False],
                      (StyleForm[ #, ShowContents -> False]&)], 
                    TagBox[
                      StyleBox["j",
                        FontColor->RGBColor[1, 0, 0]],
                      (StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)]}], 
                  RowBox[{
                    TagBox[
                      StyleBox["\[Nu]",
                        FontColor->RGBColor[1, 0, 0]],
                      (StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)], 
                    TagBox[
                      StyleBox[
                        TagBox[
                          StyleBox["j",
                            FontColor->RGBColor[1, 0, 0]],
                          (StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)],
                        ShowContents->False],
                      (StyleForm[ #, ShowContents -> False]&)]}]],
                Tensor[ T, {
                  red[ \[Nu]], Void}, {Void, 
                  red[ j]}],
                Editable->False], " ", 
              InterpretationBox[
                FractionBox[
                  RowBox[{"\[PartialD]", 
                    InterpretationBox[
                      SubsuperscriptBox["W", 
                        TagBox[
                          StyleBox[
                            TagBox[
                              StyleBox["i",
                                FontColor->RGBColor[1, 0, 0]],
                              (
                              StyleForm[ #, FontColor -> RGBColor[ 
                                1, 0, 0]]&)],
                            ShowContents->False],
                          (StyleForm[ #, ShowContents -> False]&)], 
                        TagBox[
                          StyleBox["i",
                            FontColor->RGBColor[1, 0, 0]],
                          (StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)]],
                      
                      Tensor[ W, {
                        red[ i]}, {Void}],
                      Editable->False]}], 
                  RowBox[{"\[PartialD]", 
                    InterpretationBox[
                      SubsuperscriptBox["x", 
                        TagBox[
                          StyleBox[
                            TagBox[
                              StyleBox["\[Nu]",
                                FontColor->RGBColor[1, 0, 0]],
                              (
                              StyleForm[ #, FontColor -> RGBColor[ 
                                1, 0, 0]]&)],
                            ShowContents->False],
                          (StyleForm[ #, ShowContents -> False]&)], 
                        TagBox[
                          StyleBox["\[Nu]",
                            FontColor->RGBColor[1, 0, 0]],
                          (StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)]],
                      
                      Tensor[ x, {
                        red[ \[Nu]]}, {Void}],
                      Editable->False]}]],
                PartialD[ {x, \[Delta], g, \[CapitalGamma]}][ 
                  Tensor[ W, {
                    red[ i]}, {Void}], 
                  Tensor[ x, {
                    red[ \[Nu]]}, {Void}]],
                Editable->False]}], "+", 
            RowBox[{
              InterpretationBox[
                SubsuperscriptBox["T", 
                  RowBox[{
                    TagBox[
                      StyleBox[
                        TagBox[
                          StyleBox["i",
                            FontColor->RGBColor[1, 0, 0]],
                          (StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)],
                        ShowContents->False],
                      (StyleForm[ #, ShowContents -> False]&)], 
                    TagBox[
                      StyleBox["\[Nu]",
                        FontColor->RGBColor[1, 0, 0]],
                      (StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)]}], 
                  RowBox[{
                    TagBox[
                      StyleBox["i",
                        FontColor->RGBColor[1, 0, 0]],
                      (StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)], 
                    TagBox[
                      StyleBox[
                        TagBox[
                          StyleBox["\[Nu]",
                            FontColor->RGBColor[1, 0, 0]],
                          (StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)],
                        ShowContents->False],
                      (StyleForm[ #, ShowContents -> False]&)]}]],
                Tensor[ T, {
                  red[ i], Void}, {Void, 
                  red[ \[Nu]]}],
                Editable->False], " ", 
              InterpretationBox[
                FractionBox[
                  RowBox[{"\[PartialD]", 
                    InterpretationBox[
                      SubsuperscriptBox["W", 
                        TagBox[
                          StyleBox[
                            TagBox[
                              StyleBox["\[Nu]",
                                FontColor->RGBColor[1, 0, 0]],
                              (
                              StyleForm[ #, FontColor -> RGBColor[ 
                                1, 0, 0]]&)],
                            ShowContents->False],
                          (StyleForm[ #, ShowContents -> False]&)], 
                        TagBox[
                          StyleBox["\[Nu]",
                            FontColor->RGBColor[1, 0, 0]],
                          (StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)]],
                      
                      Tensor[ W, {
                        red[ \[Nu]]}, {Void}],
                      Editable->False]}], 
                  RowBox[{"\[PartialD]", 
                    InterpretationBox[
                      SubsuperscriptBox["x", 
                        TagBox[
                          StyleBox[
                            TagBox[
                              StyleBox["j",
                                FontColor->RGBColor[1, 0, 0]],
                              (
                              StyleForm[ #, FontColor -> RGBColor[ 
                                1, 0, 0]]&)],
                            ShowContents->False],
                          (StyleForm[ #, ShowContents -> False]&)], 
                        TagBox[
                          StyleBox["j",
                            FontColor->RGBColor[1, 0, 0]],
                          (StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)]],
                      
                      Tensor[ x, {
                        red[ j]}, {Void}],
                      Editable->False]}]],
                PartialD[ {x, \[Delta], g, \[CapitalGamma]}][ 
                  Tensor[ W, {
                    red[ \[Nu]]}, {Void}], 
                  Tensor[ x, {
                    red[ j]}, {Void}]],
                Editable->False]}]}], ")"}]}], "+", 
      RowBox[{
        InterpretationBox["\[Phi]",
          Tensor[ \[Phi]],
          Editable->False], " ", 
        RowBox[{"(", 
          RowBox[{
            RowBox[{
              InterpretationBox[
                SubsuperscriptBox["W", 
                  TagBox[
                    StyleBox[
                      TagBox[
                        StyleBox["\[Nu]",
                          FontColor->RGBColor[1, 0, 0]],
                        (StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)],
                      ShowContents->False],
                    (StyleForm[ #, ShowContents -> False]&)], 
                  TagBox[
                    StyleBox["\[Nu]",
                      FontColor->RGBColor[1, 0, 0]],
                    (StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)]],
                Tensor[ W, {
                  red[ \[Nu]]}, {Void}],
                Editable->False], " ", 
              RowBox[{"(", 
                RowBox[{
                  RowBox[{
                    InterpretationBox[
                      SubsuperscriptBox["V", 
                        TagBox[
                          StyleBox[
                            TagBox[
                              StyleBox["\[Mu]",
                                FontColor->RGBColor[1, 0, 0]],
                              (
                              StyleForm[ #, FontColor -> RGBColor[ 
                                1, 0, 0]]&)],
                            ShowContents->False],
                          (StyleForm[ #, ShowContents -> False]&)], 
                        TagBox[
                          StyleBox["\[Mu]",
                            FontColor->RGBColor[1, 0, 0]],
                          (StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)]],
                      
                      Tensor[ V, {
                        red[ \[Mu]]}, {Void}],
                      Editable->False], " ", 
                    InterpretationBox[
                      FractionBox[
                        RowBox[{\(\[PartialD]\^2\), 
                          InterpretationBox[
                            SubsuperscriptBox["T", 
                              RowBox[{
                                TagBox[
                                  StyleBox[
                                    TagBox[
                                      StyleBox["i",
                                        FontColor->RGBColor[1, 0, 0]],
                                      (
                                      StyleForm[ #, FontColor -> RGBColor[ 
                                        1, 0, 0]]&)],
                                    ShowContents->False],
                                  (StyleForm[ #, ShowContents -> False]&)], 
                                TagBox[
                                  StyleBox["j",
                                    FontColor->RGBColor[1, 0, 0]],
                                  (
                                  StyleForm[ #, FontColor -> RGBColor[ 
                                    1, 0, 0]]&)]}], 
                              RowBox[{
                                TagBox[
                                  StyleBox["i",
                                    FontColor->RGBColor[1, 0, 0]],
                                  (
                                  StyleForm[ #, FontColor -> RGBColor[ 
                                    1, 0, 0]]&)], 
                                TagBox[
                                  StyleBox[
                                    TagBox[
                                      StyleBox["j",
                                        FontColor->RGBColor[1, 0, 0]],
                                      (
                                      StyleForm[ #, FontColor -> RGBColor[ 
                                        1, 0, 0]]&)],
                                    ShowContents->False],
                                  (StyleForm[ #, ShowContents -> False]&)]}]],
                            
                            Tensor[ T, {
                              red[ i], Void}, {Void, 
                              red[ j]}],
                            Editable->False]}], 
                        RowBox[{"\[PartialD]", 
                          InterpretationBox[
                            SubsuperscriptBox["x", 
                              TagBox[
                                StyleBox[
                                  TagBox[
                                    StyleBox["\[Nu]",
                                      FontColor->RGBColor[1, 0, 0]],
                                    (
                                    StyleForm[ #, FontColor -> RGBColor[ 
                                      1, 0, 0]]&)],
                                  ShowContents->False],
                                (StyleForm[ #, ShowContents -> False]&)], 
                              TagBox[
                                StyleBox["\[Nu]",
                                  FontColor->RGBColor[1, 0, 0]],
                                (
                                StyleForm[ #, FontColor -> RGBColor[ 
                                  1, 0, 0]]&)]],
                            Tensor[ x, {
                              red[ \[Nu]]}, {Void}],
                            Editable->False], "\[PartialD]", 
                          InterpretationBox[
                            SubsuperscriptBox["x", 
                              TagBox[
                                StyleBox[
                                  TagBox[
                                    StyleBox["\[Mu]",
                                      FontColor->RGBColor[1, 0, 0]],
                                    (
                                    StyleForm[ #, FontColor -> RGBColor[ 
                                      1, 0, 0]]&)],
                                  ShowContents->False],
                                (StyleForm[ #, ShowContents -> False]&)], 
                              TagBox[
                                StyleBox["\[Mu]",
                                  FontColor->RGBColor[1, 0, 0]],
                                (
                                StyleForm[ #, FontColor -> RGBColor[ 
                                  1, 0, 0]]&)]],
                            Tensor[ x, {
                              red[ \[Mu]]}, {Void}],
                            Editable->False]}]],
                      PartialD[ {x, \[Delta], g, \[CapitalGamma]}][ 
                        Tensor[ T, {
                          red[ i], Void}, {Void, 
                          red[ j]}], {
                        Tensor[ x, {
                          red[ \[Nu]]}, {Void}], 
                        Tensor[ x, {
                          red[ \[Mu]]}, {Void}]}],
                      Editable->False]}], "-", 
                  RowBox[{
                    InterpretationBox[
                      SubsuperscriptBox["T", 
                        RowBox[{
                          TagBox[
                            StyleBox[
                              TagBox[
                                StyleBox["\[Mu]",
                                  FontColor->RGBColor[1, 0, 0]],
                                (
                                StyleForm[ #, FontColor -> RGBColor[ 
                                  1, 0, 0]]&)],
                              ShowContents->False],
                            (StyleForm[ #, ShowContents -> False]&)], 
                          TagBox[
                            StyleBox["j",
                              FontColor->RGBColor[1, 0, 0]],
                            (
                            StyleForm[ #, FontColor -> RGBColor[ 
                              1, 0, 0]]&)]}], 
                        RowBox[{
                          TagBox[
                            StyleBox["\[Mu]",
                              FontColor->RGBColor[1, 0, 0]],
                            (
                            StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)],
                           
                          TagBox[
                            StyleBox[
                              TagBox[
                                StyleBox["j",
                                  FontColor->RGBColor[1, 0, 0]],
                                (
                                StyleForm[ #, FontColor -> RGBColor[ 
                                  1, 0, 0]]&)],
                              ShowContents->False],
                            (StyleForm[ #, ShowContents -> False]&)]}]],
                      Tensor[ T, {
                        red[ \[Mu]], Void}, {Void, 
                        red[ j]}],
                      Editable->False], " ", 
                    InterpretationBox[
                      FractionBox[
                        RowBox[{\(\[PartialD]\^2\), 
                          InterpretationBox[
                            SubsuperscriptBox["V", 
                              TagBox[
                                StyleBox[
                                  TagBox[
                                    StyleBox["i",
                                      FontColor->RGBColor[1, 0, 0]],
                                    (
                                    StyleForm[ #, FontColor -> RGBColor[ 
                                      1, 0, 0]]&)],
                                  ShowContents->False],
                                (StyleForm[ #, ShowContents -> False]&)], 
                              TagBox[
                                StyleBox["i",
                                  FontColor->RGBColor[1, 0, 0]],
                                (
                                StyleForm[ #, FontColor -> RGBColor[ 
                                  1, 0, 0]]&)]],
                            Tensor[ V, {
                              red[ i]}, {Void}],
                            Editable->False]}], 
                        RowBox[{"\[PartialD]", 
                          InterpretationBox[
                            SubsuperscriptBox["x", 
                              TagBox[
                                StyleBox[
                                  TagBox[
                                    StyleBox["\[Nu]",
                                      FontColor->RGBColor[1, 0, 0]],
                                    (
                                    StyleForm[ #, FontColor -> RGBColor[ 
                                      1, 0, 0]]&)],
                                  ShowContents->False],
                                (StyleForm[ #, ShowContents -> False]&)], 
                              TagBox[
                                StyleBox["\[Nu]",
                                  FontColor->RGBColor[1, 0, 0]],
                                (
                                StyleForm[ #, FontColor -> RGBColor[ 
                                  1, 0, 0]]&)]],
                            Tensor[ x, {
                              red[ \[Nu]]}, {Void}],
                            Editable->False], "\[PartialD]", 
                          InterpretationBox[
                            SubsuperscriptBox["x", 
                              TagBox[
                                StyleBox[
                                  TagBox[
                                    StyleBox["\[Mu]",
                                      FontColor->RGBColor[1, 0, 0]],
                                    (
                                    StyleForm[ #, FontColor -> RGBColor[ 
                                      1, 0, 0]]&)],
                                  ShowContents->False],
                                (StyleForm[ #, ShowContents -> False]&)], 
                              TagBox[
                                StyleBox["\[Mu]",
                                  FontColor->RGBColor[1, 0, 0]],
                                (
                                StyleForm[ #, FontColor -> RGBColor[ 
                                  1, 0, 0]]&)]],
                            Tensor[ x, {
                              red[ \[Mu]]}, {Void}],
                            Editable->False]}]],
                      PartialD[ {x, \[Delta], g, \[CapitalGamma]}][ 
                        Tensor[ V, {
                          red[ i]}, {Void}], {
                        Tensor[ x, {
                          red[ \[Nu]]}, {Void}], 
                        Tensor[ x, {
                          red[ \[Mu]]}, {Void}]}],
                      Editable->False]}], "-", 
                  RowBox[{
                    InterpretationBox[
                      FractionBox[
                        RowBox[{"\[PartialD]", 
                          InterpretationBox[
                            SubsuperscriptBox["T", 
                              RowBox[{
                                TagBox[
                                  StyleBox[
                                    TagBox[
                                      StyleBox["\[Mu]",
                                        FontColor->RGBColor[1, 0, 0]],
                                      (
                                      StyleForm[ #, FontColor -> RGBColor[ 
                                        1, 0, 0]]&)],
                                    ShowContents->False],
                                  (StyleForm[ #, ShowContents -> False]&)], 
                                TagBox[
                                  StyleBox["j",
                                    FontColor->RGBColor[1, 0, 0]],
                                  (
                                  StyleForm[ #, FontColor -> RGBColor[ 
                                    1, 0, 0]]&)]}], 
                              RowBox[{
                                TagBox[
                                  StyleBox["\[Mu]",
                                    FontColor->RGBColor[1, 0, 0]],
                                  (
                                  StyleForm[ #, FontColor -> RGBColor[ 
                                    1, 0, 0]]&)], 
                                TagBox[
                                  StyleBox[
                                    TagBox[
                                      StyleBox["j",
                                        FontColor->RGBColor[1, 0, 0]],
                                      (
                                      StyleForm[ #, FontColor -> RGBColor[ 
                                        1, 0, 0]]&)],
                                    ShowContents->False],
                                  (StyleForm[ #, ShowContents -> False]&)]}]],
                            
                            Tensor[ T, {
                              red[ \[Mu]], Void}, {Void, 
                              red[ j]}],
                            Editable->False]}], 
                        RowBox[{"\[PartialD]", 
                          InterpretationBox[
                            SubsuperscriptBox["x", 
                              TagBox[
                                StyleBox[
                                  TagBox[
                                    StyleBox["\[Nu]",
                                      FontColor->RGBColor[1, 0, 0]],
                                    (
                                    StyleForm[ #, FontColor -> RGBColor[ 
                                      1, 0, 0]]&)],
                                  ShowContents->False],
                                (StyleForm[ #, ShowContents -> False]&)], 
                              TagBox[
                                StyleBox["\[Nu]",
                                  FontColor->RGBColor[1, 0, 0]],
                                (
                                StyleForm[ #, FontColor -> RGBColor[ 
                                  1, 0, 0]]&)]],
                            Tensor[ x, {
                              red[ \[Nu]]}, {Void}],
                            Editable->False]}]],
                      PartialD[ {x, \[Delta], g, \[CapitalGamma]}][ 
                        Tensor[ T, {
                          red[ \[Mu]], Void}, {Void, 
                          red[ j]}], 
                        Tensor[ x, {
                          red[ \[Nu]]}, {Void}]],
                      Editable->False], " ", 
                    InterpretationBox[
                      FractionBox[
                        RowBox[{"\[PartialD]", 
                          InterpretationBox[
                            SubsuperscriptBox["V", 
                              TagBox[
                                StyleBox[
                                  TagBox[
                                    StyleBox["i",
                                      FontColor->RGBColor[1, 0, 0]],
                                    (
                                    StyleForm[ #, FontColor -> RGBColor[ 
                                      1, 0, 0]]&)],
                                  ShowContents->False],
                                (StyleForm[ #, ShowContents -> False]&)], 
                              TagBox[
                                StyleBox["i",
                                  FontColor->RGBColor[1, 0, 0]],
                                (
                                StyleForm[ #, FontColor -> RGBColor[ 
                                  1, 0, 0]]&)]],
                            Tensor[ V, {
                              red[ i]}, {Void}],
                            Editable->False]}], 
                        RowBox[{"\[PartialD]", 
                          InterpretationBox[
                            SubsuperscriptBox["x", 
                              TagBox[
                                StyleBox[
                                  TagBox[
                                    StyleBox["\[Mu]",
                                      FontColor->RGBColor[1, 0, 0]],
                                    (
                                    StyleForm[ #, FontColor -> RGBColor[ 
                                      1, 0, 0]]&)],
                                  ShowContents->False],
                                (StyleForm[ #, ShowContents -> False]&)], 
                              TagBox[
                                StyleBox["\[Mu]",
                                  FontColor->RGBColor[1, 0, 0]],
                                (
                                StyleForm[ #, FontColor -> RGBColor[ 
                                  1, 0, 0]]&)]],
                            Tensor[ x, {
                              red[ \[Mu]]}, {Void}],
                            Editable->False]}]],
                      PartialD[ {x, \[Delta], g, \[CapitalGamma]}][ 
                        Tensor[ V, {
                          red[ i]}, {Void}], 
                        Tensor[ x, {
                          red[ \[Mu]]}, {Void}]],
                      Editable->False]}], "+", 
                  RowBox[{
                    InterpretationBox[
                      SubsuperscriptBox["T", 
                        RowBox[{
                          TagBox[
                            StyleBox[
                              TagBox[
                                StyleBox["i",
                                  FontColor->RGBColor[1, 0, 0]],
                                (
                                StyleForm[ #, FontColor -> RGBColor[ 
                                  1, 0, 0]]&)],
                              ShowContents->False],
                            (StyleForm[ #, ShowContents -> False]&)], 
                          TagBox[
                            StyleBox["\[Mu]",
                              FontColor->RGBColor[1, 0, 0]],
                            (
                            StyleForm[ #, FontColor -> RGBColor[ 
                              1, 0, 0]]&)]}], 
                        RowBox[{
                          TagBox[
                            StyleBox["i",
                              FontColor->RGBColor[1, 0, 0]],
                            (
                            StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)],
                           
                          TagBox[
                            StyleBox[
                              TagBox[
                                StyleBox["\[Mu]",
                                  FontColor->RGBColor[1, 0, 0]],
                                (
                                StyleForm[ #, FontColor -> RGBColor[ 
                                  1, 0, 0]]&)],
                              ShowContents->False],
                            (StyleForm[ #, ShowContents -> False]&)]}]],
                      Tensor[ T, {
                        red[ i], Void}, {Void, 
                        red[ \[Mu]]}],
                      Editable->False], " ", 
                    InterpretationBox[
                      FractionBox[
                        RowBox[{\(\[PartialD]\^2\), 
                          InterpretationBox[
                            SubsuperscriptBox["V", 
                              TagBox[
                                StyleBox[
                                  TagBox[
                                    StyleBox["\[Mu]",
                                      FontColor->RGBColor[1, 0, 0]],
                                    (
                                    StyleForm[ #, FontColor -> RGBColor[ 
                                      1, 0, 0]]&)],
                                  ShowContents->False],
                                (StyleForm[ #, ShowContents -> False]&)], 
                              TagBox[
                                StyleBox["\[Mu]",
                                  FontColor->RGBColor[1, 0, 0]],
                                (
                                StyleForm[ #, FontColor -> RGBColor[ 
                                  1, 0, 0]]&)]],
                            Tensor[ V, {
                              red[ \[Mu]]}, {Void}],
                            Editable->False]}], 
                        RowBox[{"\[PartialD]", 
                          InterpretationBox[
                            SubsuperscriptBox["x", 
                              TagBox[
                                StyleBox[
                                  TagBox[
                                    StyleBox["\[Nu]",
                                      FontColor->RGBColor[1, 0, 0]],
                                    (
                                    StyleForm[ #, FontColor -> RGBColor[ 
                                      1, 0, 0]]&)],
                                  ShowContents->False],
                                (StyleForm[ #, ShowContents -> False]&)], 
                              TagBox[
                                StyleBox["\[Nu]",
                                  FontColor->RGBColor[1, 0, 0]],
                                (
                                StyleForm[ #, FontColor -> RGBColor[ 
                                  1, 0, 0]]&)]],
                            Tensor[ x, {
                              red[ \[Nu]]}, {Void}],
                            Editable->False], "\[PartialD]", 
                          InterpretationBox[
                            SubsuperscriptBox["x", 
                              TagBox[
                                StyleBox[
                                  TagBox[
                                    StyleBox["j",
                                      FontColor->RGBColor[1, 0, 0]],
                                    (
                                    StyleForm[ #, FontColor -> RGBColor[ 
                                      1, 0, 0]]&)],
                                  ShowContents->False],
                                (StyleForm[ #, ShowContents -> False]&)], 
                              TagBox[
                                StyleBox["j",
                                  FontColor->RGBColor[1, 0, 0]],
                                (
                                StyleForm[ #, FontColor -> RGBColor[ 
                                  1, 0, 0]]&)]],
                            Tensor[ x, {
                              red[ j]}, {Void}],
                            Editable->False]}]],
                      PartialD[ {x, \[Delta], g, \[CapitalGamma]}][ 
                        Tensor[ V, {
                          red[ \[Mu]]}, {Void}], {
                        Tensor[ x, {
                          red[ \[Nu]]}, {Void}], 
                        Tensor[ x, {
                          red[ j]}, {Void}]}],
                      Editable->False]}], "+", 
                  RowBox[{
                    InterpretationBox[
                      FractionBox[
                        RowBox[{"\[PartialD]", 
                          InterpretationBox[
                            SubsuperscriptBox["T", 
                              RowBox[{
                                TagBox[
                                  StyleBox[
                                    TagBox[
                                      StyleBox["i",
                                        FontColor->RGBColor[1, 0, 0]],
                                      (
                                      StyleForm[ #, FontColor -> RGBColor[ 
                                        1, 0, 0]]&)],
                                    ShowContents->False],
                                  (StyleForm[ #, ShowContents -> False]&)], 
                                TagBox[
                                  StyleBox["\[Mu]",
                                    FontColor->RGBColor[1, 0, 0]],
                                  (
                                  StyleForm[ #, FontColor -> RGBColor[ 
                                    1, 0, 0]]&)]}], 
                              RowBox[{
                                TagBox[
                                  StyleBox["i",
                                    FontColor->RGBColor[1, 0, 0]],
                                  (
                                  StyleForm[ #, FontColor -> RGBColor[ 
                                    1, 0, 0]]&)], 
                                TagBox[
                                  StyleBox[
                                    TagBox[
                                      StyleBox["\[Mu]",
                                        FontColor->RGBColor[1, 0, 0]],
                                      (
                                      StyleForm[ #, FontColor -> RGBColor[ 
                                        1, 0, 0]]&)],
                                    ShowContents->False],
                                  (StyleForm[ #, ShowContents -> False]&)]}]],
                            
                            Tensor[ T, {
                              red[ i], Void}, {Void, 
                              red[ \[Mu]]}],
                            Editable->False]}], 
                        RowBox[{"\[PartialD]", 
                          InterpretationBox[
                            SubsuperscriptBox["x", 
                              TagBox[
                                StyleBox[
                                  TagBox[
                                    StyleBox["\[Nu]",
                                      FontColor->RGBColor[1, 0, 0]],
                                    (
                                    StyleForm[ #, FontColor -> RGBColor[ 
                                      1, 0, 0]]&)],
                                  ShowContents->False],
                                (StyleForm[ #, ShowContents -> False]&)], 
                              TagBox[
                                StyleBox["\[Nu]",
                                  FontColor->RGBColor[1, 0, 0]],
                                (
                                StyleForm[ #, FontColor -> RGBColor[ 
                                  1, 0, 0]]&)]],
                            Tensor[ x, {
                              red[ \[Nu]]}, {Void}],
                            Editable->False]}]],
                      PartialD[ {x, \[Delta], g, \[CapitalGamma]}][ 
                        Tensor[ T, {
                          red[ i], Void}, {Void, 
                          red[ \[Mu]]}], 
                        Tensor[ x, {
                          red[ \[Nu]]}, {Void}]],
                      Editable->False], " ", 
                    InterpretationBox[
                      FractionBox[
                        RowBox[{"\[PartialD]", 
                          InterpretationBox[
                            SubsuperscriptBox["V", 
                              TagBox[
                                StyleBox[
                                  TagBox[
                                    StyleBox["\[Mu]",
                                      FontColor->RGBColor[1, 0, 0]],
                                    (
                                    StyleForm[ #, FontColor -> RGBColor[ 
                                      1, 0, 0]]&)],
                                  ShowContents->False],
                                (StyleForm[ #, ShowContents -> False]&)], 
                              TagBox[
                                StyleBox["\[Mu]",
                                  FontColor->RGBColor[1, 0, 0]],
                                (
                                StyleForm[ #, FontColor -> RGBColor[ 
                                  1, 0, 0]]&)]],
                            Tensor[ V, {
                              red[ \[Mu]]}, {Void}],
                            Editable->False]}], 
                        RowBox[{"\[PartialD]", 
                          InterpretationBox[
                            SubsuperscriptBox["x", 
                              TagBox[
                                StyleBox[
                                  TagBox[
                                    StyleBox["j",
                                      FontColor->RGBColor[1, 0, 0]],
                                    (
                                    StyleForm[ #, FontColor -> RGBColor[ 
                                      1, 0, 0]]&)],
                                  ShowContents->False],
                                (StyleForm[ #, ShowContents -> False]&)], 
                              TagBox[
                                StyleBox["j",
                                  FontColor->RGBColor[1, 0, 0]],
                                (
                                StyleForm[ #, FontColor -> RGBColor[ 
                                  1, 0, 0]]&)]],
                            Tensor[ x, {
                              red[ j]}, {Void}],
                            Editable->False]}]],
                      PartialD[ {x, \[Delta], g, \[CapitalGamma]}][ 
                        Tensor[ V, {
                          red[ \[Mu]]}, {Void}], 
                        Tensor[ x, {
                          red[ j]}, {Void}]],
                      Editable->False]}], "+", 
                  RowBox[{
                    InterpretationBox[
                      FractionBox[
                        RowBox[{"\[PartialD]", 
                          InterpretationBox[
                            SubsuperscriptBox["T", 
                              RowBox[{
                                TagBox[
                                  StyleBox[
                                    TagBox[
                                      StyleBox["i",
                                        FontColor->RGBColor[1, 0, 0]],
                                      (
                                      StyleForm[ #, FontColor -> RGBColor[ 
                                        1, 0, 0]]&)],
                                    ShowContents->False],
                                  (StyleForm[ #, ShowContents -> False]&)], 
                                TagBox[
                                  StyleBox["j",
                                    FontColor->RGBColor[1, 0, 0]],
                                  (
                                  StyleForm[ #, FontColor -> RGBColor[ 
                                    1, 0, 0]]&)]}], 
                              RowBox[{
                                TagBox[
                                  StyleBox["i",
                                    FontColor->RGBColor[1, 0, 0]],
                                  (
                                  StyleForm[ #, FontColor -> RGBColor[ 
                                    1, 0, 0]]&)], 
                                TagBox[
                                  StyleBox[
                                    TagBox[
                                      StyleBox["j",
                                        FontColor->RGBColor[1, 0, 0]],
                                      (
                                      StyleForm[ #, FontColor -> RGBColor[ 
                                        1, 0, 0]]&)],
                                    ShowContents->False],
                                  (StyleForm[ #, ShowContents -> False]&)]}]],
                            
                            Tensor[ T, {
                              red[ i], Void}, {Void, 
                              red[ j]}],
                            Editable->False]}], 
                        RowBox[{"\[PartialD]", 
                          InterpretationBox[
                            SubsuperscriptBox["x", 
                              TagBox[
                                StyleBox[
                                  TagBox[
                                    StyleBox["\[Mu]",
                                      FontColor->RGBColor[1, 0, 0]],
                                    (
                                    StyleForm[ #, FontColor -> RGBColor[ 
                                      1, 0, 0]]&)],
                                  ShowContents->False],
                                (StyleForm[ #, ShowContents -> False]&)], 
                              TagBox[
                                StyleBox["\[Mu]",
                                  FontColor->RGBColor[1, 0, 0]],
                                (
                                StyleForm[ #, FontColor -> RGBColor[ 
                                  1, 0, 0]]&)]],
                            Tensor[ x, {
                              red[ \[Mu]]}, {Void}],
                            Editable->False]}]],
                      PartialD[ {x, \[Delta], g, \[CapitalGamma]}][ 
                        Tensor[ T, {
                          red[ i], Void}, {Void, 
                          red[ j]}], 
                        Tensor[ x, {
                          red[ \[Mu]]}, {Void}]],
                      Editable->False], " ", 
                    InterpretationBox[
                      FractionBox[
                        RowBox[{"\[PartialD]", 
                          InterpretationBox[
                            SubsuperscriptBox["V", 
                              TagBox[
                                StyleBox[
                                  TagBox[
                                    StyleBox["\[Mu]",
                                      FontColor->RGBColor[1, 0, 0]],
                                    (
                                    StyleForm[ #, FontColor -> RGBColor[ 
                                      1, 0, 0]]&)],
                                  ShowContents->False],
                                (StyleForm[ #, ShowContents -> False]&)], 
                              TagBox[
                                StyleBox["\[Mu]",
                                  FontColor->RGBColor[1, 0, 0]],
                                (
                                StyleForm[ #, FontColor -> RGBColor[ 
                                  1, 0, 0]]&)]],
                            Tensor[ V, {
                              red[ \[Mu]]}, {Void}],
                            Editable->False]}], 
                        RowBox[{"\[PartialD]", 
                          InterpretationBox[
                            SubsuperscriptBox["x", 
                              TagBox[
                                StyleBox[
                                  TagBox[
                                    StyleBox["\[Nu]",
                                      FontColor->RGBColor[1, 0, 0]],
                                    (
                                    StyleForm[ #, FontColor -> RGBColor[ 
                                      1, 0, 0]]&)],
                                  ShowContents->False],
                                (StyleForm[ #, ShowContents -> False]&)], 
                              TagBox[
                                StyleBox["\[Nu]",
                                  FontColor->RGBColor[1, 0, 0]],
                                (
                                StyleForm[ #, FontColor -> RGBColor[ 
                                  1, 0, 0]]&)]],
                            Tensor[ x, {
                              red[ \[Nu]]}, {Void}],
                            Editable->False]}]],
                      PartialD[ {x, \[Delta], g, \[CapitalGamma]}][ 
                        Tensor[ V, {
                          red[ \[Mu]]}, {Void}], 
                        Tensor[ x, {
                          red[ \[Nu]]}, {Void}]],
                      Editable->False]}]}], ")"}]}], "-", 
            RowBox[{
              RowBox[{"(", 
                RowBox[{
                  RowBox[{
                    InterpretationBox[
                      SubsuperscriptBox["V", 
                        TagBox[
                          StyleBox[
                            TagBox[
                              StyleBox["\[Mu]",
                                FontColor->RGBColor[1, 0, 0]],
                              (
                              StyleForm[ #, FontColor -> RGBColor[ 
                                1, 0, 0]]&)],
                            ShowContents->False],
                          (StyleForm[ #, ShowContents -> False]&)], 
                        TagBox[
                          StyleBox["\[Mu]",
                            FontColor->RGBColor[1, 0, 0]],
                          (StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)]],
                      
                      Tensor[ V, {
                        red[ \[Mu]]}, {Void}],
                      Editable->False], " ", 
                    InterpretationBox[
                      FractionBox[
                        RowBox[{"\[PartialD]", 
                          InterpretationBox[
                            SubsuperscriptBox["T", 
                              RowBox[{
                                TagBox[
                                  StyleBox[
                                    TagBox[
                                      StyleBox["\[Nu]",
                                        FontColor->RGBColor[1, 0, 0]],
                                      (
                                      StyleForm[ #, FontColor -> RGBColor[ 
                                        1, 0, 0]]&)],
                                    ShowContents->False],
                                  (StyleForm[ #, ShowContents -> False]&)], 
                                TagBox[
                                  StyleBox["j",
                                    FontColor->RGBColor[1, 0, 0]],
                                  (
                                  StyleForm[ #, FontColor -> RGBColor[ 
                                    1, 0, 0]]&)]}], 
                              RowBox[{
                                TagBox[
                                  StyleBox["\[Nu]",
                                    FontColor->RGBColor[1, 0, 0]],
                                  (
                                  StyleForm[ #, FontColor -> RGBColor[ 
                                    1, 0, 0]]&)], 
                                TagBox[
                                  StyleBox[
                                    TagBox[
                                      StyleBox["j",
                                        FontColor->RGBColor[1, 0, 0]],
                                      (
                                      StyleForm[ #, FontColor -> RGBColor[ 
                                        1, 0, 0]]&)],
                                    ShowContents->False],
                                  (StyleForm[ #, ShowContents -> False]&)]}]],
                            
                            Tensor[ T, {
                              red[ \[Nu]], Void}, {Void, 
                              red[ j]}],
                            Editable->False]}], 
                        RowBox[{"\[PartialD]", 
                          InterpretationBox[
                            SubsuperscriptBox["x", 
                              TagBox[
                                StyleBox[
                                  TagBox[
                                    StyleBox["\[Mu]",
                                      FontColor->RGBColor[1, 0, 0]],
                                    (
                                    StyleForm[ #, FontColor -> RGBColor[ 
                                      1, 0, 0]]&)],
                                  ShowContents->False],
                                (StyleForm[ #, ShowContents -> False]&)], 
                              TagBox[
                                StyleBox["\[Mu]",
                                  FontColor->RGBColor[1, 0, 0]],
                                (
                                StyleForm[ #, FontColor -> RGBColor[ 
                                  1, 0, 0]]&)]],
                            Tensor[ x, {
                              red[ \[Mu]]}, {Void}],
                            Editable->False]}]],
                      PartialD[ {x, \[Delta], g, \[CapitalGamma]}][ 
                        Tensor[ T, {
                          red[ \[Nu]], Void}, {Void, 
                          red[ j]}], 
                        Tensor[ x, {
                          red[ \[Mu]]}, {Void}]],
                      Editable->False]}], "+", 
                  RowBox[{
                    InterpretationBox[
                      SubsuperscriptBox["T", 
                        RowBox[{
                          TagBox[
                            StyleBox[
                              TagBox[
                                StyleBox["\[Nu]",
                                  FontColor->RGBColor[1, 0, 0]],
                                (
                                StyleForm[ #, FontColor -> RGBColor[ 
                                  1, 0, 0]]&)],
                              ShowContents->False],
                            (StyleForm[ #, ShowContents -> False]&)], 
                          TagBox[
                            StyleBox["\[Mu]",
                              FontColor->RGBColor[1, 0, 0]],
                            (
                            StyleForm[ #, FontColor -> RGBColor[ 
                              1, 0, 0]]&)]}], 
                        RowBox[{
                          TagBox[
                            StyleBox["\[Nu]",
                              FontColor->RGBColor[1, 0, 0]],
                            (
                            StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)],
                           
                          TagBox[
                            StyleBox[
                              TagBox[
                                StyleBox["\[Mu]",
                                  FontColor->RGBColor[1, 0, 0]],
                                (
                                StyleForm[ #, FontColor -> RGBColor[ 
                                  1, 0, 0]]&)],
                              ShowContents->False],
                            (StyleForm[ #, ShowContents -> False]&)]}]],
                      Tensor[ T, {
                        red[ \[Nu]], Void}, {Void, 
                        red[ \[Mu]]}],
                      Editable->False], " ", 
                    InterpretationBox[
                      FractionBox[
                        RowBox[{"\[PartialD]", 
                          InterpretationBox[
                            SubsuperscriptBox["V", 
                              TagBox[
                                StyleBox[
                                  TagBox[
                                    StyleBox["\[Mu]",
                                      FontColor->RGBColor[1, 0, 0]],
                                    (
                                    StyleForm[ #, FontColor -> RGBColor[ 
                                      1, 0, 0]]&)],
                                  ShowContents->False],
                                (StyleForm[ #, ShowContents -> False]&)], 
                              TagBox[
                                StyleBox["\[Mu]",
                                  FontColor->RGBColor[1, 0, 0]],
                                (
                                StyleForm[ #, FontColor -> RGBColor[ 
                                  1, 0, 0]]&)]],
                            Tensor[ V, {
                              red[ \[Mu]]}, {Void}],
                            Editable->False]}], 
                        RowBox[{"\[PartialD]", 
                          InterpretationBox[
                            SubsuperscriptBox["x", 
                              TagBox[
                                StyleBox[
                                  TagBox[
                                    StyleBox["j",
                                      FontColor->RGBColor[1, 0, 0]],
                                    (
                                    StyleForm[ #, FontColor -> RGBColor[ 
                                      1, 0, 0]]&)],
                                  ShowContents->False],
                                (StyleForm[ #, ShowContents -> False]&)], 
                              TagBox[
                                StyleBox["j",
                                  FontColor->RGBColor[1, 0, 0]],
                                (
                                StyleForm[ #, FontColor -> RGBColor[ 
                                  1, 0, 0]]&)]],
                            Tensor[ x, {
                              red[ j]}, {Void}],
                            Editable->False]}]],
                      PartialD[ {x, \[Delta], g, \[CapitalGamma]}][ 
                        Tensor[ V, {
                          red[ \[Mu]]}, {Void}], 
                        Tensor[ x, {
                          red[ j]}, {Void}]],
                      Editable->False]}], "-", 
                  RowBox[{
                    InterpretationBox[
                      SubsuperscriptBox["T", 
                        RowBox[{
                          TagBox[
                            StyleBox[
                              TagBox[
                                StyleBox["\[Mu]",
                                  FontColor->RGBColor[1, 0, 0]],
                                (
                                StyleForm[ #, FontColor -> RGBColor[ 
                                  1, 0, 0]]&)],
                              ShowContents->False],
                            (StyleForm[ #, ShowContents -> False]&)], 
                          TagBox[
                            StyleBox["j",
                              FontColor->RGBColor[1, 0, 0]],
                            (
                            StyleForm[ #, FontColor -> RGBColor[ 
                              1, 0, 0]]&)]}], 
                        RowBox[{
                          TagBox[
                            StyleBox["\[Mu]",
                              FontColor->RGBColor[1, 0, 0]],
                            (
                            StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)],
                           
                          TagBox[
                            StyleBox[
                              TagBox[
                                StyleBox["j",
                                  FontColor->RGBColor[1, 0, 0]],
                                (
                                StyleForm[ #, FontColor -> RGBColor[ 
                                  1, 0, 0]]&)],
                              ShowContents->False],
                            (StyleForm[ #, ShowContents -> False]&)]}]],
                      Tensor[ T, {
                        red[ \[Mu]], Void}, {Void, 
                        red[ j]}],
                      Editable->False], " ", 
                    InterpretationBox[
                      FractionBox[
                        RowBox[{"\[PartialD]", 
                          InterpretationBox[
                            SubsuperscriptBox["V", 
                              TagBox[
                                StyleBox[
                                  TagBox[
                                    StyleBox["\[Nu]",
                                      FontColor->RGBColor[1, 0, 0]],
                                    (
                                    StyleForm[ #, FontColor -> RGBColor[ 
                                      1, 0, 0]]&)],
                                  ShowContents->False],
                                (StyleForm[ #, ShowContents -> False]&)], 
                              TagBox[
                                StyleBox["\[Nu]",
                                  FontColor->RGBColor[1, 0, 0]],
                                (
                                StyleForm[ #, FontColor -> RGBColor[ 
                                  1, 0, 0]]&)]],
                            Tensor[ V, {
                              red[ \[Nu]]}, {Void}],
                            Editable->False]}], 
                        RowBox[{"\[PartialD]", 
                          InterpretationBox[
                            SubsuperscriptBox["x", 
                              TagBox[
                                StyleBox[
                                  TagBox[
                                    StyleBox["\[Mu]",
                                      FontColor->RGBColor[1, 0, 0]],
                                    (
                                    StyleForm[ #, FontColor -> RGBColor[ 
                                      1, 0, 0]]&)],
                                  ShowContents->False],
                                (StyleForm[ #, ShowContents -> False]&)], 
                              TagBox[
                                StyleBox["\[Mu]",
                                  FontColor->RGBColor[1, 0, 0]],
                                (
                                StyleForm[ #, FontColor -> RGBColor[ 
                                  1, 0, 0]]&)]],
                            Tensor[ x, {
                              red[ \[Mu]]}, {Void}],
                            Editable->False]}]],
                      PartialD[ {x, \[Delta], g, \[CapitalGamma]}][ 
                        Tensor[ V, {
                          red[ \[Nu]]}, {Void}], 
                        Tensor[ x, {
                          red[ \[Mu]]}, {Void}]],
                      Editable->False]}]}], ")"}], " ", 
              InterpretationBox[
                FractionBox[
                  RowBox[{"\[PartialD]", 
                    InterpretationBox[
                      SubsuperscriptBox["W", 
                        TagBox[
                          StyleBox[
                            TagBox[
                              StyleBox["i",
                                FontColor->RGBColor[1, 0, 0]],
                              (
                              StyleForm[ #, FontColor -> RGBColor[ 
                                1, 0, 0]]&)],
                            ShowContents->False],
                          (StyleForm[ #, ShowContents -> False]&)], 
                        TagBox[
                          StyleBox["i",
                            FontColor->RGBColor[1, 0, 0]],
                          (StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)]],
                      
                      Tensor[ W, {
                        red[ i]}, {Void}],
                      Editable->False]}], 
                  RowBox[{"\[PartialD]", 
                    InterpretationBox[
                      SubsuperscriptBox["x", 
                        TagBox[
                          StyleBox[
                            TagBox[
                              StyleBox["\[Nu]",
                                FontColor->RGBColor[1, 0, 0]],
                              (
                              StyleForm[ #, FontColor -> RGBColor[ 
                                1, 0, 0]]&)],
                            ShowContents->False],
                          (StyleForm[ #, ShowContents -> False]&)], 
                        TagBox[
                          StyleBox["\[Nu]",
                            FontColor->RGBColor[1, 0, 0]],
                          (StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)]],
                      
                      Tensor[ x, {
                        red[ \[Nu]]}, {Void}],
                      Editable->False]}]],
                PartialD[ {x, \[Delta], g, \[CapitalGamma]}][ 
                  Tensor[ W, {
                    red[ i]}, {Void}], 
                  Tensor[ x, {
                    red[ \[Nu]]}, {Void}]],
                Editable->False]}], "+", 
            RowBox[{
              RowBox[{"(", 
                RowBox[{
                  RowBox[{
                    InterpretationBox[
                      SubsuperscriptBox["V", 
                        TagBox[
                          StyleBox[
                            TagBox[
                              StyleBox["\[Mu]",
                                FontColor->RGBColor[1, 0, 0]],
                              (
                              StyleForm[ #, FontColor -> RGBColor[ 
                                1, 0, 0]]&)],
                            ShowContents->False],
                          (StyleForm[ #, ShowContents -> False]&)], 
                        TagBox[
                          StyleBox["\[Mu]",
                            FontColor->RGBColor[1, 0, 0]],
                          (StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)]],
                      
                      Tensor[ V, {
                        red[ \[Mu]]}, {Void}],
                      Editable->False], " ", 
                    InterpretationBox[
                      FractionBox[
                        RowBox[{"\[PartialD]", 
                          InterpretationBox[
                            SubsuperscriptBox["T", 
                              RowBox[{
                                TagBox[
                                  StyleBox[
                                    TagBox[
                                      StyleBox["i",
                                        FontColor->RGBColor[1, 0, 0]],
                                      (
                                      StyleForm[ #, FontColor -> RGBColor[ 
                                        1, 0, 0]]&)],
                                    ShowContents->False],
                                  (StyleForm[ #, ShowContents -> False]&)], 
                                TagBox[
                                  StyleBox["\[Nu]",
                                    FontColor->RGBColor[1, 0, 0]],
                                  (
                                  StyleForm[ #, FontColor -> RGBColor[ 
                                    1, 0, 0]]&)]}], 
                              RowBox[{
                                TagBox[
                                  StyleBox["i",
                                    FontColor->RGBColor[1, 0, 0]],
                                  (
                                  StyleForm[ #, FontColor -> RGBColor[ 
                                    1, 0, 0]]&)], 
                                TagBox[
                                  StyleBox[
                                    TagBox[
                                      StyleBox["\[Nu]",
                                        FontColor->RGBColor[1, 0, 0]],
                                      (
                                      StyleForm[ #, FontColor -> RGBColor[ 
                                        1, 0, 0]]&)],
                                    ShowContents->False],
                                  (StyleForm[ #, ShowContents -> False]&)]}]],
                            
                            Tensor[ T, {
                              red[ i], Void}, {Void, 
                              red[ \[Nu]]}],
                            Editable->False]}], 
                        RowBox[{"\[PartialD]", 
                          InterpretationBox[
                            SubsuperscriptBox["x", 
                              TagBox[
                                StyleBox[
                                  TagBox[
                                    StyleBox["\[Mu]",
                                      FontColor->RGBColor[1, 0, 0]],
                                    (
                                    StyleForm[ #, FontColor -> RGBColor[ 
                                      1, 0, 0]]&)],
                                  ShowContents->False],
                                (StyleForm[ #, ShowContents -> False]&)], 
                              TagBox[
                                StyleBox["\[Mu]",
                                  FontColor->RGBColor[1, 0, 0]],
                                (
                                StyleForm[ #, FontColor -> RGBColor[ 
                                  1, 0, 0]]&)]],
                            Tensor[ x, {
                              red[ \[Mu]]}, {Void}],
                            Editable->False]}]],
                      PartialD[ {x, \[Delta], g, \[CapitalGamma]}][ 
                        Tensor[ T, {
                          red[ i], Void}, {Void, 
                          red[ \[Nu]]}], 
                        Tensor[ x, {
                          red[ \[Mu]]}, {Void}]],
                      Editable->False]}], "-", 
                  RowBox[{
                    InterpretationBox[
                      SubsuperscriptBox["T", 
                        RowBox[{
                          TagBox[
                            StyleBox[
                              TagBox[
                                StyleBox["\[Mu]",
                                  FontColor->RGBColor[1, 0, 0]],
                                (
                                StyleForm[ #, FontColor -> RGBColor[ 
                                  1, 0, 0]]&)],
                              ShowContents->False],
                            (StyleForm[ #, ShowContents -> False]&)], 
                          TagBox[
                            StyleBox["\[Nu]",
                              FontColor->RGBColor[1, 0, 0]],
                            (
                            StyleForm[ #, FontColor -> RGBColor[ 
                              1, 0, 0]]&)]}], 
                        RowBox[{
                          TagBox[
                            StyleBox["\[Mu]",
                              FontColor->RGBColor[1, 0, 0]],
                            (
                            StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)],
                           
                          TagBox[
                            StyleBox[
                              TagBox[
                                StyleBox["\[Nu]",
                                  FontColor->RGBColor[1, 0, 0]],
                                (
                                StyleForm[ #, FontColor -> RGBColor[ 
                                  1, 0, 0]]&)],
                              ShowContents->False],
                            (StyleForm[ #, ShowContents -> False]&)]}]],
                      Tensor[ T, {
                        red[ \[Mu]], Void}, {Void, 
                        red[ \[Nu]]}],
                      Editable->False], " ", 
                    InterpretationBox[
                      FractionBox[
                        RowBox[{"\[PartialD]", 
                          InterpretationBox[
                            SubsuperscriptBox["V", 
                              TagBox[
                                StyleBox[
                                  TagBox[
                                    StyleBox["i",
                                      FontColor->RGBColor[1, 0, 0]],
                                    (
                                    StyleForm[ #, FontColor -> RGBColor[ 
                                      1, 0, 0]]&)],
                                  ShowContents->False],
                                (StyleForm[ #, ShowContents -> False]&)], 
                              TagBox[
                                StyleBox["i",
                                  FontColor->RGBColor[1, 0, 0]],
                                (
                                StyleForm[ #, FontColor -> RGBColor[ 
                                  1, 0, 0]]&)]],
                            Tensor[ V, {
                              red[ i]}, {Void}],
                            Editable->False]}], 
                        RowBox[{"\[PartialD]", 
                          InterpretationBox[
                            SubsuperscriptBox["x", 
                              TagBox[
                                StyleBox[
                                  TagBox[
                                    StyleBox["\[Mu]",
                                      FontColor->RGBColor[1, 0, 0]],
                                    (
                                    StyleForm[ #, FontColor -> RGBColor[ 
                                      1, 0, 0]]&)],
                                  ShowContents->False],
                                (StyleForm[ #, ShowContents -> False]&)], 
                              TagBox[
                                StyleBox["\[Mu]",
                                  FontColor->RGBColor[1, 0, 0]],
                                (
                                StyleForm[ #, FontColor -> RGBColor[ 
                                  1, 0, 0]]&)]],
                            Tensor[ x, {
                              red[ \[Mu]]}, {Void}],
                            Editable->False]}]],
                      PartialD[ {x, \[Delta], g, \[CapitalGamma]}][ 
                        Tensor[ V, {
                          red[ i]}, {Void}], 
                        Tensor[ x, {
                          red[ \[Mu]]}, {Void}]],
                      Editable->False]}], "+", 
                  RowBox[{
                    InterpretationBox[
                      SubsuperscriptBox["T", 
                        RowBox[{
                          TagBox[
                            StyleBox[
                              TagBox[
                                StyleBox["i",
                                  FontColor->RGBColor[1, 0, 0]],
                                (
                                StyleForm[ #, FontColor -> RGBColor[ 
                                  1, 0, 0]]&)],
                              ShowContents->False],
                            (StyleForm[ #, ShowContents -> False]&)], 
                          TagBox[
                            StyleBox["\[Mu]",
                              FontColor->RGBColor[1, 0, 0]],
                            (
                            StyleForm[ #, FontColor -> RGBColor[ 
                              1, 0, 0]]&)]}], 
                        RowBox[{
                          TagBox[
                            StyleBox["i",
                              FontColor->RGBColor[1, 0, 0]],
                            (
                            StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)],
                           
                          TagBox[
                            StyleBox[
                              TagBox[
                                StyleBox["\[Mu]",
                                  FontColor->RGBColor[1, 0, 0]],
                                (
                                StyleForm[ #, FontColor -> RGBColor[ 
                                  1, 0, 0]]&)],
                              ShowContents->False],
                            (StyleForm[ #, ShowContents -> False]&)]}]],
                      Tensor[ T, {
                        red[ i], Void}, {Void, 
                        red[ \[Mu]]}],
                      Editable->False], " ", 
                    InterpretationBox[
                      FractionBox[
                        RowBox[{"\[PartialD]", 
                          InterpretationBox[
                            SubsuperscriptBox["V", 
                              TagBox[
                                StyleBox[
                                  TagBox[
                                    StyleBox["\[Mu]",
                                      FontColor->RGBColor[1, 0, 0]],
                                    (
                                    StyleForm[ #, FontColor -> RGBColor[ 
                                      1, 0, 0]]&)],
                                  ShowContents->False],
                                (StyleForm[ #, ShowContents -> False]&)], 
                              TagBox[
                                StyleBox["\[Mu]",
                                  FontColor->RGBColor[1, 0, 0]],
                                (
                                StyleForm[ #, FontColor -> RGBColor[ 
                                  1, 0, 0]]&)]],
                            Tensor[ V, {
                              red[ \[Mu]]}, {Void}],
                            Editable->False]}], 
                        RowBox[{"\[PartialD]", 
                          InterpretationBox[
                            SubsuperscriptBox["x", 
                              TagBox[
                                StyleBox[
                                  TagBox[
                                    StyleBox["\[Nu]",
                                      FontColor->RGBColor[1, 0, 0]],
                                    (
                                    StyleForm[ #, FontColor -> RGBColor[ 
                                      1, 0, 0]]&)],
                                  ShowContents->False],
                                (StyleForm[ #, ShowContents -> False]&)], 
                              TagBox[
                                StyleBox["\[Nu]",
                                  FontColor->RGBColor[1, 0, 0]],
                                (
                                StyleForm[ #, FontColor -> RGBColor[ 
                                  1, 0, 0]]&)]],
                            Tensor[ x, {
                              red[ \[Nu]]}, {Void}],
                            Editable->False]}]],
                      PartialD[ {x, \[Delta], g, \[CapitalGamma]}][ 
                        Tensor[ V, {
                          red[ \[Mu]]}, {Void}], 
                        Tensor[ x, {
                          red[ \[Nu]]}, {Void}]],
                      Editable->False]}]}], ")"}], " ", 
              InterpretationBox[
                FractionBox[
                  RowBox[{"\[PartialD]", 
                    InterpretationBox[
                      SubsuperscriptBox["W", 
                        TagBox[
                          StyleBox[
                            TagBox[
                              StyleBox["\[Nu]",
                                FontColor->RGBColor[1, 0, 0]],
                              (
                              StyleForm[ #, FontColor -> RGBColor[ 
                                1, 0, 0]]&)],
                            ShowContents->False],
                          (StyleForm[ #, ShowContents -> False]&)], 
                        TagBox[
                          StyleBox["\[Nu]",
                            FontColor->RGBColor[1, 0, 0]],
                          (StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)]],
                      
                      Tensor[ W, {
                        red[ \[Nu]]}, {Void}],
                      Editable->False]}], 
                  RowBox[{"\[PartialD]", 
                    InterpretationBox[
                      SubsuperscriptBox["x", 
                        TagBox[
                          StyleBox[
                            TagBox[
                              StyleBox["j",
                                FontColor->RGBColor[1, 0, 0]],
                              (
                              StyleForm[ #, FontColor -> RGBColor[ 
                                1, 0, 0]]&)],
                            ShowContents->False],
                          (StyleForm[ #, ShowContents -> False]&)], 
                        TagBox[
                          StyleBox["j",
                            FontColor->RGBColor[1, 0, 0]],
                          (StyleForm[ #, FontColor -> RGBColor[ 1, 0, 0]]&)]],
                      
                      Tensor[ x, {
                        red[ j]}, {Void}],
                      Editable->False]}]],
                PartialD[ {x, \[Delta], g, \[CapitalGamma]}][ 
                  Tensor[ W, {
                    red[ \[Nu]]}, {Void}], 
                  Tensor[ x, {
                    red[ j]}, {Void}]],
                Editable->False]}]}], ")"}]}]}]], "Output"]
}, Open  ]]
}, Open  ]],

Cell[TextData[Cell[BoxData[GridBox[{
        {
          ButtonBox[
            StyleBox["\[FirstPage]",
              "SR"],
            ButtonFunction:>FrontEndExecute[ {
                FrontEndToken[ 
                  FrontEnd`SelectedNotebook[ ], "ScrollPageFirst"]}],
            ButtonStyle->"SlideHyperlink",
            ButtonNote->"First Slide"], 
          ButtonBox[
            StyleBox["\[LeftPointer]",
              "SR"],
            ButtonFunction:>FrontEndExecute[ {
                FrontEndToken[ 
                  FrontEnd`SelectedNotebook[ ], "ScrollPagePrevious"]}],
            ButtonStyle->"SlideHyperlink",
            ButtonNote->"Previous Slide"], 
          ButtonBox[
            StyleBox["\[RightPointer]",
              "SR"],
            ButtonFunction:>FrontEndExecute[ {
                FrontEndToken[ 
                  FrontEnd`SelectedNotebook[ ], "ScrollPageNext"]}],
            ButtonStyle->"SlideHyperlink",
            ButtonNote->"Next Slide"], 
          ButtonBox[
            StyleBox["\[LastPage]",
              "SR"],
            ButtonFunction:>FrontEndExecute[ {
                FrontEndToken[ 
                  FrontEnd`SelectedNotebook[ ], "ScrollPageLast"]}],
            ButtonStyle->"SlideHyperlink"], " ", 
          ButtonBox[
            StyleBox[
              RowBox[{
                CounterBox["SlideShowNavigationBar"], \(\(\ \)\(of\)\(\ \)\), 
                
                
                CounterBox["SlideShowNavigationBar", {None, 
                  "SlideShowHeader", -1}]}],
              "SR"],
            ButtonFrame->"None"]}
        }]]]], "SlideShowNavigationBar",
  CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell[TextData[{
  StyleBox["Tensorial",
    FontSlant->"Italic"],
  " 4.0 - Zero Tensors (a)"
}], "Section"],

Cell["\<\
Zero tensors balance free indices and expand and combine correctly.\
\>", "EmphasisText"],

Cell[TextData[{
  "The following declares ",
  Cell[BoxData[
      \(zero\)]],
  " to be a zero tensor."
}], "Text"],

Cell[BoxData[{
    \(DeclareBaseIndices[{1, 2}]\), "\n", 
    \(DeclareZeroTensor[zero]\)}], "Input"],

Cell["\<\
The equation for parallel transport of a vector is often written in the \
following way in the books. But if we try to expand this to an array of \
equations, Tensorial objects because the free indices do not match. There are \
no free indices on the right hand side.\
\>", "Text"],

Cell[CellGroupData[{

Cell[BoxData[{
    \(AbsoluteD[\[Lambda]u[a], \ u] \[Equal] 0\), "\[IndentingNewLine]", 
    \(MapAt[ExpandAbsoluteD[{x, \[Delta], g, \[CapitalGamma]}, {c, d}], %, 
      1]\), "\[IndentingNewLine]", 
    \(\(% // EinsteinArray[]\) // TableForm\)}], "Input"],

Cell[BoxData[
    RowBox[{
      InterpretationBox[
        FractionBox[
          RowBox[{"D", 
            InterpretationBox[
              SubsuperscriptBox["\[Lambda]", 
                TagBox[
                  StyleBox["a",
                    ShowContents->False],
                  (StyleForm[ #, ShowContents -> False]&)], "a"],
              Tensor[ \[Lambda], {a}, {Void}],
              Editable->False]}], \(d  u\)],
        AbsoluteD[ 
          Tensor[ \[Lambda], {a}, {Void}], u],
        Editable->False], "\[Equal]", "0"}]], "Output"],

Cell[BoxData[
    RowBox[{
      RowBox[{
        RowBox[{
          InterpretationBox[
            SubsuperscriptBox["\[CapitalGamma]", 
              RowBox[{
                TagBox[
                  StyleBox["a",
                    ShowContents->False],
                  (StyleForm[ #, ShowContents -> False]&)], "c", "d"}], 
              RowBox[{"a", 
                TagBox[
                  StyleBox["c",
                    ShowContents->False],
                  (StyleForm[ #, ShowContents -> False]&)], 
                TagBox[
                  StyleBox["d",
                    ShowContents->False],
                  (StyleForm[ #, ShowContents -> False]&)]}]],
            Tensor[ \[CapitalGamma], {a, Void, Void}, {Void, c, d}],
            Editable->False], " ", 
          InterpretationBox[
            SubsuperscriptBox["\[Lambda]", 
              TagBox[
                StyleBox["c",
                  ShowContents->False],
                (StyleForm[ #, ShowContents -> False]&)], "c"],
            Tensor[ \[Lambda], {c}, {Void}],
            Editable->False], " ", 
          InterpretationBox[
            FractionBox[
              RowBox[{"\[DifferentialD]", 
                InterpretationBox[
                  SubsuperscriptBox["x", 
                    TagBox[
                      StyleBox["d",
                        ShowContents->False],
                      (StyleForm[ #, ShowContents -> False]&)], "d"],
                  Tensor[ x, {d}, {Void}],
                  Editable->False]}], \(\[DifferentialD]u\)],
            TotalD[ 
              Tensor[ x, {d}, {Void}], u]]}], "+", 
        InterpretationBox[
          FractionBox[
            RowBox[{"\[DifferentialD]", 
              InterpretationBox[
                SubsuperscriptBox["\[Lambda]", 
                  TagBox[
                    StyleBox["a",
                      ShowContents->False],
                    (StyleForm[ #, ShowContents -> False]&)], "a"],
                Tensor[ \[Lambda], {a}, {Void}],
                Editable->False]}], \(\[DifferentialD]u\)],
          TotalD[ 
            Tensor[ \[Lambda], {a}, {Void}], u]]}], "\[Equal]", 
      "0"}]], "Output"],

Cell[BoxData[
    \(FreeIndices::"notmatched" \(\(:\)\(\ \)\) 
      "The free indices are not the same in all terms of the expression or \
some terms have bad indices."\)], "Message"],

Cell[BoxData[
    \($Aborted\)], "Output"]
}, Open  ]]
}, Open  ]],

Cell[TextData[Cell[BoxData[GridBox[{
        {
          ButtonBox[
            StyleBox["\[FirstPage]",
              "SR"],
            ButtonFunction:>FrontEndExecute[ {
                FrontEndToken[ 
                  FrontEnd`SelectedNotebook[ ], "ScrollPageFirst"]}],
            ButtonStyle->"SlideHyperlink",
            ButtonNote->"First Slide"], 
          ButtonBox[
            StyleBox["\[LeftPointer]",
              "SR"],
            ButtonFunction:>FrontEndExecute[ {
                FrontEndToken[ 
                  FrontEnd`SelectedNotebook[ ], "ScrollPagePrevious"]}],
            ButtonStyle->"SlideHyperlink",
            ButtonNote->"Previous Slide"], 
          ButtonBox[
            StyleBox["\[RightPointer]",
              "SR"],
            ButtonFunction:>FrontEndExecute[ {
                FrontEndToken[ 
                  FrontEnd`SelectedNotebook[ ], "ScrollPageNext"]}],
            ButtonStyle->"SlideHyperlink",
            ButtonNote->"Next Slide"], 
          ButtonBox[
            StyleBox["\[LastPage]",
              "SR"],
            ButtonFunction:>FrontEndExecute[ {
                FrontEndToken[ 
                  FrontEnd`SelectedNotebook[ ], "ScrollPageLast"]}],
            ButtonStyle->"SlideHyperlink"], " ", 
          ButtonBox[
            StyleBox[
              RowBox[{
                CounterBox["SlideShowNavigationBar"], \(\(\ \)\(of\)\(\ \)\), 
                
                
                CounterBox["SlideShowNavigationBar", {None, 
                  "SlideShowHeader", -1}]}],
              "SR"],
            ButtonFrame->"None"]}
        }]]]], "SlideShowNavigationBar",
  CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell[TextData[{
  StyleBox["Tensorial",
    FontSlant->"Italic"],
  " 4.0 - Zero Tensors (b)"
}], "Section"],

Cell["\<\
Using an indexed zero tensor balances the indices and expands correctly.\
\>", "Text"],

Cell[CellGroupData[{

Cell[BoxData[{
    \(AbsoluteD[\[Lambda]u[a], \ u] \[Equal] 
      zerou[a]\), "\[IndentingNewLine]", 
    \(MapAt[ExpandAbsoluteD[{x, \[Delta], g, \[CapitalGamma]}, {c, d}], %, 
      1]\), "\[IndentingNewLine]", 
    \(% // EinsteinArray[]\)}], "Input"],

Cell[BoxData[
    RowBox[{
      InterpretationBox[
        FractionBox[
          RowBox[{"D", 
            InterpretationBox[
              SubsuperscriptBox["\[Lambda]", 
                TagBox[
                  StyleBox["a",
                    ShowContents->False],
                  (StyleForm[ #, ShowContents -> False]&)], "a"],
              Tensor[ \[Lambda], {a}, {Void}],
              Editable->False]}], \(d  u\)],
        AbsoluteD[ 
          Tensor[ \[Lambda], {a}, {Void}], u],
        Editable->False], "\[Equal]", 
      InterpretationBox[
        SubsuperscriptBox["zero", 
          TagBox[
            StyleBox["a",
              ShowContents->False],
            (StyleForm[ #, ShowContents -> False]&)], "a"],
        Tensor[ zero, {a}, {Void}],
        Editable->False]}]], "Output"],

Cell[BoxData[
    RowBox[{
      RowBox[{
        RowBox[{
          InterpretationBox[
            SubsuperscriptBox["\[CapitalGamma]", 
              RowBox[{
                TagBox[
                  StyleBox["a",
                    ShowContents->False],
                  (StyleForm[ #, ShowContents -> False]&)], "c", "d"}], 
              RowBox[{"a", 
                TagBox[
                  StyleBox["c",
                    ShowContents->False],
                  (StyleForm[ #, ShowContents -> False]&)], 
                TagBox[
                  StyleBox["d",
                    ShowContents->False],
                  (StyleForm[ #, ShowContents -> False]&)]}]],
            Tensor[ \[CapitalGamma], {a, Void, Void}, {Void, c, d}],
            Editable->False], " ", 
          InterpretationBox[
            SubsuperscriptBox["\[Lambda]", 
              TagBox[
                StyleBox["c",
                  ShowContents->False],
                (StyleForm[ #, ShowContents -> False]&)], "c"],
            Tensor[ \[Lambda], {c}, {Void}],
            Editable->False], " ", 
          InterpretationBox[
            FractionBox[
              RowBox[{"\[DifferentialD]", 
                InterpretationBox[
                  SubsuperscriptBox["x", 
                    TagBox[
                      StyleBox["d",
                        ShowContents->False],
                      (StyleForm[ #, ShowContents -> False]&)], "d"],
                  Tensor[ x, {d}, {Void}],
                  Editable->False]}], \(\[DifferentialD]u\)],
            TotalD[ 
              Tensor[ x, {d}, {Void}], u]]}], "+", 
        InterpretationBox[
          FractionBox[
            RowBox[{"\[DifferentialD]", 
              InterpretationBox[
                SubsuperscriptBox["\[Lambda]", 
                  TagBox[
                    StyleBox["a",
                      ShowContents->False],
                    (StyleForm[ #, ShowContents -> False]&)], "a"],
                Tensor[ \[Lambda], {a}, {Void}],
                Editable->False]}], \(\[DifferentialD]u\)],
          TotalD[ 
            Tensor[ \[Lambda], {a}, {Void}], u]]}], "\[Equal]", 
      InterpretationBox[
        SubsuperscriptBox["zero", 
          TagBox[
            StyleBox["a",
              ShowContents->False],
            (StyleForm[ #, ShowContents -> False]&)], "a"],
        Tensor[ zero, {a}, {Void}],
        Editable->False]}]], "Output"],

Cell[BoxData[
    RowBox[{"{", 
      RowBox[{
        RowBox[{
          RowBox[{
            RowBox[{
              InterpretationBox[
                SubsuperscriptBox["\[CapitalGamma]", 
                  RowBox[{
                    TagBox[
                      StyleBox["1",
                        ShowContents->False],
                      (StyleForm[ #, ShowContents -> False]&)], "c", "d"}], 
                  RowBox[{"1", 
                    TagBox[
                      StyleBox["c",
                        ShowContents->False],
                      (StyleForm[ #, ShowContents -> False]&)], 
                    TagBox[
                      StyleBox["d",
                        ShowContents->False],
                      (StyleForm[ #, ShowContents -> False]&)]}]],
                Tensor[ \[CapitalGamma], {1, Void, Void}, {Void, c, d}],
                Editable->False], " ", 
              InterpretationBox[
                SubsuperscriptBox["\[Lambda]", 
                  TagBox[
                    StyleBox["c",
                      ShowContents->False],
                    (StyleForm[ #, ShowContents -> False]&)], "c"],
                Tensor[ \[Lambda], {c}, {Void}],
                Editable->False], " ", 
              InterpretationBox[
                FractionBox[
                  RowBox[{"\[DifferentialD]", 
                    InterpretationBox[
                      SubsuperscriptBox["x", 
                        TagBox[
                          StyleBox["d",
                            ShowContents->False],
                          (StyleForm[ #, ShowContents -> False]&)], "d"],
                      Tensor[ x, {d}, {Void}],
                      Editable->False]}], \(\[DifferentialD]u\)],
                TotalD[ 
                  Tensor[ x, {d}, {Void}], u]]}], "+", 
            InterpretationBox[
              FractionBox[
                RowBox[{"\[DifferentialD]", 
                  InterpretationBox[
                    SubsuperscriptBox["\[Lambda]", 
                      TagBox[
                        StyleBox["1",
                          ShowContents->False],
                        (StyleForm[ #, ShowContents -> False]&)], "1"],
                    Tensor[ \[Lambda], {1}, {Void}],
                    Editable->False]}], \(\[DifferentialD]u\)],
              TotalD[ 
                Tensor[ \[Lambda], {1}, {Void}], u]]}], "\[Equal]", "0"}], 
        ",", 
        RowBox[{
          RowBox[{
            RowBox[{
              InterpretationBox[
                SubsuperscriptBox["\[CapitalGamma]", 
                  RowBox[{
                    TagBox[
                      StyleBox["2",
                        ShowContents->False],
                      (StyleForm[ #, ShowContents -> False]&)], "c", "d"}], 
                  RowBox[{"2", 
                    TagBox[
                      StyleBox["c",
                        ShowContents->False],
                      (StyleForm[ #, ShowContents -> False]&)], 
                    TagBox[
                      StyleBox["d",
                        ShowContents->False],
                      (StyleForm[ #, ShowContents -> False]&)]}]],
                Tensor[ \[CapitalGamma], {2, Void, Void}, {Void, c, d}],
                Editable->False], " ", 
              InterpretationBox[
                SubsuperscriptBox["\[Lambda]", 
                  TagBox[
                    StyleBox["c",
                      ShowContents->False],
                    (StyleForm[ #, ShowContents -> False]&)], "c"],
                Tensor[ \[Lambda], {c}, {Void}],
                Editable->False], " ", 
              InterpretationBox[
                FractionBox[
                  RowBox[{"\[DifferentialD]", 
                    InterpretationBox[
                      SubsuperscriptBox["x", 
                        TagBox[
                          StyleBox["d",
                            ShowContents->False],
                          (StyleForm[ #, ShowContents -> False]&)], "d"],
                      Tensor[ x, {d}, {Void}],
                      Editable->False]}], \(\[DifferentialD]u\)],
                TotalD[ 
                  Tensor[ x, {d}, {Void}], u]]}], "+", 
            InterpretationBox[
              FractionBox[
                RowBox[{"\[DifferentialD]", 
                  InterpretationBox[
                    SubsuperscriptBox["\[Lambda]", 
                      TagBox[
                        StyleBox["2",
                          ShowContents->False],
                        (StyleForm[ #, ShowContents -> False]&)], "2"],
                    Tensor[ \[Lambda], {2}, {Void}],
                    Editable->False]}], \(\[DifferentialD]u\)],
              TotalD[ 
                Tensor[ \[Lambda], {2}, {Void}], u]]}], "\[Equal]", "0"}]}], 
      "}"}]], "Output"]
}, Open  ]],

Cell["Zero tensors combine as a 0 in sums and products.", "Text"],

Cell[CellGroupData[{

Cell[BoxData[{
    \(HoldForm @@ {f[3, zerod[a]]} /. 
      f \[Rule] Times\), "\[IndentingNewLine]", 
    \(% // ReleaseHold\)}], "Input"],

Cell[BoxData[
    TagBox[
      RowBox[{"3", " ", 
        InterpretationBox[
          SubsuperscriptBox["zero", "a", 
            TagBox[
              StyleBox["a",
                ShowContents->False],
              (StyleForm[ #, ShowContents -> False]&)]],
          Tensor[ zero, {Void}, {a}],
          Editable->False]}],
      HoldForm]], "Output"],

Cell[BoxData[
    InterpretationBox[
      SubsuperscriptBox["zero", "a", 
        TagBox[
          StyleBox["a",
            ShowContents->False],
          (StyleForm[ #, ShowContents -> False]&)]],
      Tensor[ zero, {Void}, {a}],
      Editable->False]], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
    \(HoldForm @@ {f[\[Lambda]u[a], Fu[a], zerod[a]]} /. 
      f \[Rule] Plus\), "\[IndentingNewLine]", 
    \(% // ReleaseHold\)}], "Input"],

Cell[BoxData[
    TagBox[
      RowBox[{
        InterpretationBox[
          SubsuperscriptBox["\[Lambda]", 
            TagBox[
              StyleBox["a",
                ShowContents->False],
              (StyleForm[ #, ShowContents -> False]&)], "a"],
          Tensor[ \[Lambda], {a}, {Void}],
          Editable->False], "+", 
        InterpretationBox[
          SubsuperscriptBox["F", 
            TagBox[
              StyleBox["a",
                ShowContents->False],
              (StyleForm[ #, ShowContents -> False]&)], "a"],
          Tensor[ F, {a}, {Void}],
          Editable->False], "+", 
        InterpretationBox[
          SubsuperscriptBox["zero", "a", 
            TagBox[
              StyleBox["a",
                ShowContents->False],
              (StyleForm[ #, ShowContents -> False]&)]],
          Tensor[ zero, {Void}, {a}],
          Editable->False]}],
      HoldForm]], "Output"],

Cell[BoxData[
    RowBox[{
      InterpretationBox[
        SubsuperscriptBox["F", 
          TagBox[
            StyleBox["a",
              ShowContents->False],
            (StyleForm[ #, ShowContents -> False]&)], "a"],
        Tensor[ F, {a}, {Void}],
        Editable->False], "+", 
      InterpretationBox[
        SubsuperscriptBox["\[Lambda]", 
          TagBox[
            StyleBox["a",
              ShowContents->False],
            (StyleForm[ #, ShowContents -> False]&)], "a"],
        Tensor[ \[Lambda], {a}, {Void}],
        Editable->False]}]], "Output"]
}, Open  ]]
}, Open  ]],

Cell[TextData[Cell[BoxData[GridBox[{
        {
          ButtonBox[
            StyleBox["\[FirstPage]",
              "SR"],
            ButtonFunction:>FrontEndExecute[ {
                FrontEndToken[ 
                  FrontEnd`SelectedNotebook[ ], "ScrollPageFirst"]}],
            ButtonStyle->"SlideHyperlink",
            ButtonNote->"First Slide"], 
          ButtonBox[
            StyleBox["\[LeftPointer]",
              "SR"],
            ButtonFunction:>FrontEndExecute[ {
                FrontEndToken[ 
                  FrontEnd`SelectedNotebook[ ], "ScrollPagePrevious"]}],
            ButtonStyle->"SlideHyperlink",
            ButtonNote->"Previous Slide"], 
          ButtonBox[
            StyleBox["\[RightPointer]",
              "SR"],
            ButtonFunction:>FrontEndExecute[ {
                FrontEndToken[ 
                  FrontEnd`SelectedNotebook[ ], "ScrollPageNext"]}],
            ButtonStyle->"SlideHyperlink",
            ButtonNote->"Next Slide"], 
          ButtonBox[
            StyleBox["\[LastPage]",
              "SR"],
            ButtonFunction:>FrontEndExecute[ {
                FrontEndToken[ 
                  FrontEnd`SelectedNotebook[ ], "ScrollPageLast"]}],
            ButtonStyle->"SlideHyperlink"], " ", 
          ButtonBox[
            StyleBox[
              RowBox[{
                CounterBox["SlideShowNavigationBar"], \(\(\ \)\(of\)\(\ \)\), 
                
                
                CounterBox["SlideShowNavigationBar", {None, 
                  "SlideShowHeader", -1}]}],
              "SR"],
            ButtonFrame->"None"]}
        }]]]], "SlideShowNavigationBar",
  CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell[TextData[{
  StyleBox["Tensorial",
    FontSlant->"Italic"],
  " 4.0 - List of Commands, Help Browser"
}], "Section"],

Cell[CellGroupData[{

Cell[BoxData[
    \(\(?TensorCalculus4`Tensorial`*\)\)], "Input"],

Cell[BoxData[GridBox[{
        {
          StyleBox["TensorCalculus4`Tensorial`",
            FontFamily->"Helvetica",
            FontSize->12,
            FontWeight->"Bold"]},
        {GridBox[{
              {
                ButtonBox[
                  StyleBox["AbsoluteD",
                    "Hyperlink"],
                  
                  ButtonFunction:>(
                    Internal`PutInformation[ #, LongForm -> False]&),
                  ButtonEvaluator->Automatic,
                  
                  ButtonData:>{"Info3386852691-3128032", 
                    "TensorCalculus4`Tensorial`AbsoluteD"},
                  ButtonFrame->"None",
                  ButtonNote->"TensorCalculus4`Tensorial`"], 
                ButtonBox[
                  StyleBox["ExpandPartialD",
                    "Hyperlink"],
                  
                  ButtonFunction:>(
                    Internal`PutInformation[ #, LongForm -> False]&),
                  ButtonEvaluator->Automatic,
                  
                  ButtonData:>{"Info3386852691-3128032", 
                    "TensorCalculus4`Tensorial`ExpandPartialD"},
                  ButtonFrame->"None",
                  ButtonNote->"TensorCalculus4`Tensorial`"], 
                ButtonBox[
                  StyleBox["PermutationPseudotensor",
                    "Hyperlink"],
                  
                  ButtonFunction:>(
                    Internal`PutInformation[ #, LongForm -> False]&),
                  ButtonEvaluator->Automatic,
                  
                  ButtonData:>{"Info3386852691-3128032", 
                    "TensorCalculus4`Tensorial`PermutationPseudotensor"},
                  ButtonFrame->"None",
                  ButtonNote->"TensorCalculus4`Tensorial`"]},
              {
                ButtonBox[
                  StyleBox["AbsoluteDH",
                    "Hyperlink"],
                  
                  ButtonFunction:>(
                    Internal`PutInformation[ #, LongForm -> False]&),
                  ButtonEvaluator->Automatic,
                  
                  ButtonData:>{"Info3386852691-3128032", 
                    "TensorCalculus4`Tensorial`AbsoluteDH"},
                  ButtonFrame->"None",
                  ButtonNote->"TensorCalculus4`Tensorial`"], 
                ButtonBox[
                  StyleBox["ExpandTotalD",
                    "Hyperlink"],
                  
                  ButtonFunction:>(
                    Internal`PutInformation[ #, LongForm -> False]&),
                  ButtonEvaluator->Automatic,
                  
                  ButtonData:>{"Info3386852691-3128032", 
                    "TensorCalculus4`Tensorial`ExpandTotalD"},
                  ButtonFrame->"None",
                  ButtonNote->"TensorCalculus4`Tensorial`"], 
                ButtonBox[
                  StyleBox["PermutationSymbolRule",
                    "Hyperlink"],
                  
                  ButtonFunction:>(
                    Internal`PutInformation[ #, LongForm -> False]&),
                  ButtonEvaluator->Automatic,
                  
                  ButtonData:>{"Info3386852691-3128032", 
                    "TensorCalculus4`Tensorial`PermutationSymbolRule"},
                  ButtonFrame->"None",
                  ButtonNote->"TensorCalculus4`Tensorial`"]},
              {
                ButtonBox[
                  StyleBox["AntiSymmetric",
                    "Hyperlink"],
                  
                  ButtonFunction:>(
                    Internal`PutInformation[ #, LongForm -> False]&),
                  ButtonEvaluator->Automatic,
                  
                  ButtonData:>{"Info3386852691-3128032", 
                    "TensorCalculus4`Tensorial`AntiSymmetric"},
                  ButtonFrame->"None",
                  ButtonNote->"TensorCalculus4`Tensorial`"], 
                ButtonBox[
                  StyleBox["ExtractFreeIndices",
                    "Hyperlink"],
                  
                  ButtonFunction:>(
                    Internal`PutInformation[ #, LongForm -> False]&),
                  ButtonEvaluator->Automatic,
                  
                  ButtonData:>{"Info3386852691-3128032", 
                    "TensorCalculus4`Tensorial`ExtractFreeIndices"},
                  ButtonFrame->"None",
                  ButtonNote->"TensorCalculus4`Tensorial`"], 
                ButtonBox[
                  StyleBox["PermuteTensorSlots",
                    "Hyperlink"],
                  
                  ButtonFunction:>(
                    Internal`PutInformation[ #, LongForm -> False]&),
                  ButtonEvaluator->Automatic,
                  
                  ButtonData:>{"Info3386852691-3128032", 
                    "TensorCalculus4`Tensorial`PermuteTensorSlots"},
                  ButtonFrame->"None",
                  ButtonNote->"TensorCalculus4`Tensorial`"]},
              {
                ButtonBox[
                  StyleBox["ArrayExpansion",
                    "Hyperlink"],
                  
                  ButtonFunction:>(
                    Internal`PutInformation[ #, LongForm -> False]&),
                  ButtonEvaluator->Automatic,
                  
                  ButtonData:>{"Info3386852691-3128032", 
                    "TensorCalculus4`Tensorial`ArrayExpansion"},
                  ButtonFrame->"None",
                  ButtonNote->"TensorCalculus4`Tensorial`"], 
                ButtonBox[
                  StyleBox["ExtractTensorSlots",
                    "Hyperlink"],
                  
                  ButtonFunction:>(
                    Internal`PutInformation[ #, LongForm -> False]&),
                  ButtonEvaluator->Automatic,
                  
                  ButtonData:>{"Info3386852691-3128032", 
                    "TensorCalculus4`Tensorial`ExtractTensorSlots"},
                  ButtonFrame->"None",
                  ButtonNote->"TensorCalculus4`Tensorial`"], 
                ButtonBox[
                  StyleBox["PushOnto",
                    "Hyperlink"],
                  
                  ButtonFunction:>(
                    Internal`PutInformation[ #, LongForm -> False]&),
                  ButtonEvaluator->Automatic,
                  
                  ButtonData:>{"Info3386852691-3128032", 
                    "TensorCalculus4`Tensorial`PushOnto"},
                  ButtonFrame->"None",
                  ButtonNote->"TensorCalculus4`Tensorial`"]},
              {
                ButtonBox[
                  StyleBox["BaseIndexQ",
                    "Hyperlink"],
                  
                  ButtonFunction:>(
                    Internal`PutInformation[ #, LongForm -> False]&),
                  ButtonEvaluator->Automatic,
                  
                  ButtonData:>{"Info3386852691-3128032", 
                    "TensorCalculus4`Tensorial`BaseIndexQ"},
                  ButtonFrame->"None",
                  ButtonNote->"TensorCalculus4`Tensorial`"], 
                ButtonBox[
                  StyleBox["ExtractTermSlots",
                    "Hyperlink"],
                  
                  ButtonFunction:>(
                    Internal`PutInformation[ #, LongForm -> False]&),
                  ButtonEvaluator->Automatic,
                  
                  ButtonData:>{"Info3386852691-3128032", 
                    "TensorCalculus4`Tensorial`ExtractTermSlots"},
                  ButtonFrame->"None",
                  ButtonNote->"TensorCalculus4`Tensorial`"], 
                ButtonBox[
                  StyleBox["RaiseIndex",
                    "Hyperlink"],
                  
                  ButtonFunction:>(
                    Internal`PutInformation[ #, LongForm -> False]&),
                  ButtonEvaluator->Automatic,
                  
                  ButtonData:>{"Info3386852691-3128032", 
                    "TensorCalculus4`Tensorial`RaiseIndex"},
                  ButtonFrame->"None",
                  ButtonNote->"TensorCalculus4`Tensorial`"]},
              {
                ButtonBox[
                  StyleBox["BaseIndices",
                    "Hyperlink"],
                  
                  ButtonFunction:>(
                    Internal`PutInformation[ #, LongForm -> False]&),
                  ButtonEvaluator->Automatic,
                  
                  ButtonData:>{"Info3386852691-3128032", 
                    "TensorCalculus4`Tensorial`BaseIndices"},
                  ButtonFrame->"None",
                  ButtonNote->"TensorCalculus4`Tensorial`"], 
                ButtonBox[
                  StyleBox["Flavor",
                    "Hyperlink"],
                  
                  ButtonFunction:>(
                    Internal`PutInformation[ #, LongForm -> False]&),
                  ButtonEvaluator->Automatic,
                  
                  ButtonData:>{"Info3386852691-3128032", 
                    "TensorCalculus4`Tensorial`Flavor"},
                  ButtonFrame->"None",
                  ButtonNote->"TensorCalculus4`Tensorial`"], 
                ButtonBox[
                  StyleBox["RawIndex",
                    "Hyperlink"],
                  
                  ButtonFunction:>(
                    Internal`PutInformation[ #, LongForm -> False]&),
                  ButtonEvaluator->Automatic,
                  
                  ButtonData:>{"Info3386852691-3128032", 
                    "TensorCalculus4`Tensorial`RawIndex"},
                  ButtonFrame->"None",
                  ButtonNote->"TensorCalculus4`Tensorial`"]},
              {
                ButtonBox[
                  StyleBox["BasisDotProductRules",
                    "Hyperlink"],
                  
                  ButtonFunction:>(
                    Internal`PutInformation[ #, LongForm -> False]&),
                  ButtonEvaluator->Automatic,
                  
                  ButtonData:>{"Info3386852691-3128032", 
                    "TensorCalculus4`Tensorial`BasisDotProductRules"},
                  ButtonFrame->"None",
                  ButtonNote->"TensorCalculus4`Tensorial`"], 
                ButtonBox[
                  StyleBox["FreeIndices",
                    "Hyperlink"],
                  
                  ButtonFunction:>(
                    Internal`PutInformation[ #, LongForm -> False]&),
                  ButtonEvaluator->Automatic,
                  
                  ButtonData:>{"Info3386852691-3128032", 
                    "TensorCalculus4`Tensorial`FreeIndices"},
                  ButtonFrame->"None",
                  ButtonNote->"TensorCalculus4`Tensorial`"], 
                ButtonBox[
                  StyleBox["ReplaceIndex",
                    "Hyperlink"],
                  
                  ButtonFunction:>(
                    Internal`PutInformation[ #, LongForm -> False]&),
                  ButtonEvaluator->Automatic,
                  
                  ButtonData:>{"Info3386852691-3128032", 
                    "TensorCalculus4`Tensorial`ReplaceIndex"},
                  ButtonFrame->"None",
                  ButtonNote->"TensorCalculus4`Tensorial`"]},
              {
                ButtonBox[
                  StyleBox["BasisExpandCovariantD",
                    "Hyperlink"],
                  
                  ButtonFunction:>(
                    Internal`PutInformation[ #, LongForm -> False]&),
                  ButtonEvaluator->Automatic,
                  
                  ButtonData:>{"Info3386852691-3128032", 
                    "TensorCalculus4`Tensorial`BasisExpandCovariantD"},
                  ButtonFrame->"None",
                  ButtonNote->"TensorCalculus4`Tensorial`"], 
                ButtonBox[
                  StyleBox["FreeTensorQ",
                    "Hyperlink"],
                  
                  ButtonFunction:>(
                    Internal`PutInformation[ #, LongForm -> False]&),
                  ButtonEvaluator->Automatic,
                  
                  ButtonData:>{"Info3386852691-3128032", 
                    "TensorCalculus4`Tensorial`FreeTensorQ"},
                  ButtonFrame->"None",
                  ButtonNote->"TensorCalculus4`Tensorial`"], 
                ButtonBox[
                  StyleBox["ReverseBasisDotProductRules",
                    "Hyperlink"],
                  
                  ButtonFunction:>(
                    Internal`PutInformation[ #, LongForm -> False]&),
                  ButtonEvaluator->Automatic,
                  
                  ButtonData:>{"Info3386852691-3128032", 
                    "TensorCalculus4`Tensorial`ReverseBasisDotProductRules"},
                  ButtonFrame->"None",
                  ButtonNote->"TensorCalculus4`Tensorial`"]},
              {
                ButtonBox[
                  StyleBox["CalculateChristoffels",
                    "Hyperlink"],
                  
                  ButtonFunction:>(
                    Internal`PutInformation[ #, LongForm -> False]&),
                  ButtonEvaluator->Automatic,
                  
                  ButtonData:>{"Info3386852691-3128032", 
                    "TensorCalculus4`Tensorial`CalculateChristoffels"},
                  ButtonFrame->"None",
                  ButtonNote->"TensorCalculus4`Tensorial`"], 
                ButtonBox[
                  StyleBox["FreeTotalDQ",
                    "Hyperlink"],
                  
                  ButtonFunction:>(
                    Internal`PutInformation[ #, LongForm -> False]&),
                  ButtonEvaluator->Automatic,
                  
                  ButtonData:>{"Info3386852691-3128032", 
                    "TensorCalculus4`Tensorial`FreeTotalDQ"},
                  ButtonFrame->"None",
                  ButtonNote->"TensorCalculus4`Tensorial`"], 
                ButtonBox[
                  StyleBox["ReversePartialTotalChainRule",
                    "Hyperlink"],
                  
                  ButtonFunction:>(
                    Internal`PutInformation[ #, LongForm -> False]&),
                  ButtonEvaluator->Automatic,
                  
                  ButtonData:>{"Info3386852691-3128032", 
                    "TensorCalculus4`Tensorial`ReversePartialTotalChainRule"},
                  
                  ButtonFrame->"None",
                  ButtonNote->"TensorCalculus4`Tensorial`"]},
              {
                ButtonBox[
                  StyleBox["CalculateRiemannd",
                    "Hyperlink"],
                  
                  ButtonFunction:>(
                    Internal`PutInformation[ #, LongForm -> False]&),
                  ButtonEvaluator->Automatic,
                  
                  ButtonData:>{"Info3386852691-3128032", 
                    "TensorCalculus4`Tensorial`CalculateRiemannd"},
                  ButtonFrame->"None",
                  ButtonNote->"TensorCalculus4`Tensorial`"], 
                ButtonBox[
                  StyleBox["FullKroneckerExpand",
                    "Hyperlink"],
                  
                  ButtonFunction:>(
                    Internal`PutInformation[ #, LongForm -> False]&),
                  ButtonEvaluator->Automatic,
                  
                  ButtonData:>{"Info3386852691-3128032", 
                    "TensorCalculus4`Tensorial`FullKroneckerExpand"},
                  ButtonFrame->"None",
                  ButtonNote->"TensorCalculus4`Tensorial`"], 
                ButtonBox[
                  StyleBox["SelectedTensorRules",
                    "Hyperlink"],
                  
                  ButtonFunction:>(
                    Internal`PutInformation[ #, LongForm -> False]&),
                  ButtonEvaluator->Automatic,
                  
                  ButtonData:>{"Info3386852691-3128032", 
                    "TensorCalculus4`Tensorial`SelectedTensorRules"},
                  ButtonFrame->"None",
                  ButtonNote->"TensorCalculus4`Tensorial`"]},
              {
                ButtonBox[
                  StyleBox["CalculateRRRG",
                    "Hyperlink"],
                  
                  ButtonFunction:>(
                    Internal`PutInformation[ #, LongForm -> False]&),
                  ButtonEvaluator->Automatic,
                  
                  ButtonData:>{"Info3386852691-3128032", 
                    "TensorCalculus4`Tensorial`CalculateRRRG"},
                  ButtonFrame->"None",
                  ButtonNote->"TensorCalculus4`Tensorial`"], 
                ButtonBox[
                  StyleBox["GenerateBasisTensors",
                    "Hyperlink"],
                  
                  ButtonFunction:>(
                    Internal`PutInformation[ #, LongForm -> False]&),
                  ButtonEvaluator->Automatic,
                  
                  ButtonData:>{"Info3386852691-3128032", 
                    "TensorCalculus4`Tensorial`GenerateBasisTensors"},
                  ButtonFrame->"None",
                  ButtonNote->"TensorCalculus4`Tensorial`"], 
                ButtonBox[
                  StyleBox["SetCovariantDisplay",
                    "Hyperlink"],
                  ButtonFunction:>(
                    Internal`PutInformation[ #, LongForm -> False]&),
                  ButtonEvaluator->Automatic,
                  
                  ButtonData:>{"Info3386852691-3128032", 
                    "TensorCalculus4`Tensorial`SetCovariantDisplay"},
                  ButtonFrame->"None",
                  ButtonNote->"TensorCalculus4`Tensorial`"]},
              {
                ButtonBox[
                  StyleBox["CalculateWeyldown",
                    "Hyperlink"],
                  
                  ButtonFunction:>(
                    Internal`PutInformation[ #, LongForm -> False]&),
                  ButtonEvaluator->Automatic,
                  
                  ButtonData:>{"Info3386852691-3128032", 
                    "TensorCalculus4`Tensorial`CalculateWeyldown"},
                  ButtonFrame->"None",
                  ButtonNote->"TensorCalculus4`Tensorial`"], 
                ButtonBox[
                  StyleBox["GetBaseIndices",
                    "Hyperlink"],
                  
                  ButtonFunction:>(
                    Internal`PutInformation[ #, LongForm -> False]&),
                  ButtonEvaluator->Automatic,
                  
                  ButtonData:>{"Info3386852691-3128032", 
                    "TensorCalculus4`Tensorial`GetBaseIndices"},
                  ButtonFrame->"None",
                  ButtonNote->"TensorCalculus4`Tensorial`"], 
                ButtonBox[
                  StyleBox["SetDerivativeSymbols",
                    "Hyperlink"],
                  
                  ButtonFunction:>(
                    Internal`PutInformation[ #, LongForm -> False]&),
                  ButtonEvaluator->Automatic,
                  
                  ButtonData:>{"Info3386852691-3128032", 
                    "TensorCalculus4`Tensorial`SetDerivativeSymbols"},
                  ButtonFrame->"None",
                  ButtonNote->"TensorCalculus4`Tensorial`"]},
              {
                ButtonBox[
                  StyleBox["CanonicalUpDowns",
                    "Hyperlink"],
                  ButtonFunction:>(
                    Internal`PutInformation[ #, LongForm -> False]&),
                  ButtonEvaluator->Automatic,
                  
                  ButtonData:>{"Info3386852691-3128032", 
                    "TensorCalculus4`Tensorial`CanonicalUpDowns"},
                  ButtonFrame->"None",
                  ButtonNote->"TensorCalculus4`Tensorial`"], 
                ButtonBox[
                  StyleBox["GetIndexFlavor",
                    "Hyperlink"],
                  
                  ButtonFunction:>(
                    Internal`PutInformation[ #, LongForm -> False]&),
                  ButtonEvaluator->Automatic,
                  
                  ButtonData:>{"Info3386852691-3128032", 
                    "TensorCalculus4`Tensorial`GetIndexFlavor"},
                  ButtonFrame->"None",
                  ButtonNote->"TensorCalculus4`Tensorial`"], 
                ButtonBox[
                  StyleBox["SetLieDisplay",
                    "Hyperlink"],
                  
                  ButtonFunction:>(
                    Internal`PutInformation[ #, LongForm -> False]&),
                  ButtonEvaluator->Automatic,
                  
                  ButtonData:>{"Info3386852691-3128032", 
                    "TensorCalculus4`Tensorial`SetLieDisplay"},
                  ButtonFrame->"None",
                  ButtonNote->"TensorCalculus4`Tensorial`"]},
              {
                ButtonBox[
                  StyleBox["CircleEvalRule",
                    "Hyperlink"],
                  
                  ButtonFunction:>(
                    Internal`PutInformation[ #, LongForm -> False]&),
                  ButtonEvaluator->Automatic,
                  
                  ButtonData:>{"Info3386852691-3128032", 
                    "TensorCalculus4`Tensorial`CircleEvalRule"},
                  ButtonFrame->"None",
                  ButtonNote->"TensorCalculus4`Tensorial`"], 
                ButtonBox[
                  StyleBox["HoldOp",
                    "Hyperlink"],
                  
                  ButtonFunction:>(
                    Internal`PutInformation[ #, LongForm -> False]&),
                  ButtonEvaluator->Automatic,
                  
                  ButtonData:>{"Info3386852691-3128032", 
                    "TensorCalculus4`Tensorial`HoldOp"},
                  ButtonFrame->"None",
                  ButtonNote->"TensorCalculus4`Tensorial`"], 
                ButtonBox[
                  StyleBox["SetPartialDisplay",
                    "Hyperlink"],
                  
                  ButtonFunction:>(
                    Internal`PutInformation[ #, LongForm -> False]&),
                  ButtonEvaluator->Automatic,
                  
                  ButtonData:>{"Info3386852691-3128032", 
                    "TensorCalculus4`Tensorial`SetPartialDisplay"},
                  ButtonFrame->"None",
                  ButtonNote->"TensorCalculus4`Tensorial`"]},
              {
                ButtonBox[
                  StyleBox["CircleTimes",
                    "Hyperlink"],
                  
                  ButtonFunction:>(
                    Internal`PutInformation[ #, LongForm -> False]&),
                  ButtonEvaluator->Automatic,
                  
                  ButtonData:>{"Info3386852691-3128032", 
                    "TensorCalculus4`Tensorial`CircleTimes"},
                  ButtonFrame->"None",
                  ButtonNote->"TensorCalculus4`Tensorial`"], 
                ButtonBox[
                  StyleBox["HoldRelease",
                    "Hyperlink"],
                  
                  ButtonFunction:>(
                    Internal`PutInformation[ #, LongForm -> False]&),
                  ButtonEvaluator->Automatic,
                  
                  ButtonData:>{"Info3386852691-3128032", 
                    "TensorCalculus4`Tensorial`HoldRelease"},
                  ButtonFrame->"None",
                  ButtonNote->"TensorCalculus4`Tensorial`"], 
                ButtonBox[
                  StyleBox["SetRicciContraction",
                    "Hyperlink"],
                  
                  ButtonFunction:>(
                    Internal`PutInformation[ #, LongForm -> False]&),
                  ButtonEvaluator->Automatic,
                  ButtonData:>{"Info3386852691-3128032", 
                    "TensorCalculus4`Tensorial`SetRicciContraction"},
                  ButtonFrame->"None",
                  ButtonNote->"TensorCalculus4`Tensorial`"]},
              {
                ButtonBox[
                  StyleBox["ClearIndexFlavor",
                    "Hyperlink"],
                  
                  ButtonFunction:>(
                    Internal`PutInformation[ #, LongForm -> False]&),
                  ButtonEvaluator->Automatic,
                  
                  ButtonData:>{"Info3386852691-3128032", 
                    "TensorCalculus4`Tensorial`ClearIndexFlavor"},
                  ButtonFrame->"None",
                  ButtonNote->"TensorCalculus4`Tensorial`"], 
                ButtonBox[
                  StyleBox["IndexChange",
                    "Hyperlink"],
                  
                  ButtonFunction:>(
                    Internal`PutInformation[ #, LongForm -> False]&),
                  ButtonEvaluator->Automatic,
                  
                  ButtonData:>{"Info3386852691-3128032", 
                    "TensorCalculus4`Tensorial`IndexChange"},
                  ButtonFrame->"None",
                  ButtonNote->"TensorCalculus4`Tensorial`"], 
                ButtonBox[
                  StyleBox["SetScalarSingleCovariantD",
                    "Hyperlink"],
                  
                  ButtonFunction:>(
                    Internal`PutInformation[ #, LongForm -> False]&),
                  ButtonEvaluator->Automatic,
                  
                  ButtonData:>{"Info3386852691-3128032", 
                    "TensorCalculus4`Tensorial`SetScalarSingleCovariantD"},
                  ButtonFrame->"None",
                  ButtonNote->"TensorCalculus4`Tensorial`"]},
              {
                ButtonBox[
                  StyleBox["ClearTensorLabelFormat",
                    "Hyperlink"],
                  
                  ButtonFunction:>(
                    Internal`PutInformation[ #, LongForm -> False]&),
                  ButtonEvaluator->Automatic,
                  ButtonData:>{"Info3386852691-3128032", 
                    "TensorCalculus4`Tensorial`ClearTensorLabelFormat"},
                  ButtonFrame->"None",
                  ButtonNote->"TensorCalculus4`Tensorial`"], 
                ButtonBox[
                  StyleBox["IndexFlavorQ",
                    "Hyperlink"],
                  
                  ButtonFunction:>(
                    Internal`PutInformation[ #, LongForm -> False]&),
                  ButtonEvaluator->Automatic,
                  
                  ButtonData:>{"Info3386852691-3128032", 
                    "TensorCalculus4`Tensorial`IndexFlavorQ"},
                  ButtonFrame->"None",
                  ButtonNote->"TensorCalculus4`Tensorial`"], 
                ButtonBox[
                  StyleBox["SetTensorValueRules",
                    "Hyperlink"],
                  
                  ButtonFunction:>(
                    Internal`PutInformation[ #, LongForm -> False]&),
                  ButtonEvaluator->Automatic,
                  
                  ButtonData:>{"Info3386852691-3128032", 
                    "TensorCalculus4`Tensorial`SetTensorValueRules"},
                  ButtonFrame->"None",
                  ButtonNote->"TensorCalculus4`Tensorial`"]},
              {
                ButtonBox[
                  StyleBox["ClearTensorShortcuts",
                    "Hyperlink"],
                  
                  ButtonFunction:>(
                    Internal`PutInformation[ #, LongForm -> False]&),
                  ButtonEvaluator->Automatic,
                  
                  ButtonData:>{"Info3386852691-3128032", 
                    "TensorCalculus4`Tensorial`ClearTensorShortcuts"},
                  ButtonFrame->"None",
                  ButtonNote->"TensorCalculus4`Tensorial`"], 
                ButtonBox[
                  StyleBox["IndexFlavors",
                    "Hyperlink"],
                  
                  ButtonFunction:>(
                    Internal`PutInformation[ #, LongForm -> False]&),
                  ButtonEvaluator->Automatic,
                  
                  ButtonData:>{"Info3386852691-3128032", 
                    "TensorCalculus4`Tensorial`IndexFlavors"},
                  ButtonFrame->"None",
                  ButtonNote->"TensorCalculus4`Tensorial`"], 
                ButtonBox[
                  StyleBox["SetTensorValues",
                    "Hyperlink"],
                  
                  ButtonFunction:>(
                    Internal`PutInformation[ #, LongForm -> False]&),
                  ButtonEvaluator->Automatic,
                  
                  ButtonData:>{"Info3386852691-3128032", 
                    "TensorCalculus4`Tensorial`SetTensorValues"},
                  ButtonFrame->"None",
                  ButtonNote->"TensorCalculus4`Tensorial`"]},
              {
                ButtonBox[
                  StyleBox["ClearTensorValues",
                    "Hyperlink"],
                  
                  ButtonFunction:>(
                    Internal`PutInformation[ #, LongForm -> False]&),
                  ButtonEvaluator->Automatic,
                  
                  ButtonData:>{"Info3386852691-3128032", 
                    "TensorCalculus4`Tensorial`ClearTensorValues"},
                  ButtonFrame->"None",
                  ButtonNote->"TensorCalculus4`Tensorial`"], 
                ButtonBox[
                  StyleBox["IndexParsingRules",
                    "Hyperlink"],
                  
                  ButtonFunction:>(
                    Internal`PutInformation[ #, LongForm -> False]&),
                  ButtonEvaluator->Automatic,
                  
                  ButtonData:>{"Info3386852691-3128032", 
                    "TensorCalculus4`Tensorial`IndexParsingRules"},
                  ButtonFrame->"None",
                  ButtonNote->"TensorCalculus4`Tensorial`"], 
                ButtonBox[
                  StyleBox["SimplifyTensorSum",
                    "Hyperlink"],
                  
                  ButtonFunction:>(
                    Internal`PutInformation[ #, LongForm -> False]&),
                  ButtonEvaluator->Automatic,
                  
                  ButtonData:>{"Info3386852691-3128032", 
                    "TensorCalculus4`Tensorial`SimplifyTensorSum"},
                  ButtonFrame->"None",
                  ButtonNote->"TensorCalculus4`Tensorial`"]},
              {
                ButtonBox[
                  StyleBox["CompleteBaseIndices",
                    "Hyperlink"],
                  
                  ButtonFunction:>(
                    Internal`PutInformation[ #, LongForm -> False]&),
                  ButtonEvaluator->Automatic,
                  
                  ButtonData:>{"Info3386852691-3128032", 
                    "TensorCalculus4`Tensorial`CompleteBaseIndices"},
                  ButtonFrame->"None",
                  ButtonNote->"TensorCalculus4`Tensorial`"], 
                ButtonBox[
                  StyleBox["KroneckerAbsorb",
                    "Hyperlink"],
                  
                  ButtonFunction:>(
                    Internal`PutInformation[ #, LongForm -> False]&),
                  ButtonEvaluator->Automatic,
                  
                  ButtonData:>{"Info3386852691-3128032", 
                    "TensorCalculus4`Tensorial`KroneckerAbsorb"},
                  ButtonFrame->"None",
                  ButtonNote->"TensorCalculus4`Tensorial`"], 
                ButtonBox[
                  StyleBox["SlotsToTensor",
                    "Hyperlink"],
                  
                  ButtonFunction:>(
                    Internal`PutInformation[ #, LongForm -> False]&),
                  ButtonEvaluator->Automatic,
                  
                  ButtonData:>{"Info3386852691-3128032", 
                    "TensorCalculus4`Tensorial`SlotsToTensor"},
                  ButtonFrame->"None",
                  ButtonNote->"TensorCalculus4`Tensorial`"]},
              {
                ButtonBox[
                  StyleBox["ConstructDirectProduct",
                    "Hyperlink"],
                  
                  ButtonFunction:>(
                    Internal`PutInformation[ #, LongForm -> False]&),
                  ButtonEvaluator->Automatic,
                  
                  ButtonData:>{"Info3386852691-3128032", 
                    "TensorCalculus4`Tensorial`ConstructDirectProduct"},
                  ButtonFrame->"None",
                  ButtonNote->"TensorCalculus4`Tensorial`"], 
                ButtonBox[
                  StyleBox["KroneckerContract",
                    "Hyperlink"],
                  
                  ButtonFunction:>(
                    Internal`PutInformation[ #, LongForm -> False]&),
                  ButtonEvaluator->Automatic,
                  
                  ButtonData:>{"Info3386852691-3128032", 
                    "TensorCalculus4`Tensorial`KroneckerContract"},
                  ButtonFrame->"None",
                  ButtonNote->"TensorCalculus4`Tensorial`"], 
                ButtonBox[
                  StyleBox["SumArrayExpansion",
                    "Hyperlink"],
                  
                  ButtonFunction:>(
                    Internal`PutInformation[ #, LongForm -> False]&),
                  ButtonEvaluator->Automatic,
                  
                  ButtonData:>{"Info3386852691-3128032", 
                    "TensorCalculus4`Tensorial`SumArrayExpansion"},
                  ButtonFrame->"None",
                  ButtonNote->"TensorCalculus4`Tensorial`"]},
              {
                ButtonBox[
                  StyleBox["ContractArray",
                    "Hyperlink"],
                  
                  ButtonFunction:>(
                    Internal`PutInformation[ #, LongForm -> False]&),
                  ButtonEvaluator->Automatic,
                  
                  ButtonData:>{"Info3386852691-3128032", 
                    "TensorCalculus4`Tensorial`ContractArray"},
                  ButtonFrame->"None",
                  ButtonNote->"TensorCalculus4`Tensorial`"], 
                ButtonBox[
                  StyleBox["KroneckerEvaluate",
                    "Hyperlink"],
                  
                  ButtonFunction:>(
                    Internal`PutInformation[ #, LongForm -> False]&),
                  ButtonEvaluator->Automatic,
                  
                  ButtonData:>{"Info3386852691-3128032", 
                    "TensorCalculus4`Tensorial`KroneckerEvaluate"},
                  ButtonFrame->"None",
                  ButtonNote->"TensorCalculus4`Tensorial`"], 
                ButtonBox[
                  StyleBox["SumExpansion",
                    "Hyperlink"],
                  
                  ButtonFunction:>(
                    Internal`PutInformation[ #, LongForm -> False]&),
                  ButtonEvaluator->Automatic,
                  
                  ButtonData:>{"Info3386852691-3128032", 
                    "TensorCalculus4`Tensorial`SumExpansion"},
                  ButtonFrame->"None",
                  ButtonNote->"TensorCalculus4`Tensorial`"]},
              {
                ButtonBox[
                  StyleBox["CoordinatesToTensors",
                    "Hyperlink"],
                  
                  ButtonFunction:>(
                    Internal`PutInformation[ #, LongForm -> False]&),
                  ButtonEvaluator->Automatic,
                  
                  ButtonData:>{"Info3386852691-3128032", 
                    "TensorCalculus4`Tensorial`CoordinatesToTensors"},
                  ButtonFrame->"None",
                  ButtonNote->"TensorCalculus4`Tensorial`"], 
                ButtonBox[
                  StyleBox["LHSSymbolsToPatterns",
                    "Hyperlink"],
                  
                  ButtonFunction:>(
                    Internal`PutInformation[ #, LongForm -> False]&),
                  ButtonEvaluator->Automatic,
                  
                  ButtonData:>{"Info3386852691-3128032", 
                    "TensorCalculus4`Tensorial`LHSSymbolsToPatterns"},
                  ButtonFrame->"None",
                  ButtonNote->"TensorCalculus4`Tensorial`"], 
                ButtonBox[
                  StyleBox["SymbolicIndexQ",
                    "Hyperlink"],
                  
                  ButtonFunction:>(
                    Internal`PutInformation[ #, LongForm -> False]&),
                  ButtonEvaluator->Automatic,
                  
                  ButtonData:>{"Info3386852691-3128032", 
                    "TensorCalculus4`Tensorial`SymbolicIndexQ"},
                  ButtonFrame->"None",
                  ButtonNote->"TensorCalculus4`Tensorial`"]},
              {
                ButtonBox[
                  StyleBox["CovariantCommutator",
                    "Hyperlink"],
                  
                  ButtonFunction:>(
                    Internal`PutInformation[ #, LongForm -> False]&),
                  ButtonEvaluator->Automatic,
                  
                  ButtonData:>{"Info3386852691-3128032", 
                    "TensorCalculus4`Tensorial`CovariantCommutator"},
                  ButtonFrame->"None",
                  ButtonNote->"TensorCalculus4`Tensorial`"], 
                ButtonBox[
                  StyleBox["LieD",
                    "Hyperlink"],
                  
                  ButtonFunction:>(
                    Internal`PutInformation[ #, LongForm -> False]&),
                  ButtonEvaluator->Automatic,
                  
                  ButtonData:>{"Info3386852691-3128032", 
                    "TensorCalculus4`Tensorial`LieD"},
                  ButtonFrame->"None",
                  ButtonNote->"TensorCalculus4`Tensorial`"], 
                ButtonBox[
                  StyleBox["SymbolsToPatterns",
                    "Hyperlink"],
                  
                  ButtonFunction:>(
                    Internal`PutInformation[ #, LongForm -> False]&),
                  ButtonEvaluator->Automatic,
                  
                  ButtonData:>{"Info3386852691-3128032", 
                    "TensorCalculus4`Tensorial`SymbolsToPatterns"},
                  ButtonFrame->"None",
                  ButtonNote->"TensorCalculus4`Tensorial`"]},
              {
                ButtonBox[
                  StyleBox["CovariantD",
                    "Hyperlink"],
                  
                  ButtonFunction:>(
                    Internal`PutInformation[ #, LongForm -> False]&),
                  ButtonEvaluator->Automatic,
                  
                  ButtonData:>{"Info3386852691-3128032", 
                    "TensorCalculus4`Tensorial`CovariantD"},
                  ButtonFrame->"None",
                  ButtonNote->"TensorCalculus4`Tensorial`"], 
                ButtonBox[
                  StyleBox["LieDH",
                    "Hyperlink"],
                  
                  ButtonFunction:>(
                    Internal`PutInformation[ #, LongForm -> False]&),
                  ButtonEvaluator->Automatic,
                  
                  ButtonData:>{"Info3386852691-3128032", 
                    "TensorCalculus4`Tensorial`LieDH"},
                  ButtonFrame->"None",
                  ButtonNote->"TensorCalculus4`Tensorial`"], 
                ButtonBox[
                  StyleBox["Symmetric",
                    "Hyperlink"],
                  
                  ButtonFunction:>(
                    Internal`PutInformation[ #, LongForm -> False]&),
                  ButtonEvaluator->Automatic,
                  
                  ButtonData:>{"Info3386852691-3128032", 
                    "TensorCalculus4`Tensorial`Symmetric"},
                  ButtonFrame->"None",
                  ButtonNote->"TensorCalculus4`Tensorial`"]},
              {
                ButtonBox[
                  StyleBox["CovariantDH",
                    "Hyperlink"],
                  
                  ButtonFunction:>(
                    Internal`PutInformation[ #, LongForm -> False]&),
                  ButtonEvaluator->Automatic,
                  
                  ButtonData:>{"Info3386852691-3128032", 
                    "TensorCalculus4`Tensorial`CovariantDH"},
                  ButtonFrame->"None",
                  ButtonNote->"TensorCalculus4`Tensorial`"], 
                ButtonBox[
                  StyleBox["LinearBreakout",
                    "Hyperlink"],
                  
                  ButtonFunction:>(
                    Internal`PutInformation[ #, LongForm -> False]&),
                  ButtonEvaluator->Automatic,
                  
                  ButtonData:>{"Info3386852691-3128032", 
                    "TensorCalculus4`Tensorial`LinearBreakout"},
                  ButtonFrame->"None",
                  ButtonNote->"TensorCalculus4`Tensorial`"], 
                ButtonBox[
                  StyleBox["SymmetrizePattern",
                    "Hyperlink"],
                  
                  ButtonFunction:>(
                    Internal`PutInformation[ #, LongForm -> False]&),
                  ButtonEvaluator->Automatic,
                  
                  ButtonData:>{"Info3386852691-3128032", 
                    "TensorCalculus4`Tensorial`SymmetrizePattern"},
                  ButtonFrame->"None",
                  ButtonNote->"TensorCalculus4`Tensorial`"]},
              {
                ButtonBox[
                  StyleBox["DeclareBaseIndices",
                    "Hyperlink"],
                  
                  ButtonFunction:>(
                    Internal`PutInformation[ #, LongForm -> False]&),
                  ButtonEvaluator->Automatic,
                  
                  ButtonData:>{"Info3386852691-3128032", 
                    "TensorCalculus4`Tensorial`DeclareBaseIndices"},
                  ButtonFrame->"None",
                  ButtonNote->"TensorCalculus4`Tensorial`"], 
                ButtonBox[
                  StyleBox["LowerIndex",
                    "Hyperlink"],
                  
                  ButtonFunction:>(
                    Internal`PutInformation[ #, LongForm -> False]&),
                  ButtonEvaluator->Automatic,
                  
                  ButtonData:>{"Info3386852691-3128032", 
                    "TensorCalculus4`Tensorial`LowerIndex"},
                  ButtonFrame->"None",
                  ButtonNote->"TensorCalculus4`Tensorial`"], 
                ButtonBox[
                  StyleBox["SymmetrizeSlots",
                    "Hyperlink"],
                  
                  ButtonFunction:>(
                    Internal`PutInformation[ #, LongForm -> False]&),
                  ButtonEvaluator->Automatic,
                  
                  ButtonData:>{"Info3386852691-3128032", 
                    "TensorCalculus4`Tensorial`SymmetrizeSlots"},
                  ButtonFrame->"None",
                  ButtonNote->"TensorCalculus4`Tensorial`"]},
              {
                ButtonBox[
                  StyleBox["DeclareIndexFlavor",
                    "Hyperlink"],
                  
                  ButtonFunction:>(
                    Internal`PutInformation[ #, LongForm -> False]&),
                  ButtonEvaluator->Automatic,
                  ButtonData:>{"Info3386852691-3128032", 
                    "TensorCalculus4`Tensorial`DeclareIndexFlavor"},
                  ButtonFrame->"None",
                  ButtonNote->"TensorCalculus4`Tensorial`"], 
                ButtonBox[
                  StyleBox["MapLevelParts",
                    "Hyperlink"],
                  
                  ButtonFunction:>(
                    Internal`PutInformation[ #, LongForm -> False]&),
                  ButtonEvaluator->Automatic,
                  
                  ButtonData:>{"Info3386852691-3128032", 
                    "TensorCalculus4`Tensorial`MapLevelParts"},
                  ButtonFrame->"None",
                  ButtonNote->"TensorCalculus4`Tensorial`"], 
                ButtonBox[
                  StyleBox["Tensor",
                    "Hyperlink"],
                  
                  ButtonFunction:>(
                    Internal`PutInformation[ #, LongForm -> False]&),
                  ButtonEvaluator->Automatic,
                  
                  ButtonData:>{"Info3386852691-3128032", 
                    "TensorCalculus4`Tensorial`Tensor"},
                  ButtonFrame->"None",
                  ButtonNote->"TensorCalculus4`Tensorial`"]},
              {
                ButtonBox[
                  StyleBox["DeclarePatternSymmetries",
                    "Hyperlink"],
                  
                  ButtonFunction:>(
                    Internal`PutInformation[ #, LongForm -> False]&),
                  ButtonEvaluator->Automatic,
                  
                  ButtonData:>{"Info3386852691-3128032", 
                    "TensorCalculus4`Tensorial`DeclarePatternSymmetries"},
                  ButtonFrame->"None",
                  ButtonNote->"TensorCalculus4`Tensorial`"], 
                ButtonBox[
                  StyleBox["MapLevelPatterns",
                    "Hyperlink"],
                  
                  ButtonFunction:>(
                    Internal`PutInformation[ #, LongForm -> False]&),
                  ButtonEvaluator->Automatic,
                  
                  ButtonData:>{"Info3386852691-3128032", 
                    "TensorCalculus4`Tensorial`MapLevelPatterns"},
                  ButtonFrame->"None",
                  ButtonNote->"TensorCalculus4`Tensorial`"], 
                ButtonBox[
                  StyleBox["TensorLabelFormat",
                    "Hyperlink"],
                  
                  ButtonFunction:>(
                    Internal`PutInformation[ #, LongForm -> False]&),
                  ButtonEvaluator->Automatic,
                  
                  ButtonData:>{"Info3386852691-3128032", 
                    "TensorCalculus4`Tensorial`TensorLabelFormat"},
                  ButtonFrame->"None",
                  ButtonNote->"TensorCalculus4`Tensorial`"]},
              {
                ButtonBox[
                  StyleBox["DeclareZeroTensor",
                    "Hyperlink"],
                  
                  ButtonFunction:>(
                    Internal`PutInformation[ #, LongForm -> False]&),
                  ButtonEvaluator->Automatic,
                  
                  ButtonData:>{"Info3386852691-3128032", 
                    "TensorCalculus4`Tensorial`DeclareZeroTensor"},
                  ButtonFrame->"None",
                  ButtonNote->"TensorCalculus4`Tensorial`"], 
                ButtonBox[
                  StyleBox["MetricSimplify",
                    "Hyperlink"],
                  
                  ButtonFunction:>(
                    Internal`PutInformation[ #, LongForm -> False]&),
                  ButtonEvaluator->Automatic,
                  
                  ButtonData:>{"Info3386852691-3128032", 
                    "TensorCalculus4`Tensorial`MetricSimplify"},
                  ButtonFrame->"None",
                  ButtonNote->"TensorCalculus4`Tensorial`"], 
                ButtonBox[
                  StyleBox["TensorSimplify",
                    "Hyperlink"],
                  
                  ButtonFunction:>(
                    Internal`PutInformation[ #, LongForm -> False]&),
                  ButtonEvaluator->Automatic,
                  
                  ButtonData:>{"Info3386852691-3128032", 
                    "TensorCalculus4`Tensorial`TensorSimplify"},
                  ButtonFrame->"None",
                  ButtonNote->"TensorCalculus4`Tensorial`"]},
              {
                ButtonBox[
                  StyleBox["DefineTensorShortcuts",
                    "Hyperlink"],
                  
                  ButtonFunction:>(
                    Internal`PutInformation[ #, LongForm -> False]&),
                  ButtonEvaluator->Automatic,
                  
                  ButtonData:>{"Info3386852691-3128032", 
                    "TensorCalculus4`Tensorial`DefineTensorShortcuts"},
                  ButtonFrame->"None",
                  ButtonNote->"TensorCalculus4`Tensorial`"], 
                ButtonBox[
                  StyleBox["NDim",
                    "Hyperlink"],
                  
                  ButtonFunction:>(
                    Internal`PutInformation[ #, LongForm -> False]&),
                  ButtonEvaluator->Automatic,
                  
                  ButtonData:>{"Info3386852691-3128032", 
                    "TensorCalculus4`Tensorial`NDim"},
                  ButtonFrame->"None",
                  ButtonNote->"TensorCalculus4`Tensorial`"], 
                ButtonBox[
                  StyleBox["TensorSymmetry",
                    "Hyperlink"],
                  
                  ButtonFunction:>(
                    Internal`PutInformation[ #, LongForm -> False]&),
                  ButtonEvaluator->Automatic,
                  
                  ButtonData:>{"Info3386852691-3128032", 
                    "TensorCalculus4`Tensorial`TensorSymmetry"},
                  ButtonFrame->"None",
                  ButtonNote->"TensorCalculus4`Tensorial`"]},
              {
                ButtonBox[
                  StyleBox["DotOperate",
                    "Hyperlink"],
                  
                  ButtonFunction:>(
                    Internal`PutInformation[ #, LongForm -> False]&),
                  ButtonEvaluator->Automatic,
                  
                  ButtonData:>{"Info3386852691-3128032", 
                    "TensorCalculus4`Tensorial`DotOperate"},
                  ButtonFrame->"None",
                  ButtonNote->"TensorCalculus4`Tensorial`"], 
                ButtonBox[
                  StyleBox["NewIndexChangePatterns",
                    "Hyperlink"],
                  
                  ButtonFunction:>(
                    Internal`PutInformation[ #, LongForm -> False]&),
                  ButtonEvaluator->Automatic,
                  
                  ButtonData:>{"Info3386852691-3128032", 
                    "TensorCalculus4`Tensorial`NewIndexChangePatterns"},
                  ButtonFrame->"None",
                  ButtonNote->"TensorCalculus4`Tensorial`"], 
                ButtonBox[
                  StyleBox["TensorValueRules",
                    "Hyperlink"],
                  
                  ButtonFunction:>(
                    Internal`PutInformation[ #, LongForm -> False]&),
                  ButtonEvaluator->Automatic,
                  
                  ButtonData:>{"Info3386852691-3128032", 
                    "TensorCalculus4`Tensorial`TensorValueRules"},
                  ButtonFrame->"None",
                  ButtonNote->"TensorCalculus4`Tensorial`"]},
              {
                ButtonBox[
                  StyleBox["DotTensorFactors",
                    "Hyperlink"],
                  
                  ButtonFunction:>(
                    Internal`PutInformation[ #, LongForm -> False]&),
                  ButtonEvaluator->Automatic,
                  
                  ButtonData:>{"Info3386852691-3128032", 
                    "TensorCalculus4`Tensorial`DotTensorFactors"},
                  ButtonFrame->"None",
                  ButtonNote->"TensorCalculus4`Tensorial`"], 
                ButtonBox[
                  StyleBox["NondependentPartialD",
                    "Hyperlink"],
                  
                  ButtonFunction:>(
                    Internal`PutInformation[ #, LongForm -> False]&),
                  ButtonEvaluator->Automatic,
                  
                  ButtonData:>{"Info3386852691-3128032", 
                    "TensorCalculus4`Tensorial`NondependentPartialD"},
                  ButtonFrame->"None",
                  ButtonNote->"TensorCalculus4`Tensorial`"], 
                ButtonBox[
                  StyleBox["ToArrayValues",
                    "Hyperlink"],
                  
                  ButtonFunction:>(
                    Internal`PutInformation[ #, LongForm -> False]&),
                  ButtonEvaluator->Automatic,
                  
                  ButtonData:>{"Info3386852691-3128032", 
                    "TensorCalculus4`Tensorial`ToArrayValues"},
                  ButtonFrame->"None",
                  ButtonNote->"TensorCalculus4`Tensorial`"]},
              {
                ButtonBox[
                  StyleBox["EinsteinArgument",
                    "Hyperlink"],
                  
                  ButtonFunction:>(
                    Internal`PutInformation[ #, LongForm -> False]&),
                  ButtonEvaluator->Automatic,
                  
                  ButtonData:>{"Info3386852691-3128032", 
                    "TensorCalculus4`Tensorial`EinsteinArgument"},
                  ButtonFrame->"None",
                  ButtonNote->"TensorCalculus4`Tensorial`"], 
                ButtonBox[
                  StyleBox["NonzeroValueRules",
                    "Hyperlink"],
                  
                  ButtonFunction:>(
                    Internal`PutInformation[ #, LongForm -> False]&),
                  ButtonEvaluator->Automatic,
                  
                  ButtonData:>{"Info3386852691-3128032", 
                    "TensorCalculus4`Tensorial`NonzeroValueRules"},
                  ButtonFrame->"None",
                  ButtonNote->"TensorCalculus4`Tensorial`"], 
                ButtonBox[
                  StyleBox["ToFlavor",
                    "Hyperlink"],
                  
                  ButtonFunction:>(
                    Internal`PutInformation[ #, LongForm -> False]&),
                  ButtonEvaluator->Automatic,
                  
                  ButtonData:>{"Info3386852691-3128032", 
                    "TensorCalculus4`Tensorial`ToFlavor"},
                  ButtonFrame->"None",
                  ButtonNote->"TensorCalculus4`Tensorial`"]},
              {
                ButtonBox[
                  StyleBox["EinsteinArray",
                    "Hyperlink"],
                  
                  ButtonFunction:>(
                    Internal`PutInformation[ #, LongForm -> False]&),
                  ButtonEvaluator->Automatic,
                  
                  ButtonData:>{"Info3386852691-3128032", 
                    "TensorCalculus4`Tensorial`EinsteinArray"},
                  ButtonFrame->"None",
                  ButtonNote->"TensorCalculus4`Tensorial`"], 
                ButtonBox[
                  StyleBox["OrthonormalTransformation",
                    "Hyperlink"],
                  
                  ButtonFunction:>(
                    Internal`PutInformation[ #, LongForm -> False]&),
                  ButtonEvaluator->Automatic,
                  
                  ButtonData:>{"Info3386852691-3128032", 
                    "TensorCalculus4`Tensorial`OrthonormalTransformation"},
                  ButtonFrame->"None",
                  ButtonNote->"TensorCalculus4`Tensorial`"], 
                ButtonBox[
                  StyleBox["TotalD",
                    "Hyperlink"],
                  
                  ButtonFunction:>(
                    Internal`PutInformation[ #, LongForm -> False]&),
                  ButtonEvaluator->Automatic,
                  
                  ButtonData:>{"Info3386852691-3128032", 
                    "TensorCalculus4`Tensorial`TotalD"},
                  ButtonFrame->"None",
                  ButtonNote->"TensorCalculus4`Tensorial`"]},
              {
                ButtonBox[
                  StyleBox["EinsteinSum",
                    "Hyperlink"],
                  
                  ButtonFunction:>(
                    Internal`PutInformation[ #, LongForm -> False]&),
                  ButtonEvaluator->Automatic,
                  
                  ButtonData:>{"Info3386852691-3128032", 
                    "TensorCalculus4`Tensorial`EinsteinSum"},
                  ButtonFrame->"None",
                  ButtonNote->"TensorCalculus4`Tensorial`"], 
                ButtonBox[
                  StyleBox["ParseTermIndices",
                    "Hyperlink"],
                  
                  ButtonFunction:>(
                    Internal`PutInformation[ #, LongForm -> False]&),
                  ButtonEvaluator->Automatic,
                  
                  ButtonData:>{"Info3386852691-3128032", 
                    "TensorCalculus4`Tensorial`ParseTermIndices"},
                  ButtonFrame->"None",
                  ButtonNote->"TensorCalculus4`Tensorial`"], 
                ButtonBox[
                  StyleBox["TotalDH",
                    "Hyperlink"],
                  
                  ButtonFunction:>(
                    Internal`PutInformation[ #, LongForm -> False]&),
                  ButtonEvaluator->Automatic,
                  
                  ButtonData:>{"Info3386852691-3128032", 
                    "TensorCalculus4`Tensorial`TotalDH"},
                  ButtonFrame->"None",
                  ButtonNote->"TensorCalculus4`Tensorial`"]},
              {
                ButtonBox[
                  StyleBox["EvaluateAtPattern",
                    "Hyperlink"],
                  
                  ButtonFunction:>(
                    Internal`PutInformation[ #, LongForm -> False]&),
                  ButtonEvaluator->Automatic,
                  
                  ButtonData:>{"Info3386852691-3128032", 
                    "TensorCalculus4`Tensorial`EvaluateAtPattern"},
                  ButtonFrame->"None",
                  ButtonNote->"TensorCalculus4`Tensorial`"], 
                ButtonBox[
                  StyleBox["PartialArray",
                    "Hyperlink"],
                  
                  ButtonFunction:>(
                    Internal`PutInformation[ #, LongForm -> False]&),
                  ButtonEvaluator->Automatic,
                  
                  ButtonData:>{"Info3386852691-3128032", 
                    "TensorCalculus4`Tensorial`PartialArray"},
                  ButtonFrame->"None",
                  ButtonNote->"TensorCalculus4`Tensorial`"], 
                ButtonBox[
                  StyleBox["UnnestTensor",
                    "Hyperlink"],
                  
                  ButtonFunction:>(
                    Internal`PutInformation[ #, LongForm -> False]&),
                  ButtonEvaluator->Automatic,
                  
                  ButtonData:>{"Info3386852691-3128032", 
                    "TensorCalculus4`Tensorial`UnnestTensor"},
                  ButtonFrame->"None",
                  ButtonNote->"TensorCalculus4`Tensorial`"]},
              {
                ButtonBox[
                  StyleBox["EvaluateDotProducts",
                    "Hyperlink"],
                  
                  ButtonFunction:>(
                    Internal`PutInformation[ #, LongForm -> False]&),
                  ButtonEvaluator->Automatic,
                  
                  ButtonData:>{"Info3386852691-3128032", 
                    "TensorCalculus4`Tensorial`EvaluateDotProducts"},
                  ButtonFrame->"None",
                  ButtonNote->"TensorCalculus4`Tensorial`"], 
                ButtonBox[
                  StyleBox["PartialD",
                    "Hyperlink"],
                  
                  ButtonFunction:>(
                    Internal`PutInformation[ #, LongForm -> False]&),
                  ButtonEvaluator->Automatic,
                  
                  ButtonData:>{"Info3386852691-3128032", 
                    "TensorCalculus4`Tensorial`PartialD"},
                  ButtonFrame->"None",
                  ButtonNote->"TensorCalculus4`Tensorial`"], 
                ButtonBox[
                  StyleBox["UpDownAdjust",
                    "Hyperlink"],
                  
                  ButtonFunction:>(
                    Internal`PutInformation[ #, LongForm -> False]&),
                  ButtonEvaluator->Automatic,
                  
                  ButtonData:>{"Info3386852691-3128032", 
                    "TensorCalculus4`Tensorial`UpDownAdjust"},
                  ButtonFrame->"None",
                  ButtonNote->"TensorCalculus4`Tensorial`"]},
              {
                ButtonBox[
                  StyleBox["EvaluateSlots",
                    "Hyperlink"],
                  
                  ButtonFunction:>(
                    Internal`PutInformation[ #, LongForm -> False]&),
                  ButtonEvaluator->Automatic,
                  ButtonData:>{"Info3386852691-3128032", 
                    "TensorCalculus4`Tensorial`EvaluateSlots"},
                  ButtonFrame->"None",
                  ButtonNote->"TensorCalculus4`Tensorial`"], 
                ButtonBox[
                  StyleBox["PartialDH",
                    "Hyperlink"],
                  
                  ButtonFunction:>(
                    Internal`PutInformation[ #, LongForm -> False]&),
                  ButtonEvaluator->Automatic,
                  
                  ButtonData:>{"Info3386852691-3128032", 
                    "TensorCalculus4`Tensorial`PartialDH"},
                  ButtonFrame->"None",
                  ButtonNote->"TensorCalculus4`Tensorial`"], 
                ButtonBox[
                  StyleBox["UpDownSwap",
                    "Hyperlink"],
                  
                  ButtonFunction:>(
                    Internal`PutInformation[ #, LongForm -> False]&),
                  ButtonEvaluator->Automatic,
                  
                  ButtonData:>{"Info3386852691-3128032", 
                    "TensorCalculus4`Tensorial`UpDownSwap"},
                  ButtonFrame->"None",
                  ButtonNote->"TensorCalculus4`Tensorial`"]},
              {
                ButtonBox[
                  StyleBox["ExpandAbsoluteD",
                    "Hyperlink"],
                  
                  ButtonFunction:>(
                    Internal`PutInformation[ #, LongForm -> False]&),
                  ButtonEvaluator->Automatic,
                  
                  ButtonData:>{"Info3386852691-3128032", 
                    "TensorCalculus4`Tensorial`ExpandAbsoluteD"},
                  ButtonFrame->"None",
                  ButtonNote->"TensorCalculus4`Tensorial`"], 
                ButtonBox[
                  StyleBox["PartialKroneckerExpand",
                    "Hyperlink"],
                  
                  ButtonFunction:>(
                    Internal`PutInformation[ #, LongForm -> False]&),
                  ButtonEvaluator->Automatic,
                  
                  ButtonData:>{"Info3386852691-3128032", 
                    "TensorCalculus4`Tensorial`PartialKroneckerExpand"},
                  ButtonFrame->"None",
                  ButtonNote->"TensorCalculus4`Tensorial`"], 
                ButtonBox[
                  StyleBox["UseCoordinates",
                    "Hyperlink"],
                  
                  ButtonFunction:>(
                    Internal`PutInformation[ #, LongForm -> False]&),
                  ButtonEvaluator->Automatic,
                  
                  ButtonData:>{"Info3386852691-3128032", 
                    "TensorCalculus4`Tensorial`UseCoordinates"},
                  ButtonFrame->"None",
                  ButtonNote->"TensorCalculus4`Tensorial`"]},
              {
                ButtonBox[
                  StyleBox["ExpandCovariantD",
                    "Hyperlink"],
                  
                  ButtonFunction:>(
                    Internal`PutInformation[ #, LongForm -> False]&),
                  ButtonEvaluator->Automatic,
                  
                  ButtonData:>{"Info3386852691-3128032", 
                    "TensorCalculus4`Tensorial`ExpandCovariantD"},
                  ButtonFrame->"None",
                  ButtonNote->"TensorCalculus4`Tensorial`"], 
                ButtonBox[
                  StyleBox["PartialSum",
                    "Hyperlink"],
                  
                  ButtonFunction:>(
                    Internal`PutInformation[ #, LongForm -> False]&),
                  ButtonEvaluator->Automatic,
                  
                  ButtonData:>{"Info3386852691-3128032", 
                    "TensorCalculus4`Tensorial`PartialSum"},
                  ButtonFrame->"None",
                  ButtonNote->"TensorCalculus4`Tensorial`"], 
                ButtonBox[
                  StyleBox["UsePartialDChainRule",
                    "Hyperlink"],
                  
                  ButtonFunction:>(
                    Internal`PutInformation[ #, LongForm -> False]&),
                  ButtonEvaluator->Automatic,
                  
                  ButtonData:>{"Info3386852691-3128032", 
                    "TensorCalculus4`Tensorial`UsePartialDChainRule"},
                  ButtonFrame->"None",
                  ButtonNote->"TensorCalculus4`Tensorial`"]},
              {
                ButtonBox[
                  StyleBox["ExpandDotArray",
                    "Hyperlink"],
                  
                  ButtonFunction:>(
                    Internal`PutInformation[ #, LongForm -> False]&),
                  ButtonEvaluator->Automatic,
                  
                  ButtonData:>{"Info3386852691-3128032", 
                    "TensorCalculus4`Tensorial`ExpandDotArray"},
                  ButtonFrame->"None",
                  ButtonNote->"TensorCalculus4`Tensorial`"], 
                ButtonBox[
                  StyleBox["PatternReplaceIndex",
                    "Hyperlink"],
                  
                  ButtonFunction:>(
                    Internal`PutInformation[ #, LongForm -> False]&),
                  ButtonEvaluator->Automatic,
                  
                  ButtonData:>{"Info3386852691-3128032", 
                    "TensorCalculus4`Tensorial`PatternReplaceIndex"},
                  ButtonFrame->"None",
                  ButtonNote->"TensorCalculus4`Tensorial`"], 
                ButtonBox[
                  StyleBox["UseTotalDChainRule",
                    "Hyperlink"],
                  
                  ButtonFunction:>(
                    Internal`PutInformation[ #, LongForm -> False]&),
                  ButtonEvaluator->Automatic,
                  
                  ButtonData:>{"Info3386852691-3128032", 
                    "TensorCalculus4`Tensorial`UseTotalDChainRule"},
                  ButtonFrame->"None",
                  ButtonNote->"TensorCalculus4`Tensorial`"]},
              {
                ButtonBox[
                  StyleBox["ExpandLieD",
                    "Hyperlink"],
                  
                  ButtonFunction:>(
                    Internal`PutInformation[ #, LongForm -> False]&),
                  ButtonEvaluator->Automatic,
                  
                  ButtonData:>{"Info3386852691-3128032", 
                    "TensorCalculus4`Tensorial`ExpandLieD"},
                  ButtonFrame->"None",
                  ButtonNote->"TensorCalculus4`Tensorial`"], 
                ButtonBox[
                  StyleBox["PatternSymmetries",
                    "Hyperlink"],
                  
                  ButtonFunction:>(
                    Internal`PutInformation[ #, LongForm -> False]&),
                  ButtonEvaluator->Automatic,
                  
                  ButtonData:>{"Info3386852691-3128032", 
                    "TensorCalculus4`Tensorial`PatternSymmetries"},
                  ButtonFrame->"None",
                  ButtonNote->"TensorCalculus4`Tensorial`"], 
                ButtonBox[
                  StyleBox["Void",
                    "Hyperlink"],
                  
                  ButtonFunction:>(
                    Internal`PutInformation[ #, LongForm -> False]&),
                  ButtonEvaluator->Automatic,
                  
                  ButtonData:>{"Info3386852691-3128032", 
                    "TensorCalculus4`Tensorial`Void"},
                  ButtonFrame->"None",
                  ButtonNote->"TensorCalculus4`Tensorial`"]}
              },
            
            RowMinHeight->{
              1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
                1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
                 1.05}]}
        },
      RowSpacings->{2, 3},
      ColumnsEqual->True]], "Print",
  CellMargins->{{20, Inherited}, {Inherited, Inherited}},
  ShowCellLabel->False,
  CellFrameMargins->{{Inherited, Inherited}, {14, 14}},
  Background->RGBColor[0.964706, 0.929412, 0.839216],
  ButtonBoxOptions->{Active->True},
  GridBoxOptions->{ColumnAlignments->{Left}}]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
FrontEndVersion->"5.2 for Microsoft Windows",
ScreenRectangle->{{0, 1680}, {0, 965}},
ScreenStyleEnvironment->"SlideShow",
WindowToolbars->{},
WindowSize->{911, 903},
WindowMargins->{{3, Automatic}, {Automatic, -4}},
ShowSelection->True,
Magnification->1.25,
StyleDefinitions -> Notebook[{
  
  Cell[CellGroupData[{
  Cell["Style Definitions for TensorialStyle", "Subtitle"],
  
  Cell["\<\
Modify the definitions below to change the default appearance of all cells in \
a given style.  Make modifications to any definition using commands in the \
Format menu.\
\>", "Text"],
  
  Cell["Thistle background is RGBColor[0.847105, 0.749004, 0.847105]", 
    "Text"],
  
  Cell["\<\
SmallText change to EmphasisText - regular size with a frame.\
\>", "Text"],
  
  Cell[CellGroupData[{
  
  Cell["Style Environment Names", "Section"],
  
  Cell[StyleData[All, "Working"],
    PageWidth->WindowWidth,
    CellLabelMargins->{{12, Inherited}, {Inherited, Inherited}},
    ScriptMinSize->9,
    Background->RGBColor[0.992203, 0.9608, 0.902007]],
  
  Cell[StyleData[All, "Presentation"],
    PageWidth->WindowWidth,
    CellLabelMargins->{{24, Inherited}, {Inherited, Inherited}},
    ScriptMinSize->12,
    Background->RGBColor[0.992203, 0.9608, 0.902007]],
  
  Cell[StyleData[All, "Condensed"],
    PageWidth->WindowWidth,
    CellLabelMargins->{{8, Inherited}, {Inherited, Inherited}},
    ScriptMinSize->8,
    Background->RGBColor[0.992203, 0.9608, 0.902007]],
  
  Cell[StyleData[All, "Printout"],
    PageWidth->PaperWidth,
    CellLabelMargins->{{2, Inherited}, {Inherited, Inherited}},
    ScriptMinSize->5,
    PrivateFontOptions->{"FontType"->"Outline"}]
  }, Closed]],
  
  Cell[CellGroupData[{
  
  Cell["Notebook Options", "Section"],
  
  Cell["\<\
The options defined for the style below will be used at the Notebook level.\
\>", "Text"],
  
  Cell[StyleData["Notebook"],
    PageHeaders->{{Cell[ 
            TextData[ {
              CounterBox[ "Page"]}], "PageNumber"], None, Cell[ 
            TextData[ {
              ValueBox[ "FileName"]}], "Header"]}, {Cell[ 
            TextData[ {
              ValueBox[ "FileName"]}], "Header"], None, Cell[ 
            TextData[ {
              CounterBox[ "Page"]}], "PageNumber"]}},
    CellFrameLabelMargins->6,
    StructuredSelection->False,
    AutoItalicWords->{"Tensorial", "Mathematica"},
    StyleMenuListing->None]
  }, Closed]],
  
  Cell[CellGroupData[{
  
  Cell["Styles for Headings", "Section"],
  
  Cell["\<\
The Chaptertitle heading is put lower down in the style definition notebook \
so that it won't take up the use of an Alt key.\
\>", "Text"],
  
  Cell[CellGroupData[{
  
  Cell[StyleData["Title"],
    ShowCellBracket->False,
    CellMargins->{{12, Inherited}, {0, 5}},
    CellGroupingRules->{"TitleGrouping", 0},
    PageBreakBelow->False,
    DefaultNewInlineCellStyle->"None",
    InputAutoReplacements->{"TeX"->StyleBox[ 
            RowBox[ {"T", 
              AdjustmentBox[ 
              "E", BoxMargins -> {{-0.075, -0.085}, {0, 0}}, BoxBaselineShift -> 
                0.5], "X"}]], "LaTeX"->StyleBox[ 
            RowBox[ {"L", 
              StyleBox[ 
                AdjustmentBox[ 
                "A", BoxMargins -> {{-0.36, -0.1}, {0, -0}}, 
                  BoxBaselineShift -> -0.2], FontSize -> Smaller], "T", 
              AdjustmentBox[ 
              "E", BoxMargins -> {{-0.075, -0.085}, {0, 0}}, BoxBaselineShift -> 
                0.5], "X"}]], "mma"->"Mathematica", "Mma"->"Mathematica", 
        "MMA"->"Mathematica", "webMathematica"->FormBox[ 
            RowBox[ {"web", 
              AdjustmentBox[ 
                StyleBox[ "Mathematica", FontSlant -> "Italic"], 
                BoxMargins -> {{-0.175, 0}, {0, 0}}]}], TextForm], Inherited},
    
    LineSpacing->{1, 11},
    LanguageCategory->"NaturalLanguage",
    CounterIncrements->"Title",
    CounterAssignments->{{"Section", 0}, {"Equation", 0}, {"Figure", 0}, {
        "Subtitle", 0}, {"Subsubtitle", 0}},
    FontFamily->"Times",
    FontSize->36,
    FontWeight->"Bold",
    FontColor->RGBColor[0.9608, 0.870604, 0.702007],
    Background->RGBColor[0.449989, 0.289998, 0.0699931]],
  
  Cell[StyleData["Title", "Presentation"],
    CellMargins->{{24, 10}, {20, 40}},
    LineSpacing->{1, 0},
    FontSize->44],
  
  Cell[StyleData["Title", "Condensed"],
    CellMargins->{{8, 10}, {4, 8}},
    FontSize->20],
  
  Cell[StyleData["Title", "Printout"],
    CellMargins->{{2, 10}, {12, 30}},
    FontSize->24]
  }, Closed]],
  
  Cell[CellGroupData[{
  
  Cell[StyleData["Subtitle"],
    ShowCellBracket->False,
    CellMargins->{{12, Inherited}, {0, 0}},
    CellGroupingRules->{"TitleGrouping", 10},
    PageBreakBelow->False,
    DefaultNewInlineCellStyle->"None",
    InputAutoReplacements->{"TeX"->StyleBox[ 
            RowBox[ {"T", 
              AdjustmentBox[ 
              "E", BoxMargins -> {{-0.075, -0.085}, {0, 0}}, BoxBaselineShift -> 
                0.5], "X"}]], "LaTeX"->StyleBox[ 
            RowBox[ {"L", 
              StyleBox[ 
                AdjustmentBox[ 
                "A", BoxMargins -> {{-0.36, -0.1}, {0, -0}}, 
                  BoxBaselineShift -> -0.2], FontSize -> Smaller], "T", 
              AdjustmentBox[ 
              "E", BoxMargins -> {{-0.075, -0.085}, {0, 0}}, BoxBaselineShift -> 
                0.5], "X"}]], "mma"->"Mathematica", "Mma"->"Mathematica", 
        "MMA"->"Mathematica", "webMathematica"->FormBox[ 
            RowBox[ {"web", 
              AdjustmentBox[ 
                StyleBox[ "Mathematica", FontSlant -> "Italic"], 
                BoxMargins -> {{-0.175, 0}, {0, 0}}]}], TextForm], Inherited},
    
    LanguageCategory->"NaturalLanguage",
    CounterIncrements->"Subtitle",
    CounterAssignments->{{"Section", 0}, {"Equation", 0}, {"Figure", 0}, {
        "Subsubtitle", 0}},
    FontFamily->"Times",
    FontSize->24,
    Background->RGBColor[0.847105, 0.749004, 0.847105]],
  
  Cell[StyleData["Subtitle", "Presentation"],
    CellMargins->{{24, 10}, {20, 20}},
    LineSpacing->{1, 0},
    FontSize->36],
  
  Cell[StyleData["Subtitle", "Condensed"],
    CellMargins->{{8, 10}, {4, 4}},
    FontSize->14],
  
  Cell[StyleData["Subtitle", "Printout"],
    CellMargins->{{2, 10}, {12, 8}},
    FontSize->18,
    Background->GrayLevel[1]]
  }, Closed]],
  
  Cell[CellGroupData[{
  
  Cell[StyleData["Subsubtitle"],
    ShowCellBracket->False,
    CellMargins->{{12, Inherited}, {20, 5}},
    CellGroupingRules->{"TitleGrouping", 20},
    PageBreakBelow->False,
    DefaultNewInlineCellStyle->"None",
    InputAutoReplacements->{"TeX"->StyleBox[ 
            RowBox[ {"T", 
              AdjustmentBox[ 
              "E", BoxMargins -> {{-0.075, -0.085}, {0, 0}}, BoxBaselineShift -> 
                0.5], "X"}]], "LaTeX"->StyleBox[ 
            RowBox[ {"L", 
              StyleBox[ 
                AdjustmentBox[ 
                "A", BoxMargins -> {{-0.36, -0.1}, {0, -0}}, 
                  BoxBaselineShift -> -0.2], FontSize -> Smaller], "T", 
              AdjustmentBox[ 
              "E", BoxMargins -> {{-0.075, -0.085}, {0, 0}}, BoxBaselineShift -> 
                0.5], "X"}]], "mma"->"Mathematica", "Mma"->"Mathematica", 
        "MMA"->"Mathematica", "webMathematica"->FormBox[ 
            RowBox[ {"web", 
              AdjustmentBox[ 
                StyleBox[ "Mathematica", FontSlant -> "Italic"], 
                BoxMargins -> {{-0.175, 0}, {0, 0}}]}], TextForm], Inherited},
    
    LanguageCategory->"NaturalLanguage",
    CounterIncrements->"Subsubtitle",
    CounterAssignments->{{"Section", 0}, {"Equation", 0}, {"Figure", 0}},
    FontFamily->"Times",
    FontSize->14,
    FontWeight->"Bold"],
  
  Cell[StyleData["Subsubtitle", "Presentation"],
    CellMargins->{{24, 10}, {20, 20}},
    LineSpacing->{1, 0},
    FontSize->24],
  
  Cell[StyleData["Subsubtitle", "Condensed"],
    CellMargins->{{8, 10}, {8, 8}},
    FontSize->12],
  
  Cell[StyleData["Subsubtitle", "Printout"],
    CellMargins->{{2, 10}, {12, 8}},
    FontSize->14]
  }, Closed]],
  
  Cell[CellGroupData[{
  
  Cell[StyleData["Section"],
    CellDingbat->None,
    ShowGroupOpenCloseIcon->True,
    CellMargins->{{25, Inherited}, {8, 24}},
    CellGroupingRules->{"SectionGrouping", 30},
    PageBreakBelow->False,
    DefaultNewInlineCellStyle->"None",
    InputAutoReplacements->{"TeX"->StyleBox[ 
            RowBox[ {"T", 
              AdjustmentBox[ 
              "E", BoxMargins -> {{-0.075, -0.085}, {0, 0}}, BoxBaselineShift -> 
                0.5], "X"}]], "LaTeX"->StyleBox[ 
            RowBox[ {"L", 
              StyleBox[ 
                AdjustmentBox[ 
                "A", BoxMargins -> {{-0.36, -0.1}, {0, -0}}, 
                  BoxBaselineShift -> -0.2], FontSize -> Smaller], "T", 
              AdjustmentBox[ 
              "E", BoxMargins -> {{-0.075, -0.085}, {0, 0}}, BoxBaselineShift -> 
                0.5], "X"}]], "mma"->"Mathematica", "Mma"->"Mathematica", 
        "MMA"->"Mathematica", "webMathematica"->FormBox[ 
            RowBox[ {"web", 
              AdjustmentBox[ 
                StyleBox[ "Mathematica", FontSlant -> "Italic"], 
                BoxMargins -> {{-0.175, 0}, {0, 0}}]}], TextForm], Inherited},
    
    LineSpacing->{1, 7},
    LanguageCategory->"NaturalLanguage",
    CounterIncrements->"Section",
    CounterAssignments->{{"Subsection", 0}, {"Subsubsection", 0}},
    FontFamily->"Times",
    FontSize->20,
    FontWeight->"Bold"],
  
  Cell[StyleData["Section", "Presentation"],
    CellMargins->{{40, 10}, {11, 32}},
    LineSpacing->{1, 0},
    FontSize->24],
  
  Cell[StyleData["Section", "Condensed"],
    CellMargins->{{18, Inherited}, {6, 12}},
    FontSize->12],
  
  Cell[StyleData["Section", "Printout"],
    CellMargins->{{13, 0}, {7, 22}},
    FontSize->14]
  }, Open  ]],
  
  Cell[CellGroupData[{
  
  Cell[StyleData["Subsection"],
    CellDingbat->"\[FilledSmallSquare]",
    ShowGroupOpenCloseIcon->True,
    CellMargins->{{22, Inherited}, {8, 20}},
    CellGroupingRules->{"SectionGrouping", 40},
    PageBreakBelow->False,
    DefaultNewInlineCellStyle->"None",
    InputAutoReplacements->{"TeX"->StyleBox[ 
            RowBox[ {"T", 
              AdjustmentBox[ 
              "E", BoxMargins -> {{-0.075, -0.085}, {0, 0}}, BoxBaselineShift -> 
                0.5], "X"}]], "LaTeX"->StyleBox[ 
            RowBox[ {"L", 
              StyleBox[ 
                AdjustmentBox[ 
                "A", BoxMargins -> {{-0.36, -0.1}, {0, -0}}, 
                  BoxBaselineShift -> -0.2], FontSize -> Smaller], "T", 
              AdjustmentBox[ 
              "E", BoxMargins -> {{-0.075, -0.085}, {0, 0}}, BoxBaselineShift -> 
                0.5], "X"}]], "mma"->"Mathematica", "Mma"->"Mathematica", 
        "MMA"->"Mathematica", "webMathematica"->FormBox[ 
            RowBox[ {"web", 
              AdjustmentBox[ 
                StyleBox[ "Mathematica", FontSlant -> "Italic"], 
                BoxMargins -> {{-0.175, 0}, {0, 0}}]}], TextForm], Inherited},
    
    LanguageCategory->"NaturalLanguage",
    CounterIncrements->"Subsection",
    CounterAssignments->{{"Subsubsection", 0}},
    FontFamily->"Times",
    FontSize->18,
    FontWeight->"Bold"],
  
  Cell[StyleData["Subsection", "Presentation"],
    CellMargins->{{36, 10}, {11, 32}},
    LineSpacing->{1, 0},
    FontSize->22],
  
  Cell[StyleData["Subsection", "Condensed"],
    CellMargins->{{16, Inherited}, {6, 12}},
    FontSize->12],
  
  Cell[StyleData["Subsection", "Printout"],
    CellMargins->{{9, 0}, {7, 22}},
    FontSize->12]
  }, Open  ]],
  
  Cell[CellGroupData[{
  
  Cell[StyleData["Subsubsection"],
    CellDingbat->"\[GrayCircle]",
    ShowGroupOpenCloseIcon->True,
    CellMargins->{{22, Inherited}, {8, 18}},
    CellGroupingRules->{"SectionGrouping", 50},
    PageBreakBelow->False,
    DefaultNewInlineCellStyle->"None",
    InputAutoReplacements->{"TeX"->StyleBox[ 
            RowBox[ {"T", 
              AdjustmentBox[ 
              "E", BoxMargins -> {{-0.075, -0.085}, {0, 0}}, BoxBaselineShift -> 
                0.5], "X"}]], "LaTeX"->StyleBox[ 
            RowBox[ {"L", 
              StyleBox[ 
                AdjustmentBox[ 
                "A", BoxMargins -> {{-0.36, -0.1}, {0, -0}}, 
                  BoxBaselineShift -> -0.2], FontSize -> Smaller], "T", 
              AdjustmentBox[ 
              "E", BoxMargins -> {{-0.075, -0.085}, {0, 0}}, BoxBaselineShift -> 
                0.5], "X"}]], "mma"->"Mathematica", "Mma"->"Mathematica", 
        "MMA"->"Mathematica", "webMathematica"->FormBox[ 
            RowBox[ {"web", 
              AdjustmentBox[ 
                StyleBox[ "Mathematica", FontSlant -> "Italic"], 
                BoxMargins -> {{-0.175, 0}, {0, 0}}]}], TextForm], Inherited},
    
    LanguageCategory->"NaturalLanguage",
    CounterIncrements->"Subsubsection",
    FontFamily->"Times",
    FontSize->16,
    FontWeight->"Bold"],
  
  Cell[StyleData["Subsubsection", "Presentation"],
    CellMargins->{{34, 10}, {11, 26}},
    LineSpacing->{1, 0},
    FontSize->18],
  
  Cell[StyleData["Subsubsection", "Condensed"],
    CellMargins->{{17, Inherited}, {6, 12}},
    FontSize->10],
  
  Cell[StyleData["Subsubsection", "Printout"],
    CellMargins->{{9, 0}, {7, 14}},
    FontSize->11]
  }, Open  ]]
  }, Closed]],
  
  Cell[CellGroupData[{
  
  Cell["Styles for Body Text", "Section"],
  
  Cell[CellGroupData[{
  
  Cell[StyleData["Text"],
    CellMargins->{{12, 10}, {7, 7}},
    InputAutoReplacements->{"TeX"->StyleBox[ 
            RowBox[ {"T", 
              AdjustmentBox[ 
              "E", BoxMargins -> {{-0.075, -0.085}, {0, 0}}, BoxBaselineShift -> 
                0.5], "X"}]], "LaTeX"->StyleBox[ 
            RowBox[ {"L", 
              StyleBox[ 
                AdjustmentBox[ 
                "A", BoxMargins -> {{-0.36, -0.1}, {0, -0}}, 
                  BoxBaselineShift -> -0.2], FontSize -> Smaller], "T", 
              AdjustmentBox[ 
              "E", BoxMargins -> {{-0.075, -0.085}, {0, 0}}, BoxBaselineShift -> 
                0.5], "X"}]], "mma"->"Mathematica", "Mma"->"Mathematica", 
        "MMA"->"Mathematica", "webMathematica"->FormBox[ 
            RowBox[ {"web", 
              AdjustmentBox[ 
                StyleBox[ "Mathematica", FontSlant -> "Italic"], 
                BoxMargins -> {{-0.175, 0}, {0, 0}}]}], TextForm], Inherited},
    
    Hyphenation->True,
    LineSpacing->{1, 3},
    CounterIncrements->"Text",
    FontSize->16],
  
  Cell[StyleData["Text", "Presentation"],
    CellMargins->{{24, 10}, {10, 10}},
    LineSpacing->{1, 5},
    FontSize->16],
  
  Cell[StyleData["Text", "Condensed"],
    CellMargins->{{8, 10}, {6, 6}},
    LineSpacing->{1, 1},
    FontSize->11],
  
  Cell[StyleData["Text", "Printout"],
    CellMargins->{{2, 2}, {6, 6}},
    TextJustification->0.5,
    FontSize->10]
  }, Open  ]],
  
  Cell[CellGroupData[{
  
  Cell[StyleData["EmphasisText"],
    CellFrame->True,
    CellMargins->{{12, 10}, {6, 6}},
    DefaultNewInlineCellStyle->"None",
    Hyphenation->True,
    LineSpacing->{1, 3},
    LanguageCategory->"NaturalLanguage",
    CounterIncrements->"EmphasisText",
    FontFamily->"Times",
    FontSize->18],
  
  Cell[StyleData["EmphasisText", "Presentation"],
    CellMargins->{{24, 10}, {8, 8}},
    LineSpacing->{1, 5},
    FontSize->12],
  
  Cell[StyleData["EmphasisText", "Condensed"],
    CellMargins->{{8, 10}, {5, 5}},
    LineSpacing->{1, 2},
    FontSize->9],
  
  Cell[StyleData["EmphasisText", "Printout"],
    CellMargins->{{2, 2}, {5, 5}},
    TextJustification->0.5,
    FontSize->7]
  }, Open  ]]
  }, Closed]],
  
  Cell[CellGroupData[{
  
  Cell["Subexercise - Placed  here for desired menu order", "Section"],
  
  Cell[CellGroupData[{
  
  Cell[StyleData["Subexercise"],
    CellDingbat->None,
    ShowCellBracket->True,
    ShowGroupOpenCloseIcon->True,
    CellMargins->{{22, Inherited}, {8, 18}},
    CellGroupingRules->{"SectionGrouping", 60},
    PageBreakBelow->False,
    DefaultNewInlineCellStyle->"None",
    InputAutoReplacements->{"TeX"->StyleBox[ 
            RowBox[ {"T", 
              AdjustmentBox[ 
              "E", BoxMargins -> {{-0.075, -0.085}, {0, 0}}, BoxBaselineShift -> 
                0.5], "X"}]], "LaTeX"->StyleBox[ 
            RowBox[ {"L", 
              StyleBox[ 
                AdjustmentBox[ 
                "A", BoxMargins -> {{-0.36, -0.1}, {0, -0}}, 
                  BoxBaselineShift -> -0.2], FontSize -> Smaller], "T", 
              AdjustmentBox[ 
              "E", BoxMargins -> {{-0.075, -0.085}, {0, 0}}, BoxBaselineShift -> 
                0.5], "X"}]], "mma"->"Mathematica", "Mma"->"Mathematica", 
        "MMA"->"Mathematica"},
    LanguageCategory->"NaturalLanguage",
    CounterIncrements->"Subsubsection",
    FontFamily->"Times",
    FontSize->14,
    FontWeight->"Bold"],
  
  Cell[StyleData["Subexercise", "Presentation"],
    CellMargins->{{34, 10}, {11, 26}},
    LineSpacing->{1, 0},
    FontSize->18],
  
  Cell[StyleData["Subexercise", "Condensed"],
    CellMargins->{{17, Inherited}, {6, 12}},
    FontSize->10],
  
  Cell[StyleData["Subexercise", "Printout"],
    CellMargins->{{9, 0}, {7, 14}},
    FontSize->11]
  }, Closed]]
  }, Closed]],
  
  Cell[CellGroupData[{
  
  Cell["Styles for Input/Output", "Section"],
  
  Cell["\<\
The cells in this section define styles used for input and output to the \
kernel.  Be careful when modifying, renaming, or removing these styles, \
because the front end associates special meanings with these style names. \
Some attributes for these styles are actually set in FormatType Styles (in \
the last section of this stylesheet). \
\>", "Text"],
  
  Cell[CellGroupData[{
  
  Cell[StyleData["Input"],
    CellMargins->{{45, 10}, {5, 7}},
    Evaluatable->True,
    CellGroupingRules->"InputGrouping",
    CellHorizontalScrolling->True,
    PageBreakWithin->False,
    GroupPageBreakWithin->False,
    DefaultFormatType->DefaultInputFormatType,
    "TwoByteSyntaxCharacterAutoReplacement"->True,
    HyphenationOptions->{"HyphenationCharacter"->"\[Continuation]"},
    AutoItalicWords->{},
    LanguageCategory->"Mathematica",
    FormatType->InputForm,
    ShowStringCharacters->True,
    NumberMarks->True,
    LinebreakAdjustments->{0.85, 2, 10, 0, 1},
    CounterIncrements->"Input",
    FontSize->13,
    FontWeight->"Bold",
    Background->RGBColor[1, 0.87599, 0.624002]],
  
  Cell[StyleData["Input", "Presentation"],
    CellMargins->{{72, Inherited}, {8, 10}},
    LineSpacing->{1, 0},
    FontSize->16],
  
  Cell[StyleData["Input", "Condensed"],
    CellMargins->{{40, 10}, {2, 3}},
    FontSize->11],
  
  Cell[StyleData["Input", "Printout"],
    CellMargins->{{39, 0}, {4, 6}},
    LinebreakAdjustments->{0.85, 2, 10, 1, 1},
    FontSize->9,
    Background->GrayLevel[1]]
  }, Open  ]],
  
  Cell[CellGroupData[{
  
  Cell[StyleData["InputOnly"],
    CellMargins->{{66, 10}, {7, 7}},
    Evaluatable->True,
    CellGroupingRules->"InputGrouping",
    CellHorizontalScrolling->True,
    DefaultFormatType->DefaultInputFormatType,
    "TwoByteSyntaxCharacterAutoReplacement"->True,
    HyphenationOptions->{"HyphenationCharacter"->"\[Continuation]"},
    AutoItalicWords->{},
    LanguageCategory->"Mathematica",
    FormatType->InputForm,
    ShowStringCharacters->True,
    NumberMarks->True,
    LinebreakAdjustments->{0.85, 2, 10, 0, 1},
    CounterIncrements->"Input",
    StyleMenuListing->None,
    FontWeight->"Bold"],
  
  Cell[StyleData["InputOnly", "Presentation"],
    CellMargins->{{72, Inherited}, {8, 10}},
    LineSpacing->{1, 0},
    FontSize->16],
  
  Cell[StyleData["InputOnly", "Condensed"],
    CellMargins->{{40, 10}, {2, 3}},
    FontSize->11],
  
  Cell[StyleData["InputOnly", "SlideShow"]],
  
  Cell[StyleData["InputOnly", "Printout"],
    CellMargins->{{39, 0}, {4, 6}},
    LinebreakAdjustments->{0.85, 2, 10, 1, 1},
    FontSize->9]
  }, Closed]],
  
  Cell[CellGroupData[{
  
  Cell[StyleData["Output"],
    CellMargins->{{47, 10}, {7, 5}},
    CellEditDuplicate->True,
    CellGroupingRules->"OutputGrouping",
    CellHorizontalScrolling->True,
    PageBreakWithin->False,
    GroupPageBreakWithin->False,
    InitializationCell->False,
    GeneratedCell->True,
    CellAutoOverwrite->True,
    DefaultFormatType->DefaultOutputFormatType,
    "TwoByteSyntaxCharacterAutoReplacement"->True,
    HyphenationOptions->{"HyphenationCharacter"->"\[Continuation]"},
    AutoItalicWords->{},
    LanguageCategory->None,
    FormatType->InputForm,
    CounterIncrements->"Output",
    FontFamily->"Times",
    FontSize->16,
    FontWeight->"Bold"],
  
  Cell[StyleData["Output", "Presentation"],
    CellMargins->{{72, Inherited}, {10, 8}},
    LineSpacing->{1, 0},
    FontSize->16],
  
  Cell[StyleData["Output", "Condensed"],
    CellMargins->{{41, Inherited}, {3, 2}},
    FontSize->11],
  
  Cell[StyleData["Output", "Printout"],
    CellMargins->{{39, 0}, {6, 4}},
    FontSize->9]
  }, Closed]],
  
  Cell[CellGroupData[{
  
  Cell[StyleData["Message"],
    CellMargins->{{45, Inherited}, {Inherited, Inherited}},
    CellGroupingRules->"OutputGrouping",
    PageBreakWithin->False,
    GroupPageBreakWithin->False,
    GeneratedCell->True,
    CellAutoOverwrite->True,
    ShowCellLabel->False,
    DefaultFormatType->DefaultOutputFormatType,
    "TwoByteSyntaxCharacterAutoReplacement"->True,
    HyphenationOptions->{"HyphenationCharacter"->"\[Continuation]"},
    AutoItalicWords->{},
    LanguageCategory->None,
    FormatType->InputForm,
    CounterIncrements->"Message",
    StyleMenuListing->None,
    FontSize->11,
    FontColor->RGBColor[0, 0, 1]],
  
  Cell[StyleData["Message", "Presentation"],
    CellMargins->{{72, Inherited}, {Inherited, Inherited}},
    LineSpacing->{1, 0},
    FontSize->16],
  
  Cell[StyleData["Message", "Condensed"],
    CellMargins->{{41, Inherited}, {Inherited, Inherited}},
    FontSize->11],
  
  Cell[StyleData["Message", "Printout"],
    CellMargins->{{39, Inherited}, {Inherited, Inherited}},
    FontSize->7,
    FontColor->GrayLevel[0]]
  }, Closed]],
  
  Cell[CellGroupData[{
  
  Cell[StyleData["Print"],
    CellMargins->{{45, Inherited}, {Inherited, Inherited}},
    CellGroupingRules->"OutputGrouping",
    CellHorizontalScrolling->True,
    PageBreakWithin->False,
    GroupPageBreakWithin->False,
    GeneratedCell->True,
    CellAutoOverwrite->True,
    ShowCellLabel->False,
    DefaultFormatType->DefaultOutputFormatType,
    "TwoByteSyntaxCharacterAutoReplacement"->True,
    HyphenationOptions->{"HyphenationCharacter"->"\[Continuation]"},
    AutoItalicWords->{},
    LanguageCategory->None,
    FormatType->InputForm,
    CounterIncrements->"Print",
    StyleMenuListing->None],
  
  Cell[StyleData["Print", "Presentation"],
    CellMargins->{{72, Inherited}, {Inherited, Inherited}},
    LineSpacing->{1, 0},
    FontSize->16],
  
  Cell[StyleData["Print", "Condensed"],
    CellMargins->{{41, Inherited}, {Inherited, Inherited}},
    FontSize->11],
  
  Cell[StyleData["Print", "Printout"],
    CellMargins->{{39, Inherited}, {Inherited, Inherited}},
    FontSize->8]
  }, Closed]],
  
  Cell[CellGroupData[{
  
  Cell[StyleData["Graphics"],
    CellMargins->{{4, Inherited}, {Inherited, Inherited}},
    CellGroupingRules->"GraphicsGrouping",
    CellHorizontalScrolling->True,
    PageBreakWithin->False,
    GeneratedCell->True,
    CellAutoOverwrite->True,
    ShowCellLabel->False,
    DefaultFormatType->DefaultOutputFormatType,
    LanguageCategory->None,
    FormatType->InputForm,
    CounterIncrements->"Graphics",
    ImageMargins->{{43, Inherited}, {Inherited, 0}},
    StyleMenuListing->None,
    FontFamily->"Courier",
    FontSize->10],
  
  Cell[StyleData["Graphics", "Presentation"],
    ImageMargins->{{62, Inherited}, {Inherited, 0}}],
  
  Cell[StyleData["Graphics", "Condensed"],
    ImageMargins->{{38, Inherited}, {Inherited, 0}},
    Magnification->0.6],
  
  Cell[StyleData["Graphics", "Printout"],
    ImageMargins->{{30, Inherited}, {Inherited, 0}},
    Magnification->0.8]
  }, Closed]],
  
  Cell[CellGroupData[{
  
  Cell[StyleData["CellLabel"],
    LanguageCategory->None,
    StyleMenuListing->None,
    FontFamily->"Helvetica",
    FontSize->9,
    FontColor->RGBColor[0, 0, 1]],
  
  Cell[StyleData["CellLabel", "Presentation"],
    FontSize->12],
  
  Cell[StyleData["CellLabel", "Condensed"],
    FontSize->9],
  
  Cell[StyleData["CellLabel", "Printout"],
    FontFamily->"Courier",
    FontSize->8,
    FontSlant->"Italic",
    FontColor->GrayLevel[0]]
  }, Closed]],
  
  Cell[CellGroupData[{
  
  Cell[StyleData["FrameLabel"],
    LanguageCategory->None,
    StyleMenuListing->None,
    FontFamily->"Helvetica",
    FontSize->9],
  
  Cell[StyleData["FrameLabel", "Presentation"],
    FontSize->12],
  
  Cell[StyleData["FrameLabel", "Condensed"],
    FontSize->9],
  
  Cell[StyleData["FrameLabel", "Printout"],
    FontFamily->"Courier",
    FontSize->8,
    FontSlant->"Italic",
    FontColor->GrayLevel[0]]
  }, Closed]]
  }, Closed]],
  
  Cell[CellGroupData[{
  
  Cell["Chaptertitle - Placed here for desired menu order", "Section"],
  
  Cell["\<\
Chaptertitle is placed here so that it won't take up an Alt key.\
\>", "Text"],
  
  Cell[CellGroupData[{
  
  Cell[StyleData["Chaptertitle"],
    ShowCellBracket->False,
    CellMargins->{{12, Inherited}, {0, 0}},
    CellGroupingRules->{"TitleGrouping", 10},
    PageBreakBelow->False,
    DefaultNewInlineCellStyle->"None",
    InputAutoReplacements->{"TeX"->StyleBox[ 
            RowBox[ {"T", 
              AdjustmentBox[ 
              "E", BoxMargins -> {{-0.075, -0.085}, {0, 0}}, BoxBaselineShift -> 
                0.5], "X"}]], "LaTeX"->StyleBox[ 
            RowBox[ {"L", 
              StyleBox[ 
                AdjustmentBox[ 
                "A", BoxMargins -> {{-0.36, -0.1}, {0, -0}}, 
                  BoxBaselineShift -> -0.2], FontSize -> Smaller], "T", 
              AdjustmentBox[ 
              "E", BoxMargins -> {{-0.075, -0.085}, {0, 0}}, BoxBaselineShift -> 
                0.5], "X"}]], "mma"->"Mathematica", "Mma"->"Mathematica", 
        "MMA"->"Mathematica"},
    LanguageCategory->"NaturalLanguage",
    CounterIncrements->"Subtitle",
    CounterAssignments->{{"Section", 0}, {"Equation", 0}, {"Figure", 0}, {
        "Subsubtitle", 0}},
    FontFamily->"Times",
    FontSize->24,
    Background->RGBColor[0.870604, 0.721599, 0.529412]],
  
  Cell[StyleData["Chaptertitle", "Presentation"],
    CellMargins->{{24, 10}, {20, 20}},
    LineSpacing->{1, 0},
    FontSize->36],
  
  Cell[StyleData["Chaptertitle", "Condensed"],
    CellMargins->{{8, 10}, {4, 4}},
    FontSize->14],
  
  Cell[StyleData["Chaptertitle", "Printout"],
    CellMargins->{{2, 10}, {12, 8}},
    FontSize->18,
    Background->GrayLevel[1]]
  }, Open  ]]
  }, Closed]],
  
  Cell[CellGroupData[{
  
  Cell["Inline Formatting", "Section"],
  
  Cell["\<\
These styles are for modifying individual words or letters in a cell \
exclusive of the cell tag.\
\>", "Text"],
  
  Cell[StyleData["RM"],
    StyleMenuListing->None,
    FontWeight->"Plain",
    FontSlant->"Plain"],
  
  Cell[StyleData["BF"],
    StyleMenuListing->None,
    FontWeight->"Bold"],
  
  Cell[StyleData["IT"],
    StyleMenuListing->None,
    FontSlant->"Italic"],
  
  Cell[StyleData["TR"],
    StyleMenuListing->None,
    FontFamily->"Times",
    FontWeight->"Plain",
    FontSlant->"Plain"],
  
  Cell[StyleData["TI"],
    StyleMenuListing->None,
    FontFamily->"Times",
    FontWeight->"Plain",
    FontSlant->"Italic"],
  
  Cell[StyleData["TB"],
    StyleMenuListing->None,
    FontFamily->"Times",
    FontWeight->"Bold",
    FontSlant->"Plain"],
  
  Cell[StyleData["TBI"],
    StyleMenuListing->None,
    FontFamily->"Times",
    FontWeight->"Bold",
    FontSlant->"Italic"],
  
  Cell[StyleData["MR"],
    "TwoByteSyntaxCharacterAutoReplacement"->True,
    HyphenationOptions->{"HyphenationCharacter"->"\[Continuation]"},
    StyleMenuListing->None,
    FontFamily->"Courier",
    FontWeight->"Plain",
    FontSlant->"Plain"],
  
  Cell[StyleData["MO"],
    "TwoByteSyntaxCharacterAutoReplacement"->True,
    HyphenationOptions->{"HyphenationCharacter"->"\[Continuation]"},
    StyleMenuListing->None,
    FontFamily->"Courier",
    FontWeight->"Plain",
    FontSlant->"Italic"],
  
  Cell[StyleData["MB"],
    "TwoByteSyntaxCharacterAutoReplacement"->True,
    HyphenationOptions->{"HyphenationCharacter"->"\[Continuation]"},
    StyleMenuListing->None,
    FontFamily->"Courier",
    FontWeight->"Bold",
    FontSlant->"Plain"],
  
  Cell[StyleData["MBO"],
    "TwoByteSyntaxCharacterAutoReplacement"->True,
    HyphenationOptions->{"HyphenationCharacter"->"\[Continuation]"},
    StyleMenuListing->None,
    FontFamily->"Courier",
    FontWeight->"Bold",
    FontSlant->"Italic"],
  
  Cell[StyleData["SR"],
    StyleMenuListing->None,
    FontFamily->"Helvetica",
    FontWeight->"Plain",
    FontSlant->"Plain"],
  
  Cell[StyleData["SO"],
    StyleMenuListing->None,
    FontFamily->"Helvetica",
    FontWeight->"Plain",
    FontSlant->"Italic"],
  
  Cell[StyleData["SB"],
    StyleMenuListing->None,
    FontFamily->"Helvetica",
    FontWeight->"Bold",
    FontSlant->"Plain"],
  
  Cell[StyleData["SBO"],
    StyleMenuListing->None,
    FontFamily->"Helvetica",
    FontWeight->"Bold",
    FontSlant->"Italic"],
  
  Cell[CellGroupData[{
  
  Cell[StyleData["SO10"],
    StyleMenuListing->None,
    FontFamily->"Helvetica",
    FontSize->10,
    FontWeight->"Plain",
    FontSlant->"Italic"],
  
  Cell[StyleData["SO10", "Printout"],
    StyleMenuListing->None,
    FontFamily->"Helvetica",
    FontSize->7,
    FontWeight->"Plain",
    FontSlant->"Italic"],
  
  Cell[StyleData["SO10", "EnhancedPrintout"],
    StyleMenuListing->None,
    FontFamily->"Futura",
    FontSize->7,
    FontWeight->"Plain",
    FontSlant->"Italic"]
  }, Closed]]
  }, Closed]],
  
  Cell[CellGroupData[{
  
  Cell["Formulas and Programming", "Section"],
  
  Cell[CellGroupData[{
  
  Cell[StyleData["InlineFormula"],
    CellMargins->{{10, 4}, {0, 8}},
    CellHorizontalScrolling->True,
    HyphenationOptions->{"HyphenationCharacter"->"\[Continuation]"},
    LanguageCategory->"Formula",
    ScriptLevel->1,
    SingleLetterItalics->True],
  
  Cell[StyleData["InlineFormula", "Presentation"],
    CellMargins->{{24, 10}, {10, 10}},
    LineSpacing->{1, 5},
    FontSize->16],
  
  Cell[StyleData["InlineFormula", "Condensed"],
    CellMargins->{{8, 10}, {6, 6}},
    LineSpacing->{1, 1},
    FontSize->11],
  
  Cell[StyleData["InlineFormula", "Printout"],
    CellMargins->{{2, 0}, {6, 6}},
    FontSize->10]
  }, Closed]],
  
  Cell[CellGroupData[{
  
  Cell[StyleData["DisplayFormula"],
    CellMargins->{{42, Inherited}, {Inherited, Inherited}},
    CellHorizontalScrolling->True,
    DefaultFormatType->DefaultInputFormatType,
    HyphenationOptions->{"HyphenationCharacter"->"\[Continuation]"},
    LanguageCategory->"Formula",
    ScriptLevel->0,
    SingleLetterItalics->True,
    UnderoverscriptBoxOptions->{LimitsPositioning->True}],
  
  Cell[StyleData["DisplayFormula", "Presentation"],
    LineSpacing->{1, 5},
    FontSize->16],
  
  Cell[StyleData["DisplayFormula", "Condensed"],
    LineSpacing->{1, 1},
    FontSize->11],
  
  Cell[StyleData["DisplayFormula", "Printout"],
    FontSize->10]
  }, Closed]],
  
  Cell[CellGroupData[{
  
  Cell[StyleData["Program"],
    CellFrame->{{0, 0}, {0.5, 0.5}},
    CellMargins->{{10, 4}, {0, 8}},
    CellHorizontalScrolling->True,
    Hyphenation->False,
    LanguageCategory->"Formula",
    ScriptLevel->1,
    FontFamily->"Courier"],
  
  Cell[StyleData["Program", "Presentation"],
    CellMargins->{{24, 10}, {10, 10}},
    LineSpacing->{1, 5},
    FontSize->16],
  
  Cell[StyleData["Program", "Condensed"],
    CellMargins->{{8, 10}, {6, 6}},
    LineSpacing->{1, 1},
    FontSize->11],
  
  Cell[StyleData["Program", "Printout"],
    CellMargins->{{2, 0}, {6, 6}},
    FontSize->9]
  }, Closed]]
  }, Closed]],
  
  Cell[CellGroupData[{
  
  Cell["Outline Styles", "Section"],
  
  Cell[CellGroupData[{
  
  Cell[StyleData["Outline1"],
    CellMargins->{{12, 10}, {7, 7}},
    CellGroupingRules->{"SectionGrouping", 50},
    ParagraphIndent->-38,
    CounterIncrements->"Outline1",
    FontSize->18,
    FontWeight->"Bold",
    CounterBoxOptions->{CounterFunction:>CapitalRomanNumeral}],
  
  Cell[StyleData["Outline1", "Printout"],
    CounterBoxOptions->{CounterFunction:>CapitalRomanNumeral}]
  }, Closed]],
  
  Cell[CellGroupData[{
  
  Cell[StyleData["Outline2"],
    CellMargins->{{59, 10}, {7, 7}},
    CellGroupingRules->{"SectionGrouping", 60},
    ParagraphIndent->-27,
    CounterIncrements->"Outline2",
    FontSize->15,
    FontWeight->"Bold",
    CounterBoxOptions->{CounterFunction:>(Part[ 
        CharacterRange[ "A", "Z"], #]&)}],
  
  Cell[StyleData["Outline2", "Printout"],
    CounterBoxOptions->{CounterFunction:>(Part[ 
        CharacterRange[ "A", "Z"], #]&)}]
  }, Closed]],
  
  Cell[CellGroupData[{
  
  Cell[StyleData["Outline3"],
    CellMargins->{{108, 10}, {7, 7}},
    CellGroupingRules->{"SectionGrouping", 70},
    ParagraphIndent->-21,
    CounterIncrements->"Outline3",
    FontSize->12,
    CounterBoxOptions->{CounterFunction:>Identity}],
  
  Cell[StyleData["Outline3", "Printout"],
    CounterBoxOptions->{CounterFunction:>Identity}]
  }, Closed]],
  
  Cell[CellGroupData[{
  
  Cell[StyleData["Outline4"],
    CellMargins->{{158, 10}, {7, 7}},
    CellGroupingRules->{"SectionGrouping", 80},
    ParagraphIndent->-18,
    CounterIncrements->"Outline4",
    FontSize->10,
    CounterBoxOptions->{CounterFunction:>(Part[ 
        CharacterRange[ "a", "z"], #]&)}],
  
  Cell[StyleData["Outline4", "Printout"]]
  }, Closed]]
  }, Closed]],
  
  Cell[CellGroupData[{
  
  Cell["Hyperlink Styles", "Section"],
  
  Cell["\<\
The cells below define styles useful for making hypertext ButtonBoxes.  The \
\"Hyperlink\" style is for links within the same Notebook, or between \
Notebooks.\
\>", "Text"],
  
  Cell[CellGroupData[{
  
  Cell[StyleData["Hyperlink"],
    StyleMenuListing->None,
    ButtonStyleMenuListing->Automatic,
    FontColor->RGBColor[0, 0, 1],
    FontVariations->{"Underline"->True},
    ButtonBoxOptions->{ButtonFunction:>(FrontEndExecute[ {
        FrontEnd`NotebookLocate[ #2]}]&),
    Active->True,
    ButtonFrame->"None",
    ButtonNote->ButtonData}],
  
  Cell[StyleData["Hyperlink", "Presentation"],
    FontSize->16],
  
  Cell[StyleData["Hyperlink", "Condensed"],
    FontSize->11],
  
  Cell[StyleData["Hyperlink", "Printout"],
    FontSize->10,
    FontColor->GrayLevel[0],
    FontVariations->{"Underline"->False}]
  }, Closed]],
  
  Cell["\<\
The following styles are for linking automatically to the on-line help \
system.\
\>", "Text"],
  
  Cell[CellGroupData[{
  
  Cell[StyleData["MainBookLink"],
    StyleMenuListing->None,
    ButtonStyleMenuListing->Automatic,
    FontColor->RGBColor[0, 0, 1],
    FontVariations->{"Underline"->True},
    ButtonBoxOptions->{ButtonFunction:>(FrontEndExecute[ {
        FrontEnd`HelpBrowserLookup[ "MainBook", #]}]&),
    Active->True,
    ButtonFrame->"None"}],
  
  Cell[StyleData["MainBookLink", "Presentation"],
    FontSize->16],
  
  Cell[StyleData["MainBookLink", "Condensed"],
    FontSize->11],
  
  Cell[StyleData["MainBookLink", "Printout"],
    FontSize->10,
    FontColor->GrayLevel[0],
    FontVariations->{"Underline"->False}]
  }, Closed]],
  
  Cell[CellGroupData[{
  
  Cell[StyleData["AddOnsLink"],
    StyleMenuListing->None,
    ButtonStyleMenuListing->Automatic,
    FontFamily->"Courier",
    FontColor->RGBColor[0, 0, 1],
    FontVariations->{"Underline"->True},
    ButtonBoxOptions->{ButtonFunction:>(FrontEndExecute[ {
        FrontEnd`HelpBrowserLookup[ "AddOns", #]}]&),
    Active->True,
    ButtonFrame->"None"}],
  
  Cell[StyleData["AddOnsLink", "Presentation"],
    FontSize->16],
  
  Cell[StyleData["AddOnsLink", "Condensed"],
    FontSize->11],
  
  Cell[StyleData["AddOnsLink", "Printout"],
    FontSize->10,
    FontColor->GrayLevel[0],
    FontVariations->{"Underline"->False}]
  }, Closed]],
  
  Cell[CellGroupData[{
  
  Cell[StyleData["RefGuideLink"],
    StyleMenuListing->None,
    ButtonStyleMenuListing->Automatic,
    FontFamily->"Courier",
    FontColor->RGBColor[0, 0, 1],
    FontVariations->{"Underline"->True},
    ButtonBoxOptions->{ButtonFunction:>(FrontEndExecute[ {
        FrontEnd`HelpBrowserLookup[ "RefGuide", #]}]&),
    Active->True,
    ButtonFrame->"None"}],
  
  Cell[StyleData["RefGuideLink", "Presentation"],
    FontSize->16],
  
  Cell[StyleData["RefGuideLink", "Condensed"],
    FontSize->11],
  
  Cell[StyleData["RefGuideLink", "Printout"],
    FontSize->10,
    FontColor->GrayLevel[0],
    FontVariations->{"Underline"->False}]
  }, Closed]],
  
  Cell[CellGroupData[{
  
  Cell[StyleData["GettingStartedLink"],
    StyleMenuListing->None,
    ButtonStyleMenuListing->Automatic,
    FontColor->RGBColor[0, 0, 1],
    FontVariations->{"Underline"->True},
    ButtonBoxOptions->{ButtonFunction:>(FrontEndExecute[ {
        FrontEnd`HelpBrowserLookup[ "GettingStarted", #]}]&),
    Active->True,
    ButtonFrame->"None"}],
  
  Cell[StyleData["GettingStartedLink", "Presentation"],
    FontSize->16],
  
  Cell[StyleData["GettingStartedLink", "Condensed"],
    FontSize->11],
  
  Cell[StyleData["GettingStartedLink", "Printout"],
    FontSize->10,
    FontColor->GrayLevel[0],
    FontVariations->{"Underline"->False}]
  }, Closed]],
  
  Cell[CellGroupData[{
  
  Cell[StyleData["OtherInformationLink"],
    StyleMenuListing->None,
    ButtonStyleMenuListing->Automatic,
    FontColor->RGBColor[0, 0, 1],
    FontVariations->{"Underline"->True},
    ButtonBoxOptions->{ButtonFunction:>(FrontEndExecute[ {
        FrontEnd`HelpBrowserLookup[ "OtherInformation", #]}]&),
    Active->True,
    ButtonFrame->"None"}],
  
  Cell[StyleData["OtherInformationLink", "Presentation"],
    FontSize->16],
  
  Cell[StyleData["OtherInformationLink", "Condensed"],
    FontSize->11],
  
  Cell[StyleData["OtherInformationLink", "Printout"],
    FontSize->10,
    FontColor->GrayLevel[0],
    FontVariations->{"Underline"->False}]
  }, Closed]]
  }, Closed]],
  
  Cell[CellGroupData[{
  
  Cell["Styles for Headers and Footers", "Section"],
  
  Cell[StyleData["Header"],
    CellMargins->{{0, 0}, {4, 1}},
    DefaultNewInlineCellStyle->"None",
    LanguageCategory->"NaturalLanguage",
    StyleMenuListing->None,
    FontSize->10,
    FontSlant->"Italic"],
  
  Cell[StyleData["Footer"],
    CellMargins->{{0, 0}, {0, 4}},
    DefaultNewInlineCellStyle->"None",
    LanguageCategory->"NaturalLanguage",
    StyleMenuListing->None,
    FontSize->9,
    FontSlant->"Italic"],
  
  Cell[StyleData["PageNumber"],
    CellMargins->{{0, 0}, {4, 1}},
    StyleMenuListing->None,
    FontFamily->"Times",
    FontSize->10]
  }, Closed]],
  
  Cell[CellGroupData[{
  
  Cell["Palette Styles", "Section"],
  
  Cell["\<\
The cells below define styles that define standard ButtonFunctions, for use \
in palette buttons.\
\>", "Text"],
  
  Cell[StyleData["Paste"],
    StyleMenuListing->None,
    ButtonStyleMenuListing->Automatic,
    ButtonBoxOptions->{ButtonFunction:>(FrontEndExecute[ {
        FrontEnd`NotebookApply[ 
          FrontEnd`InputNotebook[ ], #, Placeholder]}]&)}],
  
  Cell[StyleData["Evaluate"],
    StyleMenuListing->None,
    ButtonStyleMenuListing->Automatic,
    ButtonBoxOptions->{ButtonFunction:>(FrontEndExecute[ {
        FrontEnd`NotebookApply[ 
          FrontEnd`InputNotebook[ ], #, All], 
        SelectionEvaluate[ 
          FrontEnd`InputNotebook[ ], All]}]&)}],
  
  Cell[StyleData["EvaluateCell"],
    StyleMenuListing->None,
    ButtonStyleMenuListing->Automatic,
    ButtonBoxOptions->{ButtonFunction:>(FrontEndExecute[ {
        FrontEnd`NotebookApply[ 
          FrontEnd`InputNotebook[ ], #, All], 
        FrontEnd`SelectionMove[ 
          FrontEnd`InputNotebook[ ], All, Cell, 1], 
        FrontEnd`SelectionEvaluateCreateCell[ 
          FrontEnd`InputNotebook[ ], All]}]&)}],
  
  Cell[StyleData["CopyEvaluate"],
    StyleMenuListing->None,
    ButtonStyleMenuListing->Automatic,
    ButtonBoxOptions->{ButtonFunction:>(FrontEndExecute[ {
        FrontEnd`SelectionCreateCell[ 
          FrontEnd`InputNotebook[ ], All], 
        FrontEnd`NotebookApply[ 
          FrontEnd`InputNotebook[ ], #, All], 
        FrontEnd`SelectionEvaluate[ 
          FrontEnd`InputNotebook[ ], All]}]&)}],
  
  Cell[StyleData["CopyEvaluateCell"],
    StyleMenuListing->None,
    ButtonStyleMenuListing->Automatic,
    ButtonBoxOptions->{ButtonFunction:>(FrontEndExecute[ {
        FrontEnd`SelectionCreateCell[ 
          FrontEnd`InputNotebook[ ], All], 
        FrontEnd`NotebookApply[ 
          FrontEnd`InputNotebook[ ], #, All], 
        FrontEnd`SelectionEvaluateCreateCell[ 
          FrontEnd`InputNotebook[ ], All]}]&)}]
  }, Closed]],
  
  Cell[CellGroupData[{
  
  Cell["Placeholder Styles", "Section"],
  
  Cell["\<\
The cells below define styles useful for making placeholder objects in \
palette templates.\
\>", "Text"],
  
  Cell[CellGroupData[{
  
  Cell[StyleData["Placeholder"],
    Placeholder->True,
    StyleMenuListing->None,
    FontSlant->"Italic",
    FontColor->RGBColor[0.890623, 0.864698, 0.384756],
    TagBoxOptions->{Editable->False,
    Selectable->False,
    StripWrapperBoxes->False}],
  
  Cell[StyleData["Placeholder", "Presentation"]],
  
  Cell[StyleData["Placeholder", "Condensed"]],
  
  Cell[StyleData["Placeholder", "Printout"]]
  }, Closed]],
  
  Cell[CellGroupData[{
  
  Cell[StyleData["PrimaryPlaceholder"],
    StyleMenuListing->None,
    DrawHighlighted->True,
    FontSlant->"Italic",
    Background->RGBColor[0.912505, 0.891798, 0.507774],
    TagBoxOptions->{Editable->False,
    Selectable->False,
    StripWrapperBoxes->False}],
  
  Cell[StyleData["PrimaryPlaceholder", "Presentation"]],
  
  Cell[StyleData["PrimaryPlaceholder", "Condensed"]],
  
  Cell[StyleData["PrimaryPlaceholder", "Printout"]]
  }, Closed]]
  }, Closed]],
  
  Cell[CellGroupData[{
  
  Cell["FormatType Styles", "Section"],
  
  Cell["\<\
The cells below define styles that are mixed in with the styles of most \
cells.  If a cell's FormatType matches the name of one of the styles defined \
below, then that style is applied between the cell's style and its own \
options. This is particularly true of Input and Output.\
\>", "Text"],
  
  Cell[StyleData["CellExpression"],
    PageWidth->Infinity,
    CellMargins->{{6, Inherited}, {Inherited, Inherited}},
    ShowCellLabel->False,
    ShowSpecialCharacters->False,
    AllowInlineCells->False,
    Hyphenation->False,
    AutoItalicWords->{},
    StyleMenuListing->None,
    FontFamily->"Courier",
    FontSize->12,
    Background->GrayLevel[1]],
  
  Cell[StyleData["InputForm"],
    InputAutoReplacements->{},
    AllowInlineCells->False,
    Hyphenation->False,
    StyleMenuListing->None,
    FontFamily->"Courier"],
  
  Cell[StyleData["OutputForm"],
    PageWidth->Infinity,
    TextAlignment->Left,
    LineSpacing->{0.6, 1},
    StyleMenuListing->None,
    FontFamily->"Courier"],
  
  Cell[StyleData["StandardForm"],
    InputAutoReplacements->{
      "->"->"\[Rule]", ":>"->"\[RuleDelayed]", "<="->"\[LessEqual]", 
        ">="->"\[GreaterEqual]", "!="->"\[NotEqual]", "=="->"\[Equal]", 
        Inherited},
    "TwoByteSyntaxCharacterAutoReplacement"->True,
    LineSpacing->{1.25, 0},
    StyleMenuListing->None,
    FontFamily->"Courier"],
  
  Cell[StyleData["TraditionalForm"],
    InputAutoReplacements->{
      "->"->"\[Rule]", ":>"->"\[RuleDelayed]", "<="->"\[LessEqual]", 
        ">="->"\[GreaterEqual]", "!="->"\[NotEqual]", "=="->"\[Equal]", 
        Inherited},
    "TwoByteSyntaxCharacterAutoReplacement"->True,
    LineSpacing->{1.25, 0},
    SingleLetterItalics->True,
    TraditionalFunctionNotation->True,
    DelimiterMatching->None,
    StyleMenuListing->None],
  
  Cell["\<\
The style defined below is mixed in to any cell that is in an inline cell \
within another.\
\>", "Text"],
  
  Cell[StyleData["InlineCell"],
    LanguageCategory->"Formula",
    ScriptLevel->1,
    StyleMenuListing->None,
    FontWeight->"Bold"],
  
  Cell[StyleData["InlineCellEditing"],
    StyleMenuListing->None,
    Background->RGBColor[1, 0.749996, 0.8]]
  }, Closed]],
  
  Cell[CellGroupData[{
  
  Cell["Automatic Styles", "Section"],
  
  Cell["\<\
The cells below define styles that are used to affect the display of certain \
types of objects in typeset expressions.  For example, \"UnmatchedBracket\" \
style defines how unmatched bracket, curly bracket, and parenthesis \
characters are displayed (typically by coloring them to make them stand out).\
\
\>", "Text"],
  
  Cell[StyleData["UnmatchedBracket"],
    StyleMenuListing->None,
    FontColor->RGBColor[0.760006, 0.330007, 0.8]]
  }, Closed]]
  }, Open  ]]
  }]
]

(*******************************************************************
Cached data follows.  If you edit this Notebook file directly, not
using Mathematica, you must remove the line containing CacheID at
the top of  the file.  The cache data will then be recreated when
you save this file from within Mathematica.
*******************************************************************)

(*CellTagsOutline
CellTagsIndex->{
  "SlideShowHeader"->{
    Cell[1754, 51, 1717, 45, 20, "SlideShowNavigationBar",
      CellTags->"SlideShowHeader"],
    Cell[5369, 141, 1717, 45, 20, "SlideShowNavigationBar",
      CellTags->"SlideShowHeader"],
    Cell[11789, 334, 1717, 45, 20, "SlideShowNavigationBar",
      CellTags->"SlideShowHeader"],
    Cell[22971, 626, 1679, 44, 20, "SlideShowNavigationBar",
      CellTags->"SlideShowHeader"],
    Cell[31485, 859, 1679, 44, 20, "SlideShowNavigationBar",
      CellTags->"SlideShowHeader"],
    Cell[40772, 1136, 1679, 44, 20, "SlideShowNavigationBar",
      CellTags->"SlideShowHeader"],
    Cell[49523, 1408, 1679, 44, 20, "SlideShowNavigationBar",
      CellTags->"SlideShowHeader"],
    Cell[69293, 1962, 1679, 44, 20, "SlideShowNavigationBar",
      CellTags->"SlideShowHeader"],
    Cell[84095, 2374, 1679, 44, 20, "SlideShowNavigationBar",
      CellTags->"SlideShowHeader"],
    Cell[111458, 3037, 1679, 44, 20, "SlideShowNavigationBar",
      CellTags->"SlideShowHeader"],
    Cell[122464, 3320, 1679, 44, 20, "SlideShowNavigationBar",
      CellTags->"SlideShowHeader"],
    Cell[142909, 3800, 1679, 44, 20, "SlideShowNavigationBar",
      CellTags->"SlideShowHeader"],
    Cell[153717, 4065, 1679, 44, 20, "SlideShowNavigationBar",
      CellTags->"SlideShowHeader"],
    Cell[197313, 5076, 1679, 44, 20, "SlideShowNavigationBar",
      CellTags->"SlideShowHeader"],
    Cell[212231, 5470, 1679, 44, 20, "SlideShowNavigationBar",
      CellTags->"SlideShowHeader"],
    Cell[233449, 6018, 1679, 44, 20, "SlideShowNavigationBar",
      CellTags->"SlideShowHeader"],
    Cell[273103, 6950, 1679, 44, 20, "SlideShowNavigationBar",
      CellTags->"SlideShowHeader"],
    Cell[295233, 7540, 1679, 44, 20, "SlideShowNavigationBar",
      CellTags->"SlideShowHeader"],
    Cell[328638, 8468, 1679, 44, 20, "SlideShowNavigationBar",
      CellTags->"SlideShowHeader"],
    Cell[340091, 8814, 1679, 44, 20, "SlideShowNavigationBar",
      CellTags->"SlideShowHeader"],
    Cell[351183, 9105, 1679, 44, 20, "SlideShowNavigationBar",
      CellTags->"SlideShowHeader"],
    Cell[413035, 10601, 1679, 44, 20, "SlideShowNavigationBar",
      CellTags->"SlideShowHeader"],
    Cell[421032, 10829, 1679, 44, 20, "SlideShowNavigationBar",
      CellTags->"SlideShowHeader"],
    Cell[426256, 10970, 1679, 44, 20, "SlideShowNavigationBar",
      CellTags->"SlideShowHeader"],
    Cell[434428, 11204, 1679, 44, 20, "SlideShowNavigationBar",
      CellTags->"SlideShowHeader"],
    Cell[444085, 11488, 1679, 44, 20, "SlideShowNavigationBar",
      CellTags->"SlideShowHeader"],
    Cell[566795, 14215, 1679, 44, 20, "SlideShowNavigationBar",
      CellTags->"SlideShowHeader"],
    Cell[572513, 14384, 1679, 44, 20, "SlideShowNavigationBar",
      CellTags->"SlideShowHeader"],
    Cell[585399, 14748, 1679, 44, 20, "SlideShowNavigationBar",
      CellTags->"SlideShowHeader"]}
  }
*)

(*CellTagsIndex
CellTagsIndex->{
  {"SlideShowHeader", 701382, 17928}
  }
*)

(*NotebookFileOutline
Notebook[{
Cell[1754, 51, 1717, 45, 20, "SlideShowNavigationBar",
  CellTags->"SlideShowHeader"],

Cell[CellGroupData[{
Cell[3496, 100, 87, 4, 92, "Title"],
Cell[3586, 106, 116, 3, 92, "Chaptertitle"],
Cell[3705, 111, 101, 2, 50, "Subsubtitle"],
Cell[3809, 115, 1557, 24, 545, "EmphasisText"],
Cell[5369, 141, 1717, 45, 20, "SlideShowNavigationBar",
  CellTags->"SlideShowHeader"],

Cell[CellGroupData[{
Cell[7111, 190, 113, 4, 80, "Section"],
Cell[7227, 196, 72, 1, 56, "Input"],
Cell[7302, 199, 99, 2, 43, "Text"],
Cell[7404, 203, 207, 3, 79, "Input"],
Cell[7614, 208, 317, 5, 95, "Text"],

Cell[CellGroupData[{
Cell[7956, 217, 87, 1, 56, "Input"],
Cell[8046, 220, 1051, 28, 42, "Output"]
}, Open  ]],

Cell[CellGroupData[{
Cell[9134, 253, 111, 2, 79, "Input"],
Cell[9248, 257, 623, 18, 42, "Output"],
Cell[9874, 277, 1888, 53, 42, "Output"]
}, Open  ]]
}, Open  ]],
Cell[11789, 334, 1717, 45, 20, "SlideShowNavigationBar",
  CellTags->"SlideShowHeader"],

Cell[CellGroupData[{
Cell[13531, 383, 112, 4, 80, "Section"],
Cell[13646, 389, 54, 0, 43, "Text"],

Cell[CellGroupData[{
Cell[13725, 393, 260, 4, 125, "Input"],
Cell[13988, 399, 479, 13, 44, "Output"],
Cell[14470, 414, 3867, 92, 73, "Output"]
}, Open  ]],
Cell[18352, 509, 209, 4, 69, "Text"],

Cell[CellGroupData[{
Cell[18586, 517, 262, 5, 102, "Input"],
Cell[18851, 524, 4093, 98, 73, "Output"]
}, Open  ]]
}, Open  ]],
Cell[22971, 626, 1679, 44, 20, "SlideShowNavigationBar",
  CellTags->"SlideShowHeader"],

Cell[CellGroupData[{
Cell[24675, 674, 112, 4, 80, "Section"],
Cell[24790, 680, 91, 2, 43, "Text"],

Cell[CellGroupData[{
Cell[24906, 686, 117, 2, 79, "Input"],
Cell[25026, 690, 4092, 98, 73, "Output"]
}, Open  ]],
Cell[29133, 791, 145, 4, 43, "Text"],

Cell[CellGroupData[{
Cell[29303, 799, 771, 18, 83, "Input"],
Cell[30077, 819, 728, 18, 44, "Output"],
Cell[30808, 839, 292, 8, 70, "Output"]
}, Open  ]],
Cell[31115, 850, 47, 0, 43, "Text"],
Cell[31165, 852, 305, 4, 102, "Input"]
}, Open  ]],
Cell[31485, 859, 1679, 44, 20, "SlideShowNavigationBar",
  CellTags->"SlideShowHeader"],

Cell[CellGroupData[{
Cell[33189, 907, 107, 4, 80, "Section"],
Cell[33299, 913, 255, 5, 125, "EmphasisText"],
Cell[33557, 920, 277, 6, 69, "Text"],
Cell[33837, 928, 168, 3, 69, "Text"],

Cell[CellGroupData[{
Cell[34030, 935, 160, 3, 102, "Input"],
Cell[34193, 940, 623, 18, 41, "Output"],
Cell[34819, 960, 2495, 70, 42, "Output"]
}, Open  ]],
Cell[37329, 1033, 51, 0, 43, "Text"],

Cell[CellGroupData[{
Cell[37405, 1037, 174, 3, 102, "Input"],
Cell[37582, 1042, 665, 18, 41, "Output"],
Cell[38250, 1062, 2495, 70, 42, "Output"]
}, Open  ]]
}, Open  ]],
Cell[40772, 1136, 1679, 44, 20, "SlideShowNavigationBar",
  CellTags->"SlideShowHeader"],

Cell[CellGroupData[{
Cell[42476, 1184, 107, 4, 80, "Section"],
Cell[42586, 1190, 48, 0, 43, "Text"],

Cell[CellGroupData[{
Cell[42659, 1194, 160, 3, 102, "Input"],
Cell[42822, 1199, 623, 18, 42, "Output"],
Cell[43448, 1219, 2495, 70, 43, "Output"]
}, Open  ]],
Cell[45958, 1292, 69, 0, 43, "Text"],

Cell[CellGroupData[{
Cell[46052, 1296, 110, 2, 79, "Input"],
Cell[46165, 1300, 929, 27, 42, "Output"],
Cell[47097, 1329, 459, 14, 41, "Output"]
}, Open  ]],
Cell[47571, 1346, 191, 4, 69, "Text"],

Cell[CellGroupData[{
Cell[47787, 1354, 153, 3, 79, "Input"],
Cell[47943, 1359, 1049, 29, 44, "Output"],
Cell[48995, 1390, 501, 14, 42, "Output"]
}, Open  ]]
}, Open  ]],
Cell[49523, 1408, 1679, 44, 20, "SlideShowNavigationBar",
  CellTags->"SlideShowHeader"],

Cell[CellGroupData[{
Cell[51227, 1456, 112, 4, 80, "Section"],
Cell[51342, 1462, 154, 3, 95, "EmphasisText"],
Cell[51499, 1467, 105, 2, 56, "Input"],

Cell[CellGroupData[{
Cell[51629, 1473, 149, 3, 79, "Input"],
Cell[51781, 1478, 1363, 36, 41, "Output"],
Cell[53147, 1516, 5431, 142, 43, "Output"]
}, Open  ]],

Cell[CellGroupData[{
Cell[58615, 1663, 152, 3, 79, "Input"],
Cell[58770, 1668, 729, 20, 43, "Output"],
Cell[59502, 1690, 2767, 78, 48, "Output"]
}, Open  ]],

Cell[CellGroupData[{
Cell[62306, 1773, 150, 3, 79, "Input"],
Cell[62459, 1778, 1365, 36, 41, "Output"],
Cell[63827, 1816, 5439, 142, 43, "Output"]
}, Open  ]]
}, Open  ]],
Cell[69293, 1962, 1679, 44, 20, "SlideShowNavigationBar",
  CellTags->"SlideShowHeader"],

Cell[CellGroupData[{
Cell[70997, 2010, 112, 4, 80, "Section"],
Cell[71112, 2016, 91, 2, 43, "Text"],
Cell[71206, 2020, 640, 12, 136, "Input"],
Cell[71849, 2034, 148, 3, 69, "Text"],
Cell[72000, 2039, 27, 0, 43, "Text"],

Cell[CellGroupData[{
Cell[72052, 2043, 168, 3, 79, "Input"],
Cell[72223, 2048, 1820, 50, 42, "Output"],
Cell[74046, 2100, 3979, 103, 70, "Output"]
}, Open  ]],
Cell[78040, 2206, 30, 0, 43, "Text"],

Cell[CellGroupData[{
Cell[78095, 2210, 168, 3, 79, "Input"],
Cell[78266, 2215, 1820, 50, 42, "Output"],
Cell[80089, 2267, 3979, 103, 70, "Output"]
}, Open  ]]
}, Open  ]],
Cell[84095, 2374, 1679, 44, 20, "SlideShowNavigationBar",
  CellTags->"SlideShowHeader"],

Cell[CellGroupData[{
Cell[85799, 2422, 112, 4, 80, "Section"],
Cell[85914, 2428, 86, 2, 43, "Text"],

Cell[CellGroupData[{
Cell[86025, 2434, 300, 6, 102, "Input"],
Cell[86328, 2442, 3501, 94, 42, "Output"],
Cell[89832, 2538, 21599, 495, 138, "Output"]
}, Open  ]]
}, Open  ]],
Cell[111458, 3037, 1679, 44, 20, "SlideShowNavigationBar",
  CellTags->"SlideShowHeader"],

Cell[CellGroupData[{
Cell[113162, 3085, 117, 4, 80, "Section"],
Cell[113282, 3091, 128, 3, 95, "EmphasisText"],
Cell[113413, 3096, 208, 6, 69, "Text"],

Cell[CellGroupData[{
Cell[113646, 3106, 950, 19, 287, "Input"],
Cell[114599, 3127, 1850, 46, 102, "Output"],
Cell[116452, 3175, 5985, 141, 210, "Output"]
}, Open  ]]
}, Open  ]],
Cell[122464, 3320, 1679, 44, 20, "SlideShowNavigationBar",
  CellTags->"SlideShowHeader"],

Cell[CellGroupData[{
Cell[124168, 3368, 117, 4, 80, "Section"],
Cell[124288, 3374, 137, 4, 43, "Text"],

Cell[CellGroupData[{
Cell[124450, 3382, 774, 15, 242, "Input"],
Cell[125227, 3399, 3556, 83, 104, "Output"],
Cell[128786, 3484, 14096, 312, 216, "Output"]
}, Open  ]]
}, Open  ]],
Cell[142909, 3800, 1679, 44, 20, "SlideShowNavigationBar",
  CellTags->"SlideShowHeader"],

Cell[CellGroupData[{
Cell[144613, 3848, 117, 4, 80, "Section"],
Cell[144733, 3854, 247, 6, 69, "Text"],

Cell[CellGroupData[{
Cell[145005, 3864, 827, 16, 264, "Input"],
Cell[145835, 3882, 1567, 37, 72, "Output"],
Cell[147405, 3921, 6285, 140, 78, "Output"]
}, Open  ]]
}, Open  ]],
Cell[153717, 4065, 1679, 44, 20, "SlideShowNavigationBar",
  CellTags->"SlideShowHeader"],

Cell[CellGroupData[{
Cell[155421, 4113, 117, 4, 80, "Section"],
Cell[155541, 4119, 141, 3, 69, "Text"],

Cell[CellGroupData[{
Cell[155707, 4126, 146, 2, 56, "Input"],
Cell[155856, 4130, 40919, 930, 486, "Output"]
}, Open  ]],
Cell[196790, 5063, 508, 10, 148, "Input"]
}, Open  ]],
Cell[197313, 5076, 1679, 44, 20, "SlideShowNavigationBar",
  CellTags->"SlideShowHeader"],

Cell[CellGroupData[{
Cell[199017, 5124, 117, 4, 80, "Section"],
Cell[199137, 5130, 105, 2, 65, "EmphasisText"],
Cell[199245, 5134, 186, 8, 43, "Text"],

Cell[CellGroupData[{
Cell[199456, 5146, 186, 3, 102, "Input"],
Cell[199645, 5151, 44, 1, 41, "Output"],
Cell[199692, 5154, 564, 17, 46, "Output"],
Cell[200259, 5173, 5162, 119, 100, "Output"]
}, Open  ]],
Cell[205436, 5295, 178, 6, 43, "Text"],

Cell[CellGroupData[{
Cell[205639, 5305, 219, 4, 102, "Input"],
Cell[205861, 5311, 1178, 34, 46, "Output"],
Cell[207042, 5347, 5162, 119, 100, "Output"]
}, Open  ]]
}, Open  ]],
Cell[212231, 5470, 1679, 44, 20, "SlideShowNavigationBar",
  CellTags->"SlideShowHeader"],

Cell[CellGroupData[{
Cell[213935, 5518, 117, 4, 80, "Section"],
Cell[214055, 5524, 147, 3, 69, "Text"],

Cell[CellGroupData[{
Cell[214227, 5531, 824, 15, 263, "Input"],
Cell[215054, 5548, 78, 1, 30, "Print"],
Cell[215135, 5551, 1178, 34, 46, "Output"],
Cell[216316, 5587, 75, 1, 30, "Print"],
Cell[216394, 5590, 1288, 36, 46, "Output"],
Cell[217685, 5628, 112, 2, 30, "Print"],
Cell[217800, 5632, 10340, 257, 244, "Output"],
Cell[228143, 5891, 114, 2, 30, "Print"],
Cell[228260, 5895, 5162, 119, 100, "Output"]
}, Open  ]]
}, Open  ]],
Cell[233449, 6018, 1679, 44, 20, "SlideShowNavigationBar",
  CellTags->"SlideShowHeader"],

Cell[CellGroupData[{
Cell[235153, 6066, 117, 4, 80, "Section"],
Cell[235273, 6072, 132, 3, 43, "Text"],

Cell[CellGroupData[{
Cell[235430, 6079, 488, 8, 194, "Input"],
Cell[235921, 6089, 91, 1, 30, "Print"],
Cell[236015, 6092, 10340, 257, 244, "Output"],
Cell[246358, 6351, 1014, 26, 33, "Print"],
Cell[247375, 6379, 20472, 443, 268, "Output"],
Cell[267850, 6824, 61, 1, 30, "Print"],
Cell[267914, 6827, 5162, 119, 100, "Output"]
}, Open  ]]
}, Open  ]],
Cell[273103, 6950, 1679, 44, 20, "SlideShowNavigationBar",
  CellTags->"SlideShowHeader"],

Cell[CellGroupData[{
Cell[274807, 6998, 117, 4, 80, "Section"],
Cell[274927, 7004, 103, 3, 43, "Text"],

Cell[CellGroupData[{
Cell[275055, 7011, 943, 17, 286, "Input"],
Cell[276001, 7030, 78, 1, 30, "Print"],
Cell[276082, 7033, 1178, 34, 46, "Output"],
Cell[277263, 7069, 75, 1, 30, "Print"],
Cell[277341, 7072, 1178, 34, 46, "Output"],
Cell[278522, 7108, 110, 2, 30, "Print"],
Cell[278635, 7112, 6172, 165, 244, "Output"],
Cell[284810, 7279, 1213, 32, 31, "Print"],
Cell[286026, 7313, 3925, 99, 100, "Output"],
Cell[289954, 7414, 87, 1, 30, "Print"],
Cell[290044, 7417, 5162, 119, 100, "Output"]
}, Open  ]]
}, Open  ]],
Cell[295233, 7540, 1679, 44, 20, "SlideShowNavigationBar",
  CellTags->"SlideShowHeader"],

Cell[CellGroupData[{
Cell[296937, 7588, 112, 4, 80, "Section"],
Cell[297052, 7594, 82, 1, 65, "EmphasisText"],
Cell[297137, 7597, 231, 4, 69, "Text"],
Cell[297371, 7603, 76, 1, 56, "Input"],

Cell[CellGroupData[{
Cell[297472, 7608, 166, 3, 102, "Input"],
Cell[297641, 7613, 1009, 30, 42, "Output"],
Cell[298653, 7645, 9111, 259, 78, "Output"],
Cell[307767, 7906, 5988, 169, 45, "Output"]
}, Open  ]],
Cell[313770, 8078, 196, 10, 43, "Text"],

Cell[CellGroupData[{
Cell[313991, 8092, 221, 3, 102, "Input"],
Cell[314215, 8097, 1598, 45, 42, "Output"],
Cell[315816, 8144, 11194, 273, 65, "Output"],
Cell[327013, 8419, 1598, 45, 42, "Output"]
}, Open  ]]
}, Open  ]],
Cell[328638, 8468, 1679, 44, 20, "SlideShowNavigationBar",
  CellTags->"SlideShowHeader"],

Cell[CellGroupData[{
Cell[330342, 8516, 112, 4, 80, "Section"],
Cell[330457, 8522, 115, 3, 43, "Text"],
Cell[330575, 8527, 89, 1, 56, "Input"],

Cell[CellGroupData[{
Cell[330689, 8532, 132, 2, 79, "Input"],
Cell[330824, 8536, 1376, 37, 65, "Output"],
Cell[332203, 8575, 557, 17, 46, "Output"]
}, Open  ]],
Cell[332775, 8595, 200, 4, 69, "Text"],

Cell[CellGroupData[{
Cell[333000, 8603, 174, 3, 79, "Input"],
Cell[333177, 8608, 902, 29, 48, "Output"]
}, Open  ]],

Cell[CellGroupData[{
Cell[334116, 8642, 191, 3, 79, "Input"],
Cell[334310, 8647, 1747, 47, 44, "Output"],
Cell[336060, 8696, 900, 24, 44, "Output"]
}, Open  ]],
Cell[336975, 8723, 89, 2, 43, "Text"],

Cell[CellGroupData[{
Cell[337089, 8729, 322, 6, 102, "Input"],
Cell[337414, 8737, 1747, 47, 44, "Output"],
Cell[339164, 8786, 900, 24, 44, "Output"]
}, Open  ]]
}, Open  ]],
Cell[340091, 8814, 1679, 44, 20, "SlideShowNavigationBar",
  CellTags->"SlideShowHeader"],

Cell[CellGroupData[{
Cell[341795, 8862, 124, 4, 80, "Section"],

Cell[CellGroupData[{
Cell[341944, 8870, 619, 11, 194, "Input"],
Cell[342566, 8883, 75, 1, 30, "Print"],
Cell[342644, 8886, 2281, 57, 65, "Output"],
Cell[344928, 8945, 62, 1, 30, "Print"],
Cell[344993, 8948, 2281, 57, 65, "Output"],
Cell[347277, 9007, 98, 2, 30, "Print"],
Cell[347378, 9011, 3778, 90, 77, "Output"]
}, Open  ]]
}, Open  ]],
Cell[351183, 9105, 1679, 44, 20, "SlideShowNavigationBar",
  CellTags->"SlideShowHeader"],

Cell[CellGroupData[{
Cell[352887, 9153, 126, 4, 80, "Section"],

Cell[CellGroupData[{
Cell[353038, 9161, 438, 9, 148, "Input"],
Cell[353479, 9172, 1117, 32, 42, "Output"],
Cell[354599, 9206, 68, 1, 30, "Print"],
Cell[354670, 9209, 1816, 51, 45, "Output"],
Cell[356489, 9262, 98, 2, 30, "Print"],
Cell[356590, 9266, 56418, 1331, 223, "Output"]
}, Open  ]]
}, Open  ]],
Cell[413035, 10601, 1679, 44, 20, "SlideShowNavigationBar",
  CellTags->"SlideShowHeader"],

Cell[CellGroupData[{
Cell[414739, 10649, 122, 4, 80, "Section"],

Cell[CellGroupData[{
Cell[414886, 10657, 810, 14, 240, "Input"],
Cell[415699, 10673, 49, 1, 41, "Output"],
Cell[415751, 10676, 888, 24, 69, "Output"],
Cell[416642, 10702, 3090, 80, 69, "Output"],
Cell[419735, 10784, 602, 17, 41, "Output"],
Cell[420340, 10803, 120, 2, 68, "Output"],
Cell[420463, 10807, 123, 2, 68, "Output"]
}, Open  ]],
Cell[420601, 10812, 416, 14, 95, "Text"]
}, Open  ]],
Cell[421032, 10829, 1679, 44, 20, "SlideShowNavigationBar",
  CellTags->"SlideShowHeader"],

Cell[CellGroupData[{
Cell[422736, 10877, 129, 4, 80, "Section"],
Cell[422868, 10883, 497, 8, 173, "Text"],

Cell[CellGroupData[{
Cell[423390, 10895, 625, 13, 173, "Input"],
Cell[424018, 10910, 1850, 46, 102, "Output"]
}, Open  ]],
Cell[425883, 10959, 191, 4, 69, "Text"],
Cell[426077, 10965, 164, 2, 79, "Input"]
}, Open  ]],
Cell[426256, 10970, 1679, 44, 20, "SlideShowNavigationBar",
  CellTags->"SlideShowHeader"],

Cell[CellGroupData[{
Cell[427960, 11018, 129, 4, 80, "Section"],
Cell[428092, 11024, 340, 7, 147, "Text"],

Cell[CellGroupData[{
Cell[428457, 11035, 339, 6, 125, "Input"],
Cell[428799, 11043, 468, 14, 66, "Output"],
Cell[429270, 11059, 2065, 55, 65, "Output"],
Cell[431338, 11116, 2966, 80, 150, "Output"]
}, Open  ]],
Cell[434319, 11199, 94, 2, 43, "Text"]
}, Open  ]],
Cell[434428, 11204, 1679, 44, 20, "SlideShowNavigationBar",
  CellTags->"SlideShowHeader"],

Cell[CellGroupData[{
Cell[436132, 11252, 129, 4, 80, "Section"],
Cell[436264, 11258, 326, 9, 69, "Text"],

Cell[CellGroupData[{
Cell[436615, 11271, 184, 3, 102, "Input"],
Cell[436802, 11276, 468, 14, 69, "Output"],
Cell[437273, 11292, 2065, 55, 68, "Output"],
Cell[439341, 11349, 1678, 45, 77, "Output"]
}, Open  ]],
Cell[441034, 11397, 80, 2, 43, "Text"],

Cell[CellGroupData[{
Cell[441139, 11403, 316, 5, 148, "Input"],
Cell[441458, 11410, 468, 14, 66, "Output"],
Cell[441929, 11426, 2065, 55, 65, "Output"],
Cell[443997, 11483, 61, 1, 42, "Output"]
}, Open  ]]
}, Open  ]],
Cell[444085, 11488, 1679, 44, 20, "SlideShowNavigationBar",
  CellTags->"SlideShowHeader"],

Cell[CellGroupData[{
Cell[445789, 11536, 120, 4, 80, "Section"],

Cell[CellGroupData[{
Cell[445934, 11544, 178, 4, 125, "Input"],
Cell[446115, 11550, 577, 17, 42, "Output"],
Cell[446695, 11569, 910, 26, 42, "Output"],
Cell[447608, 11597, 4943, 125, 72, "Output"]
}, Open  ]],
Cell[452566, 11725, 140, 3, 69, "Text"],

Cell[CellGroupData[{
Cell[452731, 11732, 203, 3, 102, "Input"],
Cell[452937, 11737, 1287, 36, 46, "Output"],
Cell[454227, 11775, 7656, 199, 46, "Output"],
Cell[461886, 11976, 104882, 2235, 416, "Output"]
}, Open  ]]
}, Open  ]],
Cell[566795, 14215, 1679, 44, 20, "SlideShowNavigationBar",
  CellTags->"SlideShowHeader"],

Cell[CellGroupData[{
Cell[568499, 14263, 108, 4, 80, "Section"],
Cell[568610, 14269, 99, 2, 65, "EmphasisText"],
Cell[568712, 14273, 116, 5, 43, "Text"],
Cell[568831, 14280, 101, 2, 79, "Input"],
Cell[568935, 14284, 291, 5, 95, "Text"],

Cell[CellGroupData[{
Cell[569251, 14293, 258, 4, 102, "Input"],
Cell[569512, 14299, 552, 15, 66, "Output"],
Cell[570067, 14316, 2187, 56, 68, "Output"],
Cell[572257, 14374, 184, 3, 51, "Message"],
Cell[572444, 14379, 42, 1, 41, "Output"]
}, Open  ]]
}, Open  ]],
Cell[572513, 14384, 1679, 44, 20, "SlideShowNavigationBar",
  CellTags->"SlideShowHeader"],

Cell[CellGroupData[{
Cell[574217, 14432, 108, 4, 80, "Section"],
Cell[574328, 14438, 96, 2, 43, "Text"],

Cell[CellGroupData[{
Cell[574449, 14444, 255, 5, 102, "Input"],
Cell[574707, 14451, 810, 23, 66, "Output"],
Cell[575520, 14476, 2438, 63, 68, "Output"],
Cell[577961, 14541, 4840, 114, 68, "Output"]
}, Open  ]],
Cell[582816, 14658, 65, 0, 43, "Text"],

Cell[CellGroupData[{
Cell[582906, 14662, 139, 3, 79, "Input"],
Cell[583048, 14667, 358, 11, 41, "Output"],
Cell[583409, 14680, 270, 8, 41, "Output"]
}, Open  ]],

Cell[CellGroupData[{
Cell[583716, 14693, 157, 3, 79, "Input"],
Cell[583876, 14698, 920, 27, 41, "Output"],
Cell[584799, 14727, 573, 17, 41, "Output"]
}, Open  ]]
}, Open  ]],
Cell[585399, 14748, 1679, 44, 20, "SlideShowNavigationBar",
  CellTags->"SlideShowHeader"],

Cell[CellGroupData[{
Cell[587103, 14796, 122, 4, 80, "Section"],

Cell[CellGroupData[{
Cell[587250, 14804, 65, 1, 56, "Input"],
Cell[587318, 14807, 68678, 1607, 883, "Print"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)



(*******************************************************************
End of Mathematica Notebook file.
*******************************************************************)

