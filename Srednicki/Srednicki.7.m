(* ::Package:: *)

(************************************************************************)
(* This file was generated automatically by the Mathematica front end.  *)
(* It contains Initialization cells from a Notebook file, which         *)
(* typically will have the same name as this file except ending in      *)
(* ".nb" instead of ".m".                                               *)
(*                                                                      *)
(* This file is intended to be loaded into the Mathematica kernel using *)
(* the package loading commands Get or Needs.  Doing so is equivalent   *)
(* to using the Evaluate Initialization Cells menu command in the front *)
(* end.                                                                 *)
(*                                                                      *)
(* DO NOT EDIT THIS FILE.  This entire file is regenerated              *)
(* automatically each time the parent Notebook file is saved in the     *)
(* Mathematica front end.  Any changes you make to this file will be    *)
(* overwritten.                                                         *)
(************************************************************************)



Needs["TensorCalculus4V6`Tensorial`"]
Needs["Quantum`Notation`"]
Needs["Combinatorica`"]
<<Local`LocalFunctions`
IntegrateSumFunctions
DotFunctions
SetQuantumAliases[]


Indices4D={0,1,2,3};
DeclareIndexFlavor[{field,Green}]
DeclareIndexFlavor[{space,Red}]
DeclareBaseIndices[Indices4D,{field,{1,2}},{space,{1,2,3}}]
DefineTensorShortcuts[{{\[CurlyPhi]},0},{{x,y,dx,\[Xi],b,r,zero,\[CurlyPhi],\[Psi],\[Psi]c,J,K,P,a,k,e,p,q,dq,dp},1},{{p,q,x,k,g,\[Delta] ,\[Sigma],zero,\[Omega],\[Omega]1,\[Omega]2,\[Omega]s,\[Omega]a,\[Eta],\[CapitalLambda],A,B,M,\[Delta]\[Omega],\[Delta]\[Alpha]},2},{{\[CapitalGamma],\[Epsilon]},3}]
labels = {x,\[Delta],g, \[CapitalGamma]};
DeclareZeroTensor[zero]
TensorLabelFormat[zero,0]

SetTensorValues[\[Delta]ud[i,j],IdentityMatrix[4]]
\[Delta]ud[i,j];
%//EinsteinArray[]//MatrixForm;
SetTensorValues[\[Eta]ud[i,j],DiagonalMatrix[{-1,1,1,1}]]
SetTensorValues[\[Eta]uu[i,j],DiagonalMatrix[{-1,1,1,1}]]
SetTensorValues[\[Eta]dd[i,j],DiagonalMatrix[{-1,1,1,1}]]
CompleteBaseIndices


MCommutator::usage = "MCommutator[A,B] calculates the commutator of matrices A and B";
MCommutator[A_,B_]:=A.B-B.A;

subInt=IntegralOp[a_List,intgA_].(IntegralOp[b_List,intgB_])->IntegralOp[xFlatten[{a,b}],intgA.intgB];

MakeBoxes[MatrixExp[x_],form:StandardForm|TraditionalForm]:=InterpretationBox[#1,#2,
SyntaxForm->Automatic,
Editable->False]& @@
    {SuperscriptBox["\[ExponentialE]",MakeBoxes[x,form]], MatrixExp[x]}



